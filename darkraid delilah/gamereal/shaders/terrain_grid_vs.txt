precision mediump float;

attribute vec3 aVertexPosition;
attribute vec3 aVertexColor;
uniform mat4 uMVPMatrix;
uniform vec4 uTileSideBias;

uniform vec3 uWorldPos;

varying vec2 bias;
varying vec3 vColor;
varying vec2 vPos;

void main(void) {
	vec2 biased_pos = (aVertexPosition.xy - uTileSideBias.zw*(aVertexPosition.xy  - uTileSideBias.xy));
	bias = biased_pos - aVertexPosition.xy;
	gl_Position = uMVPMatrix * vec4(aVertexPosition.xy + uWorldPos.xy, aVertexPosition.z + 0.02, 1.0);
	
	vColor = aVertexColor;
	vPos = aVertexPosition.xy;
}