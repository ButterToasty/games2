attribute vec3 aVertexPosition;
attribute vec3 aVertexNormal;
attribute vec2 aVertexTexCoord;

uniform vec3 uModelPos;

uniform mat4 uVPMatrix;
uniform mat4 uVMatrix;
uniform mat3 uNMatrix;

uniform mediump vec3 uLightPos;
uniform mediump vec3 uLightColor;
uniform vec3 uFillPos;
uniform mediump vec3 uFillColor;



varying vec3 vDiffuse;
varying vec3 vFill;
varying vec2 texCoord;
varying vec3 vModelPos;

uniform mat4 uShadowMVPMatrix;
varying vec3 vShadowPos;

void main(void) {
	vec3 vertpos = aVertexPosition;
	vec4 mPos =  vec4(uModelPos + vertpos,1.);
	gl_Position = uVPMatrix * mPos;
	vec3 vertNorm = aVertexNormal;
	vec3 transformedNormal = normalize(uNMatrix * vertNorm);
	vDiffuse = max(dot(transformedNormal, (uLightPos)), 0.0) *uLightColor;
	MACRO_VFILL
	texCoord = aVertexTexCoord;
	vModelPos = mPos.xyz;
	vec4 shadowClipPos = uShadowMVPMatrix * mPos;
	vShadowPos =  vec3( shadowClipPos.xyz / shadowClipPos.w)*0.5+0.5;
}
