var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.defineProperty =
  $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties
    ? Object.defineProperty
    : function (va, md, x) {
        va != Array.prototype && va != Object.prototype && (va[md] = x.value);
      };
$jscomp.getGlobal = function (va) {
  return "undefined" != typeof window && window === va
    ? va
    : "undefined" != typeof global && null != global
    ? global
    : va;
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function () {
  $jscomp.initSymbol = function () {};
  $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol);
};
$jscomp.Symbol = (function () {
  var va = 0;
  return function (md) {
    return $jscomp.SYMBOL_PREFIX + (md || "") + va++;
  };
})();
$jscomp.initSymbolIterator = function () {
  $jscomp.initSymbol();
  var va = $jscomp.global.Symbol.iterator;
  va ||
    (va = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("iterator"));
  "function" != typeof Array.prototype[va] &&
    $jscomp.defineProperty(Array.prototype, va, {
      configurable: !0,
      writable: !0,
      value: function () {
        return $jscomp.arrayIterator(this);
      },
    });
  $jscomp.initSymbolIterator = function () {};
};
$jscomp.arrayIterator = function (va) {
  var md = 0;
  return $jscomp.iteratorPrototype(function () {
    return md < va.length ? { done: !1, value: va[md++] } : { done: !0 };
  });
};
$jscomp.iteratorPrototype = function (va) {
  $jscomp.initSymbolIterator();
  va = { next: va };
  va[$jscomp.global.Symbol.iterator] = function () {
    return this;
  };
  return va;
};
$jscomp.iteratorFromArray = function (va, md) {
  $jscomp.initSymbolIterator();
  va instanceof String && (va += "");
  var x = 0,
    Qb = {
      next: function () {
        if (x < va.length) {
          var B = x++;
          return { value: md(B, va[B]), done: !1 };
        }
        Qb.next = function () {
          return { done: !0, value: void 0 };
        };
        return Qb.next();
      },
    };
  Qb[Symbol.iterator] = function () {
    return Qb;
  };
  return Qb;
};
$jscomp.polyfill = function (va, md, x, Qb) {
  if (md) {
    x = $jscomp.global;
    va = va.split(".");
    for (Qb = 0; Qb < va.length - 1; Qb++) {
      var B = va[Qb];
      B in x || (x[B] = {});
      x = x[B];
    }
    va = va[va.length - 1];
    Qb = x[va];
    md = md(Qb);
    md != Qb &&
      null != md &&
      $jscomp.defineProperty(x, va, {
        configurable: !0,
        writable: !0,
        value: md,
      });
  }
};
$jscomp.polyfill(
  "Array.prototype.keys",
  function (va) {
    return va
      ? va
      : function () {
          return $jscomp.iteratorFromArray(this, function (va) {
            return va;
          });
        };
  },
  "es6",
  "es3"
);
$jscomp.checkStringArgs = function (va, md, x) {
  if (null == va)
    throw new TypeError(
      "The 'this' value for String.prototype." +
        x +
        " must not be null or undefined"
    );
  if (md instanceof RegExp)
    throw new TypeError(
      "First argument to String.prototype." +
        x +
        " must not be a regular expression"
    );
  return va + "";
};
$jscomp.polyfill(
  "String.prototype.startsWith",
  function (va) {
    return va
      ? va
      : function (va, x) {
          var md = $jscomp.checkStringArgs(this, va, "startsWith");
          va += "";
          var B = md.length,
            p = va.length;
          x = Math.max(0, Math.min(x | 0, md.length));
          for (var M = 0; M < p && x < B; ) if (md[x++] != va[M++]) return !1;
          return M >= p;
        };
  },
  "es6",
  "es3"
);
$jscomp.polyfill(
  "Array.prototype.values",
  function (va) {
    return va
      ? va
      : function () {
          return $jscomp.iteratorFromArray(this, function (va, x) {
            return x;
          });
        };
  },
  "es6",
  "es3"
);
$jscomp.polyfill(
  "String.prototype.codePointAt",
  function (va) {
    return va
      ? va
      : function (va) {
          var x = $jscomp.checkStringArgs(this, null, "codePointAt"),
            Qb = x.length;
          va = Number(va) || 0;
          if (0 <= va && va < Qb) {
            va |= 0;
            var B = x.charCodeAt(va);
            if (55296 > B || 56319 < B || va + 1 === Qb) return B;
            va = x.charCodeAt(va + 1);
            return 56320 > va || 57343 < va
              ? B
              : 1024 * (B - 55296) + va + 9216;
          }
        };
  },
  "es6",
  "es3"
);
$jscomp.polyfill(
  "String.prototype.endsWith",
  function (va) {
    return va
      ? va
      : function (va, x) {
          var Qb = $jscomp.checkStringArgs(this, va, "endsWith");
          va += "";
          void 0 === x && (x = Qb.length);
          x = Math.max(0, Math.min(x | 0, Qb.length));
          for (var B = va.length; 0 < B && 0 < x; )
            if (Qb[--x] != va[--B]) return !1;
          return 0 >= B;
        };
  },
  "es6",
  "es3"
);
$jscomp.polyfill(
  "Array.prototype.fill",
  function (va) {
    return va
      ? va
      : function (va, x, Qb) {
          var B = this.length || 0;
          0 > x && (x = Math.max(0, B + x));
          if (null == Qb || Qb > B) Qb = B;
          Qb = Number(Qb);
          0 > Qb && (Qb = Math.max(0, B + Qb));
          for (x = Number(x || 0); x < Qb; x++) this[x] = va;
          return this;
        };
  },
  "es6",
  "es3"
);
$jscomp.polyfill(
  "String.prototype.repeat",
  function (va) {
    return va
      ? va
      : function (va) {
          var x = $jscomp.checkStringArgs(this, null, "repeat");
          if (0 > va || 1342177279 < va)
            throw new RangeError("Invalid count value");
          va |= 0;
          for (var Qb = ""; va; )
            if ((va & 1 && (Qb += x), (va >>>= 1))) x += x;
          return Qb;
        };
  },
  "es6",
  "es3"
);
(function (va, md) {
  function x(a, b) {
    function c() {}
    c.prototype = a;
    a = new c();
    for (var d in b) a[d] = b[d];
    b.toString !== Object.prototype.toString && (a.toString = b.toString);
    return a;
  }
  function Qb(a) {
    return a instanceof Array
      ? function () {
          return Q.iter(a);
        }
      : "function" == typeof a.iterator
      ? B(a, a.iterator)
      : a.iterator;
  }
  function B(a, b) {
    if (null == b) return null;
    null == b.__id__ && (b.__id__ = iu++);
    var c;
    null == a.hx__closures__
      ? (a.hx__closures__ = {})
      : (c = a.hx__closures__[b.__id__]);
    null == c &&
      ((c = function () {
        return c.method.apply(c.scope, arguments);
      }),
      (c.scope = a),
      (c.method = b),
      (a.hx__closures__[b.__id__] = c));
    return c;
  }
  va.lime = va.lime || {};
  var p = {},
    M = function () {
      return u.__string_rec(this, "");
    },
    yc = function () {};
  p.ApplicationMain = yc;
  yc.__name__ = ["ApplicationMain"];
  yc.main = function () {
    Va.am = yc;
    Va.setupTracing(!0);
    U.load();
    H.loadInputConfig();
    Va.setupTracing();
    za.__registerEntryPoint("CocoMonkey", yc.create);
    wa.get_current();
  };
  yc.reloadGame = function () {
    for (var a = 0, b = yc.reloadListeners; a < b.length; ) {
      var c = b[a];
      ++a;
      c();
    }
    m.resetStatics();
    Qd.resetStatics();
    $a.resetStatics();
    Pf.resetStatics();
    cb.resetStatics();
    Aa.resetStatics();
    wf.resetStatics();
    ue.resetStatics();
    oc.resetStatics();
    Rd.resetStatics();
    Qf.resetStatics();
    le.resetStatics();
    sb.resetStatics();
    J.resetStatics();
    $b.resetStatics();
    H.resetStatics();
    r.resetStatics();
    wa.get_current().removeChild(yc.universal);
    H.loadInputConfig();
    yc.universal = new Va();
    wa.get_current().addChild(yc.universal);
    yc.universal.preloaderComplete();
  };
  yc.create = function (a) {
    yc.app = new jl();
    xf.init(a);
    var b = yc.app.meta;
    null != t.build ? b.setReserved("build", "1") : (b.h.build = "1");
    b = yc.app.meta;
    null != t.company
      ? b.setReserved("company", "Stencyl")
      : (b.h.company = "Stencyl");
    b = yc.app.meta;
    null != t.file
      ? b.setReserved("file", "CocoMonkey")
      : (b.h.file = "CocoMonkey");
    b = yc.app.meta;
    null != t.name
      ? b.setReserved("name", "CocoMonkey")
      : (b.h.name = "CocoMonkey");
    b = yc.app.meta;
    null != t.packageName
      ? b.setReserved("packageName", "com.example.myapp")
      : (b.h.packageName = "com.example.myapp");
    b = yc.app.meta;
    null != t.version
      ? b.setReserved("version", "1.0.0")
      : (b.h.version = "1.0.0");
    b = {
      allowHighDPI: !1,
      alwaysOnTop: !1,
      borderless: !1,
      element: null,
      frameRate: 65,
      height: 400,
      hidden: !1,
      maximized: !1,
      minimized: !1,
      parameters: {},
      resizable: !1,
      title: "CocoMonkey",
      width: 640,
      x: null,
      y: null,
    };
    b.context = {
      antialiasing: U.antialias ? 2 : 0,
      background: 0,
      colorDepth: 32,
      depth: !0,
      hardware: !0,
      stencil: !0,
      type: null,
      vsync: !0,
    };
    if (null == yc.app.__window && null != a)
      for (var c = 0, d = V.fields(a); c < d.length; ) {
        var e = d[c];
        ++c;
        Object.prototype.hasOwnProperty.call(b, e)
          ? (b[e] = V.field(a, e))
          : Object.prototype.hasOwnProperty.call(b.context, e) &&
            (b.context[e] = V.field(a, e));
      }
    yc.app.createWindow(b);
    U.releaseMode ||
      wa
        .get_current()
        .get_loaderInfo()
        .uncaughtErrorEvents.addEventListener(
          "uncaughtError",
          yc.uncaughtErrorHandler
        );
    Va.initWindow(yc.app.__window);
    yc.universal = new Va();
    wa.get_current().addChild(yc.universal);
    a = new kl();
    a.onComplete.add(((Mb = yc.universal), B(Mb, Mb.preloaderComplete)));
    yc.app.__preloader.onProgress.add(B(a, a.onUpdate));
    yc.app.__preloader.onComplete.add(B(a, a.onLoaded));
    a = 0;
    for (b = xf.preloadLibraries; a < b.length; )
      (c = b[a]), ++a, yc.app.__preloader.addLibrary(c);
    a = 0;
    for (b = xf.preloadLibraryNames; a < b.length; )
      (c = b[a]), ++a, yc.app.__preloader.addLibraryName(c);
    yc.app.__preloader.load();
    yc.app.exec();
  };
  yc.uncaughtErrorHandler = function (a) {};
  var Ib = function (a, b) {
    this.r = new RegExp(a, b.split("u").join(""));
  };
  p.EReg = Ib;
  Ib.__name__ = ["EReg"];
  Ib.prototype = {
    r: null,
    match: function (a) {
      this.r.global && (this.r.lastIndex = 0);
      this.r.m = this.r.exec(a);
      this.r.s = a;
      return null != this.r.m;
    },
    matched: function (a) {
      if (null != this.r.m && 0 <= a && a < this.r.m.length) return this.r.m[a];
      throw new v("EReg::matched");
    },
    matchedRight: function () {
      if (null == this.r.m) throw new v("No string matched");
      var a = this.r.m.index + this.r.m[0].length;
      return Q.substr(this.r.s, a, this.r.s.length - a);
    },
    matchedPos: function () {
      if (null == this.r.m) throw new v("No string matched");
      return { pos: this.r.m.index, len: this.r.m[0].length };
    },
    matchSub: function (a, b, c) {
      null == c && (c = -1);
      if (this.r.global) {
        this.r.lastIndex = b;
        var d = this.r;
        b = 0 > c ? a : Q.substr(a, 0, b + c);
        this.r.m = d.exec(b);
        if ((b = null != this.r.m)) this.r.s = a;
        return b;
      }
      if ((d = this.match(0 > c ? Q.substr(a, b, null) : Q.substr(a, b, c))))
        (this.r.s = a), (this.r.m.index += b);
      return d;
    },
    split: function (a) {
      return a.replace(this.r, "#__delim__#").split("#__delim__#");
    },
    map: function (a, b) {
      for (var c = 0, d = ""; !(c >= a.length); ) {
        if (!this.matchSub(a, c)) {
          d += P.string(Q.substr(a, c, null));
          break;
        }
        var e = this.matchedPos();
        d += P.string(Q.substr(a, c, e.pos - c));
        d += P.string(b(this));
        0 == e.len
          ? ((d += P.string(Q.substr(a, e.pos, 1))), (c = e.pos + 1))
          : (c = e.pos + e.len);
        if (!this.r.global) break;
      }
      !this.r.global &&
        0 < c &&
        c < a.length &&
        (d += P.string(Q.substr(a, c, null)));
      return d;
    },
    __class__: Ib,
  };
  var Q = function () {};
  p.HxOverrides = Q;
  Q.__name__ = ["HxOverrides"];
  Q.strDate = function (a) {
    switch (a.length) {
      case 8:
        a = a.split(":");
        var b = new Date();
        b.setTime(0);
        b.setUTCHours(a[0]);
        b.setUTCMinutes(a[1]);
        b.setUTCSeconds(a[2]);
        return b;
      case 10:
        return (a = a.split("-")), new Date(a[0], a[1] - 1, a[2], 0, 0, 0);
      case 19:
        return (
          (b = a.split(" ")),
          (a = b[0].split("-")),
          (b = b[1].split(":")),
          new Date(a[0], a[1] - 1, a[2], b[0], b[1], b[2])
        );
      default:
        throw new v("Invalid date format : " + a);
    }
  };
  Q.cca = function (a, b) {
    a = a.charCodeAt(b);
    if (a == a) return a;
  };
  Q.substr = function (a, b, c) {
    if (null == c) c = a.length;
    else if (0 > c)
      if (0 == b) c = a.length + c;
      else return "";
    return a.substr(b, c);
  };
  Q.remove = function (a, b) {
    b = a.indexOf(b);
    if (-1 == b) return !1;
    a.splice(b, 1);
    return !0;
  };
  Q.iter = function (a) {
    return {
      cur: 0,
      arr: a,
      hasNext: function () {
        return this.cur < this.arr.length;
      },
      next: function () {
        return this.arr[this.cur++];
      },
    };
  };
  var ll = function (a, b) {
    this.min = a;
    this.max = b;
  };
  p.IntIterator = ll;
  ll.__name__ = ["IntIterator"];
  ll.prototype = {
    min: null,
    max: null,
    hasNext: function () {
      return this.min < this.max;
    },
    next: function () {
      return this.min++;
    },
    __class__: ll,
  };
  var zh = function () {};
  p.Lambda = zh;
  zh.__name__ = ["Lambda"];
  zh.array = function (a) {
    var b = [];
    for (a = Qb(a)(); a.hasNext(); ) {
      var c = a.next();
      b.push(c);
    }
    return b;
  };
  zh.count = function (a, b) {
    var c = 0;
    if (null == b) for (b = Qb(a)(); b.hasNext(); ) b.next(), ++c;
    else
      for (a = Qb(a)(); a.hasNext(); ) {
        var d = a.next();
        b(d) && ++c;
      }
    return c;
  };
  zh.indexOf = function (a, b) {
    var c = 0;
    for (a = Qb(a)(); a.hasNext(); ) {
      var d = a.next();
      if (b == d) return c;
      ++c;
    }
    return -1;
  };
  var yf = function () {
    this.length = 0;
  };
  p.List = yf;
  yf.__name__ = ["List"];
  yf.prototype = {
    h: null,
    q: null,
    length: null,
    add: function (a) {
      a = new ml(a, null);
      null == this.h ? (this.h = a) : (this.q.next = a);
      this.q = a;
      this.length++;
    },
    push: function (a) {
      this.h = a = new ml(a, this.h);
      null == this.q && (this.q = a);
      this.length++;
    },
    pop: function () {
      if (null == this.h) return null;
      var a = this.h.item;
      this.h = this.h.next;
      null == this.h && (this.q = null);
      this.length--;
      return a;
    },
    clear: function () {
      this.q = this.h = null;
      this.length = 0;
    },
    remove: function (a) {
      for (var b = null, c = this.h; null != c; ) {
        if (c.item == a)
          return (
            null == b ? (this.h = c.next) : (b.next = c.next),
            this.q == c && (this.q = b),
            this.length--,
            !0
          );
        b = c;
        c = c.next;
      }
      return !1;
    },
    iterator: function () {
      return new Co(this.h);
    },
    __class__: yf,
  };
  var ml = function (a, b) {
    this.item = a;
    this.next = b;
  };
  p["_List.ListNode"] = ml;
  ml.__name__ = ["_List", "ListNode"];
  ml.prototype = { item: null, next: null, __class__: ml };
  var Co = function (a) {
    this.head = a;
  };
  p["_List.ListIterator"] = Co;
  Co.__name__ = ["_List", "ListIterator"];
  Co.prototype = {
    head: null,
    hasNext: function () {
      return null != this.head;
    },
    next: function () {
      var a = this.head.item;
      this.head = this.head.next;
      return a;
    },
    __class__: Co,
  };
  var xf = function () {};
  p.ManifestResources = xf;
  xf.__name__ = ["ManifestResources"];
  xf.init = function (a) {
    xf.preloadLibraries = [];
    xf.preloadLibraryNames = [];
    xf.rootPath = null;
    null != a &&
      Object.prototype.hasOwnProperty.call(a, "rootPath") &&
      (xf.rootPath = V.field(a, "rootPath"));
    null == xf.rootPath && (xf.rootPath = "");
    ka.defaultRootPath = xf.rootPath;
    a = Zc.parse(
      '{"name":null,"assets":"aoy4:pathy44:assets%2Fgraphics%2F1x%2Fbackground-67-0.pngy4:sizei11125y4:typey5:IMAGEy2:idR1y7:preloadtgoR0y37:assets%2Fgraphics%2F1x%2Ffont-127.fntR2i10954R3y4:TEXTR5R7R6tgoR0y37:assets%2Fgraphics%2F1x%2Ffont-127.pngR2i7490R3R4R5R9R6tgoR0y37:assets%2Fgraphics%2F1x%2Ffont-128.fntR2i10954R3R8R5R10R6tgoR0y37:assets%2Fgraphics%2F1x%2Ffont-128.pngR2i8079R3R4R5R11R6tgoR0y36:assets%2Fgraphics%2F1x%2Ffont-55.fntR2i10728R3R8R5R12R6tgoR0y36:assets%2Fgraphics%2F1x%2Ffont-55.pngR2i3287R3R4R5R13R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-10-0.pngR2i351R3R4R5R14R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-10-1.pngR2i405R3R4R5R15R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-10-2.pngR2i412R3R4R5R16R6tgoR0y41:assets%2Fgraphics%2F1x%2Fsprite-101-0.pngR2i890R3R4R5R17R6tgoR0y41:assets%2Fgraphics%2F1x%2Fsprite-110-0.pngR2i5164R3R4R5R18R6tgoR0y41:assets%2Fgraphics%2F1x%2Fsprite-114-0.pngR2i1479R3R4R5R19R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-12-0.pngR2i1277R3R4R5R20R6tgoR0y41:assets%2Fgraphics%2F1x%2Fsprite-126-0.pngR2i731R3R4R5R21R6tgoR0y41:assets%2Fgraphics%2F1x%2Fsprite-126-1.pngR2i740R3R4R5R22R6tgoR0y41:assets%2Fgraphics%2F1x%2Fsprite-126-2.pngR2i735R3R4R5R23R6tgoR0y41:assets%2Fgraphics%2F1x%2Fsprite-126-3.pngR2i585R3R4R5R24R6tgoR0y41:assets%2Fgraphics%2F1x%2Fsprite-130-0.pngR2i948R3R4R5R25R6tgoR0y41:assets%2Fgraphics%2F1x%2Fsprite-130-1.pngR2i839R3R4R5R26R6tgoR0y41:assets%2Fgraphics%2F1x%2Fsprite-130-2.pngR2i558R3R4R5R27R6tgoR0y41:assets%2Fgraphics%2F1x%2Fsprite-132-0.pngR2i252R3R4R5R28R6tgoR0y41:assets%2Fgraphics%2F1x%2Fsprite-134-0.pngR2i276R3R4R5R29R6tgoR0y41:assets%2Fgraphics%2F1x%2Fsprite-138-2.pngR2i649R3R4R5R30R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-14-0.pngR2i112R3R4R5R31R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-14-1.pngR2i146R3R4R5R32R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-14-2.pngR2i98R3R4R5R33R6tgoR0y41:assets%2Fgraphics%2F1x%2Fsprite-140-0.pngR2i735R3R4R5R34R6tgoR0y41:assets%2Fgraphics%2F1x%2Fsprite-142-0.pngR2i31663R3R4R5R35R6tgoR0y41:assets%2Fgraphics%2F1x%2Fsprite-144-0.pngR2i1746R3R4R5R36R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-16-0.pngR2i735R3R4R5R37R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-16-1.pngR2i907R3R4R5R38R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-16-2.pngR2i735R3R4R5R39R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-18-0.pngR2i735R3R4R5R40R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-18-1.pngR2i735R3R4R5R41R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-18-2.pngR2i735R3R4R5R42R6tgoR0y39:assets%2Fgraphics%2F1x%2Fsprite-2-0.pngR2i890R3R4R5R43R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-20-0.pngR2i649R3R4R5R44R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-20-1.pngR2i649R3R4R5R45R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-20-2.pngR2i649R3R4R5R46R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-22-0.pngR2i649R3R4R5R47R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-24-0.pngR2i1613R3R4R5R48R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-24-1.pngR2i1613R3R4R5R49R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-26-0.pngR2i960R3R4R5R50R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-28-0.pngR2i2107R3R4R5R51R6tgoR0y39:assets%2Fgraphics%2F1x%2Fsprite-4-0.pngR2i2183R3R4R5R52R6tgoR0y39:assets%2Fgraphics%2F1x%2Fsprite-4-1.pngR2i4155R3R4R5R53R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-4-10.pngR2i7184R3R4R5R54R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-4-11.pngR2i2063R3R4R5R55R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-4-12.pngR2i2063R3R4R5R56R6tgoR0y39:assets%2Fgraphics%2F1x%2Fsprite-4-2.pngR2i2186R3R4R5R57R6tgoR0y39:assets%2Fgraphics%2F1x%2Fsprite-4-3.pngR2i4173R3R4R5R58R6tgoR0y39:assets%2Fgraphics%2F1x%2Fsprite-4-4.pngR2i2883R3R4R5R59R6tgoR0y39:assets%2Fgraphics%2F1x%2Fsprite-4-5.pngR2i2889R3R4R5R60R6tgoR0y39:assets%2Fgraphics%2F1x%2Fsprite-4-6.pngR2i2045R3R4R5R61R6tgoR0y39:assets%2Fgraphics%2F1x%2Fsprite-4-7.pngR2i2042R3R4R5R62R6tgoR0y39:assets%2Fgraphics%2F1x%2Fsprite-4-8.pngR2i2032R3R4R5R63R6tgoR0y39:assets%2Fgraphics%2F1x%2Fsprite-4-9.pngR2i2036R3R4R5R64R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-43-0.pngR2i83R3R4R5R65R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-47-0.pngR2i3110R3R4R5R66R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-57-0.pngR2i5195R3R4R5R67R6tgoR0y39:assets%2Fgraphics%2F1x%2Fsprite-6-0.pngR2i173R3R4R5R68R6tgoR0y39:assets%2Fgraphics%2F1x%2Fsprite-6-1.pngR2i259R3R4R5R69R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-60-0.pngR2i1036R3R4R5R70R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-62-0.pngR2i2054R3R4R5R71R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-69-0.pngR2i2853R3R4R5R72R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-73-0.pngR2i826R3R4R5R73R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-75-0.pngR2i1862R3R4R5R74R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-77-0.pngR2i2062R3R4R5R75R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-79-0.pngR2i2506R3R4R5R76R6tgoR0y39:assets%2Fgraphics%2F1x%2Fsprite-8-0.pngR2i1011R3R4R5R77R6tgoR0y39:assets%2Fgraphics%2F1x%2Fsprite-8-1.pngR2i1203R3R4R5R78R6tgoR0y39:assets%2Fgraphics%2F1x%2Fsprite-8-2.pngR2i1011R3R4R5R79R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-83-0.pngR2i3611R3R4R5R80R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-86-0.pngR2i38453R3R4R5R81R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-89-0.pngR2i11040R3R4R5R82R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-91-0.pngR2i9629R3R4R5R83R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-93-0.pngR2i7184R3R4R5R84R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-95-0.pngR2i906R3R4R5R85R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-97-0.pngR2i230R3R4R5R86R6tgoR0y40:assets%2Fgraphics%2F1x%2Fsprite-99-0.pngR2i1626R3R4R5R87R6tgoR0y38:assets%2Fgraphics%2F1x%2Ftileset-0.pngR2i1866R3R4R5R88R6tgoR0y42:assets%2Fgraphics%2F1x%2Ftileset-104-0.pngR2i202R3R4R5R89R6tgoR0y42:assets%2Fgraphics%2F1x%2Ftileset-104-1.pngR2i239R3R4R5R90R6tgoR0y42:assets%2Fgraphics%2F1x%2Ftileset-104-2.pngR2i208R3R4R5R91R6tgoR0y42:assets%2Fgraphics%2F1x%2Ftileset-104-3.pngR2i239R3R4R5R92R6tgoR0y40:assets%2Fgraphics%2F1x%2Ftileset-104.pngR2i286R3R4R5R93R6tgoR0y36:assets%2Fgraphics%2Fdefault-font.fntR2i10791R3R8R5R94R6tgoR0y36:assets%2Fgraphics%2Fdefault-font.pngR2i1736R3R4R5R95R6tgoR2i326843R3y5:MUSICR5y29:assets%2Fmusic%2Fsound-63.mp3y9:pathGroupaR97y29:assets%2Fmusic%2Fsound-63.ogghR6tgoR2i212817R3R96R5R99R98aR97R99hgoR2i96547R3y5:SOUNDR5y28:assets%2Fsfx%2Fsound-102.mp3R98aR101y28:assets%2Fsfx%2Fsound-102.ogghR6tgoR2i101981R3R100R5y28:assets%2Fsfx%2Fsound-103.mp3R98aR103y28:assets%2Fsfx%2Fsound-103.ogghR6tgoR2i80247R3R100R5y28:assets%2Fsfx%2Fsound-105.mp3R98aR105y28:assets%2Fsfx%2Fsound-105.ogghR6tgoR2i57259R3R100R5y28:assets%2Fsfx%2Fsound-106.mp3R98aR107y28:assets%2Fsfx%2Fsound-106.ogghR6tgoR2i63946R3R100R5y28:assets%2Fsfx%2Fsound-107.mp3R98aR109y28:assets%2Fsfx%2Fsound-107.ogghR6tgoR2i101981R3R100R5y28:assets%2Fsfx%2Fsound-108.mp3R98aR111y28:assets%2Fsfx%2Fsound-108.ogghR6tgoR2i60603R3R100R5y28:assets%2Fsfx%2Fsound-111.mp3R98aR113y28:assets%2Fsfx%2Fsound-111.ogghR6tgoR2i203963R3R100R5y28:assets%2Fsfx%2Fsound-112.mp3R98aR115y28:assets%2Fsfx%2Fsound-112.ogghR6tgoR2i3368R3R100R5y28:assets%2Fsfx%2Fsound-135.mp3R98aR117y28:assets%2Fsfx%2Fsound-135.ogghR6tgoR2i4596R3R100R5y28:assets%2Fsfx%2Fsound-136.mp3R98aR119y28:assets%2Fsfx%2Fsound-136.ogghR6tgoR2i5877R3R100R5y27:assets%2Fsfx%2Fsound-29.mp3R98aR121y27:assets%2Fsfx%2Fsound-29.ogghR6tgoR2i6243R3R100R5y27:assets%2Fsfx%2Fsound-30.mp3R98aR123y27:assets%2Fsfx%2Fsound-30.ogghR6tgoR2i10997R3R100R5y27:assets%2Fsfx%2Fsound-31.mp3R98aR125y27:assets%2Fsfx%2Fsound-31.ogghR6tgoR2i8437R3R100R5y27:assets%2Fsfx%2Fsound-32.mp3R98aR127y27:assets%2Fsfx%2Fsound-32.ogghR6tgoR2i3683R3R100R5y27:assets%2Fsfx%2Fsound-33.mp3R98aR129y27:assets%2Fsfx%2Fsound-33.ogghR6tgoR2i3317R3R100R5y27:assets%2Fsfx%2Fsound-34.mp3R98aR131y27:assets%2Fsfx%2Fsound-34.ogghR6tgoR2i10997R3R100R5y27:assets%2Fsfx%2Fsound-35.mp3R98aR133y27:assets%2Fsfx%2Fsound-35.ogghR6tgoR2i4049R3R100R5y27:assets%2Fsfx%2Fsound-36.mp3R98aR135y27:assets%2Fsfx%2Fsound-36.ogghR6tgoR2i3683R3R100R5y27:assets%2Fsfx%2Fsound-37.mp3R98aR137y27:assets%2Fsfx%2Fsound-37.ogghR6tgoR2i2220R3R100R5y27:assets%2Fsfx%2Fsound-38.mp3R98aR139y27:assets%2Fsfx%2Fsound-38.ogghR6tgoR2i2586R3R100R5y27:assets%2Fsfx%2Fsound-39.mp3R98aR141y27:assets%2Fsfx%2Fsound-39.ogghR6tgoR2i2586R3R100R5y27:assets%2Fsfx%2Fsound-40.mp3R98aR143y27:assets%2Fsfx%2Fsound-40.ogghR6tgoR2i12119R3R100R5y27:assets%2Fsfx%2Fsound-41.mp3R98aR145y27:assets%2Fsfx%2Fsound-41.ogghR6tgoR2i24240R3R100R5y27:assets%2Fsfx%2Fsound-44.mp3R98aR147y27:assets%2Fsfx%2Fsound-44.ogghR6tgoR2i86016R3R100R5y27:assets%2Fsfx%2Fsound-45.mp3R98aR149y27:assets%2Fsfx%2Fsound-45.ogghR6tgoR2i2088R3R100R5y27:assets%2Fsfx%2Fsound-58.mp3R98aR151y27:assets%2Fsfx%2Fsound-58.ogghR6tgoR2i241997R3R100R5y27:assets%2Fsfx%2Fsound-64.mp3R98aR153y27:assets%2Fsfx%2Fsound-64.ogghR6tgoR2i99891R3R100R5y27:assets%2Fsfx%2Fsound-65.mp3R98aR155y27:assets%2Fsfx%2Fsound-65.ogghR6tgoR2i31346R3R100R5y27:assets%2Fsfx%2Fsound-66.mp3R98aR157y27:assets%2Fsfx%2Fsound-66.ogghR6tgoR2i96965R3R100R5y27:assets%2Fsfx%2Fsound-80.mp3R98aR159y27:assets%2Fsfx%2Fsound-80.ogghR6tgoR2i48482R3R100R5y27:assets%2Fsfx%2Fsound-81.mp3R98aR161y27:assets%2Fsfx%2Fsound-81.ogghR6tgoR2i99473R3R100R5y27:assets%2Fsfx%2Fsound-84.mp3R98aR163y27:assets%2Fsfx%2Fsound-84.ogghR6tgoR2i34271R3R100R5y27:assets%2Fsfx%2Fsound-87.mp3R98aR165y27:assets%2Fsfx%2Fsound-87.ogghR6tgoR2i54087R3R100R5R102R98aR101R102hgoR2i51659R3R100R5R104R98aR103R104hgoR2i42898R3R100R5R106R98aR105R106hgoR2i34330R3R100R5R108R98aR107R108hgoR2i35185R3R100R5R110R98aR109R110hgoR2i58113R3R100R5R112R98aR111R112hgoR2i36359R3R100R5R114R98aR113R114hgoR2i98678R3R100R5R116R98aR115R116hgoR2i5333R3R100R5R118R98aR117R118hgoR2i5540R3R100R5R120R98aR119R120hgoR2i12524R3R100R5R122R98aR121R122hgoR2i13016R3R100R5R124R98aR123R124hgoR2i19405R3R100R5R126R98aR125R126hgoR2i15249R3R100R5R128R98aR127R128hgoR2i9443R3R100R5R130R98aR129R130hgoR2i9060R3R100R5R132R98aR131R132hgoR2i19447R3R100R5R134R98aR133R134hgoR2i7660R3R100R5R136R98aR135R136hgoR2i6648R3R100R5R138R98aR137R138hgoR2i5563R3R100R5R140R98aR139R140hgoR2i6363R3R100R5R142R98aR141R142hgoR2i5925R3R100R5R144R98aR143R144hgoR2i7541R3R100R5R146R98aR145R146hgoR2i9683R3R100R5R148R98aR147R148hgoR2i16548R3R100R5R150R98aR149R150hgoR2i5102R3R100R5R152R98aR151R152hgoR2i150395R3R100R5R154R98aR153R154hgoR2i49432R3R100R5R156R98aR155R156hgoR2i16142R3R100R5R158R98aR157R158hgoR2i46144R3R100R5R160R98aR159R160hgoR2i30365R3R100R5R162R98aR161R162hgoR2i50567R3R100R5R164R98aR163R164hgoR2i37850R3R100R5R166R98aR165R166hgoR0y29:assets%2Fdata%2Fbehaviors.mbsR2i30677R3y6:BINARYR5R167R6tgoR0y24:assets%2Fdata%2Fgame.mbsR2i2313R3R168R5R169R6tgoR0y34:assets%2Fdata%2Finner-joystick.pngR2i879R3R4R5R170R6tgoR0y41:assets%2Fdata%2Finner-joystick%401.5x.pngR2i1792R3R4R5R171R6tgoR0y39:assets%2Fdata%2Finner-joystick%402x.pngR2i1946R3R4R5R172R6tgoR0y39:assets%2Fdata%2Finner-joystick%403x.pngR2i3990R3R4R5R173R6tgoR0y39:assets%2Fdata%2Finner-joystick%404x.pngR2i4344R3R4R5R174R6tgoR0y34:assets%2Fdata%2Fouter-joystick.pngR2i1951R3R4R5R175R6tgoR0y41:assets%2Fdata%2Fouter-joystick%401.5x.pngR2i4023R3R4R5R176R6tgoR0y39:assets%2Fdata%2Fouter-joystick%402x.pngR2i4480R3R4R5R177R6tgoR0y39:assets%2Fdata%2Fouter-joystick%403x.pngR2i9183R3R4R5R178R6tgoR0y39:assets%2Fdata%2Fouter-joystick%404x.pngR2i9836R3R4R5R179R6tgoR0y29:assets%2Fdata%2Fresources.mbsR2i34825R3R168R5R180R6tgoR0y27:assets%2Fdata%2Fscene-0.mbsR2i2140R3R168R5R181R6tgoR0y27:assets%2Fdata%2Fscene-0.scnR2i501R3R168R5R182R6tgoR0y27:assets%2Fdata%2Fscene-1.mbsR2i1716R3R168R5R183R6tgoR0y27:assets%2Fdata%2Fscene-1.scnR2i557R3R168R5R184R6tgoR0y28:assets%2Fdata%2Fscene-10.mbsR2i2072R3R168R5R185R6tgoR0y28:assets%2Fdata%2Fscene-10.scnR2i781R3R168R5R186R6tgoR0y28:assets%2Fdata%2Fscene-11.mbsR2i2113R3R168R5R187R6tgoR0y28:assets%2Fdata%2Fscene-11.scnR2i965R3R168R5R188R6tgoR0y28:assets%2Fdata%2Fscene-12.mbsR2i3080R3R168R5R189R6tgoR0y28:assets%2Fdata%2Fscene-12.scnR2i845R3R168R5R190R6tgoR0y28:assets%2Fdata%2Fscene-13.mbsR2i2838R3R168R5R191R6tgoR0y28:assets%2Fdata%2Fscene-13.scnR2i1013R3R168R5R192R6tgoR0y28:assets%2Fdata%2Fscene-14.mbsR2i2056R3R168R5R193R6tgoR0y28:assets%2Fdata%2Fscene-14.scnR2i1493R3R168R5R194R6tgoR0y28:assets%2Fdata%2Fscene-15.mbsR2i3238R3R168R5R195R6tgoR0y28:assets%2Fdata%2Fscene-15.scnR2i1157R3R168R5R196R6tgoR0y28:assets%2Fdata%2Fscene-16.mbsR2i2213R3R168R5R197R6tgoR0y28:assets%2Fdata%2Fscene-16.scnR2i885R3R168R5R198R6tgoR0y28:assets%2Fdata%2Fscene-17.mbsR2i3395R3R168R5R199R6tgoR0y28:assets%2Fdata%2Fscene-17.scnR2i1317R3R168R5R200R6tgoR0y27:assets%2Fdata%2Fscene-2.mbsR2i1913R3R168R5R201R6tgoR0y27:assets%2Fdata%2Fscene-2.scnR2i837R3R168R5R202R6tgoR0y27:assets%2Fdata%2Fscene-3.mbsR2i1565R3R168R5R203R6tgoR0y27:assets%2Fdata%2Fscene-3.scnR2i765R3R168R5R204R6tgoR0y27:assets%2Fdata%2Fscene-4.mbsR2i1690R3R168R5R205R6tgoR0y27:assets%2Fdata%2Fscene-4.scnR2i933R3R168R5R206R6tgoR0y27:assets%2Fdata%2Fscene-5.mbsR2i501R3R168R5R207R6tgoR0y27:assets%2Fdata%2Fscene-5.scnR2i13R3R168R5R208R6tgoR0y27:assets%2Fdata%2Fscene-6.mbsR2i669R3R168R5R209R6tgoR0y27:assets%2Fdata%2Fscene-6.scnR2i25R3R168R5R210R6tgoR0y27:assets%2Fdata%2Fscene-7.mbsR2i1610R3R168R5R211R6tgoR0y27:assets%2Fdata%2Fscene-7.scnR2i605R3R168R5R212R6tgoR0y27:assets%2Fdata%2Fscene-8.mbsR2i2212R3R168R5R213R6tgoR0y27:assets%2Fdata%2Fscene-8.scnR2i1085R3R168R5R214R6tgoR0y27:assets%2Fdata%2Fscene-9.mbsR2i2560R3R168R5R215R6tgoR0y27:assets%2Fdata%2Fscene-9.scnR2i1085R3R168R5R216R6tgoR0y26:assets%2Fdata%2Fscenes.mbsR2i598R3R168R5R217R6tgh","rootPath":null,"version":2,"libraryArgs":[],"libraryType":null}',
      xf.rootPath
    );
    a = ac.fromManifest(a);
    ka.registerLibrary("default", a);
    a = ka.getLibrary("default");
    null != a
      ? xf.preloadLibraries.push(a)
      : xf.preloadLibraryNames.push("default");
  };
  Math.__name__ = ["Math"];
  var La = function () {};
  p.PositioningUtils = La;
  La.__name__ = ["PositioningUtils"];
  La.scaledCoord = function (a, b, c) {
    var d = !1,
      e = 0;
    switch (a) {
      case "x-left":
        e = 0;
        break;
      case "x-middle":
        e = La.scaledSize("halfwidth", c);
        break;
      case "x-right":
        e = La.scaledSize("width", c);
        break;
      case "y-bottom":
        d = !0;
        e = La.scaledSize("height", c);
        break;
      case "y-middle":
        d = !0;
        e = La.scaledSize("halfheight", c);
        break;
      case "y-top":
        d = !0;
    }
    return "scene" == b && 0 == d
      ? La.offset(c.getX(), "xRelative", c) + e
      : "scene" == b && 1 == d
      ? La.offset(c.getY(), "yRelative", c) + e
      : "screen" == b && 0 == d
      ? La.offset(c.getScreenX(), "xRelative", c) + e
      : La.offset(c.getScreenY(), "yRelative", c) + e;
  };
  La.offset = function (a, b, c) {
    switch (b) {
      case "xRelative":
        return (c.realScaleX - 1) * -c.currOrigin.x + a;
      case "yAbsolute":
        return c.getY() - ((c.realScaleY - 1) * -c.currOrigin.y + a);
      case "yRelative":
        return (c.realScaleY - 1) * -c.currOrigin.y + a;
      default:
        return c.getX() - ((c.realScaleX - 1) * -c.currOrigin.x + a);
    }
  };
  La.scale = function (a, b, c) {
    b /= 100;
    switch (a) {
      case "height":
        c.realScaleY = b;
        break;
      case "width":
        c.realScaleX = b;
        break;
      default:
        (c.realScaleX = b), (c.realScaleY = b);
    }
  };
  La.setScale = function (a, b, c, d) {
    switch (c) {
      case "height":
        b.realScaleY = a / b.getHeight();
        d && (b.realScaleX = b.realScaleY * (b.getWidth() / b.getHeight()));
        break;
      case "width":
        (b.realScaleX = a / b.getWidth()),
          d && (b.realScaleY = b.realScaleX * (b.getHeight() / b.getWidth()));
    }
  };
  La.scaledSize = function (a, b) {
    switch (a) {
      case "halfheight":
        return (b.getHeight() * b.realScaleY) / 2;
      case "halfwidth":
        return (b.getWidth() * b.realScaleX) / 2;
      case "height":
        return b.getHeight() * b.realScaleY;
      default:
        return b.getWidth() * b.realScaleX;
    }
  };
  La.isScaled = function (a) {
    return 1 == a.realScaleX ? 1 != a.realScaleY : !0;
  };
  La.setRealSize = function (a, b, c) {
    var d = (c.currOrigin.x * a) / c.get_width(),
      e = (c.currOrigin.y * b) / c.get_height();
    c.realScaleX = 1;
    c.realScaleY = 1;
    c.set_width(a);
    c.set_height(b);
    c.cacheWidth = a / r.SCALE;
    c.cacheHeight = b / r.SCALE;
    c.realX += c.currOrigin.x;
    c.realY += c.currOrigin.y;
    c.drawX += c.currOrigin.x;
    c.drawY += c.currOrigin.y;
    c.currOrigin.x = d;
    c.currOrigin.y = e;
  };
  La.setHeightAndWidth = function (a, b, c, d, e) {
    var f = e.currOrigin.x | 0,
      g = e.currOrigin.y | 0;
    e.setOriginPoint((e.getWidth() / 2) | 0, (e.getHeight() / 2) | 0);
    "top" == d
      ? e.setX(e.getX() + (b - e.getWidth()) / 2)
      : "bottom" == d && e.setX(e.getX() - (b - e.getWidth()) / 2);
    "left" == c
      ? e.setY(e.getY() + (a - e.getHeight()) / 2)
      : "right" == c && e.setY(e.getY() - (a - e.getHeight()) / 2);
    La.setScale(b, e, "width", !1);
    La.setScale(a, e, "height", !1);
    e.setOriginPoint(f, g);
  };
  La.fitActorInRectangle = function (a, b, c, d, e, f) {
    f = e.currOrigin.x | 0;
    var g = e.currOrigin.y | 0;
    e.setOriginPoint((e.getWidth() / 2) | 0, (e.getHeight() / 2) | 0);
    var h = La.scaledSize("height", e),
      n = La.scaledSize("width", e);
    La.scaledSize("height", e) > La.scaledSize("width", e)
      ? La.setScale(a, e, "height", !0)
      : La.setScale(b, e, "width", !0);
    "left" == d
      ? e.setX(e.getX() + (La.scaledSize("width", e) - n) / 2)
      : "right" == d && e.setX(e.getX() - (La.scaledSize("width", e) - n) / 2);
    "top" == c
      ? e.setY(e.getY() + (La.scaledSize("height", e) - h) / 2)
      : "bottom" == c &&
        e.setY(e.getY() + (La.scaledSize("height", e) - h) / 2);
    e.setOriginPoint(f, g);
  };
  La.setPixSizeForImgInst = function (a, b, c, d) {
    var e = d.get_width() / r.SCALE,
      f = d.get_height() / r.SCALE;
    switch (a) {
      case "height":
        d.set_scaleY(b / f);
        c && d.set_scaleX(d.get_scaleY() * (e / f));
        break;
      case "width":
        d.set_scaleX(b / e), c && d.set_scaleY(d.get_scaleX() * (f / e));
    }
  };
  La.getPixHeightForImgInst = function (a, b) {
    return "height" == a
      ? b.get_scaleY() * b.get_height()
      : b.get_scaleX() * b.get_width();
  };
  La.fitImgInstInRectangle = function (a, b, c, d, e) {
    c = La.getPixHeightForImgInst("height", e);
    d = La.getPixHeightForImgInst("height", e);
    c > d
      ? La.setPixSizeForImgInst("height", a, !0, e)
      : La.setPixSizeForImgInst("width", b, !0, e);
  };
  La.xForActor = function (a, b, c, d, e) {
    a =
      1 == c
        ? m.getScreenX() + r.screenWidth - a
        : 0 == c
        ? m.getScreenX() + r.screenWidth / 2 + a
        : m.getScreenX() + a;
    c = b ? La.scaledSize("width", e) : e.get_width();
    1 == d && (a -= c);
    0 == d && (a -= c / 2);
    return b ? a - La.offset(m.getScreenX(), "xRelative", e) : a;
  };
  La.yForActor = function (a, b, c, d, e) {
    a =
      1 == c
        ? m.getScreenY() + r.screenHeight - a
        : 0 == c
        ? m.getScreenY() + r.screenHeight / 2 + a
        : m.getScreenY() + a;
    c = b ? La.scaledSize("height", e) : e.get_height();
    1 == d && (a -= c);
    0 == d && (a -= c / 2);
    return b ? a - La.offset(m.getScreenY(), "yRelative", e) : a;
  };
  La.setXActor = function (a, b, c, d, e) {
    e.setX(La.xForActor(a, b, c, d, e));
  };
  La.setYActor = function (a, b, c, d, e) {
    e.setY(La.yForActor(a, b, c, d, e));
  };
  La.setXActorFromActor = function (a, b, c, d, e, f, g, h) {
    g
      ? ((g = La.scaledSize("width", e)),
        (e = La.scaledCoord("x-left", "scene", e)))
      : ((g = e.get_width()), (e = e.getX()));
    f = 1 == f ? e + g + a : 0 == f ? e + g / 2 + a : e + a;
    h && (f -= a);
    La.setXActor(f, b, -1, c, d);
  };
  La.setYActorFromActor = function (a, b, c, d, e, f, g, h) {
    if (g) {
      g = La.scaledSize("height", e);
      var n = La.scaledCoord("y-top", "scene", e);
    } else (g = e.get_height()), (n = e.getY());
    a = 1 == f ? n + g + a : 0 == f ? n + g / 2 + a : n + a;
    h && (a = e.getY() + g - a);
    La.setYActor(a, b, -1, c, d);
  };
  La.setScaledCoord = function (a, b, c) {
    a
      ? c.setX(b - La.offset(m.getScreenX(), "xRelative", c))
      : c.setY(b - La.offset(m.getScreenY(), "yRelative", c));
  };
  La.setOriginPoint = function (a, b, c) {
    c.setOriginPoint(a | 0, b | 0);
  };
  La.getSizeActorType = function (a, b) {
    b = u.__cast($b.get().resources.get(b.spriteID), ii);
    return a ? b.get_width() : b.get_height();
  };
  La.isActorInsideActor = function (a, b, c) {
    null == c && (c = 100);
    var d = La.scaledCoord("x-left", "scene", a),
      e = La.scaledCoord("y-top", "scene", a),
      f = La.scaledCoord("x-right", "scene", a),
      g = La.scaledCoord("y-bottom", "scene", a),
      h = La.scaledCoord("x-left", "scene", b),
      n = La.scaledCoord("y-top", "scene", b),
      k = La.scaledCoord("x-right", "scene", b);
    b = La.scaledCoord("y-bottom", "scene", b);
    return ((Math.max(0, Math.min(f, k) - Math.max(d, h)) *
      Math.max(0, Math.min(g, b) - Math.max(e, n))) /
      (La.scaledSize("width", a) * La.scaledSize("height", a))) *
      100 >=
      c
      ? !0
      : !1;
  };
  La.destroyActor = function (a, b) {
    b.removeActor(a);
  };
  La.createActorFromImgInst = function (a, b, c, d) {
    m.createActor(d, b, c, 0);
    La.setRealSize(
      a.get_width() / r.SCALE,
      a.get_height() / r.SCALE,
      m.getLastCreatedActor()
    );
    m.attachImageToActor(a, m.getLastCreatedActor(), 0, 0, 1);
    m.getLastCreatedActor().disableActorDrawing();
    m.getLastCreatedActor().setX(b);
    m.getLastCreatedActor().setY(c);
  };
  var V = function () {};
  p.Reflect = V;
  V.__name__ = ["Reflect"];
  V.field = function (a, b) {
    try {
      return a[b];
    } catch (c) {
      return (X.lastException = c), null;
    }
  };
  V.getProperty = function (a, b) {
    var c;
    if (null == a) return null;
    var d = a.__properties__ ? (c = a.__properties__["get_" + b]) : !1;
    return d ? a[c]() : a[b];
  };
  V.setProperty = function (a, b, c) {
    var d;
    var e = a.__properties__ ? (d = a.__properties__["set_" + b]) : !1;
    if (e) a[d](c);
    else a[b] = c;
  };
  V.fields = function (a) {
    var b = [];
    if (null != a) {
      var c = Object.prototype.hasOwnProperty,
        d;
      for (d in a)
        "__id__" != d && "hx__closures__" != d && c.call(a, d) && b.push(d);
    }
    return b;
  };
  V.isFunction = function (a) {
    return "function" == typeof a ? !(a.__name__ || a.__ename__) : !1;
  };
  V.compare = function (a, b) {
    return a == b ? 0 : a > b ? 1 : -1;
  };
  V.compareMethods = function (a, b) {
    return a == b
      ? !0
      : V.isFunction(a) && V.isFunction(b)
      ? a.scope == b.scope && a.method == b.method
        ? null != a.method
        : !1
      : !1;
  };
  V.isObject = function (a) {
    if (null == a) return !1;
    var b = typeof a;
    return "string" == b || ("object" == b && null == a.__enum__)
      ? !0
      : "function" == b
      ? null != (a.__name__ || a.__ename__)
      : !1;
  };
  V.isEnumValue = function (a) {
    return null != a ? null != a.__enum__ : !1;
  };
  V.deleteField = function (a, b) {
    if (!Object.prototype.hasOwnProperty.call(a, b)) return !1;
    delete a[b];
    return !0;
  };
  V.makeVarArgs = function (a) {
    return function () {
      var b = Array.prototype.slice.call(arguments);
      return a(b);
    };
  };
  var Wa = function (a, b) {
    null == b && (b = 2);
    this.swipeTimeout = 0.1;
    this.longPressDelay = 1;
    var c = this;
    if (!Wa.initialized) {
      Wa.initialized = !0;
      var d = wa.get_current().stage;
      Wa.moveToleSqr = 0.008 * new Y(d.stageWidth, d.stageHeight).get_length();
      Wa.moveToleSqr *= Wa.moveToleSqr;
      Xe.get_supportsTouchEvents() && (Xe.inputMode = 2);
    }
    this.owner = a;
    this.mode = b;
    a = Xe.get_supportsTouchEvents();
    this.owner.mouseEnabled = !0;
    this.listenEvents =
      1 == this.mode
        ? a
          ? Wa.touchEvents
          : Wa.mouseEvents
        : a
        ? Wa.geTouchEvents
        : Wa.geMouseEvents;
    this.handler =
      1 == this.mode
        ? a
          ? B(this, this.convertTouch)
          : B(this, this.convertMouse)
        : a
        ? B(this, this.onTouch)
        : B(this, this.onMouse);
    a = 0;
    for (b = this.listenEvents; a < b.length; )
      (d = b[a]), ++a, this.owner.addEventListener(d, this.handler);
    3 == this.mode &&
      wa.get_current().stage.addEventListener("resize", function (a) {
        c.overlay = null;
      });
    this.touchList = new yf();
    this.setReady();
  };
  p.RoxGestureAgent = Wa;
  Wa.__name__ = ["RoxGestureAgent"];
  Wa.__properties__ = { get_multitouchSupported: "get_multitouchSupported" };
  Wa.init = function () {
    if (!Wa.initialized) {
      Wa.initialized = !0;
      var a = wa.get_current().stage;
      Wa.moveToleSqr = 0.008 * new Y(a.stageWidth, a.stageHeight).get_length();
      Wa.moveToleSqr *= Wa.moveToleSqr;
      Xe.get_supportsTouchEvents() && (Xe.inputMode = 2);
    }
  };
  Wa.localOffset = function (a, b) {
    var c = a.parent.localToGlobal(new Y(a.get_x(), a.get_y()));
    c.offset(b.x, b.y);
    c = a.parent.globalToLocal(c);
    c.offset(-a.get_x(), -a.get_y());
    return c;
  };
  Wa.get_multitouchSupported = function () {
    return Xe.get_supportsTouchEvents() ? 1 < Xe.maxTouchPoints : !1;
  };
  Wa.initTypeMap = function () {
    for (var a = new la(), b = 0, c = Wa.MAP.length >> 1; b < c; ) {
      var d = b++,
        e = Wa.MAP[d << 1];
      d = Wa.MAP[(d << 1) + 1];
      null != t[e] ? a.setReserved(e, d) : (a.h[e] = d);
    }
    return a;
  };
  Wa.prototype = {
    mode: null,
    longPressDelay: null,
    swipeTimeout: null,
    owner: null,
    touch0: null,
    touch1: null,
    touchList: null,
    listenEvents: null,
    handler: null,
    longPressTimer: null,
    tweener: null,
    overlay: null,
    state: null,
    detach: function () {
      null != this.tweener && (sb.cancel(this.tweener), (this.tweener = null));
      this.setReady();
      for (var a = 0, b = this.listenEvents; a < b.length; ) {
        var c = b[a];
        ++a;
        this.owner.removeEventListener(c, this.handler);
      }
      this.overlay = this.owner = null;
    },
    getHandler: function (a) {
      null == a && (a = 3);
      var b = B(this, this.handleEvent),
        c = a;
      return function (a) {
        b(c, a);
      };
    },
    startTweenXY: function (a, b, c, d) {
      var e = this;
      this.tweener = new Rf();
      this.tweener
        .tween(a.get_x(), c, a.get_y(), d, xa.linear, (1e3 * b) | 0)
        .doOnUpdate(function () {
          a.set_x(e.tweener.value1);
          a.set_y(e.tweener.value2);
        });
    },
    stopTween: function () {
      null != this.tweener && (sb.cancel(this.tweener), (this.tweener = null));
    },
    handleEvent: function (a, b) {
      var c = b.target;
      if (c == this.owner)
        switch (b.type) {
          case "rox_gesture_pan":
            b = b.extra;
            var d = c.parent.localToGlobal(new Y(c.get_x(), c.get_y()));
            d.offset(b.x, b.y);
            d = c.parent.globalToLocal(d);
            d.offset(-c.get_x(), -c.get_y());
            b = d;
            0 != (a & 1) && c.set_x(c.get_x() + b.x);
            0 != (a & 2) && c.set_y(c.get_y() + b.y);
            break;
          case "rox_gesture_pinch":
            a = b.extra;
            var e = c.parent.localToGlobal(new Y(c.get_x(), c.get_y()));
            d = e.x - b.stageX;
            var f = e.y - b.stageY;
            e = Math.atan2(f, d);
            d = new Y(d, f).get_length();
            d = Y.polar(d * a, e);
            d.offset(b.stageX, b.stageY);
            d = c.parent.globalToLocal(d);
            c.set_scaleX(c.get_scaleX() * a);
            c.set_scaleY(c.get_scaleY() * a);
            c.set_x(d.x);
            c.set_y(d.y);
            break;
          case "rox_gesture_rotation":
            a = b.extra;
            e = c.parent.localToGlobal(new Y(c.get_x(), c.get_y()));
            d = e.x - b.stageX;
            f = e.y - b.stageY;
            e = Math.atan2(f, d);
            d = new Y(d, f).get_length();
            d = Y.polar(d, e + a);
            d.offset(b.stageX, b.stageY);
            d = c.parent.globalToLocal(d);
            c.set_rotation(c.get_rotation() + Wa.R2D * a);
            c.set_x(d.x);
            c.set_y(d.y);
            break;
          case "rox_gesture_swipe":
            b = new Y(2 * b.extra.x, 2 * b.extra.y);
            a = c.parent.localToGlobal(new Y(c.get_x(), c.get_y()));
            a.offset(b.x, b.y);
            a = c.parent.globalToLocal(a);
            a.offset(-c.get_x(), -c.get_y());
            b = c.get_x() + a.x;
            a = c.get_y() + a.y;
            var g = this;
            this.tweener = new Rf();
            this.tweener
              .tween(c.get_x(), b, c.get_y(), a, xa.linear, 2e3)
              .doOnUpdate(function () {
                c.set_x(g.tweener.value1);
                c.set_y(g.tweener.value2);
              });
        }
    },
    convertTouch: function (a) {
      var b = a.type,
        c = Wa.typeMap;
      this.owner.dispatchEvent(
        new Rc(
          null != t[b] ? c.getReserved(b) : c.h[b],
          a.bubbles,
          a.cancelable,
          a.localX,
          a.localY,
          a.stageX,
          a.stageY,
          a.touchPointID,
          this
        )
      );
    },
    convertMouse: function (a) {
      var b = a.type;
      if ("mouseDown" == b || "mouseUp" == b || "click" == b || a.buttonDown) {
        var c = Wa.typeMap;
        this.owner.dispatchEvent(
          new Rc(
            null != t[b] ? c.getReserved(b) : c.h[b],
            a.bubbles,
            a.cancelable,
            a.localX,
            a.localY,
            a.stageX,
            a.stageY,
            0,
            this
          )
        );
      }
    },
    onTouch: function (a) {
      var b = a.touchPointID,
        c = null == this.touch0 || this.touch0.tid == b;
      if (
        c ||
        (null != this.touch1 && this.touch1.tid == b) ||
        (null != this.touch0 && null == this.touch1 && this.touch0.tid != b)
      ) {
        var d = a.type,
          e = Wa.typeMap;
        this.handleTouch(null != t[d] ? e.getReserved(d) : e.h[d], a, c, b);
      }
    },
    onMouse: function (a) {
      var b = a.type;
      if ("mouseDown" == b || "mouseUp" == b || a.buttonDown) {
        var c = Wa.typeMap;
        this.handleTouch(null != t[b] ? c.getReserved(b) : c.h[b], a, !0, 0);
      }
    },
    handleTouch: function (a, b, c, d) {
      var e = new Do(this.owner, b, d),
        f = c ? this.touch0 : this.touch1;
      "rox_touch_move" == a && null != f
        ? ((d = f.sx - e.sx),
          (f = f.sy - e.sy),
          (d = d * d + f * f < Wa.moveToleSqr))
        : (d = !1);
      if (d) return !1;
      d = !0;
      switch (this.state) {
        case 0:
          if (c && "rox_touch_begin" == a) {
            this.state = 1;
            this.touch0 = e;
            var g = B(this, this.sendLongPress);
            this.longPressTimer = sb
              .timer((1e3 * this.longPressDelay) | 0)
              .doOnComplete(function () {
                g(e);
              });
            null != this.tweener &&
              (sb.cancel(this.tweener), (this.tweener = null));
            if (3 == this.mode)
              for (
                c = wa.get_current().stage,
                  null == this.overlay &&
                    ((this.overlay = new gb()),
                    this.overlay.set_name("overlay"),
                    this.overlay
                      .get_graphics()
                      .beginFill(16777215, 0.00392156862745098),
                    this.overlay
                      .get_graphics()
                      .drawRect(0, 0, c.stageWidth, c.stageHeight)),
                  c.addChild(this.overlay),
                  c = 0,
                  a = this.listenEvents;
                c < a.length;

              )
                (b = a[c]), ++c, this.overlay.addEventListener(b, this.handler);
          } else d = !1;
          break;
        case 1:
          c && "rox_touch_end" == a
            ? (this.owner.dispatchEvent(
                new Rc(
                  "rox_gesture_tap",
                  null,
                  null,
                  e.lx,
                  e.ly,
                  e.sx,
                  e.sy,
                  null,
                  this
                )
              ),
              this.setReady())
            : c && "rox_touch_move" == a
            ? ((c = new Y(e.sx - this.touch0.sx, e.sy - this.touch0.sy)),
              this.owner.dispatchEvent(
                new Rc(
                  "rox_gesture_pan",
                  null,
                  null,
                  e.lx,
                  e.ly,
                  e.sx,
                  e.sy,
                  null,
                  this,
                  c
                )
              ),
              (this.state = 4),
              null != this.touch0 && this.touchList.push(this.touch0),
              (this.touch0 = e),
              null != this.longPressTimer &&
                (sb.cancel(this.longPressTimer), (this.longPressTimer = null)))
            : c || "rox_touch_begin" != a
            ? (d = !1)
            : ((this.state = 2),
              (this.touch1 = e),
              null != this.longPressTimer &&
                (sb.cancel(this.longPressTimer), (this.longPressTimer = null)));
          break;
        case 2:
          if ("rox_touch_end" == a)
            this.owner.dispatchEvent(
              new Rc(
                "rox_gesture_end",
                null,
                null,
                e.lx,
                e.ly,
                e.sx,
                e.sy,
                null,
                this
              )
            ),
              this.setReady();
          else if ("rox_touch_move" == a) {
            f = c ? this.touch1 : this.touch0;
            var h = c ? this.touch0 : this.touch1;
            a = Y.distance(e.spt, f.spt) / Y.distance(h.spt, f.spt);
            b =
              Math.atan2(e.sy - f.sy, e.sx - f.sx) -
              Math.atan2(h.sy - f.sy, h.sx - f.sx);
            f = Y.interpolate(f.lpt, h.lpt, 0.5);
            h = this.owner.localToGlobal(f);
            1 != a &&
              this.owner.dispatchEvent(
                new Rc(
                  "rox_gesture_pinch",
                  null,
                  null,
                  f.x,
                  f.y,
                  h.x,
                  h.y,
                  null,
                  this,
                  a
                )
              );
            0 != b &&
              this.owner.dispatchEvent(
                new Rc(
                  "rox_gesture_rotation",
                  null,
                  null,
                  f.x,
                  f.y,
                  h.x,
                  h.y,
                  null,
                  this,
                  b
                )
              );
            c ? (this.touch0 = e) : (this.touch1 = e);
          } else d = !1;
          break;
        case 4:
          if (c && "rox_touch_move" == a)
            (c = new Y(e.sx - this.touch0.sx, e.sy - this.touch0.sy)),
              this.owner.dispatchEvent(
                new Rc(
                  "rox_gesture_pan",
                  null,
                  null,
                  e.lx,
                  e.ly,
                  e.sx,
                  e.sy,
                  null,
                  this,
                  c
                )
              ),
              (this.state = 4),
              null != this.touch0 && this.touchList.push(this.touch0),
              (this.touch0 = e),
              null != this.longPressTimer &&
                (sb.cancel(this.longPressTimer), (this.longPressTimer = null));
          else if (
            c &&
            ("rox_touch_end" == a ||
              (3 != this.mode &&
                "rox_touch_out" == a &&
                b.target == this.owner))
          ) {
            if (
              0 >= this.swipeTimeout ||
              e.time - this.touch0.time < this.swipeTimeout
            ) {
              c = this.touchList.pop();
              a = null;
              for (b = this.touchList.h; null != b; ) {
                f = b.item;
                b = b.next;
                if (0.2 < c.time - f.time) break;
                a = f;
              }
              null != a &&
                ((f = c.sy - a.sy),
                (b = c.sx - a.sx),
                (h = Math.atan2(f, b)),
                (c = Y.polar(
                  (new Y(b, f).get_length() / (c.time - a.time)) * 0.25,
                  h
                )),
                this.owner.dispatchEvent(
                  new Rc(
                    "rox_gesture_swipe",
                    null,
                    null,
                    e.lx,
                    e.ly,
                    e.sx,
                    e.sy,
                    null,
                    this,
                    c
                  )
                ));
            }
            this.setReady();
          } else
            c || "rox_touch_begin" != a
              ? (d = !1)
              : (this.owner.dispatchEvent(
                  new Rc(
                    "rox_gesture_begin",
                    null,
                    null,
                    e.lx,
                    e.ly,
                    e.sx,
                    e.sy,
                    null,
                    this
                  )
                ),
                (this.state = 2),
                (this.touch1 = e),
                null != this.longPressTimer &&
                  (sb.cancel(this.longPressTimer),
                  (this.longPressTimer = null)));
      }
      return d;
    },
    sendLongPress: function (a) {
      this.owner.dispatchEvent(
        new Rc(
          "rox_gesture_long_press",
          null,
          null,
          a.lx,
          a.ly,
          a.sx,
          a.sy,
          null,
          this
        )
      );
      this.setReady();
    },
    setReady: function () {
      this.state = 0;
      this.touch0 = this.touch1 = null;
      this.touchList.clear();
      null != this.longPressTimer &&
        (sb.cancel(this.longPressTimer), (this.longPressTimer = null));
      if (null != this.overlay && 3 == this.mode) {
        for (var a = 0, b = this.listenEvents; a < b.length; ) {
          var c = b[a];
          ++a;
          this.overlay.removeEventListener(c, this.handler);
        }
        wa.get_current().stage.removeChild(this.overlay);
      }
    },
    setMove: function (a) {
      this.state = 4;
      null != this.touch0 && this.touchList.push(this.touch0);
      this.touch0 = a;
      null != this.longPressTimer &&
        (sb.cancel(this.longPressTimer), (this.longPressTimer = null));
    },
    setTwoFingerMove: function (a) {
      this.state = 2;
      this.touch1 = a;
      null != this.longPressTimer &&
        (sb.cancel(this.longPressTimer), (this.longPressTimer = null));
    },
    cancelLongPress: function () {
      null != this.longPressTimer &&
        (sb.cancel(this.longPressTimer), (this.longPressTimer = null));
    },
    __class__: Wa,
  };
  var Do = function (a, b, c) {
    this.tid = c;
    this.sx = b.stageX;
    this.sy = b.stageY;
    this.spt = new Y(this.sx, this.sy);
    this.lpt = a.globalToLocal(this.spt);
    this.lx = this.lpt.x;
    this.ly = this.lpt.y;
    this.time = new Date().getTime() / 1e3;
  };
  p["_RoxGestureAgent.TouchPoint"] = Do;
  Do.__name__ = ["_RoxGestureAgent", "TouchPoint"];
  Do.prototype = {
    tid: null,
    lx: null,
    ly: null,
    sx: null,
    sy: null,
    lpt: null,
    spt: null,
    time: null,
    distSqr: function (a) {
      var b = a.sx - this.sx;
      a = a.sy - this.sy;
      return b * b + a * a;
    },
    __class__: Do,
  };
  var ma = function (a, b, c) {
    null == c && (c = !1);
    null == b && (b = !1);
    this.type = a;
    this.bubbles = b;
    this.cancelable = c;
    this.eventPhase = 2;
  };
  p["openfl.events.Event"] = ma;
  ma.__name__ = ["openfl", "events", "Event"];
  ma.prototype = {
    bubbles: null,
    cancelable: null,
    currentTarget: null,
    eventPhase: null,
    target: null,
    type: null,
    __isCanceled: null,
    __isCanceledNow: null,
    __preventDefault: null,
    clone: function () {
      var a = new ma(this.type, this.bubbles, this.cancelable);
      a.eventPhase = this.eventPhase;
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      return a;
    },
    formatToString: function (a, b, c, d, e, f) {
      var g = [];
      null != b && g.push(b);
      null != c && g.push(c);
      null != d && g.push(d);
      null != e && g.push(e);
      null != f && g.push(f);
      return B(this, this.__formatToString).apply(this, [a, g]);
    },
    isDefaultPrevented: function () {
      return this.__preventDefault;
    },
    preventDefault: function () {
      this.cancelable && (this.__preventDefault = !0);
    },
    stopImmediatePropagation: function () {
      this.__isCanceledNow = this.__isCanceled = !0;
    },
    stopPropagation: function () {
      this.__isCanceled = !0;
    },
    toString: function () {
      return this.__formatToString("Event", ["type", "bubbles", "cancelable"]);
    },
    __formatToString: function (a, b) {
      a = "[" + a;
      for (var c, d = 0; d < b.length; ) {
        var e = b[d];
        ++d;
        c = V.field(this, e);
        a =
          "string" == typeof c
            ? a + (" " + e + '="' + P.string(c) + '"')
            : a + (" " + e + "=" + P.string(c));
      }
      return a + "]";
    },
    __class__: ma,
  };
  var Rc = function (a, b, c, d, e, f, g, h, n, k) {
    null == h && (h = 0);
    null == c && (c = !1);
    null == b && (b = !0);
    ma.call(this, a, b, c);
    this.localX = d;
    this.localY = e;
    this.stageX = f;
    this.stageY = g;
    this.touchPointID = h;
    this.agent = n;
    this.extra = k;
  };
  p.RoxGestureEvent = Rc;
  Rc.__name__ = ["RoxGestureEvent"];
  Rc.__super__ = ma;
  Rc.prototype = x(ma.prototype, {
    localX: null,
    localY: null,
    stageX: null,
    stageY: null,
    touchPointID: null,
    agent: null,
    extra: null,
    toString: function () {
      return (
        this.type +
        "(" +
        this.touchPointID +
        "): local=(" +
        this.localX +
        "," +
        this.localY +
        "), stage=(" +
        this.stageX +
        "," +
        this.stageY +
        "), extra=" +
        (u.__instanceof(this.extra, Y)
          ? "Point(" +
            P.string(this.extra.x) +
            "," +
            P.string(this.extra.y) +
            ")"
          : this.extra)
      );
    },
    __class__: Rc,
  });
  var P = function () {};
  p.Std = P;
  P.__name__ = ["Std"];
  P.string = function (a) {
    return u.__string_rec(a, "");
  };
  P.parseInt = function (a) {
    var b = parseInt(a, 10);
    0 != b || (120 != Q.cca(a, 1) && 88 != Q.cca(a, 1)) || (b = parseInt(a));
    return isNaN(b) ? null : b;
  };
  var Cf = function () {
    this.b = "";
  };
  p.StringBuf = Cf;
  Cf.__name__ = ["StringBuf"];
  Cf.prototype = { b: null, __class__: Cf };
  var ba = function () {};
  p.StringTools = ba;
  ba.__name__ = ["StringTools"];
  ba.htmlEscape = function (a, b) {
    a = a
      .split("&")
      .join("&amp;")
      .split("<")
      .join("&lt;")
      .split(">")
      .join("&gt;");
    return b ? a.split('"').join("&quot;").split("'").join("&#039;") : a;
  };
  ba.startsWith = function (a, b) {
    return a.length >= b.length ? Q.substr(a, 0, b.length) == b : !1;
  };
  ba.endsWith = function (a, b) {
    var c = b.length,
      d = a.length;
    return d >= c ? Q.substr(a, d - c, c) == b : !1;
  };
  ba.isSpace = function (a, b) {
    a = Q.cca(a, b);
    return 8 < a && 14 > a ? !0 : 32 == a;
  };
  ba.ltrim = function (a) {
    for (var b = a.length, c = 0; c < b && ba.isSpace(a, c); ) ++c;
    return 0 < c ? Q.substr(a, c, b - c) : a;
  };
  ba.rtrim = function (a) {
    for (var b = a.length, c = 0; c < b && ba.isSpace(a, b - c - 1); ) ++c;
    return 0 < c ? Q.substr(a, 0, b - c) : a;
  };
  ba.trim = function (a) {
    return ba.ltrim(ba.rtrim(a));
  };
  ba.replace = function (a, b, c) {
    return a.split(b).join(c);
  };
  ba.hex = function (a, b) {
    for (
      var c = "";
      (c = "0123456789ABCDEF".charAt(a & 15) + c), (a >>>= 4), 0 < a;

    );
    if (null != b) for (; c.length < b; ) c = "0" + c;
    return c;
  };
  var Nb = (p.ValueType = {
    __ename__: ["ValueType"],
    __constructs__:
      "TNull TInt TFloat TBool TObject TFunction TClass TEnum TUnknown".split(
        " "
      ),
  });
  Nb.TNull = ["TNull", 0];
  Nb.TNull.toString = M;
  Nb.TNull.__enum__ = Nb;
  Nb.TInt = ["TInt", 1];
  Nb.TInt.toString = M;
  Nb.TInt.__enum__ = Nb;
  Nb.TFloat = ["TFloat", 2];
  Nb.TFloat.toString = M;
  Nb.TFloat.__enum__ = Nb;
  Nb.TBool = ["TBool", 3];
  Nb.TBool.toString = M;
  Nb.TBool.__enum__ = Nb;
  Nb.TObject = ["TObject", 4];
  Nb.TObject.toString = M;
  Nb.TObject.__enum__ = Nb;
  Nb.TFunction = ["TFunction", 5];
  Nb.TFunction.toString = M;
  Nb.TFunction.__enum__ = Nb;
  Nb.TClass = function (a) {
    a = ["TClass", 6, a];
    a.__enum__ = Nb;
    a.toString = M;
    return a;
  };
  Nb.TEnum = function (a) {
    a = ["TEnum", 7, a];
    a.__enum__ = Nb;
    a.toString = M;
    return a;
  };
  Nb.TUnknown = ["TUnknown", 8];
  Nb.TUnknown.toString = M;
  Nb.TUnknown.__enum__ = Nb;
  var qa = function () {};
  p.Type = qa;
  qa.__name__ = ["Type"];
  qa.getSuperClass = function (a) {
    return a.__super__;
  };
  qa.getClassName = function (a) {
    a = a.__name__;
    return null == a ? null : a.join(".");
  };
  qa.getEnumName = function (a) {
    return a.__ename__.join(".");
  };
  qa.resolveClass = function (a) {
    a = p[a];
    return null != a && a.__name__ ? a : null;
  };
  qa.resolveEnum = function (a) {
    a = p[a];
    return null != a && a.__ename__ ? a : null;
  };
  qa.createInstance = function (a, b) {
    switch (b.length) {
      case 0:
        return new a();
      case 1:
        return new a(b[0]);
      case 2:
        return new a(b[0], b[1]);
      case 3:
        return new a(b[0], b[1], b[2]);
      case 4:
        return new a(b[0], b[1], b[2], b[3]);
      case 5:
        return new a(b[0], b[1], b[2], b[3], b[4]);
      case 6:
        return new a(b[0], b[1], b[2], b[3], b[4], b[5]);
      case 7:
        return new a(b[0], b[1], b[2], b[3], b[4], b[5], b[6]);
      case 8:
        return new a(b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7]);
      case 9:
        return new a(b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8]);
      case 10:
        return new a(
          b[0],
          b[1],
          b[2],
          b[3],
          b[4],
          b[5],
          b[6],
          b[7],
          b[8],
          b[9]
        );
      case 11:
        return new a(
          b[0],
          b[1],
          b[2],
          b[3],
          b[4],
          b[5],
          b[6],
          b[7],
          b[8],
          b[9],
          b[10]
        );
      case 12:
        return new a(
          b[0],
          b[1],
          b[2],
          b[3],
          b[4],
          b[5],
          b[6],
          b[7],
          b[8],
          b[9],
          b[10],
          b[11]
        );
      case 13:
        return new a(
          b[0],
          b[1],
          b[2],
          b[3],
          b[4],
          b[5],
          b[6],
          b[7],
          b[8],
          b[9],
          b[10],
          b[11],
          b[12]
        );
      case 14:
        return new a(
          b[0],
          b[1],
          b[2],
          b[3],
          b[4],
          b[5],
          b[6],
          b[7],
          b[8],
          b[9],
          b[10],
          b[11],
          b[12],
          b[13]
        );
      default:
        throw new v("Too many arguments");
    }
  };
  qa.createEmptyInstance = function (a) {
    function b() {}
    b.prototype = a.prototype;
    return new b();
  };
  qa.createEnum = function (a, b, c) {
    var d = V.field(a, b);
    if (null == d) throw new v("No such constructor " + b);
    if (V.isFunction(d)) {
      if (null == c) throw new v("Constructor " + b + " need parameters");
      return d.apply(a, c);
    }
    if (null != c && 0 != c.length)
      throw new v("Constructor " + b + " does not need parameters");
    return d;
  };
  qa.getInstanceFields = function (a) {
    var b = [],
      c;
    for (c in a.prototype) b.push(c);
    Q.remove(b, "__class__");
    Q.remove(b, "__properties__");
    return b;
  };
  qa["typeof"] = function (a) {
    switch (typeof a) {
      case "boolean":
        return Nb.TBool;
      case "function":
        return a.__name__ || a.__ename__ ? Nb.TObject : Nb.TFunction;
      case "number":
        return Math.ceil(a) == a % 2147483648 ? Nb.TInt : Nb.TFloat;
      case "object":
        if (null == a) return Nb.TNull;
        var b = a.__enum__;
        if (null != b) return Nb.TEnum(b);
        a = u.getClass(a);
        return null != a ? Nb.TClass(a) : Nb.TObject;
      case "string":
        return Nb.TClass(String);
      case "undefined":
        return Nb.TNull;
      default:
        return Nb.TUnknown;
    }
  };
  qa.enumEq = function (a, b) {
    if (a == b) return !0;
    try {
      if (a[0] != b[0]) return !1;
      for (var c = 2, d = a.length; c < d; ) {
        var e = c++;
        if (!qa.enumEq(a[e], b[e])) return !1;
      }
      var f = a.__enum__;
      if (f != b.__enum__ || null == f) return !1;
    } catch (g) {
      return (X.lastException = g), !1;
    }
    return !0;
  };
  var Xa = {};
  p["_UInt.UInt_Impl_"] = Xa;
  Xa.__name__ = ["_UInt", "UInt_Impl_"];
  Xa.gt = function (a, b) {
    var c = 0 > a;
    return c != 0 > b ? c : a > b;
  };
  Xa.toFloat = function (a) {
    return 0 > a ? 4294967296 + a : a + 0;
  };
  var Eo = function () {};
  p["openfl.events.IEventDispatcher"] = Eo;
  Eo.__name__ = ["openfl", "events", "IEventDispatcher"];
  Eo.prototype = {
    addEventListener: null,
    dispatchEvent: null,
    hasEventListener: null,
    removeEventListener: null,
    willTrigger: null,
    __class__: Eo,
  };
  var db = function (a) {
    null != a && (this.__targetDispatcher = a);
  };
  p["openfl.events.EventDispatcher"] = db;
  db.__name__ = ["openfl", "events", "EventDispatcher"];
  db.__interfaces__ = [Eo];
  db.prototype = {
    __eventMap: null,
    __iterators: null,
    __targetDispatcher: null,
    addEventListener: function (a, b, c, d, e) {
      null == d && (d = 0);
      null == c && (c = !1);
      if (null != b)
        if (
          (null == this.__eventMap &&
            ((this.__eventMap = new la()), (this.__iterators = new la())),
          (e = this.__eventMap),
          null != t[a] ? e.existsReserved(a) : e.h.hasOwnProperty(a))
        ) {
          e = this.__eventMap;
          e = null != t[a] ? e.getReserved(a) : e.h[a];
          for (var f = 0, g = e.length; f < g; ) {
            var h = f++;
            if (e[h].match(b, c)) return;
          }
          f = this.__iterators;
          a = null != t[a] ? f.getReserved(a) : f.h[a];
          for (f = 0; f < a.length; ) (g = a[f]), ++f, g.active && g.copy();
          this.__addListenerByPriority(e, new nl(b, c, d));
        } else
          (e = []),
            e.push(new nl(b, c, d)),
            (b = new ol(e)),
            (c = this.__eventMap),
            null != t[a] ? c.setReserved(a, e) : (c.h[a] = e),
            (c = this.__iterators),
            (b = [b]),
            null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
    },
    dispatchEvent: function (a) {
      a.target =
        null != this.__targetDispatcher ? this.__targetDispatcher : this;
      return this.__dispatchEvent(a);
    },
    hasEventListener: function (a) {
      if (null == this.__eventMap) return !1;
      var b = this.__eventMap;
      return null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a);
    },
    removeEventListener: function (a, b, c) {
      null == c && (c = !1);
      if (null != this.__eventMap && null != b) {
        var d = this.__eventMap;
        d = null != t[a] ? d.getReserved(a) : d.h[a];
        if (null != d) {
          var e = this.__iterators;
          e = null != t[a] ? e.getReserved(a) : e.h[a];
          for (var f = 0, g = d.length; f < g; ) {
            var h = f++;
            if (d[h].match(b, c)) {
              for (b = 0; b < e.length; ) (c = e[b]), ++b, c.remove(d[h], h);
              d.splice(h, 1);
              break;
            }
          }
          0 == d.length &&
            (this.__eventMap.remove(a), this.__iterators.remove(a));
          a = this.__eventMap;
          new Oe(a, a.arrayKeys()).hasNext() ||
            (this.__iterators = this.__eventMap = null);
        }
      }
    },
    toString: function () {
      return (
        "[object " + qa.getClassName(u.getClass(this)).split(".").pop() + "]"
      );
    },
    willTrigger: function (a) {
      return this.hasEventListener(a);
    },
    __dispatchEvent: function (a) {
      if (null == this.__eventMap || null == a) return !0;
      var b = a.type,
        c = this.__eventMap;
      c = null != t[b] ? c.getReserved(b) : c.h[b];
      if (null == c) return !0;
      null == a.target &&
        (a.target =
          null != this.__targetDispatcher ? this.__targetDispatcher : this);
      a.currentTarget = this;
      var d = 1 == a.eventPhase,
        e = this.__iterators;
      b = null != t[b] ? e.getReserved(b) : e.h[b];
      e = b[0];
      e.active && ((e = new ol(c)), b.push(e));
      e.start();
      for (var f = e; f.hasNext(); ) {
        var g = f.next();
        if (
          null != g &&
          g.useCapture == d &&
          (g.callback(a), a.__isCanceledNow)
        )
          break;
      }
      e.stop();
      e != b[0] ? Q.remove(b, e) : e.reset(c);
      return !a.isDefaultPrevented();
    },
    __removeAllListeners: function () {
      this.__iterators = this.__eventMap = null;
    },
    __addListenerByPriority: function (a, b) {
      for (var c = a.length, d = c, e = 0; e < c; ) {
        var f = e++;
        if (a[f].priority < b.priority) {
          d = f;
          break;
        }
      }
      a.splice(d, 0, b);
    },
    __class__: db,
  };
  var pl = function () {};
  p["openfl.display.IBitmapDrawable"] = pl;
  pl.__name__ = ["openfl", "display", "IBitmapDrawable"];
  pl.prototype = {
    __blendMode: null,
    __isMask: null,
    __renderable: null,
    __renderTransform: null,
    __transform: null,
    __worldAlpha: null,
    __worldColorTransform: null,
    __worldTransform: null,
    __getBounds: null,
    __renderCairo: null,
    __renderCairoMask: null,
    __renderCanvas: null,
    __renderCanvasMask: null,
    __renderDOM: null,
    __renderGL: null,
    __renderGLMask: null,
    __update: null,
    __updateTransforms: null,
    __mask: null,
    __scrollRect: null,
    __class__: pl,
  };
  var Oa = {};
  p["openfl._Vector.Vector_Impl_"] = Oa;
  Oa.__name__ = ["openfl", "_Vector", "Vector_Impl_"];
  Oa.__properties__ = {
    set_length: "set_length",
    get_length: "get_length",
    set_fixed: "set_fixed",
    get_fixed: "get_fixed",
  };
  Oa.concat = function (a, b) {
    return a.concat(b);
  };
  Oa.copy = function (a) {
    return a.copy();
  };
  Oa.get = function (a, b) {
    return a.get(b);
  };
  Oa.indexOf = function (a, b, c) {
    null == c && (c = 0);
    return a.indexOf(b, c);
  };
  Oa.insertAt = function (a, b, c) {
    a.insertAt(b, c);
  };
  Oa.iterator = function (a) {
    return a.iterator();
  };
  Oa.join = function (a, b) {
    null == b && (b = ",");
    return a.join(b);
  };
  Oa.lastIndexOf = function (a, b, c) {
    return a.lastIndexOf(b, c);
  };
  Oa.pop = function (a) {
    return a.pop();
  };
  Oa.push = function (a, b) {
    return a.push(b);
  };
  Oa.removeAt = function (a, b) {
    return a.removeAt(b);
  };
  Oa.reverse = function (a) {
    return a.reverse();
  };
  Oa.set = function (a, b, c) {
    return a.set(b, c);
  };
  Oa.shift = function (a) {
    return a.shift();
  };
  Oa.slice = function (a, b, c) {
    return a.slice(b, c);
  };
  Oa.sort = function (a, b) {
    a.sort(b);
  };
  Oa.splice = function (a, b, c) {
    return a.splice(b, c);
  };
  Oa.toString = function (a) {
    return null != a ? a.toString() : null;
  };
  Oa.unshift = function (a, b) {
    a.unshift(b);
  };
  Oa.convert = function (a) {
    return a;
  };
  Oa.toBoolVector = function (a, b, c, d) {
    return new Bg(b, c, d);
  };
  Oa.toIntVector = function (a, b, c, d) {
    return new Cg(b, c, d);
  };
  Oa.toFloatVector = function (a, b, c, d) {
    return new Dg(b, c, d, !0);
  };
  Oa.toFunctionVector = function (a, b, c, d) {
    return new Eg(b, c, d);
  };
  Oa.toObjectVector = function (a, b, c, d) {
    return new kg(b, c, d, !0);
  };
  Oa.toNullVector = function (a, b, c, d) {
    return new kg(b, c, d, !0);
  };
  Oa.fromBoolVector = function (a) {
    return a;
  };
  Oa.fromIntVector = function (a) {
    return a;
  };
  Oa.fromFloatVector = function (a) {
    return a;
  };
  Oa.fromFunctionVector = function (a) {
    return a;
  };
  Oa.fromObjectVector = function (a) {
    return a;
  };
  Oa.get_fixed = function (a) {
    return a.fixed;
  };
  Oa.set_fixed = function (a, b) {
    return (a.fixed = b);
  };
  Oa.get_length = function (a) {
    return a.get_length();
  };
  Oa.set_length = function (a, b) {
    return a.set_length(b);
  };
  var Fg = function (a, b, c) {
    this.__pool = new qd();
    this.inactiveObjects = this.activeObjects = 0;
    this.__inactiveObject1 = this.__inactiveObject0 = null;
    this.__inactiveObjectList = new yf();
    null != a && (this.create = a);
    null != b && (this.clean = b);
    null != c && this.set_size(c);
  };
  p["lime.utils.ObjectPool"] = Fg;
  Fg.__name__ = ["lime", "utils", "ObjectPool"];
  Fg.prototype = {
    activeObjects: null,
    inactiveObjects: null,
    __inactiveObject0: null,
    __inactiveObject1: null,
    __inactiveObjectList: null,
    __pool: null,
    __size: null,
    add: function (a) {
      this.__pool.exists(a) ||
        (this.__pool.set(a, !1),
        this.clean(a),
        this.__pool.set(a, !1),
        null == this.__inactiveObject0
          ? (this.__inactiveObject0 = a)
          : null == this.__inactiveObject1
          ? (this.__inactiveObject1 = a)
          : this.__inactiveObjectList.add(a),
        this.inactiveObjects++);
    },
    clean: function (a) {},
    clear: function () {
      this.__pool = new qd();
      this.inactiveObjects = this.activeObjects = 0;
      this.__inactiveObject1 = this.__inactiveObject0 = null;
      this.__inactiveObjectList.clear();
    },
    create: function () {
      return null;
    },
    get: function () {
      var a = null;
      if (0 < this.inactiveObjects)
        null != this.__inactiveObject0
          ? ((a = this.__inactiveObject0), (this.__inactiveObject0 = null))
          : null != this.__inactiveObject1
          ? ((a = this.__inactiveObject1), (this.__inactiveObject1 = null))
          : ((a = this.__inactiveObjectList.pop()),
            0 < this.__inactiveObjectList.length &&
              (this.__inactiveObject0 = this.__inactiveObjectList.pop()),
            0 < this.__inactiveObjectList.length &&
              (this.__inactiveObject1 = this.__inactiveObjectList.pop())),
          this.__pool.set(a, !0),
          this.inactiveObjects--,
          this.activeObjects++;
      else if (null == this.__size || this.activeObjects < this.__size)
        (a = this.create()),
          null != a && (this.__pool.set(a, !0), this.activeObjects++);
      return a;
    },
    release: function (a) {
      this.__pool.exists(a)
        ? this.__pool.get(a) ||
          mb.error("Object has already been released", {
            fileName: "ObjectPool.hx",
            lineNumber: 125,
            className: "lime.utils.ObjectPool",
            methodName: "release",
          })
        : mb.error("Object is not a member of the pool", {
            fileName: "ObjectPool.hx",
            lineNumber: 121,
            className: "lime.utils.ObjectPool",
            methodName: "release",
          });
      this.activeObjects--;
      null == this.__size ||
      this.activeObjects + this.inactiveObjects < this.__size
        ? (this.clean(a),
          this.__pool.set(a, !1),
          null == this.__inactiveObject0
            ? (this.__inactiveObject0 = a)
            : null == this.__inactiveObject1
            ? (this.__inactiveObject1 = a)
            : this.__inactiveObjectList.add(a),
          this.inactiveObjects++)
        : this.__pool.remove(a);
    },
    __addInactive: function (a) {
      this.__pool.set(a, !1);
      null == this.__inactiveObject0
        ? (this.__inactiveObject0 = a)
        : null == this.__inactiveObject1
        ? (this.__inactiveObject1 = a)
        : this.__inactiveObjectList.add(a);
      this.inactiveObjects++;
    },
    __getInactive: function () {
      if (null != this.__inactiveObject0) {
        var a = this.__inactiveObject0;
        this.__inactiveObject0 = null;
      } else
        null != this.__inactiveObject1
          ? ((a = this.__inactiveObject1), (this.__inactiveObject1 = null))
          : ((a = this.__inactiveObjectList.pop()),
            0 < this.__inactiveObjectList.length &&
              (this.__inactiveObject0 = this.__inactiveObjectList.pop()),
            0 < this.__inactiveObjectList.length &&
              (this.__inactiveObject1 = this.__inactiveObjectList.pop()));
      this.__pool.set(a, !0);
      this.inactiveObjects--;
      this.activeObjects++;
      return a;
    },
    __removeInactive: function (a) {
      if (
        !(0 >= a || 0 == this.inactiveObjects) &&
        (null != this.__inactiveObject0 &&
          (this.__pool.remove(this.__inactiveObject0),
          (this.__inactiveObject0 = null),
          this.inactiveObjects--,
          --a),
        0 != a &&
          0 != this.inactiveObjects &&
          (null != this.__inactiveObject1 &&
            (this.__pool.remove(this.__inactiveObject1),
            (this.__inactiveObject1 = null),
            this.inactiveObjects--,
            --a),
          0 != a && 0 != this.inactiveObjects))
      )
        for (var b = this.__inactiveObjectList.h; null != b; ) {
          var c = b.item;
          b = b.next;
          this.__pool.remove(c);
          this.__inactiveObjectList.remove(c);
          this.inactiveObjects--;
          --a;
          if (0 == a || 0 == this.inactiveObjects) break;
        }
    },
    get_size: function () {
      return this.__size;
    },
    set_size: function (a) {
      if (null == a) this.__size = null;
      else {
        var b = this.inactiveObjects + this.activeObjects;
        this.__size = a;
        if (b > a) this.__removeInactive(b - a);
        else if (a > b)
          for (var c = 0, d = a - b; c < d; )
            if ((c++, (b = this.create()), null != b))
              this.__pool.set(b, !1),
                this.__inactiveObjectList.add(b),
                this.inactiveObjects++;
            else break;
      }
      return a;
    },
    __class__: Fg,
    __properties__: { set_size: "set_size", get_size: "get_size" },
  };
  var Fd = function () {};
  p["haxe.IMap"] = Fd;
  Fd.__name__ = ["haxe", "IMap"];
  Fd.prototype = {
    get: null,
    set: null,
    exists: null,
    remove: null,
    keys: null,
    iterator: null,
    __class__: Fd,
  };
  var qd = function () {
    this.h = { __keys__: {} };
  };
  p["haxe.ds.ObjectMap"] = qd;
  qd.__name__ = ["haxe", "ds", "ObjectMap"];
  qd.__interfaces__ = [Fd];
  qd.assignId = function (a) {
    return (a.__id__ = ++qd.count);
  };
  qd.getId = function (a) {
    return a.__id__;
  };
  qd.prototype = {
    h: null,
    set: function (a, b) {
      var c = a.__id__ || (a.__id__ = ++qd.count);
      this.h[c] = b;
      this.h.__keys__[c] = a;
    },
    get: function (a) {
      return this.h[a.__id__];
    },
    exists: function (a) {
      return null != this.h.__keys__[a.__id__];
    },
    remove: function (a) {
      a = a.__id__;
      if (null == this.h.__keys__[a]) return !1;
      delete this.h[a];
      delete this.h.__keys__[a];
      return !0;
    },
    keys: function () {
      var a = [],
        b;
      for (b in this.h.__keys__)
        this.h.hasOwnProperty(b) && a.push(this.h.__keys__[b]);
      return Q.iter(a);
    },
    iterator: function () {
      return {
        ref: this.h,
        it: this.keys(),
        hasNext: function () {
          return this.it.hasNext();
        },
        next: function () {
          var a = this.it.next();
          return this.ref[a.__id__];
        },
      };
    },
    toString: function () {
      var a = "{";
      for (var b = this.keys(); b.hasNext(); ) {
        var c = b.next();
        a += P.string(P.string(c));
        a += " => ";
        a += P.string(P.string(this.h[c.__id__]));
        b.hasNext() && (a += ", ");
      }
      return a + "}";
    },
    __class__: qd,
  };
  var hb = function () {
    db.call(this);
    this.__alpha = 1;
    this.__blendMode = 10;
    this.__cacheAsBitmap = !1;
    this.__transform = new ya();
    this.__visible = !0;
    this.__rotationSine = this.__rotation = 0;
    this.__worldAlpha =
      this.__scaleY =
      this.__scaleX =
      this.__rotationCosine =
        1;
    this.__worldBlendMode = 10;
    this.__worldTransform = new ya();
    this.__worldColorTransform = new sc();
    this.__renderTransform = new ya();
    this.__worldVisible = !0;
    this.set_name("instance" + ++hb.__instanceCount);
    null != hb.__initStage &&
      ((this.stage = hb.__initStage),
      (hb.__initStage = null),
      this.stage.addChild(this));
  };
  p["openfl.display.DisplayObject"] = hb;
  hb.__name__ = ["openfl", "display", "DisplayObject"];
  hb.__interfaces__ = [pl];
  hb.__calculateAbsoluteTransform = function (a, b, c) {
    c.a = a.a * b.a + a.b * b.c;
    c.b = a.a * b.b + a.b * b.d;
    c.c = a.c * b.a + a.d * b.c;
    c.d = a.c * b.b + a.d * b.d;
    c.tx = a.tx * b.a + a.ty * b.c + b.tx;
    c.ty = a.tx * b.b + a.ty * b.d + b.ty;
  };
  hb.__super__ = db;
  hb.prototype = x(db.prototype, {
    opaqueBackground: null,
    parent: null,
    scale9Grid: null,
    stage: null,
    __alpha: null,
    __blendMode: null,
    __cacheAsBitmap: null,
    __cacheAsBitmapMatrix: null,
    __cacheBitmap: null,
    __cacheBitmapBackground: null,
    __cacheBitmapColorTransform: null,
    __cacheBitmapData: null,
    __cacheBitmapData2: null,
    __cacheBitmapData3: null,
    __cacheBitmapMatrix: null,
    __cacheBitmapRenderer: null,
    __cairo: null,
    __children: null,
    __customRenderClear: null,
    __customRenderEvent: null,
    __filters: null,
    __graphics: null,
    __interactive: null,
    __isCacheBitmapRender: null,
    __isMask: null,
    __loaderInfo: null,
    __mask: null,
    __maskTarget: null,
    __name: null,
    __objectTransform: null,
    __renderable: null,
    __renderDirty: null,
    __renderParent: null,
    __renderTransform: null,
    __renderTransformCache: null,
    __renderTransformChanged: null,
    __rotation: null,
    __rotationCosine: null,
    __rotationSine: null,
    __scaleX: null,
    __scaleY: null,
    __scrollRect: null,
    __shader: null,
    __tempPoint: null,
    __transform: null,
    __transformDirty: null,
    __visible: null,
    __worldAlpha: null,
    __worldAlphaChanged: null,
    __worldBlendMode: null,
    __worldClip: null,
    __worldClipChanged: null,
    __worldColorTransform: null,
    __worldShader: null,
    __worldTransform: null,
    __worldVisible: null,
    __worldVisibleChanged: null,
    __worldTransformInvalid: null,
    __worldZ: null,
    __canvas: null,
    __context: null,
    __style: null,
    addEventListener: function (a, b, c, d, e) {
      null == e && (e = !1);
      null == d && (d = 0);
      null == c && (c = !1);
      switch (a) {
        case "activate":
        case "deactivate":
        case "enterFrame":
        case "exitFrame":
        case "frameConstructed":
        case "render":
          hb.__broadcastEvents.exists(a) || hb.__broadcastEvents.set(a, []);
          var f = hb.__broadcastEvents.get(a);
          -1 == f.indexOf(this) && f.push(this);
          break;
        case "clearDOM":
        case "renderCairo":
        case "renderCanvas":
        case "renderDOM":
        case "renderOpenGL":
          null == this.__customRenderEvent &&
            ((this.__customRenderEvent = new Gg(null)),
            (this.__customRenderEvent.objectColorTransform = new sc()),
            (this.__customRenderEvent.objectMatrix = new ya()),
            (this.__customRenderClear = !0));
      }
      db.prototype.addEventListener.call(this, a, b, c, d, e);
    },
    dispatchEvent: function (a) {
      if (u.__instanceof(a, Ob)) {
        var b = this.__getRenderTransform();
        a.stageX = a.localX * b.a + a.localY * b.c + b.tx;
        b = this.__getRenderTransform();
        a.stageY = a.localX * b.b + a.localY * b.d + b.ty;
      } else
        u.__instanceof(a, ae) &&
          ((b = this.__getRenderTransform()),
          (a.stageX = a.localX * b.a + a.localY * b.c + b.tx),
          (b = this.__getRenderTransform()),
          (a.stageY = a.localX * b.b + a.localY * b.d + b.ty));
      a.target = this;
      return this.__dispatchWithCapture(a);
    },
    getBounds: function (a) {
      var b = ya.__pool.get();
      if (null != a && a != this) {
        b.copyFrom(this.__getWorldTransform());
        var c = ya.__pool.get();
        c.copyFrom(a.__getWorldTransform());
        c.invert();
        b.concat(c);
        ya.__pool.release(c);
      } else b.identity();
      a = new W();
      this.__getBounds(a, b);
      ya.__pool.release(b);
      return a;
    },
    getRect: function (a) {
      return this.getBounds(a);
    },
    globalToLocal: function (a) {
      return this.__globalToLocal(a, new Y());
    },
    hitTestObject: function (a) {
      if (null != a && null != a.parent && null != this.parent) {
        var b = this.getBounds(this);
        a = a.getBounds(this);
        return b.intersects(a);
      }
      return !1;
    },
    hitTestPoint: function (a, b, c) {
      null == c && (c = !1);
      return null != this.stage ? this.__hitTest(a, b, c, null, !1, this) : !1;
    },
    invalidate: function () {
      this.__renderDirty ||
        ((this.__renderDirty = !0), this.__setParentRenderDirty());
    },
    localToGlobal: function (a) {
      return this.__getRenderTransform().transformPoint(a);
    },
    removeEventListener: function (a, b, c) {
      null == c && (c = !1);
      db.prototype.removeEventListener.call(this, a, b, c);
      switch (a) {
        case "activate":
        case "deactivate":
        case "enterFrame":
        case "exitFrame":
        case "frameConstructed":
        case "render":
          this.hasEventListener(a) ||
            (hb.__broadcastEvents.exists(a) &&
              Q.remove(hb.__broadcastEvents.get(a), this));
          break;
        case "clearDOM":
        case "renderCairo":
        case "renderCanvas":
        case "renderDOM":
        case "renderOpenGL":
          this.hasEventListener("clearDOM") ||
            this.hasEventListener("renderCairo") ||
            this.hasEventListener("renderCanvas") ||
            this.hasEventListener("renderDOM") ||
            this.hasEventListener("renderOpenGL") ||
            (this.__customRenderEvent = null);
      }
    },
    __cleanup: function () {
      this.__context = this.__canvas = this.__cairo = null;
      null != this.__graphics && this.__graphics.__cleanup();
      null != this.__cacheBitmap &&
        (this.__cacheBitmap.__cleanup(), (this.__cacheBitmap = null));
      null != this.__cacheBitmapData &&
        (this.__cacheBitmapData.dispose(), (this.__cacheBitmapData = null));
    },
    __dispatch: function (a) {
      if (null != this.__eventMap && this.hasEventListener(a.type)) {
        var b = db.prototype.__dispatchEvent.call(this, a);
        return a.__isCanceled ? !0 : b;
      }
      return !0;
    },
    __dispatchChildren: function (a) {},
    __dispatchEvent: function (a) {
      var b = a.bubbles ? this.parent : null,
        c = db.prototype.__dispatchEvent.call(this, a);
      if (a.__isCanceled) return !0;
      null != b &&
        b != this &&
        ((a.eventPhase = 3),
        null == a.target && (a.target = this),
        b.__dispatchEvent(a));
      return c;
    },
    __dispatchWithCapture: function (a) {
      null == a.target && (a.target = this);
      if (null != this.parent)
        if (((a.eventPhase = 1), this.parent == this.stage))
          this.parent.__dispatch(a);
        else {
          for (
            var b = hb.__tempStack.get(), c = this.parent, d = 0;
            null != c;

          )
            b.set(d, c), (c = c.parent), ++d;
          c = 0;
          for (var e = d; c < e; ) {
            var f = c++;
            b.get(d - f - 1).__dispatch(a);
          }
          hb.__tempStack.release(b);
        }
      a.eventPhase = 2;
      return this.__dispatchEvent(a);
    },
    __enterFrame: function (a) {},
    __getBounds: function (a, b) {
      null != this.__graphics && this.__graphics.__getBounds(a, b);
    },
    __getCursor: function () {
      return null;
    },
    __getFilterBounds: function (a, b) {
      this.__getBounds(a, b);
      if (null != this.__filters) {
        b = W.__pool.get();
        for (var c = 0, d = this.__filters; c < d.length; ) {
          var e = d[c];
          ++c;
          b.__expand(
            -e.__leftExtension,
            -e.__topExtension,
            e.__leftExtension + e.__rightExtension,
            e.__topExtension + e.__bottomExtension
          );
        }
        a.width += b.width;
        a.height += b.height;
        a.x += b.x;
        a.y += b.y;
        W.__pool.release(b);
      }
    },
    __getInteractive: function (a) {
      return !1;
    },
    __getLocalBounds: function (a) {
      this.__getBounds(a, this.__transform);
      a.x -= this.__transform.tx;
      a.y -= this.__transform.ty;
    },
    __getRenderBounds: function (a, b) {
      if (null == this.__scrollRect) this.__getBounds(a, b);
      else {
        var c = W.__pool.get();
        c.copyFrom(this.__scrollRect);
        c.__transform(c, b);
        a.__expand(b.tx, b.ty, c.width, c.height);
        W.__pool.release(c);
      }
    },
    __getRenderTransform: function () {
      this.__getWorldTransform();
      return this.__renderTransform;
    },
    __getWorldTransform: function () {
      if (this.__transformDirty || this.__worldTransformInvalid) {
        var a = [],
          b = this;
        if (null == this.parent) this.__update(!0, !1);
        else
          for (; b != this.stage && (a.push(b), (b = b.parent), null != b); );
        for (var c = a.length; 0 <= --c; ) (b = a[c]), b.__update(!0, !1);
      }
      return this.__worldTransform;
    },
    __globalToLocal: function (a, b) {
      this.__getRenderTransform();
      if (a == b) {
        var c = this.__renderTransform,
          d = c.a * c.d - c.b * c.c;
        if (0 == d) (a.x = -c.tx), (a.y = -c.ty);
        else {
          var e = (1 / d) * (c.c * (c.ty - a.y) + c.d * (a.x - c.tx));
          a.y = (1 / d) * (c.a * (a.y - c.ty) + c.b * (c.tx - a.x));
          a.x = e;
        }
      } else
        (c = this.__renderTransform),
          (d = c.a * c.d - c.b * c.c),
          (b.x =
            0 == d
              ? -c.tx
              : (1 / d) * (c.c * (c.ty - a.y) + c.d * (a.x - c.tx))),
          (c = this.__renderTransform),
          (d = c.a * c.d - c.b * c.c),
          (b.y =
            0 == d
              ? -c.ty
              : (1 / d) * (c.a * (a.y - c.ty) + c.b * (c.tx - a.x)));
      return b;
    },
    __hitTest: function (a, b, c, d, e, f) {
      if (null != this.__graphics) {
        if (
          !f.__visible ||
          this.__isMask ||
          (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
        )
          return !1;
        if (this.__graphics.__hitTest(a, b, c, this.__getRenderTransform()))
          return null == d || e || d.push(f), !0;
      }
      return !1;
    },
    __hitTestMask: function (a, b) {
      return null != this.__graphics &&
        this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform())
        ? !0
        : !1;
    },
    __readGraphicsData: function (a, b) {
      null != this.__graphics && this.__graphics.__readGraphicsData(a);
    },
    __renderCairo: function (a) {},
    __renderCairoMask: function (a) {},
    __renderCanvas: function (a) {
      if (
        null == this.get_mask() ||
        (0 < this.get_mask().get_width() && 0 < this.get_mask().get_height())
      )
        if (
          (this.__updateCacheBitmap(a, !1),
          null != this.__cacheBitmap && !this.__isCacheBitmapRender)
        ) {
          var b = this.__cacheBitmap;
          if (b.__renderable) {
            var c = a.__getAlpha(b.__worldAlpha);
            if (
              0 < c &&
              null != b.__bitmapData &&
              b.__bitmapData.__isValid &&
              b.__bitmapData.readable
            ) {
              var d = a.context;
              a.__setBlendMode(b.__worldBlendMode);
              a.__pushMaskObject(b, !1);
              pa.convertToCanvas(b.__bitmapData.image);
              d.globalAlpha = c;
              c = b.__scrollRect;
              a.setTransform(b.__renderTransform, d);
              (a.__allowSmoothing && b.smoothing) ||
                (d.imageSmoothingEnabled = !1);
              null == c
                ? d.drawImage(
                    b.__bitmapData.image.get_src(),
                    0,
                    0,
                    b.__bitmapData.image.width,
                    b.__bitmapData.image.height
                  )
                : d.drawImage(
                    b.__bitmapData.image.get_src(),
                    c.x,
                    c.y,
                    c.width,
                    c.height
                  );
              (a.__allowSmoothing && b.smoothing) ||
                (d.imageSmoothingEnabled = !0);
              a.__popMaskObject(b, !1);
            }
          }
        } else if (
          !(
            (null == this.opaqueBackground && null == this.__graphics) ||
            !this.__renderable ||
            0 >= a.__getAlpha(this.__worldAlpha)
          ) &&
          (null != this.opaqueBackground &&
            !this.__isCacheBitmapRender &&
            0 < this.get_width() &&
            0 < this.get_height() &&
            (a.__setBlendMode(this.__worldBlendMode),
            a.__pushMaskObject(this),
            (b = a.context),
            a.setTransform(this.__renderTransform, b),
            (d = this.opaqueBackground),
            (b.fillStyle =
              "rgb(" +
              ((d >>> 16) & 255) +
              "," +
              ((d >>> 8) & 255) +
              "," +
              (d & 255) +
              ")"),
            b.fillRect(0, 0, this.get_width(), this.get_height()),
            a.__popMaskObject(this)),
          null != this.__graphics && this.__renderable)
        ) {
          var e = a.__getAlpha(this.__worldAlpha);
          if (
            !(0 >= e) &&
            ((b = this.__graphics),
            null != b &&
              (w.render(b, a),
              (d = b.__width),
              (c = b.__height),
              null != b.__canvas))
          ) {
            var f = a.context,
              g = this.__scrollRect;
            0 < d &&
              0 < c &&
              (null == g || (0 < g.width && 0 < g.height)) &&
              (a.__setBlendMode(this.__worldBlendMode),
              a.__pushMaskObject(this),
              (f.globalAlpha = e),
              a.setTransform(b.__worldTransform, f),
              a.__isDOM && ((e = 1 / a.pixelRatio), f.scale(e, e)),
              f.drawImage(b.__canvas, 0, 0, d, c),
              a.__popMaskObject(this));
          }
        }
      this.__renderEvent(a);
    },
    __renderCanvasMask: function (a) {
      null != this.__graphics && w.renderMask(this.__graphics, a);
    },
    __renderDOM: function (a) {
      this.__updateCacheBitmap(a, !1);
      if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
        null != this.opaqueBackground &&
          !this.__isCacheBitmapRender &&
          0 < this.get_width() &&
          this.get_height();
        var b = this.__graphics;
        if (
          null != this.stage &&
          this.__worldVisible &&
          this.__renderable &&
          null != b
        ) {
          w.render(b, a.__canvasRenderer);
          if (
            b.__dirty ||
            this.__worldAlphaChanged ||
            this.__canvas != b.__canvas
          )
            null != b.__canvas
              ? this.__canvas != b.__canvas &&
                (null != this.__canvas && a.element.removeChild(this.__canvas),
                (this.__canvas = b.__canvas),
                (this.__context = b.__context),
                a.__initializeElement(this, this.__canvas))
              : Df.clear(this, a);
          if (null != this.__canvas) {
            a.__pushMaskObject(this);
            var c = this.__renderTransform;
            this.__renderTransform = b.__worldTransform;
            b.__transformDirty &&
              ((b.__transformDirty = !1), (this.__renderTransformChanged = !0));
            a.__updateClip(this);
            a.__applyStyle(this, !0, !0, !0);
            this.__renderTransform = c;
            a.__popMaskObject(this);
          }
        } else Df.clear(this, a);
      } else
        this.__renderDOMClear(a),
          (this.__cacheBitmap.stage = this.stage),
          (b = this.__cacheBitmap),
          null != b.stage &&
          b.__worldVisible &&
          b.__renderable &&
          null != b.__bitmapData &&
          b.__bitmapData.__isValid &&
          b.__bitmapData.readable
            ? (a.__pushMaskObject(b),
              null != b.__bitmapData.image.buffer.__srcImage
                ? Sd.renderImage(b, a)
                : Sd.renderCanvas(b, a),
              a.__popMaskObject(b))
            : Sd.clear(b, a);
      this.__renderEvent(a);
    },
    __renderDOMClear: function (a) {
      Fo.clear(this, a);
    },
    __renderEvent: function (a) {
      if (null != this.__customRenderEvent && this.__renderable) {
        this.__customRenderEvent.allowSmoothing = a.__allowSmoothing;
        this.__customRenderEvent.objectMatrix.copyFrom(this.__renderTransform);
        this.__customRenderEvent.objectColorTransform.__copyFrom(
          this.__worldColorTransform
        );
        this.__customRenderEvent.renderer = a;
        switch (a.__type) {
          case "cairo":
            this.__customRenderEvent.type = "renderCairo";
            break;
          case "canvas":
            this.__customRenderEvent.type = "renderCanvas";
            break;
          case "dom":
            this.__customRenderEvent.type =
              null != this.stage && this.__worldVisible
                ? "renderDOM"
                : "clearDOM";
            break;
          case "opengl":
            a.__cleared || a.__clear();
            a.setShader(this.__worldShader);
            a.__context3D.__flushGL();
            this.__customRenderEvent.type = "renderOpenGL";
            break;
          default:
            return;
        }
        a.__setBlendMode(this.__worldBlendMode);
        a.__pushMaskObject(this);
        this.dispatchEvent(this.__customRenderEvent);
        a.__popMaskObject(this);
        "opengl" == a.__type && a.setViewport();
      }
    },
    __renderGL: function (a) {
      this.__updateCacheBitmap(a, !1);
      if (null != this.__cacheBitmap && !this.__isCacheBitmapRender)
        Ah.render(this.__cacheBitmap, a);
      else if (
        !(
          (null == this.opaqueBackground && null == this.__graphics) ||
          !this.__renderable ||
          0 >= this.__worldAlpha
        )
      ) {
        if (
          null != this.opaqueBackground &&
          !this.__isCacheBitmapRender &&
          0 < this.get_width() &&
          0 < this.get_height()
        ) {
          a.__setBlendMode(this.__worldBlendMode);
          a.__pushMaskObject(this);
          var b = a.__context3D,
            c = W.__pool.get();
          c.setTo(0, 0, this.get_width(), this.get_height());
          a.__pushMaskRect(c, this.__renderTransform);
          var d = this.opaqueBackground;
          b.clear(
            ((d >>> 16) & 255) / 255,
            ((d >>> 8) & 255) / 255,
            (d & 255) / 255,
            1,
            0,
            0,
            1
          );
          a.__popMaskRect();
          a.__popMaskObject(this);
          W.__pool.release(c);
        }
        null != this.__graphics && lg.render(this, a);
      }
      this.__renderEvent(a);
    },
    __renderGLMask: function (a) {
      null != this.__graphics && lg.renderMask(this, a);
    },
    __setParentRenderDirty: function () {
      var a = null != this.__renderParent ? this.__renderParent : this.parent;
      null == a ||
        a.__renderDirty ||
        ((a.__renderDirty = !0), a.__setParentRenderDirty());
    },
    __setRenderDirty: function () {
      this.__renderDirty ||
        ((this.__renderDirty = !0), this.__setParentRenderDirty());
    },
    __setStageReference: function (a) {
      this.stage = a;
    },
    __setTransformDirty: function () {
      this.__transformDirty ||
        ((this.__transformDirty = !0),
        this.__setWorldTransformInvalid(),
        this.__setParentRenderDirty());
    },
    __setWorldTransformInvalid: function () {
      this.__worldTransformInvalid = !0;
    },
    __shouldCacheHardware: function (a) {
      return 1 == a || null != this.__filters
        ? !0
        : 0 == a ||
          (null != this.__graphics && !Ic.isCompatible(this.__graphics))
        ? !1
        : null;
    },
    __stopAllMovieClips: function () {},
    __update: function (a, b) {
      var c = null != this.__renderParent ? this.__renderParent : this.parent;
      this.__isMask && null == c && (c = this.__maskTarget);
      this.__renderable =
        this.__visible &&
        0 != this.__scaleX &&
        0 != this.__scaleY &&
        !this.__isMask &&
        (null == c || !c.__isMask);
      this.__updateTransforms();
      this.__worldTransformInvalid = this.__transformDirty = !1;
      if (!a)
        if (
          (hb.__supportDOM &&
            ((this.__renderTransformChanged = !this.__renderTransform.equals(
              this.__renderTransformCache
            )),
            null == this.__renderTransformCache
              ? (this.__renderTransformCache = this.__renderTransform.clone())
              : this.__renderTransformCache.copyFrom(this.__renderTransform)),
          null != c)
        ) {
          if (hb.__supportDOM) {
            var d = c.__worldVisible && this.__visible;
            this.__worldVisibleChanged = this.__worldVisible != d;
            this.__worldVisible = d;
            d = this.get_alpha() * c.__worldAlpha;
            this.__worldAlphaChanged = this.__worldAlpha != d;
            this.__worldAlpha = d;
          } else this.__worldAlpha = this.get_alpha() * c.__worldAlpha;
          null != this.__objectTransform
            ? (this.__worldColorTransform.__copyFrom(
                this.__objectTransform.get_colorTransform()
              ),
              this.__worldColorTransform.__combine(c.__worldColorTransform))
            : this.__worldColorTransform.__copyFrom(c.__worldColorTransform);
          this.__worldBlendMode =
            null == this.__blendMode || 10 == this.__blendMode
              ? c.__worldBlendMode
              : this.__blendMode;
          this.__worldShader =
            null == this.__shader ? c.__shader : this.__shader;
        } else
          (this.__worldAlpha = this.get_alpha()),
            hb.__supportDOM &&
              ((this.__worldVisibleChanged =
                this.__worldVisible != this.__visible),
              (this.__worldVisible = this.__visible),
              (this.__worldAlphaChanged =
                this.__worldAlpha != this.get_alpha())),
            null != this.__objectTransform
              ? this.__worldColorTransform.__copyFrom(
                  this.__objectTransform.get_colorTransform()
                )
              : this.__worldColorTransform.__identity();
      b && null != this.get_mask() && this.get_mask().__update(a, !0);
    },
    __updateCacheBitmap: function (a, b) {
      if (this.__isCacheBitmapRender) return !1;
      var c = sc.__pool.get();
      c.__copyFrom(this.__worldColorTransform);
      null != a.__worldColorTransform && c.__combine(a.__worldColorTransform);
      var d = !1;
      if (
        this.get_cacheAsBitmap() ||
        ("opengl" != a.__type && !c.__isDefault(!0))
      ) {
        d = null;
        var e =
            (b =
              null == this.__cacheBitmap ||
              (this.__renderDirty &&
                (b ||
                  (null != this.__children && 0 < this.__children.length) ||
                  (null != this.__graphics && this.__graphics.__dirty))) ||
              this.opaqueBackground != this.__cacheBitmapBackground ||
              ("opengl" != a.__type &&
                !this.__cacheBitmapColorTransform.__equals(c, !0))) ||
            !this.__cacheBitmap.__worldTransform.equals(this.__worldTransform),
          f = null != this.__filters;
        if (f && !b)
          for (var g = 0, h = this.__filters; g < h.length; ) {
            var n = h[g];
            ++g;
            if (n.__renderDirty) {
              b = !0;
              break;
            }
          }
        null == this.__cacheBitmapMatrix &&
          (this.__cacheBitmapMatrix = new ya());
        var k =
          null != this.__cacheAsBitmapMatrix
            ? this.__cacheAsBitmapMatrix
            : this.__renderTransform;
        b ||
          (k.a == this.__cacheBitmapMatrix.a &&
            k.b == this.__cacheBitmapMatrix.b &&
            k.c == this.__cacheBitmapMatrix.c &&
            k.d == this.__cacheBitmapMatrix.d) ||
          (b = !0);
        !b &&
          "opengl" != a.__type &&
          null != this.__cacheBitmapData &&
          null != this.__cacheBitmapData.image &&
          this.__cacheBitmapData.image.version <
            this.__cacheBitmapData.__textureVersion &&
          (b = !0);
        this.__cacheBitmapMatrix.copyFrom(k);
        this.__cacheBitmapMatrix.tx = 0;
        var G = (n = h = g = this.__cacheBitmapMatrix.ty = 0),
          l = 0,
          m = 0;
        if (e || b)
          (d = W.__pool.get()),
            this.__getFilterBounds(d, this.__cacheBitmapMatrix),
            (n = Math.ceil(d.width)),
            (G = Math.ceil(d.height)),
            (l = 0 < d.x ? Math.ceil(d.x) : Math.floor(d.x)),
            (m = 0 < d.y ? Math.ceil(d.y) : Math.floor(d.y)),
            null != this.__cacheBitmapData
              ? n > this.__cacheBitmapData.width ||
                G > this.__cacheBitmapData.height
                ? ((g = Math.ceil(
                    Math.max(1.25 * n, this.__cacheBitmapData.width)
                  )),
                  (h = Math.ceil(
                    Math.max(1.25 * G, this.__cacheBitmapData.height)
                  )),
                  (b = !0))
                : ((g = this.__cacheBitmapData.width),
                  (h = this.__cacheBitmapData.height))
              : ((g = n), (h = G));
        if (b)
          if (
            ((e = !0),
            (this.__cacheBitmapBackground = this.opaqueBackground),
            0.5 <= n && 0.5 <= G)
          ) {
            var r = null != this.opaqueBackground && (g != n || h != G),
              p =
                null != this.opaqueBackground
                  ? -16777216 | this.opaqueBackground
                  : 0,
              q = r ? 0 : p,
              t = "opengl" == a.__type;
            null == this.__cacheBitmapData ||
            g > this.__cacheBitmapData.width ||
            h > this.__cacheBitmapData.height
              ? ((this.__cacheBitmapData = new sa(g, h, !0, q)),
                null == this.__cacheBitmap && (this.__cacheBitmap = new ic()),
                (this.__cacheBitmap.__bitmapData = this.__cacheBitmapData),
                (this.__cacheBitmapRenderer = null))
              : this.__cacheBitmapData.__fillRect(
                  this.__cacheBitmapData.rect,
                  q,
                  t
                );
            r &&
              (d.setTo(0, 0, n, G), this.__cacheBitmapData.__fillRect(d, p, t));
          } else
            return (
              sc.__pool.release(c),
              (this.__cacheBitmapRenderer =
                this.__cacheBitmapData3 =
                this.__cacheBitmapData2 =
                this.__cacheBitmapData =
                this.__cacheBitmap =
                  null),
              !0
            );
        else
          (this.__cacheBitmapData = this.__cacheBitmap.get_bitmapData()),
            (this.__cacheBitmapData3 = this.__cacheBitmapData2 = null);
        if (e || b)
          this.__cacheBitmap.__worldTransform.copyFrom(this.__worldTransform),
            k == this.__renderTransform
              ? (this.__cacheBitmap.__renderTransform.identity(),
                (this.__cacheBitmap.__renderTransform.tx =
                  this.__renderTransform.tx + l),
                (this.__cacheBitmap.__renderTransform.ty =
                  this.__renderTransform.ty + m))
              : (this.__cacheBitmap.__renderTransform.copyFrom(
                  this.__cacheBitmapMatrix
                ),
                this.__cacheBitmap.__renderTransform.invert(),
                this.__cacheBitmap.__renderTransform.concat(
                  this.__renderTransform
                ),
                (this.__cacheBitmap.__renderTransform.tx += l),
                (this.__cacheBitmap.__renderTransform.ty += m));
        this.__cacheBitmap.smoothing = a.__allowSmoothing;
        this.__cacheBitmap.__renderable = this.__renderable;
        this.__cacheBitmap.__worldAlpha = this.__worldAlpha;
        this.__cacheBitmap.__worldBlendMode = this.__worldBlendMode;
        this.__cacheBitmap.__worldShader = this.__worldShader;
        this.__cacheBitmap.__scrollRect = this.__scrollRect;
        this.__cacheBitmap.set_mask(this.__mask);
        if (b) {
          k = a.__type;
          "opengl" == k &&
            0 == this.__shouldCacheHardware(null) &&
            (k = "canvas");
          if (
            null == this.__cacheBitmapRenderer ||
            k != this.__cacheBitmapRenderer.__type
          )
            "opengl" == k
              ? (this.__cacheBitmapRenderer = new Ab(
                  u.__cast(a, Ab).__context3D,
                  this.__cacheBitmapData
                ))
              : (null == this.__cacheBitmapData.image &&
                  ((this.__cacheBitmapData = new sa(
                    g,
                    h,
                    !0,
                    null != this.opaqueBackground
                      ? -16777216 | this.opaqueBackground
                      : 0
                  )),
                  (this.__cacheBitmap.__bitmapData = this.__cacheBitmapData)),
                pa.convertToCanvas(this.__cacheBitmapData.image),
                (this.__cacheBitmapRenderer = new mh(
                  this.__cacheBitmapData.image.buffer.__srcContext
                ))),
              (this.__cacheBitmapRenderer.__worldTransform = new ya()),
              (this.__cacheBitmapRenderer.__worldColorTransform = new sc());
          null == this.__cacheBitmapColorTransform &&
            (this.__cacheBitmapColorTransform = new sc());
          this.__cacheBitmapRenderer.__stage = this.stage;
          this.__cacheBitmapRenderer.__allowSmoothing = a.__allowSmoothing;
          this.__cacheBitmapRenderer.__setBlendMode(10);
          this.__cacheBitmapRenderer.__worldAlpha = 1 / this.__worldAlpha;
          this.__cacheBitmapRenderer.__worldTransform.copyFrom(
            this.__renderTransform
          );
          this.__cacheBitmapRenderer.__worldTransform.invert();
          this.__cacheBitmapRenderer.__worldTransform.concat(
            this.__cacheBitmapMatrix
          );
          this.__cacheBitmapRenderer.__worldTransform.tx -= l;
          this.__cacheBitmapRenderer.__worldTransform.ty -= m;
          this.__cacheBitmapRenderer.__worldColorTransform.__copyFrom(c);
          this.__cacheBitmapRenderer.__worldColorTransform.__invert();
          this.__isCacheBitmapRender = !0;
          if ("opengl" == this.__cacheBitmapRenderer.__type) {
            l = this.__cacheBitmapRenderer;
            m = l.__context3D;
            k = m.__state.renderToTexture;
            r = m.__state.renderToTextureDepthStencil;
            p = m.__state.renderToTextureAntiAlias;
            q = m.__state.renderToTextureSurfaceSelector;
            t = a.__blendMode;
            a.__suspendClipAndMask();
            l.__copyShader(a);
            this.__cacheBitmapData.__setUVRect(m, 0, 0, n, G);
            l.__setRenderTarget(this.__cacheBitmapData);
            null != this.__cacheBitmapData.image &&
              (this.__cacheBitmapData.__textureVersion =
                this.__cacheBitmapData.image.version + 1);
            this.__cacheBitmapData.__drawGL(this, l);
            if (f) {
              var na = !1;
              f = 0;
              for (var x = this.__filters; f < x.length; ) {
                var v = x[f];
                ++f;
                v.__preserveObject && (na = !0);
              }
              f = this.__cacheBitmapData;
              v = null;
              null == this.__cacheBitmapData2 ||
              g > this.__cacheBitmapData2.width ||
              h > this.__cacheBitmapData2.height
                ? (this.__cacheBitmapData2 = new sa(g, h, !0, 0))
                : (this.__cacheBitmapData2.fillRect(
                    this.__cacheBitmapData2.rect,
                    0
                  ),
                  null != this.__cacheBitmapData2.image &&
                    (this.__cacheBitmapData2.__textureVersion =
                      this.__cacheBitmapData2.image.version + 1));
              this.__cacheBitmapData2.__setUVRect(m, 0, 0, n, G);
              x = this.__cacheBitmapData2;
              na &&
                (null == this.__cacheBitmapData3 ||
                g > this.__cacheBitmapData3.width ||
                h > this.__cacheBitmapData3.height
                  ? (this.__cacheBitmapData3 = new sa(g, h, !0, 0))
                  : (this.__cacheBitmapData3.fillRect(
                      this.__cacheBitmapData3.rect,
                      0
                    ),
                    null != this.__cacheBitmapData3.image &&
                      (this.__cacheBitmapData3.__textureVersion =
                        this.__cacheBitmapData3.image.version + 1)),
                this.__cacheBitmapData3.__setUVRect(m, 0, 0, n, G),
                (v = this.__cacheBitmapData3));
              l.__setBlendMode(10);
              l.__worldAlpha = 1;
              l.__worldTransform.identity();
              l.__worldColorTransform.__identity();
              g = 0;
              for (h = this.__filters; g < h.length; ) {
                n = h[g];
                ++g;
                n.__preserveObject &&
                  (l.__setRenderTarget(v),
                  l.__renderFilterPass(
                    f,
                    l.__defaultDisplayShader,
                    n.__smooth
                  ));
                G = 0;
                for (na = n.__numShaderPasses; G < na; ) {
                  var B = G++;
                  B = n.__initShader(l, B);
                  l.__setBlendMode(n.__shaderBlendMode);
                  l.__setRenderTarget(x);
                  l.__renderFilterPass(f, B, n.__smooth);
                  B = f;
                  f = x;
                  x = B;
                }
                n.__preserveObject &&
                  (l.__setBlendMode(10),
                  l.__setRenderTarget(f),
                  l.__renderFilterPass(
                    v,
                    l.__defaultDisplayShader,
                    n.__smooth,
                    !1
                  ));
                n.__renderDirty = !1;
              }
              this.__cacheBitmap.__bitmapData = f;
            }
            a.__blendMode = 10;
            a.__setBlendMode(t);
            a.__copyShader(l);
            null != k
              ? m.setRenderToTexture(k, r, p, q)
              : m.setRenderToBackBuffer();
            a.__resumeClipAndMask(l);
            a.setViewport();
            this.__cacheBitmapColorTransform.__copyFrom(c);
          } else {
            this.__cacheBitmapData.__drawCanvas(
              this,
              this.__cacheBitmapRenderer
            );
            if (f) {
              m = a = !1;
              n = 0;
              for (G = this.__filters; n < G.length; )
                (l = G[n]),
                  ++n,
                  l.__needSecondBitmapData && (a = !0),
                  l.__preserveObject && (m = !0);
              n = this.__cacheBitmapData;
              l = null;
              a
                ? (null == this.__cacheBitmapData2 ||
                  null == this.__cacheBitmapData2.image ||
                  g > this.__cacheBitmapData2.width ||
                  h > this.__cacheBitmapData2.height
                    ? (this.__cacheBitmapData2 = new sa(g, h, !0, 0))
                    : this.__cacheBitmapData2.fillRect(
                        this.__cacheBitmapData2.rect,
                        0
                      ),
                  (G = this.__cacheBitmapData2))
                : (G = n);
              m &&
                (null == this.__cacheBitmapData3 ||
                null == this.__cacheBitmapData3.image ||
                g > this.__cacheBitmapData3.width ||
                h > this.__cacheBitmapData3.height
                  ? (this.__cacheBitmapData3 = new sa(g, h, !0, 0))
                  : this.__cacheBitmapData3.fillRect(
                      this.__cacheBitmapData3.rect,
                      0
                    ),
                (l = this.__cacheBitmapData3));
              null == this.__tempPoint && (this.__tempPoint = new Y());
              g = this.__tempPoint;
              h = 0;
              for (m = this.__filters; h < m.length; )
                (r = m[h]),
                  ++h,
                  r.__preserveObject && l.copyPixels(n, n.rect, g),
                  (k = r.__applyFilter(G, n, n.rect, g)),
                  r.__preserveObject &&
                    k.draw(
                      l,
                      null,
                      null != this.__objectTransform
                        ? this.__objectTransform.get_colorTransform()
                        : null
                    ),
                  (r.__renderDirty = !1),
                  a && k == G && ((k = n), (n = G), (G = k));
              this.__cacheBitmapData != n &&
                ((k = this.__cacheBitmapData),
                (this.__cacheBitmapData = n),
                (this.__cacheBitmapData2 = k),
                (this.__cacheBitmap.__bitmapData = this.__cacheBitmapData),
                (this.__cacheBitmapRenderer = null));
              this.__cacheBitmap.__imageVersion =
                this.__cacheBitmapData.__textureVersion;
            }
            this.__cacheBitmapColorTransform.__copyFrom(c);
            this.__cacheBitmapColorTransform.__isDefault(!0) ||
              ((this.__cacheBitmapColorTransform.alphaMultiplier = 1),
              this.__cacheBitmapData.colorTransform(
                this.__cacheBitmapData.rect,
                this.__cacheBitmapColorTransform
              ));
          }
          this.__isCacheBitmapRender = !1;
        }
        (e || b) && W.__pool.release(d);
        d = e;
      } else
        null != this.__cacheBitmap &&
          ("dom" == a.__type && this.__cacheBitmap.__renderDOMClear(a),
          (this.__cacheBitmapRenderer =
            this.__cacheBitmapColorTransform =
            this.__cacheBitmapData3 =
            this.__cacheBitmapData2 =
            this.__cacheBitmapData =
            this.__cacheBitmap =
              null),
          (d = !0));
      sc.__pool.release(c);
      return d;
    },
    __updateTransforms: function (a) {
      var b = null != a;
      a = b ? a : this.__transform;
      null == this.__worldTransform && (this.__worldTransform = new ya());
      null == this.__renderTransform && (this.__renderTransform = new ya());
      var c = null != this.__renderParent ? this.__renderParent : this.parent;
      if (b || null == this.parent) this.__worldTransform.copyFrom(a);
      else {
        var d = this.parent.__worldTransform,
          e = this.__worldTransform;
        e.a = a.a * d.a + a.b * d.c;
        e.b = a.a * d.b + a.b * d.d;
        e.c = a.c * d.a + a.d * d.c;
        e.d = a.c * d.b + a.d * d.d;
        e.tx = a.tx * d.a + a.ty * d.c + d.tx;
        e.ty = a.tx * d.b + a.ty * d.d + d.ty;
      }
      b || null == c
        ? this.__renderTransform.copyFrom(a)
        : ((b = c.__renderTransform),
          (c = this.__renderTransform),
          (c.a = a.a * b.a + a.b * b.c),
          (c.b = a.a * b.b + a.b * b.d),
          (c.c = a.c * b.a + a.d * b.c),
          (c.d = a.c * b.b + a.d * b.d),
          (c.tx = a.tx * b.a + a.ty * b.c + b.tx),
          (c.ty = a.tx * b.b + a.ty * b.d + b.ty));
      null != this.__scrollRect &&
        ((a = this.__renderTransform),
        (b = -this.__scrollRect.x),
        (c = -this.__scrollRect.y),
        (a.tx = b * a.a + c * a.c + a.tx),
        (a.ty = b * a.b + c * a.d + a.ty));
    },
    get_alpha: function () {
      return this.__alpha;
    },
    set_alpha: function (a) {
      1 < a && (a = 1);
      0 > a && (a = 0);
      a == this.__alpha ||
        this.__renderDirty ||
        ((this.__renderDirty = !0), this.__setParentRenderDirty());
      return (this.__alpha = a);
    },
    get_blendMode: function () {
      return this.__blendMode;
    },
    set_blendMode: function (a) {
      null == a && (a = 10);
      a == this.__blendMode ||
        this.__renderDirty ||
        ((this.__renderDirty = !0), this.__setParentRenderDirty());
      return (this.__blendMode = a);
    },
    get_cacheAsBitmap: function () {
      return null == this.__filters ? this.__cacheAsBitmap : !0;
    },
    set_cacheAsBitmap: function (a) {
      a == this.__cacheAsBitmap ||
        this.__renderDirty ||
        ((this.__renderDirty = !0), this.__setParentRenderDirty());
      return (this.__cacheAsBitmap = a);
    },
    get_cacheAsBitmapMatrix: function () {
      return this.__cacheAsBitmapMatrix;
    },
    set_cacheAsBitmapMatrix: function (a) {
      this.__renderDirty ||
        ((this.__renderDirty = !0), this.__setParentRenderDirty());
      return (this.__cacheAsBitmapMatrix = null != a ? a.clone() : a);
    },
    get_filters: function () {
      return null == this.__filters ? [] : this.__filters.slice();
    },
    set_filters: function (a) {
      null != a && 0 < a.length
        ? ((this.__filters = a),
          this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty()))
        : null != this.__filters &&
          ((this.__filters = null),
          this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      return a;
    },
    get_height: function () {
      var a = W.__pool.get();
      this.__getLocalBounds(a);
      var b = a.height;
      W.__pool.release(a);
      return b;
    },
    set_height: function (a) {
      var b = W.__pool.get(),
        c = ya.__pool.get();
      c.identity();
      this.__getBounds(b, c);
      a != b.height ? this.set_scaleY(a / b.height) : this.set_scaleY(1);
      W.__pool.release(b);
      ya.__pool.release(c);
      return a;
    },
    get_loaderInfo: function () {
      return null != this.stage ? Ec.current.__loaderInfo : null;
    },
    get_mask: function () {
      return this.__mask;
    },
    set_mask: function (a) {
      if (a == this.__mask) return a;
      a != this.__mask &&
        (this.__setTransformDirty(),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      if (null != this.__mask) {
        this.__mask.__isMask = !1;
        this.__mask.__maskTarget = null;
        this.__mask.__setTransformDirty();
        var b = this.__mask;
        b.__renderDirty || ((b.__renderDirty = !0), b.__setParentRenderDirty());
      }
      null != a &&
        ((a.__isMask = !0),
        (a.__maskTarget = this),
        a.__setWorldTransformInvalid());
      null != this.__cacheBitmap &&
        this.__cacheBitmap.get_mask() != a &&
        this.__cacheBitmap.set_mask(a);
      return (this.__mask = a);
    },
    get_mouseX: function () {
      var a =
          null != this.stage ? this.stage.__mouseX : Ec.current.stage.__mouseX,
        b =
          null != this.stage ? this.stage.__mouseY : Ec.current.stage.__mouseY,
        c = this.__getRenderTransform(),
        d = c.a * c.d - c.b * c.c;
      return 0 == d ? -c.tx : (1 / d) * (c.c * (c.ty - b) + c.d * (a - c.tx));
    },
    get_mouseY: function () {
      var a =
          null != this.stage ? this.stage.__mouseX : Ec.current.stage.__mouseX,
        b =
          null != this.stage ? this.stage.__mouseY : Ec.current.stage.__mouseY,
        c = this.__getRenderTransform(),
        d = c.a * c.d - c.b * c.c;
      return 0 == d ? -c.ty : (1 / d) * (c.a * (b - c.ty) + c.b * (c.tx - a));
    },
    get_name: function () {
      return this.__name;
    },
    set_name: function (a) {
      return (this.__name = a);
    },
    get_root: function () {
      return null != this.stage ? Ec.current : null;
    },
    get_rotation: function () {
      return this.__rotation;
    },
    set_rotation: function (a) {
      if (a != this.__rotation) {
        this.__rotation = a;
        var b = (Math.PI / 180) * this.__rotation;
        this.__rotationSine = Math.sin(b);
        this.__rotationCosine = Math.cos(b);
        this.__transform.a = this.__rotationCosine * this.__scaleX;
        this.__transform.b = this.__rotationSine * this.__scaleX;
        this.__transform.c = -this.__rotationSine * this.__scaleY;
        this.__transform.d = this.__rotationCosine * this.__scaleY;
        this.__setTransformDirty();
      }
      return a;
    },
    get_scaleX: function () {
      return this.__scaleX;
    },
    set_scaleX: function (a) {
      if (a != this.__scaleX)
        if (((this.__scaleX = a), 0 == this.__transform.b))
          a != this.__transform.a && this.__setTransformDirty(),
            (this.__transform.a = a);
        else {
          var b = this.__rotationCosine * a,
            c = this.__rotationSine * a;
          (this.__transform.a == b && this.__transform.b == c) ||
            this.__setTransformDirty();
          this.__transform.a = b;
          this.__transform.b = c;
        }
      return a;
    },
    get_scaleY: function () {
      return this.__scaleY;
    },
    set_scaleY: function (a) {
      if (a != this.__scaleY)
        if (((this.__scaleY = a), 0 == this.__transform.c))
          a != this.__transform.d && this.__setTransformDirty(),
            (this.__transform.d = a);
        else {
          var b = -this.__rotationSine * a,
            c = this.__rotationCosine * a;
          (this.__transform.d == c && this.__transform.c == b) ||
            this.__setTransformDirty();
          this.__transform.c = b;
          this.__transform.d = c;
        }
      return a;
    },
    get_scrollRect: function () {
      return null == this.__scrollRect ? null : this.__scrollRect.clone();
    },
    set_scrollRect: function (a) {
      a != this.__scrollRect &&
        (this.__setTransformDirty(),
        hb.__supportDOM &&
          !this.__renderDirty &&
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      return (this.__scrollRect = a);
    },
    get_shader: function () {
      return this.__shader;
    },
    set_shader: function (a) {
      this.__shader = a;
      this.__renderDirty ||
        ((this.__renderDirty = !0), this.__setParentRenderDirty());
      return a;
    },
    get_transform: function () {
      null == this.__objectTransform && (this.__objectTransform = new rl(this));
      return this.__objectTransform;
    },
    set_transform: function (a) {
      if (null == a)
        throw new v(new Vj("Parameter transform must be non-null."));
      null == this.__objectTransform && (this.__objectTransform = new rl(this));
      this.__setTransformDirty();
      this.__objectTransform.set_matrix(a.get_matrix());
      this.__objectTransform
        .get_colorTransform()
        .__equals(a.get_colorTransform(), !0) ||
        (this.__objectTransform
          .get_colorTransform()
          .__copyFrom(a.get_colorTransform()),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      return this.__objectTransform;
    },
    get_visible: function () {
      return this.__visible;
    },
    set_visible: function (a) {
      a == this.__visible ||
        this.__renderDirty ||
        ((this.__renderDirty = !0), this.__setParentRenderDirty());
      return (this.__visible = a);
    },
    get_width: function () {
      var a = W.__pool.get();
      this.__getLocalBounds(a);
      var b = a.width;
      W.__pool.release(a);
      return b;
    },
    set_width: function (a) {
      var b = W.__pool.get(),
        c = ya.__pool.get();
      c.identity();
      this.__getBounds(b, c);
      a != b.width ? this.set_scaleX(a / b.width) : this.set_scaleX(1);
      W.__pool.release(b);
      ya.__pool.release(c);
      return a;
    },
    get_x: function () {
      return this.__transform.tx;
    },
    set_x: function (a) {
      a != this.__transform.tx && this.__setTransformDirty();
      return (this.__transform.tx = a);
    },
    get_y: function () {
      return this.__transform.ty;
    },
    set_y: function (a) {
      a != this.__transform.ty && this.__setTransformDirty();
      return (this.__transform.ty = a);
    },
    __class__: hb,
    __properties__: {
      set_y: "set_y",
      get_y: "get_y",
      set_x: "set_x",
      get_x: "get_x",
      set_width: "set_width",
      get_width: "get_width",
      set_visible: "set_visible",
      get_visible: "get_visible",
      set_transform: "set_transform",
      get_transform: "get_transform",
      set_shader: "set_shader",
      get_shader: "get_shader",
      set_scrollRect: "set_scrollRect",
      get_scrollRect: "get_scrollRect",
      set_scaleY: "set_scaleY",
      get_scaleY: "get_scaleY",
      set_scaleX: "set_scaleX",
      get_scaleX: "get_scaleX",
      set_rotation: "set_rotation",
      get_rotation: "get_rotation",
      get_root: "get_root",
      set_name: "set_name",
      get_name: "get_name",
      get_mouseY: "get_mouseY",
      get_mouseX: "get_mouseX",
      set_mask: "set_mask",
      get_mask: "get_mask",
      get_loaderInfo: "get_loaderInfo",
      set_height: "set_height",
      get_height: "get_height",
      set_filters: "set_filters",
      get_filters: "get_filters",
      set_cacheAsBitmapMatrix: "set_cacheAsBitmapMatrix",
      get_cacheAsBitmapMatrix: "get_cacheAsBitmapMatrix",
      set_cacheAsBitmap: "set_cacheAsBitmap",
      get_cacheAsBitmap: "get_cacheAsBitmap",
      set_blendMode: "set_blendMode",
      get_blendMode: "get_blendMode",
      set_alpha: "set_alpha",
      get_alpha: "get_alpha",
    },
  });
  var Vb = function () {
    hb.call(this);
    this.doubleClickEnabled = !1;
    this.mouseEnabled = !0;
    this.needsSoftKeyboard = !1;
    this.__tabEnabled = null;
    this.__tabIndex = -1;
  };
  p["openfl.display.InteractiveObject"] = Vb;
  Vb.__name__ = ["openfl", "display", "InteractiveObject"];
  Vb.__super__ = hb;
  Vb.prototype = x(hb.prototype, {
    doubleClickEnabled: null,
    focusRect: null,
    mouseEnabled: null,
    needsSoftKeyboard: null,
    softKeyboardInputAreaOfInterest: null,
    __tabEnabled: null,
    __tabIndex: null,
    requestSoftKeyboard: function () {
      Ec.notImplemented({
        fileName: "InteractiveObject.hx",
        lineNumber: 1185,
        className: "openfl.display.InteractiveObject",
        methodName: "requestSoftKeyboard",
      });
      return !1;
    },
    __allowMouseFocus: function () {
      return this.get_tabEnabled();
    },
    __getInteractive: function (a) {
      null != a &&
        (a.push(this), null != this.parent && this.parent.__getInteractive(a));
      return !0;
    },
    __hitTest: function (a, b, c, d, e, f) {
      return !f.get_visible() || this.__isMask || (e && !this.mouseEnabled)
        ? !1
        : hb.prototype.__hitTest.call(this, a, b, c, d, e, f);
    },
    __tabTest: function (a) {
      this.get_tabEnabled() && a.push(this);
    },
    get_tabEnabled: function () {
      return 1 == this.__tabEnabled ? !0 : !1;
    },
    set_tabEnabled: function (a) {
      this.__tabEnabled != a &&
        ((this.__tabEnabled = a),
        this.dispatchEvent(new ma("tabEnabledChange", !0, !1)));
      return this.__tabEnabled;
    },
    get_tabIndex: function () {
      return this.__tabIndex;
    },
    set_tabIndex: function (a) {
      if (this.__tabIndex != a) {
        if (-1 > a)
          throw new v(
            new Ri("Parameter tabIndex must be a non-negative number; got " + a)
          );
        this.__tabIndex = a;
        this.dispatchEvent(new ma("tabIndexChange", !0, !1));
      }
      return this.__tabIndex;
    },
    __class__: Vb,
    __properties__: x(hb.prototype.__properties__, {
      set_tabIndex: "set_tabIndex",
      get_tabIndex: "get_tabIndex",
      set_tabEnabled: "set_tabEnabled",
      get_tabEnabled: "get_tabEnabled",
    }),
  });
  var wd = function () {
    Vb.call(this);
    this.__tabChildren = this.mouseChildren = !0;
    this.__children = [];
    this.__removedChildren = Oa.toObjectVector(null);
  };
  p["openfl.display.DisplayObjectContainer"] = wd;
  wd.__name__ = ["openfl", "display", "DisplayObjectContainer"];
  wd.__super__ = Vb;
  wd.prototype = x(Vb.prototype, {
    mouseChildren: null,
    __removedChildren: null,
    __tabChildren: null,
    addChild: function (a) {
      return this.addChildAt(a, this.get_numChildren());
    },
    addChildAt: function (a, b) {
      if (null == a)
        throw (
          ((a = new Vj("Error #2007: Parameter child must be non-null.")),
          (a.errorID = 2007),
          new v(a))
        );
      if (a.stage == a)
        throw (
          ((a = new Si(
            "Error #3783: A Stage object cannot be added as the child of another object."
          )),
          (a.errorID = 3783),
          new v(a))
        );
      if (b > this.__children.length || 0 > b)
        throw new v("Invalid index position " + b);
      if (a.parent == this)
        this.__children[b] != a &&
          (Q.remove(this.__children, a),
          this.__children.splice(b, 0, a),
          this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      else {
        null != a.parent && a.parent.removeChild(a);
        this.__children.splice(b, 0, a);
        a.parent = this;
        (b = null != this.stage && null == a.stage) &&
          this.__setStageReference(this.stage);
        a.__setTransformDirty();
        a.__renderDirty || ((a.__renderDirty = !0), a.__setParentRenderDirty());
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty());
        var c = new ma("added", !0);
        c.target = a;
        a.__dispatchWithCapture(c);
        b &&
          ((b = new ma("addedToStage", !1, !1)),
          a.__dispatchWithCapture(b),
          a.__dispatchChildren(b));
      }
      return a;
    },
    areInaccessibleObjectsUnderPoint: function (a) {
      return !1;
    },
    contains: function (a) {
      for (; a != this && null != a; ) a = a.parent;
      return a == this;
    },
    getChildAt: function (a) {
      return 0 <= a && a < this.__children.length ? this.__children[a] : null;
    },
    getChildByName: function (a) {
      for (var b = 0, c = this.__children; b < c.length; ) {
        var d = c[b];
        ++b;
        if (d.get_name() == a) return d;
      }
      return null;
    },
    getChildIndex: function (a) {
      for (var b = 0, c = this.__children.length; b < c; ) {
        var d = b++;
        if (this.__children[d] == a) return d;
      }
      return -1;
    },
    getObjectsUnderPoint: function (a) {
      var b = [];
      this.__hitTest(a.x, a.y, !1, b, !1, this);
      b.reverse();
      return b;
    },
    removeChild: function (a) {
      if (null != a && a.parent == this) {
        a.__setTransformDirty();
        a.__renderDirty || ((a.__renderDirty = !0), a.__setParentRenderDirty());
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty());
        var b = new ma("removed", !0);
        a.__dispatchWithCapture(b);
        null != this.stage &&
          (null != a.stage &&
            this.stage.get_focus() == a &&
            this.stage.set_focus(null),
          (b = new ma("removedFromStage", !1, !1)),
          a.__dispatchWithCapture(b),
          a.__dispatchChildren(b),
          a.__setStageReference(null));
        a.parent = null;
        Q.remove(this.__children, a);
        this.__removedChildren.push(a);
        a.__setTransformDirty();
      }
      return a;
    },
    removeChildAt: function (a) {
      return 0 <= a && a < this.__children.length
        ? this.removeChild(this.__children[a])
        : null;
    },
    removeChildren: function (a, b) {
      null == b && (b = 2147483647);
      null == a && (a = 0);
      if (2147483647 == b && ((b = this.__children.length - 1), 0 > b)) return;
      if (!(a > this.__children.length - 1)) {
        if (b < a || 0 > a || b > this.__children.length)
          throw new v(new Ri("The supplied index is out of bounds."));
        for (b -= a; 0 <= b; ) this.removeChildAt(a), --b;
      }
    },
    resolve: function (a) {
      if (null == this.__children) return null;
      for (var b = 0, c = this.__children; b < c.length; ) {
        var d = c[b];
        ++b;
        if (d.get_name() == a) return d;
      }
      return null;
    },
    setChildIndex: function (a, b) {
      0 <= b &&
        b <= this.__children.length &&
        a.parent == this &&
        (Q.remove(this.__children, a), this.__children.splice(b, 0, a));
    },
    stopAllMovieClips: function () {
      this.__stopAllMovieClips();
    },
    swapChildren: function (a, b) {
      if (a.parent == this && b.parent == this) {
        var c = this.__children.indexOf(a),
          d = this.__children.indexOf(b);
        this.__children[c] = b;
        this.__children[d] = a;
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty());
      }
    },
    swapChildrenAt: function (a, b) {
      var c = this.__children[a];
      this.__children[a] = this.__children[b];
      this.__children[b] = c;
      this.__renderDirty ||
        ((this.__renderDirty = !0), this.__setParentRenderDirty());
    },
    __cleanup: function () {
      Vb.prototype.__cleanup.call(this);
      for (var a = 0, b = this.__children; a < b.length; ) {
        var c = b[a];
        ++a;
        c.__cleanup();
      }
      a = 0;
      for (b = this.__removedChildren; a < b.get_length(); )
        (c = b.get(a)), ++a, null == c.stage && c.__cleanup();
      this.__removedChildren.set_length(0);
    },
    __cleanupRemovedChildren: function () {
      for (var a = 0, b = this.__removedChildren; a < b.get_length(); ) {
        var c = b.get(a);
        ++a;
        null == c.stage && c.__cleanup();
      }
      this.__removedChildren.set_length(0);
    },
    __dispatchChildren: function (a) {
      if (null != this.__children)
        for (var b = 0, c = this.__children; b < c.length; ) {
          var d = c[b];
          ++b;
          a.target = d;
          if (!d.__dispatchWithCapture(a)) break;
          d.__dispatchChildren(a);
        }
    },
    __enterFrame: function (a) {
      for (var b = 0, c = this.__children; b < c.length; ) {
        var d = c[b];
        ++b;
        d.__enterFrame(a);
      }
    },
    __getBounds: function (a, b) {
      Vb.prototype.__getBounds.call(this, a, b);
      if (0 != this.__children.length) {
        for (
          var c = ya.__pool.get(), d = 0, e = this.__children;
          d < e.length;

        ) {
          var f = e[d];
          ++d;
          if (0 != f.__scaleX && 0 != f.__scaleY) {
            var g = f.__transform;
            c.a = g.a * b.a + g.b * b.c;
            c.b = g.a * b.b + g.b * b.d;
            c.c = g.c * b.a + g.d * b.c;
            c.d = g.c * b.b + g.d * b.d;
            c.tx = g.tx * b.a + g.ty * b.c + b.tx;
            c.ty = g.tx * b.b + g.ty * b.d + b.ty;
            f.__getBounds(a, c);
          }
        }
        ya.__pool.release(c);
      }
    },
    __getFilterBounds: function (a, b) {
      Vb.prototype.__getFilterBounds.call(this, a, b);
      if (0 != this.__children.length) {
        for (
          var c = ya.__pool.get(), d = 0, e = this.__children;
          d < e.length;

        ) {
          var f = e[d];
          ++d;
          if (0 != f.__scaleX && 0 != f.__scaleY && !f.__isMask) {
            var g = f.__transform;
            c.a = g.a * b.a + g.b * b.c;
            c.b = g.a * b.b + g.b * b.d;
            c.c = g.c * b.a + g.d * b.c;
            c.d = g.c * b.b + g.d * b.d;
            c.tx = g.tx * b.a + g.ty * b.c + b.tx;
            c.ty = g.tx * b.b + g.ty * b.d + b.ty;
            f.__getFilterBounds(a, c);
          }
        }
        ya.__pool.release(c);
      }
    },
    __getRenderBounds: function (a, b) {
      if (null != this.__scrollRect)
        Vb.prototype.__getRenderBounds.call(this, a, b);
      else if (
        (Vb.prototype.__getBounds.call(this, a, b), 0 != this.__children.length)
      ) {
        for (
          var c = ya.__pool.get(), d = 0, e = this.__children;
          d < e.length;

        ) {
          var f = e[d];
          ++d;
          if (0 != f.__scaleX && 0 != f.__scaleY && !f.__isMask) {
            var g = f.__transform;
            c.a = g.a * b.a + g.b * b.c;
            c.b = g.a * b.b + g.b * b.d;
            c.c = g.c * b.a + g.d * b.c;
            c.d = g.c * b.b + g.d * b.d;
            c.tx = g.tx * b.a + g.ty * b.c + b.tx;
            c.ty = g.tx * b.b + g.ty * b.d + b.ty;
            f.__getRenderBounds(a, c);
          }
        }
        ya.__pool.release(c);
      }
    },
    __hitTest: function (a, b, c, d, e, f) {
      if (
        !f.get_visible() ||
        this.__isMask ||
        (e && !this.mouseEnabled && !this.mouseChildren) ||
        (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
      )
        return !1;
      if (null != this.__scrollRect) {
        var g = Y.__pool.get();
        g.setTo(a, b);
        var h = this.__getRenderTransform(),
          n = h.a * h.d - h.b * h.c;
        if (0 == n) (g.x = -h.tx), (g.y = -h.ty);
        else {
          var k = (1 / n) * (h.c * (h.ty - g.y) + h.d * (g.x - h.tx));
          g.y = (1 / n) * (h.a * (g.y - h.ty) + h.b * (h.tx - g.x));
          g.x = k;
        }
        if (!this.__scrollRect.containsPoint(g)) return Y.__pool.release(g), !1;
        Y.__pool.release(g);
      }
      g = this.__children.length;
      if (e)
        if (null == d || !this.mouseChildren)
          for (; 0 <= --g; ) {
            if (
              this.__children[g].__hitTest(
                a,
                b,
                c,
                null,
                !0,
                this.__children[g]
              )
            )
              return null != d && d.push(f), !0;
          }
        else {
          if (null != d) {
            e = d.length;
            for (
              n = !1;
              0 <= --g &&
              !(
                ((h = this.__children[g].__getInteractive(null)) ||
                  (this.mouseEnabled && !n)) &&
                this.__children[g].__hitTest(
                  a,
                  b,
                  c,
                  d,
                  !0,
                  this.__children[g]
                ) &&
                ((n = !0), h && d.length > e)
              );

            );
            if (n) return d.splice(e, 0, f), !0;
          }
        }
      else {
        for (
          f = !1;
          0 <= --g &&
          (!this.__children[g].__hitTest(a, b, c, d, !1, this.__children[g]) ||
            ((f = !0), null != d));

        );
        return f;
      }
      return !1;
    },
    __hitTestMask: function (a, b) {
      for (var c = this.__children.length; 0 <= --c; )
        if (this.__children[c].__hitTestMask(a, b)) return !0;
      return !1;
    },
    __readGraphicsData: function (a, b) {
      Vb.prototype.__readGraphicsData.call(this, a, b);
      if (b)
        for (var c = 0, d = this.__children; c < d.length; ) {
          var e = d[c];
          ++c;
          e.__readGraphicsData(a, b);
        }
    },
    __renderCairo: function (a) {},
    __renderCairoMask: function (a) {},
    __renderCanvas: function (a) {
      for (var b = 0, c = this.__removedChildren; b < c.get_length(); ) {
        var d = c.get(b);
        ++b;
        null == d.stage && d.__cleanup();
      }
      this.__removedChildren.set_length(0);
      if (
        !(
          !this.__renderable ||
          0 >= this.__worldAlpha ||
          (null != this.get_mask() &&
            (0 >= this.get_mask().get_width() ||
              0 >= this.get_mask().get_height()))
        ) &&
        (Vb.prototype.__renderCanvas.call(this, a),
        null == this.__cacheBitmap || this.__isCacheBitmapRender)
      ) {
        a.__pushMaskObject(this);
        if (null != a.__stage) {
          b = 0;
          for (c = this.__children; b < c.length; )
            (d = c[b]), ++b, d.__renderCanvas(a), (d.__renderDirty = !1);
          this.__renderDirty = !1;
        } else
          for (b = 0, c = this.__children; b < c.length; )
            (d = c[b]), ++b, d.__renderCanvas(a);
        a.__popMaskObject(this);
      }
    },
    __renderCanvasMask: function (a) {
      for (var b = 0, c = this.__removedChildren; b < c.get_length(); ) {
        var d = c.get(b);
        ++b;
        null == d.stage && d.__cleanup();
      }
      this.__removedChildren.set_length(0);
      null != this.__graphics && w.renderMask(this.__graphics, a);
      b = 0;
      for (c = this.__children; b < c.length; )
        (d = c[b]), ++b, d.__renderCanvasMask(a);
    },
    __renderDOM: function (a) {
      for (var b = 0, c = this.__removedChildren; b < c.get_length(); ) {
        var d = c.get(b);
        ++b;
        null == d.stage && d.__cleanup();
      }
      this.__removedChildren.set_length(0);
      Vb.prototype.__renderDOM.call(this, a);
      if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
        a.__pushMaskObject(this);
        if (null != a.__stage) {
          b = 0;
          for (c = this.__children; b < c.length; )
            (d = c[b]), ++b, d.__renderDOM(a), (d.__renderDirty = !1);
          this.__renderDirty = !1;
        } else
          for (b = 0, c = this.__children; b < c.length; )
            (d = c[b]), ++b, d.__renderDOM(a);
        a.__popMaskObject(this);
      }
    },
    __renderDOMClear: function (a) {
      for (var b = 0, c = this.__removedChildren; b < c.get_length(); ) {
        var d = c.get(b);
        ++b;
        null == d.stage && d.__cleanup();
      }
      this.__removedChildren.set_length(0);
      b = 0;
      for (c = this.__children; b < c.length; )
        (d = c[b]), ++b, d.__renderDOMClear(a);
    },
    __renderGL: function (a) {
      for (var b = 0, c = this.__removedChildren; b < c.get_length(); ) {
        var d = c.get(b);
        ++b;
        null == d.stage && d.__cleanup();
      }
      this.__removedChildren.set_length(0);
      if (
        this.__renderable &&
        !(0 >= this.__worldAlpha) &&
        (Vb.prototype.__renderGL.call(this, a),
        null == this.__cacheBitmap || this.__isCacheBitmapRender)
      ) {
        if (0 < this.__children.length)
          if ((a.__pushMaskObject(this), null != a.__stage)) {
            b = 0;
            for (c = this.__children; b < c.length; )
              (d = c[b]), ++b, d.__renderGL(a), (d.__renderDirty = !1);
            this.__renderDirty = !1;
          } else
            for (b = 0, c = this.__children; b < c.length; )
              (d = c[b]), ++b, d.__renderGL(a);
        0 < this.__children.length && a.__popMaskObject(this);
      }
    },
    __renderGLMask: function (a) {
      for (var b = 0, c = this.__removedChildren; b < c.get_length(); ) {
        var d = c.get(b);
        ++b;
        null == d.stage && d.__cleanup();
      }
      this.__removedChildren.set_length(0);
      null != this.__graphics && lg.renderMask(this, a);
      b = 0;
      for (c = this.__children; b < c.length; )
        (d = c[b]), ++b, d.__renderGLMask(a);
    },
    __setStageReference: function (a) {
      Vb.prototype.__setStageReference.call(this, a);
      if (null != this.__children)
        for (var b = 0, c = this.__children; b < c.length; ) {
          var d = c[b];
          ++b;
          d.__setStageReference(a);
        }
    },
    __setWorldTransformInvalid: function () {
      if (
        !this.__worldTransformInvalid &&
        ((this.__worldTransformInvalid = !0), null != this.__children)
      )
        for (var a = 0, b = this.__children; a < b.length; ) {
          var c = b[a];
          ++a;
          c.__setWorldTransformInvalid();
        }
    },
    __shouldCacheHardware: function (a) {
      if (1 == a) return !0;
      a = Vb.prototype.__shouldCacheHardware.call(this, a);
      if (1 == a) return !0;
      if (null != this.__children)
        for (var b = 0, c = this.__children; b < c.length; ) {
          var d = c[b];
          ++b;
          a = d.__shouldCacheHardware(a);
          if (1 == a) return !0;
        }
      return a;
    },
    __stopAllMovieClips: function () {
      for (var a = 0, b = this.__children; a < b.length; ) {
        var c = b[a];
        ++a;
        c.__stopAllMovieClips();
      }
    },
    __tabTest: function (a) {
      Vb.prototype.__tabTest.call(this, a);
      if (this.get_tabChildren())
        for (var b, c = 0, d = this.__children; c < d.length; ) {
          var e = d[c];
          ++c;
          if ((b = e.__getInteractive(null))) (b = e), b.__tabTest(a);
        }
    },
    __update: function (a, b) {
      Vb.prototype.__update.call(this, a, b);
      if (b) {
        b = 0;
        for (var c = this.__children; b < c.length; ) {
          var d = c[b];
          ++b;
          d.__update(a, !0);
        }
      }
    },
    get_numChildren: function () {
      return this.__children.length;
    },
    get_tabChildren: function () {
      return this.__tabChildren;
    },
    set_tabChildren: function (a) {
      this.__tabChildren != a &&
        ((this.__tabChildren = a),
        this.dispatchEvent(new ma("tabChildrenChange", !0, !1)));
      return this.__tabChildren;
    },
    __class__: wd,
    __properties__: x(Vb.prototype.__properties__, {
      set_tabChildren: "set_tabChildren",
      get_tabChildren: "get_tabChildren",
      get_numChildren: "get_numChildren",
    }),
  });
  var gb = function () {
    wd.call(this);
    this.__buttonMode = !1;
    this.useHandCursor = !0;
  };
  p["openfl.display.Sprite"] = gb;
  gb.__name__ = ["openfl", "display", "Sprite"];
  gb.__super__ = wd;
  gb.prototype = x(wd.prototype, {
    dropTarget: null,
    hitArea: null,
    useHandCursor: null,
    __buttonMode: null,
    startDrag: function (a, b) {
      null == a && (a = !1);
      null != this.stage && this.stage.__startDrag(this, a, b);
    },
    stopDrag: function () {
      null != this.stage && this.stage.__stopDrag(this);
    },
    __getCursor: function () {
      return this.__buttonMode && this.useHandCursor ? "button" : null;
    },
    __hitTest: function (a, b, c, d, e, f) {
      if (e && !this.mouseEnabled && !this.mouseChildren) return !1;
      if (
        !f.get_visible() ||
        this.__isMask ||
        (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
      )
        return this.__hitTestHitArea(a, b, c, d, e, f);
      if (null != this.__scrollRect) {
        var g = Y.__pool.get();
        g.setTo(a, b);
        var h = this.__getRenderTransform(),
          n = h.a * h.d - h.b * h.c;
        if (0 == n) (g.x = -h.tx), (g.y = -h.ty);
        else {
          var k = (1 / n) * (h.c * (h.ty - g.y) + h.d * (g.x - h.tx));
          g.y = (1 / n) * (h.a * (g.y - h.ty) + h.b * (h.tx - g.x));
          g.x = k;
        }
        if (!this.__scrollRect.containsPoint(g))
          return Y.__pool.release(g), this.__hitTestHitArea(a, b, c, d, !0, f);
        Y.__pool.release(g);
      }
      return wd.prototype.__hitTest.call(this, a, b, c, d, e, f)
        ? null != d
          ? e
          : !0
        : null == this.hitArea &&
          null != this.__graphics &&
          this.__graphics.__hitTest(a, b, c, this.__getRenderTransform())
        ? (null == d || (e && !this.mouseEnabled) || d.push(f), !0)
        : this.__hitTestHitArea(a, b, c, d, e, f);
    },
    __hitTestHitArea: function (a, b, c, d, e, f) {
      return null == this.hitArea || this.hitArea.mouseEnabled
        ? !1
        : ((this.hitArea.mouseEnabled = !0),
          (a = this.hitArea.__hitTest(a, b, c, null, !0, f)),
          (this.hitArea.mouseEnabled = !1),
          null != d && a && (d[d.length] = f),
          a);
    },
    __hitTestMask: function (a, b) {
      return wd.prototype.__hitTestMask.call(this, a, b) ||
        (null != this.__graphics &&
          this.__graphics.__hitTest(a, b, !0, this.__getRenderTransform()))
        ? !0
        : !1;
    },
    get_graphics: function () {
      null == this.__graphics && (this.__graphics = new hf(this));
      return this.__graphics;
    },
    get_tabEnabled: function () {
      return null == this.__tabEnabled ? this.__buttonMode : this.__tabEnabled;
    },
    get_buttonMode: function () {
      return this.__buttonMode;
    },
    set_buttonMode: function (a) {
      return (this.__buttonMode = a);
    },
    __class__: gb,
    __properties__: x(wd.prototype.__properties__, {
      get_graphics: "get_graphics",
      set_buttonMode: "set_buttonMode",
      get_buttonMode: "get_buttonMode",
    }),
  });
  var Va = function () {
    gb.call(this);
    this.addEventListener("addedToStage", B(this, this.onAdded));
  };
  p.Universal = Va;
  Va.__name__ = ["Universal"];
  Va.initWindow = function (a) {
    Va.window = a;
    a.stage.align = 6;
    a.stage.set_scaleMode(2);
  };
  Va.setupTracing = function (a) {
    null == a && (a = !1);
    null == Va.oldTrace && (Va.oldTrace = Bh.trace);
    a || !U.releaseMode
      ? ((Bh.trace = Va.oldTrace), (mb.level = 5))
      : ((Bh.trace = function (a, c) {}), (mb.level = 0));
  };
  Va.reloadGame = function () {
    var a = Va.am;
    V.field(Va.am, "reloadGame").apply(a, []);
  };
  Va.addReloadListener = function (a) {
    V.field(Va.am, "reloadListeners").push(a);
  };
  Va.__super__ = gb;
  Va.prototype = x(gb.prototype, {
    maskLayer: null,
    onAdded: function (a) {
      this.removeEventListener("addedToStage", B(this, this.onAdded));
      this.initServices();
      this.maskLayer = new Ye();
      this.initScreen(U.startInFullScreen);
    },
    initServices: function () {},
    initScreen: function (a) {
      a = !1;
      this.stage.set_displayState(a ? 1 : 2);
      this.stage.__setLogicalSize(0, 0);
      wa.get_current().set_x(0);
      wa.get_current().set_y(0);
      wa.get_current().set_scaleX(1);
      wa.get_current().set_scaleY(1);
      this.set_x(0);
      this.set_y(0);
      this.set_scaleX(1);
      this.set_scaleY(1);
      r.stage = this.stage;
      for (var b = new qd(), c = 0, d = U.scales; c < d.length; ) {
        var e = d[c];
        ++c;
        b.set(e, !0);
      }
      Va.windowWidth = a
        ? Xa.toFloat(this.stage.get_fullScreenWidth())
        : U.stageWidth * U.gameScale;
      Va.windowHeight = a
        ? Xa.toFloat(this.stage.get_fullScreenHeight())
        : U.stageHeight * U.gameScale;
      c = this.getDesiredScale(
        Va.windowWidth,
        Va.windowHeight,
        U.stageWidth,
        U.stageHeight
      );
      d = this.getDesiredScale(
        Xa.toFloat(this.stage.get_fullScreenWidth()),
        Xa.toFloat(this.stage.get_fullScreenHeight()),
        U.stageWidth,
        U.stageHeight
      );
      d = U.forceHiResAssets ? d : c;
      4 == d && null != b.h.__keys__[Gd._4X.__id__]
        ? ((r.SCALE = 4), (r.IMG_BASE = "4x"))
        : 3 <= d && null != b.h.__keys__[Gd._3X.__id__]
        ? ((r.SCALE = 3), (r.IMG_BASE = "3x"))
        : 2 <= d && null != b.h.__keys__[Gd._2X.__id__]
        ? ((r.SCALE = 2), (r.IMG_BASE = "2x"))
        : 1.5 <= d && null != b.h.__keys__[Gd._1_5X.__id__]
        ? ((r.SCALE = 1.5), (r.IMG_BASE = "1.5x"))
        : ((r.SCALE = 1), (r.IMG_BASE = "1x"));
      b = U.stageWidth * r.SCALE;
      d = U.stageHeight * r.SCALE;
      e = Va.windowWidth / b;
      var f = Va.windowHeight / d;
      if (
        U.forceHiResAssets ||
        Va.windowWidth != U.stageWidth ||
        Va.windowHeight != U.stageHeight
      )
        1 == U.scaleMode
          ? r.SCALE != c &&
            (this.set_scaleX(c / r.SCALE), this.set_scaleY(this.get_scaleX()))
          : 2 == U.scaleMode
          ? (this.set_scaleX(e), this.set_scaleY(f))
          : 3 == U.scaleMode || 5 == U.scaleMode
          ? (this.set_scaleX(Math.min(e, f)),
            this.set_scaleY(this.get_scaleX()))
          : 4 == U.scaleMode
          ? (this.set_scaleX(Math.max(e, f)),
            this.set_scaleY(this.get_scaleX()))
          : 0 == U.scaleMode &&
            r.SCALE != c &&
            (this.set_scaleX(c / r.SCALE), this.set_scaleY(this.get_scaleX())),
          5 != U.scaleMode &&
            1 != U.scaleMode &&
            (this.set_x(
              this.get_x() + (Va.windowWidth - b * this.get_scaleX()) / 2
            ),
            this.set_y(
              this.get_y() + (Va.windowHeight - d * this.get_scaleY()) / 2
            ));
      Va.logicalWidth = U.stageWidth;
      Va.logicalHeight = U.stageHeight;
      !a ||
        (5 != U.scaleMode && 1 != U.scaleMode) ||
        ((Va.logicalWidth = Va.windowWidth / this.get_scaleX() / r.SCALE),
        (Va.logicalHeight = Va.windowHeight / this.get_scaleY() / r.SCALE),
        (Va.logicalWidth | 0) == Va.logicalWidth &&
          (Va.logicalHeight | 0) == Va.logicalHeight) ||
        ((Va.logicalWidth |= 0),
        (Va.logicalHeight |= 0),
        this.set_scaleX(Va.windowWidth / r.SCALE / Va.logicalWidth),
        this.set_scaleY(Va.windowHeight / r.SCALE / Va.logicalHeight));
      r.screenScaleX = this.get_scaleX();
      r.screenScaleY = this.get_scaleY();
      this.maskLayer.get_graphics().clear();
      !a ||
        (3 != U.scaleMode && 0 != U.scaleMode) ||
        (this.maskLayer.get_graphics().beginFill(this.stage.get_color()),
        this.maskLayer
          .get_graphics()
          .drawRect(-this.get_x(), -this.get_y(), Va.windowWidth, this.get_y()),
        this.maskLayer
          .get_graphics()
          .drawRect(-this.get_x(), 0, this.get_x(), d),
        this.maskLayer.get_graphics().drawRect(b, 0, this.get_x(), d),
        this.maskLayer
          .get_graphics()
          .drawRect(-this.get_x(), d, Va.windowWidth, this.get_y()),
        this.maskLayer.get_graphics().endFill());
    },
    getDesiredScale: function (a, b, c, d) {
      var e = 2 * c,
        f = 2 * d;
      c *= 3;
      d *= 3;
      return a >= 2 * e && b >= 2 * f
        ? 4
        : a >= c && b >= d
        ? 3
        : a >= e && b >= f
        ? 2
        : a >= c / 2 && b >= d / 2
        ? 1.5
        : 1;
    },
    preloaderComplete: function () {
      try {
        new r(this);
      } catch (a) {
        (X.lastException = a),
          a instanceof v && (a = a.val),
          this.stage.__handleError(a);
      }
      this.stage.dispatchEvent(new ma("resize", !1, !1));
      this.stage.window.__fullscreen &&
        this.stage.dispatchEvent(new Hg("fullScreen", !1, !1, !0, !0));
    },
    __class__: Va,
  });
  var ta = function (a) {
    this.nodeType = a;
    this.children = [];
    this.attributeMap = new la();
  };
  p.Xml = ta;
  ta.__name__ = ["Xml"];
  ta.parse = function (a) {
    return Ch.parse(a);
  };
  ta.createElement = function (a) {
    var b = new ta(ta.Element);
    if (b.nodeType != ta.Element)
      throw new v("Bad node type, expected Element but found " + b.nodeType);
    b.nodeName = a;
    return b;
  };
  ta.createPCData = function (a) {
    var b = new ta(ta.PCData);
    if (b.nodeType == ta.Document || b.nodeType == ta.Element)
      throw new v("Bad node type, unexpected " + b.nodeType);
    b.nodeValue = a;
    return b;
  };
  ta.createCData = function (a) {
    var b = new ta(ta.CData);
    if (b.nodeType == ta.Document || b.nodeType == ta.Element)
      throw new v("Bad node type, unexpected " + b.nodeType);
    b.nodeValue = a;
    return b;
  };
  ta.createComment = function (a) {
    var b = new ta(ta.Comment);
    if (b.nodeType == ta.Document || b.nodeType == ta.Element)
      throw new v("Bad node type, unexpected " + b.nodeType);
    b.nodeValue = a;
    return b;
  };
  ta.createDocType = function (a) {
    var b = new ta(ta.DocType);
    if (b.nodeType == ta.Document || b.nodeType == ta.Element)
      throw new v("Bad node type, unexpected " + b.nodeType);
    b.nodeValue = a;
    return b;
  };
  ta.createProcessingInstruction = function (a) {
    var b = new ta(ta.ProcessingInstruction);
    if (b.nodeType == ta.Document || b.nodeType == ta.Element)
      throw new v("Bad node type, unexpected " + b.nodeType);
    b.nodeValue = a;
    return b;
  };
  ta.createDocument = function () {
    return new ta(ta.Document);
  };
  ta.prototype = {
    nodeType: null,
    nodeName: null,
    nodeValue: null,
    parent: null,
    children: null,
    attributeMap: null,
    get: function (a) {
      if (this.nodeType != ta.Element)
        throw new v(
          "Bad node type, expected Element but found " + this.nodeType
        );
      var b = this.attributeMap;
      return null != t[a] ? b.getReserved(a) : b.h[a];
    },
    set: function (a, b) {
      if (this.nodeType != ta.Element)
        throw new v(
          "Bad node type, expected Element but found " + this.nodeType
        );
      var c = this.attributeMap;
      null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
    },
    exists: function (a) {
      if (this.nodeType != ta.Element)
        throw new v(
          "Bad node type, expected Element but found " + this.nodeType
        );
      var b = this.attributeMap;
      return null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a);
    },
    attributes: function () {
      if (this.nodeType != ta.Element)
        throw new v(
          "Bad node type, expected Element but found " + this.nodeType
        );
      return this.attributeMap.keys();
    },
    elements: function () {
      if (this.nodeType != ta.Document && this.nodeType != ta.Element)
        throw new v(
          "Bad node type, expected Element or Document but found " +
            this.nodeType
        );
      for (var a = [], b = 0, c = this.children; b < c.length; ) {
        var d = c[b];
        ++b;
        d.nodeType == ta.Element && a.push(d);
      }
      return Q.iter(a);
    },
    elementsNamed: function (a) {
      if (this.nodeType != ta.Document && this.nodeType != ta.Element)
        throw new v(
          "Bad node type, expected Element or Document but found " +
            this.nodeType
        );
      for (var b = [], c = 0, d = this.children; c < d.length; ) {
        var e = d[c];
        ++c;
        if (e.nodeType == ta.Element) {
          if (e.nodeType != ta.Element)
            throw new v(
              "Bad node type, expected Element but found " + e.nodeType
            );
          var f = e.nodeName == a;
        } else f = !1;
        f && b.push(e);
      }
      return Q.iter(b);
    },
    firstElement: function () {
      if (this.nodeType != ta.Document && this.nodeType != ta.Element)
        throw new v(
          "Bad node type, expected Element or Document but found " +
            this.nodeType
        );
      for (var a = 0, b = this.children; a < b.length; ) {
        var c = b[a];
        ++a;
        if (c.nodeType == ta.Element) return c;
      }
      return null;
    },
    addChild: function (a) {
      if (this.nodeType != ta.Document && this.nodeType != ta.Element)
        throw new v(
          "Bad node type, expected Element or Document but found " +
            this.nodeType
        );
      null != a.parent && a.parent.removeChild(a);
      this.children.push(a);
      a.parent = this;
    },
    removeChild: function (a) {
      if (this.nodeType != ta.Document && this.nodeType != ta.Element)
        throw new v(
          "Bad node type, expected Element or Document but found " +
            this.nodeType
        );
      return Q.remove(this.children, a) ? ((a.parent = null), !0) : !1;
    },
    __class__: ta,
  };
  var jf = function () {
    this.lowerBound = new D();
    this.upperBound = new D();
  };
  p["box2D.collision.B2AABB"] = jf;
  jf.__name__ = ["box2D", "collision", "B2AABB"];
  jf.prototype = {
    isValid: function () {
      var a = this.upperBound.y - this.lowerBound.y;
      return 0 <= this.upperBound.x - this.lowerBound.x &&
        0 <= a &&
        this.lowerBound.isValid()
        ? this.upperBound.isValid()
        : !1;
    },
    getCenter: function () {
      return new D(
        (this.lowerBound.x + this.upperBound.x) / 2,
        (this.lowerBound.y + this.upperBound.y) / 2
      );
    },
    getExtents: function () {
      return new D(
        (this.upperBound.x - this.lowerBound.x) / 2,
        (this.upperBound.y - this.lowerBound.y) / 2
      );
    },
    contains: function (a) {
      var b;
      return (b = (b = (b = (b = this.lowerBound.x <= a.lowerBound.x)
        ? this.lowerBound.y <= a.lowerBound.y
        : !1)
        ? a.upperBound.x <= this.upperBound.x
        : !1)
        ? a.upperBound.y <= this.upperBound.y
        : !1);
    },
    rayCast: function (a, b) {
      var c = -Number.MAX_VALUE,
        d = Number.MAX_VALUE,
        e = b.p1.x,
        f = b.p1.y,
        g = b.p2.x - b.p1.x;
      b = b.p2.y - b.p1.y;
      var h = Math.abs(b),
        n = a.normal;
      if (Math.abs(g) < Number.MIN_VALUE) {
        if (e < this.lowerBound.x || this.upperBound.x < e) return !1;
      } else {
        var k = 1 / g;
        g = (this.lowerBound.x - e) * k;
        e = (this.upperBound.x - e) * k;
        k = -1;
        g > e && ((k = g), (g = e), (e = k), (k = 1));
        g > c && ((n.x = k), (n.y = 0), (c = g));
        d = Math.min(d, e);
        if (c > d) return !1;
      }
      if (h < Number.MIN_VALUE) {
        if (f < this.lowerBound.y || this.upperBound.y < f) return !1;
      } else if (
        ((k = 1 / b),
        (g = (this.lowerBound.y - f) * k),
        (e = (this.upperBound.y - f) * k),
        (k = -1),
        g > e && ((k = g), (g = e), (e = k), (k = 1)),
        g > c && ((n.y = k), (n.x = 0), (c = g)),
        (d = Math.min(d, e)),
        c > d)
      )
        return !1;
      a.fraction = c;
      return !0;
    },
    testOverlap: function (a) {
      var b = a.lowerBound.y - this.upperBound.y,
        c = this.lowerBound.y - a.upperBound.y;
      return 0 < a.lowerBound.x - this.upperBound.x ||
        0 < b ||
        0 < this.lowerBound.x - a.upperBound.x ||
        0 < c
        ? !1
        : !0;
    },
    combine: function (a, b) {
      this.lowerBound.x = Math.min(a.lowerBound.x, b.lowerBound.x);
      this.lowerBound.y = Math.min(a.lowerBound.y, b.lowerBound.y);
      this.upperBound.x = Math.max(a.upperBound.x, b.upperBound.x);
      this.upperBound.y = Math.max(a.upperBound.y, b.upperBound.y);
    },
    reset: function () {
      this.lowerBound.x = 0;
      this.lowerBound.y = 0;
      this.upperBound.x = 0;
      this.upperBound.y = 0;
    },
    setTo: function (a) {
      this.lowerBound.x = a.lowerBound.x;
      this.lowerBound.y = a.lowerBound.y;
      this.upperBound.x = a.upperBound.x;
      this.upperBound.y = a.upperBound.y;
    },
    lowerBound: null,
    upperBound: null,
    __class__: jf,
  };
  var D = function (a, b) {
    null == b && (b = 0);
    null == a && (a = 0);
    this.x = a;
    this.y = b;
  };
  p["box2D.common.math.B2Vec2"] = D;
  D.__name__ = ["box2D", "common", "math", "B2Vec2"];
  D.make = function (a, b) {
    return new D(a, b);
  };
  D.freePool = function () {
    D.pooli = 0;
  };
  D.getFromPool = function () {
    500 < D.pooli && (D.pooli = 0);
    if (D.pooli < D.pool.length) {
      var a = D.pool[D.pooli];
      a.x = 0;
      a.y = 0;
      D.pooli++;
      return a;
    }
    a = new D();
    D.pool.push(a);
    D.pooli++;
    return a;
  };
  D.prototype = {
    setZero: function () {
      this.y = this.x = 0;
    },
    set: function (a, b) {
      null == b && (b = 0);
      null == a && (a = 0);
      this.x = a;
      this.y = b;
    },
    setV: function (a) {
      this.x = a.x;
      this.y = a.y;
    },
    getNegative: function () {
      return new D(-this.x, -this.y);
    },
    getNegativePooled: function () {
      var a = D.getFromPool();
      a.x = -this.x;
      a.y = -this.y;
      return a;
    },
    negativeSelf: function () {
      this.x = -this.x;
      this.y = -this.y;
    },
    copy: function (a) {
      null == a && (a = !1);
      a
        ? ((a = D.getFromPool()), (a.x = this.x), (a.y = this.y))
        : (a = new D(this.x, this.y));
      return a;
    },
    add: function (a) {
      this.x += a.x;
      this.y += a.y;
    },
    subtract: function (a) {
      this.x -= a.x;
      this.y -= a.y;
    },
    multiply: function (a) {
      this.x *= a;
      this.y *= a;
    },
    mulM: function (a) {
      var b = this.x;
      this.x = a.col1.x * b + a.col2.x * this.y;
      this.y = a.col1.y * b + a.col2.y * this.y;
    },
    mulTM: function (a) {
      var b = E.dot(this, a.col1);
      this.y = E.dot(this, a.col2);
      this.x = b;
    },
    crossVF: function (a) {
      var b = this.x;
      this.x = a * this.y;
      this.y = -a * b;
    },
    crossFV: function (a) {
      var b = this.x;
      this.x = -a * this.y;
      this.y = a * b;
    },
    minV: function (a) {
      this.x = this.x < a.x ? this.x : a.x;
      this.y = this.y < a.y ? this.y : a.y;
    },
    maxV: function (a) {
      this.x = this.x > a.x ? this.x : a.x;
      this.y = this.y > a.y ? this.y : a.y;
    },
    abs: function () {
      0 > this.x && (this.x = -this.x);
      0 > this.y && (this.y = -this.y);
    },
    length: function () {
      return Math.sqrt(this.x * this.x + this.y * this.y);
    },
    lengthSquared: function () {
      return this.x * this.x + this.y * this.y;
    },
    normalize: function () {
      var a = Math.sqrt(this.x * this.x + this.y * this.y);
      if (a < Number.MIN_VALUE) return 0;
      var b = 1 / a;
      this.x *= b;
      this.y *= b;
      return a;
    },
    perpDot: function (a) {
      return -this.y * a.x + this.x * a.y;
    },
    winding: function (a, b) {
      var c = a.copy();
      c.subtract(this);
      b = b.copy();
      b.subtract(a);
      return c.perpDot(b);
    },
    isValid: function () {
      return E.isValid(this.x) ? E.isValid(this.y) : !1;
    },
    x: null,
    y: null,
    toString: function () {
      return "(" + this.x + ", " + this.y + ")";
    },
    reset: function () {
      this.y = this.x = 0;
    },
    __class__: D,
  };
  var sl = function () {
    this.v = new D();
    this.id = new Id();
  };
  p["box2D.collision.ClipVertex"] = sl;
  sl.__name__ = ["box2D", "collision", "ClipVertex"];
  sl.prototype = {
    set: function (a) {
      var b = this.v,
        c = a.v;
      b.x = c.x;
      b.y = c.y;
      this.id.set(a.id);
    },
    v: null,
    id: null,
    __class__: sl,
  };
  var Id = function () {
    this.features = new Go();
    this.features._m_id = this;
  };
  p["box2D.collision.B2ContactID"] = Id;
  Id.__name__ = ["box2D", "collision", "B2ContactID"];
  Id.prototype = {
    set: function (a) {
      this.set_key(a._key);
    },
    copy: function () {
      var a = new Id();
      a.set_key(this.get_key());
      return a;
    },
    get_key: function () {
      return this._key;
    },
    set_key: function (a) {
      this._key = a;
      this.features._referenceEdge = this._key & 255;
      this.features._incidentEdge = ((this._key & 65280) >> 8) & 255;
      this.features._incidentVertex = ((this._key & 16711680) >> 16) & 255;
      this.features._flip = ((this._key & -16777216) >> 24) & 255;
      return this._key;
    },
    features: null,
    _key: null,
    indexA: null,
    indexB: null,
    typeA: null,
    typeB: null,
    __class__: Id,
    __properties__: { set_key: "set_key", get_key: "get_key" },
  };
  var Go = function () {};
  p["box2D.collision.Features"] = Go;
  Go.__name__ = ["box2D", "collision", "Features"];
  Go.prototype = {
    get_referenceEdge: function () {
      return this._referenceEdge;
    },
    set_referenceEdge: function (a) {
      this._referenceEdge = a;
      this._m_id._key = (this._m_id._key & -256) | (this._referenceEdge & 255);
      return a;
    },
    _referenceEdge: null,
    get_incidentEdge: function () {
      return this._incidentEdge;
    },
    set_incidentEdge: function (a) {
      this._incidentEdge = a;
      this._m_id._key =
        (this._m_id._key & -65281) | ((this._incidentEdge << 8) & 65280);
      return a;
    },
    _incidentEdge: null,
    get_incidentVertex: function () {
      return this._incidentVertex;
    },
    set_incidentVertex: function (a) {
      this._incidentVertex = a;
      this._m_id._key =
        (this._m_id._key & -16711681) |
        ((this._incidentVertex << 16) & 16711680);
      return a;
    },
    _incidentVertex: null,
    get_flip: function () {
      return this._flip;
    },
    set_flip: function (a) {
      this._flip = a;
      this._m_id._key =
        (this._m_id._key & 16777215) | ((this._flip << 24) & -16777216);
      return a;
    },
    _flip: null,
    _m_id: null,
    __class__: Go,
    __properties__: {
      set_flip: "set_flip",
      get_flip: "get_flip",
      set_incidentVertex: "set_incidentVertex",
      get_incidentVertex: "get_incidentVertex",
      set_incidentEdge: "set_incidentEdge",
      get_incidentEdge: "get_incidentEdge",
      set_referenceEdge: "set_referenceEdge",
      get_referenceEdge: "get_referenceEdge",
    },
  };
  var ib = function () {};
  p["box2D.collision.B2Collision"] = ib;
  ib.__name__ = ["box2D", "collision", "B2Collision"];
  ib.clipSegmentToLine = function (a, b, c, d) {
    var e = 0;
    var f = b[0];
    var g = f.v;
    f = b[1];
    var h = f.v,
      n = c.x * g.x + c.y * g.y - d;
    f = c.x * h.x + c.y * h.y - d;
    0 >= n && a[e++].set(b[0]);
    0 >= f && a[e++].set(b[1]);
    0 > n * f &&
      ((c = n / (n - f)),
      (f = a[e]),
      (f = f.v),
      (f.x = g.x + c * (h.x - g.x)),
      (f.y = g.y + c * (h.y - g.y)),
      (f = a[e]),
      (f.id = (0 < n ? b[0] : b[1]).id),
      ++e);
    return e;
  };
  ib.edgeSeparation = function (a, b, c, d, e) {
    var f = a.m_vertices,
      g = a.m_normals;
    a = d.m_vertexCount;
    d = d.m_vertices;
    var h = b.R;
    var n = g[c];
    g = h.col1.x * n.x + h.col2.x * n.y;
    var k = h.col1.y * n.x + h.col2.y * n.y;
    h = e.R;
    var G = h.col1.x * g + h.col1.y * k;
    h = h.col2.x * g + h.col2.y * k;
    for (var l = 0, m = Number.MAX_VALUE, r = 0; r < a; ) {
      var p = r++;
      n = d[p];
      n = n.x * G + n.y * h;
      n < m && ((m = n), (l = p));
    }
    n = f[c];
    h = b.R;
    c = b.position.x + (h.col1.x * n.x + h.col2.x * n.y);
    b = b.position.y + (h.col1.y * n.x + h.col2.y * n.y);
    n = d[l];
    h = e.R;
    return (
      (e.position.x + (h.col1.x * n.x + h.col2.x * n.y) - c) * g +
      (e.position.y + (h.col1.y * n.x + h.col2.y * n.y) - b) * k
    );
  };
  ib.findMaxSeparation = function (a, b, c, d, e) {
    var f = b.m_vertexCount,
      g = b.m_normals,
      h = e.R;
    var n = d.m_centroid;
    var k = e.position.x + (h.col1.x * n.x + h.col2.x * n.y),
      G = e.position.y + (h.col1.y * n.x + h.col2.y * n.y);
    h = c.R;
    n = b.m_centroid;
    k -= c.position.x + (h.col1.x * n.x + h.col2.x * n.y);
    G -= c.position.y + (h.col1.y * n.x + h.col2.y * n.y);
    h = k * c.R.col1.x + G * c.R.col1.y;
    G = k * c.R.col2.x + G * c.R.col2.y;
    k = 0;
    for (var l = -Number.MAX_VALUE, m = 0; m < f; ) {
      var r = m++;
      n = g[r];
      n = n.x * h + n.y * G;
      n > l && ((l = n), (k = r));
    }
    g = ib.edgeSeparation(b, c, k, d, e);
    l = 0 <= k - 1 ? k - 1 : f - 1;
    h = ib.edgeSeparation(b, c, l, d, e);
    m = k + 1 < f ? k + 1 : 0;
    G = ib.edgeSeparation(b, c, m, d, e);
    if (h > g && h > G) n = -1;
    else if (G > g) (n = 1), (l = m), (h = G);
    else return (a[0] = k), g;
    for (;;)
      if (
        ((k = -1 == n ? (0 <= l - 1 ? l - 1 : f - 1) : l + 1 < f ? l + 1 : 0),
        (g = ib.edgeSeparation(b, c, k, d, e)),
        g > h)
      )
        (l = k), (h = g);
      else break;
    a[0] = l;
    return h;
  };
  ib.findIncidentEdge = function (a, b, c, d, e, f) {
    var g = b.m_normals,
      h = e.m_vertexCount;
    b = e.m_vertices;
    e = e.m_normals;
    var n = c.R;
    c = g[d];
    g = n.col1.x * c.x + n.col2.x * c.y;
    var k = n.col1.y * c.x + n.col2.y * c.y;
    n = f.R;
    c = n.col1.x * g + n.col1.y * k;
    k = n.col2.x * g + n.col2.y * k;
    g = c;
    n = 0;
    for (var G = Number.MAX_VALUE, l = 0; l < h; ) {
      var m = l++;
      c = e[m];
      c = g * c.x + k * c.y;
      c < G && ((G = c), (n = m));
    }
    e = n;
    g = e + 1 < h ? e + 1 : 0;
    h = a[0];
    c = b[e];
    n = f.R;
    h.v.x = f.position.x + (n.col1.x * c.x + n.col2.x * c.y);
    h.v.y = f.position.y + (n.col1.y * c.x + n.col2.y * c.y);
    h.id.features.set_referenceEdge(d);
    h.id.features.set_incidentEdge(e);
    h.id.features.set_incidentVertex(0);
    h = a[1];
    c = b[g];
    n = f.R;
    h.v.x = f.position.x + (n.col1.x * c.x + n.col2.x * c.y);
    h.v.y = f.position.y + (n.col1.y * c.x + n.col2.y * c.y);
    h.id.features.set_referenceEdge(d);
    h.id.features.set_incidentEdge(g);
    h.id.features.set_incidentVertex(1);
  };
  ib.makeClipPointVector = function () {
    var a = [];
    a[0] = new sl();
    a[1] = new sl();
    return a;
  };
  ib.collidePolygons = function (a, b, c, d, e) {
    a.m_pointCount = 0;
    var f = b.m_radius + d.m_radius;
    ib.s_edgeAO[0] = 0;
    var g = ib.findMaxSeparation(ib.s_edgeAO, b, c, d, e);
    var h = ib.s_edgeAO[0];
    if (!(g > f)) {
      ib.s_edgeBO[0] = 0;
      var n = ib.findMaxSeparation(ib.s_edgeBO, d, e, b, c);
      var k = ib.s_edgeBO[0];
      if (!(n > f)) {
        n > 0.98 * g + 0.001
          ? ((g = d), (n = b), (b = e), (e = k), (a.m_type = 4), (h = 1))
          : ((g = b),
            (n = d),
            (b = c),
            (c = e),
            (e = h),
            (a.m_type = 2),
            (h = 0));
        d = ib.s_incidentEdge;
        ib.findIncidentEdge(d, g, b, e, n, c);
        n = g.m_vertices;
        k = n[e];
        var G = e + 1 < g.m_vertexCount ? n[e + 1] : n[0];
        g = ib.s_localTangent;
        g.x = G.x - k.x;
        g.y = G.y - k.y;
        g.normalize();
        var l = ib.s_localNormal;
        l.x = g.y;
        l.y = -g.x;
        n = ib.s_planePoint;
        n.x = 0.5 * (k.x + G.x);
        n.y = 0.5 * (k.y + G.y);
        var m = ib.s_tangent;
        e = b.R;
        m.x = e.col1.x * g.x + e.col2.x * g.y;
        m.y = e.col1.y * g.x + e.col2.y * g.y;
        var r = ib.s_tangent2;
        r.x = -m.x;
        r.y = -m.y;
        g = ib.s_normal;
        g.x = m.y;
        g.y = -m.x;
        var p = ib.s_v11,
          q = ib.s_v12;
        p.x = b.position.x + (e.col1.x * k.x + e.col2.x * k.y);
        p.y = b.position.y + (e.col1.y * k.x + e.col2.y * k.y);
        q.x = b.position.x + (e.col1.x * G.x + e.col2.x * G.y);
        q.y = b.position.y + (e.col1.y * G.x + e.col2.y * G.y);
        b = g.x * p.x + g.y * p.y;
        e = m.x * q.x + m.y * q.y + f;
        G = ib.s_clipPoints1;
        k = ib.s_clipPoints2;
        d = ib.clipSegmentToLine(G, d, r, -m.x * p.x - m.y * p.y + f);
        if (!(2 > d || ((d = ib.clipSegmentToLine(k, G, m, e)), 2 > d))) {
          e = a.m_localPlaneNormal;
          e.x = l.x;
          e.y = l.y;
          e = a.m_localPoint;
          e.x = n.x;
          e.y = n.y;
          n = d = 0;
          for (l = R.b2_maxManifoldPoints; n < l; )
            (e = n++),
              (m = k[e]),
              g.x * m.v.x + g.y * m.v.y - b <= f &&
                ((r = a.m_points[d]),
                (e = c.R),
                (p = m.v.x - c.position.x),
                (G = m.v.y - c.position.y),
                (r.m_localPoint.x = p * e.col1.x + G * e.col1.y),
                (r.m_localPoint.y = p * e.col2.x + G * e.col2.y),
                r.m_id.set(m.id),
                r.m_id.features.set_flip(h),
                ++d);
          a.m_pointCount = d;
        }
      }
    }
  };
  ib.collideCircles = function (a, b, c, d, e) {
    a.m_pointCount = 0;
    var f = c.R;
    var g = b.m_p;
    var h = c.position.x + (f.col1.x * g.x + f.col2.x * g.y);
    c = c.position.y + (f.col1.y * g.x + f.col2.y * g.y);
    f = e.R;
    g = d.m_p;
    h = e.position.x + (f.col1.x * g.x + f.col2.x * g.y) - h;
    e = e.position.y + (f.col1.y * g.x + f.col2.y * g.y) - c;
    f = b.m_radius + d.m_radius;
    h * h + e * e > f * f ||
      ((a.m_type = 1),
      (e = a.m_localPoint),
      (b = b.m_p),
      (e.x = b.x),
      (e.y = b.y),
      (b = a.m_localPlaneNormal),
      (b.x = 0),
      (b.y = 0),
      (a.m_pointCount = 1),
      (b = a.m_points[0].m_localPoint),
      (d = d.m_p),
      (b.x = d.x),
      (b.y = d.y),
      a.m_points[0].m_id.set_key(0));
  };
  ib.collidePolygonAndCircle = function (a, b, c, d, e) {
    a.m_pointCount = 0;
    var f = e.R;
    var g = d.m_p;
    var h = e.position.y + (f.col1.y * g.x + f.col2.y * g.y);
    var n = e.position.x + (f.col1.x * g.x + f.col2.x * g.y) - c.position.x;
    var k = h - c.position.y;
    f = c.R;
    c = n * f.col1.x + k * f.col1.y;
    f = n * f.col2.x + k * f.col2.y;
    var G = 0;
    e = -Number.MAX_VALUE;
    h = b.m_radius + d.m_radius;
    var l = b.m_vertexCount,
      m = b.m_vertices;
    b = b.m_normals;
    for (var r = 0; r < l; ) {
      var p = r++;
      g = m[p];
      n = c - g.x;
      k = f - g.y;
      g = b[p];
      g = g.x * n + g.y * k;
      if (g > h) return;
      g > e && ((e = g), (G = p));
    }
    n = G;
    g = m[n];
    l = m[n + 1 < l ? n + 1 : 0];
    if (e < Number.MIN_VALUE)
      (a.m_pointCount = 1),
        (a.m_type = 2),
        (c = a.m_localPlaneNormal),
        (f = b[G]),
        (c.x = f.x),
        (c.y = f.y),
        (a.m_localPoint.x = 0.5 * (g.x + l.x)),
        (a.m_localPoint.y = 0.5 * (g.y + l.y));
    else if (
      ((e = (c - l.x) * (g.x - l.x) + (f - l.y) * (g.y - l.y)),
      0 >= (c - g.x) * (l.x - g.x) + (f - g.y) * (l.y - g.y))
    ) {
      if ((c - g.x) * (c - g.x) + (f - g.y) * (f - g.y) > h * h) return;
      a.m_pointCount = 1;
      a.m_type = 2;
      a.m_localPlaneNormal.x = c - g.x;
      a.m_localPlaneNormal.y = f - g.y;
      a.m_localPlaneNormal.normalize();
      c = a.m_localPoint;
      c.x = g.x;
      c.y = g.y;
    } else if (0 >= e) {
      if ((c - l.x) * (c - l.x) + (f - l.y) * (f - l.y) > h * h) return;
      a.m_pointCount = 1;
      a.m_type = 2;
      a.m_localPlaneNormal.x = c - l.x;
      a.m_localPlaneNormal.y = f - l.y;
      a.m_localPlaneNormal.normalize();
      c = a.m_localPoint;
      c.x = l.x;
      c.y = l.y;
    } else {
      G = 0.5 * (g.x + l.x);
      g = 0.5 * (g.y + l.y);
      e = (c - G) * b[n].x + (f - g) * b[n].y;
      if (e > h) return;
      a.m_pointCount = 1;
      a.m_type = 2;
      a.m_localPlaneNormal.x = b[n].x;
      a.m_localPlaneNormal.y = b[n].y;
      a.m_localPlaneNormal.normalize();
      c = a.m_localPoint;
      c.x = G;
      c.y = g;
    }
    c = a.m_points[0].m_localPoint;
    d = d.m_p;
    c.x = d.x;
    c.y = d.y;
    a.m_points[0].m_id.set_key(0);
  };
  ib.testOverlap = function (a, b) {
    var c = b.lowerBound,
      d = a.upperBound,
      e = c.x - d.x,
      f = c.y - d.y;
    c = a.lowerBound;
    d = b.upperBound;
    a = c.y - d.y;
    return 0 < e || 0 < f || 0 < c.x - d.x || 0 < a ? !1 : !0;
  };
  var Ho = function () {
    this.position = new D();
    this.velocity = new D();
    this.normal = new D();
    this.id = new Id();
  };
  p["box2D.collision.B2ContactPoint"] = Ho;
  Ho.__name__ = ["box2D", "collision", "B2ContactPoint"];
  Ho.prototype = {
    shape1: null,
    shape2: null,
    position: null,
    velocity: null,
    normal: null,
    separation: null,
    friction: null,
    restitution: null,
    id: null,
    __class__: Ho,
  };
  var Io = function () {
    this.m_v1 = new Wj();
    this.m_v2 = new Wj();
    this.m_v3 = new Wj();
    this.m_vertices = [];
    this.m_vertices[0] = this.m_v1;
    this.m_vertices[1] = this.m_v2;
    this.m_vertices[2] = this.m_v3;
  };
  p["box2D.collision.B2Simplex"] = Io;
  Io.__name__ = ["box2D", "collision", "B2Simplex"];
  Io.prototype = {
    readCache: function (a, b, c, d, e) {
      R.b2Assert(0 <= a.count && 3 >= a.count);
      this.m_count = a.count;
      var f = this.m_vertices;
      if (a.useCache) {
        for (var g = 0, h = this.m_count; g < h; ) {
          var n = g++;
          var k = f[n];
          k.indexA = a.indexA[n];
          k.indexB = a.indexB[n];
          n = b.getVertex(k.indexA);
          var G = d.getVertex(k.indexB);
          k.wA = E.mulX(c, n, !0);
          k.wB = E.mulX(e, G, !0);
          k.w = E.subtractVVPooled(k.wB, k.wA);
          k.a = 0;
        }
        1 < this.m_count &&
          ((a = a.metric),
          (k = this.getMetric()),
          k < 0.5 * a || 2 * a < k || k < Number.MIN_VALUE) &&
          (this.m_count = 0);
      }
      0 == this.m_count &&
        ((k = f[0]),
        (k.indexA = 0),
        (k.indexB = 0),
        (n = b.getVertex(0)),
        (G = d.getVertex(0)),
        (k.wA = E.mulX(c, n, !0)),
        (k.wB = E.mulX(e, G, !0)),
        (k.w = E.subtractVVPooled(k.wB, k.wA)),
        (this.m_count = 1));
    },
    writeCache: function (a) {
      if (a.useCache) {
        a.metric = this.getMetric();
        a.count = this.m_count;
        for (var b = this.m_vertices, c = 0, d = this.m_count; c < d; ) {
          var e = c++;
          a.indexA[e] = b[e].indexA;
          a.indexB[e] = b[e].indexB;
        }
      }
    },
    getSearchDirection: function () {
      switch (this.m_count) {
        case 1:
          return this.m_v1.w.getNegativePooled();
        case 2:
          var a = E.subtractVVPooled(this.m_v2.w, this.m_v1.w);
          return 0 < E.crossVV(a, this.m_v1.w.getNegativePooled())
            ? E.crossFV(1, a, !0)
            : E.crossVF(a, 1, !0);
        default:
          return R.b2Assert(!1), D.getFromPool();
      }
    },
    getClosestPoint: function () {
      switch (this.m_count) {
        case 0:
          return R.b2Assert(!1), D.getFromPool();
        case 1:
          return this.m_v1.w;
        case 2:
          var a = D.getFromPool();
          a.x = this.m_v1.a * this.m_v1.w.x + this.m_v2.a * this.m_v2.w.x;
          a.y = this.m_v1.a * this.m_v1.w.y + this.m_v2.a * this.m_v2.w.y;
          return a;
        default:
          return R.b2Assert(!1), D.getFromPool();
      }
    },
    getWitnessPoints: function (a, b) {
      switch (this.m_count) {
        case 0:
          R.b2Assert(!1);
          break;
        case 1:
          var c = this.m_v1.wA;
          a.x = c.x;
          a.y = c.y;
          a = this.m_v1.wB;
          b.x = a.x;
          b.y = a.y;
          break;
        case 2:
          a.x = this.m_v1.a * this.m_v1.wA.x + this.m_v2.a * this.m_v2.wA.x;
          a.y = this.m_v1.a * this.m_v1.wA.y + this.m_v2.a * this.m_v2.wA.y;
          b.x = this.m_v1.a * this.m_v1.wB.x + this.m_v2.a * this.m_v2.wB.x;
          b.y = this.m_v1.a * this.m_v1.wB.y + this.m_v2.a * this.m_v2.wB.y;
          break;
        case 3:
          b.x = a.x =
            this.m_v1.a * this.m_v1.wA.x +
            this.m_v2.a * this.m_v2.wA.x +
            this.m_v3.a * this.m_v3.wA.x;
          b.y = a.y =
            this.m_v1.a * this.m_v1.wA.y +
            this.m_v2.a * this.m_v2.wA.y +
            this.m_v3.a * this.m_v3.wA.y;
          break;
        default:
          R.b2Assert(!1);
      }
    },
    getMetric: function () {
      switch (this.m_count) {
        case 0:
          return R.b2Assert(!1), 0;
        case 1:
          return 0;
        case 2:
          return E.subtractVVPooled(this.m_v1.w, this.m_v2.w).length();
        case 3:
          return E.crossVV(
            E.subtractVVPooled(this.m_v2.w, this.m_v1.w),
            E.subtractVVPooled(this.m_v3.w, this.m_v1.w)
          );
        default:
          return R.b2Assert(!1), 0;
      }
    },
    solve2: function () {
      var a = this.m_v1.w,
        b = this.m_v2.w,
        c = E.subtractVVPooled(b, a);
      a = -(a.x * c.x + a.y * c.y);
      0 >= a
        ? (this.m_count = this.m_v1.a = 1)
        : ((b = b.x * c.x + b.y * c.y),
          0 >= b
            ? ((this.m_count = this.m_v2.a = 1), this.m_v1.set(this.m_v2))
            : ((c = 1 / (b + a)),
              (this.m_v1.a = b * c),
              (this.m_v2.a = a * c),
              (this.m_count = 2)));
    },
    solve3: function () {
      var a = this.m_v1.w,
        b = this.m_v2.w,
        c = this.m_v3.w,
        d = E.subtractVVPooled(b, a),
        e = E.dot(a, d),
        f = E.dot(b, d);
      e = -e;
      var g = E.subtractVVPooled(c, a),
        h = E.dot(a, g),
        n = E.dot(c, g);
      h = -h;
      var k = E.subtractVVPooled(c, b),
        G = E.dot(b, k);
      k = E.dot(c, k);
      G = -G;
      g = E.crossVV(d, g);
      d = g * E.crossVV(b, c);
      c = g * E.crossVV(c, a);
      a = g * E.crossVV(a, b);
      0 >= e && 0 >= h
        ? (this.m_count = this.m_v1.a = 1)
        : 0 < f && 0 < e && 0 >= a
        ? ((n = 1 / (f + e)),
          (this.m_v1.a = f * n),
          (this.m_v2.a = e * n),
          (this.m_count = 2))
        : 0 < n && 0 < h && 0 >= c
        ? ((f = 1 / (n + h)),
          (this.m_v1.a = n * f),
          (this.m_v3.a = h * f),
          (this.m_count = 2),
          this.m_v2.set(this.m_v3))
        : 0 >= f && 0 >= G
        ? ((this.m_count = this.m_v2.a = 1), this.m_v1.set(this.m_v2))
        : 0 >= n && 0 >= k
        ? ((this.m_count = this.m_v3.a = 1), this.m_v1.set(this.m_v3))
        : 0 < k && 0 < G && 0 >= d
        ? ((f = 1 / (k + G)),
          (this.m_v2.a = k * f),
          (this.m_v3.a = G * f),
          (this.m_count = 2),
          this.m_v1.set(this.m_v3))
        : ((f = 1 / (d + c + a)),
          (this.m_v1.a = d * f),
          (this.m_v2.a = c * f),
          (this.m_v3.a = a * f),
          (this.m_count = 3));
    },
    m_v1: null,
    m_v2: null,
    m_v3: null,
    m_vertices: null,
    m_count: null,
    __class__: Io,
  };
  var Wj = function () {};
  p["box2D.collision.B2SimplexVertex"] = Wj;
  Wj.__name__ = ["box2D", "collision", "B2SimplexVertex"];
  Wj.prototype = {
    set: function (a) {
      var b = this.wA,
        c = a.wA;
      b.x = c.x;
      b.y = c.y;
      b = this.wB;
      c = a.wB;
      b.x = c.x;
      b.y = c.y;
      b = this.w;
      c = a.w;
      b.x = c.x;
      b.y = c.y;
      this.a = a.a;
      this.indexA = a.indexA;
      this.indexB = a.indexB;
    },
    wA: null,
    wB: null,
    w: null,
    a: null,
    indexA: null,
    indexB: null,
    __class__: Wj,
  };
  var Ef = function () {};
  p["box2D.collision.B2Distance"] = Ef;
  Ef.__name__ = ["box2D", "collision", "B2Distance"];
  Ef.distance = function (a, b, c) {
    ++Ef.b2_gjkCalls;
    var d = c.proxyA,
      e = c.proxyB,
      f = c.transformA,
      g = c.transformB,
      h = Ef.s_simplex;
    h.readCache(b, d, f, e, g);
    var n = h.m_vertices,
      k = Ef.s_saveA,
      G = Ef.s_saveB;
    h.getClosestPoint().lengthSquared();
    for (var l, m = 0; 20 > m; ) {
      var r = h.m_count;
      l = 0;
      for (var p = r; l < p; ) {
        var q = l++;
        k[q] = n[q].indexA;
        G[q] = n[q].indexB;
      }
      switch (h.m_count) {
        case 1:
          break;
        case 2:
          h.solve2();
          break;
        case 3:
          h.solve3();
          break;
        default:
          R.b2Assert(!1);
      }
      if (3 == h.m_count) break;
      l = h.getClosestPoint();
      l.lengthSquared();
      p = h.getSearchDirection();
      if (p.lengthSquared() < Number.MIN_VALUE * Number.MIN_VALUE) break;
      l = n[h.m_count];
      l.indexA = d.getSupport(E.mulTMV(f.R, p.getNegativePooled(), !0)) | 0;
      l.wA = E.mulX(f, d.getVertex(l.indexA), !0);
      l.indexB = e.getSupport(E.mulTMV(g.R, p, !0)) | 0;
      l.wB = E.mulX(g, e.getVertex(l.indexB), !0);
      l.w = E.subtractVVPooled(l.wB, l.wA);
      ++m;
      ++Ef.b2_gjkIters;
      p = !1;
      for (q = 0; q < r; ) {
        var t = q++;
        if (l.indexA == k[t] && l.indexB == G[t]) {
          p = !0;
          break;
        }
      }
      if (p) break;
      ++h.m_count;
    }
    Ef.b2_gjkMaxIters = E.max(Ef.b2_gjkMaxIters, m) | 0;
    h.getWitnessPoints(a.pointA, a.pointB);
    a.distance = E.subtractVVPooled(a.pointA, a.pointB).length();
    a.iterations = m;
    h.writeCache(b);
    c.useRadii &&
      ((b = d.m_radius),
      (e = e.m_radius),
      a.distance > b + e && a.distance > Number.MIN_VALUE
        ? ((a.distance -= b + e),
          (c = E.subtractVVPooled(a.pointB, a.pointA)),
          c.normalize(),
          (a.pointA.x += b * c.x),
          (a.pointA.y += b * c.y),
          (a.pointB.x -= e * c.x),
          (a.pointB.y -= e * c.y))
        : ((l = D.getFromPool()),
          (l.x = 0.5 * (a.pointA.x + a.pointB.x)),
          (l.y = 0.5 * (a.pointA.y + a.pointB.y)),
          (a.pointA.x = a.pointB.x = l.x),
          (a.pointA.y = a.pointB.y = l.y),
          (a.distance = 0)));
  };
  var tl = function () {};
  p["box2D.collision.B2DistanceInput"] = tl;
  tl.__name__ = ["box2D", "collision", "B2DistanceInput"];
  tl.prototype = {
    proxyA: null,
    proxyB: null,
    transformA: null,
    transformB: null,
    useRadii: null,
    __class__: tl,
  };
  var ul = function () {
    this.pointA = new D();
    this.pointB = new D();
  };
  p["box2D.collision.B2DistanceOutput"] = ul;
  ul.__name__ = ["box2D", "collision", "B2DistanceOutput"];
  ul.prototype = {
    pointA: null,
    pointB: null,
    distance: null,
    iterations: null,
    __class__: ul,
  };
  var Ti = function () {
    this.m_internalVertices = [];
  };
  p["box2D.collision.B2DistanceProxy"] = Ti;
  Ti.__name__ = ["box2D", "collision", "B2DistanceProxy"];
  Ti.prototype = {
    set: function (a) {
      switch (a.getType()) {
        case 0:
          a = u.__cast(a, Jc);
          for (
            this.m_vertices = this.m_internalVertices;
            1 < this.m_vertices.length;

          )
            this.m_vertices.pop();
          this.m_vertices[0] = a.m_p;
          this.m_count = 1;
          this.m_radius = a.m_radius;
          break;
        case 1:
          a = u.__cast(a, Db);
          this.m_vertices = a.m_vertices;
          this.m_count = a.m_vertexCount;
          this.m_radius = a.m_radius;
          break;
        case 2:
          a = u.__cast(a, Ig);
          for (
            this.m_vertices = this.m_internalVertices;
            2 < this.m_vertices.length;

          )
            this.m_vertices.pop();
          this.m_vertices[0] = a.m_v1;
          this.m_vertices[1] = a.m_v2;
          this.m_count = 2;
          this.m_radius = a.m_radius;
          break;
        default:
          R.b2Assert(!1);
      }
    },
    getSupport: function (a) {
      for (
        var b = 0,
          c = this.m_vertices[0].x * a.x + this.m_vertices[0].y * a.y,
          d = 1,
          e = this.m_count;
        d < e;

      ) {
        var f = d++,
          g = this.m_vertices[f].x * a.x + this.m_vertices[f].y * a.y;
        g > c && ((b = f), (c = g));
      }
      return b;
    },
    getSupportVertex: function (a) {
      for (
        var b = 0,
          c = this.m_vertices[0].x * a.x + this.m_vertices[0].y * a.y,
          d = 1,
          e = this.m_count;
        d < e;

      ) {
        var f = d++,
          g = this.m_vertices[f].x * a.x + this.m_vertices[f].y * a.y;
        g > c && ((b = f), (c = g));
      }
      return this.m_vertices[b];
    },
    getVertexCount: function () {
      return this.m_count;
    },
    getVertex: function (a) {
      R.b2Assert(0 <= a && a < this.m_count);
      return this.m_vertices[a];
    },
    m_internalVertices: null,
    m_vertices: null,
    m_count: null,
    m_radius: null,
    __class__: Ti,
  };
  var Jo = function () {
    this.oldAABB = new jf();
    this.stackQueue = [];
    this.stackQueuePos = 0;
    this.m_freeList = this.m_root = null;
    this.m_insertionCount = this.m_path = 0;
  };
  p["box2D.collision.B2DynamicTree"] = Jo;
  Jo.__name__ = ["box2D", "collision", "B2DynamicTree"];
  Jo.prototype = {
    createProxy: function (a, b) {
      var c = this.allocateNode(),
        d = R.b2_aabbExtension,
        e = R.b2_aabbExtension;
      c.aabb.lowerBound.x = a.lowerBound.x - d;
      c.aabb.lowerBound.y = a.lowerBound.y - e;
      c.aabb.upperBound.x = a.upperBound.x + d;
      c.aabb.upperBound.y = a.upperBound.y + e;
      c.userData = b;
      this.insertLeaf(c);
      return c;
    },
    destroyProxy: function (a) {
      this.removeLeaf(a);
      this.freeNode(a);
    },
    moveProxy: function (a, b, c) {
      R.b2Assert(a.isLeaf());
      if (a.aabb.contains(b)) return !1;
      this.removeLeaf(a);
      var d = R.b2_aabbExtension + R.b2_aabbMultiplier * (0 < c.x ? c.x : -c.x);
      c = R.b2_aabbExtension + R.b2_aabbMultiplier * (0 < c.y ? c.y : -c.y);
      a.aabb.lowerBound.x = b.lowerBound.x - d;
      a.aabb.lowerBound.y = b.lowerBound.y - c;
      a.aabb.upperBound.x = b.upperBound.x + d;
      a.aabb.upperBound.y = b.upperBound.y + c;
      this.insertLeaf(a);
      return !0;
    },
    rebalance: function (a) {
      if (null != this.m_root)
        for (var b = 0; b < a; ) {
          b++;
          for (var c = this.m_root, d = 0; 0 == c.isLeaf(); )
            (c = 0 != ((this.m_path >> d) & 1) ? c.child2 : c.child1),
              (d = (d + 1) & 31);
          ++this.m_path;
          this.removeLeaf(c);
          this.insertLeaf(c);
        }
    },
    getFatAABB: function (a) {
      return a.aabb;
    },
    getUserData: function (a) {
      return a.userData;
    },
    stackQueuePos: null,
    stackQueue: null,
    query: function (a, b) {
      if (null != this.m_root) {
        null == this.stackQueue[this.stackQueuePos] &&
          (this.stackQueue[this.stackQueuePos] = []);
        var c = this.stackQueue[this.stackQueuePos++],
          d = 0;
        for (c[d++] = this.m_root; 0 < d; ) {
          var e = c[--d];
          if (e.aabb.testOverlap(b))
            if (e.isLeaf()) {
              if (!a.queryCallback(e)) break;
            } else (c[d++] = e.child1), (c[d++] = e.child2);
        }
        for (d = c.length; 0 < d--; ) c.pop();
        --this.stackQueuePos;
      }
    },
    rayCast: function (a, b) {
      if (null != this.m_root) {
        var c = b.p1,
          d = b.p2,
          e = E.subtractVVPooled(c, d);
        e.normalize();
        e = E.crossFV(1, e);
        var f = E.absV(e),
          g = b.maxFraction,
          h = new jf();
        var n = c.x + g * (d.x - c.x);
        g = c.y + g * (d.y - c.y);
        h.lowerBound.x = Math.min(c.x, n);
        h.lowerBound.y = Math.min(c.y, g);
        h.upperBound.x = Math.max(c.x, n);
        h.upperBound.y = Math.max(c.y, g);
        var k = [],
          G = 0;
        for (k[G++] = this.m_root; 0 < G; )
          if (((n = k[--G]), 0 != n.aabb.testOverlap(h))) {
            g = n.aabb.getCenter();
            var l = n.aabb.getExtents();
            if (
              !(
                0 <
                Math.abs(e.x * (c.x - g.x) + e.y * (c.y - g.y)) -
                  f.x * l.x -
                  f.y * l.y
              )
            )
              if (n.isLeaf()) {
                g = new vl();
                g.p1 = b.p1;
                g.p2 = b.p2;
                g.maxFraction = b.maxFraction;
                g = a(g, n);
                if (0 == g) break;
                n = c.x + g * (d.x - c.x);
                g = c.y + g * (d.y - c.y);
                h.lowerBound.x = Math.min(c.x, n);
                h.lowerBound.y = Math.min(c.y, g);
                h.upperBound.x = Math.max(c.x, n);
                h.upperBound.y = Math.max(c.y, g);
              } else (k[G++] = n.child1), (k[G++] = n.child2);
          }
      }
    },
    allocateNode: function () {
      if (null != this.m_freeList) {
        var a = this.m_freeList;
        this.m_freeList = a.parent;
        a.parent = null;
        a.child1 = null;
        a.child2 = null;
        return a;
      }
      return new Xj();
    },
    freeNode: function (a) {
      a.parent = this.m_freeList;
      this.m_freeList = a;
    },
    insertLeaf: function (a) {
      ++this.m_insertionCount;
      if (null == this.m_root) (this.m_root = a), (this.m_root.parent = null);
      else {
        var b = a.aabb.getCenter(),
          c = this.m_root;
        if (0 == c.isLeaf())
          for (;;) {
            var d = c.child1;
            c = c.child2;
            c =
              Math.abs((d.aabb.lowerBound.x + d.aabb.upperBound.x) / 2 - b.x) +
                Math.abs(
                  (d.aabb.lowerBound.y + d.aabb.upperBound.y) / 2 - b.y
                ) <
              Math.abs((c.aabb.lowerBound.x + c.aabb.upperBound.x) / 2 - b.x) +
                Math.abs((c.aabb.lowerBound.y + c.aabb.upperBound.y) / 2 - b.y)
                ? d
                : c;
            if (0 != c.isLeaf()) break;
          }
        b = c.parent;
        d = this.allocateNode();
        d.parent = b;
        d.userData = null;
        d.aabb.combine(a.aabb, c.aabb);
        if (null != b)
          for (
            c.parent.child1 == c ? (b.child1 = d) : (b.child2 = d),
              d.child1 = c,
              d.child2 = a,
              c.parent = d,
              a.parent = d;
            !b.aabb.contains(d.aabb) &&
            (b.aabb.combine(b.child1.aabb, b.child2.aabb),
            (d = b),
            (b = b.parent),
            null != b);

          );
        else
          (d.child1 = c),
            (d.child2 = a),
            (c.parent = d),
            (this.m_root = a.parent = d);
      }
    },
    oldAABB: null,
    removeLeaf: function (a) {
      if (a == this.m_root) this.m_root = null;
      else {
        var b = a.parent,
          c = b.parent;
        a = b.child1 == a ? b.child2 : b.child1;
        if (null != c)
          for (
            c.child1 == b ? (c.child1 = a) : (c.child2 = a),
              a.parent = c,
              this.freeNode(b);
            null != c;

          ) {
            this.oldAABB.setTo(c.aabb);
            c.aabb.combine(c.child1.aabb, c.child2.aabb);
            if (this.oldAABB.contains(c.aabb)) break;
            c = c.parent;
          }
        else (this.m_root = a), (a.parent = null), this.freeNode(b);
      }
    },
    m_root: null,
    m_freeList: null,
    m_path: null,
    m_insertionCount: null,
    __class__: Jo,
  };
  var Ui = function () {};
  p["box2D.collision.QueryCallback"] = Ui;
  Ui.__name__ = ["box2D", "collision", "QueryCallback"];
  Ui.prototype = { queryCallback: null, __class__: Ui };
  var Ko = function () {};
  p["box2D.collision.IBroadPhase"] = Ko;
  Ko.__name__ = ["box2D", "collision", "IBroadPhase"];
  Ko.prototype = {
    createProxy: null,
    destroyProxy: null,
    moveProxy: null,
    testOverlap: null,
    getUserData: null,
    getFatAABB: null,
    getProxyCount: null,
    updatePairs: null,
    query: null,
    rayCast: null,
    validate: null,
    rebalance: null,
    __class__: Ko,
  };
  var wl = function () {
    this.m_tree = new Jo();
    this.m_moveBuffer = [];
    this.m_pairBuffer = [];
    this.m_proxyCount = this.m_pairCount = 0;
  };
  p["box2D.collision.B2DynamicTreeBroadPhase"] = wl;
  wl.__name__ = ["box2D", "collision", "B2DynamicTreeBroadPhase"];
  wl.__interfaces__ = [Ui, Ko];
  wl.prototype = {
    createProxy: function (a, b) {
      a = this.m_tree.createProxy(a, b);
      ++this.m_proxyCount;
      this.bufferMove(a);
      return a;
    },
    destroyProxy: function (a) {
      this.unBufferMove(a);
      --this.m_proxyCount;
      this.m_tree.destroyProxy(a);
    },
    moveProxy: function (a, b, c) {
      this.m_tree.moveProxy(a, b, c) && this.bufferMove(a);
    },
    testOverlap: function (a, b) {
      a = this.m_tree.getFatAABB(a);
      b = this.m_tree.getFatAABB(b);
      return a.testOverlap(b);
    },
    getUserData: function (a) {
      return this.m_tree.getUserData(a);
    },
    getFatAABB: function (a) {
      return this.m_tree.getFatAABB(a);
    },
    getProxyCount: function () {
      return this.m_proxyCount;
    },
    updatePairs: function (a) {
      for (
        var b = (this.m_pairCount = 0), c = this.m_moveBuffer;
        b < c.length;

      ) {
        var d = c[b];
        ++b;
        this.cur_queryProxy = d;
        d = this.m_tree.getFatAABB(d);
        this.m_tree.query(this, d);
      }
      this.cur_queryProxy = null;
      for (b = this.m_moveBuffer.length; 0 <= --b; ) this.m_moveBuffer.pop();
      c = !0;
      for (b = 0; c; )
        if (b >= this.m_pairCount) c = !1;
        else
          for (
            d = this.m_pairBuffer[b],
              a.addPair(
                this.m_tree.getUserData(d.proxyA),
                this.m_tree.getUserData(d.proxyB)
              ),
              ++b;
            b < this.m_pairCount;

          ) {
            var e = this.m_pairBuffer[b];
            if (e.proxyA != d.proxyA || e.proxyB != d.proxyB) break;
            ++b;
          }
    },
    queryCallback: function (a) {
      if (a == this.cur_queryProxy) return !0;
      this.m_pairCount == this.m_pairBuffer.length &&
        (this.m_pairBuffer[this.m_pairCount] = new Lo());
      var b = this.m_pairBuffer[this.m_pairCount];
      a.id < this.cur_queryProxy.id
        ? ((b.proxyA = a), (b.proxyB = this.cur_queryProxy))
        : ((b.proxyA = this.cur_queryProxy), (b.proxyB = a));
      ++this.m_pairCount;
      return !0;
    },
    query: function (a, b) {
      this.m_tree.query(a, b);
    },
    rayCast: function (a, b) {
      this.m_tree.rayCast(a, b);
    },
    validate: function () {},
    rebalance: function (a) {
      this.m_tree.rebalance(a);
    },
    bufferMove: function (a) {
      this.m_moveBuffer[this.m_moveBuffer.length] = a;
    },
    unBufferMove: function (a) {
      Q.remove(this.m_moveBuffer, a);
    },
    comparePairs: function (a, b) {
      return 0;
    },
    m_tree: null,
    m_proxyCount: null,
    m_moveBuffer: null,
    m_pairBuffer: null,
    m_pairCount: null,
    cur_queryProxy: null,
    __class__: wl,
  };
  var Xj = function () {
    this.aabb = new jf();
    this.id = Xj.currentID++;
  };
  p["box2D.collision.B2DynamicTreeNode"] = Xj;
  Xj.__name__ = ["box2D", "collision", "B2DynamicTreeNode"];
  Xj.prototype = {
    id: null,
    isLeaf: function () {
      return null == this.child1;
    },
    userData: null,
    aabb: null,
    parent: null,
    child1: null,
    child2: null,
    __class__: Xj,
  };
  var Lo = function () {};
  p["box2D.collision.B2DynamicTreePair"] = Lo;
  Lo.__name__ = ["box2D", "collision", "B2DynamicTreePair"];
  Lo.prototype = { proxyA: null, proxyB: null, __class__: Lo };
  var Dh = function () {
    this.m_pointCount = 0;
    this.m_points = [];
    for (var a = 0, b = R.b2_maxManifoldPoints; a < b; ) {
      var c = a++;
      this.m_points[c] = new Mo();
    }
    this.m_localPlaneNormal = new D();
    this.m_localPoint = new D();
  };
  p["box2D.collision.B2Manifold"] = Dh;
  Dh.__name__ = ["box2D", "collision", "B2Manifold"];
  Dh.prototype = {
    reset: function () {
      for (var a = 0, b = R.b2_maxManifoldPoints; a < b; ) {
        var c = a++;
        this.m_points[c].reset();
      }
      a = this.m_localPlaneNormal;
      a.x = 0;
      a.y = 0;
      a = this.m_localPoint;
      a.x = 0;
      this.m_pointCount = this.m_type = a.y = 0;
    },
    set: function (a) {
      this.m_pointCount = a.m_pointCount;
      for (var b = 0, c = R.b2_maxManifoldPoints; b < c; ) {
        var d = b++;
        this.m_points[d].set(a.m_points[d]);
      }
      b = this.m_localPlaneNormal;
      c = a.m_localPlaneNormal;
      b.x = c.x;
      b.y = c.y;
      b = this.m_localPoint;
      c = a.m_localPoint;
      b.x = c.x;
      b.y = c.y;
      this.m_type = a.m_type;
    },
    copy: function () {
      var a = new Dh();
      a.set(this);
      return a;
    },
    m_points: null,
    m_localPlaneNormal: null,
    m_localPoint: null,
    m_type: null,
    m_pointCount: null,
    __class__: Dh,
  };
  var Mo = function () {
    this.m_localPoint = new D();
    this.m_id = new Id();
    this.reset();
  };
  p["box2D.collision.B2ManifoldPoint"] = Mo;
  Mo.__name__ = ["box2D", "collision", "B2ManifoldPoint"];
  Mo.prototype = {
    reset: function () {
      var a = this.m_localPoint;
      a.x = 0;
      this.m_tangentImpulse = this.m_normalImpulse = a.y = 0;
      this.m_id.set_key(0);
    },
    set: function (a) {
      var b = this.m_localPoint,
        c = a.m_localPoint;
      b.x = c.x;
      b.y = c.y;
      this.m_normalImpulse = a.m_normalImpulse;
      this.m_tangentImpulse = a.m_tangentImpulse;
      this.m_id.set(a.m_id);
    },
    m_localPoint: null,
    m_normalImpulse: null,
    m_tangentImpulse: null,
    m_id: null,
    __class__: Mo,
  };
  var Is = function () {
    this.R = new uc();
    this.center = new D();
    this.extents = new D();
  };
  p["box2D.collision.B2OBB"] = Is;
  Is.__name__ = ["box2D", "collision", "B2OBB"];
  Is.prototype = { R: null, center: null, extents: null, __class__: Is };
  var vl = function (a, b, c) {
    null == c && (c = 1);
    this.p1 = new D();
    this.p2 = new D();
    if (null != a) {
      var d = this.p1;
      d.x = a.x;
      d.y = a.y;
    }
    null != b && ((a = this.p2), (a.x = b.x), (a.y = b.y));
    this.maxFraction = c;
  };
  p["box2D.collision.B2RayCastInput"] = vl;
  vl.__name__ = ["box2D", "collision", "B2RayCastInput"];
  vl.prototype = { p1: null, p2: null, maxFraction: null, __class__: vl };
  var No = function () {
    this.normal = new D();
  };
  p["box2D.collision.B2RayCastOutput"] = No;
  No.__name__ = ["box2D", "collision", "B2RayCastOutput"];
  No.prototype = { normal: null, fraction: null, __class__: No };
  var zf = function () {
    this.m_localPoint = new D();
    this.m_axis = new D();
  };
  p["box2D.collision.B2SeparationFunction"] = zf;
  zf.__name__ = ["box2D", "collision", "B2SeparationFunction"];
  zf.prototype = {
    initialize: function (a, b, c, d, e) {
      this.m_proxyA = b;
      this.m_proxyB = d;
      b = a.count;
      R.b2Assert(0 < b && 3 > b);
      var f = new D(),
        g = new D();
      if (1 == b) {
        this.m_type = zf.e_points;
        f = this.m_proxyA.getVertex(a.indexA[0]);
        g = this.m_proxyB.getVertex(a.indexB[0]);
        var h = f;
        var n = c.R;
        f = c.position.x + (n.col1.x * h.x + n.col2.x * h.y);
        c = c.position.y + (n.col1.y * h.x + n.col2.y * h.y);
        h = g;
        n = e.R;
        g = e.position.x + (n.col1.x * h.x + n.col2.x * h.y);
        e = e.position.y + (n.col1.y * h.x + n.col2.y * h.y);
        this.m_axis.x = g - f;
        this.m_axis.y = e - c;
        this.m_axis.normalize();
      } else if (a.indexB[0] == a.indexB[1])
        (this.m_type = zf.e_faceA),
          (b = this.m_proxyA.getVertex(a.indexA[0])),
          (d = this.m_proxyA.getVertex(a.indexA[1])),
          (g = this.m_proxyB.getVertex(a.indexB[0])),
          (this.m_localPoint.x = 0.5 * (b.x + d.x)),
          (this.m_localPoint.y = 0.5 * (b.y + d.y)),
          (this.m_axis = E.crossVF(E.subtractVV(d, b), 1)),
          this.m_axis.normalize(),
          (h = this.m_axis),
          (n = c.R),
          (b = n.col1.x * h.x + n.col2.x * h.y),
          (d = n.col1.y * h.x + n.col2.y * h.y),
          (h = this.m_localPoint),
          (n = c.R),
          (f = c.position.x + (n.col1.x * h.x + n.col2.x * h.y)),
          (c = c.position.y + (n.col1.y * h.x + n.col2.y * h.y)),
          (h = g),
          (n = e.R),
          (g = e.position.x + (n.col1.x * h.x + n.col2.x * h.y)),
          (e = e.position.y + (n.col1.y * h.x + n.col2.y * h.y)),
          0 > (g - f) * b + (e - c) * d &&
            ((e = this.m_axis), (e.x = -e.x), (e.y = -e.y));
      else if (a.indexA[0] == a.indexA[0])
        (this.m_type = zf.e_faceB),
          (n = this.m_proxyB.getVertex(a.indexB[0])),
          (h = this.m_proxyB.getVertex(a.indexB[1])),
          (f = this.m_proxyA.getVertex(a.indexA[0])),
          (this.m_localPoint.x = 0.5 * (n.x + h.x)),
          (this.m_localPoint.y = 0.5 * (n.y + h.y)),
          (this.m_axis = E.crossVF(E.subtractVV(h, n), 1)),
          this.m_axis.normalize(),
          (h = this.m_axis),
          (n = e.R),
          (b = n.col1.x * h.x + n.col2.x * h.y),
          (d = n.col1.y * h.x + n.col2.y * h.y),
          (h = this.m_localPoint),
          (n = e.R),
          (g = e.position.x + (n.col1.x * h.x + n.col2.x * h.y)),
          (e = e.position.y + (n.col1.y * h.x + n.col2.y * h.y)),
          (h = f),
          (n = c.R),
          (f = c.position.x + (n.col1.x * h.x + n.col2.x * h.y)),
          (c = c.position.y + (n.col1.y * h.x + n.col2.y * h.y)),
          0 > (f - g) * b + (c - e) * d &&
            ((e = this.m_axis), (e.x = -e.x), (e.y = -e.y));
      else {
        b = this.m_proxyA.getVertex(a.indexA[0]);
        d = this.m_proxyA.getVertex(a.indexA[1]);
        n = this.m_proxyB.getVertex(a.indexB[0]);
        h = this.m_proxyB.getVertex(a.indexB[1]);
        E.mulX(c, f, !0);
        f = E.mulMV(c.R, E.subtractVVPooled(d, b), !0);
        E.mulX(e, g, !0);
        a = E.mulMV(e.R, E.subtractVVPooled(h, n), !0);
        e = f.x * f.x + f.y * f.y;
        c = a.x * a.x + a.y * a.y;
        var k = E.subtractVVPooled(a, f);
        g = f.x * k.x + f.y * k.y;
        k = a.x * k.x + a.y * k.y;
        f = f.x * a.x + f.y * a.y;
        var G = e * c - f * f;
        a = 0;
        0 != G && (a = E.clamp((f * k - g * c) / G, 0, 1));
        0 > (f * a + k) / c && (a = E.clamp((f - g) / e, 0, 1));
        f = new D();
        f.x = b.x + a * (d.x - b.x);
        f.y = b.y + a * (d.y - b.y);
        g = new D();
        g.x = n.x + a * (h.x - n.x);
        g.y = n.y + a * (h.y - n.y);
        0 == a || 1 == a
          ? ((this.m_type = zf.e_faceB),
            (this.m_axis = E.crossVF(E.subtractVV(h, n), 1)),
            this.m_axis.normalize(),
            (this.m_localPoint = g))
          : ((this.m_type = zf.e_faceA),
            (this.m_axis = E.crossVF(E.subtractVV(d, b), 1)),
            (this.m_localPoint = f));
        0 > a && ((e = this.m_axis), (e.x = -e.x), (e.y = -e.y));
      }
    },
    evaluate: function (a, b) {
      var c;
      if (this.m_type == zf.e_points) {
        var d = E.mulTMV(a.R, this.m_axis, !0);
        var e = E.mulTMV(b.R, this.m_axis.getNegativePooled(), !0);
        d = this.m_proxyA.getSupportVertex(d);
        e = this.m_proxyB.getSupportVertex(e);
        a = E.mulX(a, d, !0);
        b = E.mulX(b, e, !0);
        return (c = (b.x - a.x) * this.m_axis.x + (b.y - a.y) * this.m_axis.y);
      }
      if (this.m_type == zf.e_faceA)
        return (
          (c = E.mulMV(a.R, this.m_axis, !0)),
          (a = E.mulX(a, this.m_localPoint, !0)),
          (e = E.mulTMV(b.R, c.getNegativePooled())),
          (e = this.m_proxyB.getSupportVertex(e)),
          (b = E.mulX(b, e, !0)),
          (c = (b.x - a.x) * c.x + (b.y - a.y) * c.y)
        );
      if (this.m_type == zf.e_faceB)
        return (
          (c = E.mulMV(b.R, this.m_axis, !0)),
          (b = E.mulX(b, this.m_localPoint, !0)),
          (d = E.mulTMV(a.R, c.getNegativePooled(), !0)),
          (d = this.m_proxyA.getSupportVertex(d)),
          (a = E.mulX(a, d, !0)),
          (c = (a.x - b.x) * c.x + (a.y - b.y) * c.y)
        );
      R.b2Assert(!1);
      return 0;
    },
    m_proxyA: null,
    m_proxyB: null,
    m_type: null,
    m_localPoint: null,
    m_axis: null,
    __class__: zf,
  };
  var xl = function () {
    this.useCache = !1;
    this.indexA = [];
    this.indexB = [];
  };
  p["box2D.collision.B2SimplexCache"] = xl;
  xl.__name__ = ["box2D", "collision", "B2SimplexCache"];
  xl.prototype = {
    metric: null,
    count: null,
    indexA: null,
    indexB: null,
    useCache: null,
    __class__: xl,
  };
  var Oo = function () {
    this.proxyA = new Ti();
    this.proxyB = new Ti();
    this.sweepA = new Eh();
    this.sweepB = new Eh();
  };
  p["box2D.collision.B2TOIInput"] = Oo;
  Oo.__name__ = ["box2D", "collision", "B2TOIInput"];
  Oo.prototype = {
    proxyA: null,
    proxyB: null,
    sweepA: null,
    sweepB: null,
    tolerance: null,
    __class__: Oo,
  };
  var kf = function (a, b) {
    this.position = new D();
    this.R = new uc();
    if (null != a) {
      var c = this.position;
      c.x = a.x;
      c.y = a.y;
      this.R.setM(b);
    }
  };
  p["box2D.common.math.B2Transform"] = kf;
  kf.__name__ = ["box2D", "common", "math", "B2Transform"];
  kf.prototype = {
    initialize: function (a, b) {
      var c = this.position;
      c.x = a.x;
      c.y = a.y;
      this.R.setM(b);
    },
    setIdentity: function () {
      var a = this.position;
      a.x = 0;
      a.y = 0;
      this.R.setIdentity();
    },
    set: function (a) {
      var b = this.position,
        c = a.position;
      b.x = c.x;
      b.y = c.y;
      this.R.setM(a.R);
    },
    getAngle: function () {
      return Math.atan2(this.R.col1.y, this.R.col1.x);
    },
    multiply: function (a) {
      a = this.R.multiplyV(a);
      a.add(this.position);
      return a;
    },
    position: null,
    R: null,
    __class__: kf,
  };
  var uc = function () {
    this.col1 = new D(0, 1);
    this.col2 = new D(0, 1);
  };
  p["box2D.common.math.B2Mat22"] = uc;
  uc.__name__ = ["box2D", "common", "math", "B2Mat22"];
  uc.fromAngle = function (a) {
    var b = new uc();
    b.set(a);
    return b;
  };
  uc.fromVV = function (a, b) {
    var c = new uc();
    c.setVV(a, b);
    return c;
  };
  uc.prototype = {
    set: function (a) {
      var b = Math.cos(a);
      a = Math.sin(a);
      this.col1.x = b;
      this.col2.x = -a;
      this.col1.y = a;
      this.col2.y = b;
    },
    setVV: function (a, b) {
      var c = this.col1;
      c.x = a.x;
      c.y = a.y;
      a = this.col2;
      a.x = b.x;
      a.y = b.y;
    },
    copy: function () {
      var a = new uc();
      a.setM(this);
      return a;
    },
    setM: function (a) {
      var b = this.col1,
        c = a.col1;
      b.x = c.x;
      b.y = c.y;
      b = this.col2;
      a = a.col2;
      b.x = a.x;
      b.y = a.y;
    },
    addM: function (a) {
      this.col1.x += a.col1.x;
      this.col1.y += a.col1.y;
      this.col2.x += a.col2.x;
      this.col2.y += a.col2.y;
    },
    multiplyV: function (a) {
      return new D(
        this.col1.x * a.x + this.col2.x * a.y,
        this.col1.y * a.x + this.col2.y * a.y
      );
    },
    setIdentity: function () {
      this.col1.x = 1;
      this.col2.x = 0;
      this.col1.y = 0;
      this.col2.y = 1;
    },
    setZero: function () {
      this.col1.x = 0;
      this.col2.x = 0;
      this.col1.y = 0;
      this.col2.y = 0;
    },
    setAngle: function (a) {
      this.col1.x = Math.cos(a);
      this.col1.y = Math.sin(a);
      this.col2.x = -this.col1.y;
      this.col2.y = this.col1.x;
    },
    getAngle: function () {
      return Math.atan2(this.col1.y, this.col1.x);
    },
    getInverse: function (a) {
      var b = this.col1.x,
        c = this.col2.x,
        d = this.col1.y,
        e = this.col2.y,
        f = b * e - c * d;
      0 != f && (f = 1 / f);
      a.col1.x = f * e;
      a.col2.x = -f * c;
      a.col1.y = -f * d;
      a.col2.y = f * b;
      return a;
    },
    solve: function (a, b, c) {
      var d = this.col1.x,
        e = this.col2.x,
        f = this.col1.y,
        g = this.col2.y,
        h = d * g - e * f;
      0 != h && (h = 1 / h);
      a.x = h * (g * b - e * c);
      a.y = h * (d * c - f * b);
      return a;
    },
    abs: function () {
      this.col1.abs();
      this.col2.abs();
    },
    col1: null,
    col2: null,
    __class__: uc,
  };
  var Bb = function () {};
  p["box2D.collision.B2TimeOfImpact"] = Bb;
  Bb.__name__ = ["box2D", "collision", "B2TimeOfImpact"];
  Bb.timeOfImpact = function (a) {
    ++Bb.b2_toiCalls;
    var b = a.proxyA,
      c = a.proxyB,
      d = a.sweepA,
      e = a.sweepB;
    R.b2Assert(d.t0 == e.t0);
    R.b2Assert(1 - d.t0 > Number.MIN_VALUE);
    var f = b.m_radius + c.m_radius;
    a = a.tolerance;
    var g = 0,
      h = 0,
      n = 0;
    Bb.s_cache.count = 0;
    for (Bb.s_distanceInput.useRadii = !1; ; ) {
      d.getTransform(Bb.s_xfA, g);
      e.getTransform(Bb.s_xfB, g);
      Bb.s_distanceInput.proxyA = b;
      Bb.s_distanceInput.proxyB = c;
      Bb.s_distanceInput.transformA = Bb.s_xfA;
      Bb.s_distanceInput.transformB = Bb.s_xfB;
      Ef.distance(Bb.s_distanceOutput, Bb.s_cache, Bb.s_distanceInput);
      if (0 >= Bb.s_distanceOutput.distance) {
        g = 1;
        break;
      }
      Bb.s_fcn.initialize(Bb.s_cache, b, Bb.s_xfA, c, Bb.s_xfB);
      var k = Bb.s_fcn.evaluate(Bb.s_xfA, Bb.s_xfB);
      if (0 >= k) {
        g = 1;
        break;
      }
      0 == h && (n = k > f ? E.max(f - a, 0.75 * f) : E.max(k - a, 0.02 * f));
      if (k - n < 0.5 * a) {
        if (0 == h) {
          g = 1;
          break;
        }
        break;
      }
      var G = g,
        l = g,
        m = 1;
      d.getTransform(Bb.s_xfA, m);
      e.getTransform(Bb.s_xfB, m);
      var r = Bb.s_fcn.evaluate(Bb.s_xfA, Bb.s_xfB);
      if (r >= n) {
        g = 1;
        break;
      }
      for (var p = 0; ; ) {
        var q =
          0 != (p & 1) ? l + ((n - k) * (m - l)) / (r - k) : 0.5 * (l + m);
        d.getTransform(Bb.s_xfA, q);
        e.getTransform(Bb.s_xfB, q);
        var t = Bb.s_fcn.evaluate(Bb.s_xfA, Bb.s_xfB);
        if (E.abs(t - n) < 0.025 * a) {
          G = q;
          break;
        }
        t > n ? ((l = q), (k = t)) : ((m = q), (r = t));
        ++p;
        ++Bb.b2_toiRootIters;
        if (50 == p) break;
      }
      Bb.b2_toiMaxRootIters = E.max(Bb.b2_toiMaxRootIters, p) | 0;
      if (G < (1 + 100 * Number.MIN_VALUE) * g) break;
      g = G;
      ++h;
      ++Bb.b2_toiIters;
      if (1e3 == h) break;
    }
    Bb.b2_toiMaxIters = E.max(Bb.b2_toiMaxIters, h) | 0;
    return g;
  };
  var Yj = function () {
    this.m_normal = new D();
    this.m_points = [];
    for (var a = 0, b = R.b2_maxManifoldPoints; a < b; ) {
      var c = a++;
      this.m_points[c] = new D();
    }
  };
  p["box2D.collision.B2WorldManifold"] = Yj;
  Yj.__name__ = ["box2D", "collision", "B2WorldManifold"];
  Yj.prototype = {
    reset: function () {
      this.m_normal = new D();
      this.m_points = [];
      for (var a = 0, b = R.b2_maxManifoldPoints; a < b; ) {
        var c = a++;
        this.m_points[c] = new D();
      }
    },
    initialize: function (a, b, c, d, e) {
      if (0 != a.m_pointCount) {
        this.m_normal = new D();
        this.m_points = [];
        for (var f = 0, g = R.b2_maxManifoldPoints; f < g; ) {
          var h = f++;
          this.m_points[h] = new D();
        }
        switch (a.m_type) {
          case 1:
            g = b.R;
            f = a.m_localPoint;
            h = b.position.x + g.col1.x * f.x + g.col2.x * f.y;
            b = b.position.y + g.col1.y * f.x + g.col2.y * f.y;
            g = d.R;
            f = a.m_points[0].m_localPoint;
            a = d.position.x + g.col1.x * f.x + g.col2.x * f.y;
            d = d.position.y + g.col1.y * f.x + g.col2.y * f.y;
            f = a - h;
            g = d - b;
            var n = f * f + g * g;
            n > Number.MIN_VALUE * Number.MIN_VALUE
              ? ((n = Math.sqrt(n)),
                (this.m_normal.x = f / n),
                (this.m_normal.y = g / n))
              : ((this.m_normal.x = 1), (this.m_normal.y = 0));
            f = b + c * this.m_normal.y;
            d -= e * this.m_normal.y;
            this.m_points[0].x =
              0.5 * (h + c * this.m_normal.x + (a - e * this.m_normal.x));
            this.m_points[0].y = 0.5 * (f + d);
            break;
          case 2:
            g = b.R;
            f = a.m_localPlaneNormal;
            h = g.col1.x * f.x + g.col2.x * f.y;
            n = g.col1.y * f.x + g.col2.y * f.y;
            g = b.R;
            f = a.m_localPoint;
            var k = b.position.x + g.col1.x * f.x + g.col2.x * f.y;
            var G = b.position.y + g.col1.y * f.x + g.col2.y * f.y;
            this.m_normal.x = h;
            this.m_normal.y = n;
            b = 0;
            for (var l = a.m_pointCount; b < l; ) {
              var m = b++;
              g = d.R;
              f = a.m_points[m].m_localPoint;
              var r = d.position.x + g.col1.x * f.x + g.col2.x * f.y;
              f = d.position.y + g.col1.y * f.x + g.col2.y * f.y;
              this.m_points[m].x =
                r + 0.5 * (c - (r - k) * h - (f - G) * n - e) * h;
              this.m_points[m].y =
                f + 0.5 * (c - (r - k) * h - (f - G) * n - e) * n;
            }
            break;
          case 4:
            for (
              g = d.R,
                f = a.m_localPlaneNormal,
                h = g.col1.x * f.x + g.col2.x * f.y,
                n = g.col1.y * f.x + g.col2.y * f.y,
                g = d.R,
                f = a.m_localPoint,
                k = d.position.x + g.col1.x * f.x + g.col2.x * f.y,
                G = d.position.y + g.col1.y * f.x + g.col2.y * f.y,
                this.m_normal.x = -h,
                this.m_normal.y = -n,
                d = 0,
                l = a.m_pointCount;
              d < l;

            )
              (m = d++),
                (g = b.R),
                (f = a.m_points[m].m_localPoint),
                (r = b.position.x + g.col1.x * f.x + g.col2.x * f.y),
                (f = b.position.y + g.col1.y * f.x + g.col2.y * f.y),
                (this.m_points[m].x =
                  r + 0.5 * (e - (r - k) * h - (f - G) * n - c) * h),
                (this.m_points[m].y =
                  f + 0.5 * (e - (r - k) * h - (f - G) * n - c) * n);
        }
      }
    },
    getPoint: function () {
      return 0 == this.m_points.length
        ? null
        : 1 == this.m_points.length
        ? this.m_points[0]
        : new D(
            (this.m_points[0].x + this.m_points[1].x) / 2,
            (this.m_points[0].y + this.m_points[1].y) / 2
          );
    },
    m_normal: null,
    m_points: null,
    __class__: Yj,
  };
  var Jb = function () {
    this.m_type = -1;
    this.m_radius = R.b2_linearSlop;
  };
  p["box2D.collision.shapes.B2Shape"] = Jb;
  Jb.__name__ = ["box2D", "collision", "shapes", "B2Shape"];
  Jb.testOverlap = function (a, b, c, d) {
    Jb.initialized ||
      ((Jb.distanceInput.proxyA = Jb.proxyA),
      (Jb.distanceInput.proxyB = Jb.proxyB),
      (Jb.distanceInput.useRadii = !0),
      (Jb.initialized = !0));
    Jb.proxyA.set(a);
    Jb.proxyB.set(c);
    Jb.distanceInput.transformA = b;
    Jb.distanceInput.transformB = d;
    Jb.simplexCache.count = 0;
    Ef.distance(Jb.distanceOutput, Jb.simplexCache, Jb.distanceInput);
    return Jb.distanceOutput.distance < 10 * Number.MIN_VALUE;
  };
  Jb.prototype = {
    copy: function () {
      return null;
    },
    set: function (a) {
      this.m_radius = a.m_radius;
    },
    getType: function () {
      return this.m_type;
    },
    testPoint: function (a, b) {
      return !1;
    },
    rayCast: function (a, b, c) {
      return !1;
    },
    computeAABB: function (a, b) {},
    computeMass: function (a, b) {},
    computeSubmergedArea: function (a, b, c, d) {
      return 0;
    },
    m_type: null,
    m_radius: null,
    __class__: Jb,
  };
  var Jc = function (a) {
    null == a && (a = 0);
    Jb.call(this);
    this.m_p = new D();
    this.m_type = 0;
    this.m_radius = a;
  };
  p["box2D.collision.shapes.B2CircleShape"] = Jc;
  Jc.__name__ = ["box2D", "collision", "shapes", "B2CircleShape"];
  Jc.__super__ = Jb;
  Jc.prototype = x(Jb.prototype, {
    copy: function () {
      var a = new Jc();
      a.set(this);
      return a;
    },
    set: function (a) {
      Jb.prototype.set.call(this, a);
      if (u.__instanceof(a, Jc)) {
        var b = u.__cast(a, Jc);
        a = this.m_p;
        b = b.m_p;
        a.x = b.x;
        a.y = b.y;
      }
    },
    testPoint: function (a, b) {
      var c = a.R,
        d = a.position.x + (c.col1.x * this.m_p.x + c.col2.x * this.m_p.y);
      a = a.position.y + (c.col1.y * this.m_p.x + c.col2.y * this.m_p.y);
      d = b.x - d;
      a = b.y - a;
      return d * d + a * a <= this.m_radius * this.m_radius;
    },
    rayCast: function (a, b, c) {
      var d = c.R,
        e =
          b.p1.x -
          (c.position.x + (d.col1.x * this.m_p.x + d.col2.x * this.m_p.y));
      c =
        b.p1.y -
        (c.position.y + (d.col1.y * this.m_p.x + d.col2.y * this.m_p.y));
      d = b.p2.x - b.p1.x;
      var f = b.p2.y - b.p1.y,
        g = e * d + c * f,
        h = d * d + f * f,
        n = g * g - h * (e * e + c * c - this.m_radius * this.m_radius);
      if (0 > n || h < Number.MIN_VALUE) return !1;
      g = -(g + Math.sqrt(n));
      return 0 <= g && g <= b.maxFraction * h
        ? ((g /= h),
          (a.fraction = g),
          (a.normal.x = e + g * d),
          (a.normal.y = c + g * f),
          a.normal.normalize(),
          !0)
        : !1;
    },
    computeAABB: function (a, b) {
      var c = b.R,
        d = b.position.x + (c.col1.x * this.m_p.x + c.col2.x * this.m_p.y);
      b = b.position.y + (c.col1.y * this.m_p.x + c.col2.y * this.m_p.y);
      c = a.lowerBound;
      c.x = d - this.m_radius;
      c.y = b - this.m_radius;
      a = a.upperBound;
      a.x = d + this.m_radius;
      a.y = b + this.m_radius;
    },
    computeMass: function (a, b) {
      a.mass = b * R.b2_pi * this.m_radius * this.m_radius;
      b = a.center;
      var c = this.m_p;
      b.x = c.x;
      b.y = c.y;
      a.I =
        a.mass *
        (0.5 * this.m_radius * this.m_radius +
          (this.m_p.x * this.m_p.x + this.m_p.y * this.m_p.y));
    },
    computeSubmergedArea: function (a, b, c, d) {
      c = E.mulX(c, this.m_p, !0);
      var e = -(E.dot(a, c) - b);
      if (e < -this.m_radius + Number.MIN_VALUE) return 0;
      if (e > this.m_radius)
        return (
          (d.x = c.x), (d.y = c.y), Math.PI * this.m_radius * this.m_radius
        );
      b = this.m_radius * this.m_radius;
      var f = e * e;
      e =
        b * (Math.asin(e / this.m_radius) + Math.PI / 2) + e * Math.sqrt(b - f);
      b = (-0.6666666666666666 * Math.pow(b - f, 1.5)) / e;
      d.x = c.x + a.x * b;
      d.y = c.y + a.y * b;
      return e;
    },
    getLocalPosition: function () {
      return this.m_p;
    },
    setLocalPosition: function (a) {
      var b = this.m_p;
      b.x = a.x;
      b.y = a.y;
    },
    getRadius: function () {
      return this.m_radius;
    },
    setRadius: function (a) {
      this.m_radius = a;
    },
    m_p: null,
    __class__: Jc,
  });
  var Ig = function (a, b) {
    Jb.call(this);
    this.s_supportVec = new D();
    new D();
    new D();
    this.m_v0 = new D();
    this.m_v3 = new D();
    this.m_hasVertex3 = this.m_hasVertex0 = !1;
    this.m_coreV1 = new D();
    this.m_coreV2 = new D();
    this.m_normal = new D();
    this.m_direction = new D();
    this.m_cornerDir1 = new D();
    this.m_cornerDir2 = new D();
    this.m_type = 2;
    this.m_nextEdge = this.m_prevEdge = null;
    this.m_v1 = a;
    this.m_v2 = b;
    a = this.m_direction;
    a.x = this.m_v2.x - this.m_v1.x;
    a.y = this.m_v2.y - this.m_v1.y;
    this.m_length = this.m_direction.normalize();
    a = this.m_normal;
    b = -this.m_direction.x;
    a.x = this.m_direction.y;
    a.y = b;
    a = this.m_coreV1;
    a.x = -R.b2_toiSlop * (this.m_normal.x - this.m_direction.x) + this.m_v1.x;
    a.y = -R.b2_toiSlop * (this.m_normal.y - this.m_direction.y) + this.m_v1.y;
    a = this.m_coreV2;
    a.x = -R.b2_toiSlop * (this.m_normal.x + this.m_direction.x) + this.m_v2.x;
    a.y = -R.b2_toiSlop * (this.m_normal.y + this.m_direction.y) + this.m_v2.y;
    this.m_cornerDir1 = this.m_normal;
    a = this.m_cornerDir2;
    a.x = -this.m_normal.x;
    a.y = -this.m_normal.y;
  };
  p["box2D.collision.shapes.B2EdgeShape"] = Ig;
  Ig.__name__ = ["box2D", "collision", "shapes", "B2EdgeShape"];
  Ig.__super__ = Jb;
  Ig.prototype = x(Jb.prototype, {
    testPoint: function (a, b) {
      return !1;
    },
    rayCast: function (a, b, c) {
      var d = b.p2.x - b.p1.x,
        e = b.p2.y - b.p1.y;
      var f = c.R;
      var g = c.position.x + (f.col1.x * this.m_v1.x + f.col2.x * this.m_v1.y),
        h = c.position.y + (f.col1.y * this.m_v1.x + f.col2.y * this.m_v1.y),
        n =
          c.position.y + (f.col1.y * this.m_v2.x + f.col2.y * this.m_v2.y) - h;
      c = -(
        c.position.x +
        (f.col1.x * this.m_v2.x + f.col2.x * this.m_v2.y) -
        g
      );
      f = 100 * Number.MIN_VALUE;
      var k = -(d * n + e * c);
      if (k > f) {
        g = b.p1.x - g;
        var G = b.p1.y - h;
        h = g * n + G * c;
        if (
          0 <= h &&
          h <= b.maxFraction * k &&
          ((b = -d * G + e * g), -f * k <= b && b <= k * (1 + f))
        )
          return (
            (a.fraction = h / k),
            (b = Math.sqrt(n * n + c * c)),
            (a.normal.x = n / b),
            (a.normal.y = c / b),
            !0
          );
      }
      return !1;
    },
    computeAABB: function (a, b) {
      var c = b.R,
        d = b.position.x + (c.col1.x * this.m_v1.x + c.col2.x * this.m_v1.y),
        e = b.position.y + (c.col1.y * this.m_v1.x + c.col2.y * this.m_v1.y),
        f = b.position.x + (c.col1.x * this.m_v2.x + c.col2.x * this.m_v2.y);
      b = b.position.y + (c.col1.y * this.m_v2.x + c.col2.y * this.m_v2.y);
      d < f
        ? ((a.lowerBound.x = d), (a.upperBound.x = f))
        : ((a.lowerBound.x = f), (a.upperBound.x = d));
      e < b
        ? ((a.lowerBound.y = e), (a.upperBound.y = b))
        : ((a.lowerBound.y = b), (a.upperBound.y = e));
    },
    computeMass: function (a, b) {
      a.mass = 0;
      b = a.center;
      var c = this.m_v1;
      b.x = c.x;
      b.y = c.y;
      a.I = 0;
    },
    computeSubmergedArea: function (a, b, c, d) {
      var e = new D(a.x * b, a.y * b),
        f = E.mulX(c, this.m_v1, !0);
      c = E.mulX(c, this.m_v2, !0);
      var g = E.dot(a, f) - b;
      a = E.dot(a, c) - b;
      if (0 < g) {
        if (0 < a) return 0;
        f.x = (-a / (g - a)) * f.x + (g / (g - a)) * c.x;
        f.y = (-a / (g - a)) * f.y + (g / (g - a)) * c.y;
      } else
        0 < a &&
          ((c.x = (-a / (g - a)) * f.x + (g / (g - a)) * c.x),
          (c.y = (-a / (g - a)) * f.y + (g / (g - a)) * c.y));
      d.x = (e.x + f.x + c.x) / 3;
      d.y = (e.y + f.y + c.y) / 3;
      return 0.5 * ((f.x - e.x) * (c.y - e.y) - (f.y - e.y) * (c.x - e.x));
    },
    getLength: function () {
      return this.m_length;
    },
    getVertex1: function () {
      return this.m_v1;
    },
    getVertex2: function () {
      return this.m_v2;
    },
    getCoreVertex1: function () {
      return this.m_coreV1;
    },
    getCoreVertex2: function () {
      return this.m_coreV2;
    },
    getNormalVector: function () {
      return this.m_normal;
    },
    getDirectionVector: function () {
      return this.m_direction;
    },
    getCorner1Vector: function () {
      return this.m_cornerDir1;
    },
    getCorner2Vector: function () {
      return this.m_cornerDir2;
    },
    corner1IsConvex: function () {
      return this.m_cornerConvex1;
    },
    corner2IsConvex: function () {
      return this.m_cornerConvex2;
    },
    getFirstVertex: function (a) {
      var b = a.R;
      return new D(
        a.position.x +
          (b.col1.x * this.m_coreV1.x + b.col2.x * this.m_coreV1.y),
        a.position.y + (b.col1.y * this.m_coreV1.x + b.col2.y * this.m_coreV1.y)
      );
    },
    getNextEdge: function () {
      return this.m_nextEdge;
    },
    getPrevEdge: function () {
      return this.m_prevEdge;
    },
    s_supportVec: null,
    support: function (a, b, c) {
      var d = a.R,
        e =
          a.position.x +
          (d.col1.x * this.m_coreV1.x + d.col2.x * this.m_coreV1.y),
        f =
          a.position.y +
          (d.col1.y * this.m_coreV1.x + d.col2.y * this.m_coreV1.y),
        g =
          a.position.x +
          (d.col1.x * this.m_coreV2.x + d.col2.x * this.m_coreV2.y);
      a =
        a.position.y +
        (d.col1.y * this.m_coreV2.x + d.col2.y * this.m_coreV2.y);
      e * b + f * c > g * b + a * c
        ? ((this.s_supportVec.x = e), (this.s_supportVec.y = f))
        : ((this.s_supportVec.x = g), (this.s_supportVec.y = a));
      return this.s_supportVec;
    },
    copy: function () {
      var a = new Ig(this.m_v1, this.m_v2);
      a.set(this);
      var b = u.__cast(a, Ig),
        c = b.m_v0,
        d = this.m_v0;
      c.x = d.x;
      c.y = d.y;
      c = b.m_v3;
      d = this.m_v3;
      c.x = d.x;
      c.y = d.y;
      b.m_hasVertex0 = this.m_hasVertex0;
      b.m_hasVertex3 = this.m_hasVertex3;
      return a;
    },
    setPrevEdge: function (a, b, c, d) {
      this.m_prevEdge = a;
      this.m_coreV1 = b;
      this.m_cornerDir1 = c;
      this.m_cornerConvex1 = d;
    },
    setNextEdge: function (a, b, c, d) {
      this.m_nextEdge = a;
      this.m_coreV2 = b;
      this.m_cornerDir2 = c;
      this.m_cornerConvex2 = d;
    },
    m_v1: null,
    m_v2: null,
    m_v0: null,
    m_v3: null,
    m_hasVertex0: null,
    m_hasVertex3: null,
    m_coreV1: null,
    m_coreV2: null,
    m_length: null,
    m_normal: null,
    m_direction: null,
    m_cornerDir1: null,
    m_cornerDir2: null,
    m_cornerConvex1: null,
    m_cornerConvex2: null,
    m_nextEdge: null,
    m_prevEdge: null,
    __class__: Ig,
  });
  var Zj = function () {
    this.mass = 0;
    this.center = new D(0, 0);
    this.I = 0;
  };
  p["box2D.collision.shapes.B2MassData"] = Zj;
  Zj.__name__ = ["box2D", "collision", "shapes", "B2MassData"];
  Zj.prototype = { mass: null, center: null, I: null, __class__: Zj };
  var Db = function () {
    Jb.call(this);
    this.m_type = 1;
    this.m_centroid = new D();
    this.m_vertices = [];
    this.m_normals = [];
  };
  p["box2D.collision.shapes.B2PolygonShape"] = Db;
  Db.__name__ = ["box2D", "collision", "shapes", "B2PolygonShape"];
  Db.asArray = function (a, b) {
    var c = new Db();
    c.setAsArray(a, b);
    return c;
  };
  Db.asVector = function (a, b) {
    var c = new Db();
    c.setAsVector(a, b);
    return c;
  };
  Db.asBox = function (a, b) {
    var c = new Db();
    c.setAsBox(a, b);
    return c;
  };
  Db.asOrientedBox = function (a, b, c, d) {
    null == d && (d = 0);
    var e = new Db();
    e.setAsOrientedBox(a, b, c, d);
    return e;
  };
  Db.asEdge = function (a, b) {
    var c = new Db();
    c.setAsEdge(a, b);
    return c;
  };
  Db.computeCentroid = function (a, b) {
    for (var c = new D(), d = 0, e = 0; e < b; ) {
      var f = e++,
        g = a[f];
      f = f + 1 < b ? a[(f + 1) | 0] : a[0];
      var h = 0.5 * ((g.x - 0) * (f.y - 0) - (g.y - 0) * (f.x - 0));
      d += h;
      c.x += 0.3333333333333333 * h * (0 + g.x + f.x);
      c.y += 0.3333333333333333 * h * (0 + g.y + f.y);
    }
    c.x *= 1 / d;
    c.y *= 1 / d;
    return c;
  };
  Db.computeOBB = function (a, b, c) {
    for (var d = [], e = 0; e < c; ) {
      var f = e++;
      d[f] = b[f];
    }
    d[c] = d[0];
    b = Number.MAX_VALUE;
    e = 1;
    for (f = c + 1; e < f; ) {
      var g = e++,
        h = d[(g - 1) | 0],
        n = d[g].x - h.x,
        k = d[g].y - h.y;
      g = Math.sqrt(n * n + k * k);
      n /= g;
      k /= g;
      for (
        var G = -k,
          l = n,
          m = (g = Number.MAX_VALUE),
          r = -Number.MAX_VALUE,
          p = -Number.MAX_VALUE,
          q = 0,
          t = c;
        q < t;

      ) {
        var na = q++,
          u = d[na].x - h.x,
          x = d[na].y - h.y;
        na = n * u + k * x;
        u = G * u + l * x;
        na < g && (g = na);
        u < m && (m = u);
        na > r && (r = na);
        u > p && (p = u);
      }
      q = (r - g) * (p - m);
      q < 0.95 * b &&
        ((b = q),
        (a.R.col1.x = n),
        (a.R.col1.y = k),
        (a.R.col2.x = G),
        (a.R.col2.y = l),
        (n = 0.5 * (g + r)),
        (k = 0.5 * (m + p)),
        (G = a.R),
        (a.center.x = h.x + (G.col1.x * n + G.col2.x * k)),
        (a.center.y = h.y + (G.col1.y * n + G.col2.y * k)),
        (a.extents.x = 0.5 * (r - g)),
        (a.extents.y = 0.5 * (p - m)));
    }
  };
  Db.__super__ = Jb;
  Db.prototype = x(Jb.prototype, {
    copy: function () {
      var a = new Db();
      a.set(this);
      return a;
    },
    set: function (a) {
      Jb.prototype.set.call(this, a);
      if (u.__instanceof(a, Db)) {
        a = u.__cast(a, Db);
        var b = this.m_centroid,
          c = a.m_centroid;
        b.x = c.x;
        b.y = c.y;
        this.m_vertexCount = a.m_vertexCount;
        this.reserve(this.m_vertexCount);
        b = 0;
        for (c = this.m_vertexCount; b < c; ) {
          var d = b++,
            e = this.m_vertices[d],
            f = a.m_vertices[d];
          e.x = f.x;
          e.y = f.y;
          e = this.m_normals[d];
          d = a.m_normals[d];
          e.x = d.x;
          e.y = d.y;
        }
      }
    },
    setAsArray: function (a, b) {
      null == b && (b = 0);
      for (var c = [], d = 0; d < a.length; ) {
        var e = a[d];
        ++d;
        c.push(e);
      }
      this.setAsVector(c, b);
    },
    setAsVector: function (a, b) {
      null == b && (b = 0);
      0 == b && (b = a.length);
      R.b2Assert(2 <= b);
      this.m_vertexCount = b;
      this.reserve(b);
      b = 0;
      for (var c = this.m_vertexCount; b < c; ) {
        var d = b++,
          e = this.m_vertices[d];
        d = a[d];
        e.x = d.x;
        e.y = d.y;
      }
      a = 0;
      for (b = this.m_vertexCount; a < b; )
        (c = a++),
          (d = E.subtractVVPooled(
            this.m_vertices[c + 1 < this.m_vertexCount ? c + 1 : 0],
            this.m_vertices[c]
          )),
          R.b2Assert(d.lengthSquared() > Number.MIN_VALUE),
          (e = this.m_normals[c]),
          (d = E.crossVF(d, 1)),
          (e.x = d.x),
          (e.y = d.y),
          this.m_normals[c].normalize();
      this.m_centroid = Db.computeCentroid(this.m_vertices, this.m_vertexCount);
    },
    setAsBox: function (a, b) {
      this.m_vertexCount = 4;
      this.reserve(4);
      var c = this.m_vertices[0];
      c.x = -a;
      c.y = -b;
      c = this.m_vertices[1];
      c.x = a;
      c.y = -b;
      c = this.m_vertices[2];
      c.x = a;
      c.y = b;
      c = this.m_vertices[3];
      c.x = -a;
      c.y = b;
      a = this.m_normals[0];
      a.x = 0;
      a.y = -1;
      a = this.m_normals[1];
      a.x = 1;
      a.y = 0;
      a = this.m_normals[2];
      a.x = 0;
      a.y = 1;
      a = this.m_normals[3];
      a.x = -1;
      a.y = 0;
      a = this.m_centroid;
      a.x = 0;
      a.y = 0;
    },
    setAsOrientedBox: function (a, b, c, d) {
      null == d && (d = 0);
      this.m_vertexCount = 4;
      this.reserve(4);
      var e = this.m_vertices[0];
      e.x = -a;
      e.y = -b;
      e = this.m_vertices[1];
      e.x = a;
      e.y = -b;
      e = this.m_vertices[2];
      e.x = a;
      e.y = b;
      e = this.m_vertices[3];
      e.x = -a;
      e.y = b;
      a = this.m_normals[0];
      a.x = 0;
      a.y = -1;
      a = this.m_normals[1];
      a.x = 1;
      a.y = 0;
      a = this.m_normals[2];
      a.x = 0;
      a.y = 1;
      a = this.m_normals[3];
      a.x = -1;
      a.y = 0;
      this.m_centroid = c;
      a = new kf();
      a.position = c;
      a.R.set(d);
      c = 0;
      for (d = this.m_vertexCount; c < d; )
        (b = c++),
          (this.m_vertices[b] = E.mulX(a, this.m_vertices[b])),
          (this.m_normals[b] = E.mulMV(a.R, this.m_normals[b]));
    },
    setAsEdge: function (a, b) {
      this.m_vertexCount = 2;
      this.reserve(2);
      var c = this.m_vertices[0];
      c.x = a.x;
      c.y = a.y;
      c = this.m_vertices[1];
      c.x = b.x;
      c.y = b.y;
      this.m_centroid.x = 0.5 * (a.x + b.x);
      this.m_centroid.y = 0.5 * (a.y + b.y);
      this.m_normals[0] = E.crossVF(E.subtractVV(b, a), 1);
      this.m_normals[0].normalize();
      this.m_normals[1].x = -this.m_normals[0].x;
      this.m_normals[1].y = -this.m_normals[0].y;
    },
    testPoint: function (a, b) {
      var c = a.R;
      var d = b.x - a.position.x;
      a = b.y - a.position.y;
      b = d * c.col1.x + a * c.col1.y;
      for (
        var e = d * c.col2.x + a * c.col2.y, f = 0, g = this.m_vertexCount;
        f < g;

      ) {
        var h = f++;
        c = this.m_vertices[h];
        d = b - c.x;
        a = e - c.y;
        c = this.m_normals[h];
        if (0 < c.x * d + c.y * a) return !1;
      }
      return !0;
    },
    rayCast: function (a, b, c) {
      var d = 0,
        e = b.maxFraction;
      var f = b.p1.x - c.position.x;
      var g = b.p1.y - c.position.y;
      var h = c.R;
      var n = f * h.col1.x + g * h.col1.y,
        k = f * h.col2.x + g * h.col2.y;
      f = b.p2.x - c.position.x;
      g = b.p2.y - c.position.y;
      h = c.R;
      b = f * h.col1.x + g * h.col1.y - n;
      h = f * h.col2.x + g * h.col2.y - k;
      for (var G = -1, l = 0, m = this.m_vertexCount; l < m; ) {
        var r = l++;
        var p = this.m_vertices[r];
        f = p.x - n;
        g = p.y - k;
        p = this.m_normals[r];
        f = p.x * f + p.y * g;
        g = p.x * b + p.y * h;
        if (0 == g) {
          if (0 > f) return !1;
        } else
          0 > g && f < d * g
            ? ((d = f / g), (G = r))
            : 0 < g && f < e * g && (e = f / g);
        if (e < d - Number.MIN_VALUE) return !1;
      }
      return 0 <= G
        ? ((a.fraction = d),
          (h = c.R),
          (p = this.m_normals[G]),
          (a.normal.x = h.col1.x * p.x + h.col2.x * p.y),
          (a.normal.y = h.col1.y * p.x + h.col2.y * p.y),
          !0)
        : !1;
    },
    computeAABB: function (a, b) {
      for (
        var c = b.R,
          d = this.m_vertices[0],
          e = b.position.x + (c.col1.x * d.x + c.col2.x * d.y),
          f = b.position.y + (c.col1.y * d.x + c.col2.y * d.y),
          g = e,
          h = f,
          n = 1,
          k = this.m_vertexCount;
        n < k;

      ) {
        var G = n++;
        d = this.m_vertices[G];
        G = b.position.x + (c.col1.x * d.x + c.col2.x * d.y);
        d = b.position.y + (c.col1.y * d.x + c.col2.y * d.y);
        e < G || (e = G);
        f < d || (f = d);
        g > G || (g = G);
        h > d || (h = d);
      }
      a.lowerBound.x = e - this.m_radius;
      a.lowerBound.y = f - this.m_radius;
      a.upperBound.x = g + this.m_radius;
      a.upperBound.y = h + this.m_radius;
    },
    computeMass: function (a, b) {
      if (2 == this.m_vertexCount)
        (a.center.x = 0.5 * (this.m_vertices[0].x + this.m_vertices[1].x)),
          (a.center.y = 0.5 * (this.m_vertices[0].y + this.m_vertices[1].y)),
          (a.mass = 0),
          (a.I = 0);
      else {
        for (
          var c = 0, d = 0, e = 0, f = 0, g = 0, h = this.m_vertexCount;
          g < h;

        ) {
          var n = g++,
            k = this.m_vertices[n],
            G =
              n + 1 < this.m_vertexCount
                ? this.m_vertices[(n + 1) | 0]
                : this.m_vertices[0],
            l = k.x - 0,
            m = k.y - 0,
            r = G.x - 0,
            p = G.y - 0;
          n = l * p - m * r;
          var q = 0.5 * n;
          e += q;
          c += 0.3333333333333333 * q * (0 + k.x + G.x);
          d += 0.3333333333333333 * q * (0 + k.y + G.y);
          k = l;
          f +=
            n *
            (0.3333333333333333 *
              (0.25 * (k * k + r * k + r * r) + (0 * k + 0 * r)) +
              0 +
              (0.3333333333333333 *
                (0.25 * (m * m + p * m + p * p) + (0 * m + 0 * p)) +
                0));
        }
        a.mass = b * e;
        g = a.center;
        g.x = (1 / e) * c;
        g.y = (1 / e) * d;
        a.I = b * f;
      }
    },
    computeSubmergedArea: function (a, b, c, d) {
      var e = E.mulTMV(c.R, a, !0),
        f = b - E.dot(a, c.position),
        g = [],
        h = 0;
      a = b = -1;
      for (var n = !1, k = 0, G = this.m_vertexCount; k < G; ) {
        var l = k++;
        g[l] = E.dot(e, this.m_vertices[l]) - f;
        var m = g[l] < -Number.MIN_VALUE;
        0 < l && (m ? n || ((b = l - 1), ++h) : n && ((a = l - 1), ++h));
        n = m;
      }
      switch (h) {
        case 0:
          return n
            ? ((a = new Zj()),
              this.computeMass(a, 1),
              (c = E.mulX(c, a.center)),
              (d.x = c.x),
              (d.y = c.y),
              a.mass)
            : 0;
        case 1:
          -1 == b ? (b = this.m_vertexCount - 1) : (a = this.m_vertexCount - 1);
      }
      f = (b + 1) % this.m_vertexCount;
      e = (a + 1) % this.m_vertexCount;
      h = (0 - g[b]) / (g[f] - g[b]);
      g = (0 - g[a]) / (g[e] - g[a]);
      b = new D(
        this.m_vertices[b].x * (1 - h) + this.m_vertices[f].x * h,
        this.m_vertices[b].y * (1 - h) + this.m_vertices[f].y * h
      );
      g = new D(
        this.m_vertices[a].x * (1 - g) + this.m_vertices[e].x * g,
        this.m_vertices[a].y * (1 - g) + this.m_vertices[e].y * g
      );
      a = 0;
      h = new D();
      for (n = this.m_vertices[f]; f != e; )
        (f = (f + 1) % this.m_vertexCount),
          (k = f == e ? g : this.m_vertices[f]),
          (G = 0.5 * ((n.x - b.x) * (k.y - b.y) - (n.y - b.y) * (k.x - b.x))),
          (a += G),
          (h.x += (G * (b.x + n.x + k.x)) / 3),
          (h.y += (G * (b.y + n.y + k.y)) / 3),
          (n = k);
      h.multiply(1 / a);
      c = E.mulX(c, h);
      d.x = c.x;
      d.y = c.y;
      return a;
    },
    getVertexCount: function () {
      return this.m_vertexCount;
    },
    getVertices: function () {
      return this.m_vertices;
    },
    getNormals: function () {
      return this.m_normals;
    },
    getSupport: function (a) {
      for (
        var b = 0,
          c = this.m_vertices[0].x * a.x + this.m_vertices[0].y * a.y,
          d = 1,
          e = this.m_vertexCount;
        d < e;

      ) {
        var f = d++,
          g = this.m_vertices[f].x * a.x + this.m_vertices[f].y * a.y;
        g > c && ((b = f), (c = g));
      }
      return b;
    },
    getSupportVertex: function (a) {
      for (
        var b = 0,
          c = this.m_vertices[0].x * a.x + this.m_vertices[0].y * a.y,
          d = 1,
          e = this.m_vertexCount;
        d < e;

      ) {
        var f = d++,
          g = this.m_vertices[f].x * a.x + this.m_vertices[f].y * a.y;
        g > c && ((b = f), (c = g));
      }
      return this.m_vertices[b];
    },
    validate: function () {
      return !1;
    },
    reserve: function (a) {
      for (var b = this.m_vertices.length; b < a; ) {
        var c = b++;
        this.m_vertices[c] = new D();
        this.m_normals[c] = new D();
      }
    },
    m_centroid: null,
    m_vertices: null,
    m_normals: null,
    m_vertexCount: null,
    __class__: Db,
  });
  var yl = function (a, b, c) {
    this._r = (255 * E.clamp(a, 0, 1)) | 0;
    this._g = (255 * E.clamp(b, 0, 1)) | 0;
    this._b = (255 * E.clamp(c, 0, 1)) | 0;
  };
  p["box2D.common.B2Color"] = yl;
  yl.__name__ = ["box2D", "common", "B2Color"];
  yl.prototype = {
    set: function (a, b, c) {
      this._r = (255 * E.clamp(a, 0, 1)) | 0;
      this._g = (255 * E.clamp(b, 0, 1)) | 0;
      this._b = (255 * E.clamp(c, 0, 1)) | 0;
    },
    r: null,
    g: null,
    b: null,
    color: null,
    set_r: function (a) {
      return (this._r = (255 * E.clamp(a, 0, 1)) | 0);
    },
    set_g: function (a) {
      return (this._g = (255 * E.clamp(a, 0, 1)) | 0);
    },
    set_b: function (a) {
      return (this._b = (255 * E.clamp(a, 0, 1)) | 0);
    },
    get_color: function () {
      return (this._r << 16) | (this._g << 8) | this._b;
    },
    _r: null,
    _g: null,
    _b: null,
    __class__: yl,
    __properties__: {
      get_color: "get_color",
      set_b: "set_b",
      set_g: "set_g",
      set_r: "set_r",
    },
  };
  var R = function () {};
  p["box2D.common.B2Settings"] = R;
  R.__name__ = ["box2D", "common", "B2Settings"];
  R.b2MixFriction = function (a, b) {
    return Math.sqrt(a * b);
  };
  R.b2MixRestitution = function (a, b) {
    return a > b ? a : b;
  };
  R.b2Assert = function (a) {
    if (!a) throw new v("Assertion Failed");
  };
  var ji = function (a, b, c) {
    this.col1 = new lf();
    this.col2 = new lf();
    this.col3 = new lf();
    null == a && null == b && null == c
      ? (this.col1.setZero(), this.col2.setZero(), this.col3.setZero())
      : (this.col1.setV(a), this.col2.setV(b), this.col3.setV(c));
  };
  p["box2D.common.math.B2Mat33"] = ji;
  ji.__name__ = ["box2D", "common", "math", "B2Mat33"];
  ji.prototype = {
    setVVV: function (a, b, c) {
      this.col1.setV(a);
      this.col2.setV(b);
      this.col3.setV(c);
    },
    copy: function () {
      return new ji(this.col1, this.col2, this.col3);
    },
    setM: function (a) {
      this.col1.setV(a.col1);
      this.col2.setV(a.col2);
      this.col3.setV(a.col3);
    },
    addM: function (a) {
      this.col1.x += a.col1.x;
      this.col1.y += a.col1.y;
      this.col1.z += a.col1.z;
      this.col2.x += a.col2.x;
      this.col2.y += a.col2.y;
      this.col2.z += a.col2.z;
      this.col3.x += a.col3.x;
      this.col3.y += a.col3.y;
      this.col3.z += a.col3.z;
    },
    setIdentity: function () {
      this.col1.x = 1;
      this.col2.x = 0;
      this.col3.x = 0;
      this.col1.y = 0;
      this.col2.y = 1;
      this.col3.y = 0;
      this.col1.z = 0;
      this.col2.z = 0;
      this.col3.z = 1;
    },
    setZero: function () {
      this.col1.x = 0;
      this.col2.x = 0;
      this.col3.x = 0;
      this.col1.y = 0;
      this.col2.y = 0;
      this.col3.y = 0;
      this.col1.z = 0;
      this.col2.z = 0;
      this.col3.z = 0;
    },
    solve22: function (a, b, c) {
      var d = this.col1.x,
        e = this.col2.x,
        f = this.col1.y,
        g = this.col2.y,
        h = d * g - e * f;
      0 != h && (h = 1 / h);
      a.x = h * (g * b - e * c);
      a.y = h * (d * c - f * b);
      return a;
    },
    solve33: function (a, b, c, d) {
      var e = this.col1.x,
        f = this.col1.y,
        g = this.col1.z,
        h = this.col2.x,
        n = this.col2.y,
        k = this.col2.z,
        G = this.col3.x,
        l = this.col3.y,
        m = this.col3.z,
        r = e * (n * m - k * l) + f * (k * G - h * m) + g * (h * l - n * G);
      0 != r && (r = 1 / r);
      a.x =
        r * (b * (n * m - k * l) + c * (k * G - h * m) + d * (h * l - n * G));
      a.y =
        r * (e * (c * m - d * l) + f * (d * G - b * m) + g * (b * l - c * G));
      a.z =
        r * (e * (n * d - k * c) + f * (k * b - h * d) + g * (h * c - n * b));
      return a;
    },
    col1: null,
    col2: null,
    col3: null,
    __class__: ji,
  };
  var E = function () {};
  p["box2D.common.math.B2Math"] = E;
  E.__name__ = ["box2D", "common", "math", "B2Math"];
  E.__properties__ = {
    get_MIN_VALUE: "get_MIN_VALUE",
    get_MAX_VALUE: "get_MAX_VALUE",
  };
  E.isValid = function (a) {
    return isNaN(a) || -Infinity == a || Infinity == a ? !1 : !0;
  };
  E.dot = function (a, b) {
    return a.x * b.x + a.y * b.y;
  };
  E.crossVV = function (a, b) {
    return a.x * b.y - a.y * b.x;
  };
  E.crossVF = function (a, b, c) {
    null == c && (c = !1);
    if (c) {
      c = D.getFromPool();
      var d = -b * a.x;
      c.x = b * a.y;
      c.y = d;
    } else c = new D(b * a.y, -b * a.x);
    return c;
  };
  E.crossFV = function (a, b, c) {
    null == c && (c = !1);
    if (c) {
      c = D.getFromPool();
      var d = a * b.x;
      c.x = -a * b.y;
      c.y = d;
    } else c = new D(-a * b.y, a * b.x);
    return c;
  };
  E.mulMV = function (a, b, c) {
    null == c && (c = !1);
    if (c) {
      c = D.getFromPool();
      var d = a.col1.y * b.x + a.col2.y * b.y;
      c.x = a.col1.x * b.x + a.col2.x * b.y;
      c.y = d;
    } else
      c = new D(
        a.col1.x * b.x + a.col2.x * b.y,
        a.col1.y * b.x + a.col2.y * b.y
      );
    return c;
  };
  E.mulTMV = function (a, b, c) {
    null == c && (c = !1);
    if (c) {
      c = D.getFromPool();
      var d = E.dot(b, a.col1);
      a = E.dot(b, a.col2);
      c.x = d;
      c.y = a;
    } else c = new D(E.dot(b, a.col1), E.dot(b, a.col2));
    return c;
  };
  E.mulX = function (a, b, c) {
    null == c && (c = !1);
    b = E.mulMV(a.R, b, c);
    b.x += a.position.x;
    b.y += a.position.y;
    return b;
  };
  E.mulXT = function (a, b, c) {
    b = E.subtractVVPooled(b, a.position);
    c = b.x * a.R.col1.x + b.y * a.R.col1.y;
    b.y = b.x * a.R.col2.x + b.y * a.R.col2.y;
    b.x = c;
    return b;
  };
  E.addVV = function (a, b) {
    return new D(a.x + b.x, a.y + b.y);
  };
  E.subtractVV = function (a, b) {
    return new D(a.x - b.x, a.y - b.y);
  };
  E.subtractVVPooled = function (a, b) {
    var c = D.getFromPool();
    c.x = a.x - b.x;
    c.y = a.y - b.y;
    return c;
  };
  E.distance = function (a, b) {
    var c = a.x - b.x;
    a = a.y - b.y;
    return Math.sqrt(c * c + a * a);
  };
  E.distanceSquared = function (a, b) {
    var c = a.x - b.x;
    a = a.y - b.y;
    return c * c + a * a;
  };
  E.mulFV = function (a, b) {
    return new D(a * b.x, a * b.y);
  };
  E.addMM = function (a, b) {
    return uc.fromVV(E.addVV(a.col1, b.col1), E.addVV(a.col2, b.col2));
  };
  E.mulMM = function (a, b) {
    return uc.fromVV(E.mulMV(a, b.col1), E.mulMV(a, b.col2));
  };
  E.mulTMM = function (a, b) {
    var c = new D(E.dot(a.col1, b.col1), E.dot(a.col2, b.col1));
    a = new D(E.dot(a.col1, b.col2), E.dot(a.col2, b.col2));
    return uc.fromVV(c, a);
  };
  E.abs = function (a) {
    return 0 < a ? a : -a;
  };
  E.absV = function (a) {
    return new D(E.abs(a.x), E.abs(a.y));
  };
  E.absM = function (a) {
    return uc.fromVV(E.absV(a.col1), E.absV(a.col2));
  };
  E.min = function (a, b) {
    return a < b ? a : b;
  };
  E.minV = function (a, b) {
    return new D(E.min(a.x, b.x), E.min(a.y, b.y));
  };
  E.max = function (a, b) {
    return a > b ? a : b;
  };
  E.maxV = function (a, b) {
    return new D(E.max(a.x, b.x), E.max(a.y, b.y));
  };
  E.clamp = function (a, b, c) {
    return a < b ? b : a > c ? c : a;
  };
  E.clampV = function (a, b, c) {
    return E.maxV(b, E.minV(a, c));
  };
  E.swap = function (a, b) {
    var c = a[0];
    a[0] = b[0];
    b[0] = c;
  };
  E.random = function () {
    return 2 * Math.random() - 1;
  };
  E.randomRange = function (a, b) {
    return (b - a) * Math.random() + a;
  };
  E.nextPowerOfTwo = function (a) {
    a |= (a >> 1) & 2147483647;
    a |= (a >> 2) & 1073741823;
    a |= (a >> 4) & 268435455;
    a |= (a >> 8) & 16777215;
    return (a | ((a >> 16) & 65535)) + 1;
  };
  E.isPowerOfTwo = function (a) {
    return 0 < a && 0 == (a & (a - 1));
  };
  E.get_MAX_VALUE = function () {
    return Number.MAX_VALUE;
  };
  E.get_MIN_VALUE = function () {
    return Number.MIN_VALUE;
  };
  var Eh = function () {
    this.localCenter = new D();
    this.c0 = new D();
    this.c = new D();
  };
  p["box2D.common.math.B2Sweep"] = Eh;
  Eh.__name__ = ["box2D", "common", "math", "B2Sweep"];
  Eh.prototype = {
    set: function (a) {
      var b = this.localCenter,
        c = a.localCenter;
      b.x = c.x;
      b.y = c.y;
      b = this.c0;
      c = a.c0;
      b.x = c.x;
      b.y = c.y;
      b = this.c;
      c = a.c;
      b.x = c.x;
      b.y = c.y;
      this.a0 = a.a0;
      this.a = a.a;
      this.t0 = a.t0;
    },
    copy: function () {
      var a = new Eh(),
        b = a.localCenter,
        c = this.localCenter;
      b.x = c.x;
      b.y = c.y;
      b = a.c0;
      c = this.c0;
      b.x = c.x;
      b.y = c.y;
      b = a.c;
      c = this.c;
      b.x = c.x;
      b.y = c.y;
      a.a0 = this.a0;
      a.a = this.a;
      a.t0 = this.t0;
      return a;
    },
    getTransform: function (a, b) {
      a.position.x = (1 - b) * this.c0.x + b * this.c.x;
      a.position.y = (1 - b) * this.c0.y + b * this.c.y;
      a.R.set((1 - b) * this.a0 + b * this.a);
      b = a.R;
      a.position.x -=
        b.col1.x * this.localCenter.x + b.col2.x * this.localCenter.y;
      a.position.y -=
        b.col1.y * this.localCenter.x + b.col2.y * this.localCenter.y;
    },
    advance: function (a) {
      if (this.t0 < a && 1 - this.t0 > Number.MIN_VALUE) {
        var b = (a - this.t0) / (1 - this.t0);
        this.c0.x = (1 - b) * this.c0.x + b * this.c.x;
        this.c0.y = (1 - b) * this.c0.y + b * this.c.y;
        this.a0 = (1 - b) * this.a0 + b * this.a;
        this.t0 = a;
      }
    },
    localCenter: null,
    c0: null,
    c: null,
    a0: null,
    a: null,
    t0: null,
    __class__: Eh,
  };
  var lf = function (a, b, c) {
    null == c && (c = 0);
    null == b && (b = 0);
    null == a && (a = 0);
    this.x = a;
    this.y = b;
    this.z = c;
  };
  p["box2D.common.math.B2Vec3"] = lf;
  lf.__name__ = ["box2D", "common", "math", "B2Vec3"];
  lf.prototype = {
    setZero: function () {
      this.x = this.y = this.z = 0;
    },
    set: function (a, b, c) {
      this.x = a;
      this.y = b;
      this.z = c;
    },
    setV: function (a) {
      this.x = a.x;
      this.y = a.y;
      this.z = a.z;
    },
    getNegative: function () {
      return new lf(-this.x, -this.y, -this.z);
    },
    negativeSelf: function () {
      this.x = -this.x;
      this.y = -this.y;
      this.z = -this.z;
    },
    copy: function () {
      return new lf(this.x, this.y, this.z);
    },
    add: function (a) {
      this.x += a.x;
      this.y += a.y;
      this.z += a.z;
    },
    subtract: function (a) {
      this.x -= a.x;
      this.y -= a.y;
      this.z -= a.z;
    },
    multiply: function (a) {
      this.x *= a;
      this.y *= a;
      this.z *= a;
    },
    x: null,
    y: null,
    z: null,
    __class__: lf,
  };
  var ea = function (a, b) {
    this.m_xf = new kf();
    this.m_sweep = new Eh();
    this.m_linearVelocity = new D();
    this.m_force = new D();
    this.m_flags = 0;
    a.bullet && (this.m_flags |= ea.e_bulletFlag);
    a.fixedRotation && (this.m_flags |= ea.e_fixedRotationFlag);
    a.allowSleep && (this.m_flags |= ea.e_allowSleepFlag);
    a.awake && (this.m_flags |= ea.e_awakeFlag);
    a.active && (this.m_flags |= ea.e_activeFlag);
    a.ignoreGravity && (this.m_flags |= ea.e_ignoreGravityFlag);
    this.m_world = b;
    b = this.m_xf.position;
    var c = a.position;
    b.x = c.x;
    b.y = c.y;
    this.m_xf.R.set(a.angle);
    b = this.m_sweep.localCenter;
    b.x = 0;
    b.y = 0;
    this.m_sweep.t0 = 1;
    this.m_sweep.a0 = this.m_sweep.a = a.angle;
    b = this.m_xf.R;
    c = this.m_sweep.localCenter;
    this.m_sweep.c.x = b.col1.x * c.x + b.col2.x * c.y;
    this.m_sweep.c.y = b.col1.y * c.x + b.col2.y * c.y;
    this.m_sweep.c.x += this.m_xf.position.x;
    this.m_sweep.c.y += this.m_xf.position.y;
    b = this.m_sweep.c0;
    c = this.m_sweep.c;
    b.x = c.x;
    b.y = c.y;
    this.m_contactList = this.m_controllerList = this.m_jointList = null;
    this.m_controllerCount = 0;
    this.m_next = this.m_prev = null;
    b = this.m_linearVelocity;
    c = a.linearVelocity;
    b.x = c.x;
    b.y = c.y;
    this.m_angularVelocity = a.angularVelocity;
    this.m_linearDamping = a.linearDamping;
    this.m_angularDamping = a.angularDamping;
    b = this.m_force;
    b.x = 0;
    this.m_sleepTime = this.m_torque = b.y = 0;
    this.m_type = a.type;
    this.m_invMass =
      this.m_type == ea.b2_dynamicBody ? (this.m_mass = 1) : (this.m_mass = 0);
    this.m_invI = this.m_I = 0;
    this.m_inertiaScale = a.inertiaScale;
    this.m_userData = a.userData;
    this.m_fixtureList = null;
    this.m_fixtureCount = 0;
    this.groupID = a.groupID;
    this.origin = new D();
    this.size = new D();
  };
  p["box2D.dynamics.B2Body"] = ea;
  ea.__name__ = ["box2D", "dynamics", "B2Body"];
  ea.prototype = {
    connectEdges: function (a, b, c) {
      var d = Math.atan2(b.getDirectionVector().y, b.getDirectionVector().x);
      c = E.mulFV(Math.tan(0.5 * (d - c)), b.getDirectionVector());
      c = E.subtractVV(c, b.getNormalVector());
      c = E.mulFV(R.b2_toiSlop, c);
      c = E.addVV(c, b.getVertex1());
      var e = E.addVV(a.getDirectionVector(), b.getDirectionVector());
      e.normalize();
      var f = 0 < E.dot(a.getDirectionVector(), b.getNormalVector());
      a.setNextEdge(b, c, e, f);
      b.setPrevEdge(a, c, e, f);
      return d;
    },
    createFixture: function (a) {
      if (1 == this.m_world.isLocked()) return null;
      var b = new Sf();
      b.create(this, this.m_xf, a);
      0 != (this.m_flags & ea.e_activeFlag) &&
        b.createProxy(this.m_world.m_contactManager.m_broadPhase, this.m_xf);
      b.m_next = this.m_fixtureList;
      this.m_fixtureList = b;
      ++this.m_fixtureCount;
      b.m_body = this;
      0 < b.m_density && this.resetMassData();
      this.m_world.m_flags |= Rb.e_newFixture;
      return b;
    },
    createFixture2: function (a, b) {
      null == b && (b = 0);
      var c = new Tf();
      c.shape = a;
      c.density = b;
      return this.createFixture(c);
    },
    DestroyFixture: function (a) {
      if (1 != this.m_world.isLocked()) {
        for (var b = this.m_fixtureList, c = null; null != b; ) {
          if (b == a) {
            null != c ? (c.m_next = a.m_next) : (this.m_fixtureList = a.m_next);
            break;
          }
          c = b;
          b = b.m_next;
        }
        for (b = this.m_contactList; null != b; ) {
          c = b.contact;
          b = b.next;
          var d = c.getFixtureA(),
            e = c.getFixtureB();
          (a != d && a != e) || this.m_world.m_contactManager.destroy(c);
        }
        0 != (this.m_flags & ea.e_activeFlag) &&
          a.destroyProxy(this.m_world.m_contactManager.m_broadPhase);
        a.destroy();
        a.m_body = null;
        a.m_next = null;
        --this.m_fixtureCount;
        this.resetMassData();
      }
    },
    setPositionAndAngle: function (a, b) {
      if (1 != this.m_world.isLocked()) {
        this.m_xf.R.set(b);
        var c = this.m_xf.position;
        c.x = a.x;
        c.y = a.y;
        a = this.m_xf.R;
        c = this.m_sweep.localCenter;
        this.m_sweep.c.x = a.col1.x * c.x + a.col2.x * c.y;
        this.m_sweep.c.y = a.col1.y * c.x + a.col2.y * c.y;
        this.m_sweep.c.x += this.m_xf.position.x;
        this.m_sweep.c.y += this.m_xf.position.y;
        a = this.m_sweep.c0;
        c = this.m_sweep.c;
        a.x = c.x;
        a.y = c.y;
        this.m_sweep.a0 = this.m_sweep.a = b;
        a = this.m_world.m_contactManager.m_broadPhase;
        for (b = this.m_fixtureList; null != b; )
          b.synchronize(a, this.m_xf, this.m_xf), (b = b.m_next);
        this.m_world.m_contactManager.findNewContacts();
      }
    },
    setPositionFast: function (a) {
      if (1 != this.m_world.isLocked()) {
        var b = this.m_xf.position;
        b.x = a.x;
        b.y = a.y;
        a = this.m_xf.R;
        b = this.m_sweep.localCenter;
        this.m_sweep.c.x = a.col1.x * b.x + a.col2.x * b.y;
        this.m_sweep.c.y = a.col1.y * b.x + a.col2.y * b.y;
        this.m_sweep.c.x += this.m_xf.position.x;
        this.m_sweep.c.y += this.m_xf.position.y;
        a = this.m_sweep.c0;
        b = this.m_sweep.c;
        a.x = b.x;
        a.y = b.y;
      }
    },
    setTransform: function (a) {
      this.setPositionAndAngle(a.position, a.getAngle());
    },
    getTransform: function () {
      return this.m_xf;
    },
    getPosition: function () {
      return this.m_xf.position;
    },
    setPosition: function (a) {
      this.setPositionAndAngle(a, this.getAngle());
    },
    getAngle: function () {
      return this.m_sweep.a;
    },
    setAngle: function (a) {
      this.setPositionAndAngle(this.getPosition(), a);
    },
    getWorldCenter: function () {
      return this.m_sweep.c;
    },
    getLocalCenter: function () {
      return this.m_sweep.localCenter;
    },
    setLinearVelocity: function (a) {
      if (this.m_type != ea.b2_staticBody) {
        var b = this.m_linearVelocity;
        b.x = a.x;
        b.y = a.y;
      }
    },
    getLinearVelocity: function () {
      return this.m_linearVelocity;
    },
    setAngularVelocity: function (a) {
      this.m_type != ea.b2_staticBody && (this.m_angularVelocity = a);
    },
    getAngularVelocity: function () {
      return this.m_angularVelocity;
    },
    getDefinition: function () {
      var a = new Vi();
      a.type = this.getType();
      a.allowSleep =
        (this.m_flags & ea.e_allowSleepFlag) == ea.e_allowSleepFlag;
      a.angle = this.getAngle();
      a.angularDamping = this.m_angularDamping;
      a.angularVelocity = this.m_angularVelocity;
      a.fixedRotation =
        (this.m_flags & ea.e_fixedRotationFlag) == ea.e_fixedRotationFlag;
      a.bullet = (this.m_flags & ea.e_bulletFlag) == ea.e_bulletFlag;
      a.awake = (this.m_flags & ea.e_awakeFlag) == ea.e_awakeFlag;
      a.linearDamping = this.m_linearDamping;
      var b = a.linearVelocity,
        c = this.getLinearVelocity();
      b.x = c.x;
      b.y = c.y;
      a.position = this.getPosition();
      a.userData = this.getUserData();
      return a;
    },
    applyForce: function (a, b) {
      this.m_type == ea.b2_dynamicBody &&
        (0 == this.isAwake() && this.setAwake(!0),
        (this.m_force.x += a.x),
        (this.m_force.y += a.y),
        (this.m_torque +=
          (b.x - this.m_sweep.c.x) * a.y - (b.y - this.m_sweep.c.y) * a.x));
    },
    applyTorque: function (a) {
      this.m_type == ea.b2_dynamicBody &&
        (0 == this.isAwake() && this.setAwake(!0), (this.m_torque += a));
    },
    applyImpulse: function (a, b) {
      this.m_type == ea.b2_dynamicBody &&
        (0 == this.isAwake() && this.setAwake(!0),
        (this.m_linearVelocity.x += this.m_invMass * a.x),
        (this.m_linearVelocity.y += this.m_invMass * a.y),
        (this.m_angularVelocity +=
          this.m_invI *
          ((b.x - this.m_sweep.c.x) * a.y - (b.y - this.m_sweep.c.y) * a.x)));
    },
    split: function (a) {
      for (
        var b = this.getLinearVelocity().copy(),
          c = this.getAngularVelocity(),
          d = this.getWorldCenter(),
          e = this.m_world.createBody(this.getDefinition()),
          f = null,
          g = this.m_fixtureList;
        null != g;

      )
        if (a(g)) {
          var h = g.m_next;
          null != f ? (f.m_next = h) : (this.m_fixtureList = h);
          this.m_fixtureCount--;
          g.m_next = e.m_fixtureList;
          e.m_fixtureList = g;
          e.m_fixtureCount++;
          g.m_body = e;
          g = h;
        } else (f = g), (g = g.m_next);
      this.resetMassData();
      e.resetMassData();
      f = this.getWorldCenter();
      a = e.getWorldCenter();
      f = E.addVV(b, E.crossFV(c, E.subtractVV(f, d)));
      b = E.addVV(b, E.crossFV(c, E.subtractVV(a, d)));
      this.setLinearVelocity(f);
      e.setLinearVelocity(b);
      this.setAngularVelocity(c);
      e.setAngularVelocity(c);
      this.synchronizeFixtures();
      e.synchronizeFixtures();
      return e;
    },
    merge: function (a) {
      for (var b = a.m_fixtureList; null != b; ) {
        var c = b.m_next;
        a.m_fixtureCount--;
        b.m_next = this.m_fixtureList;
        this.m_fixtureList = b;
        this.m_fixtureCount++;
        b.m_body = a;
        b = c;
      }
      this.m_fixtureCount = 0;
      this.getWorldCenter();
      a.getWorldCenter();
      this.getLinearVelocity().copy();
      a.getLinearVelocity().copy();
      this.getAngularVelocity();
      a.getAngularVelocity();
      this.resetMassData();
      this.synchronizeFixtures();
    },
    getMass: function () {
      return this.m_mass;
    },
    getInertia: function () {
      return this.m_I;
    },
    getMassData: function (a) {
      a.mass = this.m_mass;
      a.I = this.m_I;
      a = a.center;
      var b = this.m_sweep.localCenter;
      a.x = b.x;
      a.y = b.y;
    },
    setMassData: function (a) {
      R.b2Assert(0 == this.m_world.isLocked());
      if (1 != this.m_world.isLocked() && this.m_type == ea.b2_dynamicBody) {
        this.m_invI = this.m_I = this.m_invMass = 0;
        this.m_mass = a.mass;
        0 >= this.m_mass && (this.m_mass = 1);
        this.m_invMass = 1 / this.m_mass;
        0 < a.I &&
          0 == (this.m_flags & ea.e_fixedRotationFlag) &&
          ((this.m_I =
            a.I -
            this.m_mass * (a.center.x * a.center.x + a.center.y * a.center.y)),
          (this.m_invI = 1 / this.m_I));
        var b = this.m_sweep.c.copy(),
          c = this.m_sweep.localCenter;
        a = a.center;
        c.x = a.x;
        c.y = a.y;
        c = this.m_sweep.c0;
        a = E.mulX(this.m_xf, this.m_sweep.localCenter);
        c.x = a.x;
        c.y = a.y;
        c = this.m_sweep.c;
        a = this.m_sweep.c0;
        c.x = a.x;
        c.y = a.y;
        this.m_linearVelocity.x +=
          this.m_angularVelocity * -(this.m_sweep.c.y - b.y);
        this.m_linearVelocity.y +=
          this.m_angularVelocity * (this.m_sweep.c.x - b.x);
      }
    },
    resetMassData: function () {
      this.m_invI = this.m_I = this.m_invMass = this.m_mass = 0;
      var a = this.m_sweep.localCenter;
      a.x = 0;
      a.y = 0;
      if (
        this.m_type != ea.b2_staticBody &&
        this.m_type != ea.b2_kinematicBody
      ) {
        var b = D.make(0, 0);
        for (a = this.m_fixtureList; null != a; )
          if (0 != a.m_density) {
            var c = a.getMassData();
            this.m_mass += c.mass;
            b.x += c.center.x * c.mass;
            b.y += c.center.y * c.mass;
            this.m_I += c.I;
            a = a.m_next;
          }
        0 < this.m_mass
          ? ((this.m_invMass = 1 / this.m_mass),
            (b.x *= this.m_invMass),
            (b.y *= this.m_invMass))
          : (this.m_invMass = this.m_mass = 1);
        0 < this.m_I && 0 == (this.m_flags & ea.e_fixedRotationFlag)
          ? ((this.m_I -= this.m_mass * (b.x * b.x + b.y * b.y)),
            (this.m_I *= this.m_inertiaScale),
            R.b2Assert(0 < this.m_I),
            (this.m_invI = 1 / this.m_I))
          : (this.m_invI = this.m_I = 0);
        a = this.m_sweep.c.copy();
        c = this.m_sweep.localCenter;
        c.x = b.x;
        c.y = b.y;
        b = this.m_sweep.c0;
        c = E.mulX(this.m_xf, this.m_sweep.localCenter);
        b.x = c.x;
        b.y = c.y;
        b = this.m_sweep.c;
        c = this.m_sweep.c0;
        b.x = c.x;
        b.y = c.y;
        this.m_linearVelocity.x +=
          this.m_angularVelocity * -(this.m_sweep.c.y - a.y);
        this.m_linearVelocity.y +=
          this.m_angularVelocity * (this.m_sweep.c.x - a.x);
      }
    },
    getWorldPoint: function (a) {
      var b = this.m_xf.R;
      a = new D(
        b.col1.x * a.x + b.col2.x * a.y,
        b.col1.y * a.x + b.col2.y * a.y
      );
      a.x += this.m_xf.position.x;
      a.y += this.m_xf.position.y;
      return a;
    },
    getWorldVector: function (a) {
      return E.mulMV(this.m_xf.R, a);
    },
    getLocalPoint: function (a) {
      return E.mulXT(this.m_xf, a);
    },
    getLocalVector: function (a) {
      return E.mulTMV(this.m_xf.R, a);
    },
    getLinearVelocityFromWorldPoint: function (a) {
      return new D(
        this.m_linearVelocity.x -
          this.m_angularVelocity * (a.y - this.m_sweep.c.y),
        this.m_linearVelocity.y +
          this.m_angularVelocity * (a.x - this.m_sweep.c.x)
      );
    },
    getLinearVelocityFromLocalPoint: function (a) {
      var b = this.m_xf.R;
      a = new D(
        b.col1.x * a.x + b.col2.x * a.y,
        b.col1.y * a.x + b.col2.y * a.y
      );
      a.x += this.m_xf.position.x;
      a.y += this.m_xf.position.y;
      return new D(
        this.m_linearVelocity.x -
          this.m_angularVelocity * (a.y - this.m_sweep.c.y),
        this.m_linearVelocity.y +
          this.m_angularVelocity * (a.x - this.m_sweep.c.x)
      );
    },
    getLinearDamping: function () {
      return this.m_linearDamping;
    },
    setLinearDamping: function (a) {
      this.m_linearDamping = a;
    },
    getAngularDamping: function () {
      return this.m_angularDamping;
    },
    setAngularDamping: function (a) {
      this.m_angularDamping = a;
    },
    setType: function (a) {
      if (this.m_type != a)
        for (
          this.m_type = a,
            this.resetMassData(),
            this.m_type == ea.b2_staticBody &&
              ((a = this.m_linearVelocity),
              (a.x = 0),
              (this.m_angularVelocity = a.y = 0)),
            this.setAwake(!0),
            a = this.m_force,
            a.x = 0,
            this.m_torque = a.y = 0,
            a = this.m_contactList;
          null != a;

        )
          a.contact.flagForFiltering(), (a = a.next);
    },
    getType: function () {
      return this.m_type;
    },
    setBullet: function (a) {
      this.m_flags = a
        ? this.m_flags | ea.e_bulletFlag
        : this.m_flags & ~ea.e_bulletFlag;
    },
    isBullet: function () {
      return (this.m_flags & ea.e_bulletFlag) == ea.e_bulletFlag;
    },
    setSleepingAllowed: function (a) {
      a
        ? (this.m_flags |= ea.e_allowSleepFlag)
        : ((this.m_flags &= ~ea.e_allowSleepFlag), this.setAwake(!0));
    },
    setAwake: function (a) {
      a
        ? ((this.m_flags |= ea.e_awakeFlag), (this.m_sleepTime = 0))
        : ((this.m_flags &= ~ea.e_awakeFlag),
          (this.m_sleepTime = 0),
          (a = this.m_linearVelocity),
          (a.x = 0),
          (this.m_angularVelocity = a.y = 0),
          (a = this.m_force),
          (a.x = 0),
          (this.m_torque = a.y = 0));
    },
    isAwake: function () {
      return (this.m_flags & ea.e_awakeFlag) == ea.e_awakeFlag;
    },
    setFixedRotation: function (a) {
      this.m_flags = a
        ? this.m_flags | ea.e_fixedRotationFlag
        : this.m_flags & ~ea.e_fixedRotationFlag;
      this.resetMassData();
    },
    isFixedRotation: function () {
      return (this.m_flags & ea.e_fixedRotationFlag) == ea.e_fixedRotationFlag;
    },
    setActive: function (a) {
      if (a != this.isActive()) {
        var b;
        if (a)
          for (
            this.m_flags |= ea.e_activeFlag,
              a = this.m_world.m_contactManager.m_broadPhase,
              b = this.m_fixtureList;
            null != b;

          )
            b.createProxy(a, this.m_xf), (b = b.m_next);
        else {
          this.m_flags &= ~ea.e_activeFlag;
          a = this.m_world.m_contactManager.m_broadPhase;
          for (b = this.m_fixtureList; null != b; )
            b.destroyProxy(a), (b = b.m_next);
          for (a = this.m_contactList; null != a; )
            (b = a),
              (a = a.next),
              this.m_world.m_contactManager.destroy(b.contact);
          this.m_contactList = null;
        }
      }
    },
    isActive: function () {
      return (this.m_flags & ea.e_activeFlag) == ea.e_activeFlag;
    },
    isSleepingAllowed: function () {
      return (this.m_flags & ea.e_allowSleepFlag) == ea.e_allowSleepFlag;
    },
    getFixtureList: function () {
      return this.m_fixtureList;
    },
    getJointList: function () {
      return this.m_jointList;
    },
    getControllerList: function () {
      return this.m_controllerList;
    },
    getContactList: function () {
      return this.m_contactList;
    },
    getNext: function () {
      return this.m_next;
    },
    getUserData: function () {
      return this.m_userData;
    },
    setUserData: function (a) {
      this.m_userData = a;
    },
    getWorld: function () {
      return this.m_world;
    },
    setFriction: function (a) {
      for (var b = this.m_fixtureList; null != b; )
        (b.m_friction = a), (b = b.m_next);
    },
    setBounciness: function (a) {
      for (var b = this.m_fixtureList; null != b; )
        (b.m_restitution = a), (b = b.m_next);
    },
    setPaused: function (a) {
      this.m_flags = a
        ? this.m_flags | ea.e_pausedFlag
        : this.m_flags & ~ea.e_pausedFlag;
    },
    isPaused: function () {
      return (this.m_flags & ea.e_pausedFlag) == ea.e_pausedFlag;
    },
    setIgnoreGravity: function (a) {
      this.m_flags = a
        ? this.m_flags | ea.e_ignoreGravityFlag
        : this.m_flags & ~ea.e_ignoreGravityFlag;
    },
    isIgnoringGravity: function () {
      return (this.m_flags & ea.e_ignoreGravityFlag) == ea.e_ignoreGravityFlag;
    },
    setAlwaysActive: function (a) {
      this.m_flags = a
        ? this.m_flags | ea.e_alwaysActiveFlag
        : this.m_flags & ~ea.e_alwaysActiveFlag;
    },
    isAlwaysActive: function () {
      return (this.m_flags & ea.e_alwaysActiveFlag) == ea.e_alwaysActiveFlag;
    },
    synchronizeFixtures: function () {
      var a = ea.s_xf1;
      a.R.set(this.m_sweep.a0);
      var b = a.R,
        c = this.m_sweep.localCenter;
      a.position.x = this.m_sweep.c0.x - (b.col1.x * c.x + b.col2.x * c.y);
      a.position.y = this.m_sweep.c0.y - (b.col1.y * c.x + b.col2.y * c.y);
      c = this.m_world.m_contactManager.m_broadPhase;
      for (b = this.m_fixtureList; null != b; )
        b.synchronize(c, a, this.m_xf), (b = b.m_next);
    },
    synchronizeTransform: function () {
      this.m_xf.R.set(this.m_sweep.a);
      var a = this.m_xf.R,
        b = this.m_sweep.localCenter;
      this.m_xf.position.x =
        this.m_sweep.c.x - (a.col1.x * b.x + a.col2.x * b.y);
      this.m_xf.position.y =
        this.m_sweep.c.y - (a.col1.y * b.x + a.col2.y * b.y);
    },
    shouldCollide: function (a) {
      if (this.m_type != ea.b2_dynamicBody && a.m_type != ea.b2_dynamicBody)
        return !1;
      for (var b = this.m_jointList; null != b; ) {
        if (b.other == a && 0 == b.joint.m_collideConnected) return !1;
        b = b.next;
      }
      return !0;
    },
    advance: function (a) {
      this.m_sweep.advance(a);
      a = this.m_sweep.c;
      var b = this.m_sweep.c0;
      a.x = b.x;
      a.y = b.y;
      this.m_sweep.a = this.m_sweep.a0;
      this.synchronizeTransform();
    },
    m_flags: null,
    m_type: null,
    m_islandIndex: null,
    m_xf: null,
    m_sweep: null,
    m_linearVelocity: null,
    m_angularVelocity: null,
    m_force: null,
    m_torque: null,
    m_world: null,
    m_prev: null,
    m_next: null,
    m_fixtureList: null,
    m_fixtureCount: null,
    m_controllerList: null,
    m_controllerCount: null,
    m_jointList: null,
    m_contactList: null,
    m_mass: null,
    m_invMass: null,
    m_I: null,
    m_invI: null,
    m_inertiaScale: null,
    m_linearDamping: null,
    m_angularDamping: null,
    m_sleepTime: null,
    m_userData: null,
    groupID: null,
    origin: null,
    size: null,
    __class__: ea,
  };
  var Vi = function () {
    this.position = new D();
    this.linearVelocity = new D();
    this.userData = null;
    this.angularDamping =
      this.linearDamping =
      this.angularVelocity =
      this.angle =
        0;
    this.awake = this.allowSleep = !0;
    this.bullet = this.fixedRotation = !1;
    this.type = ea.b2_staticBody;
    this.active = !0;
    this.inertiaScale = 1;
    this.groupID = 3;
  };
  p["box2D.dynamics.B2BodyDef"] = Vi;
  Vi.__name__ = ["box2D", "dynamics", "B2BodyDef"];
  Vi.prototype = {
    type: null,
    position: null,
    angle: null,
    linearVelocity: null,
    angularVelocity: null,
    linearDamping: null,
    angularDamping: null,
    allowSleep: null,
    awake: null,
    fixedRotation: null,
    bullet: null,
    active: null,
    userData: null,
    inertiaScale: null,
    groupID: null,
    ignoreGravity: null,
    friction: null,
    bounciness: null,
    mass: null,
    aMass: null,
    __class__: Vi,
  };
  var ak = function () {};
  p["box2D.dynamics.B2ContactFilter"] = ak;
  ak.__name__ = ["box2D", "dynamics", "B2ContactFilter"];
  ak.prototype = {
    shouldCollide: function (a, b) {
      var c = a.m_body.groupID,
        d = b.m_body.groupID;
      a = a.groupID;
      b = b.groupID;
      -1e3 != a && (c = a);
      -1e3 != b && (d = b);
      return -1 == c || -1 == d
        ? !1
        : -2 == c || -2 == d
        ? 1 == c || 1 == d
          ? !1
          : !0
        : cb.collisionMap[c][d];
    },
    rayCollide: function (a, b) {
      return null == a ? !0 : this.shouldCollide(u.__cast(a, Sf), b);
    },
    __class__: ak,
  };
  var Po = function () {
    this.normalImpulses = [];
    this.tangentImpulses = [];
  };
  p["box2D.dynamics.B2ContactImpulse"] = Po;
  Po.__name__ = ["box2D", "dynamics", "B2ContactImpulse"];
  Po.prototype = { normalImpulses: null, tangentImpulses: null, __class__: Po };
  var nh = function () {};
  p["box2D.dynamics.B2ContactListener"] = nh;
  nh.__name__ = ["box2D", "dynamics", "B2ContactListener"];
  nh.prototype = {
    beginContact: function (a) {
      2147483647 < nh.KEY_LOCK && (nh.KEY_LOCK = -2147483648);
      a.key = nh.KEY_LOCK++;
      var b = a.getFixtureA().getUserData(),
        c = a.getFixtureB().getUserData(),
        d = u.__instanceof(b, nd),
        e = u.__instanceof(c, nd);
      !d || e || u.__instanceof(c, oh)
        ? !e || d || u.__instanceof(b, oh)
          ? (null != b.contacts && (b.contacts.set(a.key, a), b.contactCount++),
            null != c.contacts && (c.contacts.set(a.key, a), c.contactCount++))
          : (u.__cast(c, nd).addActor(b),
            null != b.regionContacts && b.regionContacts.set(a.key, a))
        : (u.__cast(b, nd).addActor(c),
          null != c.regionContacts && c.regionContacts.set(a.key, a));
    },
    endContact: function (a) {
      var b = a.getFixtureA().getUserData(),
        c = a.getFixtureB().getUserData(),
        d = u.__instanceof(b, nd),
        e = u.__instanceof(c, nd);
      if (d && !e) {
        d = !1;
        null != c.regionContacts && c.regionContacts.unset(a.key);
        for (a = c.regionContacts.iterator(); a.hasNext(); ) {
          e = a.next();
          if (
            u.__instanceof(e.getFixtureA().getUserData(), nd) &&
            e.getFixtureA().getUserData() == b
          ) {
            d = !0;
            break;
          }
          if (
            u.__instanceof(e.getFixtureB().getUserData(), nd) &&
            e.getFixtureB().getUserData() == b
          ) {
            d = !0;
            break;
          }
        }
        (d && !c.recycled) || u.__cast(b, nd).removeActor(c);
      } else if (e && !d) {
        d = !1;
        null != b.regionContacts && b.regionContacts.unset(a.key);
        for (a = b.regionContacts.iterator(); a.hasNext(); ) {
          e = a.next();
          if (
            u.__instanceof(e.getFixtureA().getUserData(), nd) &&
            e.getFixtureA().getUserData() == c
          ) {
            d = !0;
            break;
          }
          if (
            u.__instanceof(e.getFixtureB().getUserData(), nd) &&
            e.getFixtureB().getUserData() == c
          ) {
            d = !0;
            break;
          }
        }
        (d && !b.recycled) || u.__cast(c, nd).removeActor(b);
      } else {
        if (null != b.collisions) {
          d = b.collisions;
          e = a.key;
          var f = d.mH,
            g = f.mHash[(73856093 * e) & f.mMask];
          if (-1 == g) e = -2147483648;
          else if (((f = f.mData), f[g] == e)) e = f[g + 1];
          else {
            var h = -2147483648;
            for (g = f[g + 2]; -1 != g; ) {
              if (f[g] == e) {
                h = f[g + 1];
                break;
              }
              g = f[g + 2];
            }
            e = h;
          }
          d = -2147483648 == e ? null : d.mVals[e];
          if (null != d)
            for (
              b.collisions.unset(a.key), b.collisionsCount--;
              0 < d.points.length;

            )
              Rd.free(d.points.pop());
        }
        null != b.contacts && b.contacts.unset(a.key) && b.contactCount--;
        if (null != c.collisions) {
          b = c.collisions;
          d = a.key;
          g = b.mH;
          e = g.mHash[(73856093 * d) & g.mMask];
          if (-1 == e) d = -2147483648;
          else if (((g = g.mData), g[e] == d)) d = g[e + 1];
          else {
            f = -2147483648;
            for (e = g[e + 2]; -1 != e; ) {
              if (g[e] == d) {
                f = g[e + 1];
                break;
              }
              e = g[e + 2];
            }
            d = f;
          }
          b = -2147483648 == d ? null : b.mVals[d];
          if (null != b)
            for (
              c.collisions.unset(a.key), c.collisionsCount--;
              0 < b.points.length;

            )
              Rd.free(b.points.pop());
        }
        null != c.contacts && c.contacts.unset(a.key) && c.contactCount--;
      }
    },
    preSolve: function (a, b) {
      oc.preSolve(a, b);
    },
    postSolve: function (a, b) {},
    __class__: nh,
  };
  var zl = function () {
    this.m_world = null;
    this.m_contactCount = 0;
    this.m_contactFilter = ak.b2_defaultFilter;
    this.m_contactListener = nh.b2_defaultListener;
    this.m_contactFactory = new Qo(this.m_allocator);
    this.m_broadPhase = new wl();
  };
  p["box2D.dynamics.B2ContactManager"] = zl;
  zl.__name__ = ["box2D", "dynamics", "B2ContactManager"];
  zl.prototype = {
    addPair: function (a, b) {
      var c = a.getBody(),
        d = b.getBody();
      if (c != d) {
        for (var e = d.getContactList(); null != e; ) {
          if (e.other == c) {
            var f = e.contact.getFixtureA(),
              g = e.contact.getFixtureB();
            if ((f == a && g == b) || (f == b && g == a)) return;
          }
          e = e.next;
        }
        0 != d.shouldCollide(c) &&
          0 != this.m_contactFilter.shouldCollide(a, b) &&
          ((e = this.m_contactFactory.create(a, b)),
          (a = e.getFixtureA()),
          (b = e.getFixtureB()),
          (c = a.m_body),
          (d = b.m_body),
          (e.m_prev = null),
          (e.m_next = this.m_world.m_contactList),
          null != this.m_world.m_contactList &&
            (this.m_world.m_contactList.m_prev = e),
          (this.m_world.m_contactList = e),
          (e.m_nodeA.contact = e),
          (e.m_nodeA.other = d),
          (e.m_nodeA.prev = null),
          (e.m_nodeA.next = c.m_contactList),
          null != c.m_contactList && (c.m_contactList.prev = e.m_nodeA),
          (c.m_contactList = e.m_nodeA),
          (e.m_nodeB.contact = e),
          (e.m_nodeB.other = c),
          (e.m_nodeB.prev = null),
          (e.m_nodeB.next = d.m_contactList),
          null != d.m_contactList && (d.m_contactList.prev = e.m_nodeB),
          (d.m_contactList = e.m_nodeB),
          ++this.m_world.m_contactCount);
      }
    },
    findNewContacts: function () {
      this.m_broadPhase.updatePairs(this);
    },
    destroy: function (a) {
      var b = a.getFixtureA(),
        c = a.getFixtureB();
      b = b.getBody();
      c = c.getBody();
      a.isTouching() && this.m_contactListener.endContact(a);
      null != a.m_prev && (a.m_prev.m_next = a.m_next);
      null != a.m_next && (a.m_next.m_prev = a.m_prev);
      a == this.m_world.m_contactList &&
        (this.m_world.m_contactList = a.m_next);
      null != a.m_nodeA.prev && (a.m_nodeA.prev.next = a.m_nodeA.next);
      null != a.m_nodeA.next && (a.m_nodeA.next.prev = a.m_nodeA.prev);
      a.m_nodeA == b.m_contactList && (b.m_contactList = a.m_nodeA.next);
      null != a.m_nodeB.prev && (a.m_nodeB.prev.next = a.m_nodeB.next);
      null != a.m_nodeB.next && (a.m_nodeB.next.prev = a.m_nodeB.prev);
      a.m_nodeB == c.m_contactList && (c.m_contactList = a.m_nodeB.next);
      this.m_contactFactory.destroy(a);
      --this.m_contactCount;
    },
    collide: function () {
      for (var a = this.m_world.m_contactList; null != a; ) {
        var b = a.getFixtureA(),
          c = a.getFixtureB(),
          d = b.getBody(),
          e = c.getBody();
        if (0 == d.isAwake() && 0 == e.isAwake()) a = a.getNext();
        else {
          if (0 != (a.m_flags & Ga.e_filterFlag)) {
            if (0 == e.shouldCollide(d)) {
              b = a;
              a = b.getNext();
              this.destroy(b);
              continue;
            }
            if (0 == this.m_contactFilter.shouldCollide(b, c)) {
              b = a;
              a = b.getNext();
              this.destroy(b);
              continue;
            }
            a.m_flags &= ~Ga.e_filterFlag;
          }
          0 == this.m_broadPhase.testOverlap(b.m_proxy, c.m_proxy)
            ? ((b = a), (a = b.getNext()), this.destroy(b))
            : (a.update(this.m_contactListener), (a = a.getNext()));
        }
      }
    },
    m_world: null,
    m_broadPhase: null,
    m_contactList: null,
    m_contactCount: null,
    m_contactFilter: null,
    m_contactListener: null,
    m_contactFactory: null,
    m_allocator: null,
    __class__: zl,
  };
  var Pe = function () {
    this.m_xformScale =
      this.m_fillAlpha =
      this.m_alpha =
      this.m_lineThickness =
      this.m_drawScale =
        1;
    this.m_drawFlags = 0;
  };
  p["box2D.dynamics.B2DebugDraw"] = Pe;
  Pe.__name__ = ["box2D", "dynamics", "B2DebugDraw"];
  Pe.prototype = {
    setFlags: function (a) {
      this.m_drawFlags = a;
    },
    getFlags: function () {
      return this.m_drawFlags;
    },
    appendFlags: function (a) {
      this.m_drawFlags |= a;
    },
    clearFlags: function (a) {
      this.m_drawFlags &= ~a;
    },
    setSprite: function (a) {
      this.m_sprite = a;
    },
    getSprite: function () {
      return this.m_sprite;
    },
    setDrawScale: function (a) {
      this.m_drawScale = a;
    },
    getDrawScale: function () {
      return this.m_drawScale;
    },
    setLineThickness: function (a) {
      this.m_lineThickness = a;
    },
    getLineThickness: function () {
      return this.m_lineThickness;
    },
    setAlpha: function (a) {
      this.m_alpha = a;
    },
    getAlpha: function () {
      return this.m_alpha;
    },
    setFillAlpha: function (a) {
      this.m_fillAlpha = a;
    },
    getFillAlpha: function () {
      return this.m_fillAlpha;
    },
    setXFormScale: function (a) {
      this.m_xformScale = a;
    },
    getXFormScale: function () {
      return this.m_xformScale;
    },
    drawPolygon: function (a, b, c) {
      this.m_sprite
        .get_graphics()
        .lineStyle(this.m_lineThickness, c.get_color(), this.m_alpha);
      this.m_sprite
        .get_graphics()
        .moveTo(a[0].x * this.m_drawScale, a[0].y * this.m_drawScale);
      for (c = 0; c < b; ) {
        var d = c++;
        this.m_sprite
          .get_graphics()
          .lineTo(a[d].x * this.m_drawScale, a[d].y * this.m_drawScale);
      }
      this.m_sprite
        .get_graphics()
        .lineTo(a[0].x * this.m_drawScale, a[0].y * this.m_drawScale);
    },
    drawSolidPolygon: function (a, b, c) {
      this.m_sprite
        .get_graphics()
        .lineStyle(this.m_lineThickness, c.get_color(), this.m_alpha);
      this.m_sprite
        .get_graphics()
        .moveTo(a[0].x * this.m_drawScale, a[0].y * this.m_drawScale);
      this.m_sprite.get_graphics().beginFill(c.get_color(), this.m_fillAlpha);
      for (c = 0; c < b; ) {
        var d = c++;
        this.m_sprite
          .get_graphics()
          .lineTo(a[d].x * this.m_drawScale, a[d].y * this.m_drawScale);
      }
      this.m_sprite
        .get_graphics()
        .lineTo(a[0].x * this.m_drawScale, a[0].y * this.m_drawScale);
      this.m_sprite.get_graphics().endFill();
    },
    drawCircle: function (a, b, c) {
      this.m_sprite
        .get_graphics()
        .lineStyle(this.m_lineThickness, c.get_color(), this.m_alpha);
      this.m_sprite
        .get_graphics()
        .drawCircle(
          a.x * this.m_drawScale,
          a.y * this.m_drawScale,
          b * this.m_drawScale
        );
    },
    drawSolidCircle: function (a, b, c, d) {
      this.m_sprite
        .get_graphics()
        .lineStyle(this.m_lineThickness, d.get_color(), this.m_alpha);
      this.m_sprite.get_graphics().moveTo(0, 0);
      this.m_sprite.get_graphics().beginFill(d.get_color(), this.m_fillAlpha);
      this.m_sprite
        .get_graphics()
        .drawCircle(
          a.x * this.m_drawScale,
          a.y * this.m_drawScale,
          b * this.m_drawScale
        );
      this.m_sprite.get_graphics().endFill();
      this.m_sprite
        .get_graphics()
        .moveTo(a.x * this.m_drawScale, a.y * this.m_drawScale);
      this.m_sprite
        .get_graphics()
        .lineTo(
          (a.x + c.x * b) * this.m_drawScale,
          (a.y + c.y * b) * this.m_drawScale
        );
    },
    drawSegment: function (a, b, c) {
      this.m_sprite
        .get_graphics()
        .lineStyle(this.m_lineThickness, c.get_color(), this.m_alpha);
      this.m_sprite
        .get_graphics()
        .moveTo(a.x * this.m_drawScale, a.y * this.m_drawScale);
      this.m_sprite
        .get_graphics()
        .lineTo(b.x * this.m_drawScale, b.y * this.m_drawScale);
    },
    drawTransform: function (a) {
      this.m_sprite
        .get_graphics()
        .lineStyle(this.m_lineThickness, 16711680, this.m_alpha);
      this.m_sprite
        .get_graphics()
        .moveTo(
          a.position.x * this.m_drawScale,
          a.position.y * this.m_drawScale
        );
      this.m_sprite
        .get_graphics()
        .lineTo(
          (a.position.x + this.m_xformScale * a.R.col1.x) * this.m_drawScale,
          (a.position.y + this.m_xformScale * a.R.col1.y) * this.m_drawScale
        );
      this.m_sprite
        .get_graphics()
        .lineStyle(this.m_lineThickness, 65280, this.m_alpha);
      this.m_sprite
        .get_graphics()
        .moveTo(
          a.position.x * this.m_drawScale,
          a.position.y * this.m_drawScale
        );
      this.m_sprite
        .get_graphics()
        .lineTo(
          (a.position.x + this.m_xformScale * a.R.col2.x) * this.m_drawScale,
          (a.position.y + this.m_xformScale * a.R.col2.y) * this.m_drawScale
        );
    },
    m_drawFlags: null,
    m_sprite: null,
    m_drawScale: null,
    m_lineThickness: null,
    m_alpha: null,
    m_fillAlpha: null,
    m_xformScale: null,
    __class__: Pe,
  };
  var Js = function () {};
  p["box2D.dynamics.B2DestructionListener"] = Js;
  Js.__name__ = ["box2D", "dynamics", "B2DestructionListener"];
  Js.prototype = {
    sayGoodbyeJoint: function (a) {},
    sayGoodbyeFixture: function (a) {},
    __class__: Js,
  };
  var bk = function () {
    this.categoryBits = 1;
    this.maskBits = 65535;
    this.groupIndex = 0;
  };
  p["box2D.dynamics.B2FilterData"] = bk;
  bk.__name__ = ["box2D", "dynamics", "B2FilterData"];
  bk.prototype = {
    copy: function () {
      var a = new bk();
      a.categoryBits = this.categoryBits;
      a.maskBits = this.maskBits;
      a.groupIndex = this.groupIndex;
      return a;
    },
    categoryBits: null,
    maskBits: null,
    groupIndex: null,
    __class__: bk,
  };
  var Sf = function () {
    this.m_filter = new bk();
    this.m_aabb = new jf();
    this.m_shape = this.m_next = this.m_body = this.m_userData = null;
    this.m_restitution = this.m_friction = this.m_density = 0;
    this.groupID = 3;
  };
  p["box2D.dynamics.B2Fixture"] = Sf;
  Sf.__name__ = ["box2D", "dynamics", "B2Fixture"];
  Sf.prototype = {
    getType: function () {
      return this.m_shape.getType();
    },
    getShape: function () {
      return this.m_shape;
    },
    setSensor: function (a) {
      if (this.m_isSensor != a && ((this.m_isSensor = a), null != this.m_body))
        for (a = this.m_body.getContactList(); null != a; ) {
          var b = a.contact,
            c = b.getFixtureA(),
            d = b.getFixtureB();
          (c != this && d != this) || b.setSensor(c.isSensor() || d.isSensor());
          a = a.next;
        }
    },
    isSensor: function () {
      return this.m_isSensor;
    },
    setFilterData: function (a) {
      this.m_filter = a.copy();
      if (null == this.m_body)
        for (a = this.m_body.getContactList(); null != a; ) {
          var b = a.contact,
            c = b.getFixtureA(),
            d = b.getFixtureB();
          (c != this && d != this) || b.flagForFiltering();
          a = a.next;
        }
    },
    getFilterData: function () {
      return this.m_filter.copy();
    },
    getBody: function () {
      return this.m_body;
    },
    getNext: function () {
      return this.m_next;
    },
    getUserData: function () {
      return this.m_userData;
    },
    SetUserData: function (a) {
      this.m_userData = a;
    },
    testPoint: function (a) {
      return this.m_shape.testPoint(this.m_body.getTransform(), a);
    },
    rayCast: function (a, b) {
      return this.m_shape.rayCast(a, b, this.m_body.getTransform());
    },
    getMassData: function (a) {
      null == a && (a = new Zj());
      this.m_shape.computeMass(a, this.m_density);
      return a;
    },
    setDensity: function (a) {
      this.m_density = a;
    },
    getDensity: function () {
      return this.m_density;
    },
    getFriction: function () {
      return this.m_friction;
    },
    setFriction: function (a) {
      this.m_friction = a;
    },
    getRestitution: function () {
      return this.m_restitution;
    },
    setRestitution: function (a) {
      this.m_restitution = a;
    },
    getAABB: function () {
      return this.m_aabb;
    },
    create: function (a, b, c) {
      this.m_userData = c.userData;
      this.m_friction = c.friction;
      this.m_restitution = c.restitution;
      this.m_body = a;
      this.m_next = null;
      this.m_filter = c.filter.copy();
      this.m_isSensor = c.isSensor;
      this.m_shape = c.shape.copy();
      this.m_density = c.density;
      this.groupID = c.groupID;
    },
    destroy: function () {
      this.m_shape = null;
    },
    createProxy: function (a, b) {
      this.m_shape.computeAABB(this.m_aabb, b);
      this.m_proxy = a.createProxy(this.m_aabb, this);
    },
    destroyProxy: function (a) {
      null != this.m_proxy &&
        (a.destroyProxy(this.m_proxy), (this.m_proxy = null));
    },
    synchronize: function (a, b, c) {
      null != this.m_proxy &&
        (this.m_shape.computeAABB(Sf.tempAABB1, b),
        this.m_shape.computeAABB(Sf.tempAABB2, c),
        this.m_aabb.combine(Sf.tempAABB1, Sf.tempAABB2),
        (b = E.subtractVVPooled(c.position, b.position)),
        a.moveProxy(this.m_proxy, this.m_aabb, b));
    },
    m_massData: null,
    m_aabb: null,
    m_density: null,
    m_next: null,
    m_body: null,
    m_shape: null,
    m_friction: null,
    m_restitution: null,
    m_proxy: null,
    m_filter: null,
    m_isSensor: null,
    m_userData: null,
    groupID: null,
    __class__: Sf,
  };
  var Tf = function () {
    this.filter = new bk();
    this.userData = this.shape = null;
    this.friction = 0.2;
    this.density = this.restitution = 0;
    this.filter.categoryBits = 1;
    this.filter.maskBits = 65535;
    this.filter.groupIndex = 0;
    this.isSensor = !1;
    this.groupID = 3;
  };
  p["box2D.dynamics.B2FixtureDef"] = Tf;
  Tf.__name__ = ["box2D", "dynamics", "B2FixtureDef"];
  Tf.prototype = {
    shape: null,
    userData: null,
    friction: null,
    restitution: null,
    density: null,
    isSensor: null,
    filter: null,
    groupID: null,
    __class__: Tf,
  };
  var ki = function () {
    this.m_bodies = [];
    this.m_contacts = [];
    this.m_joints = [];
  };
  p["box2D.dynamics.B2Island"] = ki;
  ki.__name__ = ["box2D", "dynamics", "B2Island"];
  ki.prototype = {
    initialize: function (a, b, c, d, e, f) {
      this.m_bodyCapacity = a;
      this.m_contactCapacity = b;
      this.m_jointCapacity = c;
      this.m_jointCount = this.m_contactCount = this.m_bodyCount = 0;
      this.m_allocator = d;
      this.m_listener = e;
      this.m_contactSolver = f;
      for (d = this.m_bodies.length; d < a; )
        (e = d++), (this.m_bodies[e] = null);
      for (a = this.m_contacts.length; a < b; )
        (d = a++), (this.m_contacts[d] = null);
      for (b = this.m_joints.length; b < c; )
        (a = b++), (this.m_joints[a] = null);
    },
    clear: function () {
      this.m_jointCount = this.m_contactCount = this.m_bodyCount = 0;
    },
    solve: function (a, b, c) {
      for (var d, e = 0, f = this.m_bodyCount; e < f; )
        (d = e++),
          (d = this.m_bodies[d]),
          d.getType() == ea.b2_dynamicBody &&
            (d.isIgnoringGravity()
              ? ((d.m_linearVelocity.x += a.dt * d.m_invMass * d.m_force.x),
                (d.m_linearVelocity.y += a.dt * d.m_invMass * d.m_force.y))
              : ((d.m_linearVelocity.x +=
                  a.dt * (b.x + d.m_invMass * d.m_force.x)),
                (d.m_linearVelocity.y +=
                  a.dt * (b.y + d.m_invMass * d.m_force.y))),
            (d.m_angularVelocity += a.dt * d.m_invI * d.m_torque),
            d.m_linearVelocity.multiply(
              E.clamp(1 - a.dt * d.m_linearDamping, 0, 1)
            ),
            (d.m_angularVelocity *= E.clamp(
              1 - a.dt * d.m_angularDamping,
              0,
              1
            )));
      this.m_contactSolver.initialize(
        a,
        this.m_contacts,
        this.m_contactCount,
        this.m_allocator
      );
      b = this.m_contactSolver;
      b.initVelocityConstraints(a);
      e = 0;
      for (f = this.m_jointCount; e < f; )
        (d = e++), (d = this.m_joints[d]), d.initVelocityConstraints(a);
      e = 0;
      for (f = a.velocityIterations; e < f; ) {
        e++;
        for (var g = 0, h = this.m_jointCount; g < h; )
          (d = g++), (d = this.m_joints[d]), d.solveVelocityConstraints(a);
        b.solveVelocityConstraints();
      }
      e = 0;
      for (f = this.m_jointCount; e < f; )
        (d = e++), (d = this.m_joints[d]), d.finalizeVelocityConstraints();
      b.finalizeVelocityConstraints();
      e = 0;
      for (f = this.m_bodyCount; e < f; )
        (d = e++),
          (d = this.m_bodies[d]),
          d.getType() != ea.b2_staticBody &&
            ((g = a.dt * d.m_linearVelocity.x),
            (h = a.dt * d.m_linearVelocity.y),
            g * g + h * h > R.b2_maxTranslationSquared &&
              (d.m_linearVelocity.normalize(),
              (d.m_linearVelocity.x =
                d.m_linearVelocity.x * R.b2_maxTranslation * a.inv_dt),
              (d.m_linearVelocity.y =
                d.m_linearVelocity.y * R.b2_maxTranslation * a.inv_dt)),
            (g = a.dt * d.m_angularVelocity),
            g * g > R.b2_maxRotationSquared &&
              (d.m_angularVelocity =
                0 > d.m_angularVelocity
                  ? -R.b2_maxRotation * a.inv_dt
                  : R.b2_maxRotation * a.inv_dt),
            (g = d.m_sweep.c0),
            (h = d.m_sweep.c),
            (g.x = h.x),
            (g.y = h.y),
            (d.m_sweep.a0 = d.m_sweep.a),
            (d.m_sweep.c.x += a.dt * d.m_linearVelocity.x),
            (d.m_sweep.c.y += a.dt * d.m_linearVelocity.y),
            (d.m_sweep.a += a.dt * d.m_angularVelocity),
            d.synchronizeTransform());
      e = 0;
      for (f = a.positionIterations; e < f; ) {
        e++;
        g = b.solvePositionConstraints(R.b2_contactBaumgarte);
        h = !0;
        for (var n = 0, k = this.m_jointCount; n < k; )
          (d = n++),
            (d = this.m_joints[d]),
            (d = d.solvePositionConstraints(R.b2_contactBaumgarte)),
            (h = h ? d : !1);
        if (g && h) break;
      }
      this.report(b.m_constraints);
      if (c) {
        c = Number.MAX_VALUE;
        b = R.b2_linearSleepTolerance * R.b2_linearSleepTolerance;
        e = R.b2_angularSleepTolerance * R.b2_angularSleepTolerance;
        f = 0;
        for (g = this.m_bodyCount; f < g; )
          (d = f++),
            (d = this.m_bodies[d]),
            d.getType() != ea.b2_staticBody &&
              (0 == (d.m_flags & ea.e_allowSleepFlag) &&
                (c = d.m_sleepTime = 0),
              0 == (d.m_flags & ea.e_allowSleepFlag) ||
              d.m_angularVelocity * d.m_angularVelocity > e ||
              E.dot(d.m_linearVelocity, d.m_linearVelocity) > b
                ? (c = d.m_sleepTime = 0)
                : ((d.m_sleepTime += a.dt), (c = E.min(c, d.m_sleepTime))));
        if (c >= R.b2_timeToSleep)
          for (a = 0, c = this.m_bodyCount; a < c; )
            (b = a++), (d = this.m_bodies[b]), d.setAwake(!1);
      }
    },
    solveTOI: function (a) {
      this.m_contactSolver.initialize(
        a,
        this.m_contacts,
        this.m_contactCount,
        this.m_allocator
      );
      for (
        var b = this.m_contactSolver, c = 0, d = this.m_jointCount;
        c < d;

      ) {
        var e = c++;
        this.m_joints[e].initVelocityConstraints(a);
      }
      c = 0;
      for (d = a.velocityIterations; c < d; ) {
        c++;
        b.solveVelocityConstraints();
        e = 0;
        for (var f = this.m_jointCount; e < f; ) {
          var g = e++;
          this.m_joints[g].solveVelocityConstraints(a);
        }
      }
      c = 0;
      for (d = this.m_bodyCount; c < d; )
        (e = c++),
          (e = this.m_bodies[e]),
          e.getType() != ea.b2_staticBody &&
            ((f = a.dt * e.m_linearVelocity.x),
            (g = a.dt * e.m_linearVelocity.y),
            f * f + g * g > R.b2_maxTranslationSquared &&
              (e.m_linearVelocity.normalize(),
              (e.m_linearVelocity.x =
                e.m_linearVelocity.x * R.b2_maxTranslation * a.inv_dt),
              (e.m_linearVelocity.y =
                e.m_linearVelocity.y * R.b2_maxTranslation * a.inv_dt)),
            (f = a.dt * e.m_angularVelocity),
            f * f > R.b2_maxRotationSquared &&
              (e.m_angularVelocity =
                0 > e.m_angularVelocity
                  ? -R.b2_maxRotation * a.inv_dt
                  : R.b2_maxRotation * a.inv_dt),
            (f = e.m_sweep.c0),
            (g = e.m_sweep.c),
            (f.x = g.x),
            (f.y = g.y),
            (e.m_sweep.a0 = e.m_sweep.a),
            (e.m_sweep.c.x += a.dt * e.m_linearVelocity.x),
            (e.m_sweep.c.y += a.dt * e.m_linearVelocity.y),
            (e.m_sweep.a += a.dt * e.m_angularVelocity),
            e.synchronizeTransform());
      c = 0;
      for (a = a.positionIterations; c < a; ) {
        c++;
        d = b.solvePositionConstraints(0.75);
        e = !0;
        f = 0;
        for (g = this.m_jointCount; f < g; ) {
          var h = f++;
          h = this.m_joints[h].solvePositionConstraints(R.b2_contactBaumgarte);
          e = e ? h : !1;
        }
        if (d && e) break;
      }
      this.report(b.m_constraints);
    },
    report: function (a) {
      if (null != this.m_listener)
        for (var b = 0, c = this.m_contactCount; b < c; ) {
          var d = b++,
            e = this.m_contacts[d];
          d = a[d];
          for (var f = 0, g = d.pointCount; f < g; ) {
            var h = f++;
            ki.s_impulse.normalImpulses[h] = d.points[h].normalImpulse;
            ki.s_impulse.tangentImpulses[h] = d.points[h].tangentImpulse;
          }
          this.m_listener.postSolve(e, ki.s_impulse);
        }
    },
    addBody: function (a) {
      a.m_islandIndex = this.m_bodyCount;
      this.m_bodies[this.m_bodyCount++] = a;
    },
    addContact: function (a) {
      this.m_contacts[this.m_contactCount++] = a;
    },
    addJoint: function (a) {
      this.m_joints[this.m_jointCount++] = a;
    },
    m_allocator: null,
    m_listener: null,
    m_contactSolver: null,
    m_bodies: null,
    m_contacts: null,
    m_joints: null,
    m_bodyCount: null,
    m_jointCount: null,
    m_contactCount: null,
    m_bodyCapacity: null,
    m_contactCapacity: null,
    m_jointCapacity: null,
    __class__: ki,
  };
  var ck = function () {};
  p["box2D.dynamics.B2TimeStep"] = ck;
  ck.__name__ = ["box2D", "dynamics", "B2TimeStep"];
  ck.prototype = {
    set: function (a) {
      this.dt = a.dt;
      this.inv_dt = a.inv_dt;
      this.positionIterations = a.positionIterations;
      this.velocityIterations = a.velocityIterations;
      this.warmStarting = a.warmStarting;
    },
    dt: null,
    inv_dt: null,
    dtRatio: null,
    velocityIterations: null,
    positionIterations: null,
    warmStarting: null,
    __class__: ck,
  };
  var Rb = function (a, b) {
    this.pointQueryCallback = new Al();
    this.shapeQueryCallback = new Bl();
    this.aabbQueryCallback = new Cl();
    this.s_stack = [];
    this.m_contactManager = new zl();
    this.m_contactSolver = new Qe();
    this.m_island = new ki();
    this.m_controllerList =
      this.m_jointList =
      this.m_contactList =
      this.m_bodyList =
      this.m_debugDraw =
      this.m_destructionListener =
        null;
    this.m_controllerCount =
      this.m_jointCount =
      this.m_contactCount =
      this.m_bodyCount =
        0;
    Rb.m_warmStarting = !0;
    Rb.m_continuousPhysics = !1;
    this.m_allowSleep = b;
    this.m_gravity = a;
    this.m_flags = this.m_inv_dt0 = 0;
    this.m_contactManager.m_world = this;
    a = new Vi();
    this.m_groundBody = this.createBody(a);
  };
  p["box2D.dynamics.B2World"] = Rb;
  Rb.__name__ = ["box2D", "dynamics", "B2World"];
  Rb.prototype = {
    setDestructionListener: function (a) {
      this.m_destructionListener = a;
    },
    setContactFilter: function (a) {
      this.m_contactManager.m_contactFilter = a;
    },
    setContactListener: function (a) {
      this.m_contactManager.m_contactListener = a;
    },
    setDebugDraw: function (a) {
      this.m_debugDraw = a;
    },
    setBroadPhase: function (a) {
      var b = this.m_contactManager.m_broadPhase;
      this.m_contactManager.m_broadPhase = a;
      for (var c = this.m_bodyList; null != c; ) {
        for (var d = c.m_fixtureList; null != d; )
          (d.m_proxy = a.createProxy(b.getFatAABB(d.m_proxy), d)),
            (d = d.m_next);
        c = c.m_next;
      }
    },
    validate: function () {
      this.m_contactManager.m_broadPhase.validate();
    },
    getProxyCount: function () {
      return this.m_contactManager.m_broadPhase.getProxyCount();
    },
    createBody: function (a) {
      if (1 == this.isLocked()) return null;
      a = new ea(a, this);
      a.m_prev = null;
      a.m_next = this.m_bodyList;
      null != this.m_bodyList && (this.m_bodyList.m_prev = a);
      this.m_bodyList = a;
      ++this.m_bodyCount;
      return a;
    },
    destroyBody: function (a) {
      if (1 != this.isLocked()) {
        for (var b = a.m_jointList; null != b; ) {
          var c = b;
          b = b.next;
          null != this.m_destructionListener &&
            this.m_destructionListener.sayGoodbyeJoint(c.joint);
          this.destroyJoint(c.joint);
        }
        for (b = a.m_controllerList; null != b; )
          (c = b), (b = b.nextController), c.controller.removeBody(a);
        for (b = a.m_contactList; null != b; )
          (c = b), (b = b.next), this.m_contactManager.destroy(c.contact);
        a.m_contactList = null;
        for (b = a.m_fixtureList; null != b; )
          (c = b),
            (b = b.m_next),
            null != this.m_destructionListener &&
              this.m_destructionListener.sayGoodbyeFixture(c),
            c.destroyProxy(this.m_contactManager.m_broadPhase),
            c.destroy();
        a.m_fixtureList = null;
        a.m_fixtureCount = 0;
        null != a.m_prev && (a.m_prev.m_next = a.m_next);
        null != a.m_next && (a.m_next.m_prev = a.m_prev);
        a == this.m_bodyList && (this.m_bodyList = a.m_next);
        --this.m_bodyCount;
      }
    },
    createJoint: function (a) {
      var b = Kb.create(a, null);
      b.m_prev = null;
      b.m_next = this.m_jointList;
      null != this.m_jointList && (this.m_jointList.m_prev = b);
      this.m_jointList = b;
      ++this.m_jointCount;
      b.m_edgeA.joint = b;
      b.m_edgeA.other = b.m_bodyB;
      b.m_edgeA.prev = null;
      b.m_edgeA.next = b.m_bodyA.m_jointList;
      null != b.m_bodyA.m_jointList && (b.m_bodyA.m_jointList.prev = b.m_edgeA);
      b.m_bodyA.m_jointList = b.m_edgeA;
      b.m_edgeB.joint = b;
      b.m_edgeB.other = b.m_bodyA;
      b.m_edgeB.prev = null;
      b.m_edgeB.next = b.m_bodyB.m_jointList;
      null != b.m_bodyB.m_jointList && (b.m_bodyB.m_jointList.prev = b.m_edgeB);
      b.m_bodyB.m_jointList = b.m_edgeB;
      var c = a.bodyA,
        d = a.bodyB;
      if (0 == a.collideConnected)
        for (a = d.getContactList(); null != a; )
          a.other == c && a.contact.flagForFiltering(), (a = a.next);
      return b;
    },
    destroyJoint: function (a) {
      var b = a.m_collideConnected;
      null != a.m_prev && (a.m_prev.m_next = a.m_next);
      null != a.m_next && (a.m_next.m_prev = a.m_prev);
      a == this.m_jointList && (this.m_jointList = a.m_next);
      var c = a.m_bodyA,
        d = a.m_bodyB;
      c.setAwake(!0);
      d.setAwake(!0);
      null != a.m_edgeA.prev && (a.m_edgeA.prev.next = a.m_edgeA.next);
      null != a.m_edgeA.next && (a.m_edgeA.next.prev = a.m_edgeA.prev);
      a.m_edgeA == c.m_jointList && (c.m_jointList = a.m_edgeA.next);
      a.m_edgeA.prev = null;
      a.m_edgeA.next = null;
      null != a.m_edgeB.prev && (a.m_edgeB.prev.next = a.m_edgeB.next);
      null != a.m_edgeB.next && (a.m_edgeB.next.prev = a.m_edgeB.prev);
      a.m_edgeB == d.m_jointList && (d.m_jointList = a.m_edgeB.next);
      a.m_edgeB.prev = null;
      a.m_edgeB.next = null;
      Kb.destroy(a, null);
      --this.m_jointCount;
      if (0 == b)
        for (a = d.getContactList(); null != a; )
          a.other == c && a.contact.flagForFiltering(), (a = a.next);
    },
    addController: function (a) {
      a.m_next = this.m_controllerList;
      a.m_prev = null;
      this.m_controllerList = a;
      a.m_world = this;
      this.m_controllerCount++;
      return a;
    },
    removeController: function (a) {
      null != a.m_prev && (a.m_prev.m_next = a.m_next);
      null != a.m_next && (a.m_next.m_prev = a.m_prev);
      this.m_controllerList == a && (this.m_controllerList = a.m_next);
      this.m_controllerCount--;
    },
    createController: function (a) {
      if (a.m_world != this)
        throw new v("Controller can only be a member of one world");
      a.m_next = this.m_controllerList;
      a.m_prev = null;
      null != this.m_controllerList && (this.m_controllerList.m_prev = a);
      this.m_controllerList = a;
      ++this.m_controllerCount;
      a.m_world = this;
      return a;
    },
    destroyController: function (a) {
      a.clear();
      null != a.m_next && (a.m_next.m_prev = a.m_prev);
      null != a.m_prev && (a.m_prev.m_next = a.m_next);
      a == this.m_controllerList && (this.m_controllerList = a.m_next);
      --this.m_controllerCount;
    },
    setWarmStarting: function (a) {
      Rb.m_warmStarting = a;
    },
    setContinuousPhysics: function (a) {
      Rb.m_continuousPhysics = a;
    },
    getBodyCount: function () {
      return this.m_bodyCount;
    },
    getJointCount: function () {
      return this.m_jointCount;
    },
    getContactCount: function () {
      return this.m_contactCount;
    },
    setGravity: function (a) {
      this.m_gravity = a;
    },
    getGravity: function () {
      return this.m_gravity;
    },
    getGroundBody: function () {
      return this.m_groundBody;
    },
    step: function (a, b, c) {
      D.freePool();
      0 != (this.m_flags & Rb.e_newFixture) &&
        (this.m_contactManager.findNewContacts(),
        (this.m_flags &= ~Rb.e_newFixture));
      this.m_flags |= Rb.e_locked;
      var d = Rb.s_timestep2;
      d.dt = a;
      d.velocityIterations = b;
      d.positionIterations = c;
      d.inv_dt = 0 < a ? 1 / a : 0;
      d.dtRatio = this.m_inv_dt0 * a;
      d.warmStarting = Rb.m_warmStarting;
      this.m_contactManager.collide();
      0 < d.dt && this.solve(d);
      Rb.m_continuousPhysics && 0 < d.dt && this.solveTOI(d);
      0 < d.dt && (this.m_inv_dt0 = d.inv_dt);
      this.m_flags &= ~Rb.e_locked;
    },
    clearForces: function () {
      for (var a = this.m_bodyList; null != a; ) {
        var b = a.m_force;
        b.x = 0;
        b.y = 0;
        a.m_torque = 0;
        a = a.m_next;
      }
    },
    drawDebugData: function () {
      if (null != this.m_debugDraw) {
        this.m_debugDraw.m_sprite.get_graphics().clear();
        var a = this.m_debugDraw.getFlags(),
          b,
          c;
        new D();
        new D();
        new D();
        new jf();
        new jf();
        new D();
        new D();
        new D();
        new D();
        var d = new yl(0, 0, 0);
        if (0 != (a & Pe.e_shapeBit))
          for (b = this.m_bodyList; null != b; ) {
            var e = b.m_xf;
            for (c = b.getFixtureList(); null != c; ) {
              var f = c.getShape();
              0 == b.isActive()
                ? d.set(0.5, 0.5, 0.3)
                : b.getType() == ea.b2_staticBody
                ? d.set(0.5, 0.9, 0.5)
                : b.getType() == ea.b2_kinematicBody
                ? d.set(0.5, 0.5, 0.9)
                : 0 == b.isAwake()
                ? d.set(0.6, 0.6, 0.6)
                : d.set(0.9, 0.7, 0.7);
              this.drawShape(f, e, d);
              c = c.m_next;
            }
            b = b.m_next;
          }
        if (0 != (a & Pe.e_jointBit))
          for (b = this.m_jointList; null != b; )
            this.drawJoint(b), (b = b.m_next);
        if (0 != (a & Pe.e_controllerBit))
          for (b = this.m_controllerList; null != b; )
            b.draw(this.m_debugDraw), (b = b.m_next);
        if (0 != (a & Pe.e_pairBit))
          for (
            d.set(0.3, 0.9, 0.9), b = this.m_contactManager.m_contactList;
            null != b;

          )
            (f = b.getFixtureA()),
              (c = b.getFixtureB()),
              (f = f.getAABB().getCenter()),
              (c = c.getAABB().getCenter()),
              this.m_debugDraw.drawSegment(f, c, d),
              (b = b.getNext());
        if (0 != (a & Pe.e_aabbBit))
          for (
            f = this.m_contactManager.m_broadPhase,
              e = [new D(), new D(), new D(), new D()],
              b = this.m_bodyList;
            null != b;

          ) {
            if (0 != b.isActive())
              for (c = b.getFixtureList(); null != c; ) {
                var g = f.getFatAABB(c.m_proxy),
                  h = e[0];
                h.x = g.lowerBound.x;
                h.y = g.lowerBound.y;
                h = e[1];
                h.x = g.upperBound.x;
                h.y = g.lowerBound.y;
                h = e[2];
                h.x = g.upperBound.x;
                h.y = g.upperBound.y;
                h = e[3];
                h.x = g.lowerBound.x;
                h.y = g.upperBound.y;
                this.m_debugDraw.drawPolygon(e, 4, d);
                c = c.getNext();
              }
            b = b.getNext();
          }
        if (0 != (a & Pe.e_centerOfMassBit))
          for (b = this.m_bodyList; null != b; )
            (e = Rb.s_xf),
              (e.R = b.m_xf.R),
              (e.position = b.getWorldCenter()),
              this.m_debugDraw.drawTransform(e),
              (b = b.m_next);
      }
    },
    queryAABB: function (a, b) {
      this.aabbQueryCallback.broadPhase = this.m_contactManager.m_broadPhase;
      this.aabbQueryCallback.callbackMethod = a;
      this.m_contactManager.m_broadPhase.query(this.aabbQueryCallback, b);
    },
    queryShape: function (a, b, c) {
      this.shapeQueryCallback.broadPhase = this.m_contactManager.m_broadPhase;
      this.shapeQueryCallback.callbackMethod = a;
      null == c && ((c = new kf()), c.setIdentity());
      this.shapeQueryCallback.transform = c;
      a = new jf();
      b.computeAABB(a, c);
      this.shapeQueryCallback.shape = b;
      this.m_contactManager.m_broadPhase.query(this.shapeQueryCallback, a);
    },
    queryPoint: function (a, b) {
      this.pointQueryCallback.broadPhase = this.m_contactManager.m_broadPhase;
      this.pointQueryCallback.callbackMethod = a;
      this.pointQueryCallback.p = b;
      a = new jf();
      var c = a.lowerBound;
      c.x = b.x - R.b2_linearSlop;
      c.y = b.y - R.b2_linearSlop;
      c = a.upperBound;
      c.x = b.x + R.b2_linearSlop;
      c.y = b.y + R.b2_linearSlop;
      this.m_contactManager.m_broadPhase.query(this.pointQueryCallback, a);
    },
    rayCast: function (a, b, c) {
      var d = this.m_contactManager.m_broadPhase,
        e = new No(),
        f = new vl(b, c);
      d.rayCast(function (f, h) {
        h = d.getUserData(h);
        h = u.__cast(h, Sf);
        if (h.rayCast(e, f)) {
          f = e.fraction;
          var g = new D((1 - f) * b.x + f * c.x, (1 - f) * b.y + f * c.y);
          return a(h, g, e.normal, f);
        }
        return f.maxFraction;
      }, f);
    },
    rayCastOne: function (a, b) {
      var c;
      this.rayCast(
        function (a, b, f, g) {
          c = a;
          return g;
        },
        a,
        b
      );
      return c;
    },
    rayCastAll: function (a, b) {
      var c = [];
      this.rayCast(
        function (a, b, f, g) {
          c[c.length] = a;
          return 1;
        },
        a,
        b
      );
      return c;
    },
    getBodyList: function () {
      return this.m_bodyList;
    },
    getJointList: function () {
      return this.m_jointList;
    },
    getContactList: function () {
      return this.m_contactList;
    },
    isLocked: function () {
      return 0 < (this.m_flags & Rb.e_locked);
    },
    s_stack: null,
    solve: function (a) {
      for (var b, c = this.m_controllerList; null != c; )
        c.step(a), (c = c.m_next);
      var d = this.m_island;
      d.initialize(
        this.m_bodyCount,
        this.m_contactCount,
        this.m_jointCount,
        null,
        this.m_contactManager.m_contactListener,
        this.m_contactSolver
      );
      for (b = this.m_bodyList; null != b; )
        (b.m_flags &= ~ea.e_islandFlag), (b = b.m_next);
      for (c = this.m_contactList; null != c; )
        (c.m_flags &= ~Ga.e_islandFlag), (c = c.m_next);
      for (c = this.m_jointList; null != c; )
        (c.m_islandFlag = !1), (c = c.m_next);
      c = this.s_stack;
      for (var e = this.m_bodyList; null != e; ) {
        if (
          0 == (e.m_flags & ea.e_islandFlag) &&
          (!e.isActive() &&
            !e.isAlwaysActive() &&
            e.m_xf.position.x + e.origin.x + e.size.x >=
              this.m_aabb.lowerBound.x &&
            e.m_xf.position.y + e.origin.y + e.size.y >=
              this.m_aabb.lowerBound.y &&
            e.m_xf.position.x + e.origin.x <= this.m_aabb.upperBound.x &&
            e.m_xf.position.y + e.origin.y <= this.m_aabb.upperBound.y &&
            (e.setActive(!0), e.setAwake(!0)),
          0 != e.isAwake() &&
            0 != e.isActive() &&
            !e.isPaused() &&
            e.getType() != ea.b2_staticBody)
        )
          if (
            e.isActive() &&
            !e.isAlwaysActive() &&
            (e.m_xf.position.x + e.origin.x + e.size.x <
              this.m_aabb.lowerBound.x ||
              e.m_xf.position.y + e.origin.y + e.size.y <
                this.m_aabb.lowerBound.y ||
              e.m_xf.position.x + e.origin.x > this.m_aabb.upperBound.x ||
              e.m_xf.position.y + e.origin.y > this.m_aabb.upperBound.y)
          )
            e.setAwake(!1), e.setActive(!1);
          else {
            d.clear();
            var f = 0;
            c[f++] = e;
            for (e.m_flags |= ea.e_islandFlag; 0 < f; )
              if (
                ((b = c[--f]),
                d.addBody(b),
                0 == b.isAwake() && b.setAwake(!0),
                b.getType() != ea.b2_staticBody)
              ) {
                for (var g, h = b.m_contactList; null != h; )
                  0 == (h.contact.m_flags & Ga.e_islandFlag) &&
                    1 != h.contact.isSensor() &&
                    0 != h.contact.isEnabled() &&
                    0 != h.contact.isTouching() &&
                    (d.addContact(h.contact),
                    (h.contact.m_flags |= Ga.e_islandFlag),
                    (g = h.other),
                    0 == (g.m_flags & ea.e_islandFlag) &&
                      ((c[f++] = g), (g.m_flags |= ea.e_islandFlag))),
                    (h = h.next);
                for (b = b.m_jointList; null != b; )
                  1 != b.joint.m_islandFlag &&
                    ((g = b.other),
                    0 != g.isActive() &&
                      (d.addJoint(b.joint),
                      (b.joint.m_islandFlag = !0),
                      0 == (g.m_flags & ea.e_islandFlag) &&
                        ((c[f++] = g), (g.m_flags |= ea.e_islandFlag)))),
                    (b = b.next);
              }
            d.solve(a, this.m_gravity, this.m_allowSleep);
            f = 0;
            for (g = d.m_bodyCount; f < g; )
              (b = f++),
                (b = d.m_bodies[b]),
                b.getType() == ea.b2_staticBody &&
                  (b.m_flags &= ~ea.e_islandFlag);
          }
        e = e.m_next;
      }
      a = 0;
      for (d = c.length; a < d; ) {
        e = a++;
        if (null == c[e]) break;
        c[e] = null;
      }
      for (b = this.m_bodyList; null != b; )
        0 != b.isAwake() &&
          0 != b.isActive() &&
          b.getType() != ea.b2_staticBody &&
          b.synchronizeFixtures(),
          (b = b.m_next);
      this.m_contactManager.findNewContacts();
    },
    solveTOI: function (a) {
      var b,
        c,
        d = this.m_island;
      d.initialize(
        this.m_bodyCount,
        R.b2_maxTOIContactsPerIsland,
        R.b2_maxTOIJointsPerIsland,
        null,
        this.m_contactManager.m_contactListener,
        this.m_contactSolver
      );
      var e = Rb.s_queue;
      for (b = this.m_bodyList; null != b; )
        (b.m_flags &= ~ea.e_islandFlag), (b.m_sweep.t0 = 0), (b = b.m_next);
      for (b = this.m_contactList; null != b; )
        (b.m_flags &= ~(Ga.e_toiFlag | Ga.e_islandFlag)), (b = b.m_next);
      for (c = this.m_jointList; null != c; )
        (c.m_islandFlag = !1), (c = c.m_next);
      for (;;) {
        c = null;
        var f = 1;
        for (b = this.m_contactList; null != b; ) {
          if (
            1 != b.isSensor() &&
            0 != b.isEnabled() &&
            0 != b.isContinuous()
          ) {
            if (0 != (b.m_flags & Ga.e_toiFlag)) var g = b.m_toi;
            else {
              g = b.m_fixtureA;
              var h = b.m_fixtureB;
              g = g.m_body;
              h = h.m_body;
              if (
                !(
                  (g.getType() == ea.b2_dynamicBody && 0 != g.isAwake()) ||
                  (h.getType() == ea.b2_dynamicBody && 0 != h.isAwake())
                )
              ) {
                b = b.m_next;
                continue;
              }
              var n = g.m_sweep.t0;
              g.m_sweep.t0 < h.m_sweep.t0
                ? ((n = h.m_sweep.t0), g.m_sweep.advance(n))
                : h.m_sweep.t0 < g.m_sweep.t0 &&
                  ((n = g.m_sweep.t0), h.m_sweep.advance(n));
              g = b.computeTOI(g.m_sweep, h.m_sweep);
              R.b2Assert(0 <= g && 1 >= g);
              0 < g && 1 > g && ((g = (1 - g) * n + g), 1 < g && (g = 1));
              b.m_toi = g;
              b.m_flags |= Ga.e_toiFlag;
            }
            Number.MIN_VALUE < g && g < f && ((c = b), (f = g));
          }
          b = b.m_next;
        }
        if (null == c || 1 - 100 * Number.MIN_VALUE < f) break;
        g = c.m_fixtureA;
        h = c.m_fixtureB;
        g = g.m_body;
        h = h.m_body;
        Rb.s_backupA.set(g.m_sweep);
        Rb.s_backupB.set(h.m_sweep);
        g.advance(f);
        h.advance(f);
        c.update(this.m_contactManager.m_contactListener);
        c.m_flags &= ~Ga.e_toiFlag;
        if (1 == c.isSensor() || 0 == c.isEnabled())
          g.m_sweep.set(Rb.s_backupA),
            h.m_sweep.set(Rb.s_backupB),
            g.synchronizeTransform(),
            h.synchronizeTransform();
        else if (0 != c.isTouching()) {
          b = g;
          b.getType() != ea.b2_dynamicBody && (b = h);
          d.clear();
          h = g = 0;
          e[g + h++] = b;
          for (b.m_flags |= ea.e_islandFlag; 0 < h; )
            if (
              ((b = e[g++]),
              --h,
              d.addBody(b),
              0 == b.isAwake() && b.setAwake(!0),
              b.getType() == ea.b2_dynamicBody)
            ) {
              for (
                c = b.m_contactList;
                null != c && d.m_contactCount != d.m_contactCapacity;

              )
                0 == (c.contact.m_flags & Ga.e_islandFlag) &&
                  1 != c.contact.isSensor() &&
                  0 != c.contact.isEnabled() &&
                  0 != c.contact.isTouching() &&
                  (d.addContact(c.contact),
                  (c.contact.m_flags |= Ga.e_islandFlag),
                  (n = c.other),
                  0 == (n.m_flags & ea.e_islandFlag) &&
                    (n.getType() != ea.b2_staticBody &&
                      (n.advance(f), n.setAwake(!0)),
                    (e[g + h] = n),
                    ++h,
                    (n.m_flags |= ea.e_islandFlag))),
                  (c = c.next);
              for (b = b.m_jointList; null != b; )
                d.m_jointCount != d.m_jointCapacity &&
                  1 != b.joint.m_islandFlag &&
                  ((n = b.other),
                  0 != n.isActive() &&
                    (d.addJoint(b.joint),
                    (b.joint.m_islandFlag = !0),
                    0 == (n.m_flags & ea.e_islandFlag) &&
                      (n.getType() != ea.b2_staticBody &&
                        (n.advance(f), n.setAwake(!0)),
                      (e[g + h] = n),
                      ++h,
                      (n.m_flags |= ea.e_islandFlag)))),
                  (b = b.next);
            }
          b = Rb.s_timestep;
          b.warmStarting = !1;
          b.dt = (1 - f) * a.dt;
          b.inv_dt = 1 / b.dt;
          b.dtRatio = 0;
          b.velocityIterations = a.velocityIterations;
          b.positionIterations = a.positionIterations;
          d.solveTOI(b);
          f = 0;
          for (g = d.m_bodyCount; f < g; )
            if (
              ((b = f++),
              (b = d.m_bodies[b]),
              (b.m_flags &= ~ea.e_islandFlag),
              0 != b.isAwake() && b.getType() == ea.b2_dynamicBody)
            )
              for (b.synchronizeFixtures(), c = b.m_contactList; null != c; )
                (c.contact.m_flags &= ~Ga.e_toiFlag), (c = c.next);
          f = 0;
          for (c = d.m_contactCount; f < c; )
            (b = f++),
              (b = d.m_contacts[b]),
              (b.m_flags &= ~(Ga.e_toiFlag | Ga.e_islandFlag));
          f = 0;
          for (b = d.m_jointCount; f < b; )
            (c = f++), (c = d.m_joints[c]), (c.m_islandFlag = !1);
          this.m_contactManager.findNewContacts();
        }
      }
    },
    drawJoint: function (a) {
      var b = a.getBodyA(),
        c = a.getBodyB(),
        d = b.m_xf.position,
        e = c.m_xf.position,
        f = a.getAnchorA(),
        g = a.getAnchorB(),
        h = Rb.s_jointColor;
      switch (a.m_type) {
        case 3:
          this.m_debugDraw.drawSegment(f, g, h);
          break;
        case 4:
          b = u.__cast(a, Jg);
          a = b.getGroundAnchorA();
          b = b.getGroundAnchorB();
          this.m_debugDraw.drawSegment(a, f, h);
          this.m_debugDraw.drawSegment(b, g, h);
          this.m_debugDraw.drawSegment(a, b, h);
          break;
        case 5:
          this.m_debugDraw.drawSegment(f, g, h);
          break;
        default:
          b != this.m_groundBody && this.m_debugDraw.drawSegment(d, f, h),
            this.m_debugDraw.drawSegment(f, g, h),
            c != this.m_groundBody && this.m_debugDraw.drawSegment(e, g, h);
      }
    },
    drawShape: function (a, b, c) {
      switch (a.m_type) {
        case 0:
          a = u.__cast(a, Jc);
          var d = E.mulX(b, a.m_p);
          this.m_debugDraw.drawSolidCircle(d, a.m_radius, b.R.col1, c);
          break;
        case 1:
          d = u.__cast(a, Db);
          a = d.getVertexCount();
          d = d.getVertices();
          for (var e = [], f = 0; f < a; ) {
            var g = f++;
            e[g] = E.mulX(b, d[g]);
          }
          this.m_debugDraw.drawSolidPolygon(e, a, c);
          break;
        case 2:
          (a = u.__cast(a, Ig)),
            this.m_debugDraw.drawSegment(
              E.mulX(b, a.getVertex1()),
              E.mulX(b, a.getVertex2()),
              c
            );
      }
    },
    m_aabb: null,
    setScreenBounds: function (a) {
      this.m_aabb = a;
    },
    getScreenBounds: function () {
      return this.m_aabb;
    },
    m_flags: null,
    m_contactManager: null,
    m_contactSolver: null,
    m_island: null,
    m_bodyList: null,
    m_jointList: null,
    m_contactList: null,
    m_bodyCount: null,
    m_contactCount: null,
    m_jointCount: null,
    m_controllerList: null,
    m_controllerCount: null,
    m_gravity: null,
    m_allowSleep: null,
    m_groundBody: null,
    m_destructionListener: null,
    m_debugDraw: null,
    m_inv_dt0: null,
    aabbQueryCallback: null,
    shapeQueryCallback: null,
    pointQueryCallback: null,
    __class__: Rb,
  };
  var Cl = function () {};
  p["box2D.dynamics.AABBQueryCallback"] = Cl;
  Cl.__name__ = ["box2D", "dynamics", "AABBQueryCallback"];
  Cl.__interfaces__ = [Ui];
  Cl.prototype = {
    broadPhase: null,
    callbackMethod: null,
    queryCallback: function (a) {
      return this.callbackMethod(this.broadPhase.getUserData(a));
    },
    __class__: Cl,
  };
  var Bl = function () {};
  p["box2D.dynamics.ShapeQueryCallback"] = Bl;
  Bl.__name__ = ["box2D", "dynamics", "ShapeQueryCallback"];
  Bl.__interfaces__ = [Ui];
  Bl.prototype = {
    broadPhase: null,
    shape: null,
    transform: null,
    callbackMethod: null,
    queryCallback: function (a) {
      a = this.broadPhase.getUserData(a);
      return Jb.testOverlap(
        this.shape,
        this.transform,
        a.getShape(),
        a.getBody().getTransform()
      )
        ? this.callbackMethod(a)
        : !0;
    },
    __class__: Bl,
  };
  var Al = function () {};
  p["box2D.dynamics.PointQueryCallback"] = Al;
  Al.__name__ = ["box2D", "dynamics", "PointQueryCallback"];
  Al.__interfaces__ = [Ui];
  Al.prototype = {
    broadPhase: null,
    callbackMethod: null,
    p: null,
    queryCallback: function (a) {
      a = this.broadPhase.getUserData(a);
      return a.testPoint(this.p) ? this.callbackMethod(a) : !0;
    },
    __class__: Al,
  };
  var Ga = function () {
    this.m_nodeA = new Dl();
    this.m_nodeB = new Dl();
    this.m_manifold = new Dh();
    this.m_oldManifold = new Dh();
  };
  p["box2D.dynamics.contacts.B2Contact"] = Ga;
  Ga.__name__ = ["box2D", "dynamics", "contacts", "B2Contact"];
  Ga.prototype = {
    getManifold: function () {
      return this.m_manifold;
    },
    getWorldManifold: function (a) {
      var b = this.m_fixtureA.getBody(),
        c = this.m_fixtureB.getBody(),
        d = this.m_fixtureA.getShape(),
        e = this.m_fixtureB.getShape();
      a.initialize(
        this.m_manifold,
        b.getTransform(),
        d.m_radius,
        c.getTransform(),
        e.m_radius
      );
    },
    isTouching: function () {
      return (this.m_flags & Ga.e_touchingFlag) == Ga.e_touchingFlag;
    },
    isContinuous: function () {
      return (this.m_flags & Ga.e_continuousFlag) == Ga.e_continuousFlag;
    },
    setSensor: function (a) {
      this.m_flags = a
        ? this.m_flags | Ga.e_sensorFlag
        : this.m_flags & ~Ga.e_sensorFlag;
    },
    isSensor: function () {
      return (this.m_flags & Ga.e_sensorFlag) == Ga.e_sensorFlag;
    },
    setEnabled: function (a) {
      this.m_flags = a
        ? this.m_flags | Ga.e_enabledFlag
        : this.m_flags & ~Ga.e_enabledFlag;
    },
    isEnabled: function () {
      return (this.m_flags & Ga.e_enabledFlag) == Ga.e_enabledFlag;
    },
    getNext: function () {
      return this.m_next;
    },
    getFixtureA: function () {
      return this.m_fixtureA;
    },
    getFixtureB: function () {
      return this.m_fixtureB;
    },
    flagForFiltering: function () {
      this.m_flags |= Ga.e_filterFlag;
    },
    reset: function (a, b) {
      this.m_flags = Ga.e_enabledFlag;
      if (null == a || null == b) this.m_fixtureB = this.m_fixtureA = null;
      else {
        if (a.isSensor() || b.isSensor()) this.m_flags |= Ga.e_sensorFlag;
        var c = a.getBody(),
          d = b.getBody();
        if (
          c.getType() != ea.b2_dynamicBody ||
          c.isBullet() ||
          d.getType() != ea.b2_dynamicBody ||
          d.isBullet()
        )
          this.m_flags |= Ga.e_continuousFlag;
        this.m_fixtureA = a;
        this.m_fixtureB = b;
        this.m_manifold.m_pointCount = 0;
        this.m_next = this.m_prev = null;
        this.m_nodeA.contact = null;
        this.m_nodeA.prev = null;
        this.m_nodeA.next = null;
        this.m_nodeA.other = null;
        this.m_nodeB.contact = null;
        this.m_nodeB.prev = null;
        this.m_nodeB.next = null;
        this.m_nodeB.other = null;
      }
    },
    update: function (a) {
      var b = this.m_oldManifold;
      this.m_oldManifold = this.m_manifold;
      this.m_manifold = b;
      this.m_flags |= Ga.e_enabledFlag;
      var c = !1;
      b = (this.m_flags & Ga.e_touchingFlag) == Ga.e_touchingFlag;
      var d = this.m_fixtureA.m_body,
        e = this.m_fixtureB.m_body,
        f = this.m_fixtureA.m_aabb.testOverlap(this.m_fixtureB.m_aabb);
      if (0 != (this.m_flags & Ga.e_sensorFlag))
        f &&
          ((c = this.m_fixtureA.getShape()),
          (f = this.m_fixtureB.getShape()),
          (d = d.getTransform()),
          (e = e.getTransform()),
          (c = Jb.testOverlap(c, d, f, e))),
          (this.m_manifold.m_pointCount = 0);
      else {
        d.getType() != ea.b2_dynamicBody ||
        d.isBullet() ||
        e.getType() != ea.b2_dynamicBody ||
        e.isBullet()
          ? (this.m_flags |= Ga.e_continuousFlag)
          : (this.m_flags &= ~Ga.e_continuousFlag);
        if (f) {
          this.evaluate();
          c = 0 < this.m_manifold.m_pointCount;
          f = 0;
          for (var g = this.m_manifold.m_pointCount; f < g; ) {
            var h = f++;
            h = this.m_manifold.m_points[h];
            h.m_normalImpulse = 0;
            h.m_tangentImpulse = 0;
            for (
              var n = h.m_id, k = 0, G = this.m_oldManifold.m_pointCount;
              k < G;

            ) {
              var l = k++;
              l = this.m_oldManifold.m_points[l];
              if (l.m_id.get_key() == n.get_key()) {
                h.m_normalImpulse = l.m_normalImpulse;
                h.m_tangentImpulse = l.m_tangentImpulse;
                break;
              }
            }
          }
        } else this.m_manifold.m_pointCount = 0;
        c != b && (d.setAwake(!0), e.setAwake(!0));
      }
      this.m_flags = c
        ? this.m_flags | Ga.e_touchingFlag
        : this.m_flags & ~Ga.e_touchingFlag;
      0 == b && 1 == c && a.beginContact(this);
      1 == b && 0 == c && a.endContact(this);
      0 == (this.m_flags & Ga.e_sensorFlag) &&
        a.preSolve(this, this.m_oldManifold);
    },
    evaluate: function () {},
    computeTOI: function (a, b) {
      Ga.s_input.proxyA.set(this.m_fixtureA.getShape());
      Ga.s_input.proxyB.set(this.m_fixtureB.getShape());
      Ga.s_input.sweepA = a;
      Ga.s_input.sweepB = b;
      Ga.s_input.tolerance = R.b2_linearSlop;
      return Bb.timeOfImpact(Ga.s_input);
    },
    m_flags: null,
    m_prev: null,
    m_next: null,
    m_nodeA: null,
    m_nodeB: null,
    m_fixtureA: null,
    m_fixtureB: null,
    m_manifold: null,
    m_oldManifold: null,
    m_toi: null,
    key: null,
    __class__: Ga,
  };
  var Fh = function () {
    Ga.call(this);
  };
  p["box2D.dynamics.contacts.B2CircleContact"] = Fh;
  Fh.__name__ = ["box2D", "dynamics", "contacts", "B2CircleContact"];
  Fh.create = function (a) {
    return new Fh();
  };
  Fh.destroy = function (a, b) {};
  Fh.__super__ = Ga;
  Fh.prototype = x(Ga.prototype, {
    reset: function (a, b) {
      Ga.prototype.reset.call(this, a, b);
    },
    evaluate: function () {
      var a = this.m_fixtureA.getBody(),
        b = this.m_fixtureB.getBody();
      ib.collideCircles(
        this.m_manifold,
        u.__cast(this.m_fixtureA.getShape(), Jc),
        a.m_xf,
        u.__cast(this.m_fixtureB.getShape(), Jc),
        b.m_xf
      );
    },
    __class__: Fh,
  });
  var So = function () {
    this.localPlaneNormal = new D();
    this.localPoint = new D();
    this.normal = new D();
    this.normalMass = new uc();
    this.K = new uc();
    this.points = [];
    for (var a = 0, b = R.b2_maxManifoldPoints; a < b; ) {
      var c = a++;
      this.points[c] = new Ro();
    }
  };
  p["box2D.dynamics.contacts.B2ContactConstraint"] = So;
  So.__name__ = ["box2D", "dynamics", "contacts", "B2ContactConstraint"];
  So.prototype = {
    points: null,
    localPlaneNormal: null,
    localPoint: null,
    normal: null,
    normalMass: null,
    K: null,
    bodyA: null,
    bodyB: null,
    type: null,
    radius: null,
    friction: null,
    restitution: null,
    pointCount: null,
    manifold: null,
    __class__: So,
  };
  var Ro = function () {
    this.localPoint = new D();
    this.rA = new D();
    this.rB = new D();
  };
  p["box2D.dynamics.contacts.B2ContactConstraintPoint"] = Ro;
  Ro.__name__ = ["box2D", "dynamics", "contacts", "B2ContactConstraintPoint"];
  Ro.prototype = {
    localPoint: null,
    rA: null,
    rB: null,
    normalImpulse: null,
    tangentImpulse: null,
    normalMass: null,
    tangentMass: null,
    equalizedMass: null,
    velocityBias: null,
    __class__: Ro,
  };
  var Dl = function () {};
  p["box2D.dynamics.contacts.B2ContactEdge"] = Dl;
  Dl.__name__ = ["box2D", "dynamics", "contacts", "B2ContactEdge"];
  Dl.prototype = {
    other: null,
    contact: null,
    prev: null,
    next: null,
    __class__: Dl,
  };
  var Qo = function (a) {
    this.m_allocator = a;
    this.initializeRegisters();
  };
  p["box2D.dynamics.contacts.B2ContactFactory"] = Qo;
  Qo.__name__ = ["box2D", "dynamics", "contacts", "B2ContactFactory"];
  Qo.prototype = {
    addType: function (a, b, c, d) {
      this.m_registers[c][d].createFcn = a;
      this.m_registers[c][d].destroyFcn = b;
      this.m_registers[c][d].primary = c;
    },
    initializeRegisters: function () {
      this.m_registers = [];
      for (var a = 0; 3 > a; ) {
        var b = a++;
        this.m_registers[b] = [];
        for (var c = 0; 3 > c; ) {
          var d = c++;
          this.m_registers[b][d] = null;
        }
      }
      for (a = 0; 3 > a; )
        for (b = a++, c = 0; 3 > c; )
          (d = c++),
            null == this.m_registers[b][d] &&
              ((this.m_registers[b][d] = new To()),
              b != d && (this.m_registers[d][b] = this.m_registers[b][d]));
      this.addType(Fh.create, Fh.destroy, 0, 0);
      this.addType(Gh.create, Gh.destroy, 1, 0);
      this.addType(Hh.create, Hh.destroy, 1, 1);
      this.addType(Ea.create, Ea.destroy, 2, 0);
      this.addType(y.create, y.destroy, 1, 2);
    },
    create: function (a, b) {
      var c = a.getType(),
        d = b.getType();
      d = this.m_registers[c][d];
      if (null != d.pool) {
        var e = d.pool;
        d.pool = e.m_next;
        d.poolCount--;
        d.primary == c ? e.reset(a, b) : e.reset(b, a);
        return e;
      }
      e = d.createFcn;
      return null != e
        ? (d.primary == c
            ? ((e = e(this.m_allocator)), e.reset(a, b))
            : ((e = e(this.m_allocator)), e.reset(b, a)),
          e)
        : null;
    },
    destroy: function (a) {
      0 < a.m_manifold.m_pointCount &&
        (a.m_fixtureA.m_body.setAwake(!0), a.m_fixtureB.m_body.setAwake(!0));
      var b = a.m_fixtureA.getType(),
        c = a.m_fixtureB.getType();
      b = this.m_registers[b][c];
      b.poolCount++;
      a.m_next = b.pool;
      b.pool = a;
      b = b.destroyFcn;
      b(a, this.m_allocator);
    },
    m_registers: null,
    m_allocator: null,
    __class__: Qo,
  };
  var To = function () {};
  p["box2D.dynamics.contacts.B2ContactRegister"] = To;
  To.__name__ = ["box2D", "dynamics", "contacts", "B2ContactRegister"];
  To.prototype = {
    createFcn: null,
    destroyFcn: null,
    primary: null,
    pool: null,
    poolCount: null,
    __class__: To,
  };
  var dk = function () {
    this.m_normal = new D();
    this.m_separations = [];
    this.m_points = [];
    for (var a = 0, b = R.b2_maxManifoldPoints; a < b; ) {
      var c = a++;
      this.m_points[c] = new D();
    }
  };
  p["box2D.dynamics.contacts.B2PositionSolverManifold"] = dk;
  dk.__name__ = ["box2D", "dynamics", "contacts", "B2PositionSolverManifold"];
  dk.prototype = {
    initialize: function (a) {
      R.b2Assert(0 < a.pointCount);
      switch (a.type) {
        case 1:
          var b = a.bodyA.m_xf.R;
          var c = a.localPoint;
          var d = a.bodyA.m_xf.position.x + (b.col1.x * c.x + b.col2.x * c.y);
          var e = a.bodyA.m_xf.position.y + (b.col1.y * c.x + b.col2.y * c.y);
          b = a.bodyB.m_xf.R;
          c = a.points[0].localPoint;
          var f = a.bodyB.m_xf.position.x + (b.col1.x * c.x + b.col2.x * c.y);
          b = a.bodyB.m_xf.position.y + (b.col1.y * c.x + b.col2.y * c.y);
          c = f - d;
          var g = b - e,
            h = c * c + g * g;
          h > Number.MIN_VALUE * Number.MIN_VALUE
            ? ((h = Math.sqrt(h)),
              (this.m_normal.x = c / h),
              (this.m_normal.y = g / h))
            : ((this.m_normal.x = 1), (this.m_normal.y = 0));
          this.m_points[0].x = 0.5 * (d + f);
          this.m_points[0].y = 0.5 * (e + b);
          this.m_separations[0] =
            c * this.m_normal.x + g * this.m_normal.y - a.radius;
          break;
        case 2:
          b = a.bodyA.m_xf.R;
          c = a.localPlaneNormal;
          this.m_normal.x = b.col1.x * c.x + b.col2.x * c.y;
          this.m_normal.y = b.col1.y * c.x + b.col2.y * c.y;
          b = a.bodyA.m_xf.R;
          c = a.localPoint;
          e = a.bodyA.m_xf.position.x + (b.col1.x * c.x + b.col2.x * c.y);
          f = a.bodyA.m_xf.position.y + (b.col1.y * c.x + b.col2.y * c.y);
          b = a.bodyB.m_xf.R;
          g = 0;
          for (h = a.pointCount; g < h; ) {
            var n = g++;
            c = a.points[n].localPoint;
            d = a.bodyB.m_xf.position.x + (b.col1.x * c.x + b.col2.x * c.y);
            c = a.bodyB.m_xf.position.y + (b.col1.y * c.x + b.col2.y * c.y);
            this.m_separations[n] =
              (d - e) * this.m_normal.x + (c - f) * this.m_normal.y - a.radius;
            this.m_points[n].x = d;
            this.m_points[n].y = c;
          }
          break;
        case 4:
          b = a.bodyB.m_xf.R;
          c = a.localPlaneNormal;
          this.m_normal.x = b.col1.x * c.x + b.col2.x * c.y;
          this.m_normal.y = b.col1.y * c.x + b.col2.y * c.y;
          b = a.bodyB.m_xf.R;
          c = a.localPoint;
          e = a.bodyB.m_xf.position.x + (b.col1.x * c.x + b.col2.x * c.y);
          f = a.bodyB.m_xf.position.y + (b.col1.y * c.x + b.col2.y * c.y);
          b = a.bodyA.m_xf.R;
          g = 0;
          for (h = a.pointCount; g < h; )
            (n = g++),
              (c = a.points[n].localPoint),
              (d = a.bodyA.m_xf.position.x + (b.col1.x * c.x + b.col2.x * c.y)),
              (c = a.bodyA.m_xf.position.y + (b.col1.y * c.x + b.col2.y * c.y)),
              (this.m_separations[n] =
                (d - e) * this.m_normal.x +
                (c - f) * this.m_normal.y -
                a.radius),
              (n = this.m_points[n]),
              (n.x = d),
              (n.y = c);
          this.m_normal.x *= -1;
          this.m_normal.y *= -1;
      }
    },
    m_normal: null,
    m_points: null,
    m_separations: null,
    __class__: dk,
  };
  var Qe = function () {
    this.m_step = new ck();
    this.m_constraints = [];
  };
  p["box2D.dynamics.contacts.B2ContactSolver"] = Qe;
  Qe.__name__ = ["box2D", "dynamics", "contacts", "B2ContactSolver"];
  Qe.prototype = {
    initialize: function (a, b, c, d) {
      this.m_step.set(a);
      this.m_allocator = d;
      for (
        this.m_constraintCount = c;
        this.m_constraints.length < this.m_constraintCount;

      )
        this.m_constraints[this.m_constraints.length] = new So();
      for (a = 0; a < c; ) {
        d = a++;
        var e = b[d];
        var f = e.m_fixtureA,
          g = e.m_fixtureB,
          h = f.m_shape.m_radius,
          n = g.m_shape.m_radius,
          k = f.m_body,
          G = g.m_body;
        e = e.getManifold();
        var l = R.b2MixFriction(f.getFriction(), g.getFriction()),
          m = R.b2MixRestitution(f.getRestitution(), g.getRestitution()),
          r = k.m_linearVelocity.x,
          p = k.m_linearVelocity.y,
          q = G.m_linearVelocity.x,
          t = G.m_linearVelocity.y,
          na = k.m_angularVelocity,
          u = G.m_angularVelocity;
        R.b2Assert(0 < e.m_pointCount);
        Qe.s_worldManifold.initialize(e, k.m_xf, h, G.m_xf, n);
        f = Qe.s_worldManifold.m_normal.x;
        g = Qe.s_worldManifold.m_normal.y;
        d = this.m_constraints[d];
        d.bodyA = k;
        d.bodyB = G;
        d.manifold = e;
        d.normal.x = f;
        d.normal.y = g;
        d.pointCount = e.m_pointCount;
        d.friction = l;
        d.restitution = m;
        d.localPlaneNormal.x = e.m_localPlaneNormal.x;
        d.localPlaneNormal.y = e.m_localPlaneNormal.y;
        d.localPoint.x = e.m_localPoint.x;
        d.localPoint.y = e.m_localPoint.y;
        d.radius = h + n;
        d.type = e.m_type;
        h = 0;
        for (n = d.pointCount; h < n; ) {
          var x = h++,
            v = e.m_points[x];
          l = d.points[x];
          l.normalImpulse = v.m_normalImpulse;
          l.tangentImpulse = v.m_tangentImpulse;
          m = l.localPoint;
          v = v.m_localPoint;
          m.x = v.x;
          m.y = v.y;
          m = l.rA.x = Qe.s_worldManifold.m_points[x].x - k.m_sweep.c.x;
          v = l.rA.y = Qe.s_worldManifold.m_points[x].y - k.m_sweep.c.y;
          var B = (l.rB.x = Qe.s_worldManifold.m_points[x].x - G.m_sweep.c.x);
          x = l.rB.y = Qe.s_worldManifold.m_points[x].y - G.m_sweep.c.y;
          var w = m * g - v * f,
            A = B * g - x * f;
          w *= w;
          A *= A;
          l.normalMass =
            1 / (k.m_invMass + G.m_invMass + k.m_invI * w + G.m_invI * A);
          var y = k.m_mass * k.m_invMass + G.m_mass * G.m_invMass;
          y += k.m_mass * k.m_invI * w + G.m_mass * G.m_invI * A;
          l.equalizedMass = 1 / y;
          A = g;
          y = -f;
          w = m * y - v * A;
          A = B * y - x * A;
          w *= w;
          A *= A;
          l.tangentMass =
            1 / (k.m_invMass + G.m_invMass + k.m_invI * w + G.m_invI * A);
          l.velocityBias = 0;
          m =
            d.normal.x * (q + -u * x - r - -na * v) +
            d.normal.y * (t + u * B - p - na * m);
          m < -R.b2_velocityThreshold && (l.velocityBias += -d.restitution * m);
        }
        2 == d.pointCount &&
          ((t = d.points[0]),
          (q = d.points[1]),
          (e = k.m_invMass),
          (k = k.m_invI),
          (r = G.m_invMass),
          (G = G.m_invI),
          (p = t.rA.x * g - t.rA.y * f),
          (t = t.rB.x * g - t.rB.y * f),
          (na = q.rA.x * g - q.rA.y * f),
          (q = q.rB.x * g - q.rB.y * f),
          (g = e + r + k * p * p + G * t * t),
          (f = e + r + k * na * na + G * q * q),
          (G = e + r + k * p * na + G * t * q),
          g * g < 100 * (g * f - G * G)
            ? ((k = d.K.col1),
              (k.x = g),
              (k.y = G),
              (g = d.K.col2),
              (g.x = G),
              (g.y = f),
              d.K.getInverse(d.normalMass))
            : (d.pointCount = 1));
      }
    },
    initVelocityConstraints: function (a) {
      for (var b = 0, c = this.m_constraintCount; b < c; ) {
        var d = b++;
        d = this.m_constraints[d];
        var e = d.bodyA,
          f = d.bodyB,
          g = e.m_invMass,
          h = e.m_invI,
          n = f.m_invMass,
          k = f.m_invI,
          G = d.normal.x,
          l = d.normal.y,
          m = l,
          r = -G;
        if (a.warmStarting) {
          var p = d.pointCount;
          for (var q = 0; q < p; ) {
            var t = q++;
            t = d.points[t];
            t.normalImpulse *= a.dtRatio;
            t.tangentImpulse *= a.dtRatio;
            var na = t.normalImpulse * G + t.tangentImpulse * m,
              u = t.normalImpulse * l + t.tangentImpulse * r;
            e.m_angularVelocity -= h * (t.rA.x * u - t.rA.y * na);
            e.m_linearVelocity.x -= g * na;
            e.m_linearVelocity.y -= g * u;
            f.m_angularVelocity += k * (t.rB.x * u - t.rB.y * na);
            f.m_linearVelocity.x += n * na;
            f.m_linearVelocity.y += n * u;
          }
        } else
          for (p = d.pointCount, e = 0, f = p; e < f; )
            (g = e++),
              (g = d.points[g]),
              (g.normalImpulse = 0),
              (g.tangentImpulse = 0);
      }
    },
    solveVelocityConstraints: function () {
      for (
        var a, b, c, d, e, f, g, h, n, k, G = 0, l = this.m_constraintCount;
        G < l;

      ) {
        var m = G++;
        d = this.m_constraints[m];
        m = d.bodyA;
        var r = d.bodyB,
          p = m.m_angularVelocity,
          q = r.m_angularVelocity,
          t = m.m_linearVelocity,
          na = r.m_linearVelocity,
          u = m.m_invMass,
          x = m.m_invI,
          v = r.m_invMass,
          B = r.m_invI;
        h = d.normal.x;
        var w = (n = d.normal.y),
          A = -h;
        k = d.friction;
        g = 0;
        for (f = d.pointCount; g < f; )
          (a = g++),
            (a = d.points[a]),
            (b = na.x - q * a.rB.y - t.x + p * a.rA.y),
            (c = na.y + q * a.rB.x - t.y - p * a.rA.x),
            (b = b * w + c * A),
            (b = a.tangentMass * -b),
            (c = k * a.normalImpulse),
            (c = E.clamp(a.tangentImpulse + b, -c, c)),
            (b = c - a.tangentImpulse),
            (e = b * w),
            (b *= A),
            (t.x -= u * e),
            (t.y -= u * b),
            (p -= x * (a.rA.x * b - a.rA.y * e)),
            (na.x += v * e),
            (na.y += v * b),
            (q += B * (a.rB.x * b - a.rB.y * e)),
            (a.tangentImpulse = c);
        if (1 == d.pointCount)
          (a = d.points[0]),
            (b = na.x + -q * a.rB.y - t.x - -p * a.rA.y),
            (c = na.y + q * a.rB.x - t.y - p * a.rA.x),
            (d = b * h + c * n),
            (b = -a.normalMass * (d - a.velocityBias)),
            (c = a.normalImpulse + b),
            0 < c || (c = 0),
            (b = c - a.normalImpulse),
            (e = b * h),
            (b *= n),
            (t.x -= u * e),
            (t.y -= u * b),
            (p -= x * (a.rA.x * b - a.rA.y * e)),
            (na.x += v * e),
            (na.y += v * b),
            (q += B * (a.rB.x * b - a.rB.y * e)),
            (a.normalImpulse = c);
        else {
          a = d.points[0];
          w = d.points[1];
          f = a.normalImpulse;
          g = w.normalImpulse;
          e =
            (na.x - q * a.rB.y - t.x + p * a.rA.y) * h +
            (na.y + q * a.rB.x - t.y - p * a.rA.x) * n;
          var y =
            (na.x - q * w.rB.y - t.x + p * w.rA.y) * h +
            (na.y + q * w.rB.x - t.y - p * w.rA.x) * n;
          b = e - a.velocityBias;
          c = y - w.velocityBias;
          k = d.K;
          b -= k.col1.x * f + k.col2.x * g;
          for (c -= k.col1.y * f + k.col2.y * g; ; ) {
            k = d.normalMass;
            A = -(k.col1.x * b + k.col2.x * c);
            k = -(k.col1.y * b + k.col2.y * c);
            if (0 <= A && 0 <= k) {
              f = A - f;
              g = k - g;
              d = f * h;
              f *= n;
              h *= g;
              n *= g;
              t.x -= u * (d + h);
              t.y -= u * (f + n);
              p -= x * (a.rA.x * f - a.rA.y * d + w.rA.x * n - w.rA.y * h);
              na.x += v * (d + h);
              na.y += v * (f + n);
              q += B * (a.rB.x * f - a.rB.y * d + w.rB.x * n - w.rB.y * h);
              a.normalImpulse = A;
              w.normalImpulse = k;
              break;
            }
            A = -a.normalMass * b;
            k = 0;
            y = d.K.col1.y * A + c;
            if (0 <= A && 0 <= y) {
              f = A - f;
              g = k - g;
              d = f * h;
              f *= n;
              h *= g;
              n *= g;
              t.x -= u * (d + h);
              t.y -= u * (f + n);
              p -= x * (a.rA.x * f - a.rA.y * d + w.rA.x * n - w.rA.y * h);
              na.x += v * (d + h);
              na.y += v * (f + n);
              q += B * (a.rB.x * f - a.rB.y * d + w.rB.x * n - w.rB.y * h);
              a.normalImpulse = A;
              w.normalImpulse = k;
              break;
            }
            A = 0;
            k = -w.normalMass * c;
            e = d.K.col2.x * k + b;
            if (0 <= k && 0 <= e) {
              f = A - f;
              g = k - g;
              d = f * h;
              f *= n;
              h *= g;
              n *= g;
              t.x -= u * (d + h);
              t.y -= u * (f + n);
              p -= x * (a.rA.x * f - a.rA.y * d + w.rA.x * n - w.rA.y * h);
              na.x += v * (d + h);
              na.y += v * (f + n);
              q += B * (a.rB.x * f - a.rB.y * d + w.rB.x * n - w.rB.y * h);
              a.normalImpulse = A;
              w.normalImpulse = k;
              break;
            }
            k = A = 0;
            e = b;
            y = c;
            if (0 <= e && 0 <= y) {
              f = A - f;
              g = k - g;
              d = f * h;
              f *= n;
              h *= g;
              n *= g;
              t.x -= u * (d + h);
              t.y -= u * (f + n);
              p -= x * (a.rA.x * f - a.rA.y * d + w.rA.x * n - w.rA.y * h);
              na.x += v * (d + h);
              na.y += v * (f + n);
              q += B * (a.rB.x * f - a.rB.y * d + w.rB.x * n - w.rB.y * h);
              a.normalImpulse = A;
              w.normalImpulse = k;
              break;
            }
            break;
          }
        }
        m.m_angularVelocity = p;
        r.m_angularVelocity = q;
      }
    },
    finalizeVelocityConstraints: function () {
      for (var a = 0, b = this.m_constraintCount; a < b; ) {
        var c = a++;
        c = this.m_constraints[c];
        for (var d = c.manifold, e = 0, f = c.pointCount; e < f; ) {
          var g = e++,
            h = d.m_points[g];
          g = c.points[g];
          h.m_normalImpulse = g.normalImpulse;
          h.m_tangentImpulse = g.tangentImpulse;
        }
      }
    },
    solvePositionConstraints: function (a) {
      for (var b = 0, c = 0, d = this.m_constraintCount; c < d; ) {
        var e = c++;
        e = this.m_constraints[e];
        var f = e.bodyA,
          g = e.bodyB,
          h = f.m_mass * f.m_invMass,
          n = f.m_mass * f.m_invI,
          k = g.m_mass * g.m_invMass,
          G = g.m_mass * g.m_invI;
        Qe.s_psm.initialize(e);
        for (var l = Qe.s_psm.m_normal, m = 0, r = e.pointCount; m < r; ) {
          var p = m++,
            q = e.points[p],
            t = Qe.s_psm.m_points[p],
            u = Qe.s_psm.m_separations[p];
          p = t.x - f.m_sweep.c.x;
          var x = t.y - f.m_sweep.c.y,
            v = t.x - g.m_sweep.c.x;
          t = t.y - g.m_sweep.c.y;
          b < u || (b = u);
          u = E.clamp(a * (u + R.b2_linearSlop), -R.b2_maxLinearCorrection, 0);
          u *= -q.equalizedMass;
          q = u * l.x;
          u *= l.y;
          f.m_sweep.c.x -= h * q;
          f.m_sweep.c.y -= h * u;
          f.m_sweep.a -= n * (p * u - x * q);
          f.synchronizeTransform();
          g.m_sweep.c.x += k * q;
          g.m_sweep.c.y += k * u;
          g.m_sweep.a += G * (v * u - t * q);
          g.synchronizeTransform();
        }
      }
      return b > -1.5 * R.b2_linearSlop;
    },
    m_step: null,
    m_allocator: null,
    m_constraints: null,
    m_constraintCount: null,
    __class__: Qe,
  };
  var Ea = function () {
    Ga.call(this);
  };
  p["box2D.dynamics.contacts.B2EdgeAndCircleContact"] = Ea;
  Ea.__name__ = ["box2D", "dynamics", "contacts", "B2EdgeAndCircleContact"];
  Ea.create = function (a) {
    return new Ea();
  };
  Ea.destroy = function (a, b) {};
  Ea.__super__ = Ga;
  Ea.prototype = x(Ga.prototype, {
    m_v0: null,
    m_v1: null,
    m_v2: null,
    m_v3: null,
    reset: function (a, b) {
      Ga.prototype.reset.call(this, a, b);
    },
    evaluate: function () {
      var a = this.m_fixtureA.getBody(),
        b = this.m_fixtureB.getBody();
      this.b2CollideEdgeAndCircle(
        this.m_manifold,
        u.__cast(this.m_fixtureA.getShape(), Ig),
        a.m_xf,
        u.__cast(this.m_fixtureB.getShape(), Jc),
        b.m_xf
      );
    },
    b2CollideEdgeAndCircle: function (a, b, c, d, e) {
      a.m_pointCount = 0;
      this.multiplyTransformVector(e, d.m_p, Ea.temp1);
      e = Ea.q;
      c = E.mulXT(c, Ea.temp1);
      e.x = c.x;
      e.y = c.y;
      this.m_v0 = b.m_v0;
      this.m_v1 = b.m_v1;
      this.m_v2 = b.m_v2;
      this.m_v3 = b.m_v3;
      c = Ea.e;
      c.x = this.m_v2.x - this.m_v1.x;
      c.y = this.m_v2.y - this.m_v1.y;
      c = Ea.temp1;
      c.x = this.m_v2.x - Ea.q.x;
      c.y = this.m_v2.y - Ea.q.y;
      e = E.dot(Ea.e, Ea.temp1);
      c = Ea.temp1;
      c.x = Ea.q.x - this.m_v1.x;
      c.y = Ea.q.y - this.m_v1.y;
      var f = E.dot(Ea.e, Ea.temp1);
      c = b.m_radius + d.m_radius;
      if (0 >= f) {
        if (
          ((e = Ea.p),
          (f = this.m_v1),
          (e.x = f.x),
          (e.y = f.y),
          (e = Ea.temp1),
          (e.x = Ea.q.x - Ea.p.x),
          (e.y = Ea.q.y - Ea.p.y),
          !(E.dot(Ea.temp1, Ea.temp1) > c * c))
        ) {
          if (
            b.m_hasVertex0 &&
            ((b = Ea.temp1),
            (b.x = this.m_v1.x - this.m_v0.x),
            (b.y = this.m_v1.y - this.m_v0.y),
            (b = Ea.temp2),
            (b.x = this.m_v1.x - Ea.q.x),
            (b.y = this.m_v1.y - Ea.q.y),
            0 < E.dot(Ea.temp1, Ea.temp2))
          )
            return;
          a.m_pointCount = 1;
          a.m_type = 1;
          b = a.m_localPlaneNormal;
          b.x = 0;
          b.y = 0;
          b = a.m_localPoint;
          c = Ea.p;
          b.x = c.x;
          b.y = c.y;
          a.m_points[0].m_id.set_key(0);
          a.m_points[0].m_id.indexA = 0;
          a.m_points[0].m_id.indexB = 0;
          a.m_points[0].m_id.typeA = Id.VERTEX;
          a.m_points[0].m_id.typeB = Id.VERTEX;
          a = a.m_points[0].m_localPoint;
          d = d.m_p;
          a.x = d.x;
          a.y = d.y;
        }
      } else if (0 >= e) {
        if (
          ((e = Ea.p),
          (f = this.m_v2),
          (e.x = f.x),
          (e.y = f.y),
          (e = Ea.temp1),
          (e.x = Ea.q.x - Ea.p.x),
          (e.y = Ea.q.y - Ea.p.y),
          !(E.dot(Ea.temp1, Ea.temp1) > c * c))
        ) {
          if (
            b.m_hasVertex3 &&
            ((b = Ea.temp1),
            (b.x = this.m_v3.x - this.m_v2.x),
            (b.y = this.m_v3.y - this.m_v2.y),
            (b = Ea.temp2),
            (b.x = Ea.q.x - this.m_v2.x),
            (b.y = Ea.q.y - this.m_v2.y),
            0 < E.dot(Ea.temp1, Ea.temp2))
          )
            return;
          a.m_pointCount = 1;
          a.m_type = 1;
          b = a.m_localPlaneNormal;
          b.x = 0;
          b.y = 0;
          b = a.m_localPoint;
          c = Ea.p;
          b.x = c.x;
          b.y = c.y;
          a.m_points[0].m_id.set_key(0);
          a.m_points[0].m_id.indexA = 1;
          a.m_points[0].m_id.indexB = 0;
          a.m_points[0].m_id.typeA = Id.VERTEX;
          a.m_points[0].m_id.typeB = Id.VERTEX;
          a = a.m_points[0].m_localPoint;
          d = d.m_p;
          a.x = d.x;
          a.y = d.y;
        }
      } else
        (b = E.dot(Ea.e, Ea.e)),
          R.b2Assert(0 < b),
          (Ea.p.x = (1 / b) * (this.m_v1.x * e + this.m_v2.x * f)),
          (Ea.p.y = (1 / b) * (this.m_v1.y * e + this.m_v2.y * f)),
          (Ea.temp1.x = Ea.q.x - Ea.p.x),
          (Ea.temp1.y = Ea.q.y - Ea.p.y),
          E.dot(Ea.temp1, Ea.temp1) > c * c ||
            ((b = Ea.temp1),
            (c = Ea.e.x),
            (b.x = -Ea.e.y),
            (b.y = c),
            (b = Ea.temp2),
            (b.x = Ea.q.x - this.m_v1.x),
            (b.y = Ea.q.y - this.m_v1.y),
            0 > E.dot(Ea.temp1, Ea.temp2) &&
              ((b = Ea.temp1), (b.x = -b.x), (b.y = -b.y)),
            Ea.temp1.normalize(),
            (a.m_pointCount = 1),
            (a.m_type = 2),
            (b = a.m_localPlaneNormal),
            (c = Ea.temp1),
            (b.x = c.x),
            (b.y = c.y),
            (b = a.m_localPoint),
            (c = this.m_v1),
            (b.x = c.x),
            (b.y = c.y),
            a.m_points[0].m_id.set_key(0),
            (a.m_points[0].m_id.indexA = 0),
            (a.m_points[0].m_id.indexB = 0),
            (a.m_points[0].m_id.typeA = Id.FACE),
            (a.m_points[0].m_id.typeB = Id.VERTEX),
            (a = a.m_points[0].m_localPoint),
            (d = d.m_p),
            (a.x = d.x),
            (a.y = d.y));
    },
    multiplyTransformsInverse: function (a, b, c) {
      this.multiplyRotationsInverse(a.R, b.R, Ea.mat);
      var d = Ea.temp2;
      b = b.position;
      d.x = b.x;
      d.y = b.y;
      Ea.temp2.subtract(a.position);
      this.multiplyRotationVectorInverse(a.R, Ea.temp2, c.position);
      a = c.R.col1;
      d = Ea.mat.col1;
      a.x = d.x;
      a.y = d.y;
      c = c.R.col2;
      a = Ea.mat.col2;
      c.x = a.x;
      c.y = a.y;
    },
    multiplyRotationsInverse: function (a, b, c) {
      c.col1.x = a.col1.x * b.col1.x + a.col1.y * b.col1.y;
      c.col1.y = a.col2.x * b.col1.x + a.col2.y * b.col1.y;
      c.col2.x = a.col1.x * b.col2.x + a.col1.y * b.col2.y;
      c.col2.y = a.col2.x * b.col2.x + a.col2.y * b.col2.y;
    },
    multiplyRotationVector: function (a, b, c) {
      c.x = a.col1.x * b.x + a.col2.x * b.y;
      c.y = a.col1.y * b.x + a.col2.y * b.y;
    },
    multiplyRotationVectorInverse: function (a, b, c) {
      c.x = a.col1.x * b.x + a.col1.y * b.y;
      c.y = a.col2.x * b.x + a.col2.y * b.y;
    },
    multiplyTransformVector: function (a, b, c) {
      c.x = a.R.col1.x * b.x + a.R.col2.x * b.y + a.position.x;
      c.y = a.R.col1.y * b.x + a.R.col2.y * b.y + a.position.y;
    },
    __class__: Ea,
  });
  var Gh = function () {
    Ga.call(this);
  };
  p["box2D.dynamics.contacts.B2PolyAndCircleContact"] = Gh;
  Gh.__name__ = ["box2D", "dynamics", "contacts", "B2PolyAndCircleContact"];
  Gh.create = function (a) {
    return new Gh();
  };
  Gh.destroy = function (a, b) {};
  Gh.__super__ = Ga;
  Gh.prototype = x(Ga.prototype, {
    reset: function (a, b) {
      Ga.prototype.reset.call(this, a, b);
      R.b2Assert(1 == a.getType());
      R.b2Assert(0 == b.getType());
    },
    evaluate: function () {
      var a = this.m_fixtureA.m_body,
        b = this.m_fixtureB.m_body;
      ib.collidePolygonAndCircle(
        this.m_manifold,
        u.__cast(this.m_fixtureA.getShape(), Db),
        a.m_xf,
        u.__cast(this.m_fixtureB.getShape(), Jc),
        b.m_xf
      );
    },
    __class__: Gh,
  });
  var Ih = function () {
    this.v = new D();
    this.id = new Id();
  };
  p["box2D.dynamics.contacts.ClipVertex"] = Ih;
  Ih.__name__ = ["box2D", "dynamics", "contacts", "ClipVertex"];
  Ih.prototype = {
    v: null,
    id: null,
    set: function (a) {
      var b = this.v,
        c = a.v;
      b.x = c.x;
      b.y = c.y;
      this.id.set(a.id);
    },
    __class__: Ih,
  };
  var El = function () {};
  p["box2D.dynamics.contacts.EPAxis"] = El;
  El.__name__ = ["box2D", "dynamics", "contacts", "EPAxis"];
  El.prototype = { type: null, index: null, separation: null, __class__: El };
  var Vo = function () {
    this.vertices = [];
    this.normals = [];
    for (var a = 0; 32 > a; )
      a++, this.vertices.push(new D()), this.normals.push(new D());
  };
  p["box2D.dynamics.contacts.TempPolygon"] = Vo;
  Vo.__name__ = ["box2D", "dynamics", "contacts", "TempPolygon"];
  Vo.prototype = { vertices: null, normals: null, count: null, __class__: Vo };
  var Wo = function () {
    this.v1 = new D();
    this.v2 = new D();
    this.normal = new D();
    this.sideNormal1 = new D();
    this.sideNormal2 = new D();
  };
  p["box2D.dynamics.contacts.ReferenceFace"] = Wo;
  Wo.__name__ = ["box2D", "dynamics", "contacts", "ReferenceFace"];
  Wo.prototype = {
    i1: null,
    i2: null,
    v1: null,
    v2: null,
    normal: null,
    sideNormal1: null,
    sideNormal2: null,
    sideOffset1: null,
    sideOffset2: null,
    __class__: Wo,
  };
  var y = function () {
    Ga.call(this);
  };
  p["box2D.dynamics.contacts.B2PolyAndEdgeContact"] = y;
  y.__name__ = ["box2D", "dynamics", "contacts", "B2PolyAndEdgeContact"];
  y.create = function (a) {
    return new y();
  };
  y.destroy = function (a, b) {};
  y.clipSegmentToLine = function (a, b, c, d, e) {
    var f = 0,
      g = E.dot(c, b[0].v) - d;
    c = E.dot(c, b[1].v) - d;
    0 >= g && a[f++].set(b[0]);
    0 >= c && a[f++].set(b[1]);
    0 > g * c &&
      ((g /= g - c),
      (c = a[f].v),
      (d = b[1].v),
      (c.x = d.x),
      (c.y = d.y),
      a[f].v.subtract(b[0].v),
      a[f].v.multiply(g),
      a[f].v.add(b[0].v),
      (a[f].id.indexA = e),
      (a[f].id.indexB = b[0].id.indexB),
      (a[f].id.typeA = Id.VERTEX),
      (a[f].id.typeB = Id.FACE),
      ++f);
    return f;
  };
  y.__super__ = Ga;
  y.prototype = x(Ga.prototype, {
    m_v0: null,
    m_v1: null,
    m_v2: null,
    m_v3: null,
    m_front: null,
    m_radius: null,
    reset: function (a, b) {
      u.__instanceof(a.getShape(), Db)
        ? (Ga.prototype.reset.call(this, b, a),
          R.b2Assert(1 == a.getType()),
          R.b2Assert(2 == b.getType()))
        : (Ga.prototype.reset.call(this, a, b),
          R.b2Assert(2 == a.getType()),
          R.b2Assert(1 == b.getType()));
    },
    evaluate: function () {
      var a = this.m_fixtureA.getBody(),
        b = this.m_fixtureB.getBody();
      this.b2CollidePolyAndEdge(
        this.m_manifold,
        u.__cast(this.m_fixtureA.getShape(), Ig),
        a.m_xf,
        u.__cast(this.m_fixtureB.getShape(), Db),
        b.m_xf
      );
    },
    b2CollidePolyAndEdge: function (a, b, c, d, e) {
      this.multiplyTransformsInverse(c, e, y.m_xf);
      this.multiplyTransformVector(y.m_xf, d.m_centroid, y.temp);
      var f = y.m_centroidB,
        g = y.temp;
      f.x = g.x;
      f.y = g.y;
      this.m_v0 = b.m_v0;
      this.m_v1 = b.m_v1;
      this.m_v2 = b.m_v2;
      this.m_v3 = b.m_v3;
      var h = b.m_hasVertex0,
        n = b.m_hasVertex3,
        k = y.edge1,
        G = this.m_v2;
      k.x = G.x;
      k.y = G.y;
      y.edge1.subtract(this.m_v1);
      y.edge1.normalize();
      var l = y.m_normal1,
        m = -y.edge1.x;
      l.x = y.edge1.y;
      l.y = m;
      var r = y.temp,
        p = y.m_centroidB;
      r.x = p.x;
      r.y = p.y;
      y.temp.subtract(this.m_v1);
      var q = E.dot(y.m_normal1, y.temp),
        t = 0,
        u = 0,
        x = !1,
        v = !1;
      if (h) {
        var w = y.edge0,
          B = this.m_v1;
        w.x = B.x;
        w.y = B.y;
        y.edge0.subtract(this.m_v0);
        y.edge0.normalize();
        var A = y.m_normal0,
          z = -y.edge0.x;
        A.x = y.edge0.y;
        A.y = z;
        x = 0 <= E.crossVV(y.edge0, y.edge1);
        var C = y.temp,
          D = y.m_centroidB;
        C.x = D.x;
        C.y = D.y;
        y.temp.subtract(this.m_v0);
        t = E.dot(y.m_normal0, y.temp);
      }
      if (n) {
        var F = y.edge2,
          H = this.m_v3;
        F.x = H.x;
        F.y = H.y;
        y.edge2.subtract(this.m_v2);
        y.edge2.normalize();
        var K = y.m_normal2,
          J = -y.edge2.x;
        K.x = y.edge2.y;
        K.y = J;
        v = 0 < E.crossVV(y.edge1, y.edge2);
        var I = y.temp,
          M = y.m_centroidB;
        I.x = M.x;
        I.y = M.y;
        y.temp.subtract(this.m_v2);
        u = E.dot(y.m_normal2, y.temp);
      }
      if (h && n)
        if (x && v)
          if ((this.m_front = 0 <= t || 0 <= q || 0 <= u)) {
            var N = y.m_normal,
              L = y.m_normal1;
            N.x = L.x;
            N.y = L.y;
            var O = y.m_lowerLimit,
              P = y.m_normal0;
            O.x = P.x;
            O.y = P.y;
            var Q = y.m_upperLimit,
              S = y.m_normal2;
            Q.x = S.x;
            Q.y = S.y;
          } else {
            var W = y.m_normal,
              T = y.m_normal1;
            W.x = T.x;
            W.y = T.y;
            var U = y.m_normal;
            U.x = -U.x;
            U.y = -U.y;
            var Y = y.m_lowerLimit,
              V = y.m_normal1;
            Y.x = V.x;
            Y.y = V.y;
            var ba = y.m_lowerLimit;
            ba.x = -ba.x;
            ba.y = -ba.y;
            var aa = y.m_upperLimit,
              ca = y.m_normal1;
            aa.x = ca.x;
            aa.y = ca.y;
            var ea = y.m_upperLimit;
            ea.x = -ea.x;
            ea.y = -ea.y;
          }
        else if (x)
          if ((this.m_front = 0 <= t || (0 <= q && 0 <= u))) {
            var da = y.m_normal,
              fa = y.m_normal1;
            da.x = fa.x;
            da.y = fa.y;
            var X = y.m_lowerLimit,
              ma = y.m_normal0;
            X.x = ma.x;
            X.y = ma.y;
            var ha = y.m_upperLimit,
              ka = y.m_normal1;
            ha.x = ka.x;
            ha.y = ka.y;
          } else {
            var la = y.m_normal,
              pa = y.m_normal1;
            la.x = pa.x;
            la.y = pa.y;
            var oa = y.m_normal;
            oa.x = -oa.x;
            oa.y = -oa.y;
            var ja = y.m_lowerLimit,
              ia = y.m_normal2;
            ja.x = ia.x;
            ja.y = ia.y;
            var ra = y.m_lowerLimit;
            ra.x = -ra.x;
            ra.y = -ra.y;
            var ua = y.m_upperLimit,
              sa = y.m_normal1;
            ua.x = sa.x;
            ua.y = sa.y;
            var ta = y.m_upperLimit;
            ta.x = -ta.x;
            ta.y = -ta.y;
          }
        else if (v)
          if ((this.m_front = 0 <= u || (0 <= t && 0 <= q))) {
            var ya = y.m_normal,
              va = y.m_normal1;
            ya.x = va.x;
            ya.y = va.y;
            var qa = y.m_lowerLimit,
              Aa = y.m_normal1;
            qa.x = Aa.x;
            qa.y = Aa.y;
            var Ca = y.m_upperLimit,
              xa = y.m_normal2;
            Ca.x = xa.x;
            Ca.y = xa.y;
          } else {
            var Da = y.m_normal,
              Ba = y.m_normal1;
            Da.x = Ba.x;
            Da.y = Ba.y;
            var Z = y.m_normal;
            Z.x = -Z.x;
            Z.y = -Z.y;
            var wa = y.m_lowerLimit,
              Ha = y.m_normal1;
            wa.x = Ha.x;
            wa.y = Ha.y;
            var Ea = y.m_lowerLimit;
            Ea.x = -Ea.x;
            Ea.y = -Ea.y;
            var Ia = y.m_upperLimit,
              za = y.m_normal0;
            Ia.x = za.x;
            Ia.y = za.y;
            var Fa = y.m_upperLimit;
            Fa.x = -Fa.x;
            Fa.y = -Fa.y;
          }
        else if ((this.m_front = 0 <= t && 0 <= q && 0 <= u)) {
          var Ja = y.m_normal,
            Oa = y.m_normal1;
          Ja.x = Oa.x;
          Ja.y = Oa.y;
          var Ka = y.m_lowerLimit,
            Ga = y.m_normal1;
          Ka.x = Ga.x;
          Ka.y = Ga.y;
          var Na = y.m_upperLimit,
            Ra = y.m_normal1;
          Na.x = Ra.x;
          Na.y = Ra.y;
        } else {
          var La = y.m_normal,
            Sa = y.m_normal1;
          La.x = Sa.x;
          La.y = Sa.y;
          var Pa = y.m_normal;
          Pa.x = -Pa.x;
          Pa.y = -Pa.y;
          var Ua = y.m_lowerLimit,
            Ta = y.m_normal2;
          Ua.x = Ta.x;
          Ua.y = Ta.y;
          var Va = y.m_lowerLimit;
          Va.x = -Va.x;
          Va.y = -Va.y;
          var gb = y.m_upperLimit,
            Qa = y.m_normal0;
          gb.x = Qa.x;
          gb.y = Qa.y;
          var eb = y.m_upperLimit;
          eb.x = -eb.x;
          eb.y = -eb.y;
        }
      else if (h)
        if (x)
          if ((this.m_front = 0 <= t || 0 <= q)) {
            var bb = y.m_normal,
              hb = y.m_normal1;
            bb.x = hb.x;
            bb.y = hb.y;
            var mb = y.m_lowerLimit,
              nb = y.m_normal0;
            mb.x = nb.x;
            mb.y = nb.y;
            var ob = y.m_upperLimit,
              lb = y.m_normal1;
            ob.x = lb.x;
            ob.y = lb.y;
            var fb = y.m_upperLimit;
            fb.x = -fb.x;
            fb.y = -fb.y;
          } else {
            var pb = y.m_normal,
              Xa = y.m_normal1;
            pb.x = Xa.x;
            pb.y = Xa.y;
            var Ya = y.m_normal;
            Ya.x = -Ya.x;
            Ya.y = -Ya.y;
            var Wa = y.m_lowerLimit,
              $a = y.m_normal1;
            Wa.x = $a.x;
            Wa.y = $a.y;
            var db = y.m_upperLimit,
              jb = y.m_normal1;
            db.x = jb.x;
            db.y = jb.y;
            var qb = y.m_upperLimit;
            qb.x = -qb.x;
            qb.y = -qb.y;
          }
        else if ((this.m_front = 0 <= t && 0 <= q)) {
          var Za = y.m_normal,
            sb = y.m_normal1;
          Za.x = sb.x;
          Za.y = sb.y;
          var ib = y.m_lowerLimit,
            wb = y.m_normal1;
          ib.x = wb.x;
          ib.y = wb.y;
          var ab = y.m_upperLimit,
            kb = y.m_normal1;
          ab.x = kb.x;
          ab.y = kb.y;
          var xb = y.m_upperLimit;
          xb.x = -xb.x;
          xb.y = -xb.y;
        } else {
          var zb = y.m_normal,
            cb = y.m_normal1;
          zb.x = cb.x;
          zb.y = cb.y;
          var Ab = y.m_normal;
          Ab.x = -Ab.x;
          Ab.y = -Ab.y;
          var Db = y.m_lowerLimit,
            yb = y.m_normal1;
          Db.x = yb.x;
          Db.y = yb.y;
          var ub = y.m_upperLimit,
            Cb = y.m_normal0;
          ub.x = Cb.x;
          ub.y = Cb.y;
          var rb = y.m_upperLimit;
          rb.x = -rb.x;
          rb.y = -rb.y;
        }
      else if (n)
        if (v)
          if ((this.m_front = 0 <= q || 0 <= u)) {
            var vb = y.m_normal,
              Bb = y.m_normal1;
            vb.x = Bb.x;
            vb.y = Bb.y;
            var Eb = y.m_lowerLimit,
              tb = y.m_normal1;
            Eb.x = tb.x;
            Eb.y = tb.y;
            var Ma = y.m_lowerLimit;
            Ma.x = -Ma.x;
            Ma.y = -Ma.y;
            var Fb = y.m_upperLimit,
              Hb = y.m_normal2;
            Fb.x = Hb.x;
            Fb.y = Hb.y;
          } else {
            var Ib = y.m_normal,
              Kb = y.m_normal1;
            Ib.x = Kb.x;
            Ib.y = Kb.y;
            var Gb = y.m_normal;
            Gb.x = -Gb.x;
            Gb.y = -Gb.y;
            var Lb = y.m_lowerLimit,
              Mb = y.m_normal1;
            Lb.x = Mb.x;
            Lb.y = Mb.y;
            var Jb = y.m_lowerLimit;
            Jb.x = -Jb.x;
            Jb.y = -Jb.y;
            var Nb = y.m_upperLimit,
              Ob = y.m_normal1;
            Nb.x = Ob.x;
            Nb.y = Ob.y;
          }
        else if ((this.m_front = 0 <= q && 0 <= u)) {
          var Pb = y.m_normal,
            Qb = y.m_normal1;
          Pb.x = Qb.x;
          Pb.y = Qb.y;
          var Tb = y.m_lowerLimit,
            Ub = y.m_normal1;
          Tb.x = Ub.x;
          Tb.y = Ub.y;
          var Rb = y.m_lowerLimit;
          Rb.x = -Rb.x;
          Rb.y = -Rb.y;
          var Wb = y.m_upperLimit,
            Xb = y.m_normal1;
          Wb.x = Xb.x;
          Wb.y = Xb.y;
        } else {
          var Yb = y.m_normal,
            Zb = y.m_normal1;
          Yb.x = Zb.x;
          Yb.y = Zb.y;
          var Sb = y.m_normal;
          Sb.x = -Sb.x;
          Sb.y = -Sb.y;
          var $b = y.m_lowerLimit,
            ac = y.m_normal2;
          $b.x = ac.x;
          $b.y = ac.y;
          var Vb = y.m_lowerLimit;
          Vb.x = -Vb.x;
          Vb.y = -Vb.y;
          var cc = y.m_upperLimit,
            dc = y.m_normal1;
          cc.x = dc.x;
          cc.y = dc.y;
        }
      else if ((this.m_front = 0 <= q)) {
        var ec = y.m_normal,
          fc = y.m_normal1;
        ec.x = fc.x;
        ec.y = fc.y;
        var gc = y.m_lowerLimit,
          ic = y.m_normal1;
        gc.x = ic.x;
        gc.y = ic.y;
        var bc = y.m_lowerLimit;
        bc.x = -bc.x;
        bc.y = -bc.y;
        var kc = y.m_upperLimit,
          lc = y.m_normal1;
        kc.x = lc.x;
        kc.y = lc.y;
        var hc = y.m_upperLimit;
        hc.x = -hc.x;
        hc.y = -hc.y;
      } else {
        var nc = y.m_normal,
          oc = y.m_normal1;
        nc.x = oc.x;
        nc.y = oc.y;
        var jc = y.m_normal;
        jc.x = -jc.x;
        jc.y = -jc.y;
        var rc = y.m_lowerLimit,
          sc = y.m_normal1;
        rc.x = sc.x;
        rc.y = sc.y;
        var tc = y.m_upperLimit,
          uc = y.m_normal1;
        tc.x = uc.x;
        tc.y = uc.y;
      }
      y.m_polygonB.count = d.m_vertexCount;
      for (var vc = 0, Bc = d.m_vertexCount; vc < Bc; ) {
        var qc = vc++;
        this.multiplyTransformVector(y.m_xf, d.m_vertices[qc], y.temp);
        var xc = y.m_polygonB.vertices[qc],
          yc = y.temp;
        xc.x = yc.x;
        xc.y = yc.y;
        this.multiplyRotationVector(y.m_xf.R, d.m_normals[qc], y.temp);
        var zc = y.m_polygonB.normals[qc],
          Ac = y.temp;
        zc.x = Ac.x;
        zc.y = Ac.y;
      }
      this.m_radius = 2 * R.b2_polygonRadius;
      a.m_pointCount = 0;
      this.computeEdgeSeparation(y.edgeAxis);
      if (
        !(
          y.edgeAxis.type == ne.UNKNOWN ||
          y.edgeAxis.separation > this.m_radius ||
          (this.computePolygonSeparation(y.polygonAxis),
          y.polygonAxis.type != ne.UNKNOWN &&
            y.polygonAxis.separation > this.m_radius)
        )
      ) {
        var mc =
          y.polygonAxis.type == ne.UNKNOWN
            ? y.edgeAxis
            : y.polygonAxis.separation > 0.98 * y.edgeAxis.separation + 0.001
            ? y.polygonAxis
            : y.edgeAxis;
        if (mc.type == ne.EDGE_A) {
          a.m_type = 2;
          for (
            var Cc = 0,
              Dc = E.dot(y.m_normal, y.m_polygonB.normals[0]),
              Ec = 1,
              Jc = y.m_polygonB.count;
            Ec < Jc;

          ) {
            var Fc = Ec++,
              Gc = E.dot(y.m_normal, y.m_polygonB.normals[Fc]);
            Gc < Dc && ((Dc = Gc), (Cc = Fc));
          }
          var wc = Cc,
            Hc = wc + 1 < y.m_polygonB.count ? wc + 1 : 0,
            Ic = y.ie[0].v,
            Kc = y.m_polygonB.vertices[wc];
          Ic.x = Kc.x;
          Ic.y = Kc.y;
          y.ie[0].id.indexA = 0;
          y.ie[0].id.indexB = wc;
          y.ie[0].id.typeA = Id.FACE;
          y.ie[0].id.typeB = Id.VERTEX;
          var Lc = y.ie[1].v,
            Mc = y.m_polygonB.vertices[Hc];
          Lc.x = Mc.x;
          Lc.y = Mc.y;
          y.ie[1].id.indexA = 0;
          y.ie[1].id.indexB = Hc;
          y.ie[1].id.typeA = Id.FACE;
          y.ie[1].id.typeB = Id.VERTEX;
          if (this.m_front) {
            y.rf.i1 = 0;
            y.rf.i2 = 1;
            var Pc = y.rf.v1,
              Qc = this.m_v1;
            Pc.x = Qc.x;
            Pc.y = Qc.y;
            var Rc = y.rf.v2,
              Sc = this.m_v2;
            Rc.x = Sc.x;
            Rc.y = Sc.y;
            var Uc = y.rf.normal,
              Vc = y.m_normal1;
            Uc.x = Vc.x;
            Uc.y = Vc.y;
          } else {
            y.rf.i1 = 1;
            y.rf.i2 = 0;
            var Wc = y.rf.v1,
              Xc = this.m_v2;
            Wc.x = Xc.x;
            Wc.y = Xc.y;
            var Yc = y.rf.v2,
              Zc = this.m_v1;
            Yc.x = Zc.x;
            Yc.y = Zc.y;
            var $c = y.rf.normal,
              ad = y.m_normal1;
            $c.x = ad.x;
            $c.y = ad.y;
            var Oc = y.rf.normal;
            Oc.x = -Oc.x;
            Oc.y = -Oc.y;
          }
        } else {
          a.m_type = 4;
          var bd = y.ie[0].v,
            cd = this.m_v1;
          bd.x = cd.x;
          bd.y = cd.y;
          y.ie[0].id.indexA = 0;
          y.ie[0].id.indexB = mc.index;
          y.ie[0].id.typeA = Id.VERTEX;
          y.ie[0].id.typeB = Id.FACE;
          var dd = y.ie[1].v,
            fd = this.m_v2;
          dd.x = fd.x;
          dd.y = fd.y;
          y.ie[1].id.indexA = 0;
          y.ie[1].id.indexB = mc.index;
          y.ie[1].id.typeA = Id.VERTEX;
          y.ie[1].id.typeB = Id.FACE;
          y.rf.i1 = mc.index;
          y.rf.i2 = y.rf.i1 + 1 < y.m_polygonB.count ? y.rf.i1 + 1 : 0;
          var gd = y.rf.v1,
            hd = y.m_polygonB.vertices[y.rf.i1];
          gd.x = hd.x;
          gd.y = hd.y;
          var id = y.rf.v2,
            jd = y.m_polygonB.vertices[y.rf.i2];
          id.x = jd.x;
          id.y = jd.y;
          var kd = y.rf.normal,
            ld = y.m_polygonB.normals[y.rf.i1];
          kd.x = ld.x;
          kd.y = ld.y;
        }
        var md = y.rf.sideNormal1,
          qd = -y.rf.normal.x;
        md.x = y.rf.normal.y;
        md.y = qd;
        var od = y.rf.sideNormal2,
          pd = y.rf.sideNormal1;
        od.x = pd.x;
        od.y = pd.y;
        var ed = y.rf.sideNormal2;
        ed.x = -ed.x;
        ed.y = -ed.y;
        y.rf.sideOffset1 = E.dot(y.rf.sideNormal1, y.rf.v1);
        y.rf.sideOffset2 = E.dot(y.rf.sideNormal2, y.rf.v2);
        var nd = y.clipSegmentToLine(
          y.clipPoints1,
          y.ie,
          y.rf.sideNormal1,
          y.rf.sideOffset1,
          y.rf.i1
        );
        if (
          !(
            nd < R.b2_maxManifoldPoints ||
            ((nd = y.clipSegmentToLine(
              y.clipPoints2,
              y.clipPoints1,
              y.rf.sideNormal2,
              y.rf.sideOffset2,
              y.rf.i2
            )),
            nd < R.b2_maxManifoldPoints)
          )
        ) {
          if (mc.type == ne.EDGE_A) {
            var rd = a.m_localPlaneNormal,
              td = y.rf.normal;
            rd.x = td.x;
            rd.y = td.y;
            var ud = a.m_localPoint,
              vd = y.rf.v1;
            ud.x = vd.x;
            ud.y = vd.y;
          } else {
            var wd = a.m_localPlaneNormal,
              xd = d.m_normals[y.rf.i1];
            wd.x = xd.x;
            wd.y = xd.y;
            var yd = a.m_localPoint,
              zd = d.m_vertices[y.rf.i1];
            yd.x = zd.x;
            yd.y = zd.y;
          }
          for (var sd = 0, Ad = 0, Hd = R.b2_maxManifoldPoints; Ad < Hd; ) {
            var Nc = Ad++,
              Bd = y.temp,
              Cd = y.clipPoints2[Nc].v;
            Bd.x = Cd.x;
            Bd.y = Cd.y;
            y.temp.subtract(y.rf.v1);
            if (E.dot(y.rf.normal, y.temp) <= this.m_radius) {
              var Tc = a.m_points[sd];
              if (mc.type == ne.EDGE_A) {
                var Dd = Tc.m_localPoint,
                  Ed = E.mulXT(y.m_xf, y.clipPoints2[Nc].v);
                Dd.x = Ed.x;
                Dd.y = Ed.y;
                Tc.m_id.set(y.clipPoints2[Nc].id);
              } else {
                var Fd = Tc.m_localPoint,
                  Gd = y.clipPoints2[Nc].v;
                Fd.x = Gd.x;
                Fd.y = Gd.y;
                Tc.m_id.typeA = y.clipPoints2[Nc].id.typeB;
                Tc.m_id.typeB = y.clipPoints2[Nc].id.typeA;
                Tc.m_id.indexA = y.clipPoints2[Nc].id.indexB;
                Tc.m_id.indexB = y.clipPoints2[Nc].id.indexA;
              }
              ++sd;
            }
          }
          a.m_pointCount = sd;
        }
      }
    },
    computeEdgeSeparation: function (a) {
      a.type = ne.EDGE_A;
      a.index = this.m_front ? 0 : 1;
      a.separation = Number.MAX_VALUE;
      for (var b = 0, c = y.m_polygonB.count; b < c; ) {
        var d = b++,
          e = y.temp;
        d = y.m_polygonB.vertices[d];
        e.x = d.x;
        e.y = d.y;
        y.temp.subtract(this.m_v1);
        e = E.dot(y.m_normal, y.temp);
        e < a.separation && (a.separation = e);
      }
    },
    computePolygonSeparation: function (a) {
      a.type = ne.UNKNOWN;
      a.index = -1;
      a.separation = -Number.MAX_VALUE;
      var b = y.perp,
        c = y.m_normal.x;
      b.x = -y.m_normal.y;
      b.y = c;
      b = 0;
      for (c = y.m_polygonB.count; b < c; ) {
        var d = b++,
          e = y.n,
          f = y.m_polygonB.normals[d];
        e.x = f.x;
        e.y = f.y;
        e = y.n;
        e.x = -e.x;
        e.y = -e.y;
        e = y.temp;
        f = y.m_polygonB.vertices[d];
        e.x = f.x;
        e.y = f.y;
        y.temp.subtract(this.m_v1);
        e = E.dot(y.n, y.temp);
        f = y.temp;
        var g = y.m_polygonB.vertices[d];
        f.x = g.x;
        f.y = g.y;
        y.temp.subtract(this.m_v2);
        f = E.dot(y.n, y.temp);
        e = Math.min(e, f);
        if (e > this.m_radius) {
          a.type = ne.EDGE_B;
          a.index = d;
          a.separation = e;
          break;
        }
        0 <= E.dot(y.n, y.perp)
          ? ((f = y.temp),
            (g = y.n),
            (f.x = g.x),
            (f.y = g.y),
            y.temp.subtract(y.m_upperLimit))
          : ((f = y.temp),
            (g = y.n),
            (f.x = g.x),
            (f.y = g.y),
            y.temp.subtract(y.m_lowerLimit));
        !(E.dot(y.temp, y.m_normal) < -R.b2_angularSlop) &&
          e > a.separation &&
          ((a.type = ne.EDGE_B), (a.index = d), (a.separation = e));
      }
    },
    multiplyTransformsInverse: function (a, b, c) {
      this.multiplyRotationsInverse(a.R, b.R, y.mat);
      var d = y.temp2;
      b = b.position;
      d.x = b.x;
      d.y = b.y;
      y.temp2.subtract(a.position);
      this.multiplyRotationVectorInverse(a.R, y.temp2, c.position);
      a = c.R.col1;
      d = y.mat.col1;
      a.x = d.x;
      a.y = d.y;
      c = c.R.col2;
      a = y.mat.col2;
      c.x = a.x;
      c.y = a.y;
    },
    multiplyRotationsInverse: function (a, b, c) {
      c.col1.x = a.col1.x * b.col1.x + a.col1.y * b.col1.y;
      c.col1.y = a.col2.x * b.col1.x + a.col2.y * b.col1.y;
      c.col2.x = a.col1.x * b.col2.x + a.col1.y * b.col2.y;
      c.col2.y = a.col2.x * b.col2.x + a.col2.y * b.col2.y;
    },
    multiplyRotationVector: function (a, b, c) {
      c.x = a.col1.x * b.x + a.col2.x * b.y;
      c.y = a.col1.y * b.x + a.col2.y * b.y;
    },
    multiplyRotationVectorInverse: function (a, b, c) {
      c.x = a.col1.x * b.x + a.col1.y * b.y;
      c.y = a.col2.x * b.x + a.col2.y * b.y;
    },
    multiplyTransformVector: function (a, b, c) {
      c.x = a.R.col1.x * b.x + a.R.col2.x * b.y + a.position.x;
      c.y = a.R.col1.y * b.x + a.R.col2.y * b.y + a.position.y;
    },
    __class__: y,
  });
  var ne = (p["box2D.dynamics.contacts.Type"] = {
    __ename__: ["box2D", "dynamics", "contacts", "Type"],
    __constructs__: ["UNKNOWN", "EDGE_A", "EDGE_B"],
  });
  ne.UNKNOWN = ["UNKNOWN", 0];
  ne.UNKNOWN.toString = M;
  ne.UNKNOWN.__enum__ = ne;
  ne.EDGE_A = ["EDGE_A", 1];
  ne.EDGE_A.toString = M;
  ne.EDGE_A.__enum__ = ne;
  ne.EDGE_B = ["EDGE_B", 2];
  ne.EDGE_B.toString = M;
  ne.EDGE_B.__enum__ = ne;
  var Hh = function () {
    Ga.call(this);
  };
  p["box2D.dynamics.contacts.B2PolygonContact"] = Hh;
  Hh.__name__ = ["box2D", "dynamics", "contacts", "B2PolygonContact"];
  Hh.create = function (a) {
    return new Hh();
  };
  Hh.destroy = function (a, b) {};
  Hh.__super__ = Ga;
  Hh.prototype = x(Ga.prototype, {
    reset: function (a, b) {
      Ga.prototype.reset.call(this, a, b);
    },
    evaluate: function () {
      var a = this.m_fixtureA.getBody(),
        b = this.m_fixtureB.getBody();
      ib.collidePolygons(
        this.m_manifold,
        u.__cast(this.m_fixtureA.getShape(), Db),
        a.m_xf,
        u.__cast(this.m_fixtureB.getShape(), Db),
        b.m_xf
      );
    },
    __class__: Hh,
  });
  var Ks = function () {};
  p["box2D.dynamics.controllers.B2Controller"] = Ks;
  Ks.__name__ = ["box2D", "dynamics", "controllers", "B2Controller"];
  Ks.prototype = {
    step: function (a) {},
    draw: function (a) {},
    addBody: function (a) {
      var b = new Xo();
      b.controller = this;
      b.body = a;
      b.nextBody = this.m_bodyList;
      b.prevBody = null;
      this.m_bodyList = b;
      null != b.nextBody && (b.nextBody.prevBody = b);
      this.m_bodyCount++;
      b.nextController = a.m_controllerList;
      b.prevController = null;
      a.m_controllerList = b;
      null != b.nextController && (b.nextController.prevController = b);
      a.m_controllerCount++;
    },
    removeBody: function (a) {
      for (var b = a.m_controllerList; null != b && b.controller != this; )
        b = b.nextController;
      null != b.prevBody && (b.prevBody.nextBody = b.nextBody);
      null != b.nextBody && (b.nextBody.prevBody = b.prevBody);
      null != b.nextController &&
        (b.nextController.prevController = b.prevController);
      null != b.prevController &&
        (b.prevController.nextController = b.nextController);
      this.m_bodyList == b && (this.m_bodyList = b.nextBody);
      a.m_controllerList == b && (a.m_controllerList = b.nextController);
      a.m_controllerCount--;
      this.m_bodyCount--;
    },
    clear: function () {
      for (; null != this.m_bodyList; ) this.removeBody(this.m_bodyList.body);
    },
    getNext: function () {
      return this.m_next;
    },
    getWorld: function () {
      return this.m_world;
    },
    getBodyList: function () {
      return this.m_bodyList;
    },
    m_next: null,
    m_prev: null,
    m_bodyList: null,
    m_bodyCount: null,
    m_world: null,
    __class__: Ks,
  };
  var Xo = function () {};
  p["box2D.dynamics.controllers.B2ControllerEdge"] = Xo;
  Xo.__name__ = ["box2D", "dynamics", "controllers", "B2ControllerEdge"];
  Xo.prototype = {
    controller: null,
    body: null,
    prevBody: null,
    nextBody: null,
    prevController: null,
    nextController: null,
    __class__: Xo,
  };
  var Kb = function (a) {
    this.m_edgeA = new Fl();
    this.m_edgeB = new Fl();
    this.m_localCenterA = new D();
    this.m_localCenterB = new D();
    R.b2Assert(a.bodyA != a.bodyB);
    this.m_type = a.type;
    this.m_next = this.m_prev = null;
    this.m_bodyA = a.bodyA;
    this.m_bodyB = a.bodyB;
    this.m_collideConnected = a.collideConnected;
    this.m_islandFlag = !1;
    this.m_userData = a.userData;
  };
  p["box2D.dynamics.joints.B2Joint"] = Kb;
  Kb.__name__ = ["box2D", "dynamics", "joints", "B2Joint"];
  Kb.create = function (a, b) {
    b = null;
    3 == a.type
      ? (b = new Wi(u.__cast(a, li)))
      : 5 == a.type
      ? (b = new Gl(u.__cast(a, Hl)))
      : 2 == a.type
      ? (b = new Xi(u.__cast(a, Il)))
      : 1 == a.type
      ? (b = new mg(u.__cast(a, mi)))
      : 4 == a.type
      ? (b = new Jg(u.__cast(a, Jl)))
      : 6 == a.type
      ? (b = new Kl(u.__cast(a, Ll)))
      : 7 == a.type
      ? (b = new ek(u.__cast(a, ni)))
      : 8 == a.type
      ? (b = new Ml(u.__cast(a, Nl)))
      : 9 == a.type && (b = new Ol(u.__cast(a, Pl)));
    return b;
  };
  Kb.destroy = function (a, b) {};
  Kb.prototype = {
    getType: function () {
      return this.m_type;
    },
    getAnchorA: function () {
      return null;
    },
    getAnchorB: function () {
      return null;
    },
    getReactionForce: function (a) {
      return null;
    },
    getReactionTorque: function (a) {
      return 0;
    },
    getBodyA: function () {
      return this.m_bodyA;
    },
    getBodyB: function () {
      return this.m_bodyB;
    },
    getNext: function () {
      return this.m_next;
    },
    getUserData: function () {
      return this.m_userData;
    },
    setUserData: function (a) {
      this.m_userData = a;
    },
    isActive: function () {
      return this.m_bodyA.isActive() ? this.m_bodyB.isActive() : !1;
    },
    initVelocityConstraints: function (a) {},
    solveVelocityConstraints: function (a) {},
    finalizeVelocityConstraints: function () {},
    solvePositionConstraints: function (a) {
      return !1;
    },
    m_type: null,
    m_prev: null,
    m_next: null,
    m_edgeA: null,
    m_edgeB: null,
    m_bodyA: null,
    m_bodyB: null,
    m_islandFlag: null,
    m_collideConnected: null,
    m_userData: null,
    m_localCenterA: null,
    m_localCenterB: null,
    m_invMassA: null,
    m_invMassB: null,
    m_invIA: null,
    m_invIB: null,
    ID: null,
    __class__: Kb,
  };
  var Wi = function (a) {
    Kb.call(this, a);
    this.m_localAnchor1 = new D();
    this.m_localAnchor2 = new D();
    this.m_u = new D();
    var b = this.m_localAnchor1,
      c = a.localAnchorA;
    b.x = c.x;
    b.y = c.y;
    b = this.m_localAnchor2;
    c = a.localAnchorB;
    b.x = c.x;
    b.y = c.y;
    this.m_length = a.length;
    this.m_frequencyHz = a.frequencyHz;
    this.m_dampingRatio = a.dampingRatio;
    this.m_bias = this.m_gamma = this.m_impulse = 0;
  };
  p["box2D.dynamics.joints.B2DistanceJoint"] = Wi;
  Wi.__name__ = ["box2D", "dynamics", "joints", "B2DistanceJoint"];
  Wi.__super__ = Kb;
  Wi.prototype = x(Kb.prototype, {
    getAnchorA: function () {
      return this.m_bodyA.getWorldPoint(this.m_localAnchor1);
    },
    getAnchorB: function () {
      return this.m_bodyB.getWorldPoint(this.m_localAnchor2);
    },
    getReactionForce: function (a) {
      return new D(
        a * this.m_impulse * this.m_u.x,
        a * this.m_impulse * this.m_u.y
      );
    },
    getReactionTorque: function (a) {
      return 0;
    },
    getLength: function () {
      return this.m_length;
    },
    setLength: function (a) {
      this.m_length = a;
    },
    getFrequency: function () {
      return this.m_frequencyHz;
    },
    setFrequency: function (a) {
      this.m_frequencyHz = a;
    },
    getDampingRatio: function () {
      return this.m_dampingRatio;
    },
    setDampingRatio: function (a) {
      this.m_dampingRatio = a;
    },
    initVelocityConstraints: function (a) {
      var b = this.m_bodyA,
        c = this.m_bodyB;
      var d = b.m_xf.R;
      var e = this.m_localAnchor1.x - b.m_sweep.localCenter.x,
        f = this.m_localAnchor1.y - b.m_sweep.localCenter.y;
      var g = d.col1.x * e + d.col2.x * f;
      f = d.col1.y * e + d.col2.y * f;
      e = g;
      d = c.m_xf.R;
      var h = this.m_localAnchor2.x - c.m_sweep.localCenter.x,
        n = this.m_localAnchor2.y - c.m_sweep.localCenter.y;
      g = d.col1.x * h + d.col2.x * n;
      n = d.col1.y * h + d.col2.y * n;
      h = g;
      this.m_u.x = c.m_sweep.c.x + h - b.m_sweep.c.x - e;
      this.m_u.y = c.m_sweep.c.y + n - b.m_sweep.c.y - f;
      d = Math.sqrt(this.m_u.x * this.m_u.x + this.m_u.y * this.m_u.y);
      d > R.b2_linearSlop
        ? this.m_u.multiply(1 / d)
        : ((g = this.m_u), (g.x = 0), (g.y = 0));
      g = e * this.m_u.y - f * this.m_u.x;
      var k = h * this.m_u.y - n * this.m_u.x;
      g = b.m_invMass + b.m_invI * g * g + c.m_invMass + c.m_invI * k * k;
      this.m_mass = 0 != g ? 1 / g : 0;
      if (0 < this.m_frequencyHz) {
        d -= this.m_length;
        k = 2 * Math.PI * this.m_frequencyHz;
        var G = this.m_mass * k * k;
        this.m_gamma =
          a.dt * (2 * this.m_mass * this.m_dampingRatio * k + a.dt * G);
        this.m_gamma = 0 != this.m_gamma ? 1 / this.m_gamma : 0;
        this.m_bias = d * a.dt * G * this.m_gamma;
        this.m_mass = g + this.m_gamma;
        this.m_mass = 0 != this.m_mass ? 1 / this.m_mass : 0;
      }
      a.warmStarting
        ? ((this.m_impulse *= a.dtRatio),
          (a = this.m_impulse * this.m_u.x),
          (d = this.m_impulse * this.m_u.y),
          (b.m_linearVelocity.x -= b.m_invMass * a),
          (b.m_linearVelocity.y -= b.m_invMass * d),
          (b.m_angularVelocity -= b.m_invI * (e * d - f * a)),
          (c.m_linearVelocity.x += c.m_invMass * a),
          (c.m_linearVelocity.y += c.m_invMass * d),
          (c.m_angularVelocity += c.m_invI * (h * d - n * a)))
        : (this.m_impulse = 0);
    },
    solveVelocityConstraints: function (a) {
      a = this.m_bodyA;
      var b = this.m_bodyB;
      var c = a.m_xf.R;
      var d = this.m_localAnchor1.x - a.m_sweep.localCenter.x,
        e = this.m_localAnchor1.y - a.m_sweep.localCenter.y,
        f = c.col1.x * d + c.col2.x * e;
      e = c.col1.y * d + c.col2.y * e;
      d = f;
      c = b.m_xf.R;
      var g = this.m_localAnchor2.x - b.m_sweep.localCenter.x,
        h = this.m_localAnchor2.y - b.m_sweep.localCenter.y;
      f = c.col1.x * g + c.col2.x * h;
      h = c.col1.y * g + c.col2.y * h;
      g = f;
      f =
        -this.m_mass *
        (this.m_u.x *
          (b.m_linearVelocity.x +
            -b.m_angularVelocity * h -
            (a.m_linearVelocity.x + -a.m_angularVelocity * e)) +
          this.m_u.y *
            (b.m_linearVelocity.y +
              b.m_angularVelocity * g -
              (a.m_linearVelocity.y + a.m_angularVelocity * d)) +
          this.m_bias +
          this.m_gamma * this.m_impulse);
      this.m_impulse += f;
      c = f * this.m_u.x;
      f *= this.m_u.y;
      a.m_linearVelocity.x -= a.m_invMass * c;
      a.m_linearVelocity.y -= a.m_invMass * f;
      a.m_angularVelocity -= a.m_invI * (d * f - e * c);
      b.m_linearVelocity.x += b.m_invMass * c;
      b.m_linearVelocity.y += b.m_invMass * f;
      b.m_angularVelocity += b.m_invI * (g * f - h * c);
    },
    solvePositionConstraints: function (a) {
      if (0 < this.m_frequencyHz) return !0;
      a = this.m_bodyA;
      var b = this.m_bodyB;
      var c = a.m_xf.R;
      var d = this.m_localAnchor1.x - a.m_sweep.localCenter.x,
        e = this.m_localAnchor1.y - a.m_sweep.localCenter.y,
        f = c.col1.x * d + c.col2.x * e;
      e = c.col1.y * d + c.col2.y * e;
      d = f;
      c = b.m_xf.R;
      var g = this.m_localAnchor2.x - b.m_sweep.localCenter.x,
        h = this.m_localAnchor2.y - b.m_sweep.localCenter.y;
      f = c.col1.x * g + c.col2.x * h;
      h = c.col1.y * g + c.col2.y * h;
      g = f;
      f = b.m_sweep.c.x + g - a.m_sweep.c.x - d;
      var n = b.m_sweep.c.y + h - a.m_sweep.c.y - e;
      c = Math.sqrt(f * f + n * n);
      f /= c;
      n /= c;
      c -= this.m_length;
      c = E.clamp(c, -R.b2_maxLinearCorrection, R.b2_maxLinearCorrection);
      var k = -this.m_mass * c,
        G = this.m_u;
      G.x = f;
      G.y = n;
      f = k * this.m_u.x;
      n = k * this.m_u.y;
      a.m_sweep.c.x -= a.m_invMass * f;
      a.m_sweep.c.y -= a.m_invMass * n;
      a.m_sweep.a -= a.m_invI * (d * n - e * f);
      b.m_sweep.c.x += b.m_invMass * f;
      b.m_sweep.c.y += b.m_invMass * n;
      b.m_sweep.a += b.m_invI * (g * n - h * f);
      a.synchronizeTransform();
      b.synchronizeTransform();
      return E.abs(c) < R.b2_linearSlop;
    },
    m_localAnchor1: null,
    m_localAnchor2: null,
    m_u: null,
    m_frequencyHz: null,
    m_dampingRatio: null,
    m_gamma: null,
    m_bias: null,
    m_impulse: null,
    m_mass: null,
    m_length: null,
    __class__: Wi,
  });
  var Sc = function () {
    this.type = 0;
    this.bodyB = this.bodyA = this.userData = null;
    this.collideConnected = !1;
  };
  p["box2D.dynamics.joints.B2JointDef"] = Sc;
  Sc.__name__ = ["box2D", "dynamics", "joints", "B2JointDef"];
  Sc.prototype = {
    type: null,
    userData: null,
    bodyA: null,
    bodyB: null,
    collideConnected: null,
    ID: null,
    actor1: null,
    actor2: null,
    __class__: Sc,
  };
  var li = function () {
    Sc.call(this);
    this.localAnchorA = new D();
    this.localAnchorB = new D();
    this.type = 3;
    this.length = 1;
    this.dampingRatio = this.frequencyHz = 0;
  };
  p["box2D.dynamics.joints.B2DistanceJointDef"] = li;
  li.__name__ = ["box2D", "dynamics", "joints", "B2DistanceJointDef"];
  li.__super__ = Sc;
  li.prototype = x(Sc.prototype, {
    initialize: function (a, b, c, d) {
      this.bodyA = a;
      this.bodyB = b;
      a = this.localAnchorA;
      b = this.bodyA.getLocalPoint(c);
      a.x = b.x;
      a.y = b.y;
      a = this.localAnchorB;
      b = this.bodyB.getLocalPoint(d);
      a.x = b.x;
      a.y = b.y;
      a = d.x - c.x;
      c = d.y - c.y;
      this.length = Math.sqrt(a * a + c * c);
      this.dampingRatio = this.frequencyHz = 0;
    },
    localAnchorA: null,
    localAnchorB: null,
    length: null,
    frequencyHz: null,
    dampingRatio: null,
    __class__: li,
  });
  var Ol = function (a) {
    Kb.call(this, a);
    this.m_localAnchorA = new D();
    this.m_localAnchorB = new D();
    this.m_linearMass = new uc();
    this.m_linearImpulse = new D();
    var b = this.m_localAnchorA,
      c = a.localAnchorA;
    b.x = c.x;
    b.y = c.y;
    b = this.m_localAnchorB;
    c = a.localAnchorB;
    b.x = c.x;
    b.y = c.y;
    this.m_linearMass.setZero();
    this.m_angularMass = 0;
    b = this.m_linearImpulse;
    b.x = 0;
    this.m_angularImpulse = b.y = 0;
    this.m_maxForce = a.maxForce;
    this.m_maxTorque = a.maxTorque;
  };
  p["box2D.dynamics.joints.B2FrictionJoint"] = Ol;
  Ol.__name__ = ["box2D", "dynamics", "joints", "B2FrictionJoint"];
  Ol.__super__ = Kb;
  Ol.prototype = x(Kb.prototype, {
    getAnchorA: function () {
      return this.m_bodyA.getWorldPoint(this.m_localAnchorA);
    },
    getAnchorB: function () {
      return this.m_bodyB.getWorldPoint(this.m_localAnchorB);
    },
    getReactionForce: function (a) {
      return new D(a * this.m_linearImpulse.x, a * this.m_linearImpulse.y);
    },
    getReactionTorque: function (a) {
      return a * this.m_angularImpulse;
    },
    setMaxForce: function (a) {
      this.m_maxForce = a;
    },
    getMaxForce: function () {
      return this.m_maxForce;
    },
    setMaxTorque: function (a) {
      this.m_maxTorque = a;
    },
    getMaxTorque: function () {
      return this.m_maxTorque;
    },
    initVelocityConstraints: function (a) {
      var b = this.m_bodyA,
        c = this.m_bodyB;
      var d = b.m_xf.R;
      var e = this.m_localAnchorA.x - b.m_sweep.localCenter.x,
        f = this.m_localAnchorA.y - b.m_sweep.localCenter.y;
      var g = d.col1.x * e + d.col2.x * f;
      f = d.col1.y * e + d.col2.y * f;
      e = g;
      d = c.m_xf.R;
      var h = this.m_localAnchorB.x - c.m_sweep.localCenter.x,
        n = this.m_localAnchorB.y - c.m_sweep.localCenter.y;
      g = d.col1.x * h + d.col2.x * n;
      n = d.col1.y * h + d.col2.y * n;
      h = g;
      d = b.m_invMass;
      g = c.m_invMass;
      var k = b.m_invI,
        G = c.m_invI,
        l = new uc();
      l.col1.x = d + g;
      l.col2.x = 0;
      l.col1.y = 0;
      l.col2.y = d + g;
      l.col1.x += k * f * f;
      l.col2.x += -k * e * f;
      l.col1.y += -k * e * f;
      l.col2.y += k * e * e;
      l.col1.x += G * n * n;
      l.col2.x += -G * h * n;
      l.col1.y += -G * h * n;
      l.col2.y += G * h * h;
      l.getInverse(this.m_linearMass);
      this.m_angularMass = k + G;
      0 < this.m_angularMass && (this.m_angularMass = 1 / this.m_angularMass);
      a.warmStarting
        ? ((this.m_linearImpulse.x *= a.dtRatio),
          (this.m_linearImpulse.y *= a.dtRatio),
          (this.m_angularImpulse *= a.dtRatio),
          (a = this.m_linearImpulse),
          (b.m_linearVelocity.x -= d * a.x),
          (b.m_linearVelocity.y -= d * a.y),
          (b.m_angularVelocity -=
            k * (e * a.y - f * a.x + this.m_angularImpulse)),
          (c.m_linearVelocity.x += g * a.x),
          (c.m_linearVelocity.y += g * a.y),
          (c.m_angularVelocity +=
            G * (h * a.y - n * a.x + this.m_angularImpulse)))
        : ((b = this.m_linearImpulse),
          (b.x = 0),
          (this.m_angularImpulse = b.y = 0));
    },
    solveVelocityConstraints: function (a) {
      var b = this.m_bodyA,
        c = this.m_bodyB,
        d = b.m_linearVelocity,
        e = b.m_angularVelocity,
        f = c.m_linearVelocity,
        g = c.m_angularVelocity,
        h = b.m_invMass,
        n = c.m_invMass,
        k = b.m_invI,
        G = c.m_invI;
      var l = b.m_xf.R;
      var m = this.m_localAnchorA.x - b.m_sweep.localCenter.x,
        r = this.m_localAnchorA.y - b.m_sweep.localCenter.y;
      var p = l.col1.x * m + l.col2.x * r;
      r = l.col1.y * m + l.col2.y * r;
      m = p;
      l = c.m_xf.R;
      var q = this.m_localAnchorB.x - c.m_sweep.localCenter.x,
        t = this.m_localAnchorB.y - c.m_sweep.localCenter.y;
      p = l.col1.x * q + l.col2.x * t;
      t = l.col1.y * q + l.col2.y * t;
      q = p;
      p = -this.m_angularMass * (g - e);
      var u = this.m_angularImpulse;
      l = a.dt * this.m_maxTorque;
      this.m_angularImpulse = E.clamp(this.m_angularImpulse + p, -l, l);
      p = this.m_angularImpulse - u;
      e -= k * p;
      g += G * p;
      l = E.mulMV(
        this.m_linearMass,
        new D(-(f.x - g * t - d.x + e * r), -(f.y + g * q - d.y - e * m))
      );
      p = this.m_linearImpulse.copy();
      this.m_linearImpulse.add(l);
      l = a.dt * this.m_maxForce;
      this.m_linearImpulse.lengthSquared() > l * l &&
        (this.m_linearImpulse.normalize(), this.m_linearImpulse.multiply(l));
      l = E.subtractVV(this.m_linearImpulse, p);
      d.x -= h * l.x;
      d.y -= h * l.y;
      e -= k * (m * l.y - r * l.x);
      f.x += n * l.x;
      f.y += n * l.y;
      g += G * (q * l.y - t * l.x);
      b.m_angularVelocity = e;
      c.m_angularVelocity = g;
    },
    solvePositionConstraints: function (a) {
      return !0;
    },
    m_localAnchorA: null,
    m_localAnchorB: null,
    m_linearMass: null,
    m_angularMass: null,
    m_linearImpulse: null,
    m_angularImpulse: null,
    m_maxForce: null,
    m_maxTorque: null,
    __class__: Ol,
  });
  var Pl = function () {
    Sc.call(this);
    this.localAnchorA = new D();
    this.localAnchorB = new D();
    this.type = 9;
    this.maxTorque = this.maxForce = 0;
  };
  p["box2D.dynamics.joints.B2FrictionJointDef"] = Pl;
  Pl.__name__ = ["box2D", "dynamics", "joints", "B2FrictionJointDef"];
  Pl.__super__ = Sc;
  Pl.prototype = x(Sc.prototype, {
    initialize: function (a, b, c) {
      this.bodyA = a;
      this.bodyB = b;
      a = this.localAnchorA;
      b = this.bodyA.getLocalPoint(c);
      a.x = b.x;
      a.y = b.y;
      a = this.localAnchorB;
      c = this.bodyB.getLocalPoint(c);
      a.x = c.x;
      a.y = c.y;
    },
    localAnchorA: null,
    localAnchorB: null,
    maxForce: null,
    maxTorque: null,
    __class__: Pl,
  });
  var Kl = function (a) {
    Kb.call(this, a);
    this.m_groundAnchor1 = new D();
    this.m_groundAnchor2 = new D();
    this.m_localAnchor1 = new D();
    this.m_localAnchor2 = new D();
    this.m_J = new Yo();
    var b = a.joint1.m_type,
      c = a.joint2.m_type;
    this.m_prismatic2 =
      this.m_revolute2 =
      this.m_prismatic1 =
      this.m_revolute1 =
        null;
    this.m_ground1 = a.joint1.getBodyA();
    this.m_bodyA = a.joint1.getBodyB();
    if (1 == b) {
      this.m_revolute1 = u.__cast(a.joint1, mg);
      b = this.m_groundAnchor1;
      var d = this.m_revolute1.m_localAnchor1;
      b.x = d.x;
      b.y = d.y;
      b = this.m_localAnchor1;
      d = this.m_revolute1.m_localAnchor2;
      b.x = d.x;
      b.y = d.y;
      b = this.m_revolute1.getJointAngle();
    } else
      (this.m_prismatic1 = u.__cast(a.joint1, Xi)),
        (b = this.m_groundAnchor1),
        (d = this.m_prismatic1.m_localAnchor1),
        (b.x = d.x),
        (b.y = d.y),
        (b = this.m_localAnchor1),
        (d = this.m_prismatic1.m_localAnchor2),
        (b.x = d.x),
        (b.y = d.y),
        (b = this.m_prismatic1.getJointTranslation());
    this.m_ground2 = a.joint2.getBodyA();
    this.m_bodyB = a.joint2.getBodyB();
    1 == c
      ? ((this.m_revolute2 = u.__cast(a.joint2, mg)),
        (c = this.m_groundAnchor2),
        (d = this.m_revolute2.m_localAnchor1),
        (c.x = d.x),
        (c.y = d.y),
        (c = this.m_localAnchor2),
        (d = this.m_revolute2.m_localAnchor2),
        (c.x = d.x),
        (c.y = d.y),
        (c = this.m_revolute2.getJointAngle()))
      : ((this.m_prismatic2 = u.__cast(a.joint2, Xi)),
        (c = this.m_groundAnchor2),
        (d = this.m_prismatic2.m_localAnchor1),
        (c.x = d.x),
        (c.y = d.y),
        (c = this.m_localAnchor2),
        (d = this.m_prismatic2.m_localAnchor2),
        (c.x = d.x),
        (c.y = d.y),
        (c = this.m_prismatic2.getJointTranslation()));
    this.m_ratio = a.ratio;
    this.m_constant = b + this.m_ratio * c;
    this.m_impulse = 0;
  };
  p["box2D.dynamics.joints.B2GearJoint"] = Kl;
  Kl.__name__ = ["box2D", "dynamics", "joints", "B2GearJoint"];
  Kl.__super__ = Kb;
  Kl.prototype = x(Kb.prototype, {
    getAnchorA: function () {
      return this.m_bodyA.getWorldPoint(this.m_localAnchor1);
    },
    getAnchorB: function () {
      return this.m_bodyB.getWorldPoint(this.m_localAnchor2);
    },
    getReactionForce: function (a) {
      return new D(
        a * this.m_impulse * this.m_J.linearB.x,
        a * this.m_impulse * this.m_J.linearB.y
      );
    },
    getReactionTorque: function (a) {
      var b = this.m_bodyB.m_xf.R,
        c = this.m_localAnchor1.x - this.m_bodyB.m_sweep.localCenter.x,
        d = this.m_localAnchor1.y - this.m_bodyB.m_sweep.localCenter.y,
        e = b.col1.x * c + b.col2.x * d;
      d = b.col1.y * c + b.col2.y * d;
      return (
        a *
        (this.m_impulse * this.m_J.angularB -
          e * this.m_impulse * this.m_J.linearB.y +
          d * this.m_impulse * this.m_J.linearB.x)
      );
    },
    getRatio: function () {
      return this.m_ratio;
    },
    setRatio: function (a) {
      this.m_ratio = a;
    },
    initVelocityConstraints: function (a) {
      var b = this.m_ground1,
        c = this.m_ground2,
        d = this.m_bodyA,
        e = this.m_bodyB,
        f = 0;
      this.m_J.setZero();
      if (null != this.m_revolute1) (this.m_J.angularA = -1), (f += d.m_invI);
      else {
        var g = b.m_xf.R;
        var h = this.m_prismatic1.m_localXAxis1;
        b = g.col1.x * h.x + g.col2.x * h.y;
        h = g.col1.y * h.x + g.col2.y * h.y;
        g = d.m_xf.R;
        var n = this.m_localAnchor1.x - d.m_sweep.localCenter.x;
        var k = this.m_localAnchor1.y - d.m_sweep.localCenter.y;
        var G = g.col1.x * n + g.col2.x * k;
        k = g.col1.y * n + g.col2.y * k;
        g = G * h - k * b;
        n = this.m_J.linearA;
        n.x = -b;
        n.y = -h;
        this.m_J.angularA = -g;
        f += d.m_invMass + d.m_invI * g * g;
      }
      null != this.m_revolute2
        ? ((this.m_J.angularB = -this.m_ratio),
          (f += this.m_ratio * this.m_ratio * e.m_invI))
        : ((g = c.m_xf.R),
          (h = this.m_prismatic2.m_localXAxis1),
          (b = g.col1.x * h.x + g.col2.x * h.y),
          (h = g.col1.y * h.x + g.col2.y * h.y),
          (g = e.m_xf.R),
          (n = this.m_localAnchor2.x - e.m_sweep.localCenter.x),
          (k = this.m_localAnchor2.y - e.m_sweep.localCenter.y),
          (G = g.col1.x * n + g.col2.x * k),
          (k = g.col1.y * n + g.col2.y * k),
          (g = G * h - k * b),
          (c = this.m_J.linearB),
          (c.x = -this.m_ratio * b),
          (c.y = -this.m_ratio * h),
          (this.m_J.angularB = -this.m_ratio * g),
          (f +=
            this.m_ratio * this.m_ratio * (e.m_invMass + e.m_invI * g * g)));
      this.m_mass = 0 < f ? 1 / f : 0;
      a.warmStarting
        ? ((d.m_linearVelocity.x +=
            d.m_invMass * this.m_impulse * this.m_J.linearA.x),
          (d.m_linearVelocity.y +=
            d.m_invMass * this.m_impulse * this.m_J.linearA.y),
          (d.m_angularVelocity +=
            d.m_invI * this.m_impulse * this.m_J.angularA),
          (e.m_linearVelocity.x +=
            e.m_invMass * this.m_impulse * this.m_J.linearB.x),
          (e.m_linearVelocity.y +=
            e.m_invMass * this.m_impulse * this.m_J.linearB.y),
          (e.m_angularVelocity +=
            e.m_invI * this.m_impulse * this.m_J.angularB))
        : (this.m_impulse = 0);
    },
    solveVelocityConstraints: function (a) {
      a = this.m_bodyA;
      var b = this.m_bodyB,
        c = this.m_J.compute(
          a.m_linearVelocity,
          a.m_angularVelocity,
          b.m_linearVelocity,
          b.m_angularVelocity
        );
      c *= -this.m_mass;
      this.m_impulse += c;
      a.m_linearVelocity.x += a.m_invMass * c * this.m_J.linearA.x;
      a.m_linearVelocity.y += a.m_invMass * c * this.m_J.linearA.y;
      a.m_angularVelocity += a.m_invI * c * this.m_J.angularA;
      b.m_linearVelocity.x += b.m_invMass * c * this.m_J.linearB.x;
      b.m_linearVelocity.y += b.m_invMass * c * this.m_J.linearB.y;
      b.m_angularVelocity += b.m_invI * c * this.m_J.angularB;
    },
    solvePositionConstraints: function (a) {
      a = this.m_bodyA;
      var b = this.m_bodyB;
      var c =
        null != this.m_revolute1
          ? this.m_revolute1.getJointAngle()
          : this.m_prismatic1.getJointTranslation();
      var d =
        null != this.m_revolute2
          ? this.m_revolute2.getJointAngle()
          : this.m_prismatic2.getJointTranslation();
      c = -this.m_mass * (this.m_constant - (c + this.m_ratio * d));
      a.m_sweep.c.x += a.m_invMass * c * this.m_J.linearA.x;
      a.m_sweep.c.y += a.m_invMass * c * this.m_J.linearA.y;
      a.m_sweep.a += a.m_invI * c * this.m_J.angularA;
      b.m_sweep.c.x += b.m_invMass * c * this.m_J.linearB.x;
      b.m_sweep.c.y += b.m_invMass * c * this.m_J.linearB.y;
      b.m_sweep.a += b.m_invI * c * this.m_J.angularB;
      a.synchronizeTransform();
      b.synchronizeTransform();
      return 0 < R.b2_linearSlop;
    },
    m_ground1: null,
    m_ground2: null,
    m_revolute1: null,
    m_prismatic1: null,
    m_revolute2: null,
    m_prismatic2: null,
    m_groundAnchor1: null,
    m_groundAnchor2: null,
    m_localAnchor1: null,
    m_localAnchor2: null,
    m_J: null,
    m_constant: null,
    m_ratio: null,
    m_mass: null,
    m_impulse: null,
    __class__: Kl,
  });
  var Ll = function () {
    Sc.call(this);
    this.type = 6;
    this.joint2 = this.joint1 = null;
    this.ratio = 1;
  };
  p["box2D.dynamics.joints.B2GearJointDef"] = Ll;
  Ll.__name__ = ["box2D", "dynamics", "joints", "B2GearJointDef"];
  Ll.__super__ = Sc;
  Ll.prototype = x(Sc.prototype, {
    joint1: null,
    joint2: null,
    ratio: null,
    __class__: Ll,
  });
  var Yo = function () {
    this.linearA = new D();
    this.linearB = new D();
  };
  p["box2D.dynamics.joints.B2Jacobian"] = Yo;
  Yo.__name__ = ["box2D", "dynamics", "joints", "B2Jacobian"];
  Yo.prototype = {
    linearA: null,
    angularA: null,
    linearB: null,
    angularB: null,
    setZero: function () {
      var a = this.linearA;
      a.x = 0;
      this.angularA = a.y = 0;
      a = this.linearB;
      a.x = 0;
      this.angularB = a.y = 0;
    },
    set: function (a, b, c, d) {
      var e = this.linearA;
      e.x = a.x;
      e.y = a.y;
      this.angularA = b;
      a = this.linearB;
      a.x = c.x;
      a.y = c.y;
      this.angularB = d;
    },
    compute: function (a, b, c, d) {
      return (
        this.linearA.x * a.x +
        this.linearA.y * a.y +
        this.angularA * b +
        (this.linearB.x * c.x + this.linearB.y * c.y) +
        this.angularB * d
      );
    },
    __class__: Yo,
  };
  var Fl = function () {};
  p["box2D.dynamics.joints.B2JointEdge"] = Fl;
  Fl.__name__ = ["box2D", "dynamics", "joints", "B2JointEdge"];
  Fl.prototype = {
    other: null,
    joint: null,
    prev: null,
    next: null,
    __class__: Fl,
  };
  var ek = function (a) {
    Kb.call(this, a);
    this.m_localAnchor1 = new D();
    this.m_localAnchor2 = new D();
    this.m_localXAxis1 = new D();
    this.m_localYAxis1 = new D();
    this.m_axis = new D();
    this.m_perp = new D();
    this.m_K = new uc();
    this.m_impulse = new D();
    var b = this.m_localAnchor1,
      c = a.localAnchorA;
    b.x = c.x;
    b.y = c.y;
    b = this.m_localAnchor2;
    c = a.localAnchorB;
    b.x = c.x;
    b.y = c.y;
    b = this.m_localXAxis1;
    c = a.localAxisA;
    b.x = c.x;
    b.y = c.y;
    this.m_localYAxis1.x = -this.m_localXAxis1.y;
    this.m_localYAxis1.y = this.m_localXAxis1.x;
    b = this.m_impulse;
    b.x = 0;
    this.m_motorImpulse = this.m_motorMass = b.y = 0;
    this.m_lowerTranslation = a.lowerTranslation;
    this.m_upperTranslation = a.upperTranslation;
    this.m_maxMotorForce = a.maxMotorForce;
    this.m_motorSpeed = a.motorSpeed;
    this.m_enableLimit = a.enableLimit;
    this.m_enableMotor = a.enableMotor;
    this.m_limitState = 0;
    a = this.m_axis;
    a.x = 0;
    a.y = 0;
    a = this.m_perp;
    a.x = 0;
    a.y = 0;
  };
  p["box2D.dynamics.joints.B2LineJoint"] = ek;
  ek.__name__ = ["box2D", "dynamics", "joints", "B2LineJoint"];
  ek.__super__ = Kb;
  ek.prototype = x(Kb.prototype, {
    getAnchorA: function () {
      return this.m_bodyA.getWorldPoint(this.m_localAnchor1);
    },
    getAnchorB: function () {
      return this.m_bodyB.getWorldPoint(this.m_localAnchor2);
    },
    getReactionForce: function (a) {
      return new D(
        a *
          (this.m_impulse.x * this.m_perp.x +
            (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.x),
        a *
          (this.m_impulse.x * this.m_perp.y +
            (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.y)
      );
    },
    getReactionTorque: function (a) {
      return a * this.m_impulse.y;
    },
    getJointTranslation: function () {
      var a = this.m_bodyA,
        b = this.m_bodyB,
        c = a.getWorldPoint(this.m_localAnchor1),
        d = b.getWorldPoint(this.m_localAnchor2);
      b = d.x - c.x;
      c = d.y - c.y;
      a = a.getWorldVector(this.m_localXAxis1);
      return a.x * b + a.y * c;
    },
    getJointSpeed: function () {
      var a = this.m_bodyA,
        b = this.m_bodyB,
        c = a.m_xf.R,
        d = this.m_localAnchor1.x - a.m_sweep.localCenter.x,
        e = this.m_localAnchor1.y - a.m_sweep.localCenter.y,
        f = c.col1.x * d + c.col2.x * e;
      e = c.col1.y * d + c.col2.y * e;
      d = f;
      c = b.m_xf.R;
      var g = this.m_localAnchor2.x - b.m_sweep.localCenter.x,
        h = this.m_localAnchor2.y - b.m_sweep.localCenter.y;
      f = c.col1.x * g + c.col2.x * h;
      h = c.col1.y * g + c.col2.y * h;
      g = f;
      c = b.m_sweep.c.x + g - (a.m_sweep.c.x + d);
      f = b.m_sweep.c.y + h - (a.m_sweep.c.y + e);
      var n = a.getWorldVector(this.m_localXAxis1),
        k = a.m_linearVelocity,
        G = b.m_linearVelocity;
      a = a.m_angularVelocity;
      b = b.m_angularVelocity;
      return (
        c * -a * n.y +
        f * a * n.x +
        (n.x * (G.x + -b * h - k.x - -a * e) +
          n.y * (G.y + b * g - k.y - a * d))
      );
    },
    isLimitEnabled: function () {
      return this.m_enableLimit;
    },
    enableLimit: function (a) {
      this.m_bodyA.setAwake(!0);
      this.m_bodyB.setAwake(!0);
      this.m_enableLimit = a;
    },
    getLowerLimit: function () {
      return this.m_lowerTranslation;
    },
    getUpperLimit: function () {
      return this.m_upperTranslation;
    },
    setLimits: function (a, b) {
      this.m_bodyA.setAwake(!0);
      this.m_bodyB.setAwake(!0);
      this.m_lowerTranslation = a;
      this.m_upperTranslation = b;
    },
    isMotorEnabled: function () {
      return this.m_enableMotor;
    },
    enableMotor: function (a) {
      this.m_bodyA.setAwake(!0);
      this.m_bodyB.setAwake(!0);
      this.m_enableMotor = a;
    },
    setMotorSpeed: function (a) {
      this.m_bodyA.setAwake(!0);
      this.m_bodyB.setAwake(!0);
      this.m_motorSpeed = a;
    },
    getMotorSpeed: function () {
      return this.m_motorSpeed;
    },
    setMaxMotorForce: function (a) {
      this.m_bodyA.setAwake(!0);
      this.m_bodyB.setAwake(!0);
      this.m_maxMotorForce = a;
    },
    getMaxMotorForce: function () {
      return this.m_maxMotorForce;
    },
    getMotorForce: function () {
      return this.m_motorImpulse;
    },
    initVelocityConstraints: function (a) {
      var b = this.m_bodyA,
        c = this.m_bodyB;
      var d = this.m_localCenterA;
      var e = b.getLocalCenter();
      d.x = e.x;
      d.y = e.y;
      d = this.m_localCenterB;
      e = c.getLocalCenter();
      d.x = e.x;
      d.y = e.y;
      var f = b.getTransform();
      c.getTransform();
      d = b.m_xf.R;
      var g = this.m_localAnchor1.x - this.m_localCenterA.x,
        h = this.m_localAnchor1.y - this.m_localCenterA.y;
      e = d.col1.x * g + d.col2.x * h;
      h = d.col1.y * g + d.col2.y * h;
      g = e;
      d = c.m_xf.R;
      var n = this.m_localAnchor2.x - this.m_localCenterB.x,
        k = this.m_localAnchor2.y - this.m_localCenterB.y;
      e = d.col1.x * n + d.col2.x * k;
      k = d.col1.y * n + d.col2.y * k;
      n = e;
      d = c.m_sweep.c.x + n - b.m_sweep.c.x - g;
      e = c.m_sweep.c.y + k - b.m_sweep.c.y - h;
      this.m_invMassA = b.m_invMass;
      this.m_invMassB = c.m_invMass;
      this.m_invIA = b.m_invI;
      this.m_invIB = c.m_invI;
      var G = this.m_axis,
        l = E.mulMV(f.R, this.m_localXAxis1);
      G.x = l.x;
      G.y = l.y;
      this.m_a1 = (d + g) * this.m_axis.y - (e + h) * this.m_axis.x;
      this.m_a2 = n * this.m_axis.y - k * this.m_axis.x;
      this.m_motorMass =
        this.m_invMassA +
        this.m_invMassB +
        this.m_invIA * this.m_a1 * this.m_a1 +
        this.m_invIB * this.m_a2 * this.m_a2;
      this.m_motorMass =
        this.m_motorMass > Number.MIN_VALUE ? 1 / this.m_motorMass : 0;
      G = this.m_perp;
      f = E.mulMV(f.R, this.m_localYAxis1);
      G.x = f.x;
      G.y = f.y;
      this.m_s1 = (d + g) * this.m_perp.y - (e + h) * this.m_perp.x;
      this.m_s2 = n * this.m_perp.y - k * this.m_perp.x;
      g = this.m_invMassA;
      h = this.m_invMassB;
      n = this.m_invIA;
      k = this.m_invIB;
      this.m_K.col1.x =
        g + h + n * this.m_s1 * this.m_s1 + k * this.m_s2 * this.m_s2;
      this.m_K.col1.y = n * this.m_s1 * this.m_a1 + k * this.m_s2 * this.m_a2;
      this.m_K.col2.x = this.m_K.col1.y;
      this.m_K.col2.y =
        g + h + n * this.m_a1 * this.m_a1 + k * this.m_a2 * this.m_a2;
      this.m_enableLimit
        ? ((d = this.m_axis.x * d + this.m_axis.y * e),
          E.abs(this.m_upperTranslation - this.m_lowerTranslation) <
          2 * R.b2_linearSlop
            ? (this.m_limitState = 3)
            : d <= this.m_lowerTranslation
            ? 1 != this.m_limitState &&
              ((this.m_limitState = 1), (this.m_impulse.y = 0))
            : d >= this.m_upperTranslation
            ? 2 != this.m_limitState &&
              ((this.m_limitState = 2), (this.m_impulse.y = 0))
            : ((this.m_limitState = 0), (this.m_impulse.y = 0)))
        : (this.m_limitState = 0);
      0 == this.m_enableMotor && (this.m_motorImpulse = 0);
      a.warmStarting
        ? ((this.m_impulse.x *= a.dtRatio),
          (this.m_impulse.y *= a.dtRatio),
          (this.m_motorImpulse *= a.dtRatio),
          (a =
            this.m_impulse.x * this.m_perp.x +
            (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.x),
          (d =
            this.m_impulse.x * this.m_perp.y +
            (this.m_motorImpulse + this.m_impulse.y) * this.m_axis.y),
          (e =
            this.m_impulse.x * this.m_s1 +
            (this.m_motorImpulse + this.m_impulse.y) * this.m_a1),
          (g =
            this.m_impulse.x * this.m_s2 +
            (this.m_motorImpulse + this.m_impulse.y) * this.m_a2),
          (b.m_linearVelocity.x -= this.m_invMassA * a),
          (b.m_linearVelocity.y -= this.m_invMassA * d),
          (b.m_angularVelocity -= this.m_invIA * e),
          (c.m_linearVelocity.x += this.m_invMassB * a),
          (c.m_linearVelocity.y += this.m_invMassB * d),
          (c.m_angularVelocity += this.m_invIB * g))
        : ((b = this.m_impulse), (b.x = 0), (this.m_motorImpulse = b.y = 0));
    },
    solveVelocityConstraints: function (a) {
      var b = this.m_bodyA,
        c = this.m_bodyB,
        d = b.m_linearVelocity,
        e = b.m_angularVelocity,
        f = c.m_linearVelocity,
        g = c.m_angularVelocity;
      if (this.m_enableMotor && 3 != this.m_limitState) {
        var h =
          this.m_motorMass *
          (this.m_motorSpeed -
            (this.m_axis.x * (f.x - d.x) +
              this.m_axis.y * (f.y - d.y) +
              this.m_a2 * g -
              this.m_a1 * e));
        var n = this.m_motorImpulse;
        a = a.dt * this.m_maxMotorForce;
        this.m_motorImpulse = E.clamp(this.m_motorImpulse + h, -a, a);
        h = this.m_motorImpulse - n;
        n = h * this.m_axis.x;
        a = h * this.m_axis.y;
        var k = h * this.m_a1;
        h *= this.m_a2;
        d.x -= this.m_invMassA * n;
        d.y -= this.m_invMassA * a;
        e -= this.m_invIA * k;
        f.x += this.m_invMassB * n;
        f.y += this.m_invMassB * a;
        g += this.m_invIB * h;
      }
      a =
        this.m_perp.x * (f.x - d.x) +
        this.m_perp.y * (f.y - d.y) +
        this.m_s2 * g -
        this.m_s1 * e;
      this.m_enableLimit && 0 != this.m_limitState
        ? ((k =
            this.m_axis.x * (f.x - d.x) +
            this.m_axis.y * (f.y - d.y) +
            this.m_a2 * g -
            this.m_a1 * e),
          (n = this.m_impulse.copy()),
          (h = this.m_K.solve(new D(), -a, -k)),
          this.m_impulse.add(h),
          1 == this.m_limitState
            ? (this.m_impulse.y = E.max(this.m_impulse.y, 0))
            : 2 == this.m_limitState &&
              (this.m_impulse.y = E.min(this.m_impulse.y, 0)),
          (a = -a - (this.m_impulse.y - n.y) * this.m_K.col2.x),
          (this.m_impulse.x =
            0 != this.m_K.col1.x ? a / this.m_K.col1.x + n.x : n.x),
          (h.x = this.m_impulse.x - n.x),
          (h.y = this.m_impulse.y - n.y),
          (n = h.x * this.m_perp.x + h.y * this.m_axis.x),
          (a = h.x * this.m_perp.y + h.y * this.m_axis.y),
          (k = h.x * this.m_s1 + h.y * this.m_a1),
          (h = h.x * this.m_s2 + h.y * this.m_a2))
        : ((h = 0 != this.m_K.col1.x ? -a / this.m_K.col1.x : 0),
          (this.m_impulse.x += h),
          (n = h * this.m_perp.x),
          (a = h * this.m_perp.y),
          (k = h * this.m_s1),
          (h *= this.m_s2));
      d.x -= this.m_invMassA * n;
      d.y -= this.m_invMassA * a;
      e -= this.m_invIA * k;
      f.x += this.m_invMassB * n;
      f.y += this.m_invMassB * a;
      g += this.m_invIB * h;
      n = b.m_linearVelocity;
      n.x = d.x;
      n.y = d.y;
      b.m_angularVelocity = e;
      b = c.m_linearVelocity;
      b.x = f.x;
      b.y = f.y;
      c.m_angularVelocity = g;
    },
    solvePositionConstraints: function (a) {
      a = this.m_bodyA;
      var b = this.m_bodyB,
        c = a.m_sweep.c,
        d = a.m_sweep.a,
        e = b.m_sweep.c,
        f = b.m_sweep.a,
        g = 0;
      var h = !1;
      var n = 0,
        k = uc.fromAngle(d);
      var G = uc.fromAngle(f);
      var l = k;
      var m = this.m_localAnchor1.x - this.m_localCenterA.x;
      var r = this.m_localAnchor1.y - this.m_localCenterA.y;
      var p = l.col1.x * m + l.col2.x * r;
      r = l.col1.y * m + l.col2.y * r;
      m = p;
      l = G;
      G = this.m_localAnchor2.x - this.m_localCenterB.x;
      var q = this.m_localAnchor2.y - this.m_localCenterB.y;
      p = l.col1.x * G + l.col2.x * q;
      q = l.col1.y * G + l.col2.y * q;
      G = p;
      l = e.x + G - c.x - m;
      p = e.y + q - c.y - r;
      if (this.m_enableLimit) {
        this.m_axis = E.mulMV(k, this.m_localXAxis1);
        this.m_a1 = (l + m) * this.m_axis.y - (p + r) * this.m_axis.x;
        this.m_a2 = G * this.m_axis.y - q * this.m_axis.x;
        var t = this.m_axis.x * l + this.m_axis.y * p;
        E.abs(this.m_upperTranslation - this.m_lowerTranslation) <
        2 * R.b2_linearSlop
          ? ((n = E.clamp(
              t,
              -R.b2_maxLinearCorrection,
              R.b2_maxLinearCorrection
            )),
            (g = E.abs(t)),
            (h = !0))
          : t <= this.m_lowerTranslation
          ? ((n = E.clamp(
              t - this.m_lowerTranslation + R.b2_linearSlop,
              -R.b2_maxLinearCorrection,
              0
            )),
            (g = this.m_lowerTranslation - t),
            (h = !0))
          : t >= this.m_upperTranslation &&
            ((n = E.clamp(
              t - this.m_upperTranslation + R.b2_linearSlop,
              0,
              R.b2_maxLinearCorrection
            )),
            (g = t - this.m_upperTranslation),
            (h = !0));
      }
      this.m_perp = E.mulMV(k, this.m_localYAxis1);
      this.m_s1 = (l + m) * this.m_perp.y - (p + r) * this.m_perp.x;
      this.m_s2 = G * this.m_perp.y - q * this.m_perp.x;
      k = new D();
      m = this.m_perp.x * l + this.m_perp.y * p;
      g = E.max(g, E.abs(m));
      h
        ? ((h = this.m_invMassA),
          (r = this.m_invMassB),
          (G = this.m_invIA),
          (q = this.m_invIB),
          (this.m_K.col1.x =
            h + r + G * this.m_s1 * this.m_s1 + q * this.m_s2 * this.m_s2),
          (this.m_K.col1.y =
            G * this.m_s1 * this.m_a1 + q * this.m_s2 * this.m_a2),
          (this.m_K.col2.x = this.m_K.col1.y),
          (this.m_K.col2.y =
            h + r + G * this.m_a1 * this.m_a1 + q * this.m_a2 * this.m_a2),
          this.m_K.solve(k, -m, -n))
        : ((h = this.m_invMassA),
          (r = this.m_invMassB),
          (G = this.m_invIA),
          (q = this.m_invIB),
          (n = h + r + G * this.m_s1 * this.m_s1 + q * this.m_s2 * this.m_s2),
          (k.x = 0 != n ? -m / n : 0),
          (k.y = 0));
      n = k.x * this.m_perp.x + k.y * this.m_axis.x;
      h = k.x * this.m_perp.y + k.y * this.m_axis.y;
      m = k.x * this.m_s1 + k.y * this.m_a1;
      k = k.x * this.m_s2 + k.y * this.m_a2;
      c.x -= this.m_invMassA * n;
      c.y -= this.m_invMassA * h;
      d -= this.m_invIA * m;
      e.x += this.m_invMassB * n;
      e.y += this.m_invMassB * h;
      f += this.m_invIB * k;
      a.m_sweep.a = d;
      b.m_sweep.a = f;
      a.synchronizeTransform();
      b.synchronizeTransform();
      return g <= R.b2_linearSlop ? 0 <= R.b2_angularSlop : !1;
    },
    m_localAnchor1: null,
    m_localAnchor2: null,
    m_localXAxis1: null,
    m_localYAxis1: null,
    m_axis: null,
    m_perp: null,
    m_s1: null,
    m_s2: null,
    m_a1: null,
    m_a2: null,
    m_K: null,
    m_impulse: null,
    m_motorMass: null,
    m_motorImpulse: null,
    m_lowerTranslation: null,
    m_upperTranslation: null,
    m_maxMotorForce: null,
    m_motorSpeed: null,
    m_enableLimit: null,
    m_enableMotor: null,
    m_limitState: null,
    __class__: ek,
  });
  var ni = function () {
    Sc.call(this);
    this.localAnchorA = new D();
    this.localAnchorB = new D();
    this.localAxisA = new D();
    this.type = 7;
    var a = this.localAxisA;
    a.x = 1;
    a.y = 0;
    this.enableLimit = !1;
    this.upperTranslation = this.lowerTranslation = 0;
    this.enableMotor = !1;
    this.motorSpeed = this.maxMotorForce = 0;
  };
  p["box2D.dynamics.joints.B2LineJointDef"] = ni;
  ni.__name__ = ["box2D", "dynamics", "joints", "B2LineJointDef"];
  ni.__super__ = Sc;
  ni.prototype = x(Sc.prototype, {
    initialize: function (a, b, c, d) {
      this.bodyA = a;
      this.bodyB = b;
      this.localAnchorA = this.bodyA.getLocalPoint(c);
      this.localAnchorB = this.bodyB.getLocalPoint(c);
      this.localAxisA = this.bodyA.getLocalVector(d);
    },
    localAnchorA: null,
    localAnchorB: null,
    localAxisA: null,
    enableLimit: null,
    lowerTranslation: null,
    upperTranslation: null,
    enableMotor: null,
    maxMotorForce: null,
    motorSpeed: null,
    __class__: ni,
  });
  var Gl = function (a) {
    Kb.call(this, a);
    this.K = new uc();
    this.K1 = new uc();
    this.K2 = new uc();
    this.m_localAnchor = new D();
    this.m_target = new D();
    this.m_impulse = new D();
    this.m_mass = new uc();
    this.m_C = new D();
    var b = this.m_target,
      c = a.target;
    b.x = c.x;
    b.y = c.y;
    b = this.m_target.x - this.m_bodyB.m_xf.position.x;
    c = this.m_target.y - this.m_bodyB.m_xf.position.y;
    var d = this.m_bodyB.m_xf.R;
    this.m_localAnchor.x = b * d.col1.x + c * d.col1.y;
    this.m_localAnchor.y = b * d.col2.x + c * d.col2.y;
    this.m_maxForce = a.maxForce;
    b = this.m_impulse;
    b.x = 0;
    b.y = 0;
    this.m_frequencyHz = a.frequencyHz;
    this.m_dampingRatio = a.dampingRatio;
    this.m_gamma = this.m_beta = 0;
  };
  p["box2D.dynamics.joints.B2MouseJoint"] = Gl;
  Gl.__name__ = ["box2D", "dynamics", "joints", "B2MouseJoint"];
  Gl.__super__ = Kb;
  Gl.prototype = x(Kb.prototype, {
    getAnchorA: function () {
      return this.m_target;
    },
    getAnchorB: function () {
      return this.m_bodyB.getWorldPoint(this.m_localAnchor);
    },
    getReactionForce: function (a) {
      return new D(a * this.m_impulse.x, a * this.m_impulse.y);
    },
    getReactionTorque: function (a) {
      return 0;
    },
    getTarget: function () {
      return this.m_target;
    },
    setTarget: function (a) {
      0 == this.m_bodyB.isAwake() && this.m_bodyB.setAwake(!0);
      this.m_target = a;
    },
    getMaxForce: function () {
      return this.m_maxForce;
    },
    setMaxForce: function (a) {
      this.m_maxForce = a;
    },
    getFrequency: function () {
      return this.m_frequencyHz;
    },
    setFrequency: function (a) {
      this.m_frequencyHz = a;
    },
    getDampingRatio: function () {
      return this.m_dampingRatio;
    },
    setDampingRatio: function (a) {
      this.m_dampingRatio = a;
    },
    K: null,
    K1: null,
    K2: null,
    initVelocityConstraints: function (a) {
      var b = this.m_bodyB,
        c = b.getMass(),
        d = 2 * Math.PI * this.m_frequencyHz,
        e = c * d * d;
      this.m_gamma = a.dt * (2 * c * this.m_dampingRatio * d + a.dt * e);
      this.m_gamma = 0 != this.m_gamma ? 1 / this.m_gamma : 0;
      this.m_beta = a.dt * e * this.m_gamma;
      e = b.m_xf.R;
      c = this.m_localAnchor.x - b.m_sweep.localCenter.x;
      d = this.m_localAnchor.y - b.m_sweep.localCenter.y;
      var f = e.col1.x * c + e.col2.x * d;
      d = e.col1.y * c + e.col2.y * d;
      c = f;
      e = b.m_invMass;
      f = b.m_invI;
      this.K1.col1.x = e;
      this.K1.col2.x = 0;
      this.K1.col1.y = 0;
      this.K1.col2.y = e;
      this.K2.col1.x = f * d * d;
      this.K2.col2.x = -f * c * d;
      this.K2.col1.y = -f * c * d;
      this.K2.col2.y = f * c * c;
      this.K.setM(this.K1);
      this.K.addM(this.K2);
      this.K.col1.x += this.m_gamma;
      this.K.col2.y += this.m_gamma;
      this.K.getInverse(this.m_mass);
      this.m_C.x = b.m_sweep.c.x + c - this.m_target.x;
      this.m_C.y = b.m_sweep.c.y + d - this.m_target.y;
      b.m_angularVelocity *= 0.98;
      this.m_impulse.x *= a.dtRatio;
      this.m_impulse.y *= a.dtRatio;
      b.m_linearVelocity.x += e * this.m_impulse.x;
      b.m_linearVelocity.y += e * this.m_impulse.y;
      b.m_angularVelocity += f * (c * this.m_impulse.y - d * this.m_impulse.x);
    },
    solveVelocityConstraints: function (a) {
      var b = this.m_bodyB;
      var c = b.m_xf.R;
      var d = this.m_localAnchor.x - b.m_sweep.localCenter.x,
        e = this.m_localAnchor.y - b.m_sweep.localCenter.y;
      var f = c.col1.x * d + c.col2.x * e;
      e = c.col1.y * d + c.col2.y * e;
      d = f;
      f = b.m_linearVelocity.x + -b.m_angularVelocity * e;
      var g = b.m_linearVelocity.y + b.m_angularVelocity * d;
      c = this.m_mass;
      f = f + this.m_beta * this.m_C.x + this.m_gamma * this.m_impulse.x;
      var h = g + this.m_beta * this.m_C.y + this.m_gamma * this.m_impulse.y;
      g = -(c.col1.x * f + c.col2.x * h);
      h = -(c.col1.y * f + c.col2.y * h);
      c = this.m_impulse.x;
      f = this.m_impulse.y;
      this.m_impulse.x += g;
      this.m_impulse.y += h;
      a = a.dt * this.m_maxForce;
      this.m_impulse.lengthSquared() > a * a &&
        this.m_impulse.multiply(a / this.m_impulse.length());
      g = this.m_impulse.x - c;
      h = this.m_impulse.y - f;
      b.m_linearVelocity.x += b.m_invMass * g;
      b.m_linearVelocity.y += b.m_invMass * h;
      b.m_angularVelocity += b.m_invI * (d * h - e * g);
    },
    solvePositionConstraints: function (a) {
      return !0;
    },
    m_localAnchor: null,
    m_target: null,
    m_impulse: null,
    m_mass: null,
    m_C: null,
    m_maxForce: null,
    m_frequencyHz: null,
    m_dampingRatio: null,
    m_beta: null,
    m_gamma: null,
    __class__: Gl,
  });
  var Hl = function () {
    Sc.call(this);
    this.target = new D();
    this.type = 5;
    this.maxForce = 0;
    this.frequencyHz = 5;
    this.dampingRatio = 0.7;
  };
  p["box2D.dynamics.joints.B2MouseJointDef"] = Hl;
  Hl.__name__ = ["box2D", "dynamics", "joints", "B2MouseJointDef"];
  Hl.__super__ = Sc;
  Hl.prototype = x(Sc.prototype, {
    target: null,
    maxForce: null,
    frequencyHz: null,
    dampingRatio: null,
    __class__: Hl,
  });
  var Xi = function (a) {
    Kb.call(this, a);
    this.m_localAnchor1 = new D();
    this.m_localAnchor2 = new D();
    this.m_localXAxis1 = new D();
    this.m_localYAxis1 = new D();
    this.m_axis = new D();
    this.m_perp = new D();
    this.m_K = new ji();
    this.m_impulse = new lf();
    var b = this.m_localAnchor1,
      c = a.localAnchorA;
    b.x = c.x;
    b.y = c.y;
    b = this.m_localAnchor2;
    c = a.localAnchorB;
    b.x = c.x;
    b.y = c.y;
    b = this.m_localXAxis1;
    c = a.localAxisA;
    b.x = c.x;
    b.y = c.y;
    this.m_localYAxis1.x = -this.m_localXAxis1.y;
    this.m_localYAxis1.y = this.m_localXAxis1.x;
    this.m_refAngle = a.referenceAngle;
    this.m_impulse.setZero();
    this.m_motorImpulse = this.m_motorMass = 0;
    this.m_lowerTranslation = a.lowerTranslation;
    this.m_upperTranslation = a.upperTranslation;
    this.m_maxMotorForce = a.maxMotorForce;
    this.m_motorSpeed = a.motorSpeed;
    this.m_enableLimit = a.enableLimit;
    this.m_enableMotor = a.enableMotor;
    this.m_limitState = 0;
    a = this.m_axis;
    a.x = 0;
    a.y = 0;
    a = this.m_perp;
    a.x = 0;
    a.y = 0;
  };
  p["box2D.dynamics.joints.B2PrismaticJoint"] = Xi;
  Xi.__name__ = ["box2D", "dynamics", "joints", "B2PrismaticJoint"];
  Xi.__super__ = Kb;
  Xi.prototype = x(Kb.prototype, {
    getAnchorA: function () {
      return this.m_bodyA.getWorldPoint(this.m_localAnchor1);
    },
    getAnchorB: function () {
      return this.m_bodyB.getWorldPoint(this.m_localAnchor2);
    },
    getReactionForce: function (a) {
      return new D(
        a *
          (this.m_impulse.x * this.m_perp.x +
            (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x),
        a *
          (this.m_impulse.x * this.m_perp.y +
            (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y)
      );
    },
    getReactionTorque: function (a) {
      return a * this.m_impulse.y;
    },
    getJointTranslation: function () {
      var a = this.m_bodyA,
        b = this.m_bodyB,
        c = a.getWorldPoint(this.m_localAnchor1),
        d = b.getWorldPoint(this.m_localAnchor2);
      b = d.x - c.x;
      c = d.y - c.y;
      a = a.getWorldVector(this.m_localXAxis1);
      return a.x * b + a.y * c;
    },
    getJointSpeed: function () {
      var a = this.m_bodyA,
        b = this.m_bodyB,
        c = a.m_xf.R,
        d = this.m_localAnchor1.x - a.m_sweep.localCenter.x,
        e = this.m_localAnchor1.y - a.m_sweep.localCenter.y,
        f = c.col1.x * d + c.col2.x * e;
      e = c.col1.y * d + c.col2.y * e;
      d = f;
      c = b.m_xf.R;
      var g = this.m_localAnchor2.x - b.m_sweep.localCenter.x,
        h = this.m_localAnchor2.y - b.m_sweep.localCenter.y;
      f = c.col1.x * g + c.col2.x * h;
      h = c.col1.y * g + c.col2.y * h;
      g = f;
      c = b.m_sweep.c.x + g - (a.m_sweep.c.x + d);
      f = b.m_sweep.c.y + h - (a.m_sweep.c.y + e);
      var n = a.getWorldVector(this.m_localXAxis1),
        k = a.m_linearVelocity,
        G = b.m_linearVelocity;
      a = a.m_angularVelocity;
      b = b.m_angularVelocity;
      return (
        c * -a * n.y +
        f * a * n.x +
        (n.x * (G.x + -b * h - k.x - -a * e) +
          n.y * (G.y + b * g - k.y - a * d))
      );
    },
    isLimitEnabled: function () {
      return this.m_enableLimit;
    },
    enableLimit: function (a) {
      this.m_bodyA.setAwake(!0);
      this.m_bodyB.setAwake(!0);
      this.m_enableLimit = a;
    },
    getLowerLimit: function () {
      return this.m_lowerTranslation;
    },
    getUpperLimit: function () {
      return this.m_upperTranslation;
    },
    setLimits: function (a, b) {
      this.m_bodyA.setAwake(!0);
      this.m_bodyB.setAwake(!0);
      this.m_lowerTranslation = a;
      this.m_upperTranslation = b;
    },
    isMotorEnabled: function () {
      return this.m_enableMotor;
    },
    enableMotor: function (a) {
      this.m_bodyA.setAwake(!0);
      this.m_bodyB.setAwake(!0);
      this.m_enableMotor = a;
    },
    setMotorSpeed: function (a) {
      this.m_bodyA.setAwake(!0);
      this.m_bodyB.setAwake(!0);
      this.m_motorSpeed = a;
    },
    getMotorSpeed: function () {
      return this.m_motorSpeed;
    },
    setMaxMotorForce: function (a) {
      this.m_bodyA.setAwake(!0);
      this.m_bodyB.setAwake(!0);
      this.m_maxMotorForce = a;
    },
    getMotorForce: function () {
      return this.m_motorImpulse;
    },
    initVelocityConstraints: function (a) {
      var b = this.m_bodyA,
        c = this.m_bodyB;
      var d = this.m_localCenterA;
      var e = b.getLocalCenter();
      d.x = e.x;
      d.y = e.y;
      d = this.m_localCenterB;
      e = c.getLocalCenter();
      d.x = e.x;
      d.y = e.y;
      var f = b.getTransform();
      c.getTransform();
      d = b.m_xf.R;
      var g = this.m_localAnchor1.x - this.m_localCenterA.x,
        h = this.m_localAnchor1.y - this.m_localCenterA.y;
      e = d.col1.x * g + d.col2.x * h;
      h = d.col1.y * g + d.col2.y * h;
      g = e;
      d = c.m_xf.R;
      var n = this.m_localAnchor2.x - this.m_localCenterB.x,
        k = this.m_localAnchor2.y - this.m_localCenterB.y;
      e = d.col1.x * n + d.col2.x * k;
      k = d.col1.y * n + d.col2.y * k;
      n = e;
      d = c.m_sweep.c.x + n - b.m_sweep.c.x - g;
      e = c.m_sweep.c.y + k - b.m_sweep.c.y - h;
      this.m_invMassA = b.m_invMass;
      this.m_invMassB = c.m_invMass;
      this.m_invIA = b.m_invI;
      this.m_invIB = c.m_invI;
      var G = this.m_axis,
        l = E.mulMV(f.R, this.m_localXAxis1);
      G.x = l.x;
      G.y = l.y;
      this.m_a1 = (d + g) * this.m_axis.y - (e + h) * this.m_axis.x;
      this.m_a2 = n * this.m_axis.y - k * this.m_axis.x;
      this.m_motorMass =
        this.m_invMassA +
        this.m_invMassB +
        this.m_invIA * this.m_a1 * this.m_a1 +
        this.m_invIB * this.m_a2 * this.m_a2;
      this.m_motorMass > Number.MIN_VALUE &&
        (this.m_motorMass = 1 / this.m_motorMass);
      G = this.m_perp;
      f = E.mulMV(f.R, this.m_localYAxis1);
      G.x = f.x;
      G.y = f.y;
      this.m_s1 = (d + g) * this.m_perp.y - (e + h) * this.m_perp.x;
      this.m_s2 = n * this.m_perp.y - k * this.m_perp.x;
      g = this.m_invMassA;
      h = this.m_invMassB;
      n = this.m_invIA;
      k = this.m_invIB;
      this.m_K.col1.x =
        g + h + n * this.m_s1 * this.m_s1 + k * this.m_s2 * this.m_s2;
      this.m_K.col1.y = n * this.m_s1 + k * this.m_s2;
      this.m_K.col1.z = n * this.m_s1 * this.m_a1 + k * this.m_s2 * this.m_a2;
      this.m_K.col2.x = this.m_K.col1.y;
      this.m_K.col2.y = n + k;
      this.m_K.col2.z = n * this.m_a1 + k * this.m_a2;
      this.m_K.col3.x = this.m_K.col1.z;
      this.m_K.col3.y = this.m_K.col2.z;
      this.m_K.col3.z =
        g + h + n * this.m_a1 * this.m_a1 + k * this.m_a2 * this.m_a2;
      this.m_enableLimit
        ? ((d = this.m_axis.x * d + this.m_axis.y * e),
          E.abs(this.m_upperTranslation - this.m_lowerTranslation) <
          2 * R.b2_linearSlop
            ? (this.m_limitState = 3)
            : d <= this.m_lowerTranslation
            ? 1 != this.m_limitState &&
              ((this.m_limitState = 1), (this.m_impulse.z = 0))
            : d >= this.m_upperTranslation
            ? 2 != this.m_limitState &&
              ((this.m_limitState = 2), (this.m_impulse.z = 0))
            : ((this.m_limitState = 0), (this.m_impulse.z = 0)))
        : (this.m_limitState = 0);
      0 == this.m_enableMotor && (this.m_motorImpulse = 0);
      a.warmStarting
        ? ((this.m_impulse.x *= a.dtRatio),
          (this.m_impulse.y *= a.dtRatio),
          (this.m_motorImpulse *= a.dtRatio),
          (a =
            this.m_impulse.x * this.m_perp.x +
            (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.x),
          (d =
            this.m_impulse.x * this.m_perp.y +
            (this.m_motorImpulse + this.m_impulse.z) * this.m_axis.y),
          (e =
            this.m_impulse.x * this.m_s1 +
            this.m_impulse.y +
            (this.m_motorImpulse + this.m_impulse.z) * this.m_a1),
          (g =
            this.m_impulse.x * this.m_s2 +
            this.m_impulse.y +
            (this.m_motorImpulse + this.m_impulse.z) * this.m_a2),
          (b.m_linearVelocity.x -= this.m_invMassA * a),
          (b.m_linearVelocity.y -= this.m_invMassA * d),
          (b.m_angularVelocity -= this.m_invIA * e),
          (c.m_linearVelocity.x += this.m_invMassB * a),
          (c.m_linearVelocity.y += this.m_invMassB * d),
          (c.m_angularVelocity += this.m_invIB * g))
        : (this.m_impulse.setZero(), (this.m_motorImpulse = 0));
    },
    solveVelocityConstraints: function (a) {
      var b = this.m_bodyA,
        c = this.m_bodyB,
        d = b.m_linearVelocity,
        e = b.m_angularVelocity,
        f = c.m_linearVelocity,
        g = c.m_angularVelocity;
      if (this.m_enableMotor && 3 != this.m_limitState) {
        var h =
          this.m_motorMass *
          (this.m_motorSpeed -
            (this.m_axis.x * (f.x - d.x) +
              this.m_axis.y * (f.y - d.y) +
              this.m_a2 * g -
              this.m_a1 * e));
        var n = this.m_motorImpulse;
        a = a.dt * this.m_maxMotorForce;
        this.m_motorImpulse = E.clamp(this.m_motorImpulse + h, -a, a);
        h = this.m_motorImpulse - n;
        n = h * this.m_axis.x;
        a = h * this.m_axis.y;
        var k = h * this.m_a1;
        h *= this.m_a2;
        d.x -= this.m_invMassA * n;
        d.y -= this.m_invMassA * a;
        e -= this.m_invIA * k;
        f.x += this.m_invMassB * n;
        f.y += this.m_invMassB * a;
        g += this.m_invIB * h;
      }
      k =
        this.m_perp.x * (f.x - d.x) +
        this.m_perp.y * (f.y - d.y) +
        this.m_s2 * g -
        this.m_s1 * e;
      a = g - e;
      this.m_enableLimit && 0 != this.m_limitState
        ? ((h =
            this.m_axis.x * (f.x - d.x) +
            this.m_axis.y * (f.y - d.y) +
            this.m_a2 * g -
            this.m_a1 * e),
          (n = this.m_impulse.copy()),
          (h = this.m_K.solve33(new lf(), -k, -a, -h)),
          this.m_impulse.add(h),
          1 == this.m_limitState
            ? (this.m_impulse.z = E.max(this.m_impulse.z, 0))
            : 2 == this.m_limitState &&
              (this.m_impulse.z = E.min(this.m_impulse.z, 0)),
          (k = -k - (this.m_impulse.z - n.z) * this.m_K.col3.x),
          (a = -a - (this.m_impulse.z - n.z) * this.m_K.col3.y),
          (a = this.m_K.solve22(new D(), k, a)),
          (a.x += n.x),
          (a.y += n.y),
          (this.m_impulse.x = a.x),
          (this.m_impulse.y = a.y),
          (h.x = this.m_impulse.x - n.x),
          (h.y = this.m_impulse.y - n.y),
          (h.z = this.m_impulse.z - n.z),
          (n = h.x * this.m_perp.x + h.z * this.m_axis.x),
          (a = h.x * this.m_perp.y + h.z * this.m_axis.y),
          (k = h.x * this.m_s1 + h.y + h.z * this.m_a1),
          (h = h.x * this.m_s2 + h.y + h.z * this.m_a2))
        : ((h = this.m_K.solve22(new D(), -k, -a)),
          (this.m_impulse.x += h.x),
          (this.m_impulse.y += h.y),
          (n = h.x * this.m_perp.x),
          (a = h.x * this.m_perp.y),
          (k = h.x * this.m_s1 + h.y),
          (h = h.x * this.m_s2 + h.y));
      d.x -= this.m_invMassA * n;
      d.y -= this.m_invMassA * a;
      e -= this.m_invIA * k;
      f.x += this.m_invMassB * n;
      f.y += this.m_invMassB * a;
      g += this.m_invIB * h;
      h = b.m_linearVelocity;
      h.x = d.x;
      h.y = d.y;
      b.m_angularVelocity = e;
      b = c.m_linearVelocity;
      b.x = f.x;
      b.y = f.y;
      c.m_angularVelocity = g;
    },
    solvePositionConstraints: function (a) {
      a = this.m_bodyA;
      var b = this.m_bodyB,
        c = a.m_sweep.c,
        d = a.m_sweep.a,
        e = b.m_sweep.c,
        f = b.m_sweep.a,
        g = 0;
      var h = !1;
      var n = 0,
        k = uc.fromAngle(d),
        G = uc.fromAngle(f);
      var l = k;
      var m = this.m_localAnchor1.x - this.m_localCenterA.x;
      var r = this.m_localAnchor1.y - this.m_localCenterA.y;
      var p = l.col1.x * m + l.col2.x * r;
      r = l.col1.y * m + l.col2.y * r;
      m = p;
      l = G;
      G = this.m_localAnchor2.x - this.m_localCenterB.x;
      var q = this.m_localAnchor2.y - this.m_localCenterB.y;
      p = l.col1.x * G + l.col2.x * q;
      q = l.col1.y * G + l.col2.y * q;
      G = p;
      l = e.x + G - c.x - m;
      p = e.y + q - c.y - r;
      if (this.m_enableLimit) {
        this.m_axis = E.mulMV(k, this.m_localXAxis1);
        this.m_a1 = (l + m) * this.m_axis.y - (p + r) * this.m_axis.x;
        this.m_a2 = G * this.m_axis.y - q * this.m_axis.x;
        var t = this.m_axis.x * l + this.m_axis.y * p;
        E.abs(this.m_upperTranslation - this.m_lowerTranslation) <
        2 * R.b2_linearSlop
          ? ((n = E.clamp(
              t,
              -R.b2_maxLinearCorrection,
              R.b2_maxLinearCorrection
            )),
            (g = E.abs(t)),
            (h = !0))
          : t <= this.m_lowerTranslation
          ? ((n = E.clamp(
              t - this.m_lowerTranslation + R.b2_linearSlop,
              -R.b2_maxLinearCorrection,
              0
            )),
            (g = this.m_lowerTranslation - t),
            (h = !0))
          : t >= this.m_upperTranslation &&
            ((n = E.clamp(
              t - this.m_upperTranslation + R.b2_linearSlop,
              0,
              R.b2_maxLinearCorrection
            )),
            (g = t - this.m_upperTranslation),
            (h = !0));
      }
      this.m_perp = E.mulMV(k, this.m_localYAxis1);
      this.m_s1 = (l + m) * this.m_perp.y - (p + r) * this.m_perp.x;
      this.m_s2 = G * this.m_perp.y - q * this.m_perp.x;
      k = new lf();
      r = this.m_perp.x * l + this.m_perp.y * p;
      G = f - d - this.m_refAngle;
      g = E.max(g, E.abs(r));
      m = E.abs(G);
      h
        ? ((h = this.m_invMassA),
          (q = this.m_invMassB),
          (l = this.m_invIA),
          (p = this.m_invIB),
          (this.m_K.col1.x =
            h + q + l * this.m_s1 * this.m_s1 + p * this.m_s2 * this.m_s2),
          (this.m_K.col1.y = l * this.m_s1 + p * this.m_s2),
          (this.m_K.col1.z =
            l * this.m_s1 * this.m_a1 + p * this.m_s2 * this.m_a2),
          (this.m_K.col2.x = this.m_K.col1.y),
          (this.m_K.col2.y = l + p),
          (this.m_K.col2.z = l * this.m_a1 + p * this.m_a2),
          (this.m_K.col3.x = this.m_K.col1.z),
          (this.m_K.col3.y = this.m_K.col2.z),
          (this.m_K.col3.z =
            h + q + l * this.m_a1 * this.m_a1 + p * this.m_a2 * this.m_a2),
          this.m_K.solve33(k, -r, -G, -n))
        : ((h = this.m_invMassA),
          (q = this.m_invMassB),
          (l = this.m_invIA),
          (p = this.m_invIB),
          (n = l * this.m_s1 + p * this.m_s2),
          (t = l + p),
          this.m_K.col1.set(
            h + q + l * this.m_s1 * this.m_s1 + p * this.m_s2 * this.m_s2,
            n,
            0
          ),
          this.m_K.col2.set(n, t, 0),
          (n = this.m_K.solve22(new D(), -r, -G)),
          (k.x = n.x),
          (k.y = n.y),
          (k.z = 0));
      n = k.x * this.m_perp.x + k.z * this.m_axis.x;
      h = k.x * this.m_perp.y + k.z * this.m_axis.y;
      r = k.x * this.m_s1 + k.y + k.z * this.m_a1;
      k = k.x * this.m_s2 + k.y + k.z * this.m_a2;
      c.x -= this.m_invMassA * n;
      c.y -= this.m_invMassA * h;
      d -= this.m_invIA * r;
      e.x += this.m_invMassB * n;
      e.y += this.m_invMassB * h;
      f += this.m_invIB * k;
      a.m_sweep.a = d;
      b.m_sweep.a = f;
      a.synchronizeTransform();
      b.synchronizeTransform();
      return g <= R.b2_linearSlop ? m <= R.b2_angularSlop : !1;
    },
    m_localAnchor1: null,
    m_localAnchor2: null,
    m_localXAxis1: null,
    m_localYAxis1: null,
    m_refAngle: null,
    m_axis: null,
    m_perp: null,
    m_s1: null,
    m_s2: null,
    m_a1: null,
    m_a2: null,
    m_K: null,
    m_impulse: null,
    m_motorMass: null,
    m_motorImpulse: null,
    m_lowerTranslation: null,
    m_upperTranslation: null,
    m_maxMotorForce: null,
    m_motorSpeed: null,
    m_enableLimit: null,
    m_enableMotor: null,
    m_limitState: null,
    __class__: Xi,
  });
  var Il = function () {
    Sc.call(this);
    this.localAnchorA = new D();
    this.localAnchorB = new D();
    this.localAxisA = new D();
    this.type = 2;
    var a = this.localAxisA;
    a.x = 1;
    this.referenceAngle = a.y = 0;
    this.enableLimit = !1;
    this.upperTranslation = this.lowerTranslation = 0;
    this.enableMotor = !1;
    this.motorSpeed = this.maxMotorForce = 0;
  };
  p["box2D.dynamics.joints.B2PrismaticJointDef"] = Il;
  Il.__name__ = ["box2D", "dynamics", "joints", "B2PrismaticJointDef"];
  Il.__super__ = Sc;
  Il.prototype = x(Sc.prototype, {
    initialize: function (a, b, c, d) {
      this.bodyA = a;
      this.bodyB = b;
      this.localAnchorA = this.bodyA.getLocalPoint(c);
      this.localAnchorB = this.bodyB.getLocalPoint(c);
      this.localAxisA = this.bodyA.getLocalVector(d);
      this.referenceAngle = this.bodyB.getAngle() - this.bodyA.getAngle();
    },
    localAnchorA: null,
    localAnchorB: null,
    localAxisA: null,
    referenceAngle: null,
    enableLimit: null,
    lowerTranslation: null,
    upperTranslation: null,
    enableMotor: null,
    maxMotorForce: null,
    motorSpeed: null,
    __class__: Il,
  });
  var Jg = function (a) {
    Kb.call(this, a);
    this.m_groundAnchor1 = new D();
    this.m_groundAnchor2 = new D();
    this.m_localAnchor1 = new D();
    this.m_localAnchor2 = new D();
    this.m_u1 = new D();
    this.m_u2 = new D();
    this.m_ground = this.m_bodyA.m_world.m_groundBody;
    this.m_groundAnchor1.x = a.groundAnchorA.x - this.m_ground.m_xf.position.x;
    this.m_groundAnchor1.y = a.groundAnchorA.y - this.m_ground.m_xf.position.y;
    this.m_groundAnchor2.x = a.groundAnchorB.x - this.m_ground.m_xf.position.x;
    this.m_groundAnchor2.y = a.groundAnchorB.y - this.m_ground.m_xf.position.y;
    var b = this.m_localAnchor1,
      c = a.localAnchorA;
    b.x = c.x;
    b.y = c.y;
    b = this.m_localAnchor2;
    c = a.localAnchorB;
    b.x = c.x;
    b.y = c.y;
    this.m_ratio = a.ratio;
    this.m_constant = a.lengthA + this.m_ratio * a.lengthB;
    this.m_maxLength1 = E.min(
      a.maxLengthA,
      this.m_constant - this.m_ratio * Jg.b2_minPulleyLength
    );
    this.m_maxLength2 = E.min(
      a.maxLengthB,
      (this.m_constant - Jg.b2_minPulleyLength) / this.m_ratio
    );
    this.m_limitImpulse2 = this.m_limitImpulse1 = this.m_impulse = 0;
  };
  p["box2D.dynamics.joints.B2PulleyJoint"] = Jg;
  Jg.__name__ = ["box2D", "dynamics", "joints", "B2PulleyJoint"];
  Jg.__super__ = Kb;
  Jg.prototype = x(Kb.prototype, {
    getAnchorA: function () {
      return this.m_bodyA.getWorldPoint(this.m_localAnchor1);
    },
    getAnchorB: function () {
      return this.m_bodyB.getWorldPoint(this.m_localAnchor2);
    },
    getReactionForce: function (a) {
      return new D(
        a * this.m_impulse * this.m_u2.x,
        a * this.m_impulse * this.m_u2.y
      );
    },
    getReactionTorque: function (a) {
      return 0;
    },
    getGroundAnchorA: function () {
      var a = this.m_ground.m_xf.position.copy();
      a.add(this.m_groundAnchor1);
      return a;
    },
    getGroundAnchorB: function () {
      var a = this.m_ground.m_xf.position.copy();
      a.add(this.m_groundAnchor2);
      return a;
    },
    getLength1: function () {
      var a = this.m_bodyA.getWorldPoint(this.m_localAnchor1),
        b = a.x - (this.m_ground.m_xf.position.x + this.m_groundAnchor1.x);
      a = a.y - (this.m_ground.m_xf.position.y + this.m_groundAnchor1.y);
      return Math.sqrt(b * b + a * a);
    },
    getLength2: function () {
      var a = this.m_bodyB.getWorldPoint(this.m_localAnchor2),
        b = a.x - (this.m_ground.m_xf.position.x + this.m_groundAnchor2.x);
      a = a.y - (this.m_ground.m_xf.position.y + this.m_groundAnchor2.y);
      return Math.sqrt(b * b + a * a);
    },
    getRatio: function () {
      return this.m_ratio;
    },
    initVelocityConstraints: function (a) {
      var b = this.m_bodyA,
        c = this.m_bodyB,
        d = b.m_xf.R,
        e = this.m_localAnchor1.x - b.m_sweep.localCenter.x,
        f = this.m_localAnchor1.y - b.m_sweep.localCenter.y,
        g = d.col1.x * e + d.col2.x * f;
      f = d.col1.y * e + d.col2.y * f;
      e = g;
      d = c.m_xf.R;
      var h = this.m_localAnchor2.x - c.m_sweep.localCenter.x,
        n = this.m_localAnchor2.y - c.m_sweep.localCenter.y;
      g = d.col1.x * h + d.col2.x * n;
      n = d.col1.y * h + d.col2.y * n;
      h = g;
      var k = b.m_sweep.c.y + f;
      d = c.m_sweep.c.x + h;
      g = c.m_sweep.c.y + n;
      var G = this.m_ground.m_xf.position.y + this.m_groundAnchor1.y,
        l = this.m_ground.m_xf.position.x + this.m_groundAnchor2.x,
        m = this.m_ground.m_xf.position.y + this.m_groundAnchor2.y,
        p = this.m_u1;
      p.x =
        b.m_sweep.c.x +
        e -
        (this.m_ground.m_xf.position.x + this.m_groundAnchor1.x);
      p.y = k - G;
      k = this.m_u2;
      k.x = d - l;
      k.y = g - m;
      d = this.m_u1.length();
      g = this.m_u2.length();
      d > R.b2_linearSlop
        ? this.m_u1.multiply(1 / d)
        : ((l = this.m_u1), (l.x = 0), (l.y = 0));
      g > R.b2_linearSlop
        ? this.m_u2.multiply(1 / g)
        : ((l = this.m_u2), (l.x = 0), (l.y = 0));
      0 < this.m_constant - d - this.m_ratio * g
        ? (this.m_impulse = this.m_state = 0)
        : (this.m_state = 2);
      d < this.m_maxLength1
        ? (this.m_limitImpulse1 = this.m_limitState1 = 0)
        : (this.m_limitState1 = 2);
      g < this.m_maxLength2
        ? (this.m_limitImpulse2 = this.m_limitState2 = 0)
        : (this.m_limitState2 = 2);
      d = e * this.m_u1.y - f * this.m_u1.x;
      g = h * this.m_u2.y - n * this.m_u2.x;
      this.m_limitMass1 = b.m_invMass + b.m_invI * d * d;
      this.m_limitMass2 = c.m_invMass + c.m_invI * g * g;
      this.m_pulleyMass =
        this.m_limitMass1 + this.m_ratio * this.m_ratio * this.m_limitMass2;
      this.m_limitMass1 = 1 / this.m_limitMass1;
      this.m_limitMass2 = 1 / this.m_limitMass2;
      this.m_pulleyMass = 1 / this.m_pulleyMass;
      a.warmStarting
        ? ((this.m_impulse *= a.dtRatio),
          (this.m_limitImpulse1 *= a.dtRatio),
          (this.m_limitImpulse2 *= a.dtRatio),
          (a = (-this.m_impulse - this.m_limitImpulse1) * this.m_u1.x),
          (d = (-this.m_impulse - this.m_limitImpulse1) * this.m_u1.y),
          (g =
            (-this.m_ratio * this.m_impulse - this.m_limitImpulse2) *
            this.m_u2.x),
          (l =
            (-this.m_ratio * this.m_impulse - this.m_limitImpulse2) *
            this.m_u2.y),
          (b.m_linearVelocity.x += b.m_invMass * a),
          (b.m_linearVelocity.y += b.m_invMass * d),
          (b.m_angularVelocity += b.m_invI * (e * d - f * a)),
          (c.m_linearVelocity.x += c.m_invMass * g),
          (c.m_linearVelocity.y += c.m_invMass * l),
          (c.m_angularVelocity += c.m_invI * (h * l - n * g)))
        : (this.m_limitImpulse2 = this.m_limitImpulse1 = this.m_impulse = 0);
    },
    solveVelocityConstraints: function (a) {
      a = this.m_bodyA;
      var b = this.m_bodyB,
        c = a.m_xf.R,
        d = this.m_localAnchor1.x - a.m_sweep.localCenter.x,
        e = this.m_localAnchor1.y - a.m_sweep.localCenter.y,
        f = c.col1.x * d + c.col2.x * e;
      e = c.col1.y * d + c.col2.y * e;
      d = f;
      c = b.m_xf.R;
      var g = this.m_localAnchor2.x - b.m_sweep.localCenter.x,
        h = this.m_localAnchor2.y - b.m_sweep.localCenter.y;
      f = c.col1.x * g + c.col2.x * h;
      h = c.col1.y * g + c.col2.y * h;
      g = f;
      if (2 == this.m_state) {
        c = a.m_linearVelocity.x + -a.m_angularVelocity * e;
        f = a.m_linearVelocity.y + a.m_angularVelocity * d;
        var n = b.m_linearVelocity.x + -b.m_angularVelocity * h;
        var k = b.m_linearVelocity.y + b.m_angularVelocity * g;
        c =
          -(this.m_u1.x * c + this.m_u1.y * f) -
          this.m_ratio * (this.m_u2.x * n + this.m_u2.y * k);
        k = this.m_pulleyMass * -c;
        c = this.m_impulse;
        this.m_impulse = E.max(0, this.m_impulse + k);
        k = this.m_impulse - c;
        c = -k * this.m_u1.x;
        f = -k * this.m_u1.y;
        n = -this.m_ratio * k * this.m_u2.x;
        k = -this.m_ratio * k * this.m_u2.y;
        a.m_linearVelocity.x += a.m_invMass * c;
        a.m_linearVelocity.y += a.m_invMass * f;
        a.m_angularVelocity += a.m_invI * (d * f - e * c);
        b.m_linearVelocity.x += b.m_invMass * n;
        b.m_linearVelocity.y += b.m_invMass * k;
        b.m_angularVelocity += b.m_invI * (g * k - h * n);
      }
      2 == this.m_limitState1 &&
        ((c = a.m_linearVelocity.x + -a.m_angularVelocity * e),
        (f = a.m_linearVelocity.y + a.m_angularVelocity * d),
        (c = -(this.m_u1.x * c + this.m_u1.y * f)),
        (k = -this.m_limitMass1 * c),
        (c = this.m_limitImpulse1),
        (this.m_limitImpulse1 = E.max(0, this.m_limitImpulse1 + k)),
        (k = this.m_limitImpulse1 - c),
        (c = -k * this.m_u1.x),
        (f = -k * this.m_u1.y),
        (a.m_linearVelocity.x += a.m_invMass * c),
        (a.m_linearVelocity.y += a.m_invMass * f),
        (a.m_angularVelocity += a.m_invI * (d * f - e * c)));
      2 == this.m_limitState2 &&
        ((n = b.m_linearVelocity.x + -b.m_angularVelocity * h),
        (k = b.m_linearVelocity.y + b.m_angularVelocity * g),
        (c = -(this.m_u2.x * n + this.m_u2.y * k)),
        (k = -this.m_limitMass2 * c),
        (c = this.m_limitImpulse2),
        (this.m_limitImpulse2 = E.max(0, this.m_limitImpulse2 + k)),
        (k = this.m_limitImpulse2 - c),
        (n = -k * this.m_u2.x),
        (k = -k * this.m_u2.y),
        (b.m_linearVelocity.x += b.m_invMass * n),
        (b.m_linearVelocity.y += b.m_invMass * k),
        (b.m_angularVelocity += b.m_invI * (g * k - h * n)));
    },
    solvePositionConstraints: function (a) {
      var b = this.m_bodyA;
      a = this.m_bodyB;
      var c = this.m_ground.m_xf.position.x + this.m_groundAnchor1.x,
        d = this.m_ground.m_xf.position.y + this.m_groundAnchor1.y,
        e = this.m_ground.m_xf.position.x + this.m_groundAnchor2.x,
        f = this.m_ground.m_xf.position.y + this.m_groundAnchor2.y,
        g = 0;
      if (2 == this.m_state) {
        var h = b.m_xf.R;
        var n = this.m_localAnchor1.x - b.m_sweep.localCenter.x;
        var k = this.m_localAnchor1.y - b.m_sweep.localCenter.y;
        var G = h.col1.x * n + h.col2.x * k;
        k = h.col1.y * n + h.col2.y * k;
        n = G;
        h = a.m_xf.R;
        var l = this.m_localAnchor2.x - a.m_sweep.localCenter.x;
        var m = this.m_localAnchor2.y - a.m_sweep.localCenter.y;
        G = h.col1.x * l + h.col2.x * m;
        m = h.col1.y * l + h.col2.y * m;
        l = G;
        G = b.m_sweep.c.x + n;
        var p = b.m_sweep.c.y + k;
        h = a.m_sweep.c.x + l;
        var r = a.m_sweep.c.y + m;
        var q = this.m_u1;
        q.x = G - c;
        q.y = p - d;
        G = this.m_u2;
        G.x = h - e;
        G.y = r - f;
        h = this.m_u1.length();
        G = this.m_u2.length();
        h > R.b2_linearSlop
          ? this.m_u1.multiply(1 / h)
          : ((p = this.m_u1), (p.x = 0), (p.y = 0));
        G > R.b2_linearSlop
          ? this.m_u2.multiply(1 / G)
          : ((p = this.m_u2), (p.x = 0), (p.y = 0));
        h = this.m_constant - h - this.m_ratio * G;
        g = E.max(g, -h);
        h = E.clamp(h + R.b2_linearSlop, -R.b2_maxLinearCorrection, 0);
        r = -this.m_pulleyMass * h;
        G = -r * this.m_u1.x;
        p = -r * this.m_u1.y;
        h = -this.m_ratio * r * this.m_u2.x;
        r = -this.m_ratio * r * this.m_u2.y;
        b.m_sweep.c.x += b.m_invMass * G;
        b.m_sweep.c.y += b.m_invMass * p;
        b.m_sweep.a += b.m_invI * (n * p - k * G);
        a.m_sweep.c.x += a.m_invMass * h;
        a.m_sweep.c.y += a.m_invMass * r;
        a.m_sweep.a += a.m_invI * (l * r - m * h);
        b.synchronizeTransform();
        a.synchronizeTransform();
      }
      2 == this.m_limitState1 &&
        ((h = b.m_xf.R),
        (n = this.m_localAnchor1.x - b.m_sweep.localCenter.x),
        (k = this.m_localAnchor1.y - b.m_sweep.localCenter.y),
        (G = h.col1.x * n + h.col2.x * k),
        (k = h.col1.y * n + h.col2.y * k),
        (n = G),
        (G = b.m_sweep.c.x + n),
        (p = b.m_sweep.c.y + k),
        (l = this.m_u1),
        (l.x = G - c),
        (l.y = p - d),
        (h = this.m_u1.length()),
        h > R.b2_linearSlop
          ? ((this.m_u1.x *= 1 / h), (this.m_u1.y *= 1 / h))
          : ((l = this.m_u1), (l.x = 0), (l.y = 0)),
        (h = this.m_maxLength1 - h),
        (g = E.max(g, -h)),
        (h = E.clamp(h + R.b2_linearSlop, -R.b2_maxLinearCorrection, 0)),
        (r = -this.m_limitMass1 * h),
        (G = -r * this.m_u1.x),
        (p = -r * this.m_u1.y),
        (b.m_sweep.c.x += b.m_invMass * G),
        (b.m_sweep.c.y += b.m_invMass * p),
        (b.m_sweep.a += b.m_invI * (n * p - k * G)),
        b.synchronizeTransform());
      2 == this.m_limitState2 &&
        ((h = a.m_xf.R),
        (l = this.m_localAnchor2.x - a.m_sweep.localCenter.x),
        (m = this.m_localAnchor2.y - a.m_sweep.localCenter.y),
        (G = h.col1.x * l + h.col2.x * m),
        (m = h.col1.y * l + h.col2.y * m),
        (l = G),
        (h = a.m_sweep.c.x + l),
        (r = a.m_sweep.c.y + m),
        (b = this.m_u2),
        (b.x = h - e),
        (b.y = r - f),
        (G = this.m_u2.length()),
        G > R.b2_linearSlop
          ? ((this.m_u2.x *= 1 / G), (this.m_u2.y *= 1 / G))
          : ((e = this.m_u2), (e.x = 0), (e.y = 0)),
        (h = this.m_maxLength2 - G),
        (g = E.max(g, -h)),
        (h = E.clamp(h + R.b2_linearSlop, -R.b2_maxLinearCorrection, 0)),
        (r = -this.m_limitMass2 * h),
        (h = -r * this.m_u2.x),
        (r = -r * this.m_u2.y),
        (a.m_sweep.c.x += a.m_invMass * h),
        (a.m_sweep.c.y += a.m_invMass * r),
        (a.m_sweep.a += a.m_invI * (l * r - m * h)),
        a.synchronizeTransform());
      return g < R.b2_linearSlop;
    },
    m_ground: null,
    m_groundAnchor1: null,
    m_groundAnchor2: null,
    m_localAnchor1: null,
    m_localAnchor2: null,
    m_u1: null,
    m_u2: null,
    m_constant: null,
    m_ratio: null,
    m_maxLength1: null,
    m_maxLength2: null,
    m_pulleyMass: null,
    m_limitMass1: null,
    m_limitMass2: null,
    m_impulse: null,
    m_limitImpulse1: null,
    m_limitImpulse2: null,
    m_state: null,
    m_limitState1: null,
    m_limitState2: null,
    __class__: Jg,
  });
  var Jl = function () {
    Sc.call(this);
    this.groundAnchorA = new D();
    this.groundAnchorB = new D();
    this.localAnchorA = new D();
    this.localAnchorB = new D();
    this.type = 4;
    var a = this.groundAnchorA;
    a.x = -1;
    a.y = 1;
    a = this.groundAnchorB;
    a.x = 1;
    a.y = 1;
    a = this.localAnchorA;
    a.x = -1;
    a.y = 0;
    a = this.localAnchorB;
    a.x = 1;
    this.maxLengthB = this.lengthB = this.maxLengthA = this.lengthA = a.y = 0;
    this.ratio = 1;
    this.collideConnected = !0;
  };
  p["box2D.dynamics.joints.B2PulleyJointDef"] = Jl;
  Jl.__name__ = ["box2D", "dynamics", "joints", "B2PulleyJointDef"];
  Jl.__super__ = Sc;
  Jl.prototype = x(Sc.prototype, {
    initialize: function (a, b, c, d, e, f, g) {
      this.bodyA = a;
      this.bodyB = b;
      a = this.groundAnchorA;
      a.x = c.x;
      a.y = c.y;
      a = this.groundAnchorB;
      a.x = d.x;
      a.y = d.y;
      this.localAnchorA = this.bodyA.getLocalPoint(e);
      this.localAnchorB = this.bodyB.getLocalPoint(f);
      a = e.x - c.x;
      c = e.y - c.y;
      this.lengthA = Math.sqrt(a * a + c * c);
      c = f.x - d.x;
      d = f.y - d.y;
      this.lengthB = Math.sqrt(c * c + d * d);
      this.ratio = g;
      g = this.lengthA + this.ratio * this.lengthB;
      this.maxLengthA = g - this.ratio * Jg.b2_minPulleyLength;
      this.maxLengthB = (g - Jg.b2_minPulleyLength) / this.ratio;
    },
    groundAnchorA: null,
    groundAnchorB: null,
    localAnchorA: null,
    localAnchorB: null,
    lengthA: null,
    maxLengthA: null,
    lengthB: null,
    maxLengthB: null,
    ratio: null,
    __class__: Jl,
  });
  var mg = function (a) {
    Kb.call(this, a);
    this.K = new uc();
    this.K1 = new uc();
    this.K2 = new uc();
    this.K3 = new uc();
    this.impulse3 = new lf();
    this.impulse2 = new D();
    this.reduced = new D();
    this.m_localAnchor1 = new D();
    this.m_localAnchor2 = new D();
    this.m_impulse = new lf();
    this.m_mass = new ji();
    var b = this.m_localAnchor1,
      c = a.localAnchorA;
    b.x = c.x;
    b.y = c.y;
    b = this.m_localAnchor2;
    c = a.localAnchorB;
    b.x = c.x;
    b.y = c.y;
    this.m_referenceAngle = a.referenceAngle;
    this.m_impulse.setZero();
    this.m_motorImpulse = 0;
    this.m_lowerAngle = a.lowerAngle;
    this.m_upperAngle = a.upperAngle;
    this.m_maxMotorTorque = a.maxMotorTorque;
    this.m_motorSpeed = a.motorSpeed;
    this.m_enableLimit = a.enableLimit;
    this.m_enableMotor = a.enableMotor;
    this.m_limitState = 0;
  };
  p["box2D.dynamics.joints.B2RevoluteJoint"] = mg;
  mg.__name__ = ["box2D", "dynamics", "joints", "B2RevoluteJoint"];
  mg.__super__ = Kb;
  mg.prototype = x(Kb.prototype, {
    getAnchorA: function () {
      return this.m_bodyA.getWorldPoint(this.m_localAnchor1);
    },
    getAnchorB: function () {
      return this.m_bodyB.getWorldPoint(this.m_localAnchor2);
    },
    getReactionForce: function (a) {
      return new D(a * this.m_impulse.x, a * this.m_impulse.y);
    },
    getReactionTorque: function (a) {
      return a * this.m_impulse.z;
    },
    getJointAngle: function () {
      return (
        this.m_bodyB.m_sweep.a - this.m_bodyA.m_sweep.a - this.m_referenceAngle
      );
    },
    getJointSpeed: function () {
      return this.m_bodyB.m_angularVelocity - this.m_bodyA.m_angularVelocity;
    },
    isLimitEnabled: function () {
      return this.m_enableLimit;
    },
    enableLimit: function (a) {
      this.m_enableLimit = a;
    },
    getLowerLimit: function () {
      return this.m_lowerAngle;
    },
    getUpperLimit: function () {
      return this.m_upperAngle;
    },
    setLimits: function (a, b) {
      this.m_lowerAngle = a;
      this.m_upperAngle = b;
    },
    isMotorEnabled: function () {
      this.m_bodyA.setAwake(!0);
      this.m_bodyB.setAwake(!0);
      return this.m_enableMotor;
    },
    enableMotor: function (a) {
      this.m_enableMotor = a;
    },
    setMotorSpeed: function (a) {
      this.m_bodyA.setAwake(!0);
      this.m_bodyB.setAwake(!0);
      this.m_motorSpeed = a;
    },
    getMotorSpeed: function () {
      return this.m_motorSpeed;
    },
    setMaxMotorTorque: function (a) {
      this.m_maxMotorTorque = a;
    },
    getMotorTorque: function () {
      return this.m_maxMotorTorque;
    },
    K: null,
    K1: null,
    K2: null,
    K3: null,
    initVelocityConstraints: function (a) {
      var b = this.m_bodyA,
        c = this.m_bodyB;
      var d = b.m_xf.R;
      var e = this.m_localAnchor1.x - b.m_sweep.localCenter.x,
        f = this.m_localAnchor1.y - b.m_sweep.localCenter.y;
      var g = d.col1.x * e + d.col2.x * f;
      f = d.col1.y * e + d.col2.y * f;
      e = g;
      d = c.m_xf.R;
      var h = this.m_localAnchor2.x - c.m_sweep.localCenter.x,
        n = this.m_localAnchor2.y - c.m_sweep.localCenter.y;
      g = d.col1.x * h + d.col2.x * n;
      n = d.col1.y * h + d.col2.y * n;
      h = g;
      d = b.m_invMass;
      g = c.m_invMass;
      var k = b.m_invI,
        m = c.m_invI;
      this.m_mass.col1.x = d + g + f * f * k + n * n * m;
      this.m_mass.col2.x = -f * e * k - n * h * m;
      this.m_mass.col3.x = -f * k - n * m;
      this.m_mass.col1.y = this.m_mass.col2.x;
      this.m_mass.col2.y = d + g + e * e * k + h * h * m;
      this.m_mass.col3.y = e * k + h * m;
      this.m_mass.col1.z = this.m_mass.col3.x;
      this.m_mass.col2.z = this.m_mass.col3.y;
      this.m_mass.col3.z = k + m;
      this.m_motorMass = 1 / (k + m);
      0 == this.m_enableMotor && (this.m_motorImpulse = 0);
      if (this.m_enableLimit) {
        var l = c.m_sweep.a - b.m_sweep.a - this.m_referenceAngle;
        E.abs(this.m_upperAngle - this.m_lowerAngle) < 2 * R.b2_angularSlop
          ? (this.m_limitState = 3)
          : l <= this.m_lowerAngle
          ? (1 != this.m_limitState && (this.m_impulse.z = 0),
            (this.m_limitState = 1))
          : l >= this.m_upperAngle
          ? (2 != this.m_limitState && (this.m_impulse.z = 0),
            (this.m_limitState = 2))
          : ((this.m_limitState = 0), (this.m_impulse.z = 0));
      } else this.m_limitState = 0;
      a.warmStarting
        ? ((this.m_impulse.x *= a.dtRatio),
          (this.m_impulse.y *= a.dtRatio),
          (this.m_motorImpulse *= a.dtRatio),
          (a = this.m_impulse.x),
          (l = this.m_impulse.y),
          (b.m_linearVelocity.x -= d * a),
          (b.m_linearVelocity.y -= d * l),
          (b.m_angularVelocity -=
            k * (e * l - f * a + this.m_motorImpulse + this.m_impulse.z)),
          (c.m_linearVelocity.x += g * a),
          (c.m_linearVelocity.y += g * l),
          (c.m_angularVelocity +=
            m * (h * l - n * a + this.m_motorImpulse + this.m_impulse.z)))
        : (this.m_impulse.setZero(), (this.m_motorImpulse = 0));
    },
    impulse3: null,
    impulse2: null,
    reduced: null,
    solveVelocityConstraints: function (a) {
      var b = this.m_bodyA,
        c = this.m_bodyB,
        d = b.m_linearVelocity,
        e = b.m_angularVelocity,
        f = c.m_linearVelocity,
        g = c.m_angularVelocity,
        h = b.m_invMass,
        n = c.m_invMass,
        k = b.m_invI,
        m = c.m_invI;
      if (this.m_enableMotor && 3 != this.m_limitState) {
        var l = this.m_motorMass * -(g - e - this.m_motorSpeed);
        var p = this.m_motorImpulse;
        a = a.dt * this.m_maxMotorTorque;
        this.m_motorImpulse = E.clamp(this.m_motorImpulse + l, -a, a);
        l = this.m_motorImpulse - p;
        e -= k * l;
        g += m * l;
      }
      if (this.m_enableLimit && 0 != this.m_limitState) {
        var r = b.m_xf.R;
        l = this.m_localAnchor1.x - b.m_sweep.localCenter.x;
        p = this.m_localAnchor1.y - b.m_sweep.localCenter.y;
        var q = r.col1.x * l + r.col2.x * p;
        p = r.col1.y * l + r.col2.y * p;
        l = q;
        r = c.m_xf.R;
        a = this.m_localAnchor2.x - c.m_sweep.localCenter.x;
        var t = this.m_localAnchor2.y - c.m_sweep.localCenter.y;
        q = r.col1.x * a + r.col2.x * t;
        t = r.col1.y * a + r.col2.y * t;
        a = q;
        q = f.x + -g * t - d.x - -e * p;
        var u = f.y + g * a - d.y - e * l;
        this.m_mass.solve33(this.impulse3, -q, -u, -(g - e));
        3 == this.m_limitState
          ? this.m_impulse.add(this.impulse3)
          : 1 == this.m_limitState
          ? ((r = this.m_impulse.z + this.impulse3.z),
            0 > r &&
              (this.m_mass.solve22(this.reduced, -q, -u),
              (this.impulse3.x = this.reduced.x),
              (this.impulse3.y = this.reduced.y),
              (this.impulse3.z = -this.m_impulse.z),
              (this.m_impulse.x += this.reduced.x),
              (this.m_impulse.y += this.reduced.y),
              (this.m_impulse.z = 0)))
          : 2 == this.m_limitState &&
            ((r = this.m_impulse.z + this.impulse3.z),
            0 < r &&
              (this.m_mass.solve22(this.reduced, -q, -u),
              (this.impulse3.x = this.reduced.x),
              (this.impulse3.y = this.reduced.y),
              (this.impulse3.z = -this.m_impulse.z),
              (this.m_impulse.x += this.reduced.x),
              (this.m_impulse.y += this.reduced.y),
              (this.m_impulse.z = 0)));
        d.x -= h * this.impulse3.x;
        d.y -= h * this.impulse3.y;
        e -= k * (l * this.impulse3.y - p * this.impulse3.x + this.impulse3.z);
        f.x += n * this.impulse3.x;
        f.y += n * this.impulse3.y;
        g += m * (a * this.impulse3.y - t * this.impulse3.x + this.impulse3.z);
      } else
        (r = b.m_xf.R),
          (l = this.m_localAnchor1.x - b.m_sweep.localCenter.x),
          (p = this.m_localAnchor1.y - b.m_sweep.localCenter.y),
          (q = r.col1.x * l + r.col2.x * p),
          (p = r.col1.y * l + r.col2.y * p),
          (l = q),
          (r = c.m_xf.R),
          (a = this.m_localAnchor2.x - c.m_sweep.localCenter.x),
          (t = this.m_localAnchor2.y - c.m_sweep.localCenter.y),
          (q = r.col1.x * a + r.col2.x * t),
          (t = r.col1.y * a + r.col2.y * t),
          (a = q),
          this.m_mass.solve22(
            this.impulse2,
            -(f.x + -g * t - d.x - -e * p),
            -(f.y + g * a - d.y - e * l)
          ),
          (this.m_impulse.x += this.impulse2.x),
          (this.m_impulse.y += this.impulse2.y),
          (d.x -= h * this.impulse2.x),
          (d.y -= h * this.impulse2.y),
          (e -= k * (l * this.impulse2.y - p * this.impulse2.x)),
          (f.x += n * this.impulse2.x),
          (f.y += n * this.impulse2.y),
          (g += m * (a * this.impulse2.y - t * this.impulse2.x));
      h = b.m_linearVelocity;
      h.x = d.x;
      h.y = d.y;
      b.m_angularVelocity = e;
      b = c.m_linearVelocity;
      b.x = f.x;
      b.y = f.y;
      c.m_angularVelocity = g;
    },
    solvePositionConstraints: function (a) {
      a = this.m_bodyA;
      var b = this.m_bodyB,
        c = 0;
      if (this.m_enableLimit && 0 != this.m_limitState) {
        var d = b.m_sweep.a - a.m_sweep.a - this.m_referenceAngle;
        var e = 0;
        3 == this.m_limitState
          ? ((d = E.clamp(
              d - this.m_lowerAngle,
              -R.b2_maxAngularCorrection,
              R.b2_maxAngularCorrection
            )),
            (e = -this.m_motorMass * d),
            (c = E.abs(d)))
          : 1 == this.m_limitState
          ? ((d -= this.m_lowerAngle),
            (c = -d),
            (d = E.clamp(d + R.b2_angularSlop, -R.b2_maxAngularCorrection, 0)),
            (e = -this.m_motorMass * d))
          : 2 == this.m_limitState &&
            ((c = d -= this.m_upperAngle),
            (d = E.clamp(d - R.b2_angularSlop, 0, R.b2_maxAngularCorrection)),
            (e = -this.m_motorMass * d));
        a.m_sweep.a -= a.m_invI * e;
        b.m_sweep.a += b.m_invI * e;
        a.synchronizeTransform();
        b.synchronizeTransform();
      }
      var f = a.m_xf.R;
      e = this.m_localAnchor1.x - a.m_sweep.localCenter.x;
      d = this.m_localAnchor1.y - a.m_sweep.localCenter.y;
      var g = f.col1.x * e + f.col2.x * d;
      d = f.col1.y * e + f.col2.y * d;
      e = g;
      f = b.m_xf.R;
      var h = this.m_localAnchor2.x - b.m_sweep.localCenter.x,
        n = this.m_localAnchor2.y - b.m_sweep.localCenter.y;
      g = f.col1.x * h + f.col2.x * n;
      n = f.col1.y * h + f.col2.y * n;
      h = g;
      var k = b.m_sweep.c.x + h - a.m_sweep.c.x - e;
      var m = b.m_sweep.c.y + n - a.m_sweep.c.y - d;
      var l = k * k + m * m;
      f = Math.sqrt(l);
      g = a.m_invMass;
      var r = b.m_invMass,
        p = a.m_invI,
        q = b.m_invI,
        t = 10 * R.b2_linearSlop;
      l > t * t &&
        ((l = 1 / (g + r)),
        (k = l * -k),
        (m = l * -m),
        (a.m_sweep.c.x -= 0.5 * g * k),
        (a.m_sweep.c.y -= 0.5 * g * m),
        (b.m_sweep.c.x += 0.5 * r * k),
        (b.m_sweep.c.y += 0.5 * r * m),
        (k = b.m_sweep.c.x + h - a.m_sweep.c.x - e),
        (m = b.m_sweep.c.y + n - a.m_sweep.c.y - d));
      this.K1.col1.x = g + r;
      this.K1.col2.x = 0;
      this.K1.col1.y = 0;
      this.K1.col2.y = g + r;
      this.K2.col1.x = p * d * d;
      this.K2.col2.x = -p * e * d;
      this.K2.col1.y = -p * e * d;
      this.K2.col2.y = p * e * e;
      this.K3.col1.x = q * n * n;
      this.K3.col2.x = -q * h * n;
      this.K3.col1.y = -q * h * n;
      this.K3.col2.y = q * h * h;
      this.K.setM(this.K1);
      this.K.addM(this.K2);
      this.K.addM(this.K3);
      this.K.solve(mg.tImpulse, -k, -m);
      k = mg.tImpulse.x;
      m = mg.tImpulse.y;
      a.m_sweep.c.x -= a.m_invMass * k;
      a.m_sweep.c.y -= a.m_invMass * m;
      a.m_sweep.a -= a.m_invI * (e * m - d * k);
      b.m_sweep.c.x += b.m_invMass * k;
      b.m_sweep.c.y += b.m_invMass * m;
      b.m_sweep.a += b.m_invI * (h * m - n * k);
      a.synchronizeTransform();
      b.synchronizeTransform();
      return f <= R.b2_linearSlop ? c <= R.b2_angularSlop : !1;
    },
    m_localAnchor1: null,
    m_localAnchor2: null,
    m_impulse: null,
    m_motorImpulse: null,
    m_mass: null,
    m_motorMass: null,
    m_enableMotor: null,
    m_maxMotorTorque: null,
    m_motorSpeed: null,
    m_enableLimit: null,
    m_referenceAngle: null,
    m_lowerAngle: null,
    m_upperAngle: null,
    m_limitState: null,
    __class__: mg,
  });
  var mi = function () {
    Sc.call(this);
    this.localAnchorA = new D();
    this.localAnchorB = new D();
    this.type = 1;
    var a = this.localAnchorA;
    a.x = 0;
    a.y = 0;
    a = this.localAnchorB;
    a.x = 0;
    this.motorSpeed =
      this.maxMotorTorque =
      this.upperAngle =
      this.lowerAngle =
      this.referenceAngle =
      a.y =
        0;
    this.enableMotor = this.enableLimit = !1;
  };
  p["box2D.dynamics.joints.B2RevoluteJointDef"] = mi;
  mi.__name__ = ["box2D", "dynamics", "joints", "B2RevoluteJointDef"];
  mi.__super__ = Sc;
  mi.prototype = x(Sc.prototype, {
    initialize: function (a, b, c) {
      this.bodyA = a;
      this.bodyB = b;
      this.localAnchorA = this.bodyA.getLocalPoint(c);
      this.localAnchorB = this.bodyB.getLocalPoint(c);
      this.referenceAngle = this.bodyB.getAngle() - this.bodyA.getAngle();
    },
    localAnchorA: null,
    localAnchorB: null,
    referenceAngle: null,
    enableLimit: null,
    lowerAngle: null,
    upperAngle: null,
    enableMotor: null,
    motorSpeed: null,
    maxMotorTorque: null,
    __class__: mi,
  });
  var Ml = function (a) {
    Kb.call(this, a);
    this.m_localAnchorA = new D();
    this.m_localAnchorB = new D();
    this.m_impulse = new lf();
    this.m_mass = new ji();
    var b = this.m_localAnchorA,
      c = a.localAnchorA;
    b.x = c.x;
    b.y = c.y;
    b = this.m_localAnchorB;
    c = a.localAnchorB;
    b.x = c.x;
    b.y = c.y;
    this.m_referenceAngle = a.referenceAngle;
    this.m_impulse.setZero();
    this.m_mass = new ji();
  };
  p["box2D.dynamics.joints.B2WeldJoint"] = Ml;
  Ml.__name__ = ["box2D", "dynamics", "joints", "B2WeldJoint"];
  Ml.__super__ = Kb;
  Ml.prototype = x(Kb.prototype, {
    getAnchorA: function () {
      return this.m_bodyA.getWorldPoint(this.m_localAnchorA);
    },
    getAnchorB: function () {
      return this.m_bodyB.getWorldPoint(this.m_localAnchorB);
    },
    getReactionForce: function (a) {
      return new D(a * this.m_impulse.x, a * this.m_impulse.y);
    },
    getReactionTorque: function (a) {
      return a * this.m_impulse.z;
    },
    initVelocityConstraints: function (a) {
      var b = this.m_bodyA,
        c = this.m_bodyB;
      var d = b.m_xf.R;
      var e = this.m_localAnchorA.x - b.m_sweep.localCenter.x,
        f = this.m_localAnchorA.y - b.m_sweep.localCenter.y;
      var g = d.col1.x * e + d.col2.x * f;
      f = d.col1.y * e + d.col2.y * f;
      e = g;
      d = c.m_xf.R;
      var h = this.m_localAnchorB.x - c.m_sweep.localCenter.x,
        n = this.m_localAnchorB.y - c.m_sweep.localCenter.y;
      g = d.col1.x * h + d.col2.x * n;
      n = d.col1.y * h + d.col2.y * n;
      h = g;
      d = b.m_invMass;
      g = c.m_invMass;
      var k = b.m_invI,
        m = c.m_invI;
      this.m_mass.col1.x = d + g + f * f * k + n * n * m;
      this.m_mass.col2.x = -f * e * k - n * h * m;
      this.m_mass.col3.x = -f * k - n * m;
      this.m_mass.col1.y = this.m_mass.col2.x;
      this.m_mass.col2.y = d + g + e * e * k + h * h * m;
      this.m_mass.col3.y = e * k + h * m;
      this.m_mass.col1.z = this.m_mass.col3.x;
      this.m_mass.col2.z = this.m_mass.col3.y;
      this.m_mass.col3.z = k + m;
      a.warmStarting
        ? ((this.m_impulse.x *= a.dtRatio),
          (this.m_impulse.y *= a.dtRatio),
          (this.m_impulse.z *= a.dtRatio),
          (b.m_linearVelocity.x -= d * this.m_impulse.x),
          (b.m_linearVelocity.y -= d * this.m_impulse.y),
          (b.m_angularVelocity -=
            k *
            (e * this.m_impulse.y - f * this.m_impulse.x + this.m_impulse.z)),
          (c.m_linearVelocity.x += g * this.m_impulse.x),
          (c.m_linearVelocity.y += g * this.m_impulse.y),
          (c.m_angularVelocity +=
            m *
            (h * this.m_impulse.y - n * this.m_impulse.x + this.m_impulse.z)))
        : this.m_impulse.setZero();
    },
    solveVelocityConstraints: function (a) {
      a = this.m_bodyA;
      var b = this.m_bodyB,
        c = a.m_linearVelocity,
        d = a.m_angularVelocity,
        e = b.m_linearVelocity,
        f = b.m_angularVelocity,
        g = a.m_invMass,
        h = b.m_invMass,
        n = a.m_invI,
        k = b.m_invI;
      var m = a.m_xf.R;
      var l = this.m_localAnchorA.x - a.m_sweep.localCenter.x,
        r = this.m_localAnchorA.y - a.m_sweep.localCenter.y;
      var p = m.col1.x * l + m.col2.x * r;
      r = m.col1.y * l + m.col2.y * r;
      l = p;
      m = b.m_xf.R;
      var q = this.m_localAnchorB.x - b.m_sweep.localCenter.x,
        t = this.m_localAnchorB.y - b.m_sweep.localCenter.y;
      p = m.col1.x * q + m.col2.x * t;
      t = m.col1.y * q + m.col2.y * t;
      q = p;
      m = e.x - f * t - c.x + d * r;
      p = e.y + f * q - c.y - d * l;
      var u = f - d,
        na = new lf();
      this.m_mass.solve33(na, -m, -p, -u);
      this.m_impulse.add(na);
      c.x -= g * na.x;
      c.y -= g * na.y;
      d -= n * (l * na.y - r * na.x + na.z);
      e.x += h * na.x;
      e.y += h * na.y;
      f += k * (q * na.y - t * na.x + na.z);
      a.m_angularVelocity = d;
      b.m_angularVelocity = f;
    },
    solvePositionConstraints: function (a) {
      a = this.m_bodyA;
      var b = this.m_bodyB;
      var c = a.m_xf.R;
      var d = this.m_localAnchorA.x - a.m_sweep.localCenter.x,
        e = this.m_localAnchorA.y - a.m_sweep.localCenter.y;
      var f = c.col1.x * d + c.col2.x * e;
      e = c.col1.y * d + c.col2.y * e;
      d = f;
      c = b.m_xf.R;
      var g = this.m_localAnchorB.x - b.m_sweep.localCenter.x,
        h = this.m_localAnchorB.y - b.m_sweep.localCenter.y;
      f = c.col1.x * g + c.col2.x * h;
      h = c.col1.y * g + c.col2.y * h;
      g = f;
      c = a.m_invMass;
      f = b.m_invMass;
      var n = a.m_invI,
        k = b.m_invI,
        m = b.m_sweep.c.x + g - a.m_sweep.c.x - d,
        l = b.m_sweep.c.y + h - a.m_sweep.c.y - e,
        r = b.m_sweep.a - a.m_sweep.a - this.m_referenceAngle,
        p = 10 * R.b2_linearSlop,
        q = Math.sqrt(m * m + l * l),
        t = E.abs(r);
      q > p && ((n *= 1), (k *= 1));
      this.m_mass.col1.x = c + f + e * e * n + h * h * k;
      this.m_mass.col2.x = -e * d * n - h * g * k;
      this.m_mass.col3.x = -e * n - h * k;
      this.m_mass.col1.y = this.m_mass.col2.x;
      this.m_mass.col2.y = c + f + d * d * n + g * g * k;
      this.m_mass.col3.y = d * n + g * k;
      this.m_mass.col1.z = this.m_mass.col3.x;
      this.m_mass.col2.z = this.m_mass.col3.y;
      this.m_mass.col3.z = n + k;
      p = new lf();
      this.m_mass.solve33(p, -m, -l, -r);
      a.m_sweep.c.x -= c * p.x;
      a.m_sweep.c.y -= c * p.y;
      a.m_sweep.a -= n * (d * p.y - e * p.x + p.z);
      b.m_sweep.c.x += f * p.x;
      b.m_sweep.c.y += f * p.y;
      b.m_sweep.a += k * (g * p.y - h * p.x + p.z);
      a.synchronizeTransform();
      b.synchronizeTransform();
      return q <= R.b2_linearSlop ? t <= R.b2_angularSlop : !1;
    },
    m_localAnchorA: null,
    m_localAnchorB: null,
    m_referenceAngle: null,
    m_impulse: null,
    m_mass: null,
    __class__: Ml,
  });
  var Nl = function () {
    Sc.call(this);
    this.localAnchorA = new D();
    this.localAnchorB = new D();
    this.type = 8;
    this.referenceAngle = 0;
  };
  p["box2D.dynamics.joints.B2WeldJointDef"] = Nl;
  Nl.__name__ = ["box2D", "dynamics", "joints", "B2WeldJointDef"];
  Nl.__super__ = Sc;
  Nl.prototype = x(Sc.prototype, {
    initialize: function (a, b, c) {
      this.bodyA = a;
      this.bodyB = b;
      a = this.localAnchorA;
      b = this.bodyA.getLocalPoint(c);
      a.x = b.x;
      a.y = b.y;
      a = this.localAnchorB;
      c = this.bodyB.getLocalPoint(c);
      a.x = c.x;
      a.y = c.y;
      this.referenceAngle = this.bodyB.getAngle() - this.bodyA.getAngle();
    },
    localAnchorA: null,
    localAnchorB: null,
    referenceAngle: null,
    __class__: Nl,
  });
  var Zo = function () {
    this.stringMapCloner = new Ql(this, la);
    this.intMapCloner = new Ql(this, Ca);
    var a = (this.classHandles = new la()),
      b = B(this, this.returnString);
    null != t.String ? a.setReserved("String", b) : (a.h.String = b);
    a = this.classHandles;
    b = B(this, this.cloneArray);
    null != t.Array ? a.setReserved("Array", b) : (a.h.Array = b);
    a = ((Mb = this.stringMapCloner), B(Mb, Mb.clone));
    b = this.classHandles;
    null != t["haxe.ds.StringMap"]
      ? b.setReserved("haxe.ds.StringMap", a)
      : (b.h["haxe.ds.StringMap"] = a);
    a = ((Mb = this.intMapCloner), B(Mb, Mb.clone));
    b = this.classHandles;
    null != t["haxe.ds.IntMap"]
      ? b.setReserved("haxe.ds.IntMap", a)
      : (b.h["haxe.ds.IntMap"] = a);
  };
  p["cloner.Cloner"] = Zo;
  Zo.__name__ = ["cloner", "Cloner"];
  Zo.prototype = {
    cache: null,
    classHandles: null,
    stringMapCloner: null,
    intMapCloner: null,
    returnString: function (a) {
      return a;
    },
    clone: function (a) {
      this.cache = new qd();
      a = this._clone(a);
      this.cache = null;
      return a;
    },
    _clone: function (a) {
      if ("string" == typeof a) return a;
      try {
        if (null != qa.getClassName(a)) return a;
      } catch (c) {
        X.lastException = c;
      }
      var b = qa["typeof"](a);
      switch (b[1]) {
        case 0:
          return null;
        case 1:
          return a;
        case 2:
          return a;
        case 3:
          return a;
        case 4:
          return this.handleAnonymous(a);
        case 5:
          return null;
        case 6:
          return (
            (b = b[2]),
            null == this.cache.h.__keys__[a.__id__] &&
              this.cache.set(a, this.handleClass(b, a)),
            this.cache.h[a.__id__]
          );
        case 7:
          return a;
        case 8:
          return null;
      }
    },
    handleAnonymous: function (a) {
      for (var b = V.fields(a), c = {}, d = 0, e = b.length; d < e; ) {
        var f = d++;
        f = b[f];
        c[f] = this._clone(V.getProperty(a, f));
      }
      return c;
    },
    handleClass: function (a, b) {
      var c = this.classHandles;
      a = qa.getClassName(a);
      c = null != t[a] ? c.getReserved(a) : c.h[a];
      null == c && (c = B(this, this.cloneClass));
      return c(b);
    },
    cloneArray: function (a) {
      a = a.slice();
      for (var b = 0, c = a.length; b < c; ) {
        var d = b++;
        a[d] = this._clone(a[d]);
      }
      return a;
    },
    cloneClass: function (a) {
      for (
        var b = qa.createEmptyInstance(null == a ? null : u.getClass(a)),
          c = V.fields(a),
          d = 0,
          e = c.length;
        d < e;

      ) {
        var f = d++;
        f = c[f];
        var g = V.getProperty(a, f);
        b[f] = this._clone(g);
      }
      return b;
    },
    __class__: Zo,
  };
  var Ql = function (a, b) {
    this.cloner = a;
    this.type = b;
    this.noArgs = [];
  };
  p["cloner.MapCloner"] = Ql;
  Ql.__name__ = ["cloner", "MapCloner"];
  Ql.prototype = {
    cloner: null,
    type: null,
    noArgs: null,
    clone: function (a) {
      for (
        var b = qa.createInstance(this.type, this.noArgs), c = a.keys();
        c.hasNext();

      ) {
        var d = c.next();
        b.set(d, this.cloner._clone(a.get(d)));
      }
      return b;
    },
    __class__: Ql,
  };
  var Kh = function (a) {
    null == a && (a = !0);
    gb.call(this);
    this.alignRight = a;
    this.start = !0;
    this.fps = this.mem_max = 0;
    this.text = new De();
    this.text.set_width(70);
    this.text.set_height(15);
    this.text.set_defaultTextFormat(new Jh("_sans", 10, 16777215));
    this.text.set_selectable(!1);
    this.text.mouseEnabled = !1;
    this.text.set_wordWrap(!0);
    this.text.set_multiline(!0);
    this.rectangle = new W(69, 0, 1, 1);
    this.addEventListener("addedToStage", B(this, this.init), !1, 0, !0);
    this.addEventListener("removedFromStage", B(this, this.destroy), !1, 0, !0);
  };
  p["com.nmefermmmtools.debug.Stats"] = Kh;
  Kh.__name__ = ["com", "nmefermmmtools", "debug", "Stats"];
  Kh.__super__ = gb;
  Kh.prototype = x(gb.prototype, {
    text: null,
    timer: null,
    fps: null,
    ms: null,
    ms_prev: null,
    mem: null,
    mem_max: null,
    graph: null,
    rectangle: null,
    alignRight: null,
    start: null,
    fps_graph: null,
    mem_graph: null,
    ms_graph: null,
    mem_max_graph: null,
    _stage: null,
    fpsStr: null,
    memStr: null,
    memMaxStr: null,
    msStr: null,
    init: function (a) {
      this._stage = wa.get_current().stage;
      this.get_graphics().beginFill(51);
      this.get_graphics().drawRect(0, 0, 70, 15);
      this.get_graphics().endFill();
      this.addChild(this.text);
      this.graph = new sa(70, 1, !1, 51);
      this.addEventListener("enterFrame", B(this, this.update));
    },
    destroy: function (a) {
      for (this.get_graphics().clear(); 0 < this.get_numChildren(); )
        this.removeChildAt(0);
      this.graph.dispose();
      this.removeEventListener("enterFrame", B(this, this.update));
    },
    update: function (a) {
      this.start &&
        this.alignRight &&
        (this.set_x(this._stage.stageWidth - this.get_width()),
        (this.start = !1));
      this.timer = wa.getTimer();
      this.timer - 1e3 > this.ms_prev
        ? ((this.mem = 9.54e-7 * Kg.get_totalMemory()),
          (this.mem_max = this.mem_max > this.mem ? this.mem_max : this.mem),
          60 < this.fps && (this.fps = 60),
          (this.fpsStr = "FPS: " + this.fps + " / 60"),
          (this.memStr = "MEM: " + Math.round(this.mem)),
          (this.memMaxStr = "MAX: " + Math.round(this.mem_max)),
          (this.fps = 0),
          (this.ms_prev = this.timer),
          this.text.set_text(this.fpsStr))
        : (this.fps++, (this.ms = this.timer));
    },
    normalizeMem: function (a) {
      return (Math.min(1, Math.sqrt(Math.sqrt(5e3 * a))) - 2) | 0;
    },
    __class__: Kh,
  });
  var Lg = function () {};
  p["com.nmefermmmtools.debug.Colors"] = Lg;
  Lg.__name__ = ["com", "nmefermmmtools", "debug", "Colors"];
  var Lh = function () {};
  p["com.stencyl.APIKeys"] = Lh;
  Lh.__name__ = ["com", "stencyl", "APIKeys"];
  var U = function () {};
  p["com.stencyl.Config"] = U;
  U.__name__ = ["com", "stencyl", "Config"];
  U.load = function () {
    var a = J.getConfigText("config/game-config.json");
    U.loadFromString(a);
  };
  U.loadMap = function (a, b) {
    for (var c = 0, d = V.fields(a); c < d.length; ) {
      var e = d[c];
      ++c;
      if (ba.startsWith(e, "config-")) {
        var f = U.defines,
          g = Q.substr(e, 7, null);
        (null != t[g] ? f.existsReserved(g) : f.h.hasOwnProperty(g)) &&
          U.loadMap(V.field(a, e), b);
      } else b[e] = V.field(a, e);
    }
    return b;
  };
  U.loadFromString = function (a, b) {
    null == b && (b = !0);
    if (null != U.data && b) {
      b = U.data;
      U.data = U.loadMap(JSON.parse(a), {});
      U.setStaticFields();
      for (var c = (a = !1), d = 0, e = V.fields(b); d < e.length; ) {
        var f = e[d];
        ++d;
        var g = V.field(b, f),
          h = V.field(U.data, f);
        if (g != h)
          switch (f) {
            case "debugDraw":
              (r.DEBUG_DRAW = U.debugDraw) ||
                (null != r.debugDrawer &&
                  null != r.debugDrawer.m_sprite &&
                  r.debugDrawer.m_sprite.get_graphics().clear());
              break;
            case "disposeImages":
            case "physicsMode":
              c = !0;
              break;
            case "antialias":
            case "forceHiResAssets":
            case "gameScale":
            case "scaleMode":
            case "scales":
            case "stageHeight":
            case "stageWidth":
              a = !0;
              break;
            case "keys":
              H.loadInputConfig();
              break;
            case "releaseMode":
            case "useGciLogging":
              Va.setupTracing(!U.releaseMode);
              break;
            case "showConsole":
              r.engine.setStatsVisible(U.showConsole);
          }
      }
      c ? Va.reloadGame() : a && r.engine.reloadScreen();
    } else (U.data = U.loadMap(JSON.parse(a), {})), U.setStaticFields();
  };
  U.setStaticFields = function () {
    U.landscape = U.data.landscape;
    U.autorotate = U.data.autorotate;
    U.scaleMode = Mg.fromString(U.data.scaleMode);
    U.stageWidth = U.data.stageWidth;
    U.stageHeight = U.data.stageHeight;
    U.initSceneID = U.data.initSceneID;
    U.physicsMode = Ng.fromString(U.data.physicsMode);
    U.gameScale = U.data.gameScale;
    U.forceHiResAssets = U.data.forceHiResAssets;
    U.antialias = U.data.antialias;
    U.pixelsnap = U.data.pixelsnap;
    U.startInFullScreen = U.data.startInFullScreen;
    U.disposeImages = U.data.disposeImages;
    U.adPositionBottom = U.data.adPositionBottom;
    U.testAds = U.data.testAds;
    U.releaseMode = U.data.releaseMode;
    U.showConsole = U.data.showConsole;
    U.debugDraw = U.data.debugDraw;
    U.disableBackButton = U.data.disableBackButton;
    U.useGciLogging = U.data.useGciLogging;
    U.keys = U.asMap(U.data.keys);
    U.scales = zh.array(U.data.scales.map(Gd.fromString));
    U.toolsetInterfaceHost = U.data.toolsetInterfaceHost;
    U.toolsetInterfacePort = U.data.toolsetInterfacePort;
    U.buildConfig = U.data.buildConfig;
  };
  U.asMap = function (a) {
    for (var b = new la(), c = 0, d = V.fields(a); c < d.length; ) {
      var e = d[c];
      ++c;
      var f = V.field(a, e);
      null != t[e] ? b.setReserved(e, f) : (b.h[e] = f);
    }
    return b;
  };
  var $b = function () {
    this.actorTypesLoaded = !1;
    this.resourceLookup =
      this.resourceNameLookup =
      this.behaviorLookup =
      this.behaviorReader =
      this.resourceReaderPool =
        null;
    if (null == oa.getBytes("assets/data/game.mbs"))
      throw new v(
        "Data.hx - Could not load game. Check your logs for a possible cause."
      );
  };
  p["com.stencyl.Data"] = $b;
  $b.__name__ = ["com", "stencyl", "Data"];
  $b.get = function () {
    null == $b.instance && (($b.instance = new $b()), $b.instance.loadAll());
    return $b.instance;
  };
  $b.resetStatics = function () {
    $b.instance = null;
  };
  $b.prototype = {
    readers: null,
    gameMbs: null,
    resourceListMbs: null,
    sceneListMbs: null,
    behaviorListMbs: null,
    resources: null,
    resourceMap: null,
    behaviors: null,
    resourceLookup: null,
    resourceNameLookup: null,
    behaviorLookup: null,
    behaviorReader: null,
    resourceReaderPool: null,
    loadAll: function () {
      this.gameMbs = new Mh(Ff.get(), !1, !0);
      this.gameMbs.readData(Na.toBytes(oa.getBytes("assets/data/game.mbs")));
      this.sceneListMbs = new Mh(Ff.get(), !1, !0);
      this.sceneListMbs.readData(
        Na.toBytes(oa.getBytes("assets/data/scenes.mbs"))
      );
      this.resourceListMbs = new Mh(Ff.get(), !1, !1);
      this.resourceListMbs.readData(
        Na.toBytes(oa.getBytes("assets/data/resources.mbs"))
      );
      this.behaviorListMbs = new Mh(Ff.get(), !1, !1);
      this.behaviorListMbs.readData(
        Na.toBytes(oa.getBytes("assets/data/behaviors.mbs"))
      );
      this.behaviors = new Rl(new Ca(), B(this, this.loadBehaviorFromMbs));
      this.resources = new Rl(new Ca(), B(this, this.loadResourceFromMbs));
      this.resourceMap = new $o(
        new la(),
        B(this, this.loadResourceFromMbsByName)
      );
      this.loadReaders();
      this.scanBehaviorMbs();
      this.scanResourceMbs();
    },
    loadReaders: function () {
      this.readers = [];
      this.readers.push(new Sl());
      this.readers.push(new Tl());
      this.readers.push(new Ul());
      this.readers.push(new Vl());
      this.readers.push(new Wl());
      this.readers.push(new Xl());
    },
    scanBehaviorMbs: function () {
      this.behaviorLookup = new Ca();
      for (
        var a = this.behaviorListMbs.getRoot(), b = 0, c = a.length();
        b < c;

      ) {
        b++;
        var d = a.elementAddress;
        this.behaviorReader = a.getNextObject();
        var e = this.behaviorLookup,
          f = this.behaviorReader.getId();
        e.h[f] = d;
      }
    },
    scanResourceMbs: function () {
      this.resourceLookup = new Ca();
      this.resourceNameLookup = new la();
      var a = this.resourceListMbs.getRoot();
      this.resourceReaderPool = be.createObjectPool(this.resourceListMbs);
      for (
        var b = new nb(this.resourceListMbs),
          c = z.INTEGER.getSize(),
          d = 0,
          e = a.length();
        d < e;

      ) {
        d++;
        var f = a.elementAddress,
          g = this.resourceListMbs.readInt(f + c);
        a.elementAddress += a.elementSize;
        b.setAddress(g);
        g = this.resourceLookup;
        var h = b.getId();
        g.h[h] = f;
        this.resourceListMbs.readTypecode(f) == bc.MBS_SPRITE
          ? ((h = this.resourceNameLookup), (f = "Sprite_" + b.getName()))
          : ((h = this.resourceNameLookup), (f = b.getName()));
        g = b.getId();
        null != t[f] ? h.setReserved(f, g) : (h.h[f] = g);
      }
    },
    loadResourceFromMbsByName: function (a) {
      var b = this.resourceNameLookup;
      a = null != t[a] ? b.getReserved(a) : b.h[a];
      return null == a ? null : this.loadResourceFromMbs(a);
    },
    loadResourceFromMbs: function (a) {
      a = this.resourceLookup.h[a];
      if (null == a) return null;
      a = be.readDynamicUsingPool(
        this.resourceListMbs,
        a,
        this.resourceReaderPool
      );
      a = this.readResource(a.getMbsType().getName(), a);
      null != a &&
        (this.resources.map.set(a.ID, a),
        u.__instanceof(a, ii)
          ? this.resourceMap.map.set("Sprite_" + a.name, a)
          : this.resourceMap.map.set(a.name, a));
      return a;
    },
    loadAllResourcesOfType: function (a) {
      var b = this.resourceListMbs.getRoot(),
        c = new nb(this.resourceListMbs),
        d = z.INTEGER.getSize();
      b.elementAddress = b.getAddress() + 2 * d;
      for (var e = 0, f = b.length(); e < f; ) {
        e++;
        var g = b.elementAddress;
        this.resourceListMbs.readTypecode(g) == a &&
          ((g = this.resourceListMbs.readInt(g + d)),
          c.setAddress(g),
          this.loadResourceFromMbs(c.getId()));
        b.elementAddress += b.elementSize;
      }
    },
    loadBehaviorFromMbs: function (a) {
      a = this.behaviorLookup.h[a];
      if (null == a) return null;
      this.behaviorReader.setAddress(a);
      return Yi.readBehavior(this.behaviorReader);
    },
    readResource: function (a, b) {
      for (var c = 0, d = this.readers; c < d.length; ) {
        var e = d[c];
        ++c;
        if (e.accepts(a)) return e.read(b);
      }
      return null;
    },
    actorTypesLoaded: null,
    getAllActorTypes: function () {
      this.actorTypesLoaded ||
        (this.loadAllResourcesOfType(Ha.MBS_ACTOR_TYPE),
        (this.actorTypesLoaded = !0));
      for (var a = [], b = this.resources.map.iterator(); b.hasNext(); ) {
        var c = b.next();
        u.__instanceof(c, ng) && a.push(u.__cast(c, ng));
      }
      return a;
    },
    loadAtlas: function (a) {
      var b = cb.get().atlases.h[a];
      if (null != b && !b.active)
        for (b.active = !0, a = 0, b = b.members; a < b.length; ) {
          var c = b[a];
          ++a;
          c = this.resources.get(c);
          null != c && c.loadGraphics();
        }
    },
    unloadAtlas: function (a) {},
    reloadScaledResources: function () {
      for (var a = this.resources.map.iterator(); a.hasNext(); ) {
        var b = a.next();
        null != b &&
          (u.__instanceof(b, oi) ||
            u.__instanceof(b, ng) ||
            (b.isAtlasActive() && b.reloadGraphics(-1)));
      }
    },
    __class__: $b,
  };
  var gd = function () {
    this.eventTable = new Ca();
    this.eventTable.h[gd.TYPE_ADS] = [];
    this.eventTable.h[gd.TYPE_PURCHASES] = [];
    this.eventTable.h[gd.TYPE_GAMECENTER] = [];
    this.eventTable.h[gd.TYPE_KEYBOARD] = [];
  };
  p["com.stencyl.event.EventMaster"] = gd;
  gd.__name__ = ["com", "stencyl", "event", "EventMaster"];
  gd.prototype = {
    eventTable: null,
    addAdEvent: function (a) {
      this.eventTable.h[gd.TYPE_ADS].push(a);
    },
    addPurchaseEvent: function (a) {
      this.eventTable.h[gd.TYPE_PURCHASES].push(a);
    },
    addGameCenterEvent: function (a) {
      this.eventTable.h[gd.TYPE_GAMECENTER].push(a);
    },
    addKeyboardEvent: function (a) {
      this.eventTable.h[gd.TYPE_KEYBOARD].push(a);
    },
    clear: function () {
      this.eventTable.h[gd.TYPE_ADS].length = 0;
      this.eventTable.h[gd.TYPE_PURCHASES].length = 0;
      this.eventTable.h[gd.TYPE_GAMECENTER].length = 0;
      this.eventTable.h[gd.TYPE_KEYBOARD].length = 0;
    },
    __class__: gd,
  };
  var r = function (a) {
    this.isHUDZoomable =
      this.sceneInitialized =
      this.keyPollOccurred =
      this.isFullScreen =
      this.ignoreResize =
        !1;
    this.zoomMultiplier = 1;
    hd.initialize();
    rd.get_isSupported() && (this.shaderLayer = new gb());
    a.mouseChildren = !1;
    a.mouseEnabled = !1;
    U.debugDraw && (r.DEBUG_DRAW = !0);
    r.engine = this;
    m.engine = this;
    this.root = a;
    this.isFullScreen = U.startInFullScreen;
    r.screenScaleX = r.unzoomedScaleX = a.get_scaleX();
    r.screenScaleY = r.unzoomedScaleY = a.get_scaleY();
    r.screenOffsetX = a.get_x() | 0;
    r.screenOffsetY = a.get_y() | 0;
    r.NO_PHYSICS = 1 == U.physicsMode;
    r.stage.addEventListener("enterFrame", B(this, this.onUpdate));
    r.stage.addEventListener("deactivate", B(this, this.onFocusLost));
    r.stage.addEventListener("activate", B(this, this.onFocus));
    r.stage.addEventListener("resize", B(this, this.onWindowResize));
    r.stage.window.onRestore.add(B(this, this.onWindowRestore));
    r.stage.window.onMaximize.add(B(this, this.onWindowMaximize));
    r.stage.window.onFullscreen.add(B(this, this.onWindowFullScreen));
    this.begin(U.initSceneID);
  };
  p["com.stencyl.Engine"] = r;
  r.__name__ = ["com", "stencyl", "Engine"];
  r.resetStatics = function () {
    r.stage.removeEventListener(
      "enterFrame",
      ((Mb = r.engine), B(Mb, Mb.onUpdate))
    );
    r.stage.removeEventListener(
      "deactivate",
      ((Mb = r.engine), B(Mb, Mb.onFocusLost))
    );
    r.stage.removeEventListener(
      "activate",
      ((Mb = r.engine), B(Mb, Mb.onFocus))
    );
    r.stage.removeEventListener(
      "resize",
      ((Mb = r.engine), B(Mb, Mb.onWindowResize))
    );
    r.stage.window.onRestore.remove(
      ((Mb = r.engine), B(Mb, Mb.onWindowRestore))
    );
    r.stage.window.onMaximize.remove(
      ((Mb = r.engine), B(Mb, Mb.onWindowMaximize))
    );
    r.stage.window.onFullscreen.remove(
      ((Mb = r.engine), B(Mb, Mb.onWindowFullScreen))
    );
    null != r.engine.stats && r.stage.removeChild(r.engine.stats);
    r.NO_PHYSICS = !1;
    r.DEBUG_DRAW = !1;
    r.IMG_BASE = "";
    r.SCALE = 1;
    r.checkedWideScreen = !1;
    r.isStandardIOS = !1;
    r.isExtendedIOS = !1;
    r.isIPhone6 = !1;
    r.isIPhone6Plus = !1;
    r.isTabletIOS = !1;
    r.engine = null;
    r.landscape = !1;
    r.cameraX = 0;
    r.cameraY = 0;
    r.screenScaleX = 0;
    r.screenScaleY = 0;
    r.unzoomedScaleX = 0;
    r.unzoomedScaleY = 0;
    r.screenOffsetX = 0;
    r.screenOffsetY = 0;
    r.screenWidth = 0;
    r.screenHeight = 0;
    r.sceneWidth = 0;
    r.sceneHeight = 0;
    r.screenWidthHalf = 0;
    r.screenHeightHalf = 0;
    r.paused = !1;
    r.started = !1;
    r.events = new gd();
    r.ITERATIONS = 3;
    r.physicsScale = 10;
    r.paddingLeft = 0;
    r.paddingRight = 0;
    r.paddingTop = 0;
    r.paddingBottom = 0;
    r.ngID = "";
    r.ngKey = "";
    r.movieClip = null;
    r.stage = null;
    r.STEP_SIZE = 10;
    r.MS_PER_SEC = 1e3;
    r.elapsedTime = 0;
    r.timeScale = 1;
    r.totalElapsedTime = 0;
    r.debug = !1;
    r.debugDrawer = null;
  };
  r.initBehaviors = function (a, b, c, d, e) {
    if (null != b) {
      for (b = new Oe(b, b.arrayKeys()); b.hasNext(); ) {
        var f = b.next();
        if (null != f && f.enabled) {
          var g = $b.get().behaviors.get(f.behaviorID),
            h = new la();
          if (null != g) {
            if (g.isEvent)
              for (var n = g.attributes.keys(); n.hasNext(); ) {
                var k = n.next(),
                  m = g.attributes;
                m = null != t[k] ? m.getReserved(k) : m.h[k];
                if (null != m) {
                  var l = m.type,
                    p = m.ID;
                  "list" == l
                    ? ((m = new Zi(
                        p,
                        m.fieldName,
                        m.fullName,
                        [],
                        l,
                        null,
                        m.hidden
                      )),
                      null != t[k] ? h.setReserved(k, m) : (h.h[k] = m))
                    : "map" == l &&
                      ((m = new Zi(
                        p,
                        m.fieldName,
                        m.fullName,
                        new la(),
                        l,
                        null,
                        m.hidden
                      )),
                      null != t[k] ? h.setReserved(k, m) : (h.h[k] = m));
                }
              }
            for (n = f.values.keys(); n.hasNext(); )
              (k = n.next()),
                (m = f.values),
                (m = null != t[k] ? m.getReserved(k) : m.h[k]),
                (l = g.attributes),
                (l = null != t[k] ? l.getReserved(k) : l.h[k]),
                null != l &&
                  ((m = new Zi(
                    l.ID,
                    l.fieldName,
                    l.fullName,
                    m,
                    l.type,
                    null,
                    l.hidden
                  )),
                  null != t[k] ? h.setReserved(k, m) : (h.h[k] = m));
            f = new Yl(
              c,
              d,
              g.ID,
              g.name,
              g.classname,
              !0,
              !1,
              h,
              g.type,
              g.isEvent
            );
            a.add(f);
          }
        }
      }
      e && a.initScripts();
    }
  };
  r.toPhysicalUnits = function (a) {
    return (a /= r.physicsScale);
  };
  r.toPixelUnits = function (a) {
    return (a *= r.physicsScale);
  };
  r.vToPhysicalUnits = function (a) {
    a.x = r.toPhysicalUnits(a.x);
    a.y = r.toPhysicalUnits(a.y);
    return a;
  };
  r.vToPixelUnits = function (a) {
    a.x = r.toPixelUnits(a.x);
    a.y = r.toPixelUnits(a.y);
    return a;
  };
  r.invokeListeners = function (a) {
    for (var b = 0; b < a.length; ) {
      try {
        var c = a[b];
        c(a);
        -1 == J.indexOf(a, c) && --b;
      } catch (d) {
        if (
          ((X.lastException = d),
          d instanceof v && (d = d.val),
          !u.__instanceof(d, String))
        )
          throw d;
      }
      ++b;
    }
  };
  r.invokeListeners2 = function (a, b) {
    for (var c = 0; c < a.length; ) {
      try {
        var d = a[c];
        d(b, a);
        -1 == J.indexOf(a, d) && --c;
      } catch (e) {
        if (
          ((X.lastException = e),
          e instanceof v && (e = e.val),
          !u.__instanceof(e, String))
        )
          throw e;
      }
      ++c;
    }
  };
  r.invokeListeners3 = function (a, b, c) {
    for (var d = 0; d < a.length; ) {
      try {
        var e = a[d];
        e(b, c, a);
        -1 == J.indexOf(a, e) && --d;
      } catch (f) {
        if (
          ((X.lastException = f),
          f instanceof v && (f = f.val),
          !u.__instanceof(f, String))
        )
          throw f;
      }
      ++d;
    }
  };
  r.invokeListeners4 = function (a, b, c, d) {
    for (var e = 0; e < a.length; ) {
      try {
        var f = a[e];
        f(b, c, d, a);
        -1 == J.indexOf(a, f) && --e;
      } catch (g) {
        if (
          ((X.lastException = g),
          g instanceof v && (g = g.val),
          !u.__instanceof(g, String))
        )
          throw g;
      }
      ++e;
    }
  };
  r.invokeListeners5 = function (a, b, c, d, e) {
    for (var f = 0; f < a.length; ) {
      try {
        var g = a[f];
        g(b, c, d, e, a);
        -1 == J.indexOf(a, g) && --f;
      } catch (h) {
        if (
          ((X.lastException = h),
          h instanceof v && (h = h.val),
          !u.__instanceof(h, String))
        )
          throw h;
      }
      ++f;
    }
  };
  r.invokeListeners6 = function (a, b, c, d, e, f) {
    for (var g = 0; g < a.length; ) {
      try {
        var h = a[g];
        h(b, c, d, e, f, a);
        -1 == J.indexOf(a, h) && --g;
      } catch (n) {
        if (
          ((X.lastException = n),
          n instanceof v && (n = n.val),
          !u.__instanceof(n, String))
        )
          throw n;
      }
      ++g;
    }
  };
  r.prototype = {
    zoomMultiplier: null,
    isHUDZoomable: null,
    world: null,
    gravityX: null,
    gravityY: null,
    physicalWidth: null,
    physicalHeight: null,
    leave: null,
    enter: null,
    sceneToEnter: null,
    shakeTimer: null,
    shakeIntensity: null,
    isShaking: null,
    scene: null,
    camera: null,
    sceneInitialized: null,
    channels: null,
    tasks: null,
    regions: null,
    terrainRegions: null,
    joints: null,
    root: null,
    colorLayer: null,
    maskLayer: null,
    master: null,
    hudLayer: null,
    transitionLayer: null,
    debugLayer: null,
    g: null,
    groups: null,
    reverseGroups: null,
    allActors: null,
    nextID: null,
    actorsPerLayer: null,
    actorsOfType: null,
    recycledActorsOfType: null,
    actorsToCreateInNextScene: null,
    layers: null,
    layersByName: null,
    interactiveLayers: null,
    backgroundLayers: null,
    dynamicTiles: null,
    animatedTiles: null,
    topLayer: null,
    bottomLayer: null,
    middleLayer: null,
    layersToDraw: null,
    tileUpdated: null,
    loadedAtlases: null,
    atlasesToLoad: null,
    atlasesToUnload: null,
    actorsToCreate: null,
    gameAttributes: null,
    behaviors: null,
    lastTime: null,
    acc: null,
    mx: null,
    my: null,
    collisionPairs: null,
    disableCollisionList: null,
    keyPollOccurred: null,
    whenKeyPressedListeners: null,
    hasKeyPressedListeners: null,
    whenAnyKeyPressedListeners: null,
    whenAnyKeyReleasedListeners: null,
    whenAnyGamepadPressedListeners: null,
    whenAnyGamepadReleasedListeners: null,
    whenTypeGroupCreatedListeners: null,
    whenTypeGroupDiesListeners: null,
    typeGroupPositionListeners: null,
    collisionListeners: null,
    soundListeners: null,
    channelListeners: null,
    whenUpdatedListeners: null,
    whenDrawingListeners: null,
    whenMousePressedListeners: null,
    whenMouseReleasedListeners: null,
    whenMouseMovedListeners: null,
    whenMouseDraggedListeners: null,
    whenPausedListeners: null,
    fullscreenListeners: null,
    screenSizeListeners: null,
    gameScaleListeners: null,
    whenSwipedListeners: null,
    whenMTStartListeners: null,
    whenMTDragListeners: null,
    whenMTEndListeners: null,
    whenFocusChangedListeners: null,
    nativeListeners: null,
    shader: null,
    shaderLayer: null,
    shaders: null,
    isFullScreen: null,
    ignoreResize: null,
    stats: null,
    onKeyDown: function (a) {
      this.isFullScreen && 27 == a.keyCode && this.setFullScreen(!1);
    },
    onWindowResize: function (a) {
      !this.isFullScreen ||
        r.stage.window.__fullscreen ||
        r.stage.window.__minimized ||
        this.ignoreResize ||
        this.setFullScreen(!1);
    },
    onWindowRestore: function () {
      this.isFullScreen &&
        !r.stage.window.__fullscreen &&
        (r.stage.window.__fullscreen = !0);
    },
    onWindowMaximize: function () {
      this.isFullScreen &&
        !r.stage.window.__fullscreen &&
        (r.stage.window.__fullscreen = !0);
    },
    onWindowFullScreen: function () {
      this.isFullScreen || this.setFullScreen(!0);
    },
    isInFullScreen: function () {
      return 1 == wa.get_current().stage.get_displayState();
    },
    setFullScreen: function (a) {
      if (this.isFullScreen != a) {
        this.ignoreResize = !0;
        this.isFullScreen = a;
        this.reloadScreen();
        a = this.fullscreenListeners;
        for (var b = 0; b < a.length; ) {
          try {
            var c = a[b];
            c(a);
            -1 == J.indexOf(a, c) && --b;
          } catch (d) {
            if (
              ((X.lastException = d),
              d instanceof v && (d = d.val),
              !u.__instanceof(d, String))
            )
              throw d;
          }
          ++b;
        }
        this.ignoreResize = !1;
      }
    },
    toggleFullScreen: function () {
      this.setFullScreen(!this.isFullScreen);
    },
    reloadScreen: function () {
      var a = r.IMG_BASE,
        b = r.SCALE,
        c = r.screenWidth,
        d = r.screenHeight;
      this.root.initScreen(this.isFullScreen);
      r.screenWidth = Va.logicalWidth | 0;
      r.screenWidthHalf = (r.screenWidth / 2) | 0;
      r.screenHeight = Va.logicalHeight | 0;
      r.screenHeightHalf = (r.screenHeight / 2) | 0;
      this.setColorBackground(this.scene.colorBackground);
      c = r.screenWidth != c || r.screenHeight != d;
      d = b != r.SCALE;
      a != r.IMG_BASE && $b.get().reloadScaledResources();
      if (b != r.SCALE) {
        null != r.debugDrawer && r.debugDrawer.setDrawScale(10 * r.SCALE);
        this.g.scaleX = this.g.scaleY = r.SCALE;
        J.applyToAllChildren(this.root, function (a) {
          u.__instanceof(a, pi) && u.__cast(a, pi).updateScale();
        });
        for (a = this.allActors.iterator(); a.hasNext(); )
          (b = a.next()),
            null == b || b.dead || b.recycled || (b.updateMatrix = !0);
        for (a = this.recycledActorsOfType.iterator(); a.hasNext(); ) {
          b = a.next();
          for (var e = 0; e < b.length; ) {
            var f = b[e];
            ++e;
            f.currAnimation.framesUpdated();
            f.updateMatrix = !0;
          }
        }
        a = this.g;
        a.font = a.defaultFont;
        a.font.fontScale != r.SCALE && (a.font.fontScale = r.SCALE);
        this.moveCamera(this.camera.realX, this.camera.realY);
      }
      r.unzoomedScaleX = r.screenScaleX = this.root.get_scaleX();
      r.unzoomedScaleY = r.screenScaleY = this.root.get_scaleY();
      r.screenOffsetX = this.root.get_x() | 0;
      r.screenOffsetY = this.root.get_y() | 0;
      null != this.stats &&
        (this.stats.set_x(r.stage.stageWidth - this.stats.get_width()),
        this.stats.set_y(0));
      this.resetShaders();
      if (d)
        for (d = this.gameScaleListeners, a = 0; a < d.length; ) {
          try {
            var g = d[a];
            g(d);
            -1 == J.indexOf(d, g) && --a;
          } catch (n) {
            if (
              ((X.lastException = n),
              n instanceof v && (n = n.val),
              !u.__instanceof(n, String))
            )
              throw n;
          }
          ++a;
        }
      if (c)
        for (g = this.screenSizeListeners, c = 0; c < g.length; ) {
          try {
            var h = g[c];
            h(g);
            -1 == J.indexOf(g, h) && --c;
          } catch (n) {
            if (
              ((X.lastException = n),
              n instanceof v && (n = n.val),
              !u.__instanceof(n, String))
            )
              throw n;
          }
          ++c;
        }
    },
    addShader: function (a) {
      if (rd.get_isSupported()) {
        a = a.basicShader;
        null != this.shaders && this.clearShaders();
        this.shaders = [a.model];
        for (a = a.multipassParent; null != a; )
          this.shaders.splice(0, 0, a.model), (a = a.multipassParent);
        a = 0;
        for (var b = this.shaders; a < b.length; ) {
          var c = b[a];
          ++a;
          this.shaderLayer.addChild(c);
        }
      }
    },
    clearShaders: function () {
      J.removeAllChildren(this.shaderLayer);
      r.stage.context3D.setRenderToBackBuffer();
      this.shaders = [];
    },
    toggleShadersForHUD: function () {
      null != this.shaderLayer &&
        null != this.hudLayer &&
        null != this.root &&
        this.root.swapChildren(this.shaderLayer, this.hudLayer);
    },
    resetShaders: function () {
      if (null != this.shaders)
        for (var a = 0, b = this.shaders; a < b.length; ) {
          var c = b[a];
          ++a;
          c.rebuild();
        }
    },
    begin: function (a) {
      this.loadedAtlases = new Ca();
      this.atlasesToLoad = new Ca();
      this.atlasesToUnload = new Ca();
      H.enable();
      H.define("iSHIFT", [16]);
      H.define("iCTRL", [17]);
      r.landscape = U.landscape;
      var b = Va.logicalWidth,
        c = Va.logicalHeight;
      r.screenWidth = b | 0;
      r.screenHeight = c | 0;
      r.screenWidthHalf = (b / 2) | 0;
      r.screenHeightHalf = (c / 2) | 0;
      $b.get();
      cb.get().loadScenes();
      this.g = new Qd();
      r.started = !0;
      this.tileUpdated = !1;
      this.shakeTimer = 0;
      this.shakeIntensity = 0.01;
      this.isShaking = !1;
      this.enter = this.leave = null;
      r.cameraX = 0;
      this.acc = r.cameraY = 0;
      this.lastTime = wa.getTimer();
      r.sceneWidth = b | 0;
      r.sceneHeight = c | 0;
      this.colorLayer = new Ye();
      this.root.addChild(this.colorLayer);
      this.master = new gb();
      this.root.addChild(this.master);
      this.hudLayer = new zc(-1, "__hud__", -1, 0, 0, 1, 10, null);
      this.root.addChild(this.hudLayer);
      this.transitionLayer = new gb();
      this.root.addChild(this.transitionLayer);
      this.debugLayer = new gb();
      this.root.addChild(this.debugLayer);
      rd.get_isSupported() && this.root.addChild(this.shaderLayer);
      this.root.addChild(this.root.maskLayer);
      this.actorsToCreateInNextScene = [];
      this.gameAttributes = new la();
      this.setStatsVisible(U.showConsole);
      for (b = cb.get().gameAttributes.keys(); b.hasNext(); ) {
        c = b.next();
        var d = cb.get().gameAttributes;
        d = null != t[c] ? d.getReserved(c) : d.h[c];
        this.gameAttributes.set(c, d);
      }
      this.channels = [];
      for (b = 0; 32 > b; ) (c = b++), this.channels.push(new wf(this, c));
      this.sceneToEnter = a;
      this.loadScene(a);
      this.sceneInitialized = !0;
    },
    setStatsVisible: function (a) {
      a != (null != this.stats) &&
        (a
          ? ((this.stats = new Kh()),
            r.stage.addChild(this.stats),
            this.stats.set_x(r.stage.stageWidth - this.stats.get_width()),
            this.stats.set_y(0))
          : (r.stage.removeChild(this.stats), (this.stats = null)));
    },
    loadScene: function (a) {
      this.collisionPairs = new Ee(32);
      r.paddingTop = 0;
      r.paddingLeft = 0;
      r.paddingBottom = 0;
      r.paddingRight = 0;
      this.tasks = [];
      this.scene = cb.get().scenes.h[a];
      if (-1 == a || null == this.scene)
        if (
          ((this.scene = cb.get().scenes.h[U.initSceneID]), null == this.scene)
        ) {
          r.stage.removeEventListener("enterFrame", B(this, this.onUpdate));
          return;
        }
      this.scene.load();
      a = new Ca();
      if (this.scene.retainsAtlases)
        for (var b = this.loadedAtlases.iterator(); b.hasNext(); ) {
          var c = b.next();
          a.h[c] = c;
        }
      else {
        for (b = this.loadedAtlases.iterator(); b.hasNext(); )
          (c = b.next()), cb.get().atlases.h[c].allScenes && (a.h[c] = c);
        b = 0;
        for (c = this.scene.atlases; b < c.length; ) {
          var d = c[b];
          ++b;
          a.h[d] = d;
        }
      }
      for (b = this.atlasesToLoad.iterator(); b.hasNext(); )
        (c = b.next()), (a.h[c] = c);
      for (b = this.atlasesToUnload.iterator(); b.hasNext(); )
        (c = b.next()), a.remove(c);
      for (b = this.loadedAtlases.iterator(); b.hasNext(); )
        (c = b.next()),
          a.h.hasOwnProperty(c) ||
            ($b.get().unloadAtlas(c), this.loadedAtlases.remove(c));
      for (a = a.iterator(); a.hasNext(); )
        (b = a.next()),
          this.loadedAtlases.h.hasOwnProperty(b) ||
            ($b.get().loadAtlas(b), (this.loadedAtlases.h[b] = b));
      this.atlasesToLoad = new Ca();
      this.atlasesToUnload = new Ca();
      r.sceneWidth = this.scene.sceneWidth;
      r.sceneHeight = this.scene.sceneHeight;
      this.behaviors = new Zl();
      this.groups = new Ca();
      this.reverseGroups = new la();
      a = 0;
      for (b = cb.get().groups; a < b.length; ) {
        c = b[a];
        ++a;
        d = new qi(c.ID, c.name);
        this.groups.h[c.ID] = d;
        var e = c.name,
          f = this.reverseGroups;
        null != t[e] ? f.setReserved(e, d) : (f.h[e] = d);
        d.name = c.name;
      }
      a = new qi(-2, "Regions");
      this.groups.h[-2] = a;
      b = this.reverseGroups;
      null != t.Regions ? b.setReserved("Regions", a) : (b.h.Regions = a);
      this.disableCollisionList = [];
      this.actorsOfType = new Ca();
      this.recycledActorsOfType = new Ca();
      this.regions = new Ee(32);
      this.regions.reuseIterator = !0;
      this.terrainRegions = new Ca();
      this.joints = new Ca();
      this.dynamicTiles = new la();
      this.animatedTiles = [];
      this.allActors = new Ee(256);
      this.allActors.reuseIterator = !0;
      this.actorsPerLayer = new Ca();
      this.nextID = 0;
      this.whenKeyPressedListeners = new la();
      this.hasKeyPressedListeners = !1;
      this.whenAnyKeyPressedListeners = [];
      this.whenAnyKeyReleasedListeners = [];
      this.whenAnyGamepadPressedListeners = [];
      this.whenAnyGamepadReleasedListeners = [];
      this.whenTypeGroupCreatedListeners = new qd();
      this.whenTypeGroupDiesListeners = new qd();
      this.typeGroupPositionListeners = new Ca();
      this.collisionListeners = new Ca();
      this.soundListeners = new qd();
      this.channelListeners = new Ca();
      this.nativeListeners = [];
      this.whenUpdatedListeners = [];
      this.whenDrawingListeners = [];
      this.whenMousePressedListeners = [];
      this.whenMouseReleasedListeners = [];
      this.whenMouseMovedListeners = [];
      this.whenMouseDraggedListeners = [];
      this.whenPausedListeners = [];
      this.whenSwipedListeners = [];
      this.whenMTStartListeners = [];
      this.whenMTDragListeners = [];
      this.whenMTEndListeners = [];
      this.whenFocusChangedListeners = [];
      this.fullscreenListeners = [];
      this.screenSizeListeners = [];
      this.gameScaleListeners = [];
      r.NO_PHYSICS || this.initPhysics();
      this.gravityX = this.scene.gravityX;
      this.gravityY = this.scene.gravityY;
      this.loadTerrain();
      this.loadRegions();
      this.loadTerrainRegions();
      this.loadActors();
      this.loadCamera();
      this.loadJoints();
      this.loadDeferredActors();
      r.initBehaviors(
        this.behaviors,
        this.scene.behaviorValues,
        this,
        this,
        !0
      );
      this.initActorScripts();
    },
    initPhysics: function () {
      var a = new D(this.scene.gravityX, this.scene.gravityY);
      this.world = new Rb(a, !1);
      Rb.m_continuousPhysics = !1;
      Rb.m_warmStarting = !0;
      a = new jf();
      a.lowerBound.x = 0;
      a.lowerBound.y = 0;
      a.upperBound.x = r.screenWidth / r.physicsScale;
      a.upperBound.y = r.screenHeight / r.physicsScale;
      this.world.setScreenBounds(a);
      r.debugDrawer = new Pe();
      r.debugDrawer.setSprite(this.debugLayer);
      r.debugDrawer.setLineThickness(3);
      r.debugDrawer.setDrawScale(10 * r.SCALE);
      r.debugDrawer.setFillAlpha(0);
      r.debugDrawer.setFlags(Pe.e_shapeBit | Pe.e_jointBit);
      this.world.setDebugDraw(r.debugDrawer);
    },
    loadActors: function () {
      this.actorsToCreate = [];
      for (var a = this.scene.actors.iterator(); a.hasNext(); ) {
        var b = a.next();
        this.actorsToCreate.push(this.createActor(b, !0));
      }
    },
    loadDeferredActors: function () {
      for (var a = 0, b = this.actorsToCreateInNextScene; a < b.length; ) {
        var c = b[a];
        ++a;
        m.lastCreatedActor = this.createActorOfType(c.type, c.x, c.y, c.layer);
      }
      this.actorsToCreateInNextScene = [];
    },
    initActorScripts: function () {
      for (var a = 0, b = this.actorsToCreate; a < b.length; ) {
        var c = b[a];
        ++a;
        c.initScripts();
      }
      this.actorsToCreate = null;
    },
    loadCamera: function () {
      this.camera = new $a(
        this,
        -1,
        2,
        0,
        0,
        this.topLayer.ID,
        2,
        2,
        null,
        null,
        null,
        null,
        !0,
        !1,
        !0,
        !1,
        null,
        !0,
        !1
      );
      this.camera.set_name("Camera");
      this.camera.isCamera = !0;
      r.cameraX = 0;
      r.cameraY = 0;
    },
    loadRegions: function () {
      this.regions = new Ee(32);
      this.regions.reuseIterator = !0;
      for (var a = this.scene.regions.iterator(); a.hasNext(); ) {
        var b = a.next(),
          c = new nd(this, b.x, b.y, b.shapes, b.simpleBounds);
        c.set_name(b.name);
        r.NO_PHYSICS ||
          c.setXY(b.x + c.regionWidth / 2, b.y + c.regionHeight / 2);
        c.ID = b.ID;
        this.addRegion(c);
      }
    },
    loadTerrainRegions: function () {
      this.terrainRegions = new Ca();
      if (!r.NO_PHYSICS)
        for (var a = this.scene.terrainRegions.iterator(); a.hasNext(); ) {
          var b = a.next(),
            c = new oh(this, b.x, b.y, b.shapes, b.groupID, b.fillColor);
          c.set_name(b.name);
          c.setX(r.toPixelUnits(b.x) + c.regionWidth / 2);
          c.setY(r.toPixelUnits(b.y) + c.regionHeight / 2);
          c.ID = b.ID;
          this.addTerrainRegion(c);
        }
    },
    loadJoints: function () {
      if (!r.NO_PHYSICS)
        for (var a = this.scene.joints.iterator(); a.hasNext(); ) {
          var b = a.next(),
            c = b.actor1,
            d = b.actor2,
            e = b.collideConnected;
          if (3 == b.type) {
            var f = this.joints;
            var g = b.ID;
            b = this.createStickJoint(
              this.getActor(c).body,
              this.getActor(d).body,
              b.ID,
              e
            );
            f.h[g] = b;
          } else if (1 == b.type) {
            g = u.__cast(b, mi);
            f = this.getActor(c).body.getLocalCenter().copy();
            f.x = r.toPixelUnits(f.x);
            f.y = r.toPixelUnits(f.y);
            c = this.getActor(c).body;
            d = -1 == d ? this.world.m_groundBody : this.getActor(d).body;
            var h = this.joints,
              n = b.ID;
            b = this.createHingeJoint(
              c,
              d,
              f,
              b.ID,
              e,
              g.enableLimit,
              g.enableMotor,
              g.lowerAngle,
              g.upperAngle,
              g.maxMotorTorque,
              -g.motorSpeed
            );
            h.h[n] = b;
          } else if (2 == b.type || 7 == b.type)
            (g = u.__cast(b, ni)),
              (f = this.getActor(c).body.getLocalCenter().copy()),
              (f.x = r.toPixelUnits(f.x)),
              (f.y = r.toPixelUnits(f.y)),
              (c = this.getActor(c).body),
              (d = -1 == d ? this.world.m_groundBody : this.getActor(d).body),
              (f = this.joints),
              (h = b.ID),
              (b = this.createSlidingJoint(
                c,
                d,
                g.localAxisA,
                b.ID,
                e,
                g.enableLimit,
                g.enableMotor,
                g.lowerTranslation,
                g.upperTranslation,
                g.maxMotorForce,
                g.motorSpeed
              )),
              (f.h[h] = b);
        }
    },
    loadTerrain: function () {
      this.initLayers();
      for (var a = 0, b = this.scene.wireframes; a < b.length; ) {
        var c = b[a];
        ++a;
        var d = null;
        r.NO_PHYSICS ||
          (d = new $a(
            this,
            1e8,
            1,
            c.x,
            c.y,
            this.topLayer.ID,
            c.width | 0,
            c.height | 0,
            null,
            new la(),
            null,
            null,
            !1,
            !0,
            !1,
            !1,
            c.shape
          ));
        d.set_name("Terrain");
        d.typeID = -1;
        d.set_visible(!1);
        this.getGroup(1).addChild(d);
      }
    },
    initLayers: function () {
      this.setColorBackground(this.scene.colorBackground);
      this.animatedTiles = this.scene.animatedTiles;
      if (null != this.animatedTiles)
        for (var a = 0, b = this.animatedTiles; a < b.length; ) {
          var c = b[a];
          ++a;
          c.currFrame = 0;
          c.currTime = 0;
          c.updateSource = !0;
        }
      this.layers = this.scene.layers;
      this.layersToDraw = new Ca();
      this.layersByName = new la();
      this.interactiveLayers = [];
      this.backgroundLayers = [];
      b = a = !1;
      c = 0;
      var d = -1,
        e = new Ca();
      if (0 == this.layers.mSize) {
        var f = new le(
          0,
          this.scene,
          (this.scene.sceneWidth / this.scene.tileWidth) | 0,
          (this.scene.sceneHeight / this.scene.tileHeight) | 0
        );
        f = new zc(0, "default", 0, 1, 1, 1, 10, f);
        this.layers.set(f.ID, f);
      }
      for (f = this.layers.iterator(); f.hasNext(); ) {
        var g = f.next();
        d = Math.max(d, g.order) | 0;
        e.h[g.order] = g;
        var h = g.layerName,
          n = this.layersByName;
        null != t[h] ? n.setReserved(h, g) : (n.h[h] = g);
        u.__instanceof(g, zc)
          ? this.interactiveLayers.push(u.__cast(g, zc))
          : u.__instanceof(g, Xd) &&
            this.backgroundLayers.push(u.__cast(g, Xd));
      }
      f = 0;
      for (g = d + 1; f < g; )
        (n = f++),
          (h = d - n),
          (n = e.h[n]),
          (n.order = h),
          (this.layersToDraw.h[h] = n);
      e = 0;
      for (d += 1; e < d; )
        (f = e++),
          (f = this.layersToDraw.h[f]),
          u.__instanceof(f, Xd)
            ? ((f = u.__cast(f, Xd)), f.load(), this.master.addChild(f))
            : u.__instanceof(f, zc) &&
              ((f = u.__cast(f, zc)),
              a || ((a = !0), (this.bottomLayer = f)),
              b ||
                c != Math.floor(this.interactiveLayers.length / 2) ||
                ((b = !0), (this.middleLayer = f)),
              this.master.addChild(f),
              (this.actorsPerLayer.h[f.ID] = f.actorContainer),
              (this.topLayer = f),
              f.tiles.mountGrid(),
              ++c);
    },
    setColorBackground: function (a) {
      a.draw(
        this.colorLayer.get_graphics(),
        0,
        0,
        (r.screenWidth * r.SCALE) | 0,
        (r.screenHeight * r.SCALE) | 0
      );
    },
    optimizePool: function () {
      for (var a = this.recycledActorsOfType.iterator(); a.hasNext(); ) {
        for (var b = a.next(), c = [], d = 0; d < b.length; ) {
          var e = b[d];
          ++d;
          null != e && e.recycled && c.push(e);
        }
        for (d = 0; d < c.length; )
          (e = c[d]), ++d, Q.remove(b, e), this.removeActor(e);
      }
    },
    cleanup: function () {
      null != r.debugDrawer &&
        null != r.debugDrawer.m_sprite &&
        r.debugDrawer.m_sprite.get_graphics().clear();
      for (var a = 0, b = this.interactiveLayers; a < b.length; ) {
        var c = b[a];
        ++a;
        c.clear();
      }
      this.hudLayer.clear();
      J.removeAllChildren(this.master);
      this.behaviors.destroy();
      this.camera.destroy();
      this.camera = null;
      if (null != this.world) {
        a = this.world.getBodyList();
        for (b = this.world.getJointList(); null != b; )
          this.world.destroyJoint(b), (b = b.getNext());
        for (; null != a; ) this.world.destroyBody(a), (a = a.getNext());
      }
      for (a = this.actorsOfType.iterator(); a.hasNext(); ) a.next().length = 0;
      for (a = this.recycledActorsOfType.iterator(); a.hasNext(); )
        for (b = a.next(), c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          d.destroyed || d.destroy();
        }
      for (a = this.recycledActorsOfType.iterator(); a.hasNext(); )
        a.next().length = 0;
      for (a = this.allActors.iterator(); a.hasNext(); ) a.next().destroy();
      for (; 0 < zh.count(this.allActors); )
        for (a = this.allActors.keys(); a.hasNext(); )
          (b = a.next()), this.allActors.unset(b);
      this.scene.unload();
      this.whenKeyPressedListeners =
        this.disableCollisionList =
        this.collisionPairs =
        this.tasks =
        this.scene =
        this.allActors =
        this.reverseGroups =
        this.groups =
        this.joints =
        this.terrainRegions =
        this.regions =
        this.animatedTiles =
        this.dynamicTiles =
        this.layersToDraw =
        this.actorsPerLayer =
        this.backgroundLayers =
        this.interactiveLayers =
        this.layersByName =
        this.layers =
        this.recycledActorsOfType =
        this.actorsOfType =
          null;
      this.hasKeyPressedListeners = !1;
      this.nativeListeners =
        this.whenFocusChangedListeners =
        this.whenMTEndListeners =
        this.whenMTDragListeners =
        this.whenMTStartListeners =
        this.whenSwipedListeners =
        this.gameScaleListeners =
        this.screenSizeListeners =
        this.fullscreenListeners =
        this.whenPausedListeners =
        this.whenMouseDraggedListeners =
        this.whenMouseMovedListeners =
        this.whenMouseReleasedListeners =
        this.whenMousePressedListeners =
        this.whenDrawingListeners =
        this.whenUpdatedListeners =
        this.channelListeners =
        this.soundListeners =
        this.collisionListeners =
        this.typeGroupPositionListeners =
        this.whenTypeGroupDiesListeners =
        this.whenTypeGroupCreatedListeners =
        this.whenAnyGamepadReleasedListeners =
        this.whenAnyGamepadPressedListeners =
        this.whenAnyKeyReleasedListeners =
        this.whenAnyKeyPressedListeners =
          null;
      m.lastCreatedActor = null;
      m.lastCreatedJoint = null;
      m.lastCreatedRegion = null;
      m.lastCreatedTerrainRegion = null;
      H.update();
      this.world = null;
    },
    switchScene: function (a, b, c) {
      if (!this.isTransitioning()) {
        null != b && b.isComplete() && b.reset();
        if (null == b || 0 == b.duration) b = new jb(0);
        if (null == c || 0 == c.duration) c = new jb(1);
        this.leave = b;
        this.enter = c;
        this.leave.isComplete() || this.leave.start();
        this.sceneToEnter = a;
      }
    },
    enterScene: function () {
      this.enter.isComplete() ||
        (this.enter.start(), null != this.leave && this.leave.cleanup());
      this.leave = null;
      this.sceneInitialized = !1;
      this.cleanup();
      this.loadScene(this.sceneToEnter);
      this.sceneInitialized = !0;
    },
    isTransitioning: function () {
      return (null != this.enter && this.enter.isActive()) ||
        (null != this.leave && this.leave.isActive())
        ? !0
        : !1;
    },
    isTransitioningOut: function () {
      return null != this.leave && this.leave.isActive() ? !0 : !1;
    },
    createActorInNextScene: function (a, b, c, d) {
      this.actorsToCreateInNextScene.push(new ap(a, b, c, d));
    },
    createActor: function (a, b) {
      b = u.__cast($b.get().resources.get(a.actorType.spriteID), ii);
      b = new $a(
        this,
        a.elementID,
        a.groupID,
        a.x,
        a.y,
        a.layerID,
        -1,
        -1,
        b,
        a.behaviorValues,
        a.actorType,
        r.NO_PHYSICS ? null : a.actorType.bodyDef,
        !1,
        !1,
        !1,
        !1,
        null,
        a.actorType.autoScale,
        a.actorType.ignoreGravity,
        a.actorType.physicsMode
      );
      if (0 != a.angle)
        if (0 != b.currOffset.x || 0 != b.currOffset.y) {
          var c = b.currOrigin.x | 0,
            d = b.currOrigin.y | 0;
          b.setOriginPoint((b.cacheWidth / 2) | 0, (b.cacheHeight / 2) | 0);
          b.setAngle(a.angle, !1);
          b.setOriginPoint(c, d);
        } else b.setAngle(a.angle, !1);
      if (1 != a.scaleX || 1 != a.scaleY) {
        var e = (b.cacheWidth / 2) | 0,
          f = (b.cacheHeight / 2) | 0;
        if (b.currOrigin.x != e || b.currOrigin.y != f)
          (c = Math.sin(0.01745329251994278 * a.angle)),
            (d = Math.cos(0.01745329251994278 * a.angle)),
            (e = (b.currOrigin.x - e) * a.scaleX - b.currOffset.x),
            (f = (b.currOrigin.y - f) * a.scaleY - b.currOffset.y),
            b.setX(b.getX(!1) + e * d - f * c),
            b.setY(b.getY(!1) + e * c + f * d);
        b.growTo(a.scaleX, a.scaleY, 0);
      }
      b.set_name(a.actorType.name);
      null == this.recycledActorsOfType.h[a.actorType.ID] &&
        (this.recycledActorsOfType.h[a.actorType.ID] = []);
      this.recycledActorsOfType.h[a.actorType.ID].push(b);
      2 != a.actorType.physicsMode &&
        ((c = this.groups.h[a.groupID]), null != c && c.addChild(b));
      1e8 == a.elementID
        ? (this.nextID++, (b.ID = this.nextID), this.allActors.set(b.ID, b))
        : (this.allActors.set(b.ID, b),
          (this.nextID = Math.max(b.ID, this.nextID) | 0));
      b.internalUpdate(0, !1);
      b.updateDrawingMatrix();
      null != a.actorType &&
        -1 != a.actorType.ID &&
        ((c = this.actorsOfType.h[a.actorType.ID]),
        null == c && ((c = []), (this.actorsOfType.h[a.actorType.ID] = c)),
        null != c && c.push(b));
      return (m.lastCreatedActor = b);
    },
    removeActor: function (a) {
      this.allActors.unset(a.ID);
      this.removeActorFromLayer(a, a.layer);
      var b = this.groups,
        c = a.getGroupID();
      b.h[c].removeChild(a);
      a.destroy();
      null != a.type &&
        -1 != a.typeID &&
        ((b = this.actorsOfType.h[a.typeID]), null != b && Q.remove(b, a));
    },
    removeActorFromLayer: function (a, b) {
      null != b &&
        a.layer == b &&
        (b == this.hudLayer &&
          (0 == a.physicsMode && a.body.setAlwaysActive(a.alwaysSimulate),
          (a.isHUD = !1),
          (a.cachedLayer = null)),
        b.actorContainer.contains(a) &&
          (b.actorContainer.removeChild(a), (a.layer = null)));
    },
    moveActorToLayer: function (a, b) {
      if (a.layer != b && null != b) {
        if (
          null == a.layer ||
          a.layer.scrollFactorX != b.scrollFactorX ||
          a.layer.scrollFactorY != b.scrollFactorY
        )
          a.updateMatrix = !0;
        b == this.hudLayer &&
          (0 == a.physicsMode && a.body.setAlwaysActive(!0),
          (a.isHUD = !0),
          (a.cachedLayer = a.layer));
        null != a.layer && this.removeActorFromLayer(a, a.layer);
        b.actorContainer.addChild(a);
        a.layer = b;
      }
    },
    recycleActor: function (a) {
      if (null != a && !a.recycled) {
        var b = r.engine.whenTypeGroupDiesListeners,
          c = a.getType();
        b = b.h[c.__id__];
        c = r.engine.whenTypeGroupDiesListeners;
        var d = a.getGroup();
        c = c.h[d.__id__];
        d = a.whenKilledListeners;
        for (var e = 0; e < d.length; ) {
          try {
            var f = d[e];
            f(d);
            -1 == J.indexOf(d, f) && --e;
          } catch (n) {
            if (
              ((X.lastException = n),
              n instanceof v && (n = n.val),
              !u.__instanceof(n, String))
            )
              throw n;
          }
          ++e;
        }
        if (null != b)
          for (f = 0; f < b.length; ) {
            try {
              var g = b[f];
              g(a, b);
              -1 == J.indexOf(b, g) && --f;
            } catch (n) {
              if (
                ((X.lastException = n),
                n instanceof v && (n = n.val),
                !u.__instanceof(n, String))
              )
                throw n;
            }
            ++f;
          }
        if (null != c)
          for (g = 0; g < c.length; ) {
            try {
              var h = c[g];
              h(a, c);
              -1 == J.indexOf(c, h) && --g;
            } catch (n) {
              if (
                ((X.lastException = n),
                n instanceof v && (n = n.val),
                !u.__instanceof(n, String))
              )
                throw n;
            }
            ++g;
          }
        a.isHUD && a.unanchorFromScreen();
        a.alwaysSimulate && a.makeSometimesSimulate(!1);
        a.firstMove = !1;
        a.setXY(1e6, 1e6, !1, !0);
        a.colX = 1e6;
        a.colY = 1e6;
        a.recycled = !0;
        a.killLeaveScreen = !1;
        a.lastScreenState = !1;
        a.lastSceneState = !1;
        a.cancelTweens();
        a.clearFilters();
        a.resetBlendMode();
        a.set_alpha(1);
        a.realScaleX = 1;
        a.realScaleY = 1;
        a.switchToDefaultAnimation();
        a.disableActorDrawing();
        a.removeAttachedImages();
        if (0 == a.physicsMode && null != a.body)
          for (h = a.body.getContactList(); null != h; )
            r.engine.world.m_contactManager.m_contactListener.endContact(
              h.contact
            ),
              (h = h.next);
        a.removeAllListeners();
        a.resetListeners();
        this.removeActorFromLayer(a, a.layer);
        0 == a.physicsMode &&
          (a.body.setActive(!1),
          a.body.setAwake(!1),
          a.body.setBullet(a.type.bodyDef.bullet),
          null != a.body.m_prev && (a.body.m_prev.m_next = a.body.m_next),
          null != a.body.m_next && (a.body.m_next.m_prev = a.body.m_prev),
          a.body == this.world.m_bodyList &&
            (this.world.m_bodyList = a.body.m_next),
          (a.body.m_prev = null),
          (a.body.m_next = null),
          --this.world.m_bodyCount);
        a.xSpeed = 0;
        a.ySpeed = 0;
        a.rSpeed = 0;
        a.continuousCollision = !1;
        h = 0;
        for (g = this.tasks; h < g.length; )
          (f = g[h]), ++h, f.actor == a && this.removeTask(f);
        this.allActors.unset(a.ID);
      }
    },
    getRecycledActorOfType: function (a, b, c, d) {
      a = this.getRecycledActorOfTypeOnLayer(
        a,
        b,
        c,
        this.getLayerByOrder(d).ID
      );
      r.paused && (a.updateDrawingMatrix(), a.pause());
      return a;
    },
    getRecycledActorOfTypeOnLayer: function (a, b, c, d) {
      var e = null;
      null == this.recycledActorsOfType.h[a.ID] &&
        (this.recycledActorsOfType.h[a.ID] = []);
      var f = this.recycledActorsOfType.h[a.ID];
      if (null != f) {
        for (var g = 0; g < f.length; )
          if (((e = f[g]), ++g, null != e && e.recycled)) {
            e.createTime = wa.getTimer();
            this.allActors.set(e.ID, e);
            e.dead = !1;
            e.dying = !1;
            e.recycled = !1;
            e.killLeaveScreen = !1;
            e.switchToDefaultAnimation();
            e.enableAllBehaviors();
            0 == e.physicsMode &&
              (e.body.setActive(!0),
              e.body.setAwake(!0),
              (e.body.m_prev = null),
              (e.body.m_next = this.world.m_bodyList),
              null != this.world.m_bodyList &&
                (this.world.m_bodyList.m_prev = e.body),
              (this.world.m_bodyList = e.body),
              ++this.world.m_bodyCount);
            e.registry = new la();
            e.enableActorDrawing();
            e.setXY(b, c, !1, !0);
            0 == e.physicsMode && ((e.colX = b), (e.colY = c));
            e.setAngle(0, !1);
            e.setIgnoreGravity(e.defaultGravity);
            e.set_alpha(1);
            e.realScaleX = 1;
            e.realScaleY = 1;
            null != e.bodyDef && (e.continuousCollision = e.bodyDef.bullet);
            e.updateDrawingMatrix(!0);
            this.moveActorToLayer(e, this.getLayerById(d));
            e.initScripts();
            a = this.whenTypeGroupCreatedListeners.h[a.__id__];
            b = this.whenTypeGroupCreatedListeners;
            c = e.getGroup();
            b = b.h[c.__id__];
            if (null != a)
              for (c = 0; c < a.length; ) {
                try {
                  var h = a[c];
                  h(e, a);
                  -1 == J.indexOf(a, h) && --c;
                } catch (k) {
                  if (
                    ((X.lastException = k),
                    k instanceof v && (k = k.val),
                    !u.__instanceof(k, String))
                  )
                    throw k;
                }
                ++c;
              }
            if (null != b)
              for (h = b, a = 0; a < h.length; ) {
                try {
                  var n = h[a];
                  n(e, h);
                  -1 == J.indexOf(h, n) && --a;
                } catch (k) {
                  if (
                    ((X.lastException = k),
                    k instanceof v && (k = k.val),
                    !u.__instanceof(k, String))
                  )
                    throw k;
                }
                ++a;
              }
            return e;
          }
        e = this.createActorOfType(a, b, c, d);
      }
      return e;
    },
    createActorOfType: function (a, b, c, d) {
      if (null == a) return null;
      b = new $l(1e8, b | 0, c | 0, 1, 1, d, 0, a.groupID, a.ID, null, !1);
      b = this.createActor(b, !0);
      b.initScripts();
      a = this.whenTypeGroupCreatedListeners.h[a.__id__];
      c = this.whenTypeGroupCreatedListeners;
      d = b.getGroup();
      c = c.h[d.__id__];
      if (null != a)
        for (d = 0; d < a.length; ) {
          try {
            var e = a[d];
            e(b, a);
            -1 == J.indexOf(a, e) && --d;
          } catch (g) {
            if (
              ((X.lastException = g),
              g instanceof v && (g = g.val),
              !u.__instanceof(g, String))
            )
              throw g;
          }
          ++d;
        }
      if (null != c)
        for (e = 0; e < c.length; ) {
          try {
            var f = c[e];
            f(b, c);
            -1 == J.indexOf(c, f) && --e;
          } catch (g) {
            if (
              ((X.lastException = g),
              g instanceof v && (g = g.val),
              !u.__instanceof(g, String))
            )
              throw g;
          }
          ++e;
        }
      return b;
    },
    getTopLayer: function () {
      return this.topLayer.ID;
    },
    getBottomLayer: function () {
      return this.bottomLayer.ID;
    },
    getMiddleLayer: function () {
      return this.middleLayer.ID;
    },
    update: function (a) {
      if (null != this.scene) {
        sb.update(a | 0);
        if (!r.NO_PHYSICS) {
          var b = this.world.getScreenBounds();
          b.lowerBound.x =
            (r.cameraX / r.SCALE - r.paddingLeft) / r.physicsScale;
          b.lowerBound.y =
            (r.cameraY / r.SCALE - r.paddingTop) / r.physicsScale;
          b.upperBound.x =
            b.lowerBound.x +
            (r.screenWidth + r.paddingRight + r.paddingLeft) / r.physicsScale;
          b.upperBound.y =
            b.lowerBound.y +
            (r.screenHeight + r.paddingBottom + r.paddingTop) / r.physicsScale;
        }
        b = (H.mouseX / r.SCALE) | 0;
        var c = (H.mouseY / r.SCALE) | 0;
        if (H.mousePressed) {
          m.mpx = b;
          m.mpy = c;
          for (var d = this.whenMousePressedListeners, e = 0; e < d.length; ) {
            try {
              var f = d[e];
              f(d);
              -1 == J.indexOf(d, f) && --e;
            } catch (l) {
              if (
                ((X.lastException = l),
                l instanceof v && (l = l.val),
                !u.__instanceof(l, String))
              )
                throw l;
            }
            ++e;
          }
        }
        if (H.mouseReleased)
          for (
            m.mrx = b, m.mry = c, f = this.whenMouseReleasedListeners, d = 0;
            d < f.length;

          ) {
            try {
              var g = f[d];
              g(f);
              -1 == J.indexOf(f, g) && --d;
            } catch (l) {
              if (
                ((X.lastException = l),
                l instanceof v && (l = l.val),
                !u.__instanceof(l, String))
              )
                throw l;
            }
            ++d;
          }
        if (this.mx != b || this.my != c) {
          this.mx = b;
          this.my = c;
          g = this.whenMouseMovedListeners;
          for (b = 0; b < g.length; ) {
            try {
              var h = g[b];
              h(g);
              -1 == J.indexOf(g, h) && --b;
            } catch (l) {
              if (
                ((X.lastException = l),
                l instanceof v && (l = l.val),
                !u.__instanceof(l, String))
              )
                throw l;
            }
            ++b;
          }
          if (H.mouseDown && !H.mousePressed)
            for (h = this.whenMouseDraggedListeners, g = 0; g < h.length; ) {
              try {
                var n = h[g];
                n(h);
                -1 == J.indexOf(h, n) && --g;
              } catch (l) {
                if (
                  ((X.lastException = l),
                  l instanceof v && (l = l.val),
                  !u.__instanceof(l, String))
                )
                  throw l;
              }
              ++g;
            }
        }
        for (n = 0; n < this.tasks.length; )
          (h = this.tasks[n]),
            h.done || h.update(r.STEP_SIZE),
            h.done && (Q.remove(this.tasks, h), --n),
            ++n;
        if (this.hasKeyPressedListeners) {
          for (n = this.whenKeyPressedListeners.keys(); n.hasNext(); )
            if (
              ((b = n.next()), (h = H.pressed(b)), (g = H.released(b)), h || g)
            )
              for (
                c = this.whenKeyPressedListeners,
                  b = null != t[b] ? c.getReserved(b) : c.h[b],
                  c = 0;
                c < b.length;

              ) {
                try {
                  var k = b[c];
                  k(h, g, b);
                  -1 == J.indexOf(b, k) && --c;
                } catch (l) {
                  if (
                    ((X.lastException = l),
                    l instanceof v && (l = l.val),
                    !u.__instanceof(l, String))
                  )
                    throw l;
                }
                ++c;
              }
          this.keyPollOccurred = !0;
        }
        k = this.whenUpdatedListeners;
        for (n = 0; n < k.length; ) {
          try {
            var p = k[n];
            p(a, k);
            -1 == J.indexOf(k, p) && --n;
          } catch (l) {
            if (
              ((X.lastException = l),
              l instanceof v && (l = l.val),
              !u.__instanceof(l, String))
            )
              throw l;
          }
          ++n;
        }
        r.NO_PHYSICS ||
          (this.world.step(0.01, 3, 3),
          this.world.clearForces(),
          r.DEBUG_DRAW && this.world.drawDebugData());
        if (0 != this.regions.mSize)
          for (p = this.regions.iterator(); p.hasNext(); )
            (k = p.next()), null != k && k.innerUpdate(a, !0);
        for (; 0 < this.disableCollisionList.length; )
          this.disableCollisionList.pop();
        if (0 != this.collisionPairs.mSize)
          for (p = this.collisionPairs.keys(); p.hasNext(); )
            (k = p.next()), this.collisionPairs.unset(k);
        ue.updateAll(a);
        if (0 != this.allActors.mSize)
          for (p = this.allActors.iterator(); p.hasNext(); )
            (k = p.next()),
              null == k ||
                k.dead ||
                k.recycled ||
                ((n =
                  (0 != k.physicsMode || k.body.isActive()) &&
                  k.colX + k.cacheWidth >=
                    r.cameraX / r.SCALE - r.paddingLeft &&
                  k.colY + k.cacheHeight >=
                    r.cameraY / r.SCALE - r.paddingTop &&
                  k.colX <
                    r.cameraX / r.SCALE + r.screenWidth + r.paddingRight &&
                  k.colY <
                    r.cameraY / r.SCALE + r.screenHeight + r.paddingBottom),
                (k.isOnScreenCache = n || k.isHUD),
                0 == k.physicsMode && null != k.body
                  ? k.killLeaveScreen && !n
                    ? this.recycleActor(k)
                    : (k.body.isActive() || k.alwaysSimulate || k.isHUD) &&
                      k.innerUpdate(a, !1)
                  : 0 != k.physicsMode &&
                    (k.killLeaveScreen && !n
                      ? this.recycleActor(k)
                      : (n || k.alwaysSimulate || k.isHUD) &&
                        k.innerUpdate(a, !1)),
                k.dead && this.disableCollisionList.push(k));
        this.keyPollOccurred = !1;
        p = 0;
        for (k = this.disableCollisionList.length; p < k; )
          (n = p++),
            (n = this.disableCollisionList[n]),
            null != n && (n.handlesCollisions = !1);
        p = 0;
        for (k = this.animatedTiles.length; p < k; )
          (n = p++),
            (n = this.animatedTiles[n]),
            n.update(a),
            (this.tileUpdated = this.tileUpdated || n.updateSource);
        null != this.leave && this.leave.isActive()
          ? this.leave.update(a)
          : null != this.enter && this.enter.isActive() && this.enter.update(a);
        for (p = this.layers.iterator(); p.hasNext(); )
          p.next().updatePosition(r.cameraX, r.cameraY, a);
        !r.NO_PHYSICS &&
          r.DEBUG_DRAW &&
          (this.debugLayer.set_x(-r.cameraX),
          this.debugLayer.set_y(-r.cameraY));
        this.isShaking &&
          ((this.shakeTimer -= r.STEP_SIZE),
          0 >= this.shakeTimer
            ? this.stopShakingScreen()
            : ((a =
                -this.shakeIntensity * r.screenHeight +
                2 * Math.random() * this.shakeIntensity * r.screenHeight),
              this.master.set_x(
                (-this.shakeIntensity * r.screenWidth +
                  2 * Math.random() * this.shakeIntensity * r.screenWidth) *
                  r.SCALE
              ),
              this.master.set_y(a * r.SCALE)));
      }
    },
    onUpdate: function (a) {
      a = wa.getTimer();
      var b = a - this.lastTime;
      200 <= b && (b = 200);
      this.acc += b;
      r.elapsedTime = b;
      r.totalElapsedTime += b | 0;
      null != this.leave
        ? (this.leave.isComplete() &&
            (this.leave.deactivate(), this.enterScene()),
          this.postUpdate(a))
        : (null != this.enter &&
            this.enter.isComplete() &&
            (this.enter.deactivate(),
            this.enter.cleanup(),
            (this.enter = null)),
          this.sceneInitialized && this.postUpdate(a));
    },
    postUpdate: function (a) {
      for (; this.acc > r.STEP_SIZE; )
        this.update(r.STEP_SIZE), (this.acc -= r.STEP_SIZE), H.update();
      this.lastTime = a;
      if (0 != this.allActors.mSize)
        for (a = this.allActors.iterator(); a.hasNext(); ) {
          var b = a.next();
          if (null != b && (0 != b.physicsMode || null != b.body)) {
            if (
              null != b.currAnimation &&
              b.currAnimation.needsBitmapUpdate()
            ) {
              var c = b.currAnimation;
              null != c.filter
                ? (c.filteredFrames[c.frameIndex] ||
                    ((c.frames[c.frameIndex] = c.applyFilters(
                      c.frames[c.frameIndex],
                      c.model.frames[c.frameIndex],
                      c.filter
                    )),
                    (c.filteredFrames[c.frameIndex] = !0)),
                  c.set_bitmapData(c.frames[c.frameIndex]))
                : c.set_bitmapData(c.model.frames[c.frameIndex]);
              c.smoothing = U.antialias;
              c.needsUpdate = !1;
            }
            b.dead || b.dying
              ? this.removeActor(b)
              : b.updateMatrix || b.resetOrigin
              ? (b.updateDrawingMatrix(),
                (b.updateMatrix = !1),
                (b.resetOrigin = !1))
              : b.smoothMove &&
                (b.drawX != b.realX || b.drawY != b.realY) &&
                b.updateDrawingMatrix();
          }
        }
      this.draw();
    },
    onFocus: function (a) {
      r.inFocus || ((r.inFocus = !0), this.focusChanged(!1));
    },
    onFocusLost: function (a) {
      r.inFocus && ((r.inFocus = !1), this.focusChanged(!0));
    },
    focusChanged: function (a) {
      if (null != this.whenFocusChangedListeners)
        for (var b = this.whenFocusChangedListeners, c = 0; c < b.length; ) {
          try {
            var d = b[c];
            d(a, b);
            -1 == J.indexOf(b, d) && --c;
          } catch (e) {
            if (
              ((X.lastException = e),
              e instanceof v && (e = e.val),
              !u.__instanceof(e, String))
            )
              throw e;
          }
          ++c;
        }
    },
    handleCollision: function (a, b) {
      var c = a.typeID,
        d = b.otherActor.typeID;
      if (r.NO_PHYSICS) {
        var e = 1e6 + b.thisActor.groupID;
        var f = 1e6 + b.otherActor.groupID;
      } else if (
        (null != b.thisShape
          ? ((e = b.thisShape.groupID),
            -1e3 == e &&
              ((f = b.thisShape.getBody()),
              null != f && (e = f.getUserData().groupID)),
            (e = 1e6 + e))
          : (e = 1e6 + b.thisActor.groupID),
        null != b.otherShape)
      ) {
        f = b.otherShape.groupID;
        if (-1e3 == f) {
          var g = b.otherShape.getBody();
          null != g && (f = g.getUserData().groupID);
        }
        f = 1e6 + f;
      } else f = 1e6 + b.otherActor.groupID;
      if (null != this.collisionPairs) {
        g = a.ID;
        var h = this.collisionPairs.mH,
          n = h.mHash[(73856093 * g) & h.mMask];
        if (-1 == n) g = !1;
        else if (((h = h.mData), h[n] == g)) g = !0;
        else {
          var k = !1;
          for (n = h[n + 2]; -1 != n; ) {
            if (h[n] == g) {
              k = !0;
              break;
            }
            n = h[n + 2];
          }
          g = k;
        }
        g || this.collisionPairs.set(a.ID, new Ca());
        g = b.otherActor.ID;
        h = this.collisionPairs.mH;
        n = h.mHash[(73856093 * g) & h.mMask];
        if (-1 == n) g = !1;
        else if (((h = h.mData), h[n] == g)) g = !0;
        else {
          k = !1;
          for (n = h[n + 2]; -1 != n; ) {
            if (h[n] == g) {
              k = !0;
              break;
            }
            n = h[n + 2];
          }
          g = k;
        }
        g || this.collisionPairs.set(b.otherActor.ID, new Ca());
        g = this.collisionPairs;
        n = a.ID;
        k = g.mH;
        h = k.mHash[(73856093 * n) & k.mMask];
        if (-1 == h) n = -2147483648;
        else if (((k = k.mData), k[h] == n)) n = k[h + 1];
        else {
          var m = -2147483648;
          for (h = k[h + 2]; -1 != h; ) {
            if (k[h] == n) {
              m = k[h + 1];
              break;
            }
            h = k[h + 2];
          }
          n = m;
        }
        if (
          (-2147483648 == n ? null : g.mVals[n]).h.hasOwnProperty(
            b.otherActor.ID
          )
        )
          g = !0;
        else {
          g = this.collisionPairs;
          n = b.otherActor.ID;
          k = g.mH;
          h = k.mHash[(73856093 * n) & k.mMask];
          if (-1 == h) n = -2147483648;
          else if (((k = k.mData), k[h] == n)) n = k[h + 1];
          else {
            m = -2147483648;
            for (h = k[h + 2]; -1 != h; ) {
              if (k[h] == n) {
                m = k[h + 1];
                break;
              }
              h = k[h + 2];
            }
            n = m;
          }
          g = (-2147483648 == n ? null : g.mVals[n]).h.hasOwnProperty(a.ID);
        }
        if (g) return;
      }
      if (-1 < c || -1 < d) {
        if (
          !b.otherCollidedWithTerrain &&
          this.collisionListeners.h.hasOwnProperty(c) &&
          this.collisionListeners.h[c].exists(d)
        ) {
          g = this.collisionListeners.h[c].get(d);
          for (n = 0; n < g.length; ) {
            try {
              var l = g[n];
              l(b, g);
              -1 == J.indexOf(g, l) && --n;
            } catch (pc) {
              if (
                ((X.lastException = pc),
                pc instanceof v && (pc = pc.val),
                !u.__instanceof(pc, String))
              )
                throw pc;
            }
            ++n;
          }
          0 == g.length && this.collisionListeners.h[c].remove(d);
        }
        if (
          c != d &&
          this.collisionListeners.h.hasOwnProperty(d) &&
          this.collisionListeners.h[d].exists(c)
        ) {
          l = this.collisionListeners.h[d].get(c);
          g = b.switchData(oc.get());
          for (n = 0; n < l.length; ) {
            try {
              var p = l[n];
              p(g, l);
              -1 == J.indexOf(l, p) && --n;
            } catch (pc) {
              if (
                ((X.lastException = pc),
                pc instanceof v && (pc = pc.val),
                !u.__instanceof(pc, String))
              )
                throw pc;
            }
            ++n;
          }
          0 == l.length && this.collisionListeners.h[d].remove(c);
        }
      }
      if (0 < e && 0 < f) {
        if (
          this.collisionListeners.h.hasOwnProperty(e) &&
          this.collisionListeners.h[e].exists(f)
        ) {
          c = this.collisionListeners.h[e].get(f);
          for (d = 0; d < c.length; ) {
            try {
              var q = c[d];
              q(b, c);
              -1 == J.indexOf(c, q) && --d;
            } catch (pc) {
              if (
                ((X.lastException = pc),
                pc instanceof v && (pc = pc.val),
                !u.__instanceof(pc, String))
              )
                throw pc;
            }
            ++d;
          }
          0 == c.length && this.collisionListeners.h[e].remove(f);
        }
        if (
          e != f &&
          this.collisionListeners.h.hasOwnProperty(f) &&
          this.collisionListeners.h[f].exists(e)
        ) {
          q = this.collisionListeners.h[f].get(e);
          c = b.switchData(oc.get());
          for (d = 0; d < q.length; ) {
            try {
              var t = q[d];
              t(c, q);
              -1 == J.indexOf(q, t) && --d;
            } catch (pc) {
              if (
                ((X.lastException = pc),
                pc instanceof v && (pc = pc.val),
                !u.__instanceof(pc, String))
              )
                throw pc;
            }
            ++d;
          }
          0 == q.length && this.collisionListeners.h[f].remove(e);
        }
      }
      if (null != this.collisionPairs) {
        t = this.collisionPairs;
        e = a.ID;
        f = t.mH;
        q = f.mHash[(73856093 * e) & f.mMask];
        if (-1 == q) e = -2147483648;
        else if (((f = f.mData), f[q] == e)) e = f[q + 1];
        else {
          c = -2147483648;
          for (q = f[q + 2]; -1 != q; ) {
            if (f[q] == e) {
              c = f[q + 1];
              break;
            }
            q = f[q + 2];
          }
          e = c;
        }
        (-2147483648 == e ? null : t.mVals[e]).h[b.otherActor.ID] = !1;
        t = this.collisionPairs;
        b = b.otherActor.ID;
        q = t.mH;
        e = q.mHash[(73856093 * b) & q.mMask];
        if (-1 == e) b = -2147483648;
        else if (((q = q.mData), q[e] == b)) b = q[e + 1];
        else {
          f = -2147483648;
          for (e = q[e + 2]; -1 != e; ) {
            if (q[e] == b) {
              f = q[e + 1];
              break;
            }
            e = q[e + 2];
          }
          b = f;
        }
        (-2147483648 == b ? null : t.mVals[b]).h[a.ID] = !1;
      }
    },
    soundFinished: function (a) {
      var b = u.__cast(this.channels[a], wf);
      if (null != this.soundListeners) {
        var c = this.soundListeners.h[b.currentClip.__id__];
        b.currentSound = null;
        if (null != c)
          for (b = 0; b < c.length; ) {
            try {
              var d = c[b];
              d(c);
              -1 == J.indexOf(c, d) && --b;
            } catch (f) {
              if (
                ((X.lastException = f),
                f instanceof v && (f = f.val),
                !u.__instanceof(f, String))
              )
                throw f;
            }
            ++b;
          }
      } else b.currentSound = null;
      if (
        null != this.channelListeners &&
        ((a = this.channelListeners.h[a]), null != a)
      )
        for (c = 0; c < a.length; ) {
          try {
            var e = a[c];
            e(a);
            -1 == J.indexOf(a, e) && --c;
          } catch (f) {
            if (
              ((X.lastException = f),
              f instanceof v && (f = f.val),
              !u.__instanceof(f, String))
            )
              throw f;
          }
          ++c;
        }
    },
    addTask: function (a) {
      this.tasks.push(a);
    },
    removeTask: function (a) {
      Q.remove(this.tasks, a);
    },
    shakeScreen: function (a, b) {
      this.shakeTimer = (r.MS_PER_SEC * b) | 0;
      this.isShaking = !0;
      this.shakeIntensity = a;
    },
    stopShakingScreen: function () {
      this.shakeTimer = 0;
      this.isShaking = !1;
      this.master.set_x(0);
      this.master.set_y(0);
    },
    cameraFollow: function (a, b, c) {
      this.moveCamera(a.colX + a.cacheWidth / 2, a.colY + a.cacheHeight / 2);
    },
    moveCamera: function (a, b) {
      this.camera.setLocation(a, b);
      r.cameraX = this.camera.realX - r.screenWidthHalf;
      r.cameraY = this.camera.realY - r.screenHeightHalf;
      r.limitCameraToScene &&
        ((r.cameraX = Math.max(
          0,
          Math.min(r.sceneWidth - r.screenWidth, r.cameraX)
        )),
        (r.cameraY = Math.max(
          0,
          Math.min(r.sceneHeight - r.screenHeight, r.cameraY)
        )));
      r.cameraX *= r.SCALE;
      r.cameraY *= r.SCALE;
      1 != this.zoomMultiplier &&
        this.isHUDZoomable &&
        (this.hudLayer.set_x(-m.getScreenX()),
        this.hudLayer.set_y(-m.getScreenY()));
    },
    setZoom: function (a) {
      0 >= a ||
        ((this.zoomMultiplier = a),
        this.root.set_scaleX((r.screenScaleX = a * r.unzoomedScaleX)),
        this.root.set_scaleY((r.screenScaleY = a * r.unzoomedScaleY)),
        (r.screenWidth = ((1 / a) * Va.logicalWidth) | 0),
        (r.screenWidthHalf = (r.screenWidth / 2) | 0),
        (r.screenHeight = ((1 / a) * Va.logicalHeight) | 0),
        (r.screenHeightHalf = (r.screenHeight / 2) | 0),
        this.setColorBackground(this.scene.colorBackground),
        this.root.set_scrollRect(
          new W(0, 0, r.screenWidth * r.SCALE, r.screenHeight * r.SCALE)
        ),
        this.moveCamera(this.camera.realX, this.camera.realY),
        this.isHUDZoomable ||
          (this.hudLayer.set_scaleX(1 / a), this.hudLayer.set_scaleY(1 / a)));
    },
    pause: function () {
      if (!this.isTransitioning()) {
        r.paused = !0;
        if (0 != this.allActors.mSize)
          for (var a = this.allActors.keys(); a.hasNext(); ) {
            var b = a.next(),
              c = this.allActors,
              d = c.mH,
              e = d.mHash[(73856093 * b) & d.mMask];
            if (-1 == e) b = -2147483648;
            else if (((d = d.mData), d[e] == b)) b = d[e + 1];
            else {
              var f = -2147483648;
              for (e = d[e + 2]; -1 != e; ) {
                if (d[e] == b) {
                  f = d[e + 1];
                  break;
                }
                e = d[e + 2];
              }
              b = f;
            }
            c = -2147483648 == b ? null : c.mVals[b];
            null != c && c.pause();
          }
        a = this.whenPausedListeners;
        for (c = 0; c < a.length; ) {
          try {
            var g = a[c];
            g(!0, a);
            -1 == J.indexOf(a, g) && --c;
          } catch (h) {
            if (
              ((X.lastException = h),
              h instanceof v && (h = h.val),
              !u.__instanceof(h, String))
            )
              throw h;
          }
          ++c;
        }
      }
    },
    unpause: function () {
      r.paused = !1;
      if (0 != this.allActors.mSize)
        for (var a = this.allActors.keys(); a.hasNext(); ) {
          var b = a.next(),
            c = this.allActors,
            d = c.mH,
            e = d.mHash[(73856093 * b) & d.mMask];
          if (-1 == e) b = -2147483648;
          else if (((d = d.mData), d[e] == b)) b = d[e + 1];
          else {
            var f = -2147483648;
            for (e = d[e + 2]; -1 != e; ) {
              if (d[e] == b) {
                f = d[e + 1];
                break;
              }
              e = d[e + 2];
            }
            b = f;
          }
          c = -2147483648 == b ? null : c.mVals[b];
          null != c && c.unpause();
        }
      a = this.whenPausedListeners;
      for (c = 0; c < a.length; ) {
        try {
          var g = a[c];
          g(!1, a);
          -1 == J.indexOf(a, g) && --c;
        } catch (h) {
          if (
            ((X.lastException = h),
            h instanceof v && (h = h.val),
            !u.__instanceof(h, String))
          )
            throw h;
        }
        ++c;
      }
    },
    isPaused: function () {
      return r.paused;
    },
    draw: function () {
      for (var a = 0, b = this.interactiveLayers; a < b.length; ) {
        var c = b[a];
        ++a;
        c.overlay.get_graphics().clear();
      }
      this.hudLayer.overlay.get_graphics().clear();
      this.g.graphics = this.transitionLayer.get_graphics();
      this.g.graphics.clear();
      a = this.g;
      a.alpha = 1;
      a.strokeSize = 0;
      a.fillColor = 0;
      a.strokeColor = 0;
      a.font = a.defaultFont;
      if (0 != this.allActors.mSize)
        for (a = this.allActors.iterator(); a.hasNext(); )
          if (
            ((b = a.next()),
            0 < b.whenDrawingListeners.length && null != b.layer)
          ) {
            this.g.graphics = b.layer.overlay.get_graphics();
            c = this.g;
            c.drawActor = !0;
            c.actor = b;
            if (b.smoothMove) {
              var d = b.drawY - Math.floor(b.cacheHeight / 2) - b.currOffset.y;
              c.x =
                (b.drawX - Math.floor(b.cacheWidth / 2) - b.currOffset.x) *
                c.scaleX;
              c.y = d * c.scaleY;
            } else (c.x = b.colX * c.scaleX), (c.y = b.colY * c.scaleY);
            c = this.g;
            c.alpha = 1;
            c.strokeSize = 0;
            c.fillColor = 0;
            c.strokeColor = 0;
            c.font = c.defaultFont;
            b = b.whenDrawingListeners;
            c = this.g;
            for (d = 0; d < b.length; ) {
              try {
                var e = b[d];
                e(c, 0, 0, b);
                -1 == J.indexOf(b, e) && --d;
              } catch (g) {
                if (
                  ((X.lastException = g),
                  g instanceof v && (g = g.val),
                  !u.__instanceof(g, String))
                )
                  throw g;
              }
              ++d;
            }
          }
      e = 0;
      for (a = this.interactiveLayers; e < a.length; )
        if (((b = a[e]), ++e, b.cameraMoved || this.tileUpdated))
          b.tiles.draw(
            (r.cameraX * b.scrollFactorX) | 0,
            (r.cameraY * b.scrollFactorY) | 0
          ),
            (b.cameraMoved = !1);
      this.tileUpdated = !1;
      this.g.graphics = this.transitionLayer.get_graphics();
      e = this.g;
      e.drawActor = !1;
      e.actor = null;
      e.x = 0;
      e.y = 0;
      e = this.g;
      e.alpha = 1;
      e.strokeSize = 0;
      e.fillColor = 0;
      e.strokeColor = 0;
      e.font = e.defaultFont;
      e = this.whenDrawingListeners;
      a = this.g;
      for (b = 0; b < e.length; ) {
        try {
          var f = e[b];
          f(a, 0, 0, e);
          -1 == J.indexOf(e, f) && --b;
        } catch (g) {
          if (
            ((X.lastException = g),
            g instanceof v && (g = g.val),
            !u.__instanceof(g, String))
          )
            throw g;
        }
        ++b;
      }
      Qd.visitStringCache();
      null != this.leave && this.leave.isActive()
        ? this.leave.draw(null)
        : null != this.enter && this.enter.isActive() && this.enter.draw(null);
      null != this.shaders &&
        0 < this.shaders.length &&
        this.shaders[0].capture();
    },
    getValue: function (a, b) {
      return this.behaviors.getAttribute(a, b);
    },
    setValue: function (a, b, c) {
      this.behaviors.setAttribute(a, b, c);
    },
    say: function (a, b, c) {
      return this.behaviors.call2(a, b, c);
    },
    shout: function (a, b) {
      return this.behaviors.call(a, b);
    },
    getActor: function (a) {
      var b = this.allActors,
        c = b.mH,
        d = c.mHash[(73856093 * a) & c.mMask];
      if (-1 == d) a = -2147483648;
      else if (((c = c.mData), c[d] == a)) a = c[d + 1];
      else {
        var e = -2147483648;
        for (d = c[d + 2]; -1 != d; ) {
          if (c[d] == a) {
            e = c[d + 1];
            break;
          }
          d = c[d + 2];
        }
        a = e;
      }
      return -2147483648 == a ? null : b.mVals[a];
    },
    getActorsOfType: function (a) {
      return null == a
        ? []
        : null != this.actorsOfType.h[a.ID]
        ? this.actorsOfType.h[a.ID]
        : [];
    },
    getRecycledActorsOfType: function (a) {
      return this.recycledActorsOfType.h[a.ID];
    },
    getLayer: function (a, b) {
      return 0 == a ? this.getLayerById(P.parseInt(b)) : this.getLayerByName(b);
    },
    getLayerById: function (a, b) {
      null == b && (b = !0);
      if (-1 == a) return null;
      var c = r.engine.layers,
        d = c.mH,
        e = d.mHash[(73856093 * a) & d.mMask];
      if (-1 == e) a = -2147483648;
      else if (((d = d.mData), d[e] == a)) a = d[e + 1];
      else {
        var f = -2147483648;
        for (e = d[e + 2]; -1 != e; ) {
          if (d[e] == a) {
            f = d[e + 1];
            break;
          }
          e = d[e + 2];
        }
        a = f;
      }
      c = -2147483648 == a ? null : c.mVals[a];
      null == c && b && (c = this.topLayer);
      return c;
    },
    getLayerByName: function (a, b) {
      null == b && (b = !0);
      var c = r.engine.layersByName;
      a = null != t[a] ? c.getReserved(a) : c.h[a];
      null == a && b && (a = this.topLayer);
      return a;
    },
    getLayerByOrder: function (a) {
      switch (a) {
        case 0:
          a = this.topLayer;
          break;
        case 1:
          a = this.middleLayer;
          break;
        case 2:
          a = this.bottomLayer;
          break;
        default:
          a = this.topLayer;
      }
      return a;
    },
    sendToBack: function (a) {
      a.isHUD || this.moveActorToLayer(a, this.bottomLayer);
    },
    sendBackward: function (a) {
      if (!a.isHUD)
        for (var b = a.layer.order; this.layersToDraw.h.hasOwnProperty(--b); )
          if (u.__instanceof(this.layersToDraw.h[b], zc)) {
            this.moveActorToLayer(a, this.layersToDraw.h[b]);
            break;
          }
    },
    bringToFront: function (a) {
      a.isHUD || this.moveActorToLayer(a, this.topLayer);
    },
    bringForward: function (a) {
      if (!a.isHUD)
        for (var b = a.layer.order; this.layersToDraw.h.hasOwnProperty(++b); )
          if (u.__instanceof(this.layersToDraw.h[b], zc)) {
            this.moveActorToLayer(a, this.layersToDraw.h[b]);
            break;
          }
    },
    getNumberOfActorsWithinLayer: function (a) {
      return u.__instanceof(a, zc)
        ? u.__cast(a, zc).actorContainer.get_numChildren()
        : 0;
    },
    getNumberOfLayers: function () {
      return this.master.get_numChildren();
    },
    getOrderOfLayer: function (a) {
      return a.order;
    },
    moveLayerToOrder: function (a, b) {
      0 > b && (b = 0);
      b > this.master.get_numChildren() - 1 &&
        (b = this.master.get_numChildren() - 1);
      a.order != b && (this.master.setChildIndex(a, b), this.refreshLayers());
    },
    getNextLayerID: function () {
      for (var a = -1, b = this.layers.iterator(); b.hasNext(); ) {
        var c = b.next();
        a = Math.max(a, c.ID) | 0;
      }
      return a + 1;
    },
    insertLayer: function (a, b) {
      this.master.addChildAt(a, b);
      u.__instanceof(a, Xd)
        ? this.backgroundLayers.push(u.__cast(a, Xd))
        : u.__instanceof(a, zc) && this.interactiveLayers.push(u.__cast(a, zc));
      this.layers.set(a.ID, a);
      b = a.layerName;
      var c = this.layersByName;
      null != t[b] ? c.setReserved(b, a) : (c.h[b] = a);
      this.refreshLayers();
    },
    removeLayer: function (a) {
      this.master.removeChild(a);
      u.__instanceof(a, Xd)
        ? Q.remove(this.backgroundLayers, u.__cast(a, Xd))
        : u.__instanceof(a, zc) &&
          Q.remove(this.interactiveLayers, u.__cast(a, zc));
      this.layers.unset(a.ID);
      this.layersByName.remove(a.layerName);
      this.refreshLayers();
    },
    refreshLayers: function () {
      for (
        var a = !1, b = !1, c = 0, d = 0, e = this.master.get_numChildren();
        d < e;

      ) {
        var f = d++,
          g = u.__cast(this.master.getChildAt(f), Og);
        this.layersToDraw.h[f] = g;
        g.order = f;
        u.__instanceof(g, zc) &&
          (a || ((a = !0), (this.bottomLayer = g)),
          b ||
            c != Math.floor(this.interactiveLayers.length / 2) ||
            ((b = !0), (this.middleLayer = g)),
          (this.topLayer = g),
          ++c);
      }
    },
    getPhysicalWidth: function () {
      return this.physicalWidth;
    },
    getPhysicalHeight: function () {
      return this.physicalHeight;
    },
    enableGlobalSleeping: function () {
      this.world.m_allowSleep = !0;
    },
    disableGlobalSleeping: function () {
      this.world.m_allowSleep = !1;
    },
    getGroup: function (a, b) {
      return -1e3 == a && null != b
        ? ((a = this.groups), (b = b.getGroupID()), a.h[b])
        : this.groups.h[a];
    },
    getGroupByName: function (a) {
      var b = this.reverseGroups;
      a = null != t[a] ? b.getReserved(a) : b.h[a];
      return null == a ? this.groups.h[3] : a;
    },
    nextJointID: function () {
      for (var a = -1, b = this.joints.iterator(); b.hasNext(); ) {
        var c = b.next();
        null != c && (a = Math.max(a, c.ID) | 0);
      }
      return a + 1;
    },
    addJoint: function (a) {
      var b = this.nextJointID();
      a.ID = b;
      this.joints.h[b] = a;
    },
    getJoint: function (a) {
      return this.joints.h[a];
    },
    destroyJoint: function (a) {
      this.joints.remove(a.ID);
      this.world.destroyJoint(a);
    },
    createStickJoint: function (a, b, c, d, e, f) {
      null == f && (f = 0);
      null == e && (e = 0);
      null == d && (d = !1);
      null == c && (c = -1);
      var g = a.getLocalCenter(),
        h = b.getLocalCenter();
      0 == a.getType() &&
        ((g.x = a.getUserData().getPhysicsWidth() / 2),
        (g.y = a.getUserData().getPhysicsHeight() / 2));
      0 == b.getType() &&
        ((h.x = b.getUserData().getPhysicsWidth() / 2),
        (h.y = b.getUserData().getPhysicsHeight() / 2));
      g = a.getWorldPoint(g);
      h = b.getWorldPoint(h);
      var n = new li();
      n.initialize(a, b, g, h);
      n.collideConnected = d;
      n.dampingRatio = e;
      n.frequencyHz = f;
      a = this.world.createJoint(n);
      -1 == c ? this.addJoint(a) : ((this.joints.h[c] = a), (a.ID = c));
      return u.__cast(a, Wi);
    },
    createCustomStickJoint: function (a, b, c, d, e, f) {
      b = new D(b, c);
      e = new D(e, f);
      b.x = r.toPhysicalUnits(b.x);
      b.y = r.toPhysicalUnits(b.y);
      e.x = r.toPhysicalUnits(e.x);
      e.y = r.toPhysicalUnits(e.y);
      b = a.getWorldPoint(b);
      e = d.getWorldPoint(e);
      f = new li();
      f.initialize(a, d, b, e);
      a = this.world.createJoint(f);
      this.addJoint(a);
      return u.__cast(a, Wi);
    },
    createHingeJoint: function (a, b, c, d, e, f, g, h, n, k, m) {
      null == m && (m = 0);
      null == k && (k = 0);
      null == n && (n = 0);
      null == h && (h = 0);
      null == g && (g = !1);
      null == f && (f = !1);
      null == e && (e = !1);
      null == d && (d = -1);
      null == b && (b = this.world.m_groundBody);
      null == c && (c = a.getLocalCenter());
      var l = new mi();
      l.bodyA = a;
      l.bodyB = b;
      c.x = r.toPhysicalUnits(c.x);
      c.y = r.toPhysicalUnits(c.y);
      l.localAnchorA = c;
      l.localAnchorB = b.getLocalPoint(a.getWorldPoint(c));
      l.collideConnected = e;
      l.enableLimit = f;
      l.enableMotor = g;
      l.lowerAngle = h;
      l.upperAngle = n;
      l.maxMotorTorque = k;
      l.motorSpeed = m;
      a = this.world.createJoint(l);
      -1 == d ? this.addJoint(a) : ((this.joints.h[d] = a), (a.ID = d));
      return u.__cast(a, mg);
    },
    createSlidingJoint: function (a, b, c, d, e, f, g, h, n, k, m) {
      null == m && (m = 0);
      null == k && (k = 0);
      null == n && (n = 0);
      null == h && (h = 0);
      null == g && (g = !1);
      null == f && (f = !1);
      null == e && (e = !1);
      null == d && (d = -1);
      null == b && (b = this.world.m_groundBody);
      null == c && (c = new D(1, 0));
      c.normalize();
      var l = a.getWorldCenter(),
        p = b.getWorldCenter();
      0 == a.getType() &&
        null != a.getUserData() &&
        ((l.x = a.getUserData().getPhysicsWidth() / 2),
        (l.y = a.getUserData().getPhysicsHeight() / 2),
        (l = a.getWorldPoint(l)));
      0 == b.getType() &&
        null != b.getUserData() &&
        ((p.x = b.getUserData().getPhysicsWidth() / 2),
        (p.y = b.getUserData().getPhysicsHeight() / 2),
        b.getWorldPoint(p));
      p = new ni();
      p.initialize(a, b, l, c);
      p.collideConnected = e;
      p.enableLimit = f;
      p.enableMotor = g;
      p.lowerTranslation = r.toPhysicalUnits(h);
      p.upperTranslation = r.toPhysicalUnits(n);
      p.maxMotorForce = k;
      p.motorSpeed = r.toPhysicalUnits(m);
      a = this.world.createJoint(p);
      -1 == d ? this.addJoint(a) : ((this.joints.h[d] = a), (a.ID = d));
      return u.__cast(a, ek);
    },
    createRegion: function (a, b, c, d) {
      null == d && (d = !1);
      var e = [];
      e.push(c);
      c = new nd(this, a, b, e);
      d && c.setXY(a + c.regionWidth / 2, b + c.regionHeight / 2);
      this.addRegion(c);
      return c;
    },
    createBoxRegion: function (a, b, c, d) {
      if (r.NO_PHYSICS)
        return (
          (a = new nd(this, a, b, [], new W(0, 0, c, d))), this.addRegion(a), a
        );
      c = r.toPhysicalUnits(c);
      d = r.toPhysicalUnits(d);
      var e = new Db();
      e.setAsBox(c / 2, d / 2);
      return this.createRegion(a, b, e, !0);
    },
    createCircularRegion: function (a, b, c) {
      if (r.NO_PHYSICS)
        return (
          (a = new nd(this, a, b, [], new W(0, 0, 2 * c, 2 * c))),
          this.addRegion(a),
          a
        );
      c = r.toPhysicalUnits(c);
      var d = new Jc();
      d.m_radius = c;
      return this.createRegion(a, b, d, !0);
    },
    addRegion: function (a) {
      -1 == a.ID && (a.ID = this.nextRegionID());
      this.regions.set(a.ID, a);
      r.NO_PHYSICS && this.groups.h[-2].addChild(a);
    },
    removeRegion: function (a) {
      a = this.getRegion(a);
      this.regions.unset(a.ID);
      a.destroy();
      r.NO_PHYSICS && this.groups.h[-2].removeChild(a);
    },
    getRegion: function (a) {
      var b = this.regions,
        c = b.mH,
        d = c.mHash[(73856093 * a) & c.mMask];
      if (-1 == d) a = -2147483648;
      else if (((c = c.mData), c[d] == a)) a = c[d + 1];
      else {
        var e = -2147483648;
        for (d = c[d + 2]; -1 != d; ) {
          if (c[d] == a) {
            e = c[d + 1];
            break;
          }
          d = c[d + 2];
        }
        a = e;
      }
      return -2147483648 == a ? null : b.mVals[a];
    },
    getRegions: function () {
      return this.regions;
    },
    nextRegionID: function () {
      for (var a = -1, b = this.regions.iterator(); b.hasNext(); ) {
        var c = b.next();
        null != c && (a = Math.max(a, c.ID) | 0);
      }
      return a + 1;
    },
    isInRegion: function (a, b) {
      if (null != b) {
        var c = this.regions;
        var d = b.getID(),
          e = c.mH,
          f = e.mHash[(73856093 * d) & e.mMask];
        if (-1 == f) d = -2147483648;
        else if (((e = e.mData), e[f] == d)) d = e[f + 1];
        else {
          var g = -2147483648;
          for (f = e[f + 2]; -1 != f; ) {
            if (e[f] == d) {
              g = e[f + 1];
              break;
            }
            f = e[f + 2];
          }
          d = g;
        }
        c = null != (-2147483648 == d ? null : c.mVals[d]);
      } else c = !1;
      return c ? b.containsActor(a) : !1;
    },
    createTerrainRegion: function (a, b, c, d, e) {
      null == e && (e = 1);
      null == d && (d = !1);
      var f = [];
      f.push(c);
      c = new oh(this, a, b, f, e);
      d && c.setXY(a + c.regionWidth / 2, b + c.regionHeight / 2);
      this.addTerrainRegion(c);
      return c;
    },
    createBoxTerrainRegion: function (a, b, c, d, e) {
      null == e && (e = 1);
      c = r.toPhysicalUnits(c);
      d = r.toPhysicalUnits(d);
      var f = new Db();
      f.setAsBox(c / 2, d / 2);
      return this.createTerrainRegion(a, b, f, !0, e);
    },
    createCircularTerrainRegion: function (a, b, c, d) {
      null == d && (d = 1);
      c = r.toPhysicalUnits(c);
      var e = new Jc();
      e.m_radius = c;
      return this.createTerrainRegion(a, b, e, !0, d);
    },
    addTerrainRegion: function (a) {
      -1 == a.ID && (a.ID = this.nextTerrainRegionID());
      this.terrainRegions.h[a.ID] = a;
    },
    removeTerrainRegion: function (a) {
      var b = this.getTerrainRegion(a);
      this.terrainRegions.remove(a);
      b.destroy();
    },
    getTerrainRegion: function (a) {
      return this.terrainRegions.h[a];
    },
    getTerrainRegions: function () {
      return this.terrainRegions;
    },
    nextTerrainRegionID: function () {
      for (var a = -1, b = this.terrainRegions.iterator(); b.hasNext(); ) {
        var c = b.next();
        null != c && (a = Math.max(a, c.ID) | 0);
      }
      return a + 1;
    },
    setGameAttribute: function (a, b) {
      var c = this.gameAttributes;
      null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
    },
    getGameAttribute: function (a) {
      var b = this.gameAttributes;
      return null != t[a] ? b.getReserved(a) : b.h[a];
    },
    setOffscreenTolerance: function (a, b, c, d) {
      r.paddingTop = a;
      r.paddingLeft = b;
      r.paddingBottom = c;
      r.paddingRight = d;
    },
    setScrollFactor: function (a, b, c) {
      this.setLayerScrollFactor(this.getLayerById(a), b, c);
    },
    setLayerScrollFactor: function (a, b, c) {
      null == c && (c = b);
      a.scrollFactorX = b;
      a.scrollFactorY = c;
    },
    __class__: r,
  };
  var H = function () {};
  p["com.stencyl.Input"] = H;
  H.__name__ = ["com", "stencyl", "Input"];
  H.resetStatics = function () {
    r.stage.removeEventListener("keyDown", H.onKeyDown);
    r.stage.removeEventListener("keyUp", H.onKeyUp);
    r.stage.removeEventListener("mouseDown", H.onMouseDown);
    r.stage.removeEventListener("mouseUp", H.onMouseUp);
    r.stage.removeEventListener("mouseWheel", H.onMouseWheel);
    r.stage.removeEventListener("touchBegin", H.onMouseDown);
    r.stage.removeEventListener("touchEnd", H.onMouseUp);
    H._roxAgent.detach();
    r.engine.root.removeEventListener("rox_gesture_swipe", H.onSwipe);
    H.mouseX = 0;
    H.mouseY = 0;
    H.mouseDown = H.mousePressed = H.mouseReleased = H.mouseWheel = !1;
    H.rightMouseDown = H.rightMousePressed = H.rightMouseReleased = !1;
    H.middleMouseDown = H.middleMousePressed = H.middleMouseReleased = !1;
    H.mouseWheelDelta = 0;
    H.accelX = H.accelY = H.accelZ = 0;
    H.numTouches = 0;
    H._swipeDirection = 0;
    H.swipedUp = H.swipedDown = H.swipedRight = H.swipedLeft = !1;
    H._roxAgent = null;
    H._enabled = !1;
    H._key = [];
    H._joySensitivity = 0.12;
    H._joyHatState = new Ca();
    H._joyAxisState = new Ca();
    H._joyAxisPressure = new Ca();
    H._joyButtonState = new Ca();
    H._keyControlMap = new Ca();
    H._controlMap = new la();
    H._controlsToReset = [];
  };
  H.define = function (a, b) {
    var c = H._controlMap;
    if (null == (null != t[a] ? c.getReserved(a) : c.h[a])) {
      c = H._controlMap;
      var d = new am(a);
      null != t[a] ? c.setReserved(a, d) : (c.h[a] = d);
    } else H.unmapControl(a);
    for (c = 0; c < b.length; ) (d = b[c]), ++c, H.mapKey(d, a);
  };
  H.mapKey = function (a, b) {
    var c = H._keyControlMap.h[a];
    null != c && (Q.remove(c.keys, a), H.controlStateUpdated(c));
    c = H._controlMap;
    b = null != t[b] ? c.getReserved(b) : c.h[b];
    b.keys.push(a);
    H.controlStateUpdated(b);
    H._keyControlMap.h[a] = b;
  };
  H.unmapKey = function (a) {
    var b = H._keyControlMap.h[a];
    null != b && (Q.remove(b.keys, a), H.controlStateUpdated(b));
    H._keyControlMap.remove(a);
  };
  H.getKeys = function (a) {
    var b = H._controlMap;
    a = null != t[a] ? b.getReserved(a) : b.h[a];
    return null != a ? a.keys : null;
  };
  H.mapJoystickButton = function (a, b) {};
  H.unmapJoystickButton = function (a) {};
  H.unmapControl = function (a) {
    var b = H._controlMap;
    for (a = null != t[a] ? b.getReserved(a) : b.h[a]; 0 < a.keys.length; )
      H._keyControlMap.remove(a.keys.pop());
    a.down && H.controlReleased(a);
  };
  H.unmapKeyboardFromControl = function (a) {
    var b = H._controlMap;
    for (a = null != t[a] ? b.getReserved(a) : b.h[a]; 0 < a.keys.length; )
      H._keyControlMap.remove(a.keys.pop());
    H.controlStateUpdated(a);
  };
  H.unmapJoystickFromControl = function (a) {
    var b = H._controlMap;
    a = null != t[a] ? b.getReserved(a) : b.h[a];
    H.controlStateUpdated(a);
  };
  H.setJoySensitivity = function (a) {};
  H.saveJoystickConfig = function (a) {};
  H.loadJoystickConfig = function (a) {};
  H.clearJoystickConfig = function () {};
  H.loadInputConfig = function () {
    for (var a = U.keys.keys(); a.hasNext(); ) {
      var b = a.next(),
        c = U.keys;
      c = null != t[b] ? c.getReserved(b) : c.h[b];
      for (var d = [], e = 0; e < c.length; ) {
        var f = c[e];
        ++e;
        d.push(Da.keyFromName(f));
      }
      c = new am(b);
      e = H._controlMap;
      null != t[b] ? e.setReserved(b, c) : (e.h[b] = c);
      c.keys = d;
      b = 0;
      for (d = c.keys; b < d.length; )
        (e = d[b]), ++b, (H._keyControlMap.h[e] = c);
    }
  };
  H.check = function (a) {
    var b = H._controlMap;
    a = null != t[a] ? b.getReserved(a) : b.h[a];
    return null != a ? a.down : !1;
  };
  H.pressed = function (a) {
    var b = H._controlMap;
    a = null != t[a] ? b.getReserved(a) : b.h[a];
    return null != a ? a.pressed : !1;
  };
  H.released = function (a) {
    var b = H._controlMap;
    a = null != t[a] ? b.getReserved(a) : b.h[a];
    return null != a ? a.released : !1;
  };
  H.getButtonPressure = function (a) {
    var b = H._controlMap;
    a = null != t[a] ? b.getReserved(a) : b.h[a];
    return null != a ? a.pressure : 0;
  };
  H.simulateKeyPress = function (a) {
    var b = H._controlMap;
    H.controlPressed(null != t[a] ? b.getReserved(a) : b.h[a], 1);
  };
  H.simulateKeyRelease = function (a) {
    var b = H._controlMap;
    H.controlReleased(null != t[a] ? b.getReserved(a) : b.h[a]);
  };
  H.enableJoystick = function () {};
  H.enable = function () {
    H._enabled ||
      null == r.stage ||
      (r.stage.addEventListener("keyDown", H.onKeyDown, !1, 2),
      r.stage.addEventListener("keyUp", H.onKeyUp, !1, 2),
      r.stage.addEventListener("mouseDown", H.onMouseDown, !1, 2),
      r.stage.addEventListener("mouseUp", H.onMouseUp, !1, 2),
      r.stage.addEventListener("mouseWheel", H.onMouseWheel, !1, 2),
      r.stage.addEventListener("touchBegin", H.onMouseDown),
      r.stage.addEventListener("touchEnd", H.onMouseUp),
      (H._roxAgent = new Wa(r.engine.root, 2)),
      r.engine.root.addEventListener("rox_gesture_swipe", H.onSwipe),
      (H._swipeDirection = -1),
      (H.swipedLeft = !1),
      (H.swipedRight = !1),
      (H.swipedUp = !1),
      (H.swipedDown = !1),
      (H.mouseX = 0),
      (H.mouseY = 0),
      (H.accelX = 0),
      (H.accelY = 0),
      (H.accelZ = 0),
      (H.numTouches = 0),
      (H._enabled = !0));
  };
  H.update = function () {
    H.swipedLeft = !1;
    H.swipedRight = !1;
    H.swipedUp = !1;
    H.swipedDown = !1;
    if (-1 < H._swipeDirection) {
      switch (H._swipeDirection) {
        case 0:
          H.swipedLeft = !0;
          break;
        case 1:
          H.swipedRight = !0;
          break;
        case 2:
          H.swipedUp = !0;
          break;
        case 3:
          H.swipedDown = !0;
      }
      if (null != r.engine.whenSwipedListeners)
        for (var a = r.engine.whenSwipedListeners, b = 0; b < a.length; ) {
          try {
            var c = a[b];
            c(a);
            -1 == J.indexOf(a, c) && --b;
          } catch (d) {
            if (
              ((X.lastException = d),
              d instanceof v && (d = d.val),
              !u.__instanceof(d, String))
            )
              throw d;
          }
          ++b;
        }
      H._swipeDirection = -1;
    }
    H.mouseX = (r.stage.get_mouseX() - r.screenOffsetX) / r.screenScaleX;
    H.mouseY = (r.stage.get_mouseY() - r.screenOffsetY) / r.screenScaleY;
    for (a = H._controlsToReset.length; 0 <= --a; )
      (b = H._controlsToReset.pop()), (b.pressed = !1), (b.released = !1);
    H.mousePressed && (H.mousePressed = !1);
    H.mouseReleased && (H.mouseReleased = !1);
    H.rightMousePressed && (H.rightMousePressed = !1);
    H.rightMouseReleased && (H.rightMouseReleased = !1);
    H.middleMousePressed && (H.middleMousePressed = !1);
    H.middleMouseReleased && (H.middleMouseReleased = !1);
    H.mouseWheelDelta = 0;
  };
  H.onSwipe = function (a) {
    a = u.__cast(a.extra, Y);
    Math.abs(a.x) <= Math.abs(a.y)
      ? (H._swipeDirection = 0 >= a.y ? 2 : 3)
      : Math.abs(a.x) > Math.abs(a.y) && (H._swipeDirection = 0 >= a.x ? 0 : 1);
  };
  H.controlPressed = function (a, b) {
    if (null != a)
      if (a.down) a.pressure = b;
      else if (
        ((a.down = !0),
        (a.pressed = !0),
        (a.pressure = b),
        H._controlsToReset.push(a),
        r.engine.keyPollOccurred &&
          ((a = a.name),
          (b = r.engine.whenKeyPressedListeners),
          (a = null != t[a] ? b.getReserved(a) : b.h[a]),
          null != a))
      )
        for (b = 0; b < a.length; ) {
          try {
            var c = a[b];
            c(!0, !1, a);
            -1 == J.indexOf(a, c) && --b;
          } catch (d) {
            if (
              ((X.lastException = d),
              d instanceof v && (d = d.val),
              !u.__instanceof(d, String))
            )
              throw d;
          }
          ++b;
        }
  };
  H.controlReleased = function (a) {
    if (
      null != a &&
      a.down &&
      ((a.down = !1),
      (a.released = !0),
      (a.pressure = 0),
      H._controlsToReset.push(a),
      r.engine.keyPollOccurred)
    ) {
      a = a.name;
      var b = r.engine.whenKeyPressedListeners;
      a = null != t[a] ? b.getReserved(a) : b.h[a];
      if (null != a)
        for (b = 0; b < a.length; ) {
          try {
            var c = a[b];
            c(!1, !0, a);
            -1 == J.indexOf(a, c) && --b;
          } catch (d) {
            if (
              ((X.lastException = d),
              d instanceof v && (d = d.val),
              !u.__instanceof(d, String))
            )
              throw d;
          }
          ++b;
        }
    }
  };
  H.controlStateUpdated = function (a) {
    for (var b = 0, c = 0, d = a.keys; c < d.length; ) {
      var e = d[c];
      ++c;
      H._key[e] && (b = 1);
    }
    a.pressure = b;
    0 < b && !a.down
      ? H.controlPressed(a, b)
      : 0 == b && a.down && H.controlReleased(a);
  };
  H.onKeyDown = function (a) {
    var b = a.keyCode;
    if (!(7e3 < b)) {
      H._key[b] ||
        ((H._key[b] = !0), H.controlPressed(H._keyControlMap.h[b], 1));
      b = r.engine.whenAnyKeyPressedListeners;
      for (var c = 0; c < b.length; ) {
        try {
          var d = b[c];
          d(a, b);
          -1 == J.indexOf(b, d) && --c;
        } catch (e) {
          if (
            ((X.lastException = e),
            e instanceof v && (e = e.val),
            !u.__instanceof(e, String))
          )
            throw e;
        }
        ++c;
      }
    }
  };
  H.onKeyUp = function (a) {
    var b = a.keyCode;
    if (!(7e3 < b)) {
      H._key[b] && ((H._key[b] = !1), H.controlReleased(H._keyControlMap.h[b]));
      b = r.engine.whenAnyKeyReleasedListeners;
      for (var c = 0; c < b.length; ) {
        try {
          var d = b[c];
          d(a, b);
          -1 == J.indexOf(b, d) && --c;
        } catch (e) {
          if (
            ((X.lastException = e),
            e instanceof v && (e = e.val),
            !u.__instanceof(e, String))
          )
            throw e;
        }
        ++c;
      }
    }
  };
  H.onMouseDown = function (a) {
    H.mouseX = (r.stage.get_mouseX() - r.screenOffsetX) / r.screenScaleX;
    H.mouseY = (r.stage.get_mouseY() - r.screenOffsetY) / r.screenScaleY;
    H.mouseDown || ((H.mouseDown = !0), (H.mousePressed = !0));
  };
  H.onMouseUp = function (a) {
    H.mouseX = (r.stage.get_mouseX() - r.screenOffsetX) / r.screenScaleX;
    H.mouseY = (r.stage.get_mouseY() - r.screenOffsetY) / r.screenScaleY;
    H.mouseDown = !1;
    H.mouseReleased = !0;
  };
  H.onRightMouseDown = function (a) {
    H.rightMouseDown || ((H.rightMouseDown = !0), (H.rightMousePressed = !0));
  };
  H.onRightMouseUp = function (a) {
    H.rightMouseDown = !1;
    H.rightMouseReleased = !0;
  };
  H.onMiddleMouseDown = function (a) {
    H.middleMouseDown ||
      ((H.middleMouseDown = !0), (H.middleMousePressed = !0));
  };
  H.onMiddleMouseUp = function (a) {
    H.middleMouseDown = !1;
    H.middleMouseReleased = !0;
  };
  H.onMouseWheel = function (a) {
    H.mouseWheel = !0;
    H.mouseWheelDelta = a.delta;
  };
  var am = function (a) {
    this.name = a;
    this.keys = [];
  };
  p["com.stencyl.Control"] = am;
  am.__name__ = ["com", "stencyl", "Control"];
  am.prototype = {
    name: null,
    keys: null,
    pressed: null,
    released: null,
    down: null,
    pressure: null,
    __class__: am,
  };
  var Fe = function () {
    this.id = "";
    this.a = [];
  };
  p["com.stencyl.JoystickButton"] = Fe;
  Fe.__name__ = ["com", "stencyl", "JoystickButton"];
  Fe.fromID = function (a) {
    var b = Fe.cacheFromID;
    if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
      return (b = Fe.cacheFromID), null != t[a] ? b.getReserved(a) : b.h[a];
    b = new Fe();
    b.id = a;
    if (-1 != a.indexOf("axis")) {
      var c = P.parseInt(Q.substr(a, 0, a.indexOf(","))),
        d = P.parseInt(Q.substr(a, a.lastIndexOf(" ") + 1, null)),
        e = "+" == Q.substr(a, a.indexOf("axis") - 1, 1) ? 1 : -1;
      b.a = [c, 0, d, e];
    } else if (-1 != a.indexOf("hat")) {
      c = P.parseInt(Q.substr(a, 0, a.indexOf(",")));
      e = d = 0;
      switch (a.split(" ")[1]) {
        case "down":
          e = d = 1;
          break;
        case "left":
          d = 0;
          e = -1;
          break;
        case "right":
          d = 0;
          e = 1;
          break;
        case "up":
          (d = 1), (e = -1);
      }
      b.a = [c, 1, d, e];
    } else
      (c = P.parseInt(Q.substr(a, 0, a.indexOf(",")))),
        (d = P.parseInt(Q.substr(a, a.lastIndexOf(" "), null))),
        (b.a = [c, 2, d]);
    c = Fe.cacheFromID;
    null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
    return b;
  };
  Fe.prototype = {
    equals: function (a) {
      return this.id == a.id;
    },
    id: null,
    a: null,
    __class__: Fe,
  };
  var Da = function () {};
  p["com.stencyl.Key"] = Da;
  Da.__name__ = ["com", "stencyl", "Key"];
  Da.nameOfKey = function (a) {
    if (97 <= a && 122 >= a) return String.fromCharCode(a);
    if (112 <= a && 126 >= a) return "F" + P.string(a - 111);
    if (96 <= a && 105 >= a) return "NUMPAD " + P.string(a - 96);
    switch (a) {
      case 8:
        return "BACKSPACE";
      case 9:
        return "TAB";
      case 13:
        return "ENTER";
      case 16:
        return "SHIFT";
      case 17:
        return "CONTROL";
      case 20:
        return "CAPS LOCK";
      case 27:
        return "ESCAPE";
      case 32:
        return "SPACE";
      case 33:
        return "PAGE UP";
      case 34:
        return "PAGE DOWN";
      case 35:
        return "END";
      case 36:
        return "HOME";
      case 37:
        return "LEFT";
      case 38:
        return "UP";
      case 39:
        return "RIGHT";
      case 40:
        return "DOWN";
      case 45:
        return "INSERT";
      case 46:
        return "DELETE";
      case 106:
        return "NUMPAD MULTIPLY";
      case 107:
        return "NUMPAD ADD";
      case 108:
        return "NUMPAD ENTER";
      case 109:
        return "NUMPAD SUBTRACT";
      case 110:
        return "NUMPAD DECIMAL";
      case 111:
        return "NUMPAD DIVIDE";
      default:
        return String.fromCharCode(a);
    }
  };
  Da.keyFromName = function (a) {
    var b = Da.keyboardNameMap;
    return null != t[a] ? b.getReserved(a) : b.h[a];
  };
  var Y = function (a, b) {
    null == b && (b = 0);
    null == a && (a = 0);
    this.x = a;
    this.y = b;
  };
  p["openfl.geom.Point"] = Y;
  Y.__name__ = ["openfl", "geom", "Point"];
  Y.distance = function (a, b) {
    var c = a.x - b.x;
    a = a.y - b.y;
    return Math.sqrt(c * c + a * a);
  };
  Y.interpolate = function (a, b, c) {
    return new Y(b.x + c * (a.x - b.x), b.y + c * (a.y - b.y));
  };
  Y.polar = function (a, b) {
    return new Y(a * Math.cos(b), a * Math.sin(b));
  };
  Y.prototype = {
    x: null,
    y: null,
    add: function (a) {
      return new Y(a.x + this.x, a.y + this.y);
    },
    clone: function () {
      return new Y(this.x, this.y);
    },
    copyFrom: function (a) {
      this.x = a.x;
      this.y = a.y;
    },
    equals: function (a) {
      return null != a && a.x == this.x ? a.y == this.y : !1;
    },
    normalize: function (a) {
      if (0 != this.x || 0 != this.y)
        (a /= Math.sqrt(this.x * this.x + this.y * this.y)),
          (this.x *= a),
          (this.y *= a);
    },
    offset: function (a, b) {
      this.x += a;
      this.y += b;
    },
    setTo: function (a, b) {
      this.x = a;
      this.y = b;
    },
    subtract: function (a) {
      return new Y(this.x - a.x, this.y - a.y);
    },
    toString: function () {
      return "(x=" + this.x + ", y=" + this.y + ")";
    },
    __toLimeVector2: function () {
      null == Y.__limeVector2 && (Y.__limeVector2 = new xd());
      var a = Y.__limeVector2;
      a.x = this.x;
      a.y = this.y;
      return Y.__limeVector2;
    },
    get_length: function () {
      return Math.sqrt(this.x * this.x + this.y * this.y);
    },
    __class__: Y,
    __properties__: { get_length: "get_length" },
  };
  var W = function (a, b, c, d) {
    null == d && (d = 0);
    null == c && (c = 0);
    null == b && (b = 0);
    null == a && (a = 0);
    this.x = a;
    this.y = b;
    this.width = c;
    this.height = d;
  };
  p["openfl.geom.Rectangle"] = W;
  W.__name__ = ["openfl", "geom", "Rectangle"];
  W.prototype = {
    height: null,
    width: null,
    x: null,
    y: null,
    clone: function () {
      return new W(this.x, this.y, this.width, this.height);
    },
    contains: function (a, b) {
      return a >= this.x && b >= this.y && a < this.get_right()
        ? b < this.get_bottom()
        : !1;
    },
    containsPoint: function (a) {
      return this.contains(a.x, a.y);
    },
    containsRect: function (a) {
      return 0 >= a.width || 0 >= a.height
        ? a.x > this.x && a.y > this.y && a.get_right() < this.get_right()
          ? a.get_bottom() < this.get_bottom()
          : !1
        : a.x >= this.x && a.y >= this.y && a.get_right() <= this.get_right()
        ? a.get_bottom() <= this.get_bottom()
        : !1;
    },
    copyFrom: function (a) {
      this.x = a.x;
      this.y = a.y;
      this.width = a.width;
      this.height = a.height;
    },
    equals: function (a) {
      return a == this
        ? !0
        : null != a && this.x == a.x && this.y == a.y && this.width == a.width
        ? this.height == a.height
        : !1;
    },
    inflate: function (a, b) {
      this.x -= a;
      this.width += 2 * a;
      this.y -= b;
      this.height += 2 * b;
    },
    inflatePoint: function (a) {
      this.inflate(a.x, a.y);
    },
    intersection: function (a) {
      var b = this.x < a.x ? a.x : this.x,
        c = this.get_right() > a.get_right() ? a.get_right() : this.get_right();
      if (c <= b) return new W();
      var d = this.y < a.y ? a.y : this.y;
      a =
        this.get_bottom() > a.get_bottom() ? a.get_bottom() : this.get_bottom();
      return a <= d ? new W() : new W(b, d, c - b, a - d);
    },
    intersects: function (a) {
      var b = this.x < a.x ? a.x : this.x;
      if (
        (this.get_right() > a.get_right() ? a.get_right() : this.get_right()) <=
        b
      )
        return !1;
      b = this.y < a.y ? a.y : this.y;
      return (
        (this.get_bottom() > a.get_bottom()
          ? a.get_bottom()
          : this.get_bottom()) > b
      );
    },
    isEmpty: function () {
      return 0 >= this.width ? !0 : 0 >= this.height;
    },
    offset: function (a, b) {
      this.x += a;
      this.y += b;
    },
    offsetPoint: function (a) {
      this.x += a.x;
      this.y += a.y;
    },
    setEmpty: function () {
      this.x = this.y = this.width = this.height = 0;
    },
    setTo: function (a, b, c, d) {
      this.x = a;
      this.y = b;
      this.width = c;
      this.height = d;
    },
    toString: function () {
      return (
        "(x=" +
        this.x +
        ", y=" +
        this.y +
        ", width=" +
        this.width +
        ", height=" +
        this.height +
        ")"
      );
    },
    union: function (a) {
      if (0 == this.width || 0 == this.height) return a.clone();
      if (0 == a.width || 0 == a.height) return this.clone();
      var b = this.x > a.x ? a.x : this.x,
        c = this.get_right() < a.get_right() ? a.get_right() : this.get_right(),
        d = this.y > a.y ? a.y : this.y;
      a =
        this.get_bottom() < a.get_bottom() ? a.get_bottom() : this.get_bottom();
      return new W(b, d, c - b, a - d);
    },
    __contract: function (a, b, c, d) {
      if (0 != this.width || 0 != this.height) {
        var e = 0,
          f = 0,
          g = 0,
          h = 0;
        this.x < a && (e = a - this.x);
        this.y < b && (f = b - this.y);
        this.get_right() > a + c && (g = a + c - this.get_right());
        this.get_bottom() > b + d && (h = b + d - this.get_bottom());
        this.x += e;
        this.y += f;
        this.width += g - e;
        this.height += h - f;
      }
    },
    __expand: function (a, b, c, d) {
      if (0 == this.width && 0 == this.height)
        (this.x = a), (this.y = b), (this.width = c), (this.height = d);
      else {
        var e = this.get_right(),
          f = this.get_bottom();
        this.x > a && ((this.x = a), (this.width = e - a));
        this.y > b && ((this.y = b), (this.height = f - b));
        e < a + c && (this.width = a + c - this.x);
        f < b + d && (this.height = b + d - this.y);
      }
    },
    __toLimeRectangle: function () {
      null == W.__limeRectangle && (W.__limeRectangle = new Td());
      W.__limeRectangle.setTo(this.x, this.y, this.width, this.height);
      return W.__limeRectangle;
    },
    __transform: function (a, b) {
      var c = b.a * this.x + b.c * this.y,
        d = c,
        e = b.b * this.x + b.d * this.y,
        f = e,
        g = b.a * (this.x + this.width) + b.c * this.y,
        h = b.b * (this.x + this.width) + b.d * this.y;
      g < c && (c = g);
      h < e && (e = h);
      g > d && (d = g);
      h > f && (f = h);
      g = b.a * (this.x + this.width) + b.c * (this.y + this.height);
      h = b.b * (this.x + this.width) + b.d * (this.y + this.height);
      g < c && (c = g);
      h < e && (e = h);
      g > d && (d = g);
      h > f && (f = h);
      g = b.a * this.x + b.c * (this.y + this.height);
      h = b.b * this.x + b.d * (this.y + this.height);
      g < c && (c = g);
      h < e && (e = h);
      g > d && (d = g);
      h > f && (f = h);
      a.setTo(c + b.tx, e + b.ty, d - c, f - e);
    },
    get_bottom: function () {
      return this.y + this.height;
    },
    set_bottom: function (a) {
      this.height = a - this.y;
      return a;
    },
    get_bottomRight: function () {
      return new Y(this.x + this.width, this.y + this.height);
    },
    set_bottomRight: function (a) {
      this.width = a.x - this.x;
      this.height = a.y - this.y;
      return a.clone();
    },
    get_left: function () {
      return this.x;
    },
    set_left: function (a) {
      this.width -= a - this.x;
      return (this.x = a);
    },
    get_right: function () {
      return this.x + this.width;
    },
    set_right: function (a) {
      this.width = a - this.x;
      return a;
    },
    get_size: function () {
      return new Y(this.width, this.height);
    },
    set_size: function (a) {
      this.width = a.x;
      this.height = a.y;
      return a.clone();
    },
    get_top: function () {
      return this.y;
    },
    set_top: function (a) {
      this.height -= a - this.y;
      return (this.y = a);
    },
    get_topLeft: function () {
      return new Y(this.x, this.y);
    },
    set_topLeft: function (a) {
      this.x = a.x;
      this.y = a.y;
      return a.clone();
    },
    __class__: W,
    __properties__: {
      set_topLeft: "set_topLeft",
      get_topLeft: "get_topLeft",
      set_top: "set_top",
      get_top: "get_top",
      set_size: "set_size",
      get_size: "get_size",
      set_right: "set_right",
      get_right: "get_right",
      set_left: "set_left",
      get_left: "get_left",
      set_bottomRight: "set_bottomRight",
      get_bottomRight: "get_bottomRight",
      set_bottom: "set_bottom",
      get_bottom: "get_bottom",
    },
  };
  var m = function () {
    this.checkProperties = this.scriptInit = !1;
    this.nameMap = new la();
    this.propertyChangeListeners = new la();
    this.equalityPairs = new qd();
    this.attributeTweens = new la();
  };
  p["com.stencyl.behavior.Script"] = m;
  m.__name__ = ["com", "stencyl", "behavior", "Script"];
  m.resetStatics = function () {
    m.engine = null;
    m.lastCreatedActor = null;
    m.lastCreatedJoint = null;
    m.lastCreatedRegion = null;
    m.lastCreatedTerrainRegion = null;
    m.mpx = 0;
    m.mpy = 0;
    m.mrx = 0;
    m.mry = 0;
    m.imageApiAutoscale = !0;
  };
  m.sameAs = function (a, b) {
    return a == b;
  };
  m.sameAsAny = function (a, b, c) {
    return a != b ? a == c : !0;
  };
  m.asBoolean = function (a) {
    return 1 == a ? !0 : "true" == a ? !0 : !1;
  };
  m.strCompare = function (a, b, c) {
    return 0 > c ? a < b : a > b;
  };
  m.strCompareBefore = function (a, b) {
    return a < b;
  };
  m.strCompareAfter = function (a, b) {
    return a > b;
  };
  m.asNumber = function (a) {
    return null == a
      ? 0
      : "number" == typeof a
      ? u.__cast(a, ri)
      : "number" == typeof a && (a | 0) === a
      ? u.__cast(a, og)
      : "boolean" == typeof a
      ? u.__cast(a, si)
        ? 1
        : 0
      : "string" == typeof a
      ? parseFloat(a)
      : parseFloat(P.string(a));
  };
  m.hasValue = function (a) {
    return m.isPrimitive(a)
      ? !0
      : "string" == typeof a
      ? "" != u.__cast(a, String)
      : null != a;
  };
  m.isPrimitive = function (a) {
    return "boolean" == typeof a ||
      "number" == typeof a ||
      ("number" == typeof a && (a | 0) === a)
      ? !0
      : !1;
  };
  m.getDefaultValue = function (a) {
    return "boolean" == typeof a
      ? !1
      : "number" == typeof a || ("number" == typeof a && (a | 0) === a)
      ? 0
      : "string" == typeof a
      ? ""
      : null;
  };
  m.getGroupByName = function (a) {
    return m.engine.getGroupByName(a);
  };
  m.getLastCreatedRegion = function () {
    return m.lastCreatedRegion;
  };
  m.getAllRegions = function () {
    for (var a = [], b = m.engine.regions.iterator(); b.hasNext(); ) {
      var c = b.next();
      null != c && a.push(c);
    }
    return a;
  };
  m.getRegion = function (a) {
    return m.engine.getRegion(a);
  };
  m.removeRegion = function (a) {
    m.engine.removeRegion(a);
  };
  m.createBoxRegion = function (a, b, c, d) {
    return (m.lastCreatedRegion = m.engine.createBoxRegion(a, b, c, d));
  };
  m.createCircularRegion = function (a, b, c) {
    return (m.lastCreatedRegion = m.engine.createCircularRegion(a, b, c));
  };
  m.isInRegion = function (a, b) {
    return m.engine.isInRegion(a, b);
  };
  m.getActorsInRegion = function (a) {
    var b = [];
    for (a = a.getContainedActors().iterator(); a.hasNext(); ) {
      var c = a.next();
      b.push(m.engine.getActor(c));
    }
    return b;
  };
  m.sceneHasBehavior = function (a) {
    return m.engine.behaviors.hasBehavior(a);
  };
  m.enableBehaviorForScene = function (a) {
    m.engine.behaviors.enableBehavior(a);
  };
  m.disableBehaviorForScene = function (a) {
    m.engine.behaviors.disableBehavior(a);
  };
  m.isBehaviorEnabledForScene = function (a) {
    return m.engine.behaviors.isBehaviorEnabled(a);
  };
  m.getValueForScene = function (a, b) {
    return m.engine.getValue(a, b);
  };
  m.setValueForScene = function (a, b, c) {
    m.engine.setValue(a, b, c);
  };
  m.shoutToScene = function (a, b) {
    return m.engine.shout(a, b);
  };
  m.sayToScene = function (a, b, c) {
    return m.engine.say(a, b, c);
  };
  m.setGameAttribute = function (a, b) {
    m.engine.gameAttributes.set(a, b);
  };
  m.getGameAttribute = function (a) {
    return m.engine.getGameAttribute(a);
  };
  m.runLater = function (a, b, c) {
    a = new bm(b, a | 0, !1, c);
    m.engine.addTask(a);
    return a;
  };
  m.runPeriodically = function (a, b, c) {
    a = new bm(b, a | 0, !0, c);
    m.engine.addTask(a);
    return a;
  };
  m.getStepSize = function () {
    return r.STEP_SIZE;
  };
  m.getScene = function () {
    return m.engine.scene;
  };
  m.getCurrentScene = function () {
    return m.getScene().ID;
  };
  m.getIDForScene = function (a) {
    for (var b = cb.get().scenes.iterator(); b.hasNext(); ) {
      var c = b.next();
      if (a == c.name) return c.ID;
    }
    return 0;
  };
  m.getCurrentSceneName = function () {
    return m.getScene().name;
  };
  m.getSceneWidth = function () {
    return m.getScene().sceneWidth;
  };
  m.getSceneHeight = function () {
    return m.getScene().sceneHeight;
  };
  m.getTileWidth = function () {
    return m.getScene().tileWidth;
  };
  m.getTileHeight = function () {
    return m.getScene().tileHeight;
  };
  m.reloadCurrentScene = function (a, b) {
    m.engine.switchScene(m.getCurrentScene(), a, b);
  };
  m.switchScene = function (a, b, c) {
    m.engine.switchScene(a, b, c);
  };
  m.createPixelizeOut = function (a, b) {
    return new fk(a, 1, 15);
  };
  m.createPixelizeIn = function (a, b) {
    return new fk(a, 15, 1);
  };
  m.createBubblesOut = function (a, b) {
    null == b && (b = -16777216);
    return new gk(jb.OUT, a, 50, b);
  };
  m.createBubblesIn = function (a, b) {
    null == b && (b = -16777216);
    return new gk(jb.IN, a, 50, b);
  };
  m.createBlindsOut = function (a, b) {
    null == b && (b = -16777216);
    return new hk(jb.OUT, a, 10, b);
  };
  m.createBlindsIn = function (a, b) {
    null == b && (b = -16777216);
    return new hk(jb.IN, a, 10, b);
  };
  m.createRectangleOut = function (a, b) {
    null == b && (b = -16777216);
    return new ik(jb.OUT, a, b);
  };
  m.createRectangleIn = function (a, b) {
    null == b && (b = -16777216);
    return new ik(jb.IN, a, b);
  };
  m.createSlideTransition = function (a, b) {
    return new Ze(m.engine.master, m.engine.colorLayer, a, b);
  };
  m.createSlideUpTransition = function (a) {
    return m.createSlideTransition(a, Ze.SLIDE_UP);
  };
  m.createSlideDownTransition = function (a) {
    return m.createSlideTransition(a, Ze.SLIDE_DOWN);
  };
  m.createSlideLeftTransition = function (a) {
    return m.createSlideTransition(a, Ze.SLIDE_LEFT);
  };
  m.createSlideRightTransition = function (a) {
    return m.createSlideTransition(a, Ze.SLIDE_RIGHT);
  };
  m.createCrossfadeTransition = function (a) {
    return new cm(m.engine.root, a);
  };
  m.createFadeOut = function (a, b) {
    null == b && (b = -16777216);
    return new dm(a, b);
  };
  m.createFadeIn = function (a, b) {
    null == b && (b = -16777216);
    return new em(a, b);
  };
  m.createCircleOut = function (a, b) {
    null == b && (b = -16777216);
    return new jk(jb.OUT, a, b);
  };
  m.createCircleIn = function (a, b) {
    null == b && (b = -16777216);
    return new jk(jb.IN, a, b);
  };
  m.setBlendModeForLayer = function (a, b) {
    a.set_blendMode(b);
    u.__instanceof(a, zc) && u.__cast(a, zc).tiles.set_blendMode(b);
  };
  m.showTileLayer = function (a) {
    a.set_alpha(1);
  };
  m.hideTileLayer = function (a) {
    a.set_alpha(0);
  };
  m.fadeTileLayerTo = function (a, b, c, d) {
    null == a.alphaTween &&
      (a.alphaTween = new Ge().doOnUpdate(function () {
        a.set_alpha(a.alphaTween.value);
      }));
    a.alphaTween.tween(a.get_alpha(), b, d, (1e3 * c) | 0);
  };
  m.getTileLayerOpacity = function (a) {
    return 100 * a.get_alpha();
  };
  m.setDrawingLayer = function (a) {
    u.__instanceof(a, zc) && (r.engine.g.graphics = a.overlay.get_graphics());
  };
  m.setDrawingLayerToActorLayer = function (a) {
    null != a && (r.engine.g.graphics = a.layer.overlay.get_graphics());
  };
  m.setDrawingLayerToSceneLayer = function () {
    r.engine.g.graphics = r.engine.transitionLayer.get_graphics();
  };
  m.getScreenX = function () {
    return r.cameraX / r.SCALE;
  };
  m.getScreenY = function () {
    return r.cameraY / r.SCALE;
  };
  m.getScreenXCenter = function () {
    return r.cameraX / r.SCALE + r.screenWidth / 2;
  };
  m.getScreenYCenter = function () {
    return r.cameraY / r.SCALE + r.screenHeight / 2;
  };
  m.getCamera = function () {
    return m.engine.camera;
  };
  m.isCtrlDown = function () {
    return H.check("iCTRL");
  };
  m.isShiftDown = function () {
    return H.check("iSHIFT");
  };
  m.simulateKeyPress = function (a) {
    H.simulateKeyPress(a);
  };
  m.simulateKeyRelease = function (a) {
    H.simulateKeyRelease(a);
  };
  m.isKeyDown = function (a) {
    return H.check(a);
  };
  m.isKeyPressed = function (a) {
    return H.pressed(a);
  };
  m.isKeyReleased = function (a) {
    return H.released(a);
  };
  m.isMouseDown = function () {
    return H.mouseDown;
  };
  m.isMousePressed = function () {
    return H.mousePressed;
  };
  m.isMouseReleased = function () {
    return H.mouseReleased;
  };
  m.getMouseX = function () {
    return H.mouseX / r.SCALE;
  };
  m.getMouseY = function () {
    return H.mouseY / r.SCALE;
  };
  m.getMouseWorldX = function () {
    return H.mouseX / r.SCALE + r.cameraX;
  };
  m.getMouseWorldY = function () {
    return H.mouseY / r.SCALE + r.cameraY;
  };
  m.getMousePressedX = function () {
    return m.mpx;
  };
  m.getMousePressedY = function () {
    return m.mpy;
  };
  m.getMouseReleasedX = function () {
    return m.mrx;
  };
  m.getMouseReleasedY = function () {
    return m.mry;
  };
  m.showCursor = function () {
    oe.show();
  };
  m.hideCursor = function () {
    oe.hide();
  };
  m.charFromCharCode = function (a) {
    return 32 > a || (126 < a && 160 > a) ? "" : String.fromCharCode(a);
  };
  m.getLastCreatedActor = function () {
    return m.lastCreatedActor;
  };
  m.createActor = function (a, b, c, d) {
    a = m.engine.createActorOfType(a, b, c, d);
    return (m.lastCreatedActor = a);
  };
  m.createRecycledActor = function (a, b, c, d) {
    a = m.engine.getRecycledActorOfType(a, b, c, d);
    return (m.lastCreatedActor = a);
  };
  m.createRecycledActorOnLayer = function (a, b, c, d) {
    a = m.engine.getRecycledActorOfTypeOnLayer(a, b, c, d.ID);
    return (m.lastCreatedActor = a);
  };
  m.recycleActor = function (a) {
    m.engine.recycleActor(a);
  };
  m.createActorInNextScene = function (a, b, c, d) {
    m.engine.createActorInNextScene(a, b, c, d);
  };
  m.getActorTypeByName = function (a) {
    return $b.get().resourceMap.get(a);
  };
  m.getActorType = function (a) {
    return $b.get().resources.get(a);
  };
  m.getAllActorTypes = function () {
    return $b.get().getAllActorTypes();
  };
  m.getActorsOfType = function (a) {
    return m.engine.getActorsOfType(a);
  };
  m.getActor = function (a) {
    return m.engine.getActor(a);
  };
  m.getActorGroup = function (a) {
    return m.engine.getGroup(a);
  };
  m.setGravity = function (a, b) {
    m.engine.gravityX = a;
    m.engine.gravityY = b;
    null != m.engine.world && m.engine.world.setGravity(new D(a, b));
  };
  m.getGravity = function () {
    return null == m.engine.world
      ? ((m.dummyVec.x = m.engine.gravityX),
        (m.dummyVec.y = m.engine.gravityY),
        m.dummyVec)
      : m.engine.world.getGravity();
  };
  m.enableContinuousCollisions = function () {
    Rb.m_continuousPhysics = !0;
  };
  m.toPhysicalUnits = function (a) {
    return r.toPhysicalUnits(a);
  };
  m.toPixelUnits = function (a) {
    return r.toPixelUnits(a);
  };
  m.makeActorNotPassThroughTerrain = function (a) {
    r.NO_PHYSICS
      ? null != a && 1 == a.physicsMode && (a.continuousCollision = !0)
      : ((Rb.m_continuousPhysics = !0),
        null != a && 0 == a.physicsMode && a.body.setBullet(!0));
  };
  m.makeActorPassThroughTerrain = function (a) {
    if (r.NO_PHYSICS)
      null != a && 1 == a.physicsMode && (a.continuousCollision = !1);
    else if (null != a && 0 == a.physicsMode) {
      a.body.setBullet(!1);
      a = !1;
      for (var b = m.engine.allActors.iterator(); b.hasNext(); ) {
        var c = b.next();
        if (null != c.body && c.body.isBullet()) {
          a = !0;
          break;
        }
      }
      a || (Rb.m_continuousPhysics = !1);
    }
  };
  m.mute = function () {};
  m.unmute = function () {};
  m.getSound = function (a) {
    return $b.get().resources.get(a);
  };
  m.getSoundByName = function (a) {
    return $b.get().resourceMap.get(a);
  };
  m.playSound = function (a) {
    if (null != a)
      for (var b = 0; 32 > b; ) {
        var c = b++;
        c = m.engine.channels[c];
        if (null == c.currentSound) {
          c.playSound(a);
          break;
        }
      }
  };
  m.loopSound = function (a) {
    if (null != a)
      for (var b = 0; 32 > b; ) {
        var c = b++;
        c = m.engine.channels[c];
        if (null == c.currentSound) {
          c.loopSound(a);
          break;
        }
      }
  };
  m.playSoundOnChannel = function (a, b) {
    m.engine.channels[b].playSound(a);
  };
  m.loopSoundOnChannel = function (a, b) {
    m.engine.channels[b].loopSound(a);
  };
  m.stopSoundOnChannel = function (a) {
    m.engine.channels[a].stopSound();
  };
  m.pauseSoundOnChannel = function (a) {
    m.engine.channels[a].setPause(!0);
  };
  m.resumeSoundOnChannel = function (a) {
    m.engine.channels[a].setPause(!1);
  };
  m.setVolumeForChannel = function (a, b) {
    m.engine.channels[b].setVolume(a);
  };
  m.setPanningForChannel = function (a, b) {
    m.engine.channels[b].setPanning(a);
  };
  m.stopAllSounds = function () {
    for (var a = 0; 32 > a; ) {
      var b = a++;
      m.engine.channels[b].stopSound();
    }
  };
  m.setVolumeForAllSounds = function (a) {
    wf.masterVolume = a;
    for (a = 0; 32 > a; ) {
      var b = a++;
      b = m.engine.channels[b];
      b.setVolume(b.volume);
    }
  };
  m.fadeInSoundOnChannel = function (a, b) {
    m.engine.channels[a].fadeInSound(b);
  };
  m.fadeOutSoundOnChannel = function (a, b) {
    m.engine.channels[a].fadeOutSound(b);
  };
  m.fadeSoundOnChannel = function (a, b, c) {
    m.engine.channels[a].fadeSound(b, c / 100);
  };
  m.fadeInForAllSounds = function (a) {
    for (var b = 0; 32 > b; ) {
      var c = b++;
      m.engine.channels[c].fadeInSound(a);
    }
  };
  m.fadeOutForAllSounds = function (a) {
    for (var b = 0; 32 > b; ) {
      var c = b++;
      m.engine.channels[c].fadeOutSound(a);
    }
  };
  m.fadeForAllSounds = function (a, b) {
    for (var c = 0; 32 > c; ) {
      var d = c++;
      m.engine.channels[d].fadeSound(a, b / 100);
    }
  };
  m.getPositionForChannel = function (a) {
    a = m.engine.channels[a];
    return null != a && null != a.currentSound
      ? a.paused
        ? a.position
        : a.currentSound.get_position()
      : 0;
  };
  m.setPositionForChannel = function (a, b) {
    a = m.engine.channels[a];
    null != a &&
      null != a.currentSound &&
      (a.paused
        ? (a.position = b)
        : a.looping
        ? a.loopSound(a.currentClip, b)
        : a.playSound(a.currentClip, b));
  };
  m.getSoundLengthForChannel = function (a) {
    a = m.engine.channels[a];
    return null != a && null != a.currentSource
      ? a.currentSource.get_length()
      : 0;
  };
  m.getSoundLength = function (a) {
    return null != a && null != a.src ? a.src.get_length() : 0;
  };
  m.setColorBackground = function (a, b) {
    null == b && (b = -2);
    m.engine.colorLayer.get_graphics().clear();
    a != Uf.TRANSPARENT &&
      (b == Uf.TRANSPARENT
        ? m.engine.setColorBackground(new Uf(a))
        : m.engine.setColorBackground(new $i(a, b)));
  };
  m.setScrollSpeedForBackground = function (a, b, c) {
    if (null == a) {
      a = 0;
      for (var d = r.engine.backgroundLayers; a < d.length; ) {
        var e = d[a];
        ++a;
        e.setScrollSpeed(b, c);
      }
    } else u.__instanceof(a, Xd) && u.__cast(a, Xd).setScrollSpeed(b, c);
  };
  m.setScrollFactorForLayer = function (a, b, c) {
    u.__instanceof(a, Xd)
      ? u.__cast(a, Xd).setScrollFactor(b, c)
      : u.__instanceof(a, zc) && ((a.scrollFactorX = b), (a.scrollFactorY = c));
  };
  m.changeBackground = function (a, b) {
    b = $b.get().resourceMap.get(b);
    null != b && u.__instanceof(a, Xd) && u.__cast(a, Xd).reload(b.ID);
  };
  m.changeBackgroundImage = function (a, b) {
    null != b && u.__instanceof(a, Xd) && u.__cast(a, Xd).setImage(b);
  };
  m.addBackground = function (a, b, c) {
    a = $b.get().resourceMap.get(a);
    b = new Xd(m.engine.getNextLayerID(), b, c, 0, 0, 1, 10, a.ID, !1);
    b.load();
    m.engine.insertLayer(b, c);
  };
  m.addBackgroundFromImage = function (a, b, c, d) {
    c = new Xd(m.engine.getNextLayerID(), c, d, 0, 0, 1, 10, -1, !1);
    c.loadFromImg(a, b);
    m.engine.insertLayer(c, d);
  };
  m.addTileLayer = function (a, b) {
    var c = (m.engine.scene.sceneWidth / m.engine.scene.tileWidth) | 0,
      d = (m.engine.scene.sceneHeight / m.engine.scene.tileHeight) | 0,
      e = m.engine.getNextLayerID();
    c = new le(e, m.engine.scene, c, d);
    c.set_name(a);
    a = new zc(e, a, b, 1, 1, 1, 10, c);
    m.engine.insertLayer(a, b);
  };
  m.newImage = function (a, b) {
    return m.imageApiAutoscale
      ? new sa((a * r.SCALE) | 0, (b * r.SCALE) | 0, !0, 0)
      : new sa(a, b, !0, 0);
  };
  m.captureScreenshot = function () {
    var a = new sa(m.getStageWidth() | 0, m.getStageHeight() | 0);
    a.draw(wa.get_current().stage);
    return a;
  };
  m.getImageForActor = function (a) {
    return a.getCurrentImage();
  };
  m.getExternalImage = function (a) {
    return oa.getBitmapData("assets/data/" + a, !1);
  };
  m.loadImageFromURL = function (a, b) {
    var c = new fm();
    c.contentLoaderInfo.addEventListener("complete", function (a) {
      a = u.__cast(u.__cast(a.currentTarget, Pg).content, ic).get_bitmapData();
      b(a);
    });
    c.load(new Qg(a));
  };
  m.getSubImage = function (a, b, c, d, e) {
    m.imageApiAutoscale &&
      ((b = (b * r.SCALE) | 0),
      (c = (c * r.SCALE) | 0),
      (d = (d * r.SCALE) | 0),
      (e = (e * r.SCALE) | 0));
    if (
      null != a &&
      0 <= b &&
      0 <= c &&
      0 < d &&
      0 < e &&
      b < a.width &&
      c < a.height
    ) {
      var f = new sa(d, e);
      m.dummyRect.x = b;
      m.dummyRect.y = c;
      m.dummyRect.width = d;
      m.dummyRect.height = e;
      m.dummyPoint.x = 0;
      m.dummyPoint.y = 0;
      f.copyPixels(a, m.dummyRect, m.dummyPoint);
      return f;
    }
    return new sa(1, 1);
  };
  m.setOrderForImage = function (a, b) {
    null != a &&
      null != a.parent &&
      0 <= b &&
      b < a.parent.get_numChildren() &&
      a.parent.setChildIndex(a, b);
  };
  m.getOrderForImage = function (a) {
    return null != a && null != a.parent ? a.parent.getChildIndex(a) : -1;
  };
  m.bringImageBack = function (a) {
    null != a &&
      null != a.parent &&
      m.setOrderForImage(a, a.parent.getChildIndex(a) - 1);
  };
  m.bringImageForward = function (a) {
    null != a &&
      null != a.parent &&
      m.setOrderForImage(a, a.parent.getChildIndex(a) + 1);
  };
  m.bringImageToBack = function (a) {
    null != a && null != a.parent && m.setOrderForImage(a, 0);
  };
  m.bringImagetoFront = function (a) {
    null != a &&
      null != a.parent &&
      m.setOrderForImage(a, a.parent.get_numChildren() - 1);
  };
  m.attachImageToActor = function (a, b, c, d, e) {
    null == e && (e = 1);
    null != a &&
      (2 == e ? (b.addChild(a), b.setChildIndex(a, 0)) : b.addChild(a),
      (a.cacheParentAnchor = b.cacheAnchor),
      a.set_imgX(c),
      a.set_imgY(d),
      a.set_smoothing(U.antialias),
      b.attachedImages.push(a));
  };
  m.attachImageToHUD = function (a, b, c) {
    null != a &&
      (m.engine.hudLayer.addChild(a),
      m.engine.hudLayer.attachedImages.push(a),
      a.set_imgX(b),
      a.set_imgY(c),
      a.set_smoothing(U.antialias));
  };
  m.attachImageToLayer = function (a, b, c, d, e) {
    null == e && (e = 1);
    null != a &&
      (2 == e ? b.addChildAt(a, 0) : b.addChild(a),
      -1 == b.attachedImages.indexOf(a) && b.attachedImages.push(a),
      a.set_imgX(c),
      a.set_imgY(d),
      a.set_smoothing(U.antialias));
  };
  m.removeImage = function (a) {
    null != a &&
      (u.__instanceof(a.parent, $a)
        ? Q.remove(u.__cast(a.parent, $a).attachedImages, a)
        : u.__instanceof(a.parent, zc) &&
          Q.remove(u.__cast(a.parent, zc).attachedImages, a),
      a.parent.removeChild(a));
  };
  m.resizeImage = function (a, b, c, d) {
    null == d && (d = !0);
    null == c && (c = 1);
    null == b && (b = 1);
    var e = new ya();
    e.scale(b, c);
    b = new sa((a.width * b) | 0, (a.height * c) | 0, !0, 0);
    b.draw(a, e, null, null, null, d);
    return b;
  };
  m.drawImageOnImage = function (a, b, c, d, e) {
    m.imageApiAutoscale && ((c = (c * r.SCALE) | 0), (d = (d * r.SCALE) | 0));
    if (null != a && null != b)
      if (((m.dummyPoint.x = c), (m.dummyPoint.y = d), 10 == e))
        b.copyPixels(a, a.rect, m.dummyPoint, null, null, !0);
      else {
        var f = new ya();
        f.identity();
        f.translate(c, d);
        b.draw(a, f, null, e);
      }
  };
  m.drawTextOnImage = function (a, b, c, d, e) {
    m.imageApiAutoscale && ((c = (c * r.SCALE) | 0), (d = (d * r.SCALE) | 0));
    null != a &&
      e.font.renderToImg(a, b, 0, 1, c, d, e.letterSpacing, e.fontScale, 0, !1);
  };
  m.clearImagePartially = function (a, b, c, d, e) {
    m.imageApiAutoscale &&
      ((b = (b * r.SCALE) | 0),
      (c = (c * r.SCALE) | 0),
      (d = (d * r.SCALE) | 0),
      (e = (e * r.SCALE) | 0));
    null != a &&
      ((m.dummyRect.x = b),
      (m.dummyRect.y = c),
      (m.dummyRect.width = d),
      (m.dummyRect.height = e),
      a.fillRect(m.dummyRect, 0));
  };
  m.clearImage = function (a) {
    null != a && a.fillRect(a.rect, 0);
  };
  m.clearImageUsingMask = function (a, b, c, d) {
    m.imageApiAutoscale && ((c = (c * r.SCALE) | 0), (d = (d * r.SCALE) | 0));
    var e = new gb(),
      f = new ic(a);
    b = new ic(b);
    b.set_x(c);
    b.set_y(d);
    f.set_blendMode(7);
    b.set_blendMode(4);
    e.addChild(f);
    e.addChild(b);
    c = new sa(a.width, a.height, !0, 0);
    c.draw(e);
    m.dummyPoint.x = 0;
    m.dummyPoint.y = 0;
    a.copyPixels(c, a.rect, m.dummyPoint);
  };
  m.retainImageUsingMask = function (a, b, c, d) {
    m.imageApiAutoscale && ((c = (c * r.SCALE) | 0), (d = (d * r.SCALE) | 0));
    m.dummyPoint.x = c;
    m.dummyPoint.y = d;
    a.copyChannel(b, b.rect, m.dummyPoint, 8, 8);
  };
  m.fillImage = function (a, b) {
    null != a && a.fillRect(a.rect, -16777216 | b);
  };
  m.filterImage = function (a, b) {
    null != a &&
      ((m.dummyPoint.x = 0),
      (m.dummyPoint.y = 0),
      a.applyFilter(a, a.rect, m.dummyPoint, b));
  };
  m.imageSetPixel = function (a, b, c, d) {
    if (null != a)
      if (m.imageApiAutoscale && 1 != r.SCALE) {
        var e = ((b + 1) * r.SCALE) | 0,
          f = ((c + 1) * r.SCALE) | 0;
        b = (b * r.SCALE) | 0;
        for (c = (c * r.SCALE) | 0; b < e; )
          for (var g = b++, h = c, n = f; h < n; ) {
            var k = h++;
            a.setPixel32(g, k, d | -16777216);
          }
      } else a.setPixel32(b, c, d | -16777216);
  };
  m.imageGetPixel = function (a, b, c) {
    return null != a
      ? (m.imageApiAutoscale &&
          ((b = (b * r.SCALE) | 0), (c = (c * r.SCALE) | 0)),
        a.getPixel(b, c))
      : 0;
  };
  m.imageSwapColor = function (a, b, c) {
    null != a &&
      ((m.dummyPoint.x = 0),
      (m.dummyPoint.y = 0),
      a.threshold(
        a,
        a.rect,
        m.dummyPoint,
        "==",
        -16777216 | b,
        -16777216 | c,
        -1,
        !0
      ));
  };
  m.flipImageHorizontal = function (a) {
    var b = new ya();
    b.scale(-1, 1);
    b.translate(a.width, 0);
    var c = new sa(a.width, a.height, !0, 0);
    c.draw(a, b);
    m.dummyPoint.x = 0;
    m.dummyPoint.y = 0;
    a.copyPixels(c, c.rect, m.dummyPoint);
  };
  m.flipImageVertical = function (a) {
    var b = new ya();
    b.scale(1, -1);
    b.translate(0, a.height);
    var c = new sa(a.width, a.height, !0, 0);
    c.draw(a, b);
    m.dummyPoint.x = 0;
    m.dummyPoint.y = 0;
    a.copyPixels(c, c.rect, m.dummyPoint);
  };
  m.setXForImage = function (a, b) {
    null != a && a.set_imgX(b);
  };
  m.setYForImage = function (a, b) {
    null != a && a.set_imgY(b);
  };
  m.fadeImageTo = function (a, b, c, d) {
    null == c && (c = 1);
    a.get_tweenProps().alpha.tween(a.get_alpha(), b, d, (1e3 * c) | 0);
  };
  m.setOriginForImage = function (a, b, c) {
    a.setOrigin(b, c);
  };
  m.growImageTo = function (a, b, c, d, e) {
    null == d && (d = 1);
    null == c && (c = 1);
    null == b && (b = 1);
    a.get_tweenProps().scaleXY.tween(
      a.get_scaleX(),
      b,
      a.get_scaleY(),
      c,
      e,
      (1e3 * d) | 0
    );
  };
  m.spinImageTo = function (a, b, c, d) {
    null == c && (c = 1);
    a.get_tweenProps().angle.tween(a.get_rotation(), b, d, (1e3 * c) | 0);
  };
  m.moveImageTo = function (a, b, c, d, e) {
    null == d && (d = 1);
    a.get_tweenProps().xy.tween(
      a.get_imgX(),
      b,
      a.get_imgY(),
      c,
      e,
      (1e3 * d) | 0
    );
  };
  m.spinImageBy = function (a, b, c, d) {
    null == c && (c = 1);
    m.spinImageTo(a, a.get_rotation() + b, c, d);
  };
  m.moveImageBy = function (a, b, c, d, e) {
    null == d && (d = 1);
    m.moveImageTo(a, a.get_imgX() + b, a.get_imgY() + c, d, e);
  };
  m.setFilterForImage = function (a, b) {
    null != a && a.img.set_filters(a.get_filters().concat([b]));
  };
  m.clearFiltersForImage = function (a) {
    null != a && a.img.set_filters([]);
  };
  m.imageToText = function (a) {
    var b = a.getPixels(a.rect);
    return (
      a.width +
      ";" +
      a.height +
      ";" +
      m.toBase64(Ra.ofData(Na.toArrayBuffer(b)))
    );
  };
  m.imageFromText = function (a) {
    var b = a.split(";");
    a = P.parseInt(b[0]);
    var c = P.parseInt(b[1]),
      d = m.fromBase64(b[2]);
    b = new ce(0);
    for (var e = 0, f = d.length; e < f; ) {
      var g = e++;
      b.writeByte(d.b[g]);
    }
    b.position = 0;
    b.__endian = 0;
    a = new sa(a, c, !0, 0);
    a.setPixels(a.rect, b);
    return a;
  };
  m.toBase64 = function (a) {
    var b = Ra.ofString(
      "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
    );
    a = new ti(b).encodeBytes(a).toString();
    b = a.length % 4;
    1 < b && (a += "=");
    2 == b && (a += "=");
    return a;
  };
  m.fromBase64 = function (a) {
    var b = -1;
    "=" == a.charAt(a.length - 2)
      ? (b = 2)
      : "=" == a.charAt(a.length - 1) && (b = 1);
    -1 != b && (a = Q.substr(a, 0, a.length - b));
    b = Ra.ofString(
      "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
    );
    return new ti(b).decodeBytes(Ra.ofString(a));
  };
  m.startShakingScreen = function (a, b) {
    null == b && (b = 0.5);
    null == a && (a = 0.05);
    m.engine.shakeScreen(a, b);
  };
  m.stopShakingScreen = function () {
    m.engine.stopShakingScreen();
  };
  m.getTopLayer = function () {
    return m.engine.getTopLayer();
  };
  m.getBottomLayer = function () {
    return m.engine.getBottomLayer();
  };
  m.getMiddleLayer = function () {
    return m.engine.getMiddleLayer();
  };
  m.getTileLayerAt = function (a) {
    return null != a && u.__instanceof(a, zc) ? u.__cast(a, zc).tiles : null;
  };
  m.getTilesetIDByName = function (a) {
    a = $b.get().resourceMap.get(a);
    return u.__instanceof(a, Gf) ? a.ID : -1;
  };
  m.setTileAt = function (a, b, c, d, e) {
    if (null != c && u.__instanceof(c, zc)) {
      m.removeTileAt(a, b, c);
      var f = u.__cast(c, zc).tiles;
      d = $b.get().resources.get(d).tiles[e];
      f.setTileAt(a, b, d);
      null == d ||
        null == d.pixels ||
        J.contains(m.engine.animatedTiles, d) ||
        (1 < d.durations.length && m.engine.animatedTiles.push(d));
      if (null != d && -1 != d.collisionID) {
        d = cb.get().shapes.h[d.collisionID];
        f = d.getVertices();
        d = d.getVertexCount();
        f = Db.asArray(f, d);
        d = 0;
        for (e = f.getVertices(); d < e.length; ) {
          var g = e[d];
          ++d;
          g.x *= m.engine.scene.tileWidth / 32;
          g.y *= m.engine.scene.tileHeight / 32;
        }
        d = b * m.engine.scene.tileWidth;
        e = a * m.engine.scene.tileHeight;
        r.NO_PHYSICS || null == f
          ? null != f && m.getTileLayerAt(c).grid.setTile(b, a)
          : m.createDynamicTile(
              f,
              d,
              e,
              c.ID,
              m.engine.scene.tileWidth,
              m.engine.scene.tileHeight
            );
      }
      m.engine.tileUpdated = !0;
    }
  };
  m.tileExistsAt = function (a, b, c) {
    return null != m.getTileAt(a, b, c);
  };
  m.tileCollisionAt = function (a, b, c) {
    if (null == c) {
      c = 0;
      for (var d = m.engine.interactiveLayers; c < d.length; ) {
        var e = d[c];
        ++c;
        e = e.tiles.getTileAt(a, b);
        if (null != e && -1 != e.collisionID) return !0;
      }
      return !1;
    }
    a = m.getTileAt(a, b, c);
    return null == a || -1 == a.collisionID ? !1 : !0;
  };
  m.getTilePosition = function (a, b) {
    var c = m.engine.scene.tileHeight,
      d = m.engine.scene.tileWidth;
    return 0 == a ? Math.floor(b / d) : Math.floor(b / c);
  };
  m.getTileIDAt = function (a, b, c) {
    a = m.getTileAt(a, b, c);
    return null == a ? -1 : a.tileID;
  };
  m.getTileColIDAt = function (a, b, c) {
    a = m.getTileAt(a, b, c);
    return null == a ? -1 : a.collisionID;
  };
  m.getTileDataAt = function (a, b, c) {
    a = m.getTileAt(a, b, c);
    return null == a ? "" : a.metadata;
  };
  m.getTilesetIDAt = function (a, b, c) {
    a = m.getTileAt(a, b, c);
    return null == a ? -1 : a.parent.ID;
  };
  m.getTileAt = function (a, b, c) {
    c = m.getTileLayerAt(c);
    return null == c ? null : c.getTileAt(a, b);
  };
  m.removeTileAt = function (a, b, c) {
    if (null != c && u.__instanceof(c, zc)) {
      var d = u.__cast(c, zc).tiles,
        e = m.getTileAt(a, b, c);
      null != e &&
        (r.NO_PHYSICS || -1 == e.collisionID
          ? -1 != e.collisionID && d.grid.setTile(b, a, !1)
          : ((c =
              "ID-" +
              b * m.engine.scene.tileWidth +
              "-" +
              a * m.engine.scene.tileHeight +
              "-" +
              c.ID),
            (e = m.engine.dynamicTiles),
            (e = null != t[c] ? e.getReserved(c) : e.h[c]),
            null != e &&
              (m.engine.removeActor(e), m.engine.dynamicTiles.remove(c))),
        d.setTileAt(a, b, null),
        (m.engine.tileUpdated = !0));
    }
  };
  m.getTileForCollision = function (a, b) {
    if (a.thisCollidedWithTile || a.otherCollidedWithTile) {
      var c = Math.round(r.toPixelUnits(b.normalX)),
        d = Math.round(r.toPixelUnits(b.normalY)),
        e = Math.round(r.toPixelUnits(b.x));
      b = Math.round(r.toPixelUnits(b.y));
      a.thisCollidedWithTile && ((c = -c), (d = -d));
      0 > c && 0 == e % m.engine.scene.tileWidth && --e;
      0 > d && 0 == b % m.engine.scene.tileHeight && --b;
      e = m.getTilePosition(0, e);
      b = m.getTilePosition(1, b);
      a = 0;
      for (c = m.engine.interactiveLayers; a < c.length; )
        if (
          ((d = c[a]),
          ++a,
          (d = d.tiles.getTileAt(b, e)),
          null != d && -1 != d.collisionID)
        )
          return d;
    }
    return null;
  };
  m.getTileDataForCollision = function (a, b) {
    a = m.getTileForCollision(a, b);
    return null != a ? a.metadata : "";
  };
  m.createDynamicTile = function (a, b, c, d, e, f) {
    a = new $a(
      m.engine,
      1e8,
      1,
      b,
      c,
      d,
      e,
      f,
      null,
      null,
      null,
      null,
      !1,
      !0,
      !1,
      !1,
      a,
      !1,
      !1
    );
    a.set_name("Terrain");
    a.set_visible(!1);
    b = "ID-" + b + "-" + c + "-" + d;
    c = m.engine.dynamicTiles;
    null != t[b] ? c.setReserved(b, a) : (c.h[b] = a);
  };
  m.getFont = function (a) {
    return $b.get().resources.get(a);
  };
  m.pause = function () {
    m.engine.pause();
  };
  m.unpause = function () {
    m.engine.unpause();
  };
  m.toggleFullScreen = function () {
    r.engine.toggleFullScreen();
  };
  m.pauseAll = function () {
    r.paused = !0;
  };
  m.unpauseAll = function () {
    r.paused = !1;
  };
  m.getScreenWidth = function () {
    return r.screenWidth;
  };
  m.getScreenHeight = function () {
    return r.screenHeight;
  };
  m.getStageWidth = function () {
    return r.stage.stageWidth;
  };
  m.getStageHeight = function () {
    return r.stage.stageHeight;
  };
  m.setOffscreenTolerance = function (a, b, c, d) {
    r.paddingTop = a | 0;
    r.paddingLeft = b | 0;
    r.paddingRight = d | 0;
    r.paddingBottom = c | 0;
  };
  m.isTransitioning = function () {
    return m.engine.isTransitioning();
  };
  m.setTimeScale = function (a) {
    r.timeScale = a;
  };
  m.randomFloat = function () {
    return Math.random();
  };
  m.randomFloatBetween = function (a, b) {
    return a <= b ? a + Math.random() * (b - a) : b + Math.random() * (a - b);
  };
  m.randomInt = function (a, b) {
    return a <= b
      ? a + Math.floor(Math.random() * (b - a + 1))
      : b + Math.floor(Math.random() * (a - b + 1));
  };
  m.saveGame = function (a, b) {
    a = od.getLocal(a);
    for (var c = m.engine.gameAttributes.keys(); c.hasNext(); ) {
      var d = c.next(),
        e = m.engine.gameAttributes;
      J.saveToSharedObject(a, d, null != t[d] ? e.getReserved(d) : e.h[d]);
    }
    J.flushSharedObject(a, b);
  };
  m.loadGame = function (a, b) {
    a = od.getLocal(a);
    for (var c = 0, d = V.fields(a.data); c < d.length; ) {
      var e = d[c];
      ++c;
      var f = m.engine.gameAttributes,
        g = J.loadFromSharedObject(a, e);
      null != t[e] ? f.setReserved(e, g) : (f.h[e] = g);
    }
    null != b && b(!0);
  };
  m.saveData = function (a, b, c, d) {
    a = od.getLocal(a);
    J.saveToSharedObject(a, b, c);
    J.flushSharedObject(a, d);
  };
  m.loadData = function (a, b, c) {
    a = od.getLocal(a);
    b = J.loadFromSharedObject(a, b);
    null != c && c(!0);
    return b;
  };
  m.checkData = function (a, b) {
    a = od.getLocal(a);
    return null != V.field(a.data, b);
  };
  m.defaultURLHandler = function (a) {
    new ph(a.target);
  };
  m.openURLInBrowser = function (a) {
    wa.getURL(new Qg(a));
  };
  m.visitURL = function (a, b) {
    null == b && (b = m.defaultURLHandler);
    try {
      var c = new Qg(a);
      c.method = "GET";
      new ph(c).addEventListener("complete", b);
    } catch (d) {
      if (
        ((X.lastException = d),
        d instanceof v && (d = d.val),
        !u.__instanceof(d, String))
      )
        throw d;
    }
  };
  m.postToURL = function (a, b, c) {
    null == c && (c = m.defaultURLHandler);
    a = new Qg(a);
    a.method = "POST";
    null != b && (a.data = kk._new(b));
    try {
      var d = new ph(a);
      d.addEventListener("complete", c);
      m.runLater(500, function (a) {
        d.close();
      });
    } catch (e) {
      if (
        ((X.lastException = e),
        e instanceof v && (e = e.val),
        !u.__instanceof(e, String))
      )
        throw e;
    }
  };
  m.convertToPseudoUnicode = function (a) {
    var b = "";
    try {
      var c, d;
      var e = (c = 0);
      for (d = a.length; e < d; ) {
        c = e;
        var f = a.charCodeAt(e);
        e += 55296 <= f && 56319 >= f ? 2 : 1;
        var g = ec.codePointAt(a, c),
          h = g;
        if (128 > h) {
          var n =
            65535 >= g
              ? String.fromCharCode(g)
              : String.fromCharCode((g >> 10) + 55232) +
                String.fromCharCode((g & 1023) | 56320);
          b += n;
        } else b += "~x" + ba.hex(h, 4);
      }
    } catch (k) {
      return (X.lastException = k), a;
    }
    return b;
  };
  m.simpleTweet = function (a, b) {
    m.openURLInBrowser(
      "http://twitter.com/home?status=" + encodeURIComponent(a + " " + b)
    );
  };
  m.newgroundsShowAd = function () {};
  m.newgroundsSetMedalPosition = function (a, b) {};
  m.newgroundsUnlockMedal = function (a) {};
  m.newgroundsSubmitScore = function (a, b) {};
  m.newgroundsShowScore = function (a) {};
  m.newgroundsHelper = function (a) {};
  m.kongregateInitAPI = function () {};
  m.kongregateSubmitStat = function (a, b) {};
  m.kongregateIsGuest = function () {
    return !0;
  };
  m.kongregateGetUsername = function () {
    return "Guest";
  };
  m.kongregateGetUserID = function () {
    return 0;
  };
  m.loadAtlas = function (a) {
    m.engine.atlasesToLoad.h[a] = a;
  };
  m.unloadAtlas = function (a) {
    m.engine.atlasesToUnload.h[a] = a;
  };
  m.atlasIsLoaded = function (a) {
    a = cb.get().atlases.h[a];
    return null != a ? a.active : !1;
  };
  m.initGooglePlayGames = function () {};
  m.stopGooglePlayGames = function () {};
  m.getGPGConnectionInfo = function (a) {
    return !1;
  };
  m.showGPGAchievements = function () {};
  m.showGPGLeaderboards = function () {};
  m.showGPGLeaderboard = function (a) {};
  m.showGPGQuests = function () {};
  m.unlockGPGAchievement = function (a) {};
  m.incrementGPGAchievement = function (a, b) {};
  m.submitGPGScore = function (a, b) {};
  m.updateGPGEvent = function (a, b) {};
  m.getCompletedGPGQuests = function () {
    return [];
  };
  m.gameCenterInitialize = function () {};
  m.gameCenterIsAuthenticated = function () {
    return !1;
  };
  m.gameCenterGetPlayerName = function () {
    return "None";
  };
  m.gameCenterGetPlayerID = function () {
    return "None";
  };
  m.gameCenterShowLeaderboard = function (a) {};
  m.gameCenterShowAchievements = function () {};
  m.gameCenterSubmitScore = function (a, b) {};
  m.gameCenterSubmitAchievement = function (a, b) {};
  m.gameCenterResetAchievements = function () {};
  m.gameCenterShowBanner = function (a, b) {};
  m.purchasesAreInitialized = function () {
    return !1;
  };
  m.purchasesRestore = function () {};
  m.purchasesBuy = function (a) {};
  m.purchasesHasBought = function (a) {
    return !1;
  };
  m.purchasesGetTitle = function (a) {
    return "";
  };
  m.purchasesGetDescription = function (a) {
    return "";
  };
  m.purchasesGetPrice = function (a) {
    return "";
  };
  m.purchasesRequestProductInfo = function (a) {};
  m.purchasesUse = function (a) {};
  m.purchasesGoogleConsume = function (a) {};
  m.purchasesGetQuantity = function (a) {
    return 0;
  };
  m.showAlert = function (a, b) {};
  m.vibrate = function (a) {};
  m.showKeyboard = function () {};
  m.hideKeyboard = function () {};
  m.setKeyboardText = function (a) {};
  m.setIconBadgeNumber = function (a) {};
  m.enableDebugDrawing = function () {
    r.DEBUG_DRAW = !0;
    r.NO_PHYSICS || r.debugDrawer.m_sprite.get_graphics().clear();
  };
  m.disableDebugDrawing = function () {
    r.DEBUG_DRAW = !1;
    r.NO_PHYSICS || r.debugDrawer.m_sprite.get_graphics().clear();
  };
  m.gameURL = function () {
    return "";
  };
  m.exitGame = function () {};
  m.createGrayscaleFilter = function () {
    var a = [];
    a = a.concat([0.5, 0.5, 0.5, 0, 0]);
    a = a.concat([0.5, 0.5, 0.5, 0, 0]);
    a = a.concat([0.5, 0.5, 0.5, 0, 0]);
    a = a.concat([0, 0, 0, 1, 0]);
    return new Vf(a);
  };
  m.createSepiaFilter = function () {
    var a = [];
    a = a.concat([0.34, 0.33, 0.33, 0, 30]);
    a = a.concat([0.33, 0.34, 0.33, 0, 20]);
    a = a.concat([0.33, 0.33, 0.34, 0, 0]);
    a = a.concat([0, 0, 0, 1, 0]);
    return new Vf(a);
  };
  m.createNegativeFilter = function () {
    var a = [];
    a = a.concat([-1, 0, 0, 0, 255]);
    a = a.concat([0, -1, 0, 0, 255]);
    a = a.concat([0, 0, -1, 0, 255]);
    a = a.concat([0, 0, 0, 1, 0]);
    return new Vf(a);
  };
  m.createTintFilter = function (a, b) {
    null == b && (b = 1);
    var c = new Ia();
    c.colorize(a, b);
    return c.getFilter();
  };
  m.createHueFilter = function (a) {
    var b = new Ia();
    b.adjustHue(a);
    b.adjustSaturation(1);
    return b.getFilter();
  };
  m.createSaturationFilter = function (a) {
    var b = new Ia();
    b.adjustSaturation(a / 100);
    return b.getFilter();
  };
  m.createBrightnessFilter = function (a) {
    var b = new Ia();
    b.adjustBrightness(a / 100);
    return b.getFilter();
  };
  m.prototype = {
    wrapper: null,
    propertyChangeListeners: null,
    equalityPairs: null,
    checkProperties: null,
    nameMap: null,
    attributeTweens: null,
    scriptInit: null,
    toInternalName: function (a) {
      if (null == this.nameMap) return a;
      var b = this.nameMap;
      b = null != t[a] ? b.getReserved(a) : b.h[a];
      return null == b ? a : b;
    },
    forwardMessage: function (a) {},
    clearListeners: function () {
      this.propertyChangeListeners = new la();
    },
    internalGetGroup: function (a, b, c) {
      if (r.NO_PHYSICS)
        return (
          (b = u.__cast(c, oc)),
          a == b.actorA
            ? m.engine.getGroup(b.groupA)
            : m.engine.getGroup(b.groupB)
        );
      b = u.__cast(b, Sf);
      if (null == b) return u.__cast(a, $a).getGroup();
      a = b.groupID;
      return -1e3 == a && ((b = b.getBody()), null != b)
        ? m.engine.getGroup(b.getUserData().groupID)
        : m.engine.getGroup(a);
    },
    init: function () {},
    addMobileKeyboardListener: function (a, b) {
      m.engine.nativeListeners.push(new aj(gd.TYPE_KEYBOARD, a, b));
    },
    addMobileAdListener: function (a, b) {
      m.engine.nativeListeners.push(new aj(gd.TYPE_ADS, a, b));
    },
    addGameCenterListener: function (a, b) {
      m.engine.nativeListeners.push(new aj(gd.TYPE_GAMECENTER, a, b));
    },
    addPurchaseListener: function (a, b) {
      m.engine.nativeListeners.push(new aj(gd.TYPE_PURCHASES, a, b));
    },
    addWhenCreatedListener: function (a, b) {
      var c = u.__instanceof(this, F);
      null != a &&
        (a.whenCreatedListeners.push(b),
        c &&
          u.__cast(this, F).actor.registerListener(a.whenCreatedListeners, b));
    },
    addWhenKilledListener: function (a, b) {
      var c = u.__instanceof(this, F);
      null != a &&
        (a.whenKilledListeners.push(b),
        c &&
          u.__cast(this, F).actor.registerListener(a.whenKilledListeners, b));
    },
    addWhenUpdatedListener: function (a, b) {
      var c = u.__instanceof(this, F);
      null == a && c && (a = u.__cast(this, F).actor);
      a = null != a ? a.whenUpdatedListeners : m.engine.whenUpdatedListeners;
      a.push(b);
      c && u.__cast(this, F).actor.registerListener(a, b);
    },
    addWhenDrawingListener: function (a, b) {
      var c = u.__instanceof(this, F);
      null == a && c && (a = u.__cast(this, F).actor);
      a = null != a ? a.whenDrawingListeners : m.engine.whenDrawingListeners;
      a.push(b);
      c && u.__cast(this, F).actor.registerListener(a, b);
    },
    addActorEntersRegionListener: function (a, b) {
      null != a &&
        (a.whenActorEntersListeners.push(b),
        u.__instanceof(this, F) &&
          u
            .__cast(this, F)
            .actor.registerListener(a.whenActorEntersListeners, b));
    },
    addActorExitsRegionListener: function (a, b) {
      null != a &&
        (a.whenActorExitsListeners.push(b),
        u.__instanceof(this, F) &&
          u
            .__cast(this, F)
            .actor.registerListener(a.whenActorExitsListeners, b));
    },
    addActorPositionListener: function (a, b) {
      null != a &&
        (a.positionListeners.push(b),
        a.positionListenerCount++,
        u.__instanceof(this, F) &&
          u.__cast(this, F).actor.registerListener(a.positionListeners, b));
    },
    addActorTypeGroupPositionListener: function (a, b) {
      m.engine.typeGroupPositionListeners.h.hasOwnProperty(a) ||
        (m.engine.typeGroupPositionListeners.h[a] = []);
      a = u.__cast(m.engine.typeGroupPositionListeners.h[a], Array);
      a.push(b);
      u.__instanceof(this, F) && u.__cast(this, F).actor.registerListener(a, b);
    },
    addSwipeListener: function (a) {
      m.engine.whenSwipedListeners.push(a);
      u.__instanceof(this, F) &&
        u
          .__cast(this, F)
          .actor.registerListener(m.engine.whenSwipedListeners, a);
    },
    addMultiTouchStartListener: function (a) {},
    addMultiTouchMoveListener: function (a) {},
    addMultiTouchEndListener: function (a) {},
    addKeyStateListener: function (a, b) {
      var c = m.engine.whenKeyPressedListeners;
      if (null == (null != t[a] ? c.getReserved(a) : c.h[a])) {
        c = m.engine.whenKeyPressedListeners;
        var d = [];
        null != t[a] ? c.setReserved(a, d) : (c.h[a] = d);
      }
      m.engine.hasKeyPressedListeners = !0;
      c = m.engine.whenKeyPressedListeners;
      a = null != t[a] ? c.getReserved(a) : c.h[a];
      a.push(b);
      u.__instanceof(this, F) && u.__cast(this, F).actor.registerListener(a, b);
    },
    addAnyKeyPressedListener: function (a) {
      m.engine.whenAnyKeyPressedListeners.push(a);
      u.__instanceof(this, F) &&
        u
          .__cast(this, F)
          .actor.registerListener(m.engine.whenAnyKeyPressedListeners, a);
    },
    addAnyKeyReleasedListener: function (a) {
      m.engine.whenAnyKeyReleasedListeners.push(a);
      u.__instanceof(this, F) &&
        u
          .__cast(this, F)
          .actor.registerListener(m.engine.whenAnyKeyReleasedListeners, a);
    },
    addAnyGamepadPressedListener: function (a) {
      m.engine.whenAnyGamepadPressedListeners.push(a);
      u.__instanceof(this, F) &&
        u
          .__cast(this, F)
          .actor.registerListener(m.engine.whenAnyGamepadPressedListeners, a);
    },
    addAnyGamepadReleasedListener: function (a) {
      m.engine.whenAnyGamepadReleasedListeners.push(a);
      u.__instanceof(this, F) &&
        u
          .__cast(this, F)
          .actor.registerListener(m.engine.whenAnyGamepadReleasedListeners, a);
    },
    addMousePressedListener: function (a) {
      m.engine.whenMousePressedListeners.push(a);
      u.__instanceof(this, F) &&
        u
          .__cast(this, F)
          .actor.registerListener(m.engine.whenMousePressedListeners, a);
    },
    addMouseReleasedListener: function (a) {
      m.engine.whenMouseReleasedListeners.push(a);
      u.__instanceof(this, F) &&
        u
          .__cast(this, F)
          .actor.registerListener(m.engine.whenMouseReleasedListeners, a);
    },
    addMouseMovedListener: function (a) {
      m.engine.whenMouseMovedListeners.push(a);
      u.__instanceof(this, F) &&
        u
          .__cast(this, F)
          .actor.registerListener(m.engine.whenMouseMovedListeners, a);
    },
    addMouseDraggedListener: function (a) {
      m.engine.whenMouseDraggedListeners.push(a);
      u.__instanceof(this, F) &&
        u
          .__cast(this, F)
          .actor.registerListener(m.engine.whenMouseDraggedListeners, a);
    },
    addMouseOverActorListener: function (a, b) {
      null != a &&
        (a.mouseOverListeners.push(b),
        u.__instanceof(this, F) &&
          u.__cast(this, F).actor.registerListener(a.mouseOverListeners, b));
    },
    addPropertyChangeListener: function (a, b, c) {
      var d = this.propertyChangeListeners;
      if (null != t[a] ? !d.existsReserved(a) : !d.h.hasOwnProperty(a)) {
        d = this.propertyChangeListeners;
        var e = [];
        null != t[a] ? d.setReserved(a, e) : (d.h[a] = e);
      }
      null != b
        ? ((d = this.propertyChangeListeners),
          (d = !(null != t[b] ? d.existsReserved(b) : d.h.hasOwnProperty(b))))
        : (d = !1);
      d &&
        ((d = this.propertyChangeListeners),
        (e = []),
        null != t[b] ? d.setReserved(b, e) : (d.h[b] = e));
      d = this.propertyChangeListeners;
      a = null != t[a] ? d.getReserved(a) : d.h[a];
      d = this.propertyChangeListeners;
      d = null != t[b] ? d.getReserved(b) : d.h[b];
      a.push(c);
      null != b &&
        (d.push(c),
        (e = []),
        e.push(a),
        e.push(d),
        this.equalityPairs.set(c, e));
      u.__instanceof(this, F) &&
        (u.__cast(this, F).actor.registerListener(a, c),
        null != b && u.__cast(this, F).actor.registerListener(d, c));
      this.checkProperties = !0;
    },
    propertyChanged: function (a, b) {
      if (this.checkProperties) {
        var c = this.propertyChangeListeners;
        a = null != t[a] ? c.getReserved(a) : c.h[a];
        if (null != a)
          for (c = 0; c < a.length; ) {
            try {
              var d = a[c];
              d(b, a);
              if (
                -1 == J.indexOf(a, d) &&
                (--c, null != this.equalityPairs.h[d.__id__])
              ) {
                for (
                  var e = 0,
                    f = u.__cast(this.equalityPairs.h[d.__id__], Array);
                  e < f.length;

                ) {
                  var g = f[e];
                  ++e;
                  g != a && g.splice(J.indexOf(g, d), 1);
                }
                this.equalityPairs.remove(d);
              }
            } catch (h) {
              if (
                ((X.lastException = h),
                h instanceof v && (h = h.val),
                !u.__instanceof(h, String))
              )
                throw h;
            }
            ++c;
          }
      }
    },
    addCollisionListener: function (a, b) {
      null != a &&
        (a.collisionListeners.push(b),
        a.collisionListenerCount++,
        u.__instanceof(this, F) &&
          u.__cast(this, F).actor.registerListener(a.collisionListeners, b));
    },
    addSceneCollisionListener: function (a, b, c) {
      if (!m.engine.collisionListeners.h.hasOwnProperty(a)) {
        var d = m.engine.collisionListeners,
          e = new Ca();
        d.h[a] = e;
      }
      m.engine.collisionListeners.h.hasOwnProperty(b) ||
        ((d = m.engine.collisionListeners), (e = new Ca()), (d.h[b] = e));
      m.engine.collisionListeners.h[a].exists(b) ||
        m.engine.collisionListeners.h[a].set(b, []);
      a = u.__cast(m.engine.collisionListeners.h[a].get(b), Array);
      a.push(c);
      u.__instanceof(this, F) &&
        (u.__cast(this, F).actor.collisionListenerCount++,
        u.__cast(this, F).actor.registerListener(a, c));
    },
    addWhenTypeGroupCreatedListener: function (a, b) {
      null == m.engine.whenTypeGroupCreatedListeners.h.__keys__[a.__id__] &&
        m.engine.whenTypeGroupCreatedListeners.set(a, []);
      a = m.engine.whenTypeGroupCreatedListeners.h[a.__id__];
      a.push(b);
      u.__instanceof(this, F) && u.__cast(this, F).actor.registerListener(a, b);
    },
    addWhenTypeGroupKilledListener: function (a, b) {
      null == m.engine.whenTypeGroupDiesListeners.h.__keys__[a.__id__] &&
        m.engine.whenTypeGroupDiesListeners.set(a, []);
      a = m.engine.whenTypeGroupDiesListeners.h[a.__id__];
      a.push(b);
      u.__instanceof(this, F) && u.__cast(this, F).actor.registerListener(a, b);
    },
    addSoundListener: function (a, b) {
      u.__instanceof(a, oi)
        ? (null == m.engine.soundListeners.h.__keys__[a.__id__] &&
            m.engine.soundListeners.set(a, []),
          (a = m.engine.soundListeners.h[a.__id__]))
        : (m.engine.channelListeners.h.hasOwnProperty(a) ||
            (m.engine.channelListeners.h[a] = []),
          (a = m.engine.channelListeners.h[a]));
      a.push(b);
      u.__instanceof(this, F) && u.__cast(this, F).actor.registerListener(a, b);
    },
    addFocusChangeListener: function (a) {
      m.engine.whenFocusChangedListeners.push(a);
      u.__instanceof(this, F) &&
        u
          .__cast(this, F)
          .actor.registerListener(m.engine.whenFocusChangedListeners, a);
    },
    addPauseListener: function (a) {
      m.engine.whenPausedListeners.push(a);
      u.__instanceof(this, F) &&
        u
          .__cast(this, F)
          .actor.registerListener(m.engine.whenPausedListeners, a);
    },
    addFullscreenListener: function (a) {
      m.engine.fullscreenListeners.push(a);
      u.__instanceof(this, F) &&
        u
          .__cast(this, F)
          .actor.registerListener(m.engine.fullscreenListeners, a);
    },
    addGameScaleListener: function (a) {
      m.engine.gameScaleListeners.push(a);
      u.__instanceof(this, F) &&
        u
          .__cast(this, F)
          .actor.registerListener(m.engine.gameScaleListeners, a);
    },
    addScreenSizeListener: function (a) {
      m.engine.screenSizeListeners.push(a);
      u.__instanceof(this, F) &&
        u
          .__cast(this, F)
          .actor.registerListener(m.engine.screenSizeListeners, a);
    },
    disableThisBehavior: function () {
      m.engine.behaviors.disableBehavior(this.wrapper.name);
    },
    tweenNumber: function (a, b, c, d) {
      null == c && (c = 1);
      var e = this,
        f = this.attributeTweens,
        g = null != t[a] ? f.getReserved(a) : f.h[a];
      null == g &&
        ((g = new Ge()),
        g.doOnUpdate(function () {
          e[a] = g.value;
        }),
        (f = this.attributeTweens),
        null != t[a] ? f.setReserved(a, g) : (f.h[a] = g));
      f = V.field(this, a);
      g.tween(f, b, d, (1e3 * c) | 0);
    },
    abortTweenNumber: function (a) {
      var b = this.attributeTweens;
      a = null != t[a] ? b.getReserved(a) : b.h[a];
      null != a && sb.cancel(a);
    },
    pauseTweens: function () {
      var a = this.attributeTweens;
      for (a = new Oe(a, a.arrayKeys()); a.hasNext(); ) a.next().paused = !0;
    },
    unpauseTweens: function () {
      var a = this.attributeTweens;
      for (a = new Oe(a, a.arrayKeys()); a.hasNext(); ) a.next().paused = !1;
    },
    __class__: m,
  };
  var F = function (a) {
    m.call(this);
    this.actor = a;
  };
  p["com.stencyl.behavior.ActorScript"] = F;
  F.__name__ = ["com", "stencyl", "behavior", "ActorScript"];
  F.__super__ = m;
  F.prototype = x(m.prototype, {
    actor: null,
    getValue: function (a, b) {
      return this.actor.getValue(a, b);
    },
    setValue: function (a, b, c) {
      this.actor.setValue(a, b, c);
    },
    shout: function (a, b) {
      return this.actor.shout(a, b);
    },
    disableThisBehavior: function () {
      this.actor.disableBehavior(this.wrapper.name);
    },
    __class__: F,
  });
  var Zi = function (a, b, c, d, e, f, g) {
    this.ID = a;
    this.fieldName = b;
    this.fullName = c;
    this.type = e;
    this.value = d;
    this.realValue = null;
    this.hidden = g;
  };
  p["com.stencyl.behavior.Attribute"] = Zi;
  Zi.__name__ = ["com", "stencyl", "behavior", "Attribute"];
  Zi.prototype = {
    ID: null,
    fieldName: null,
    fullName: null,
    type: null,
    defaultValue: null,
    value: null,
    realValue: null,
    parent: null,
    hidden: null,
    getRealValue: function () {
      if (null == this.realValue)
        if ("int" == this.type) this.realValue = this.value;
        else if ("float" == this.type || "number" == this.type)
          this.realValue = this.value;
        else if ("bool" == this.type || "boolean" == this.type)
          this.realValue = this.value;
        else if ("color" == this.type) this.realValue = this.value;
        else if (
          "sound" == this.type ||
          "actortype" == this.type ||
          "font" == this.type
        )
          null != this.value &&
            ((this.realValue =
              -1 == this.value ? null : $b.get().resources.get(this.value)),
            "font" != this.type ||
              u.__instanceof(this.realValue, Pf) ||
              (this.realValue = null),
            "sound" != this.type ||
              u.__instanceof(this.realValue, oi) ||
              (this.realValue = null),
            "actortype" != this.type ||
              u.__instanceof(this.realValue, ng) ||
              (this.realValue = null));
        else if ("actorgroup" == this.type) this.realValue = this.value;
        else if ("control" == this.type) this.realValue = this.value;
        else if ("effect" == this.type) this.realValue = this.value;
        else if ("animation" == this.type) this.realValue = this.value;
        else if ("game-attribute" == this.type) this.realValue = this.value;
        else if ("scene" == this.type)
          this.realValue = cb.get().scenes.h[this.value];
        else if ("text" == this.type) this.realValue = this.value;
        else if ("list" == this.type) {
          if (
            ((this.realValue = this.value),
            null == this.value || "" == this.value)
          )
            this.realValue = [];
        } else if ("map" == this.type) {
          if (
            ((this.realValue = this.value),
            null == this.value || "" == this.value)
          )
            this.realValue = new la();
        } else
          null != this.value && "actor" == this.type
            ? (this.realValue =
                "thisactor" == this.value
                  ? this.parent
                  : P.parseInt(this.value))
            : null != this.value && "joint" == this.type
            ? (this.realValue = this.value)
            : null != this.value &&
              "region" == this.type &&
              (this.realValue = this.value);
      return this.realValue;
    },
    __class__: Zi,
  };
  var Yl = function (a, b, c, d, e, f, g, h, n, k) {
    this.isEvent = k;
    this.parent = a;
    this.engine = b;
    this.classname = e;
    if (null != b)
      try {
        this.cls = qa.resolveClass(e);
      } catch (G) {
        if (
          ((X.lastException = G),
          G instanceof v && (G = G.val),
          !u.__instanceof(G, String))
        )
          throw G;
      }
    this.enabled = f;
    this.drawable = g;
    this.ID = c;
    this.name = d;
    this.type = n;
    this.attributes = h;
  };
  p["com.stencyl.behavior.Behavior"] = Yl;
  Yl.__name__ = ["com", "stencyl", "behavior", "Behavior"];
  Yl.prototype = {
    parent: null,
    engine: null,
    enabled: null,
    drawable: null,
    isEvent: null,
    ID: null,
    name: null,
    type: null,
    classname: null,
    cls: null,
    script: null,
    attributes: null,
    initScript: function (a) {
      null == a && (a = !1);
      if (null == this.cls) this.script = new wb();
      else {
        if ("actor" == this.type) {
          var b = this.parent;
          if ((null == b ? null : u.getClass(b)) == r) {
            this.script = new wb();
            return;
          }
          this.script = qa.createInstance(this.cls, [0, this.parent, null]);
        } else {
          b = this.parent;
          if ((null == b ? null : u.getClass(b)) == $a) {
            this.script = new wb();
            return;
          }
          this.script = qa.createInstance(this.cls, [0, null]);
        }
        this.script.wrapper = this;
        this.initAttributes();
        if (!a)
          try {
            this.script.init(), (this.script.scriptInit = !0);
          } catch (c) {
            if (
              ((X.lastException = c),
              c instanceof v && (c = c.val),
              !u.__instanceof(c, String))
            )
              throw c;
          }
      }
    },
    initAttributes: function () {
      var a = this.attributes;
      for (a = new Oe(a, a.arrayKeys()); a.hasNext(); ) {
        var b = a.next();
        try {
          if (
            !(
              b.hidden ||
              ("actor" == b.type &&
                "actor" == b.fieldName &&
                u.__instanceof(this.script, F))
            )
          ) {
            var c = this.script.toInternalName(b.fieldName);
            if ("actor" == b.type || "joint" == b.type || "region" == b.type) {
              var d = P.parseInt("" + P.string(b.getRealValue()));
              "actor" == b.type
                ? (this.script[c] = this.engine.getActor(d))
                : "joint" != b.type &&
                  "region" == b.type &&
                  (this.script[c] = this.engine.getRegion(d));
            } else if ("actorgroup" == b.type) {
              var e = P.parseInt("" + P.string(b.getRealValue()));
              this.script[c] = this.engine.getGroup(e);
            } else {
              var f = b.getRealValue();
              if ("list" == b.type) {
                b = null;
                if (null != f) {
                  b = u.__cast(f, Array);
                  for (var g = [], h = 0; h < b.length; ) {
                    var n = b[h];
                    ++h;
                    g.push(n);
                  }
                  b = g;
                } else b = [];
                this.script[c] = b;
              } else if ("map" == b.type) {
                b = null;
                if (null != f) {
                  g = f;
                  b = new la();
                  for (var k = g.keys(); k.hasNext(); ) {
                    var m = k.next(),
                      l = g.get(m);
                    null != t[m] ? b.setReserved(m, l) : (b.h[m] = l);
                  }
                } else b = new la();
                this.script[c] = b;
              } else this.script[c] = f;
            }
          }
        } catch (me) {
          if (
            ((X.lastException = me),
            me instanceof v && (me = me.val),
            !u.__instanceof(me, String))
          )
            throw me;
        }
      }
    },
    __class__: Yl,
  };
  var lk = function (a, b) {
    this.behaviorID = a;
    this.values = b;
    this.enabled = !0;
  };
  p["com.stencyl.behavior.BehaviorInstance"] = lk;
  lk.__name__ = ["com", "stencyl", "behavior", "BehaviorInstance"];
  lk.prototype = {
    behaviorID: null,
    values: null,
    enabled: null,
    __class__: lk,
  };
  var Zl = function () {
    this.behaviors = [];
    this.cache = new la();
  };
  p["com.stencyl.behavior.BehaviorManager"] = Zl;
  Zl.__name__ = ["com", "stencyl", "behavior", "BehaviorManager"];
  Zl.prototype = {
    behaviors: null,
    cache: null,
    destroy: function () {
      this.cache = this.behaviors = null;
    },
    add: function (a) {
      var b = a.name,
        c = this.cache;
      null != t[b] ? c.setReserved(b, a) : (c.h[b] = a);
      this.behaviors.push(a);
    },
    hasBehavior: function (a) {
      if (null == this.cache) return !1;
      var b = this.cache;
      return null != (null != t[a] ? b.getReserved(a) : b.h[a]);
    },
    enableBehavior: function (a) {
      if (this.hasBehavior(a)) {
        var b = this.cache;
        a = null != t[a] ? b.getReserved(a) : b.h[a];
        if (null != a.script && !a.script.scriptInit)
          try {
            a.script.init(), (a.script.scriptInit = !0);
          } catch (c) {
            if (
              ((X.lastException = c),
              c instanceof v && (c = c.val),
              !u.__instanceof(c, String))
            )
              throw c;
          }
        a.enabled = !0;
      }
    },
    disableBehavior: function (a) {
      if (this.hasBehavior(a)) {
        var b = this.cache;
        (null != t[a] ? b.getReserved(a) : b.h[a]).enabled = !1;
      }
    },
    isBehaviorEnabled: function (a) {
      if (this.hasBehavior(a)) {
        var b = this.cache;
        return (null != t[a] ? b.getReserved(a) : b.h[a]).enabled;
      }
      return !1;
    },
    initScripts: function () {
      for (var a = 0, b = this.behaviors.length; a < b; ) {
        var c = a++;
        c = this.behaviors[c];
        c.initScript(!c.enabled);
      }
    },
    getAttribute: function (a, b) {
      var c = this.cache;
      a = null != t[a] ? c.getReserved(a) : c.h[a];
      return null != a && null != a.script
        ? ((b = a.script.toInternalName(b)), V.field(a.script, b))
        : null;
    },
    setAttribute: function (a, b, c) {
      var d = this.cache;
      a = null != t[a] ? d.getReserved(a) : d.h[a];
      null != a &&
        null != a.script &&
        (null != V.field(a.script, b) ||
          Object.prototype.hasOwnProperty.call(a.script, b),
        (a.script[b] = c),
        a.script.propertyChanged(b, c));
    },
    call: function (a, b) {
      if (null == this.cache) return null;
      for (var c = null, d = 0, e = this.behaviors.length; d < e; ) {
        var f = d++;
        f = this.behaviors[f];
        if (f.enabled && null != f.script)
          try {
            var g = V.field(f.script, a);
            null != g ? (c = g.apply(f.script, b)) : f.script.forwardMessage(a);
          } catch (h) {
            if (
              ((X.lastException = h),
              h instanceof v && (h = h.val),
              u.__instanceof(h, String))
            )
              f.script.forwardMessage(a);
            else throw h;
          }
      }
      return c;
    },
    call2: function (a, b, c) {
      if (null == this.cache) return null;
      var d = null,
        e = this.cache;
      a = null != t[a] ? e.getReserved(a) : e.h[a];
      if (null != a) {
        if (!a.enabled || null == a.script) return d;
        try {
          var f = V.field(a.script, b);
          null != f ? (d = f.apply(a.script, c)) : a.script.forwardMessage(b);
        } catch (g) {
          if (
            ((X.lastException = g),
            g instanceof v && (g = g.val),
            u.__instanceof(g, String))
          )
            a.script.forwardMessage(b);
          else throw g;
        }
      }
      return d;
    },
    __class__: Zl,
  };
  var wb = function () {
    m.call(this);
  };
  p["com.stencyl.behavior.SceneScript"] = wb;
  wb.__name__ = ["com", "stencyl", "behavior", "SceneScript"];
  wb.__super__ = m;
  wb.prototype = x(m.prototype, { __class__: wb });
  var bm = function (a, b, c, d) {
    this.toExecute = a;
    this.interval = b;
    this.repeats = c;
    this.actor = d;
    this.done = !1;
    this.timer = b;
  };
  p["com.stencyl.behavior.TimedTask"] = bm;
  bm.__name__ = ["com", "stencyl", "behavior", "TimedTask"];
  bm.prototype = {
    toExecute: null,
    interval: null,
    repeats: null,
    actor: null,
    timer: null,
    done: null,
    actorCreateTime: null,
    update: function (a) {
      null == this.actor || this.actor.isAlive()
        ? (null == this.actor && r.engine.isPaused()) ||
          (null != this.actor && this.actor.isPaused()) ||
          ((this.timer -= a),
          0 >= this.timer &&
            (this.toExecute(this),
            (this.done = !this.repeats),
            this.repeats && (this.timer += this.interval)))
        : (this.done = !0);
    },
    __class__: bm,
  };
  var aj = function (a, b, c) {
    this.metaType = a;
    this.type = b;
    this.fn = c;
  };
  p["com.stencyl.event.NativeListener"] = aj;
  aj.__name__ = ["com", "stencyl", "event", "NativeListener"];
  aj.prototype = {
    metaType: null,
    type: null,
    fn: null,
    checkEvents: function (a) {
      a = a.eventTable.h[this.metaType];
      if (null != a)
        for (var b = 0; b < a.length; ) {
          var c = a[b];
          ++b;
          c.type == this.type &&
            (this.metaType == gd.TYPE_ADS
              ? this.fn()
              : this.metaType == gd.TYPE_PURCHASES
              ? this.fn(c.data1)
              : this.metaType == gd.TYPE_GAMECENTER
              ? this.fn(c.data1)
              : this.metaType == gd.TYPE_KEYBOARD && this.fn(c.data1));
        }
    },
    __class__: aj,
  };
  var Kc = function (a, b) {
    null == b && (b = "");
    this.type = a;
    this.data1 = b;
  };
  p["com.stencyl.event.StencylEvent"] = Kc;
  Kc.__name__ = ["com", "stencyl", "event", "StencylEvent"];
  Kc.prototype = { type: null, data1: null, __class__: Kc };
  var bp = function () {};
  p["com.stencyl.graphics.AbstractAnimation"] = bp;
  bp.__name__ = ["com", "stencyl", "graphics", "AbstractAnimation"];
  bp.prototype = {
    update: null,
    getCurrentFrame: null,
    getNumFrames: null,
    setFrame: null,
    isFinished: null,
    activate: null,
    reset: null,
    draw: null,
    getFrameDurations: null,
    setFrameDurations: null,
    setFrameDuration: null,
    getCurrentImage: null,
    __class__: bp,
  };
  var ic = function (a, b, c) {
    null == c && (c = !1);
    hb.call(this);
    this.__bitmapData = a;
    this.pixelSnapping = b;
    this.smoothing = c;
    null == b && (this.pixelSnapping = 1);
  };
  p["openfl.display.Bitmap"] = ic;
  ic.__name__ = ["openfl", "display", "Bitmap"];
  ic.__super__ = hb;
  ic.prototype = x(hb.prototype, {
    pixelSnapping: null,
    smoothing: null,
    __image: null,
    __bitmapData: null,
    __imageVersion: null,
    __enterFrame: function (a) {
      null == this.__bitmapData ||
        null == this.__bitmapData.image ||
        this.__bitmapData.image.version == this.__imageVersion ||
        this.__renderDirty ||
        ((this.__renderDirty = !0), this.__setParentRenderDirty());
    },
    __getBounds: function (a, b) {
      if (null != this.__bitmapData) {
        var c = W.__pool.get();
        c.setTo(0, 0, this.__bitmapData.width, this.__bitmapData.height);
        c.__transform(c, b);
        a.__expand(c.x, c.y, c.width, c.height);
        W.__pool.release(c);
      }
    },
    __hitTest: function (a, b, c, d, e, f) {
      if (
        !f.get_visible() ||
        this.__isMask ||
        null == this.__bitmapData ||
        (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
      )
        return !1;
      this.__getRenderTransform();
      c = this.__renderTransform;
      var g = c.a * c.d - c.b * c.c;
      c = 0 == g ? -c.tx : (1 / g) * (c.c * (c.ty - b) + c.d * (a - c.tx));
      g = this.__renderTransform;
      var h = g.a * g.d - g.b * g.c;
      a = 0 == h ? -g.ty : (1 / h) * (g.a * (b - g.ty) + g.b * (g.tx - a));
      if (
        0 < c &&
        0 < a &&
        c <= this.__bitmapData.width &&
        a <= this.__bitmapData.height
      ) {
        if (null != this.__scrollRect && !this.__scrollRect.contains(c, a))
          return !1;
        null == d || e || d.push(f);
        return !0;
      }
      return !1;
    },
    __hitTestMask: function (a, b) {
      if (null == this.__bitmapData) return !1;
      this.__getRenderTransform();
      var c = this.__renderTransform,
        d = c.a * c.d - c.b * c.c;
      c = 0 == d ? -c.tx : (1 / d) * (c.c * (c.ty - b) + c.d * (a - c.tx));
      d = this.__renderTransform;
      var e = d.a * d.d - d.b * d.c;
      a = 0 == e ? -d.ty : (1 / e) * (d.a * (b - d.ty) + d.b * (d.tx - a));
      return 0 < c &&
        0 < a &&
        c <= this.__bitmapData.width &&
        a <= this.__bitmapData.height
        ? !0
        : !1;
    },
    __renderCairo: function (a) {},
    __renderCairoMask: function (a) {
      a.cairo.rectangle(0, 0, this.get_width(), this.get_height());
    },
    __renderCanvas: function (a) {
      this.__updateCacheBitmap(a, !1);
      null != this.__bitmapData &&
        null != this.__bitmapData.image &&
        (this.__imageVersion = this.__bitmapData.image.version);
      if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
        if (
          !(
            (null == this.opaqueBackground && null == this.__graphics) ||
            !this.__renderable ||
            0 >= a.__getAlpha(this.__worldAlpha)
          )
        ) {
          if (
            null != this.opaqueBackground &&
            !this.__isCacheBitmapRender &&
            0 < this.get_width() &&
            0 < this.get_height()
          ) {
            a.__setBlendMode(this.__worldBlendMode);
            a.__pushMaskObject(this);
            var b = a.context;
            a.setTransform(this.__renderTransform, b);
            var c = this.opaqueBackground;
            b.fillStyle =
              "rgb(" +
              ((c >>> 16) & 255) +
              "," +
              ((c >>> 8) & 255) +
              "," +
              (c & 255) +
              ")";
            b.fillRect(0, 0, this.get_width(), this.get_height());
            a.__popMaskObject(this);
          }
          if (null != this.__graphics && this.__renderable) {
            var d = a.__getAlpha(this.__worldAlpha);
            if (!(0 >= d) && ((b = this.__graphics), null != b)) {
              w.render(b, a);
              c = b.__width;
              var e = b.__height;
              if (null != b.__canvas) {
                var f = a.context,
                  g = this.__scrollRect;
                0 < c &&
                  0 < e &&
                  (null == g || (0 < g.width && 0 < g.height)) &&
                  (a.__setBlendMode(this.__worldBlendMode),
                  a.__pushMaskObject(this),
                  (f.globalAlpha = d),
                  a.setTransform(b.__worldTransform, f),
                  a.__isDOM && ((d = 1 / a.pixelRatio), f.scale(d, d)),
                  f.drawImage(b.__canvas, 0, 0, c, e),
                  a.__popMaskObject(this));
              }
            }
          }
        }
        this.__renderable &&
          ((c = a.__getAlpha(this.__worldAlpha)),
          0 < c &&
            null != this.__bitmapData &&
            this.__bitmapData.__isValid &&
            this.__bitmapData.readable &&
            ((b = a.context),
            a.__setBlendMode(this.__worldBlendMode),
            a.__pushMaskObject(this, !1),
            pa.convertToCanvas(this.__bitmapData.image),
            (b.globalAlpha = c),
            (c = this.__scrollRect),
            a.setTransform(this.__renderTransform, b),
            (a.__allowSmoothing && this.smoothing) ||
              (b.imageSmoothingEnabled = !1),
            null == c
              ? b.drawImage(
                  this.__bitmapData.image.get_src(),
                  0,
                  0,
                  this.__bitmapData.image.width,
                  this.__bitmapData.image.height
                )
              : b.drawImage(
                  this.__bitmapData.image.get_src(),
                  c.x,
                  c.y,
                  c.width,
                  c.height
                ),
            (a.__allowSmoothing && this.smoothing) ||
              (b.imageSmoothingEnabled = !0),
            a.__popMaskObject(this, !1)));
      } else
        (b = this.__cacheBitmap),
          b.__renderable &&
            ((e = a.__getAlpha(b.__worldAlpha)),
            0 < e &&
              null != b.__bitmapData &&
              b.__bitmapData.__isValid &&
              b.__bitmapData.readable &&
              ((c = a.context),
              a.__setBlendMode(b.__worldBlendMode),
              a.__pushMaskObject(b, !1),
              pa.convertToCanvas(b.__bitmapData.image),
              (c.globalAlpha = e),
              (e = b.__scrollRect),
              a.setTransform(b.__renderTransform, c),
              (a.__allowSmoothing && b.smoothing) ||
                (c.imageSmoothingEnabled = !1),
              null == e
                ? c.drawImage(
                    b.__bitmapData.image.get_src(),
                    0,
                    0,
                    b.__bitmapData.image.width,
                    b.__bitmapData.image.height
                  )
                : c.drawImage(
                    b.__bitmapData.image.get_src(),
                    e.x,
                    e.y,
                    e.width,
                    e.height
                  ),
              (a.__allowSmoothing && b.smoothing) ||
                (c.imageSmoothingEnabled = !0),
              a.__popMaskObject(b, !1)));
      this.__renderEvent(a);
    },
    __renderCanvasMask: function (a) {
      a.context.rect(0, 0, this.get_width(), this.get_height());
    },
    __renderDOM: function (a) {
      this.__updateCacheBitmap(a, !1);
      if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
        null != this.opaqueBackground &&
          !this.__isCacheBitmapRender &&
          0 < this.get_width() &&
          this.get_height();
        var b = this.__graphics;
        if (
          null != this.stage &&
          this.__worldVisible &&
          this.__renderable &&
          null != b
        ) {
          w.render(b, a.__canvasRenderer);
          if (
            b.__dirty ||
            this.__worldAlphaChanged ||
            this.__canvas != b.__canvas
          )
            null != b.__canvas
              ? this.__canvas != b.__canvas &&
                (null != this.__canvas && a.element.removeChild(this.__canvas),
                (this.__canvas = b.__canvas),
                (this.__context = b.__context),
                a.__initializeElement(this, this.__canvas))
              : Df.clear(this, a);
          if (null != this.__canvas) {
            a.__pushMaskObject(this);
            var c = this.__renderTransform;
            this.__renderTransform = b.__worldTransform;
            b.__transformDirty &&
              ((b.__transformDirty = !1), (this.__renderTransformChanged = !0));
            a.__updateClip(this);
            a.__applyStyle(this, !0, !0, !0);
            this.__renderTransform = c;
            a.__popMaskObject(this);
          }
        } else Df.clear(this, a);
        null != this.stage &&
        this.__worldVisible &&
        this.__renderable &&
        null != this.__bitmapData &&
        this.__bitmapData.__isValid &&
        this.__bitmapData.readable
          ? (a.__pushMaskObject(this),
            null != this.__bitmapData.image.buffer.__srcImage
              ? Sd.renderImage(this, a)
              : Sd.renderCanvas(this, a),
            a.__popMaskObject(this))
          : Sd.clear(this, a);
      } else
        this.__renderDOMClear(a),
          (this.__cacheBitmap.stage = this.stage),
          (b = this.__cacheBitmap),
          null != b.stage &&
          b.__worldVisible &&
          b.__renderable &&
          null != b.__bitmapData &&
          b.__bitmapData.__isValid &&
          b.__bitmapData.readable
            ? (a.__pushMaskObject(b),
              null != b.__bitmapData.image.buffer.__srcImage
                ? Sd.renderImage(b, a)
                : Sd.renderCanvas(b, a),
              a.__popMaskObject(b))
            : Sd.clear(b, a);
      this.__renderEvent(a);
    },
    __renderDOMClear: function (a) {
      Sd.clear(this, a);
    },
    __renderGL: function (a) {
      this.__updateCacheBitmap(a, !1);
      null != this.__bitmapData &&
        null != this.__bitmapData.image &&
        (this.__imageVersion = this.__bitmapData.image.version);
      if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
        if (
          !(
            (null == this.opaqueBackground && null == this.__graphics) ||
            !this.__renderable ||
            0 >= this.__worldAlpha
          )
        ) {
          if (
            null != this.opaqueBackground &&
            !this.__isCacheBitmapRender &&
            0 < this.get_width() &&
            0 < this.get_height()
          ) {
            a.__setBlendMode(this.__worldBlendMode);
            a.__pushMaskObject(this);
            var b = a.__context3D,
              c = W.__pool.get();
            c.setTo(0, 0, this.get_width(), this.get_height());
            a.__pushMaskRect(c, this.__renderTransform);
            var d = this.opaqueBackground;
            b.clear(
              ((d >>> 16) & 255) / 255,
              ((d >>> 8) & 255) / 255,
              (d & 255) / 255,
              1,
              0,
              0,
              1
            );
            a.__popMaskRect();
            a.__popMaskObject(this);
            W.__pool.release(c);
          }
          null != this.__graphics && lg.render(this, a);
        }
        Ah.render(this, a);
      } else Ah.render(this.__cacheBitmap, a);
      this.__renderEvent(a);
    },
    __renderGLMask: function (a) {
      Ah.renderMask(this, a);
    },
    __updateCacheBitmap: function (a, b) {
      return null == this.__bitmapData ||
        (null == this.__filters &&
          "opengl" == a.__type &&
          null == this.__cacheBitmap)
        ? !1
        : hb.prototype.__updateCacheBitmap.call(
            this,
            a,
            null != this.__bitmapData.image &&
              this.__bitmapData.image.version != this.__imageVersion
          );
    },
    get_bitmapData: function () {
      return this.__bitmapData;
    },
    set_bitmapData: function (a) {
      this.__bitmapData = a;
      this.smoothing = !1;
      this.__renderDirty ||
        ((this.__renderDirty = !0), this.__setParentRenderDirty());
      this.__imageVersion = -1;
      return this.__bitmapData;
    },
    get_height: function () {
      return null != this.__bitmapData
        ? this.__bitmapData.height * Math.abs(this.get_scaleY())
        : 0;
    },
    set_height: function (a) {
      return null != this.__bitmapData
        ? (a != this.__bitmapData.height &&
            (this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            this.set_scaleY(a / this.__bitmapData.height)),
          a)
        : 0;
    },
    get_width: function () {
      return null != this.__bitmapData
        ? this.__bitmapData.width * Math.abs(this.__scaleX)
        : 0;
    },
    set_width: function (a) {
      return null != this.__bitmapData
        ? (a != this.__bitmapData.width &&
            (this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty()),
            this.set_scaleX(a / this.__bitmapData.width)),
          a)
        : 0;
    },
    __class__: ic,
    __properties__: x(hb.prototype.__properties__, {
      set_bitmapData: "set_bitmapData",
      get_bitmapData: "get_bitmapData",
    }),
  });
  var mk = function (a) {
    ic.call(this, a.frames[0]);
    this.model = a;
    this.set_x(Math.round((-a.frameWidth / 2) * r.SCALE));
    this.set_y(Math.round((-a.frameHeight / 2) * r.SCALE));
    this.frameIndex = this.timer = 0;
    this.individualDurations = !1;
    this.durations = a.durations;
    this.numFrames = this.durations.length;
    this.smoothing = U.antialias;
    this.finished = 1 >= this.numFrames;
    null != this.filter
      ? (this.filteredFrames[this.frameIndex] ||
          ((this.frames[this.frameIndex] = this.applyFilters(
            this.frames[this.frameIndex],
            this.model.frames[this.frameIndex],
            this.filter
          )),
          (this.filteredFrames[this.frameIndex] = !0)),
        this.set_bitmapData(this.frames[this.frameIndex]))
      : this.set_bitmapData(this.model.frames[this.frameIndex]);
    this.smoothing = U.antialias;
    this.needsUpdate = !1;
  };
  p["com.stencyl.graphics.BitmapAnimation"] = mk;
  mk.__name__ = ["com", "stencyl", "graphics", "BitmapAnimation"];
  mk.__interfaces__ = [bp];
  mk.__super__ = ic;
  mk.prototype = x(ic.prototype, {
    model: null,
    frameIndex: null,
    timer: null,
    finished: null,
    needsUpdate: null,
    durations: null,
    individualDurations: null,
    frames: null,
    numFrames: null,
    filter: null,
    filteredFrames: null,
    update: function (a) {
      this.model.sync && this.model.looping
        ? ((a = this.frameIndex),
          (this.timer = this.model.sharedTimer),
          (this.frameIndex = this.model.sharedFrameIndex),
          a != this.frameIndex && (this.needsUpdate = !0))
        : ((this.timer += a),
          0 < this.numFrames &&
            this.timer > this.durations[this.frameIndex] &&
            ((a = this.frameIndex),
            (this.timer -= this.durations[this.frameIndex]),
            this.frameIndex++,
            this.frameIndex >= this.numFrames &&
              (this.model.looping
                ? (this.frameIndex = 0)
                : ((this.finished = !0), this.frameIndex--)),
            a != this.frameIndex && (this.needsUpdate = !0)));
    },
    getCurrentFrame: function () {
      return this.frameIndex;
    },
    getNumFrames: function () {
      return this.numFrames;
    },
    setFrame: function (a) {
      if (0 > a || a >= this.numFrames) a = 0;
      a != this.frameIndex && ((this.frameIndex = a), (this.needsUpdate = !0));
      this.timer = 0;
      this.finished = !1;
    },
    isFinished: function () {
      return this.finished;
    },
    needsBitmapUpdate: function () {
      return this.needsUpdate;
    },
    reset: function () {
      this.frameIndex = this.timer = 0;
      this.finished = !1;
      this.needsUpdate = !0;
    },
    updateBitmap: function () {
      null != this.filter
        ? (this.filteredFrames[this.frameIndex] ||
            ((this.frames[this.frameIndex] = this.applyFilters(
              this.frames[this.frameIndex],
              this.model.frames[this.frameIndex],
              this.filter
            )),
            (this.filteredFrames[this.frameIndex] = !0)),
          this.set_bitmapData(this.frames[this.frameIndex]))
        : this.set_bitmapData(this.model.frames[this.frameIndex]);
      this.smoothing = U.antialias;
      this.needsUpdate = !1;
    },
    set_filter: function (a) {
      this.filter = a;
      if (null == this.filteredFrames) {
        for (var b = [], c = 0, d = this.numFrames; c < d; ) c++, b.push(!1);
        this.filteredFrames = b;
        b = [];
        c = 0;
        for (d = this.numFrames; c < d; ) c++, b.push(null);
        this.frames = b;
      } else
        for (b = 0, c = this.numFrames; b < c; )
          (d = b++), (this.filteredFrames[d] = !1);
      null != this.filter
        ? (this.filteredFrames[this.frameIndex] ||
            ((this.frames[this.frameIndex] = this.applyFilters(
              this.frames[this.frameIndex],
              this.model.frames[this.frameIndex],
              this.filter
            )),
            (this.filteredFrames[this.frameIndex] = !0)),
          this.set_bitmapData(this.frames[this.frameIndex]))
        : this.set_bitmapData(this.model.frames[this.frameIndex]);
      this.smoothing = U.antialias;
      this.needsUpdate = !1;
      return a;
    },
    applyFilters: function (a, b, c) {
      null == a && (a = new sa(b.width, b.height));
      for (var d = 0; d < c.length; ) {
        var e = c[d];
        ++d;
        b = e.__applyFilter(a, b, b.rect, J.zero);
      }
      return a;
    },
    draw: function (a, b, c, d, e) {
      if (!U.disposeImages || this.model.checkImageReadable()) {
        e = this.get_bitmapData();
        b *= a.scaleX;
        c *= a.scaleY;
        a.rect.x = 0;
        a.rect.y = 0;
        a.rect.width = e.width;
        a.rect.height = e.height;
        a.drawActor
          ? null != a.actor && a.actor.isHUD
            ? ((a.point.x = a.x + b), (a.point.y = a.y + c))
            : ((a.point.x = a.x + b - r.cameraX),
              (a.point.y = a.y + c - r.cameraY))
          : ((a.point.x = a.x + b), (a.point.y = a.y + c));
        a.mtx.identity();
        a.mtx.rotate(d);
        a.mtx.translate(a.point.x, a.point.y);
        if (0 == d)
          1 != a.alpha &&
            ((a.point2.x = 0),
            (a.point2.y = 0),
            (a.rect2.width = e.width),
            (a.rect2.height = e.height),
            (d = new sa(
              e.width,
              e.height,
              !0,
              a.toARGB(0, (255 * a.alpha) | 0)
            )),
            (c = new sa(e.width, e.height, !0, 0)),
            c.copyPixels(e, a.rect2, a.point2, d, null, !0),
            (e = c)),
            a.graphics.beginBitmapFill(e, a.mtx),
            a.graphics.drawRect(a.point.x, a.point.y, e.width, e.height);
        else {
          1 != a.alpha &&
            ((a.point2.x = 0),
            (a.point2.y = 0),
            (a.rect2.width = e.width),
            (a.rect2.height = e.height),
            (d = new sa(
              e.width,
              e.height,
              !0,
              a.toARGB(0, (255 * a.alpha) | 0)
            )),
            (c = new sa(e.width, e.height, !0, 0)),
            c.copyPixels(e, a.rect2, a.point2, d, null, !0),
            (e = c));
          d = new sa(e.width + 2, e.height + 2, !0, 0);
          c = Math.sqrt(Math.pow(d.width, 2) + Math.pow(d.height, 2)) | 0;
          b = new W(0, 0, e.width, e.height);
          var f = new Y(1, 1);
          d.copyPixels(e, b, f);
          a.graphics.beginBitmapFill(d, a.mtx, !1, U.antialias);
          a.graphics.drawRect(
            a.x - (c - e.width) / 2,
            a.y - (c - e.height) / 2,
            c,
            c
          );
        }
        a.graphics.endFill();
      }
    },
    getFrameDurations: function () {
      return this.durations;
    },
    setFrameDurations: function (a) {
      if (null != this.durations) {
        for (var b = [], c = 0, d = this.durations.length; c < d; )
          c++, b.push(a);
        this.durations = b;
        this.individualDurations = !0;
      }
    },
    setFrameDuration: function (a, b) {
      if (!this.individualDurations) {
        for (var c = [], d = 0, e = this.durations.length; d < e; ) {
          var f = d++;
          c.push(this.durations[f]);
        }
        this.durations = c;
        this.individualDurations = !0;
      }
      0 <= a && a < this.durations.length && (this.durations[a] = b);
    },
    framesUpdated: function () {
      this.set_x(Math.round((-this.model.frameWidth / 2) * r.SCALE));
      this.set_y(Math.round((-this.model.frameHeight / 2) * r.SCALE));
      null != this.filter
        ? (this.filteredFrames[this.frameIndex] ||
            ((this.frames[this.frameIndex] = this.applyFilters(
              this.frames[this.frameIndex],
              this.model.frames[this.frameIndex],
              this.filter
            )),
            (this.filteredFrames[this.frameIndex] = !0)),
          this.set_bitmapData(this.frames[this.frameIndex]))
        : this.set_bitmapData(this.model.frames[this.frameIndex]);
      this.smoothing = U.antialias;
      this.needsUpdate = !1;
    },
    getCurrentImage: function () {
      return U.disposeImages && !this.model.checkImageReadable()
        ? ue.UNLOADED
        : this.get_bitmapData();
    },
    activate: function () {},
    __class__: mk,
    __properties__: x(ic.prototype.__properties__, {
      set_filter: "set_filter",
    }),
  });
  var pi = function () {};
  p["com.stencyl.graphics.EngineScaleUpdateListener"] = pi;
  pi.__name__ = ["com", "stencyl", "graphics", "EngineScaleUpdateListener"];
  pi.prototype = { updateScale: null, __class__: pi };
  var Rg = function (a) {
    this.cacheParentAnchor = J.zero;
    gb.call(this);
    this.img = a;
    this.offsetY = this.offsetX = 0;
    this.addChild(a);
  };
  p["com.stencyl.graphics.BitmapWrapper"] = Rg;
  Rg.__name__ = ["com", "stencyl", "graphics", "BitmapWrapper"];
  Rg.__interfaces__ = [pi];
  Rg.__super__ = gb;
  Rg.prototype = x(gb.prototype, {
    img: null,
    offsetX: null,
    offsetY: null,
    cacheParentAnchor: null,
    smoothing: null,
    imgX: null,
    imgY: null,
    tweenProps: null,
    set_imgX: function (a) {
      this.set_x((a + this.offsetX) * r.SCALE - this.cacheParentAnchor.x);
      return (this.imgX = a);
    },
    get_imgX: function () {
      return this.imgX;
    },
    set_imgY: function (a) {
      this.set_y((a + this.offsetY) * r.SCALE - this.cacheParentAnchor.y);
      return (this.imgY = a);
    },
    get_imgY: function () {
      return this.imgY;
    },
    set_smoothing: function (a) {
      return (this.img.smoothing = a);
    },
    get_smoothing: function () {
      return this.img.smoothing;
    },
    setOrigin: function (a, b) {
      this.set_x(this.get_x() + (a - this.offsetX) * r.SCALE);
      this.set_y(this.get_y() + (b - this.offsetY) * r.SCALE);
      this.offsetX = a;
      this.offsetY = b;
      this.img.set_x(-a * r.SCALE);
      this.img.set_y(-b * r.SCALE);
    },
    updateScale: function () {
      this.updatePosition();
    },
    updatePosition: function () {
      this.set_x(
        (this.get_imgX() + this.offsetX) * r.SCALE - this.cacheParentAnchor.x
      );
      this.set_y(
        (this.get_imgY() + this.offsetY) * r.SCALE - this.cacheParentAnchor.y
      );
    },
    get_tweenProps: function () {
      null == this.tweenProps && (this.tweenProps = new cp(this));
      return this.tweenProps;
    },
    __class__: Rg,
    __properties__: x(gb.prototype.__properties__, {
      get_tweenProps: "get_tweenProps",
      set_imgY: "set_imgY",
      get_imgY: "get_imgY",
      set_imgX: "set_imgX",
      get_imgX: "get_imgX",
      set_smoothing: "set_smoothing",
      get_smoothing: "get_smoothing",
    }),
  });
  var cp = function (a) {
    this.bmp = a;
    this.xy = new Rf().doOnUpdate(B(this, this.onUpdateXY));
    this.angle = new Ge().doOnUpdate(B(this, this.onUpdateAngle));
    this.alpha = new Ge().doOnUpdate(B(this, this.onUpdateAlpha));
    this.scaleXY = new Rf().doOnUpdate(B(this, this.onUpdateScaleXY));
  };
  p["com.stencyl.graphics.BitmapTweenProperties"] = cp;
  cp.__name__ = ["com", "stencyl", "graphics", "BitmapTweenProperties"];
  cp.prototype = {
    xy: null,
    angle: null,
    alpha: null,
    scaleXY: null,
    bmp: null,
    pause: function () {
      this.xy.paused = !0;
      this.angle.paused = !0;
      this.alpha.paused = !0;
      this.scaleXY.paused = !0;
    },
    unpause: function () {
      this.xy.paused = !1;
      this.angle.paused = !1;
      this.alpha.paused = !1;
      this.scaleXY.paused = !1;
    },
    cancel: function () {
      this.xy.active && sb.cancel(this.xy);
      this.angle.active && sb.cancel(this.angle);
      this.alpha.active && sb.cancel(this.alpha);
      this.scaleXY.active && sb.cancel(this.scaleXY);
    },
    onUpdateXY: function () {
      this.bmp.set_imgX(this.xy.value1);
      this.bmp.set_imgY(this.xy.value2);
    },
    onUpdateAngle: function () {
      this.bmp.set_rotation(this.angle.value);
    },
    onUpdateAlpha: function () {
      this.bmp.set_alpha(this.alpha.value);
    },
    onUpdateScaleXY: function () {
      this.bmp.set_scaleX(this.scaleXY.value1);
      this.bmp.set_scaleY(this.scaleXY.value2);
    },
    __class__: cp,
  };
  var gm = function () {};
  p["com.stencyl.graphics.BlendModes"] = gm;
  gm.__name__ = ["com", "stencyl", "graphics", "BlendModes"];
  gm.get = function (a) {
    var b = gm.stringBlendMap;
    return null != t[a] ? b.getReserved(a) : b.h[a];
  };
  var Qd = function () {
    this.drawActor = !1;
    this.x = this.y = 0;
    this.scaleX = this.scaleY = r.SCALE;
    this.alpha = 1;
    this.blendMode = 10;
    this.strokeColor = this.fillColor = this.strokeSize = 0;
    this.rect = new W();
    this.rect2 = new W();
    this.point = new Y();
    this.point2 = new Y();
    this.data = [0, 0, 0];
    this.drawPoly = !1;
    this.firstY = this.firstX = this.pointCounter = 0;
    this.font = this.defaultFont = new Pf(-1, 0, "", !0);
    this.mtx = new ya();
  };
  p["com.stencyl.graphics.G"] = Qd;
  Qd.__name__ = ["com", "stencyl", "graphics", "G"];
  Qd.resetStatics = function () {
    Qd.fontCache = null;
  };
  Qd.visitStringCache = function () {
    for (var a = Qd.drawnStringCacheKeys.length; 0 < a--; ) {
      var b = Qd.drawnStringCacheKeys[a],
        c = Qd.drawnStringCache;
      b = null != t[b] ? c.getReserved(b) : c.h[b];
      --b.lifetime;
      0 == b.lifetime &&
        (b.img.dispose(),
        Qd.drawnStringCache.remove(Qd.drawnStringCacheKeys[a]),
        (Qd.drawnStringCacheKeys[a] =
          Qd.drawnStringCacheKeys[Qd.drawnStringCacheKeys.length - 1]),
        Qd.drawnStringCacheKeys.pop());
    }
  };
  Qd.prototype = {
    defaultFont: null,
    graphics: null,
    x: null,
    y: null,
    scaleX: null,
    scaleY: null,
    alpha: null,
    blendMode: null,
    strokeSize: null,
    fillColor: null,
    strokeColor: null,
    font: null,
    fontData: null,
    mtx: null,
    rect: null,
    rect2: null,
    point: null,
    point2: null,
    data: null,
    drawPoly: null,
    pointCounter: null,
    firstX: null,
    firstY: null,
    drawActor: null,
    actor: null,
    resetGraphicsSettings: function () {
      this.alpha = 1;
      this.strokeColor = this.fillColor = this.strokeSize = 0;
      this.font = this.defaultFont;
    },
    setFont: function (a) {
      null != a && a != this.font && (this.font = a);
    },
    startGraphics: function () {
      !this.drawActor ||
        (null != this.actor && this.actor.isHUD) ||
        ((this.x -= r.cameraX), (this.y -= r.cameraY));
      0 == this.strokeSize
        ? this.graphics.lineStyle()
        : this.graphics.lineStyle(
            this.strokeSize,
            this.strokeColor,
            this.alpha
          );
    },
    endGraphics: function () {
      this.drawActor &&
        !this.actor.isHUD &&
        ((this.x += r.cameraX), (this.y += r.cameraY));
      this.graphics.lineStyle();
    },
    translate: function (a, b) {
      this.x += a * this.scaleX;
      this.y += b * this.scaleY;
    },
    moveTo: function (a, b) {
      if (this.drawActor) {
        if (null != this.actor) {
          var c = this.actor;
          this.drawActor = !0;
          this.actor = c;
          if (c.smoothMove) {
            var d = c.drawY - Math.floor(c.cacheHeight / 2) - c.currOffset.y;
            this.x =
              (c.drawX - Math.floor(c.cacheWidth / 2) - c.currOffset.x) *
              this.scaleX;
            this.y = d * this.scaleY;
          } else
            (this.x = c.colX * this.scaleX), (this.y = c.colY * this.scaleY);
        }
        this.x += a * this.scaleX;
        this.y += b * this.scaleY;
      } else (this.x = a * this.scaleX), (this.y = b * this.scaleY);
    },
    translateToScreen: function () {
      this.drawActor = !1;
      this.actor = null;
      this.y = this.x = 0;
    },
    translateToActor: function (a) {
      this.drawActor = !0;
      this.actor = a;
      if (a.smoothMove) {
        var b = a.drawY - Math.floor(a.cacheHeight / 2) - a.currOffset.y;
        this.x =
          (a.drawX - Math.floor(a.cacheWidth / 2) - a.currOffset.x) *
          this.scaleX;
        this.y = b * this.scaleY;
      } else (this.x = a.colX * this.scaleX), (this.y = a.colY * this.scaleY);
    },
    getCacheKey: function (a, b, c) {
      return a + ":" + b.ID + ":" + c + ":" + b.letterSpacing + ":" + r.SCALE;
    },
    drawString: function (a, b, c) {
      null == this.font &&
        ((this.font = this.defaultFont),
        this.font.fontScale != r.SCALE && (this.font.fontScale = r.SCALE));
      this.drawActor
        ? null != this.actor && this.actor.isHUD
          ? ((b = this.x + b * this.scaleX), (c = this.y + c * this.scaleY))
          : ((b = this.x + b * this.scaleX - r.cameraX),
            (c = this.y + c * this.scaleY - r.cameraY))
        : ((b = this.x + b * this.scaleX), (c = this.y + c * this.scaleY));
      this.mtx.identity();
      this.mtx.translate(b, c);
      var d = null,
        e = this.font;
      e =
        a +
        ":" +
        e.ID +
        ":" +
        this.alpha +
        ":" +
        e.letterSpacing +
        ":" +
        r.SCALE;
      var f = Qd.drawnStringCache;
      if (null != t[e] ? f.existsReserved(e) : f.h.hasOwnProperty(e))
        (a = Qd.drawnStringCache),
          (a = null != t[e] ? a.getReserved(e) : a.h[e]),
          (a.lifetime = 5),
          (d = a.img);
      else {
        f = this.font.font.getTextWidth(
          a,
          this.font.letterSpacing,
          this.font.fontScale
        );
        var g = (this.font.font.getFontHeight() * this.font.fontScale) | 0;
        0 < f &&
          0 < g &&
          ((d = new sa(f, g, !0, 0)),
          this.font.font.renderToImg(
            d,
            a,
            0,
            this.alpha,
            0,
            0,
            this.font.letterSpacing,
            this.font.fontScale,
            0,
            !1
          ),
          (a = new dp()),
          (a.img = d),
          (a.lifetime = 5),
          (f = Qd.drawnStringCache),
          null != t[e] ? f.setReserved(e, a) : (f.h[e] = a),
          Qd.drawnStringCacheKeys.push(e));
      }
      null != d &&
        (this.graphics.beginBitmapFill(d, this.mtx, !1, U.antialias),
        this.graphics.drawRect(b, c, d.width, d.height),
        this.graphics.endFill());
    },
    drawLine: function (a, b, c, d) {
      a *= this.scaleX;
      b *= this.scaleY;
      c *= this.scaleX;
      d *= this.scaleY;
      !this.drawActor ||
        (null != this.actor && this.actor.isHUD) ||
        ((this.x -= r.cameraX), (this.y -= r.cameraY));
      0 == this.strokeSize
        ? this.graphics.lineStyle()
        : this.graphics.lineStyle(
            this.strokeSize,
            this.strokeColor,
            this.alpha
          );
      this.graphics.moveTo(this.x + a, this.y + b);
      this.graphics.lineTo(this.x + c, this.y + d);
      this.drawActor &&
        !this.actor.isHUD &&
        ((this.x += r.cameraX), (this.y += r.cameraY));
      this.graphics.lineStyle();
    },
    fillPixel: function (a, b) {
      !this.drawActor ||
        (null != this.actor && this.actor.isHUD) ||
        ((this.x -= r.cameraX), (this.y -= r.cameraY));
      0 == this.strokeSize
        ? this.graphics.lineStyle()
        : this.graphics.lineStyle(
            this.strokeSize,
            this.strokeColor,
            this.alpha
          );
      this.graphics.lineStyle();
      this.graphics.beginFill(this.fillColor, this.alpha);
      this.graphics.drawRect(
        this.x + ((a * r.SCALE) | 0),
        this.y + ((b * r.SCALE) | 0),
        r.SCALE | 0,
        r.SCALE | 0
      );
      this.graphics.endFill();
      this.drawActor &&
        !this.actor.isHUD &&
        ((this.x += r.cameraX), (this.y += r.cameraY));
      this.graphics.lineStyle();
    },
    drawRect: function (a, b, c, d) {
      a *= this.scaleX;
      b *= this.scaleY;
      c *= this.scaleX;
      d *= this.scaleY;
      !this.drawActor ||
        (null != this.actor && this.actor.isHUD) ||
        ((this.x -= r.cameraX), (this.y -= r.cameraY));
      0 == this.strokeSize
        ? this.graphics.lineStyle()
        : this.graphics.lineStyle(
            this.strokeSize,
            this.strokeColor,
            this.alpha
          );
      this.graphics.drawRect(this.x + a, this.y + b, c, d);
      this.drawActor &&
        !this.actor.isHUD &&
        ((this.x += r.cameraX), (this.y += r.cameraY));
      this.graphics.lineStyle();
    },
    fillRect: function (a, b, c, d) {
      a *= this.scaleX;
      b *= this.scaleY;
      c *= this.scaleX;
      d *= this.scaleY;
      !this.drawActor ||
        (null != this.actor && this.actor.isHUD) ||
        ((this.x -= r.cameraX), (this.y -= r.cameraY));
      0 == this.strokeSize
        ? this.graphics.lineStyle()
        : this.graphics.lineStyle(
            this.strokeSize,
            this.strokeColor,
            this.alpha
          );
      this.graphics.beginFill(this.fillColor, this.alpha);
      this.graphics.drawRect(this.x + a, this.y + b, c, d);
      this.graphics.endFill();
      this.drawActor &&
        !this.actor.isHUD &&
        ((this.x += r.cameraX), (this.y += r.cameraY));
      this.graphics.lineStyle();
    },
    drawRoundRect: function (a, b, c, d, e) {
      a *= this.scaleX;
      b *= this.scaleY;
      c *= this.scaleX;
      d *= this.scaleY;
      !this.drawActor ||
        (null != this.actor && this.actor.isHUD) ||
        ((this.x -= r.cameraX), (this.y -= r.cameraY));
      0 == this.strokeSize
        ? this.graphics.lineStyle()
        : this.graphics.lineStyle(
            this.strokeSize,
            this.strokeColor,
            this.alpha
          );
      this.graphics.drawRoundRect(this.x + a, this.y + b, c, d, e, e);
      this.drawActor &&
        !this.actor.isHUD &&
        ((this.x += r.cameraX), (this.y += r.cameraY));
      this.graphics.lineStyle();
    },
    fillRoundRect: function (a, b, c, d, e) {
      a *= this.scaleX;
      b *= this.scaleY;
      c *= this.scaleX;
      d *= this.scaleY;
      !this.drawActor ||
        (null != this.actor && this.actor.isHUD) ||
        ((this.x -= r.cameraX), (this.y -= r.cameraY));
      0 == this.strokeSize
        ? this.graphics.lineStyle()
        : this.graphics.lineStyle(
            this.strokeSize,
            this.strokeColor,
            this.alpha
          );
      this.graphics.beginFill(this.fillColor, this.alpha);
      this.graphics.drawRoundRect(this.x + a, this.y + b, c, d, e, e);
      this.graphics.endFill();
      this.drawActor &&
        !this.actor.isHUD &&
        ((this.x += r.cameraX), (this.y += r.cameraY));
      this.graphics.lineStyle();
    },
    drawCircle: function (a, b, c) {
      a *= this.scaleX;
      b *= this.scaleY;
      c *= this.scaleX;
      !this.drawActor ||
        (null != this.actor && this.actor.isHUD) ||
        ((this.x -= r.cameraX), (this.y -= r.cameraY));
      0 == this.strokeSize
        ? this.graphics.lineStyle()
        : this.graphics.lineStyle(
            this.strokeSize,
            this.strokeColor,
            this.alpha
          );
      this.graphics.drawCircle(this.x + a, this.y + b, c);
      this.drawActor &&
        !this.actor.isHUD &&
        ((this.x += r.cameraX), (this.y += r.cameraY));
      this.graphics.lineStyle();
    },
    fillCircle: function (a, b, c) {
      a *= this.scaleX;
      b *= this.scaleY;
      c *= this.scaleX;
      !this.drawActor ||
        (null != this.actor && this.actor.isHUD) ||
        ((this.x -= r.cameraX), (this.y -= r.cameraY));
      0 == this.strokeSize
        ? this.graphics.lineStyle()
        : this.graphics.lineStyle(
            this.strokeSize,
            this.strokeColor,
            this.alpha
          );
      this.graphics.beginFill(this.fillColor, this.alpha);
      this.graphics.drawCircle(this.x + a, this.y + b, c);
      this.graphics.endFill();
      this.drawActor &&
        !this.actor.isHUD &&
        ((this.x += r.cameraX), (this.y += r.cameraY));
      this.graphics.lineStyle();
    },
    beginFillPolygon: function () {
      this.drawPoly = !1;
      !this.drawActor ||
        (null != this.actor && this.actor.isHUD) ||
        ((this.x -= r.cameraX), (this.y -= r.cameraY));
      0 == this.strokeSize
        ? this.graphics.lineStyle()
        : this.graphics.lineStyle(
            this.strokeSize,
            this.strokeColor,
            this.alpha
          );
      this.graphics.moveTo(this.x, this.y);
      this.pointCounter = 0;
    },
    endDrawingPolygon: function () {
      2 <= this.pointCounter &&
        (this.drawPoly
          ? this.graphics.lineTo(this.x + this.firstX, this.y + this.firstY)
          : (this.graphics.lineTo(this.x + this.firstX, this.y + this.firstY),
            this.graphics.endFill()),
        this.drawActor &&
          !this.actor.isHUD &&
          ((this.x += r.cameraX), (this.y += r.cameraY)),
        this.graphics.lineStyle());
    },
    beginDrawPolygon: function () {
      this.drawPoly = !0;
      !this.drawActor ||
        (null != this.actor && this.actor.isHUD) ||
        ((this.x -= r.cameraX), (this.y -= r.cameraY));
      0 == this.strokeSize
        ? this.graphics.lineStyle()
        : this.graphics.lineStyle(
            this.strokeSize,
            this.strokeColor,
            this.alpha
          );
      this.graphics.moveTo(this.x, this.y);
      this.pointCounter = 0;
    },
    addPointToPolygon: function (a, b) {
      a *= this.scaleX;
      b *= this.scaleY;
      0 == this.pointCounter &&
        ((this.firstX = a),
        (this.firstY = b),
        this.graphics.moveTo(this.x + a, this.y + b),
        this.drawPoly || this.graphics.beginFill(this.fillColor, this.alpha));
      this.pointCounter++;
      this.graphics.lineTo(this.x + a, this.y + b);
    },
    drawImage: function (a, b, c, d, e) {
      null == d && (d = 0);
      b *= this.scaleX;
      c *= this.scaleY;
      this.rect.x = 0;
      this.rect.y = 0;
      this.rect.width = a.width;
      this.rect.height = a.height;
      this.drawActor
        ? null != this.actor && this.actor.isHUD
          ? ((this.point.x = this.x + b), (this.point.y = this.y + c))
          : ((this.point.x = this.x + b - r.cameraX),
            (this.point.y = this.y + c - r.cameraY))
        : ((this.point.x = this.x + b), (this.point.y = this.y + c));
      this.mtx.identity();
      this.mtx.rotate(d);
      this.mtx.translate(this.point.x, this.point.y);
      0 == d
        ? (1 != this.alpha &&
            ((this.point2.x = 0),
            (this.point2.y = 0),
            (this.rect2.width = a.width),
            (this.rect2.height = a.height),
            (b = new sa(
              a.width,
              a.height,
              !0,
              this.toARGB(0, (255 * this.alpha) | 0)
            )),
            (c = new sa(a.width, a.height, !0, 0)),
            c.copyPixels(a, this.rect2, this.point2, b, null, !0),
            (a = c)),
          this.graphics.beginBitmapFill(a, this.mtx),
          this.graphics.drawRect(this.point.x, this.point.y, a.width, a.height))
        : (1 != this.alpha &&
            ((this.point2.x = 0),
            (this.point2.y = 0),
            (this.rect2.width = a.width),
            (this.rect2.height = a.height),
            (b = new sa(
              a.width,
              a.height,
              !0,
              this.toARGB(0, (255 * this.alpha) | 0)
            )),
            (c = new sa(a.width, a.height, !0, 0)),
            c.copyPixels(a, this.rect2, this.point2, b, null, !0),
            (a = c)),
          (b = new sa(a.width + 2, a.height + 2, !0, 0)),
          (c = Math.sqrt(Math.pow(b.width, 2) + Math.pow(b.height, 2)) | 0),
          (d = new W(0, 0, a.width, a.height)),
          (e = new Y(1, 1)),
          b.copyPixels(a, d, e),
          this.graphics.beginBitmapFill(b, this.mtx, !1, U.antialias),
          this.graphics.drawRect(
            this.x - (c - a.width) / 2,
            this.y - (c - a.height) / 2,
            c,
            c
          ));
      this.graphics.endFill();
    },
    toARGB: function (a, b) {
      return a + (b << 24);
    },
    resetFont: function () {
      this.font = this.defaultFont;
      this.font.fontScale != r.SCALE && (this.font.fontScale = r.SCALE);
    },
    __class__: Qd,
  };
  var dp = function () {};
  p["com.stencyl.graphics._G.TemporaryImage"] = dp;
  dp.__name__ = ["com", "stencyl", "graphics", "_G", "TemporaryImage"];
  dp.prototype = { lifetime: null, img: null, __class__: dp };
  var hd = function () {};
  p["com.stencyl.graphics.GLUtil"] = hd;
  hd.__name__ = ["com", "stencyl", "graphics", "GLUtil"];
  hd.initialize = function () {
    null == hd.gl &&
      ((hd.context = r.stage.window.context),
      (hd.context3D = r.stage.context3D),
      (hd.gl = yb.fromRenderContext(hd.context)),
      (hd.renderer = r.stage.__renderer),
      (hd.textureMaxSize = hd.gl.getParameter(hd.gl.MAX_TEXTURE_SIZE)),
      (hd.textureMaxSize = (hd.textureMaxSize / 2) | 0),
      hd.textureMaxSize > hd.MAX_TEXTURE_CAP &&
        (hd.textureMaxSize = hd.MAX_TEXTURE_CAP),
      null == sa.__supportsBGRA &&
        new sa(1, 1, !0, 0).getTexture(hd.context3D));
  };
  hd.uploadTexture = function (a, b) {
    a.getTexture(hd.context3D);
    b && hd.disposeSoftwareBuffer(a);
  };
  hd.disposeSoftwareBuffer = function (a) {
    a.image = null;
    a.readable = !1;
    a.__surface = null;
    a.__vertexBuffer = null;
    a.__framebuffer = null;
    a.__framebufferContext = null;
  };
  hd.createNewTexture = function (a) {
    var b = hd.context3D.createRectangleTexture(a, a, 1, !1);
    b.uploadFromTypedArray(null);
    var c = new sa(0, 0, !0, 0);
    c.__resize(a, a);
    c.readable = !1;
    c.__texture = b;
    c.__textureContext = hd.context;
    c.__isValid = !0;
    c.image = null;
    return c;
  };
  hd.clearTexture = function (a) {
    a.__texture.uploadFromTypedArray(null);
  };
  var Gd = function (a) {
    this.value = a;
  };
  p["com.stencyl.graphics.Scale"] = Gd;
  Gd.__name__ = ["com", "stencyl", "graphics", "Scale"];
  Gd.fromString = function (a) {
    switch (a) {
      case "1.5x":
        return Gd._1_5X;
      case "1x":
        return Gd._1X;
      case "2x":
        return Gd._2X;
      case "3x":
        return Gd._3X;
      case "4x":
        return Gd._4X;
      default:
        return Gd._1X;
    }
  };
  Gd.prototype = {
    value: null,
    toString: function () {
      return 1 == this.value
        ? "1x"
        : 1.5 == this.value
        ? "1.5x"
        : 2 == this.value
        ? "2x"
        : 3 == this.value
        ? "3x"
        : 4 == this.value
        ? "4x"
        : "";
    },
    __class__: Gd,
  };
  var Mg = {};
  p["com.stencyl.graphics._ScaleMode.ScaleMode_Impl_"] = Mg;
  Mg.__name__ = ["com", "stencyl", "graphics", "_ScaleMode", "ScaleMode_Impl_"];
  Mg._new = function (a) {
    return a;
  };
  Mg.fromString = function (a) {
    switch (a) {
      case "FULLSCREEN":
        return 1;
      case "NO_SCALING":
        return 0;
      case "SCALE_TO_FIT_FILL":
        return 4;
      case "SCALE_TO_FIT_FULLSCREEN":
        return 5;
      case "SCALE_TO_FIT_LETTERBOX":
        return 3;
      case "STRETCH_TO_FIT":
        return 2;
      default:
        return 0;
    }
  };
  Mg.toString = function (a) {
    switch (a) {
      case 0:
        return "NO_SCALING";
      case 1:
        return "FULLSCREEN";
      case 2:
        return "STRETCH_TO_FIT";
      case 3:
        return "SCALE_TO_FIT_LETTERBOX";
      case 4:
        return "SCALE_TO_FIT_FILL";
      case 5:
        return "SCALE_TO_FIT_FULLSCREEN";
      default:
        return "NO_SCALING";
    }
  };
  var Af = function () {
    this.lineSpacing = 0;
    this.isDefault = !1;
    this._maxHeight = 0;
    this._point = new Y();
    this._glyphs = new Ca();
    this._num_letters = 0;
  };
  p["com.stencyl.graphics.fonts.BitmapFont"] = Af;
  Af.__name__ = ["com", "stencyl", "graphics", "fonts", "BitmapFont"];
  Af.store = function (a, b) {
    var c = Af._storedFonts;
    null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
  };
  Af.fetch = function (a) {
    var b = Af._storedFonts;
    return null != t[a] ? b.getReserved(a) : b.h[a];
  };
  Af.prototype = {
    _glyphs: null,
    _num_letters: null,
    _tileset: null,
    _glyphString: null,
    _maxHeight: null,
    _point: null,
    isDefault: null,
    lineSpacing: null,
    loadPixelizer: function (a, b) {
      this.reset();
      this._glyphString = b;
      if (null != a) {
        b = [];
        a = this.prepareBitmapData(a, b);
        this._tileset = new ui(a);
        for (var c = 0, d = b.length; c < d; ) {
          var e = c++;
          a = b[e];
          this.setGlyph(
            Q.cca(this._glyphString, e),
            a,
            e,
            0,
            0,
            Math.floor(a.width)
          );
        }
      }
      return this;
    },
    loadAngelCode: function (a, b) {
      this.reset();
      if (null != a) {
        this._glyphString = "";
        var c = new W(),
          d = new Y(),
          e = 0;
        this._tileset = new ui(a);
        a = null;
        for (b = b.elements(); b.hasNext(); ) {
          var f = b.next();
          if (f.nodeType != ta.Element)
            throw new v(
              "Bad node type, expected Element but found " + f.nodeType
            );
          if ("font" == f.nodeName)
            for (f = f.elements(); f.hasNext(); ) {
              var g = f.next();
              if (g.nodeType != ta.Element)
                throw new v(
                  "Bad node type, expected Element but found " + g.nodeType
                );
              if ("common" == g.nodeName)
                this.lineSpacing = P.parseInt(g.get("lineHeight"));
              else {
                if (g.nodeType != ta.Element)
                  throw new v(
                    "Bad node type, expected Element but found " + g.nodeType
                  );
                "chars" == g.nodeName && (a = g);
              }
            }
        }
        if (null != a)
          for (f = a.elements(); f.hasNext(); ) {
            g = f.next();
            if (g.nodeType != ta.Element)
              throw new v(
                "Bad node type, expected Element but found " + g.nodeType
              );
            if ("char" == g.nodeName) {
              c.x = P.parseInt(g.get("x"));
              c.y = P.parseInt(g.get("y"));
              c.width = P.parseInt(g.get("width"));
              c.height = P.parseInt(g.get("height"));
              d.x = P.parseInt(g.get("xoffset"));
              d.y = P.parseInt(g.get("yoffset"));
              a = P.parseInt(g.get("id"));
              b = String.fromCharCode(a);
              this._glyphString += b;
              var h = (g = P.parseInt(g.get("xadvance")));
              c.width > g && ((h = c.width | 0), (d.x = 0));
              " " != b && "" != b
                ? this.setGlyph(a, c, e, Math.floor(d.x), Math.floor(d.y), h)
                : this.setGlyph(a, c, e, Math.floor(d.x), 1, h);
              ++e;
            }
          }
      }
      return this;
    },
    reset: function () {
      this.dispose();
      this._maxHeight = 0;
      this._glyphs = new Ca();
      this._glyphString = "";
    },
    prepareBitmapData: function (a, b) {
      for (var c = a.getPixel(0, 0), d = 0, e; d < a.height; ) {
        var f = 0;
        for (e = 0; e < a.width; ) {
          if ((a.getPixel(e, d) | 0) != c) {
            for (var g = e, h = d; (a.getPixel(g, d) | 0) != c; ) ++g;
            for (; (a.getPixel(e, h) | 0) != c; ) ++h;
            g -= e;
            h -= d;
            b.push(new W(e, d, g, h));
            h > f && (f = h);
            h > this._maxHeight && (this._maxHeight = h);
            e += g;
          }
          ++e;
        }
        d += f + 1;
      }
      b = a.clone();
      f = a.getPixel32(0, 0);
      for (d = 0; d < a.height; ) {
        for (e = 0; e < a.width; )
          (c = a.getPixel32(e, d)), c == f && b.setPixel32(e, d, 0), ++e;
        ++d;
      }
      return b;
    },
    dispose: function () {
      this._tileset = null;
      this._num_letters = 0;
      this._glyphs = null;
    },
    setGlyph: function (a, b, c, d, e, f) {
      null == f && (f = 0);
      null == e && (e = 0);
      null == d && (d = 0);
      0 == b.width && (b.width = 1);
      0 == b.height && (b.height = 1);
      this._tileset.addRect(b);
      var g = new ep();
      g.tileID = c;
      g.xoffset = d;
      g.yoffset = e;
      g.xadvance = f;
      this._glyphs.h[a] = g;
      this._num_letters++;
      Math.floor(b.height) + e > this._maxHeight &&
        (this._maxHeight = Math.floor(b.height) + e);
    },
    render: function (a, b, c, d, e, f, g, h) {
      this._point.x = d;
      this._point.y = e;
      e = d = 0;
      for (h = b.length; e < h; ) {
        var n = e++;
        if (!(n < d)) {
          var k = Q.cca(b, n);
          126 == k &&
            "x" == b.charAt(n + 1) &&
            ((n = b.substring(n + 2, n + 6)),
            (k = P.parseInt("0x" + n)),
            (d += 5));
          var m = this._glyphs.h[k];
          this._glyphs.h.hasOwnProperty(k) &&
            ((n = m.xadvance),
            32 != k &&
              ((k = new Sg(
                m.tileID,
                this._point.x + m.xoffset * g,
                this._point.y + m.yoffset * g
              )),
              k.set_scaleX(g),
              k.set_scaleY(g),
              k.set_alpha(c),
              a.addTile(k)),
            (this._point.x += n * g + f));
          ++d;
        }
      }
    },
    renderToImg: function (a, b, c, d, e, f, g, h, n, k) {
      null == k && (k = !0);
      null == n && (n = 0);
      var m = new pg(a.width, a.height, this._tileset);
      this.render(m, b, d, e, f, g, h, n);
      k
        ? a.draw(
            m,
            null,
            new sc(
              ((c >> 16) & 255) / 255,
              ((c >> 8) & 255) / 255,
              (c & 255) / 255
            )
          )
        : a.draw(m);
      m.removeTiles();
    },
    toARGB: function (a, b) {
      return a + (b << 24);
    },
    getTextWidth: function (a, b, c) {
      null == c && (c = 1);
      null == b && (b = 0);
      for (var d = 0, e = 0, f = a.length, g = 0; g < f; ) {
        var h = g++;
        if (!(h < e)) {
          var n = Q.cca(a, h);
          126 == n &&
            "x" == a.charAt(h + 1) &&
            ((h = a.substring(h + 2, h + 6)),
            (n = P.parseInt("0x" + h)),
            (e += 5));
          this._glyphs.h.hasOwnProperty(n) && (d += this._glyphs.h[n].xadvance);
          ++e;
        }
      }
      d = Math.round(d * c);
      1 < f && (d += (f - 1) * b);
      return d;
    },
    getFontHeight: function () {
      return this._maxHeight;
    },
    numLetters: null,
    get_numLetters: function () {
      return this._num_letters;
    },
    containsCharacter: function (a) {
      return 0 <= this._glyphString.indexOf(a);
    },
    getTileset: function () {
      return this._tileset;
    },
    __class__: Af,
    __properties__: { get_numLetters: "get_numLetters" },
  };
  var Nh = function () {};
  p["com.stencyl.graphics.fonts.DefaultFontGenerator"] = Nh;
  Nh.__name__ = ["com", "stencyl", "graphics", "fonts", "DefaultFontGenerator"];
  Nh.generateAndStoreDefaultFont = function () {
    for (
      var a = "", b = new sa(700, 9, !0, -7829368), c = 0, d = 0;
      d < Nh.fontData.length;

    ) {
      a += Q.substr(Nh.fontData, d, 1);
      for (
        var e = P.parseInt(Q.substr(Nh.fontData, ++d, 1)),
          f = 0,
          g = P.parseInt(Q.substr(Nh.fontData, ++d, 1));
        f < g;

      )
        for (var h = f++, n = 0, k = e; n < k; ) {
          var m = n++;
          ++d;
          "1" == Q.substr(Nh.fontData, d, 1)
            ? b.setPixel32(1 + 7 * c + m, 1 + h, -1)
            : b.setPixel32(1 + 7 * c + m, 1 + h, 0);
        }
      ++d;
      ++c;
    }
    Af.store("default", new Af().loadPixelizer(b, a));
    b.dispose();
  };
  var ep = function () {};
  p["com.stencyl.graphics.fonts.FontSymbol"] = ep;
  ep.__name__ = ["com", "stencyl", "graphics", "fonts", "FontSymbol"];
  ep.prototype = {
    xoffset: null,
    yoffset: null,
    xadvance: null,
    tileID: null,
    __class__: ep,
  };
  var hm = function (a) {
    this.cacheParentAnchor = J.zero;
    gb.call(this);
    this._text = "";
    this._color = 0;
    this._useColor = !0;
    this._outline = !1;
    this._outlineColor = 0;
    this._shadow = !1;
    this._shadowColor = 0;
    this._background = !1;
    this._backgroundColor = 16777215;
    this._alignment = 1;
    this._padding = 0;
    this._pendingTextChange = !1;
    this._fieldWidth = 1;
    this._multiLine = !1;
    this._letterSpacing = this._lineSpacing = 0;
    this._fontScale = 1;
    this._autoUpperCase = !1;
    this._wordWrap = this._fixedWidth = !0;
    this._alpha = 1;
    null == a
      ? (null == Af.fetch("default") && Nh.generateAndStoreDefaultFont(),
        (this._font = Af.fetch("default")))
      : (this._font = a);
    this.set_cacheAsBitmap(!0);
    this._pendingTextChange = !0;
    this.update();
  };
  p["com.stencyl.graphics.fonts.Label"] = hm;
  hm.__name__ = ["com", "stencyl", "graphics", "fonts", "Label"];
  hm.__interfaces__ = [pi];
  hm.__super__ = gb;
  hm.prototype = x(gb.prototype, {
    _stencylFont: null,
    _font: null,
    _text: null,
    _color: null,
    _useColor: null,
    _outline: null,
    _outlineColor: null,
    _shadow: null,
    _shadowColor: null,
    _background: null,
    _backgroundColor: null,
    _alignment: null,
    _padding: null,
    _lineSpacing: null,
    _letterSpacing: null,
    _fontScale: null,
    _autoUpperCase: null,
    _wordWrap: null,
    _fixedWidth: null,
    _pendingTextChange: null,
    _fieldWidth: null,
    _multiLine: null,
    _alpha: null,
    labelX: null,
    labelY: null,
    _shadowTilemap: null,
    _outlineTilemap: null,
    _characterTilemap: null,
    cacheParentAnchor: null,
    destroy: function () {
      this._font = this._stencylFont = null;
      this.removeChildren();
      this._characterTilemap =
        this._shadowTilemap =
        this._outlineTilemap =
          null;
    },
    get_text: function () {
      return this._text;
    },
    set_text: function (a) {
      a.split("\\n").join("\n") != this._text &&
        ((this._text = a),
        (this._text = this._text.split("\\n").join("\n")),
        this._autoUpperCase && (this._text = this._text.toUpperCase()),
        (this._pendingTextChange = !0),
        this.update());
      return this._text;
    },
    updateBitmapData: function () {
      if (null != this._font) {
        var a = this._fieldWidth,
          b = [],
          c = this._font.getFontHeight(),
          d = this._alignment,
          e = this._text.split("\n"),
          f = -1;
        this._multiLine || (e = [e[0]]);
        for (var g, h; ++f < e.length; )
          if (this._fixedWidth) {
            var n = !1;
            var k = e[f].split(" ");
            if (0 < k.length)
              for (var m = 0, l = ""; !n; ) {
                h = k[m];
                var p = l + h + " ",
                  r = !1;
                if (this._wordWrap)
                  this._font.getTextWidth(
                    p,
                    this._letterSpacing,
                    this._fontScale
                  ) > this._fieldWidth
                    ? ("" == l
                        ? k.splice(0, 1)
                        : b.push(Q.substr(l, 0, l.length - 1)),
                      (l = ""),
                      this._multiLine ? k.splice(0, m) : k.splice(0, k.length),
                      (m = 0),
                      (r = !0))
                    : ((l += h + " "), ++m);
                else if (
                  this._font.getTextWidth(
                    p,
                    this._letterSpacing,
                    this._fontScale
                  ) > this._fieldWidth
                ) {
                  var q = 0;
                  for (g = h.length; q < g; )
                    (p = l + h.charAt(q)),
                      this._font.getTextWidth(
                        p,
                        this._letterSpacing,
                        this._fontScale
                      ) > this._fieldWidth
                        ? (b.push(Q.substr(l, 0, l.length - 1)),
                          (h = l = ""),
                          (m = k.length),
                          (q = g),
                          (r = !0))
                        : (l += h.charAt(q)),
                      ++q;
                } else (l += h + " "), ++m;
                m >= k.length &&
                  (r ||
                    ((n = Q.substr(l, 0, l.length - 1)),
                    (a = Math.floor(
                      Math.max(
                        a,
                        this._font.getTextWidth(
                          n,
                          this._letterSpacing,
                          this._fontScale
                        )
                      )
                    )),
                    b.push(n)),
                  (n = !0));
              }
            else b.push("");
          } else
            (a = Math.floor(
              Math.max(
                a,
                this._font.getTextWidth(
                  e[f],
                  this._letterSpacing,
                  this._fontScale
                )
              )
            )),
              b.push(e[f]);
        a = a + 2 * this._padding + (this._outline ? 2 : 0);
        e =
          Math.floor(
            2 * this._padding +
              Math.max(
                1,
                b.length * c * this._fontScale +
                  (this._shadow ? 1 : 0) +
                  (this._outline ? 2 : 0)
              )
          ) + (1 <= b.length ? this._lineSpacing * (b.length - 1) : 0);
        this.get_graphics().clear();
        1 == this._background &&
          (this.get_graphics().beginFill(this._backgroundColor, this._alpha),
          this.get_graphics().drawRect(0, 0, a, e),
          this.get_graphics().endFill());
        this.removeChildren();
        this._outline &&
          ((this._outlineTilemap = new pg(a, e, this._font.getTileset())),
          this.tint(this._outlineTilemap, this._outlineColor),
          this.addChild(this._outlineTilemap));
        this._shadow &&
          ((this._shadowTilemap = new pg(a, e, this._font.getTileset())),
          this.tint(this._shadowTilemap, this._shadowColor),
          this.addChild(this._shadowTilemap));
        this._characterTilemap = new pg(a, e, this._font.getTileset());
        this._useColor && this.tint(this._characterTilemap, this._color);
        this.addChild(this._characterTilemap);
        for (f = e = 0; f < b.length; ) {
          k = b[f];
          ++f;
          l = m = 0;
          3 == d &&
            (m = this._fixedWidth
              ? Math.floor(
                  (this._fieldWidth -
                    this._font.getTextWidth(
                      k,
                      this._letterSpacing,
                      this._fontScale
                    )) /
                    2
                )
              : Math.floor(
                  (a -
                    this._font.getTextWidth(
                      k,
                      this._letterSpacing,
                      this._fontScale
                    )) /
                    2
                ));
          2 == d &&
            (m = this._fixedWidth
              ? this._fieldWidth -
                Math.floor(
                  this._font.getTextWidth(
                    k,
                    this._letterSpacing,
                    this._fontScale
                  )
                )
              : a -
                Math.floor(
                  this._font.getTextWidth(
                    k,
                    this._letterSpacing,
                    this._fontScale
                  )
                ) -
                2 * this.get_padding());
          if (this._outline) {
            for (n = 0; 3 > n; )
              for (q = n++, g = 0; 3 > g; )
                (h = g++),
                  this._font.render(
                    this._outlineTilemap,
                    k,
                    this._alpha,
                    h + m + this._padding,
                    q +
                      e *
                        (Math.floor(c * this._fontScale) + this._lineSpacing) +
                      this._padding,
                    this._letterSpacing,
                    this._fontScale
                  );
            ++m;
            ++l;
          }
          this._shadow &&
            this._font.render(
              this._shadowTilemap,
              k,
              this._alpha,
              1 + m + this._padding,
              1 +
                l +
                e * (Math.floor(c * this._fontScale) + this._lineSpacing) +
                this._padding,
              this._letterSpacing,
              this._fontScale
            );
          this._font.render(
            this._characterTilemap,
            k,
            this._alpha,
            m + this._padding,
            l +
              e * (Math.floor(c * this._fontScale) + this._lineSpacing) +
              this._padding,
            this._letterSpacing,
            this._fontScale
          );
          ++e;
        }
        this._pendingTextChange = !1;
      }
    },
    update: function () {
      this._pendingTextChange && this.updateBitmapData();
    },
    get_background: function () {
      return this._background;
    },
    set_background: function (a) {
      this._background != a &&
        ((this._background = a), (this._pendingTextChange = !0), this.update());
      return a;
    },
    get_backgroundColor: function () {
      return this._backgroundColor;
    },
    set_backgroundColor: function (a) {
      this._backgroundColor != a &&
        ((this._backgroundColor = a),
        this._background && ((this._pendingTextChange = !0), this.update()));
      return a;
    },
    get_shadow: function () {
      return this._shadow;
    },
    set_shadow: function (a) {
      this._shadow != a &&
        ((this._shadow = a),
        (this._outline = !1),
        this.updateGlyphs(!1, this._shadow, !1),
        (this._pendingTextChange = !0),
        this.update());
      return a;
    },
    get_shadowColor: function () {
      return this._shadowColor;
    },
    set_shadowColor: function (a) {
      this._shadowColor != a &&
        ((this._shadowColor = a),
        this.updateGlyphs(!1, this._shadow, !1),
        (this._pendingTextChange = !0),
        this.update());
      return a;
    },
    get_padding: function () {
      return this._padding;
    },
    set_padding: function (a) {
      this._padding != a &&
        ((this._padding = a), (this._pendingTextChange = !0), this.update());
      return a;
    },
    get_color: function () {
      return this._color;
    },
    set_color: function (a) {
      this._color != a &&
        ((this._color = a),
        this.updateGlyphs(!0, !1, !1),
        (this._pendingTextChange = !0),
        this.update());
      return a;
    },
    get_useColor: function () {
      return this._useColor;
    },
    set_useColor: function (a) {
      this._useColor != a &&
        ((this._useColor = a),
        this.updateGlyphs(!0, !1, !1),
        (this._pendingTextChange = !0),
        this.update());
      return a;
    },
    setWidth: function (a) {
      1 > a && (a = 1);
      a != this._fieldWidth &&
        ((this._fieldWidth = a), (this._pendingTextChange = !0), this.update());
      return a;
    },
    get_alignment: function () {
      return this._alignment;
    },
    set_alignment: function (a) {
      this._alignment != a &&
        ((this._alignment = a), (this._pendingTextChange = !0), this.update());
      return a;
    },
    get_multiLine: function () {
      return this._multiLine;
    },
    set_multiLine: function (a) {
      this._multiLine != a &&
        ((this._multiLine = a), (this._pendingTextChange = !0), this.update());
      return a;
    },
    get_outline: function () {
      return this._outline;
    },
    set_outline: function (a) {
      this._outline != a &&
        ((this._outline = a),
        (this._shadow = !1),
        this.updateGlyphs(!1, !1, !0),
        (this._pendingTextChange = !0),
        this.update());
      return a;
    },
    get_outlineColor: function () {
      return this._outlineColor;
    },
    set_outlineColor: function (a) {
      this._outlineColor != a &&
        ((this._outlineColor = a),
        this.updateGlyphs(!1, !1, this._outline),
        (this._pendingTextChange = !0),
        this.update());
      return a;
    },
    get_font: function () {
      return this._font;
    },
    set_font: function (a) {
      this._font != a &&
        ((this._font = a),
        this.updateGlyphs(!0, this._shadow, this._outline),
        (this._pendingTextChange = !0),
        this.update());
      return a;
    },
    get_stencylFont: function () {
      return this._stencylFont;
    },
    set_stencylFont: function (a) {
      this._stencylFont != a &&
        ((this._stencylFont = a), this.set_font(a.font));
      return a;
    },
    get_lineSpacing: function () {
      return this._lineSpacing;
    },
    set_lineSpacing: function (a) {
      this._lineSpacing != a &&
        ((this._lineSpacing = Math.floor(Math.abs(a))),
        (this._pendingTextChange = !0),
        this.update());
      return a;
    },
    setAlpha: function (a) {
      this._alpha != a &&
        ((this._alpha = a), (this._pendingTextChange = !0), this.update());
    },
    getAlpha: function () {
      return this._alpha;
    },
    get_fontScale: function () {
      return this._fontScale;
    },
    set_fontScale: function (a) {
      var b = Math.abs(a);
      b != this._fontScale &&
        ((this._fontScale = b),
        this.updateGlyphs(!0, this._shadow, this._outline),
        (this._pendingTextChange = !0),
        this.update());
      return a;
    },
    get_letterSpacing: function () {
      return this._letterSpacing;
    },
    set_letterSpacing: function (a) {
      a = Math.floor(a);
      a != this._letterSpacing &&
        ((this._letterSpacing = a),
        (this._pendingTextChange = !0),
        this.update());
      return this._letterSpacing;
    },
    get_autoUpperCase: function () {
      return this._autoUpperCase;
    },
    set_autoUpperCase: function (a) {
      this._autoUpperCase != a &&
        (this._autoUpperCase = a) &&
        this.set_text(this._text.toUpperCase());
      return this._autoUpperCase;
    },
    get_wordWrap: function () {
      return this._wordWrap;
    },
    set_wordWrap: function (a) {
      this._wordWrap != a &&
        ((this._wordWrap = a), (this._pendingTextChange = !0), this.update());
      return this._wordWrap;
    },
    get_fixedWidth: function () {
      return this._fixedWidth;
    },
    set_fixedWidth: function (a) {
      this._fixedWidth != a &&
        ((this._fixedWidth = a), (this._pendingTextChange = !0), this.update());
      return this._fixedWidth;
    },
    set_labelX: function (a) {
      this.set_x(a * r.SCALE);
      return (this.labelX = a);
    },
    get_labelX: function () {
      return this.labelX;
    },
    set_labelY: function (a) {
      this.set_y(a * r.SCALE);
      return (this.labelY = a);
    },
    get_labelY: function () {
      return this.labelY;
    },
    updatePosition: function () {
      this.set_x(this.get_labelX() * r.SCALE - this.cacheParentAnchor.x);
      this.set_y(this.get_labelY() * r.SCALE - this.cacheParentAnchor.y);
    },
    updateScale: function () {
      this.updatePosition();
      null != this._stencylFont && this.set_font(this._stencylFont.font);
    },
    updateGlyphs: function (a, b, c) {},
    tint: function (a, b) {
      var c = new Ia();
      c.colorize(b, 1);
      a.set_filters([c.getFilter()]);
    },
    __class__: hm,
    __properties__: x(gb.prototype.__properties__, {
      set_fixedWidth: "set_fixedWidth",
      get_fixedWidth: "get_fixedWidth",
      set_wordWrap: "set_wordWrap",
      get_wordWrap: "get_wordWrap",
      set_autoUpperCase: "set_autoUpperCase",
      get_autoUpperCase: "get_autoUpperCase",
      set_letterSpacing: "set_letterSpacing",
      get_letterSpacing: "get_letterSpacing",
      set_fontScale: "set_fontScale",
      get_fontScale: "get_fontScale",
      set_lineSpacing: "set_lineSpacing",
      get_lineSpacing: "get_lineSpacing",
      set_stencylFont: "set_stencylFont",
      get_stencylFont: "get_stencylFont",
      set_font: "set_font",
      get_font: "get_font",
      set_outlineColor: "set_outlineColor",
      get_outlineColor: "get_outlineColor",
      set_outline: "set_outline",
      get_outline: "get_outline",
      set_multiLine: "set_multiLine",
      get_multiLine: "get_multiLine",
      set_alignment: "set_alignment",
      get_alignment: "get_alignment",
      set_useColor: "set_useColor",
      get_useColor: "get_useColor",
      set_color: "set_color",
      get_color: "get_color",
      set_padding: "set_padding",
      get_padding: "get_padding",
      set_shadowColor: "set_shadowColor",
      get_shadowColor: "get_shadowColor",
      set_shadow: "set_shadow",
      get_shadow: "get_shadow",
      set_backgroundColor: "set_backgroundColor",
      get_backgroundColor: "get_backgroundColor",
      set_background: "set_background",
      get_background: "get_background",
      set_text: "set_text",
      get_text: "get_text",
      set_labelY: "set_labelY",
      get_labelY: "get_labelY",
      set_labelX: "set_labelX",
      get_labelX: "get_labelX",
    }),
  });
  var fp = function () {};
  p["com.stencyl.graphics.fonts.TextAlign"] = fp;
  fp.__name__ = ["com", "stencyl", "graphics", "fonts", "TextAlign"];
  var id = function () {};
  p["com.stencyl.graphics.shaders.BasicShader"] = id;
  id.__name__ = ["com", "stencyl", "graphics", "shaders", "BasicShader"];
  id.prototype = {
    multipassParent: null,
    multipassTarget: null,
    model: null,
    setProperty: function (a, b) {
      this.model.setUniform(a, b);
    },
    getProperty: function (a) {
      return this.model.getUniform(a);
    },
    tweenProperty: function (a, b, c, d) {
      null == c && (c = 1);
      this.model.tweenUniform(a, b, c, d);
    },
    enable: function () {
      r.engine.addShader(this.model);
    },
    disable: function () {
      r.engine.clearShaders();
    },
    setTimeScale: function (a) {
      this.model.timeScale = a;
    },
    combine: function (a) {
      this.multipassTarget = a;
      a.multipassParent = this;
      return a;
    },
    __class__: id,
  };
  var gp = function (a, b, c, d, e, f, g, h, n) {
    null == n && (n = 0.0075);
    null == h && (h = 0.009);
    null == g && (g = 0.012);
    null == f && (f = 0.6);
    null == e && (e = 0.4);
    null == d && (d = 3);
    null == c && (c = 4);
    null == b && (b = 0.004);
    null == a && (a = 0.25);
    this.model = new rd(
      this,
      "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform vec2 uResolution;\n\t\t\tuniform sampler2D uImage0;\n\t\t\t\n\t\t\tuniform float currPixelWeight;\n\t\t\tuniform float neighborPixelWeight;\n\t\t\tuniform float lowThreshold;\n\t\t\tuniform float mediumThreshold;\n\t\t\tuniform float lowMultiplier;\n\t\t\tuniform float mediumMultiplier;\n\t\t\tuniform float highMultiplier;\n\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec4 sum = vec4(0.0);\n\t\t\t\tvec2 q1 = vTexCoord;\n\t\t\t\tvec4 oricol = texture2D(uImage0, vec2(q1.x, q1.y));\n\t\t\t\tvec3 col;\n\t\t\t\t\n\t\t\t\tfor(int i = -3; i < 3; i++) \n\t\t\t\t{\n\t\t\t\t\tfor(int j = -3; j < 3; j++) \n\t\t\t\t\t{\n\t\t\t\t\t\tsum += texture2D(uImage0, vec2(j, i) * neighborPixelWeight + vec2(q1.x, q1.y)) * currPixelWeight;\n\t\t\t\t\t}\n\t\t\t   \t}\n\t\t\t \n\t\t\t  \tif(oricol.r < lowThreshold) \n\t\t\t  \t{\n\t\t\t\t\tgl_FragColor = sum * sum * lowMultiplier + oricol;\n\t\t\t  \t} \n\t\t\t  \n\t\t\t  \telse \n\t\t\t  \t{\n\t\t\t\t\tif(oricol.r < mediumThreshold) \n\t\t\t\t\t{\n\t\t\t\t\t\tgl_FragColor = sum * sum * mediumMultiplier + oricol;\n\t\t\t\t   \t} \n\t\t\t\t   \t\n\t\t\t\t   \telse \n\t\t\t\t   \t{\n\t\t\t\t\t\tgl_FragColor = sum * sum * highMultiplier + oricol;\n\t\t\t\t   \t}\n\t\t\t   }\n\t\t\t}\n\t\t",
      !0
    );
    this.setProperty("currPixelWeight", a);
    this.setProperty("neighborPixelWeight", b);
    this.setProperty("sampleX", c);
    this.setProperty("sampleY", d);
    this.setProperty("lowThreshold", e);
    this.setProperty("mediumThreshold", f);
    this.setProperty("lowMultiplier", g);
    this.setProperty("mediumMultiplier", h);
    this.setProperty("highMultiplier", n);
  };
  p["com.stencyl.graphics.shaders.BloomShader"] = gp;
  gp.__name__ = ["com", "stencyl", "graphics", "shaders", "BloomShader"];
  gp.__super__ = id;
  gp.prototype = x(id.prototype, { __class__: gp });
  var hp = function (a, b, c) {
    null == c && (c = 1);
    null == b && (b = 1);
    null == a && (a = 2);
    this.model = new rd(
      this,
      "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\t//in attributes from our vertex shader\n\t\t\tvarying vec2 vTexCoord;\n\t\t\t\n\t\t\t//declare uniforms\n\t\t\tuniform sampler2D uImage0;\n\t\t\tuniform vec2 uResolution;\n\t\t\t\n\t\t\tuniform float radius;\n\t\t\tuniform float dirx;\n\t\t\tuniform float diry;\n\t\t\t\n\t\t\tvoid main()\n\t\t\t{\n\t\t\t\t//this will be our RGBA sum\n\t\t\t\tvec4 sum = vec4(0.0);\n\t\t\t\n\t\t\t\t//our original texcoord for this fragment\n\t\t\t\tvec2 tc = vTexCoord;\n\t\t\t\n\t\t\t\t//the amount to blur, i.e. how far off center to sample from\n\t\t\t\t//1.0 -> blur by one pixel\n\t\t\t\t//2.0 -> blur by two pixels, etc.\n\t\t\t\tfloat blur = radius / uResolution.x;\n\t\t\t\n\t\t\t\t//the direction of our blur\n\t\t\t\t//(1.0, 0.0) -> x-axis blur\n\t\t\t\t//(0.0, 1.0) -> y-axis blur\n\t\t\t\tfloat hstep = dirx;\n\t\t\t\tfloat vstep = diry;\n\t\t\t\n\t\t\t\t//apply blurring, using a 9-tap filter with predefined gaussian weights\n\t\t\t\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x - 4.0*blur*hstep, tc.y - 4.0*blur*vstep)) * 0.0162162162;\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x - 3.0*blur*hstep, tc.y - 3.0*blur*vstep)) * 0.0540540541;\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x - 2.0*blur*hstep, tc.y - 2.0*blur*vstep)) * 0.1216216216;\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x - 1.0*blur*hstep, tc.y - 1.0*blur*vstep)) * 0.1945945946;\n\t\t\t\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x, tc.y)) * 0.2270270270;\n\t\t\t\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x + 1.0*blur*hstep, tc.y + 1.0*blur*vstep)) * 0.1945945946;\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x + 2.0*blur*hstep, tc.y + 2.0*blur*vstep)) * 0.1216216216;\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x + 3.0*blur*hstep, tc.y + 3.0*blur*vstep)) * 0.0540540541;\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x + 4.0*blur*hstep, tc.y + 4.0*blur*vstep)) * 0.0162162162;\n\t\t\t\n\t\t\t\t//discard alpha for our simple demo, multiply by vertex color and return\n\t\t\t\tgl_FragColor = vec4(sum.rgb, 1.0);\n\t\t\t}\n\t\t",
      !0
    );
    this.setRadius(a);
    this.setDirectionX(b);
    this.setDirectionY(c);
  };
  p["com.stencyl.graphics.shaders.BlurShader"] = hp;
  hp.__name__ = ["com", "stencyl", "graphics", "shaders", "BlurShader"];
  hp.__super__ = id;
  hp.prototype = x(id.prototype, {
    setRadius: function (a) {
      this.setProperty("radius", a);
    },
    setDirectionX: function (a) {
      this.setProperty("dirx", a);
    },
    setDirectionY: function (a) {
      this.setProperty("diry", a);
    },
    __class__: hp,
  });
  var vi = function (a, b, c) {
    null == c && (c = 1);
    null == b && (b = 1);
    null == a && (a = 1);
    this.model = new rd(
      this,
      "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform sampler2D uImage0;\n\t\t\tuniform float contrast;\n\t\t\tuniform float brightness;\n\t\t\tuniform float saturation;\n\n\t\t\tvec3 _mix(vec3 a, vec3 b, float amount) \n\t\t\t{ \n\t\t\t\treturn vec3(a.x * (1.0 - amount) + b.x * amount, a.y * (1.0 - amount) + b.y * amount, a.z * (1.0 - amount) + b.z * amount); \n\t\t\t}\n\n\t\t\tvoid main() \n\t\t\t{\n\t\t\t\tvec3 color = texture2D(uImage0, vTexCoord).rgb;\n\t\t\t\tconst vec3 luminanceCoefficient = vec3(0.2125, 0.7154, 0.0721);\n\t\t\t\tvec3 avgLuminance = vec3(0.5, 0.5, 0.5);\n\t\t\n\t\t\t\tvec3 brtColor = vec3(color.x * brightness, color.y * brightness, color.z * brightness);\n\t\t\t\tvec3 intensity = vec3(dot(brtColor, luminanceCoefficient));\n\t\t\t\tvec3 satColor = _mix(intensity, brtColor, saturation);\n\t\t\t\tvec3 conColor = _mix(avgLuminance, satColor, contrast);\n\t\t\n\t\t\t\tgl_FragColor = vec4(conColor, 1);\n\t\t\t}\n\t\t",
      !0
    );
    this.setContrast(a);
    this.setBrightness(b);
    this.setSaturation(c);
  };
  p["com.stencyl.graphics.shaders.CSBShader"] = vi;
  vi.__name__ = ["com", "stencyl", "graphics", "shaders", "CSBShader"];
  vi.create = function (a, b) {
    null == b && (b = 1);
    null == a && (a = "contrast");
    return "contrast" == a
      ? new vi(b, 1, 1)
      : "saturation" == a
      ? new vi(1, 1, b)
      : new vi(1, b, 1);
  };
  vi.__super__ = id;
  vi.prototype = x(id.prototype, {
    setContrast: function (a) {
      this.setProperty("contrast", a);
    },
    setBrightness: function (a) {
      this.setProperty("brightness", a);
    },
    setSaturation: function (a) {
      this.setProperty("saturation", a);
    },
    __class__: vi,
  });
  var ip = function (a) {
    this.model = new rd(this, "assets/data/" + a);
  };
  p["com.stencyl.graphics.shaders.ExternalShader"] = ip;
  ip.__name__ = ["com", "stencyl", "graphics", "shaders", "ExternalShader"];
  ip.__super__ = id;
  ip.prototype = x(id.prototype, { __class__: ip });
  var jp = function (a, b, c, d, e) {
    null == e && (e = 1);
    null == d && (d = 1.6);
    null == c && (c = 0.6);
    null == b && (b = !1);
    null == a && (a = 0.05);
    this.model = new rd(
      this,
      "\n\t\t\t/*\n\t\t\t\tFilm Grain post-process shader v1.1\n\t\t\t\tMartins Upitis (martinsh) devlog-martinsh.blogspot.com\n\t\t\t*/\n\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tuniform sampler2D uImage0; //rendered scene sampler\n\t\t\tuniform vec2 uResolution; //scene sampler resolution\n\t\t\tuniform float uTime;\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\t\n\t\t\tconst float permTexUnit = 1.0/256.0;        // Perm texture texel-size\n\t\t\tconst float permTexUnitHalf = 0.5/256.0;    // Half perm texture texel-size\n\t\t\t\n\t\t\tfloat width = uResolution.x;\n\t\t\tfloat height = uResolution.y;\n\t\t\t\n\t\t\tuniform float grainamount; //grain amount\n\t\t\tuniform float colored; //colored noise?\n\t\t\tuniform float coloramount;\n\t\t\tuniform float grainsize; //grain particle size (1.5 - 2.5)\n\t\t\tuniform float lumamount; //\n\t\t\t\n\t\t\t//a random texture generator, but you can also use a pre-computed perturbation texture\n\t\t\tvec4 rnm(in vec2 tc)\n\t\t\t{\n\t\t\t\tfloat noise =  sin(dot(tc + vec2(uTime,uTime),vec2(12.9898,78.233))) * 43758.5453;\n\t\t\t\n\t\t\t\tfloat noiseR =  fract(noise)*2.0-1.0;\n\t\t\t\tfloat noiseG =  fract(noise*1.2154)*2.0-1.0;\n\t\t\t\tfloat noiseB =  fract(noise*1.3453)*2.0-1.0;\n\t\t\t\tfloat noiseA =  fract(noise*1.3647)*2.0-1.0;\n\t\t\t\n\t\t\t\treturn vec4(noiseR,noiseG,noiseB,noiseA);\n\t\t\t}\n\t\t\t\n\t\t\tfloat fade(in float t) {\n\t\t\t\treturn t*t*t*(t*(t*6.0-15.0)+10.0);\n\t\t\t}\n\t\t\t\n\t\t\tfloat pnoise3D(in vec3 p)\n\t\t\t{\n\t\t\t\tvec3 pi = permTexUnit*floor(p)+permTexUnitHalf; // Integer part, scaled so +1 moves permTexUnit texel\n\t\t\t\t// and offset 1/2 texel to sample texel centers\n\t\t\t\tvec3 pf = fract(p);     // Fractional part for interpolation\n\t\t\t\n\t\t\t\t// Noise contributions from (x=0, y=0), z=0 and z=1\n\t\t\t\tfloat perm00 = rnm(pi.xy).a ;\n\t\t\t\tvec3  grad000 = rnm(vec2(perm00, pi.z)).rgb * 4.0 - 1.0;\n\t\t\t\tfloat n000 = dot(grad000, pf);\n\t\t\t\tvec3  grad001 = rnm(vec2(perm00, pi.z + permTexUnit)).rgb * 4.0 - 1.0;\n\t\t\t\tfloat n001 = dot(grad001, pf - vec3(0.0, 0.0, 1.0));\n\t\t\t\n\t\t\t\t// Noise contributions from (x=0, y=1), z=0 and z=1\n\t\t\t\tfloat perm01 = rnm(pi.xy + vec2(0.0, permTexUnit)).a ;\n\t\t\t\tvec3  grad010 = rnm(vec2(perm01, pi.z)).rgb * 4.0 - 1.0;\n\t\t\t\tfloat n010 = dot(grad010, pf - vec3(0.0, 1.0, 0.0));\n\t\t\t\tvec3  grad011 = rnm(vec2(perm01, pi.z + permTexUnit)).rgb * 4.0 - 1.0;\n\t\t\t\tfloat n011 = dot(grad011, pf - vec3(0.0, 1.0, 1.0));\n\t\t\t\n\t\t\t\t// Noise contributions from (x=1, y=0), z=0 and z=1\n\t\t\t\tfloat perm10 = rnm(pi.xy + vec2(permTexUnit, 0.0)).a ;\n\t\t\t\tvec3  grad100 = rnm(vec2(perm10, pi.z)).rgb * 4.0 - 1.0;\n\t\t\t\tfloat n100 = dot(grad100, pf - vec3(1.0, 0.0, 0.0));\n\t\t\t\tvec3  grad101 = rnm(vec2(perm10, pi.z + permTexUnit)).rgb * 4.0 - 1.0;\n\t\t\t\tfloat n101 = dot(grad101, pf - vec3(1.0, 0.0, 1.0));\n\t\t\t\n\t\t\t\t// Noise contributions from (x=1, y=1), z=0 and z=1\n\t\t\t\tfloat perm11 = rnm(pi.xy + vec2(permTexUnit, permTexUnit)).a ;\n\t\t\t\tvec3  grad110 = rnm(vec2(perm11, pi.z)).rgb * 4.0 - 1.0;\n\t\t\t\tfloat n110 = dot(grad110, pf - vec3(1.0, 1.0, 0.0));\n\t\t\t\tvec3  grad111 = rnm(vec2(perm11, pi.z + permTexUnit)).rgb * 4.0 - 1.0;\n\t\t\t\tfloat n111 = dot(grad111, pf - vec3(1.0, 1.0, 1.0));\n\t\t\t\n\t\t\t\t// Blend contributions along x\n\t\t\t\tvec4 n_x = mix(vec4(n000, n001, n010, n011), vec4(n100, n101, n110, n111), fade(pf.x));\n\t\t\t\n\t\t\t\t// Blend contributions along y\n\t\t\t\tvec2 n_xy = mix(n_x.xy, n_x.zw, fade(pf.y));\n\t\t\t\n\t\t\t\t// Blend contributions along z\n\t\t\t\tfloat n_xyz = mix(n_xy.x, n_xy.y, fade(pf.z));\n\t\t\t\n\t\t\t\t// We're done, return the final noise value.\n\t\t\t\treturn n_xyz;\n\t\t\t}\n\t\t\t\n\t\t\t//2d coordinate orientation thing\n\t\t\tvec2 coordRot(in vec2 tc, in float angle)\n\t\t\t{\n\t\t\t\tfloat aspect = width/height;\n\t\t\t\tfloat rotX = ((tc.x*2.0-1.0)*aspect*cos(angle)) - ((tc.y*2.0-1.0)*sin(angle));\n\t\t\t\tfloat rotY = ((tc.y*2.0-1.0)*cos(angle)) + ((tc.x*2.0-1.0)*aspect*sin(angle));\n\t\t\t\trotX = ((rotX/aspect)*0.5+0.5);\n\t\t\t\trotY = rotY*0.5+0.5;\n\t\t\t\treturn vec2(rotX,rotY);\n\t\t\t}\n\t\t\t\n\t\t\tvoid main()\n\t\t\t{\n\t\t\t\tvec2 texCoord = vTexCoord.st;\n\t\t\t\n\t\t\t\tvec3 rotOffset = vec3(1.425,3.892,5.835); //rotation offset values\n\t\t\t\tvec2 rotCoordsR = coordRot(texCoord, uTime + rotOffset.x);\n\t\t\t\tvec3 noise = vec3(pnoise3D(vec3(rotCoordsR*vec2(width/grainsize,height/grainsize),0.0)));\n\t\t\t\n\t\t\t\tif (colored == 1.0)\n\t\t\t\t{\n\t\t\t\t\tvec2 rotCoordsG = coordRot(texCoord, uTime + rotOffset.y);\n\t\t\t\t\tvec2 rotCoordsB = coordRot(texCoord, uTime + rotOffset.z);\n\t\t\t\t\tnoise.g = mix(noise.r,pnoise3D(vec3(rotCoordsG*vec2(width/grainsize,height/grainsize),1.0)),coloramount);\n\t\t\t\t\tnoise.b = mix(noise.r,pnoise3D(vec3(rotCoordsB*vec2(width/grainsize,height/grainsize),2.0)),coloramount);\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvec3 col = texture2D(uImage0, texCoord).rgb;\n\t\t\t\n\t\t\t\t//noisiness response curve based on scene luminance\n\t\t\t\tvec3 lumcoeff = vec3(0.299,0.587,0.114);\n\t\t\t\tfloat luminance = mix(0.0,dot(col, lumcoeff),lumamount);\n\t\t\t\tfloat lum = smoothstep(0.2,0.0,luminance);\n\t\t\t\tlum += luminance;\n\t\t\t\n\t\t\t\n\t\t\t\tnoise = mix(noise,vec3(0.0),pow(lum,4.0));\n\t\t\t\tcol = col+noise*grainamount;\n\t\t\t\n\t\t\t\tgl_FragColor =  vec4(col,1.0);\n\t\t\t}\n\t\t",
      !0
    );
    this.setGrainAmount(a);
    this.setColorAmount(c);
    this.setGrainSize(d);
    this.setLuminance(e);
    b ? this.enableColor() : this.disableColor();
  };
  p["com.stencyl.graphics.shaders.GrainShader"] = jp;
  jp.__name__ = ["com", "stencyl", "graphics", "shaders", "GrainShader"];
  jp.__super__ = id;
  jp.prototype = x(id.prototype, {
    enableColor: function () {
      this.setProperty("colored", 1);
    },
    disableColor: function () {
      this.setProperty("colored", 0);
    },
    setGrainAmount: function (a) {
      this.setProperty("grainamount", a);
    },
    setColorAmount: function (a) {
      this.setProperty("coloramount", a);
    },
    setGrainSize: function (a) {
      this.setProperty("grainsize", a);
    },
    setLuminance: function (a) {
      this.setProperty("lumamount", a);
    },
    __class__: jp,
  });
  var kp = function () {
    this.model = new rd(
      this,
      "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform sampler2D uImage0;\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec4 color = texture2D(uImage0, vTexCoord);\n\t\t\t\tfloat gray = dot(color.rgb, vec3(0.299, 0.587, 0.114));\n\t\t\t\tgl_FragColor = vec4(gray, gray, gray, 1.0);\n\t\t\t}\n\t\t",
      !0
    );
  };
  p["com.stencyl.graphics.shaders.GrayscaleShader"] = kp;
  kp.__name__ = ["com", "stencyl", "graphics", "shaders", "GrayscaleShader"];
  kp.__super__ = id;
  kp.prototype = x(id.prototype, { __class__: kp });
  var lp = function (a, b) {
    null == b && (b = !0);
    null == a && (a = 0);
    b && (a *= Math.PI / 180);
    this.model = new rd(
      this,
      "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform sampler2D uImage0;\n\t\t\t\n\t\t\tuniform float hue;\n\t\t\tconst mat3 rgb2yiq = mat3(0.299, 0.587, 0.114, 0.595716, -0.274453, -0.321263, 0.211456, -0.522591, 0.311135);\n\t\t\tconst mat3 yiq2rgb = mat3(1.0, 0.9563, 0.6210, 1.0, -0.2721, -0.6474, 1.0, -1.1070, 1.7046);\n\n\t\t\tvoid main() \n\t\t\t{\n\t\t\t\tvec3 color = texture2D(uImage0, vTexCoord).rgb;\n\t\t\t\tvec3 yColor = rgb2yiq * color; \n\n\t\t\t\tfloat originalHue = atan(yColor.b, yColor.g);\n\t\t\t\tfloat finalHue = originalHue + hue;\n\t\t\t\tfloat chroma = sqrt(yColor.b * yColor.b + yColor.g * yColor.g);\n\t\t\t\t\n\t\t\t\tvec3 yFinalColor = vec3(yColor.r, chroma * cos(finalHue), chroma * sin(finalHue));\n\t\t\t\tgl_FragColor = vec4(yiq2rgb * yFinalColor, 1.0);\n\t\t\t}\n\t\t",
      !0
    );
    this.setHue(a, !1);
  };
  p["com.stencyl.graphics.shaders.HueShader"] = lp;
  lp.__name__ = ["com", "stencyl", "graphics", "shaders", "HueShader"];
  lp.__super__ = id;
  lp.prototype = x(id.prototype, {
    setHue: function (a, b) {
      null == b && (b = !0);
      b && (a *= Math.PI / 180);
      this.setProperty("hue", a);
    },
    __class__: lp,
  });
  var mp = function (a) {
    this.model = new rd(this, a, !0);
  };
  p["com.stencyl.graphics.shaders.InlineShader"] = mp;
  mp.__name__ = ["com", "stencyl", "graphics", "shaders", "InlineShader"];
  mp.__super__ = id;
  mp.prototype = x(id.prototype, { __class__: mp });
  var np = function () {
    this.model = new rd(
      this,
      "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform sampler2D uImage0;\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec4 color = texture2D(uImage0, vTexCoord);\n\t\t\t\tgl_FragColor = vec4(vec3(1.0, 1.0, 1.0) - color.rgb, color.a);\n\t\t\t}\n\t\t",
      !0
    );
  };
  p["com.stencyl.graphics.shaders.InvertShader"] = np;
  np.__name__ = ["com", "stencyl", "graphics", "shaders", "InvertShader"];
  np.__super__ = id;
  np.prototype = x(id.prototype, { __class__: np });
  var rd = function (a, b, c) {
    null == c && (c = !1);
    this.timeScale = 1;
    this.time = 0;
    hb.call(this);
    this.basicShader = a;
    this.gl = r.stage.__renderer.gl;
    this.uniforms = new la();
    this.changedUniforms = [];
    this.uniformTweens = new la();
    this.rebuild();
    this.gl.checkFramebufferStatus(36160);
    this.buffer = this.gl.createBuffer();
    this.gl.bindBuffer(34962, this.buffer);
    a = [
      -1, -1, 0, 0, 1, -1, 1, 0, -1, 1, 0, 1, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0,
      1,
    ];
    a = null != a ? new vc(a) : null;
    yb.bufferData(this.gl, 34962, a, 35044);
    this.gl.bindBuffer(34962, null);
    c
      ? (this.fullScreenShader = new nk([
          {
            src: "\n#ifdef GL_ES\n\tprecision mediump float;\n#endif\n\nattribute vec4 aVertex;\n\nattribute vec2 aTexCoord;\nvarying vec2 vTexCoord;\n\nvoid main() {\n\tvTexCoord = aTexCoord;\n\tgl_Position = vec4(aVertex.x, aVertex.y, 0.0, 1.0);\n}",
            fragment: !1,
          },
          { src: b, fragment: !0 },
        ]))
      : 6 < b.length && ".glslx" == Q.substr(b, -6, null)
      ? ((c = new im(ta.parse(oa.getText(b)).firstElement())),
        (b = c.hasNode.resolve("vertex")
          ? c.node.resolve("vertex").get_innerData()
          : "\n#ifdef GL_ES\n\tprecision mediump float;\n#endif\n\nattribute vec4 aVertex;\n\nattribute vec2 aTexCoord;\nvarying vec2 vTexCoord;\n\nvoid main() {\n\tvTexCoord = aTexCoord;\n\tgl_Position = vec4(aVertex.x, aVertex.y, 0.0, 1.0);\n}"),
        (c = c.node.resolve("fragment").get_innerData()),
        (this.fullScreenShader = new nk([
          { src: b, fragment: !1 },
          { src: c, fragment: !0 },
        ])))
      : ((b = oa.getText(b)),
        (this.fullScreenShader = new nk([
          {
            src: "\n#ifdef GL_ES\n\tprecision mediump float;\n#endif\n\nattribute vec4 aVertex;\n\nattribute vec2 aTexCoord;\nvarying vec2 vTexCoord;\n\nvoid main() {\n\tvTexCoord = aTexCoord;\n\tgl_Position = vec4(aVertex.x, aVertex.y, 0.0, 1.0);\n}",
            fragment: !1,
          },
          { src: b, fragment: !0 },
        ])));
    this.imageUniform = q.context.getUniformLocation(
      this.fullScreenShader.program,
      "uImage0"
    );
    this.timeUniform = q.context.getUniformLocation(
      this.fullScreenShader.program,
      "uTime"
    );
    this.resolutionUniform = q.context.getUniformLocation(
      this.fullScreenShader.program,
      "uResolution"
    );
    this.resolutionUsUniform = q.context.getUniformLocation(
      this.fullScreenShader.program,
      "uResolutionUs"
    );
    this.vertexSlot = q.context.getAttribLocation(
      this.fullScreenShader.program,
      "aVertex"
    );
    this.texCoordSlot = q.context.getAttribLocation(
      this.fullScreenShader.program,
      "aTexCoord"
    );
  };
  p["com.stencyl.graphics.shaders.PostProcess"] = rd;
  rd.__name__ = ["com", "stencyl", "graphics", "shaders", "PostProcess"];
  rd.__properties__ = {
    get_vertices: "get_vertices",
    get_isSupported: "get_isSupported",
  };
  rd.get_isSupported = function () {
    if (!window.WebGLRenderingContext) return !1;
    if (null != q.context) return !0;
    var a = window.document.createElement("canvas"),
      b = a.getContext("webgl");
    null == b && (b = a.getContext("experimental-webgl"));
    return null != b;
  };
  rd.get_vertices = function () {
    return [
      -1, -1, 0, 0, 1, -1, 1, 0, -1, 1, 0, 1, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0,
      1,
    ];
  };
  rd.__super__ = hb;
  rd.prototype = x(hb.prototype, {
    __added: null,
    __initialized: null,
    gl: null,
    __enterFrame: function (a) {
      this.__renderDirty ||
        ((this.__renderDirty = !0), this.__setParentRenderDirty());
    },
    __renderGL: function (a) {
      if (null != this.stage && this.__renderable) {
        var b = r.stage,
          c = b.context3D;
        a.__setBlendMode(null);
        null == this.basicShader.multipassTarget
          ? c.setRenderToBackBuffer()
          : c.setRenderToTexture(
              this.basicShader.multipassTarget.model.texture
            );
        c.clear();
        this.time += r.elapsedTime * this.timeScale;
        q.context.useProgram(this.fullScreenShader.program);
        this.gl.enableVertexAttribArray(this.vertexSlot);
        this.gl.enableVertexAttribArray(this.texCoordSlot);
        this.gl.activeTexture(33984);
        this.gl.bindTexture(3553, this.texture.__getTexture());
        "opengl" == b.window.context.type && this.gl.enable(3553);
        this.gl.bindBuffer(34962, this.buffer);
        this.gl.vertexAttribPointer(this.vertexSlot, 2, 5126, !1, 16, 0);
        this.gl.vertexAttribPointer(this.texCoordSlot, 2, 5126, !1, 16, 8);
        this.gl.uniform1i(this.imageUniform, 0);
        this.gl.uniform1f(this.timeUniform, this.time);
        this.gl.uniform2f(
          this.resolutionUniform,
          b.stageWidth | 0,
          b.stageHeight | 0
        );
        this.gl.uniform2f(
          this.resolutionUsUniform,
          (b.stageWidth / (r.SCALE * r.screenScaleX)) | 0,
          (b.stageHeight / (r.SCALE * r.screenScaleY)) | 0
        );
        for (a = this.changedUniforms.length; 0 < a--; ) {
          var d = this.changedUniforms.pop();
          if (d.value instanceof Array && null == d.value.__enum__) {
            var e = this.gl,
              f = d.id;
            d = d.value;
            d = null != d ? new vc(d) : null;
            e.uniform1fv(f, d);
          } else this.gl.uniform1f(d.id, d.value);
        }
        this.gl.drawArrays(4, 0, 6);
        this.gl.bindBuffer(34962, null);
        "opengl" == b.window.context.type && this.gl.disable(3553);
        this.gl.bindTexture(3553, null);
        this.gl.disableVertexAttribArray(this.vertexSlot);
        this.gl.disableVertexAttribArray(this.texCoordSlot);
        c.__contextState.program = null;
        c.__flushGLProgram();
        c.__contextState.__currentGLElementArrayBuffer = null;
      }
    },
    __renderGLMask: function (a) {},
    setUniform: function (a, b) {
      var c = this.uniforms;
      (null != t[a] ? c.existsReserved(a) : c.h.hasOwnProperty(a))
        ? ((c = this.uniforms),
          (a = null != t[a] ? c.getReserved(a) : c.h[a]),
          (a.value = b),
          this.changedUniforms.push(a))
        : ((c = q.context.getUniformLocation(this.fullScreenShader.program, a)),
          c != rd.UNIFORM_NOT_FOUND &&
            ((b = { id: c, value: b }),
            (c = this.uniforms),
            null != t[a] ? c.setReserved(a, b) : (c.h[a] = b),
            this.changedUniforms.push(b)));
    },
    getUniform: function (a) {
      var b = this.uniforms;
      return (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        ? ((b = this.uniforms),
          (null != t[a] ? b.getReserved(a) : b.h[a]).value)
        : -1;
    },
    tweenUniform: function (a, b, c, d) {
      null == c && (c = 1);
      var e = this,
        f = this.uniforms;
      if (null != t[a] ? f.existsReserved(a) : f.h.hasOwnProperty(a)) {
        f = this.uniforms;
        var g = null != t[a] ? f.getReserved(a) : f.h[a];
        f = this.uniformTweens;
        var h = null != t[a] ? f.getReserved(a) : f.h[a];
        null == h &&
          ((h = new Ge()),
          h.doOnUpdate(function () {
            g.value = h.value;
            e.changedUniforms.push(g);
          }),
          (f = this.uniformTweens),
          null != t[a] ? f.setReserved(a, h) : (f.h[a] = h));
        h.tween(g.value, b, d, (1e3 * c) | 0);
      }
    },
    rebuild: function () {
      null != this.texture && this.texture.dispose();
      this.texture = r.stage.context3D.createRectangleTexture(
        Va.windowWidth | 0,
        Va.windowHeight | 0,
        1,
        !0
      );
      this.texture.__context.__bindGLTexture2D(this.texture.__textureID);
      this.texture.__setSamplerState(new Oh());
      yb.texImage2D(
        this.gl,
        this.texture.__textureTarget,
        0,
        this.texture.__internalFormat,
        this.texture.__width,
        this.texture.__height,
        0,
        this.gl.RGB,
        this.gl.UNSIGNED_BYTE,
        null
      );
      this.texture.__context.__bindGLTexture2D(null);
    },
    createTexture: function (a, b) {
      this.texture = r.stage.context3D.createRectangleTexture(a, b, 1, !0);
      this.texture.__context.__bindGLTexture2D(this.texture.__textureID);
      this.texture.__setSamplerState(new Oh());
      yb.texImage2D(
        this.gl,
        this.texture.__textureTarget,
        0,
        this.texture.__internalFormat,
        this.texture.__width,
        this.texture.__height,
        0,
        this.gl.RGB,
        this.gl.UNSIGNED_BYTE,
        null
      );
      this.texture.__context.__bindGLTexture2D(null);
    },
    capture: function () {
      r.stage.context3D.setRenderToTexture(this.texture);
      var a = this.texture.__getGLFramebuffer(!1, 0, 0);
      this.gl.bindFramebuffer(36160, a);
      this.gl.clear(16640);
    },
    texture: null,
    fullScreenShader: null,
    buffer: null,
    basicShader: null,
    time: null,
    timeScale: null,
    vertexSlot: null,
    texCoordSlot: null,
    imageUniform: null,
    resolutionUniform: null,
    resolutionUsUniform: null,
    timeUniform: null,
    uniforms: null,
    changedUniforms: null,
    uniformTweens: null,
    __class__: rd,
  });
  var op = function (a) {
    null == a && (a = 1);
    this.model = new rd(
      this,
      "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform vec2 uResolution;\n\t\t\tuniform sampler2D uImage0;\n\t\t\t\n\t\t\tuniform float scale;\n\t\t\t\n\t\t\tvoid main()\n\t\t\t{\n\t\t\t\tif (mod(floor(vTexCoord.y * uResolution.y / scale), 2.0) == 0.0)\n\t\t\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t\t\t\telse\n\t\t\t\t\tgl_FragColor = texture2D(uImage0, vTexCoord);\n\t\t\t}\n\t\t",
      !0
    );
    this.setScale(a);
  };
  p["com.stencyl.graphics.shaders.ScanlineShader"] = op;
  op.__name__ = ["com", "stencyl", "graphics", "shaders", "ScanlineShader"];
  op.__super__ = id;
  op.prototype = x(id.prototype, {
    setScale: function (a) {
      this.setProperty("scale", a);
    },
    __class__: op,
  });
  var pp = function () {
    this.model = new rd(
      this,
      "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform sampler2D uImage0;\n\t\t\t\n\t\t\tvoid main(void)\n\t\t\t{\n\t\t\t\tvec4 color = texture2D(uImage0, vTexCoord);\n\t\t\t\tgl_FragColor.r = dot(color, vec4(0.393,0.769,0.189,0));\n\t\t\t\tgl_FragColor.g = dot(color, vec4(0.349,0.686,0.168,0));\n\t\t\t\tgl_FragColor.b = dot(color, vec4(0.272,0.534,0.131,0));\n\t\t\t\tgl_FragColor.a = color.a;\n\t\t\t}\n\t\t",
      !0
    );
  };
  p["com.stencyl.graphics.shaders.SepiaShader"] = pp;
  pp.__name__ = ["com", "stencyl", "graphics", "shaders", "SepiaShader"];
  pp.__super__ = id;
  pp.prototype = x(id.prototype, { __class__: pp });
  var nk = function (a) {
    this.program = q.context.createProgram();
    for (var b = 0; b < a.length; ) {
      var c = a[b];
      ++b;
      c = this.compile(c.src, c.fragment ? 35632 : 35633);
      if (null == c) return;
      q.context.attachShader(this.program, c);
      q.context.deleteShader(c);
    }
    q.context.linkProgram(this.program);
    q.context.getProgramParameter(this.program, 35714);
  };
  p["com.stencyl.graphics.shaders.Shader"] = nk;
  nk.__name__ = ["com", "stencyl", "graphics", "shaders", "Shader"];
  nk.prototype = {
    compile: function (a, b) {
      b = q.context.createShader(b);
      q.context.shaderSource(b, a);
      q.context.compileShader(b);
      return 0 == q.context.getShaderParameter(b, 35713) ? null : b;
    },
    attribute: function (a) {
      return q.context.getAttribLocation(this.program, a);
    },
    uniform: function (a) {
      return q.context.getUniformLocation(this.program, a);
    },
    bind: function () {
      q.context.useProgram(this.program);
    },
    program: null,
    __class__: nk,
  };
  var qp = function (a) {
    null == a && (a = 2);
    this.model = new rd(
      this,
      "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform sampler2D uImage0;\n\t\t\tuniform vec2 uResolution;\n\t\t\t\n\t\t\tuniform float amount;\n\t\t\t\n\t\t\tvoid main()\n\t\t\t{\n\t\t\t\t//this will be our RGBA sum\n\t\t\t\tvec4 sum = vec4(0.0);\n\t\t\t\t\n\t\t\t\t//our original texcoord for this fragment\n\t\t\t\tvec2 tc = vTexCoord;\n\t\t\t\t\n\t\t\t\tfloat reach = 1.0 / uResolution.x;\n\n\t\t\t\t//current pixel\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x, tc.y));\n\t\t\t\t\n\t\t\t\t//sharpen\n\t\t\t\tsum += (texture2D(uImage0, vec2(tc.x, tc.y)) - texture2D(uImage0, vec2(tc.x + 1.0 * reach, tc.y))) * amount;\n\t\t\t\tsum += (texture2D(uImage0, vec2(tc.x, tc.y)) - texture2D(uImage0, vec2(tc.x - 1.0 * reach, tc.y))) * amount;\n\t\t\t\tsum += (texture2D(uImage0, vec2(tc.x, tc.y)) - texture2D(uImage0, vec2(tc.x, tc.y + 1.0 * reach))) * amount;\n\t\t\t\tsum += (texture2D(uImage0, vec2(tc.x, tc.y)) - texture2D(uImage0, vec2(tc.x, tc.y - 1.0 * reach))) * amount;\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4(sum.rgb, 1.0);\n\t\t\t}\n\t\t",
      !0
    );
    this.setAmount(a);
  };
  p["com.stencyl.graphics.shaders.SharpenShader"] = qp;
  qp.__name__ = ["com", "stencyl", "graphics", "shaders", "SharpenShader"];
  qp.__super__ = id;
  qp.prototype = x(id.prototype, {
    setAmount: function (a) {
      this.setProperty("amount", a);
    },
    __class__: qp,
  });
  var rp = function (a, b) {
    null == b && (b = 1);
    this.model = new rd(
      this,
      "\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform sampler2D uImage0;\n\t\t\tuniform float amount;\n\t\t\tuniform float red;\n\t\t\tuniform float green;\n\t\t\tuniform float blue;\n\n\t\t\tvec3 _mix(vec3 a, vec3 b, float amount) \n\t\t\t{ \n\t\t\t\treturn vec3(a.x * (1.0 - amount) + b.x * amount, a.y * (1.0 - amount) + b.y * amount, a.z * (1.0 - amount) + b.z * amount); \n\t\t\t}\n\n\t\t\tvoid main() \n\t\t\t{\n\t\t\t\tvec3 color = texture2D(uImage0, vTexCoord).rgb;\n\t\t\t\tvec3 endColor = _mix(color, vec3(red, green, blue), amount);\n\t\t\t\tgl_FragColor = vec4(endColor.x, endColor.y, endColor.z, 1);\n\t\t\t}\n\t\t",
      !0
    );
    this.setColor(a);
    this.setAmount(b);
  };
  p["com.stencyl.graphics.shaders.TintShader"] = rp;
  rp.__name__ = ["com", "stencyl", "graphics", "shaders", "TintShader"];
  rp.__super__ = id;
  rp.prototype = x(id.prototype, {
    setAmount: function (a) {
      this.setProperty("amount", a);
    },
    setColor: function (a) {
      this.setProperty("red", ((a >> 16) & 255) / 255);
      this.setProperty("green", ((a >> 8) & 255) / 255);
      this.setProperty("blue", (a & 255) / 255);
    },
    __class__: rp,
  });
  var jb = function (a) {
    this.duration = a;
    this.complete = this.active = !1;
    0 == a && (this.active = this.complete = !0);
  };
  p["com.stencyl.graphics.transitions.Transition"] = jb;
  jb.__name__ = ["com", "stencyl", "graphics", "transitions", "Transition"];
  jb.prototype = {
    duration: null,
    direction: null,
    active: null,
    complete: null,
    start: function () {},
    reset: function () {
      this.complete = !1;
    },
    stop: function () {
      this.complete = !0;
    },
    deactivate: function () {
      this.active = !1;
    },
    cleanup: function () {},
    isActive: function () {
      return this.active;
    },
    isComplete: function () {
      return this.complete;
    },
    update: function (a) {},
    draw: function (a) {},
    getDuration: function () {
      return this.duration;
    },
    __class__: jb,
  };
  var hk = function (a, b, c, d) {
    null == c && (c = 10);
    jb.call(this, b);
    this.color = d;
    this.direction = a;
    this.numBlinds = c;
    a == jb.IN
      ? ((this.beginBlindWidth = (r.screenWidth * r.SCALE) / c),
        (this.endBlindWidth = 0))
      : a == jb.OUT
      ? ((this.beginBlindWidth = 0),
        (this.endBlindWidth = (r.screenWidth * r.SCALE) / c))
      : (this.complete = !0);
  };
  p["com.stencyl.graphics.transitions.BlindsTransition"] = hk;
  hk.__name__ = [
    "com",
    "stencyl",
    "graphics",
    "transitions",
    "BlindsTransition",
  ];
  hk.__super__ = jb;
  hk.prototype = x(jb.prototype, {
    color: null,
    numBlinds: null,
    blindWidth: null,
    beginBlindWidth: null,
    endBlindWidth: null,
    blindRect: null,
    rect: null,
    graphics: null,
    start: function () {
      this.active = !0;
      this.blindRect = new W(
        0,
        0,
        this.beginBlindWidth,
        r.screenHeight * r.SCALE
      );
      this.blindWidth = new Ge();
      this.rect = new Ye();
      this.graphics = this.rect.get_graphics();
      this.direction == jb.IN &&
        (this.graphics.beginFill(this.color),
        this.graphics.drawRect(
          0,
          0,
          r.screenWidth * r.SCALE,
          r.screenHeight * r.SCALE
        ),
        this.graphics.endFill());
      r.engine.transitionLayer.addChild(this.rect);
      this.blindWidth
        .tween(
          this.beginBlindWidth,
          this.endBlindWidth,
          xa.linear,
          (1e3 * this.duration) | 0
        )
        .doOnComplete(B(this, this.stop));
    },
    draw: function (a) {
      this.graphics.clear();
      this.graphics.beginFill(this.color);
      this.blindRect.x = 0;
      this.blindRect.width = this.blindWidth.value;
      this.direction == jb.IN &&
        (this.blindRect.x +=
          (r.screenWidth * r.SCALE) / this.numBlinds - this.blindWidth.value);
      a = 0;
      for (var b = this.numBlinds; a < b; )
        a++,
          this.graphics.drawRect(
            this.blindRect.x,
            this.blindRect.y,
            this.blindRect.width,
            this.blindRect.height
          ),
          (this.blindRect.x += (r.screenWidth * r.SCALE) / this.numBlinds);
      this.graphics.endFill();
    },
    cleanup: function () {
      null != this.rect &&
        (r.engine.transitionLayer.removeChild(this.rect), (this.rect = null));
    },
    __class__: hk,
  });
  var gk = function (a, b, c, d) {
    null == d && (d = -16777216);
    null == c && (c = 50);
    jb.call(this, b);
    this.color = d;
    this.direction = a;
    this.numBubbles = c;
  };
  p["com.stencyl.graphics.transitions.BubblesTransition"] = gk;
  gk.__name__ = [
    "com",
    "stencyl",
    "graphics",
    "transitions",
    "BubblesTransition",
  ];
  gk.__super__ = jb;
  gk.prototype = x(jb.prototype, {
    color: null,
    numBubbles: null,
    radius: null,
    beginRadius: null,
    endRadius: null,
    rect: null,
    graphics: null,
    drawBitmap: null,
    bubblePositions: null,
    bubbleRect: null,
    screenWidth: null,
    screenHeight: null,
    start: function () {
      this.active = !0;
      this.rect = new Ye();
      this.graphics = this.rect.get_graphics();
      this.screenWidth = (r.screenWidth * r.SCALE) | 0;
      this.screenHeight = (r.screenHeight * r.SCALE) | 0;
      this.direction == jb.IN &&
        (this.graphics.beginFill(this.color),
        this.graphics.drawRect(0, 0, this.screenWidth, this.screenHeight),
        this.graphics.endFill());
      this.drawBitmap = new sa(this.screenWidth, this.screenHeight);
      var a = this.screenWidth / this.screenHeight,
        b = Math.sqrt(this.numBubbles / a) | 0,
        c = this.screenHeight / b;
      a = Math.ceil((b * a) | 0);
      b = Math.ceil(b);
      var d = (a * c - this.screenWidth) | 0,
        e = new W(-d / 2, -((b * c - this.screenHeight) | 0) / 2, c, c);
      this.bubblePositions = [];
      for (var f = 0; f < b; ) {
        f++;
        for (var g = 0, h = a; g < h; )
          g++,
            this.bubblePositions.push(
              new Y(
                e.x + Math.floor(Math.random() * (c + 1)),
                e.y + Math.floor(Math.random() * (c + 1))
              )
            ),
            (e.x += c);
        e.x = -d / 2;
        e.y += c;
      }
      this.beginRadius = 0;
      this.endRadius = Math.ceil(Y.distance(new Y(0, 0), new Y(c, c)));
      this.radius = new Ge();
      r.engine.transitionLayer.addChild(this.rect);
      this.radius
        .tween(
          this.beginRadius,
          this.endRadius,
          xa.linear,
          (1e3 * this.duration) | 0
        )
        .doOnComplete(B(this, this.stop));
    },
    draw: function (a) {
      this.graphics.clear();
      if (this.direction == jb.IN) {
        this.drawBitmap.draw(r.engine.colorLayer);
        this.drawBitmap.draw(r.engine.master);
        this.graphics.beginFill(this.color);
        this.graphics.drawRect(0, 0, this.screenWidth, this.screenHeight);
        this.graphics.endFill();
        a = 0;
        for (var b = this.bubblePositions; a < b.length; ) {
          var c = b[a];
          ++a;
          this.graphics.beginBitmapFill(this.drawBitmap);
          this.graphics.drawCircle(c.x, c.y, this.radius.value);
          this.graphics.endFill();
        }
      } else if (this.direction == jb.OUT)
        for (a = 0, b = this.bubblePositions; a < b.length; )
          (c = b[a]),
            ++a,
            this.graphics.beginFill(this.color),
            this.graphics.drawCircle(c.x, c.y, this.radius.value),
            this.graphics.endFill();
    },
    cleanup: function () {
      null != this.rect &&
        (r.engine.transitionLayer.removeChild(this.rect), (this.rect = null));
    },
    __class__: gk,
  });
  var jk = function (a, b, c) {
    null == c && (c = -16777216);
    jb.call(this, b);
    this.color = c;
    this.direction = a;
    a == jb.IN
      ? ((this.beginRadius = 0),
        (this.endRadius =
          Math.ceil(
            Y.distance(
              new Y(0, 0),
              new Y(r.screenWidthHalf * r.SCALE, r.screenHeightHalf * r.SCALE)
            )
          ) | 0))
      : a == jb.OUT &&
        ((this.beginRadius =
          Math.ceil(
            Y.distance(
              new Y(0, 0),
              new Y(r.screenWidthHalf * r.SCALE, r.screenHeightHalf * r.SCALE)
            )
          ) | 0),
        (this.endRadius = 0));
  };
  p["com.stencyl.graphics.transitions.CircleTransition"] = jk;
  jk.__name__ = [
    "com",
    "stencyl",
    "graphics",
    "transitions",
    "CircleTransition",
  ];
  jk.__super__ = jb;
  jk.prototype = x(jb.prototype, {
    color: null,
    radius: null,
    beginRadius: null,
    endRadius: null,
    circleImg: null,
    s: null,
    start: function () {
      this.active = !0;
      this.s = new Ye();
      this.circleImg = new sa(
        (r.screenWidth * r.SCALE) | 0,
        (r.screenHeight * r.SCALE) | 0
      );
      this.radius = new Ge();
      if (this.direction == jb.IN) {
        var a = this.s.get_graphics();
        a.beginFill(this.color);
        a.drawRect(0, 0, r.screenWidth * r.SCALE, r.screenHeight * r.SCALE);
        a.endFill();
      }
      r.engine.transitionLayer.addChild(this.s);
      this.radius
        .tween(
          this.beginRadius,
          this.endRadius,
          xa.linear,
          (1e3 * this.duration) | 0
        )
        .doOnComplete(B(this, this.stop));
    },
    draw: function (a) {
      this.s.get_graphics().clear();
      this.s.get_graphics().beginFill(this.color);
      this.s
        .get_graphics()
        .drawRect(0, 0, r.screenWidth * r.SCALE, r.screenHeight * r.SCALE);
      this.s.get_graphics().endFill();
      this.circleImg.draw(r.engine.colorLayer);
      this.circleImg.draw(r.engine.master);
      this.s.get_graphics().beginBitmapFill(this.circleImg);
      this.s
        .get_graphics()
        .drawCircle(
          r.screenWidthHalf * r.SCALE,
          r.screenHeightHalf * r.SCALE,
          this.radius.value
        );
      this.s.get_graphics().endFill();
    },
    cleanup: function () {
      null != this.s &&
        (r.engine.transitionLayer.removeChild(this.s), (this.s = null));
    },
    __class__: jk,
  });
  var cm = function (a, b) {
    jb.call(this, b);
    this.oldImg = a;
  };
  p["com.stencyl.graphics.transitions.CrossfadeTransition"] = cm;
  cm.__name__ = [
    "com",
    "stencyl",
    "graphics",
    "transitions",
    "CrossfadeTransition",
  ];
  cm.__super__ = jb;
  cm.prototype = x(jb.prototype, {
    oldImg: null,
    bitmap: null,
    rect: null,
    rectAlpha: null,
    start: function () {
      this.active = !0;
      this.bitmap = new sa(
        (r.screenWidth * r.SCALE) | 0,
        (r.screenHeight * r.SCALE) | 0
      );
      this.bitmap.draw(this.oldImg);
      this.rect = new Ye();
      var a = this.rect.get_graphics();
      a.beginBitmapFill(this.bitmap);
      a.drawRect(0, 0, r.screenWidth * r.SCALE, r.screenHeight * r.SCALE);
      a.endFill();
      r.engine.transitionLayer.addChild(this.rect);
      this.rectAlpha = new Ge();
      this.rectAlpha
        .tween(1, 0, xa.linear, (1e3 * this.duration) | 0)
        .doOnComplete(B(this, this.stop));
    },
    update: function (a) {
      this.rect.set_alpha(this.rectAlpha.value);
    },
    draw: function (a) {},
    cleanup: function () {
      this.bitmap = this.oldImg = null;
      null != this.rect &&
        (r.engine.transitionLayer.removeChild(this.rect), (this.rect = null));
    },
    __class__: cm,
  });
  var em = function (a, b) {
    null == b && (b = -16777216);
    jb.call(this, a);
    this.color = b;
    this.direction = jb.IN;
  };
  p["com.stencyl.graphics.transitions.FadeInTransition"] = em;
  em.__name__ = [
    "com",
    "stencyl",
    "graphics",
    "transitions",
    "FadeInTransition",
  ];
  em.__super__ = jb;
  em.prototype = x(jb.prototype, {
    color: null,
    rect: null,
    rectAlpha: null,
    start: function () {
      this.active = !0;
      this.rect = new Ye();
      var a = this.rect.get_graphics();
      a.beginFill(this.color);
      a.drawRect(
        0,
        0,
        r.screenWidth * r.SCALE + 4,
        r.screenHeight * r.SCALE + 4
      );
      a.endFill();
      a.drawCircle(1, 1, 1);
      r.engine.transitionLayer.addChild(this.rect);
      this.rectAlpha = new Ge();
      this.rectAlpha
        .tween(1, 0, xa.linear, (1e3 * this.duration) | 0)
        .doOnComplete(B(this, this.stop));
    },
    update: function (a) {
      this.rect.set_alpha(this.rectAlpha.value);
    },
    cleanup: function () {
      null != this.rect &&
        (r.engine.transitionLayer.removeChild(this.rect), (this.rect = null));
    },
    __class__: em,
  });
  var dm = function (a, b) {
    null == b && (b = -16777216);
    jb.call(this, a);
    this.color = b;
    this.direction = jb.IN;
  };
  p["com.stencyl.graphics.transitions.FadeOutTransition"] = dm;
  dm.__name__ = [
    "com",
    "stencyl",
    "graphics",
    "transitions",
    "FadeOutTransition",
  ];
  dm.__super__ = jb;
  dm.prototype = x(jb.prototype, {
    color: null,
    rect: null,
    rectAlpha: null,
    start: function () {
      this.active = !0;
      this.rect = new Ye();
      this.rect.set_alpha(0);
      var a = this.rect.get_graphics();
      a.beginFill(this.color);
      a.drawRect(
        0,
        0,
        r.screenWidth * r.SCALE + 4,
        r.screenHeight * r.SCALE + 4
      );
      a.endFill();
      a.drawCircle(1, 1, 1);
      r.engine.transitionLayer.addChild(this.rect);
      this.rectAlpha = new Ge();
      this.rectAlpha
        .tween(0, 1, xa.linear, (1e3 * this.duration) | 0)
        .doOnComplete(B(this, this.stop));
    },
    update: function (a) {
      this.rect.set_alpha(this.rectAlpha.value);
    },
    cleanup: function () {
      null != this.rect &&
        (r.engine.transitionLayer.removeChild(this.rect), (this.rect = null));
    },
    __class__: dm,
  });
  var fk = function (a, b, c) {
    jb.call(this, a);
    this.beginPixelSize = b;
    this.endPixelSize = c;
  };
  p["com.stencyl.graphics.transitions.PixelizeTransition"] = fk;
  fk.__name__ = [
    "com",
    "stencyl",
    "graphics",
    "transitions",
    "PixelizeTransition",
  ];
  fk.__super__ = jb;
  fk.prototype = x(jb.prototype, {
    pixelSizeTween: null,
    beginPixelSize: null,
    endPixelSize: null,
    srcImg: null,
    displayImg: null,
    displayBitmap: null,
    c: null,
    r: null,
    xOverflow: null,
    yOverflow: null,
    pixelRect: null,
    halfSize: null,
    start: function () {
      this.active = !0;
      this.srcImg = new sa(
        (r.screenWidth * r.SCALE) | 0,
        (r.screenHeight * r.SCALE) | 0
      );
      this.displayImg = new sa(
        (r.screenWidth * r.SCALE) | 0,
        (r.screenHeight * r.SCALE) | 0
      );
      this.pixelRect = new W(0, 0, 0, 0);
      r.engine.transitionLayer.addChild(
        (this.displayBitmap = new ic(this.displayImg))
      );
      this.pixelSizeTween = new Ge();
      this.pixelSizeTween
        .tween(
          this.beginPixelSize,
          this.endPixelSize,
          xa.linear,
          (1e3 * this.duration) | 0
        )
        .doOnComplete(B(this, this.stop));
    },
    draw: function (a) {
      a = this.pixelSizeTween.value | 0;
      if (1 == a)
        this.displayImg.draw(r.engine.colorLayer),
          this.displayImg.draw(r.engine.master);
      else {
        this.srcImg.draw(r.engine.colorLayer);
        this.srcImg.draw(r.engine.master);
        this.c = Math.ceil((r.screenWidth * r.SCALE) / a);
        this.r = Math.ceil((r.screenHeight * r.SCALE) / a);
        this.xOverflow = (this.c * a - r.screenWidth * r.SCALE) | 0;
        this.yOverflow = (this.r * a - r.screenHeight * r.SCALE) | 0;
        this.pixelRect.x = -this.xOverflow / 2;
        this.pixelRect.y = -this.yOverflow / 2;
        this.pixelRect.height = this.pixelRect.width = a;
        this.halfSize = (a / 2) | 0;
        this.displayImg.lock();
        for (var b = 0, c = this.r; b < c; ) {
          b++;
          for (var d = 0, e = this.c; d < e; ) {
            d++;
            var f = this.srcImg.getPixel32(
              (this.pixelRect.x + this.halfSize) | 0,
              (this.pixelRect.y + this.halfSize) | 0
            );
            for (
              var g = this.pixelRect.x | 0,
                h = (this.pixelRect.x + this.pixelRect.width) | 0;
              g < h;

            )
              for (
                var n = g++,
                  k = this.pixelRect.y | 0,
                  m = (this.pixelRect.y + this.pixelRect.height) | 0;
                k < m;

              ) {
                var l = k++;
                this.displayImg.setPixel32(n, l, f);
              }
            this.pixelRect.x += a;
          }
          this.pixelRect.x = -this.xOverflow / 2;
          this.pixelRect.y += a;
        }
        this.displayImg.unlock();
      }
    },
    cleanup: function () {
      null != this.displayBitmap &&
        r.engine.transitionLayer.removeChild(this.displayBitmap);
    },
    __class__: fk,
  });
  var ik = function (a, b, c) {
    jb.call(this, b);
    this.color = c;
    this.direction = a;
    a == jb.IN
      ? ((this.beginHeight = this.beginWidth = 0),
        (this.endWidth = (r.screenWidth * r.SCALE) | 0),
        (this.endHeight = (r.screenHeight * r.SCALE) | 0))
      : a == jb.OUT
      ? ((this.beginWidth = (r.screenWidth * r.SCALE) | 0),
        (this.beginHeight = (r.screenHeight * r.SCALE) | 0),
        (this.endHeight = this.endWidth = 0))
      : (this.complete = !0);
  };
  p["com.stencyl.graphics.transitions.RectangleTransition"] = ik;
  ik.__name__ = [
    "com",
    "stencyl",
    "graphics",
    "transitions",
    "RectangleTransition",
  ];
  ik.__super__ = jb;
  ik.prototype = x(jb.prototype, {
    rectangleImg: null,
    graphics: null,
    color: null,
    size: null,
    beginWidth: null,
    endWidth: null,
    beginHeight: null,
    endHeight: null,
    rect: null,
    start: function () {
      this.active = !0;
      this.size = new Rf();
      this.rectangleImg = new sa(
        (r.screenWidth * r.SCALE) | 0,
        (r.screenHeight * r.SCALE) | 0
      );
      this.rect = new Ye();
      this.graphics = this.rect.get_graphics();
      this.direction == jb.IN &&
        (this.graphics.beginFill(this.color),
        this.graphics.drawRect(
          0,
          0,
          r.screenWidth * r.SCALE,
          r.screenHeight * r.SCALE
        ),
        this.graphics.endFill());
      r.engine.transitionLayer.addChild(this.rect);
      this.size.onComplete = B(this, this.stop);
      this.size.tween(
        this.beginWidth,
        this.endWidth,
        this.beginHeight,
        this.endHeight,
        xa.linear,
        (1e3 * this.duration) | 0
      );
    },
    draw: function (a) {
      this.graphics.clear();
      this.graphics.beginFill(this.color);
      this.graphics.drawRect(
        0,
        0,
        r.screenWidth * r.SCALE,
        r.screenHeight * r.SCALE
      );
      this.graphics.endFill();
      this.rectangleImg.draw(r.engine.colorLayer);
      this.rectangleImg.draw(r.engine.master);
      this.graphics.beginBitmapFill(this.rectangleImg);
      this.graphics.drawRect(
        (r.screenWidth * r.SCALE - this.size.value1) / 2,
        (r.screenHeight * r.SCALE - this.size.value2) / 2,
        this.size.value1,
        this.size.value2
      );
      this.graphics.endFill();
    },
    cleanup: function () {
      null != this.rect &&
        (r.engine.transitionLayer.removeChild(this.rect), (this.rect = null));
    },
    __class__: ik,
  });
  var Ze = function (a, b, c, d) {
    jb.call(this, c);
    this.sceneSpr = a;
    this.sceneCol = b;
    this.oldSceneMatrix = new ya();
    this.newSceneMatrix = new ya();
    this.ty = this.tx = 0;
    d == Ze.SLIDE_UP
      ? ((this.newSceneMatrix.ty = -r.screenHeight * r.SCALE),
        (this.ty = r.screenHeight * r.SCALE))
      : d == Ze.SLIDE_DOWN
      ? ((this.newSceneMatrix.ty = r.screenHeight * r.SCALE),
        (this.ty = -r.screenHeight * r.SCALE))
      : d == Ze.SLIDE_LEFT
      ? ((this.newSceneMatrix.tx = -r.screenWidth * r.SCALE),
        (this.tx = r.screenWidth * r.SCALE))
      : d == Ze.SLIDE_RIGHT
      ? ((this.newSceneMatrix.tx = r.screenWidth * r.SCALE),
        (this.tx = -r.screenWidth * r.SCALE))
      : (this.complete = !0);
  };
  p["com.stencyl.graphics.transitions.SlideTransition"] = Ze;
  Ze.__name__ = [
    "com",
    "stencyl",
    "graphics",
    "transitions",
    "SlideTransition",
  ];
  Ze.__super__ = jb;
  Ze.prototype = x(jb.prototype, {
    sceneSpr: null,
    sceneCol: null,
    oldBitmap: null,
    newBitmap: null,
    drawBitmap: null,
    graphics: null,
    oldSceneMatrix: null,
    newSceneMatrix: null,
    osm_xy: null,
    nsm_xy: null,
    tx: null,
    ty: null,
    rect: null,
    start: function () {
      this.active = !0;
      this.oldBitmap = new sa(
        (r.screenWidth * r.SCALE) | 0,
        (r.screenHeight * r.SCALE) | 0
      );
      this.oldBitmap.draw(this.sceneCol);
      this.oldBitmap.draw(this.sceneSpr);
      this.newBitmap = new sa(
        (r.screenWidth * r.SCALE) | 0,
        (r.screenHeight * r.SCALE) | 0
      );
      this.drawBitmap = new sa(
        (r.screenWidth * r.SCALE) | 0,
        (r.screenHeight * r.SCALE) | 0
      );
      this.rect = new Ye();
      this.graphics = this.rect.get_graphics();
      this.graphics.beginBitmapFill(this.oldBitmap);
      this.graphics.drawRect(
        0,
        0,
        r.screenWidth * r.SCALE,
        r.screenHeight * r.SCALE
      );
      this.graphics.endFill();
      r.engine.transitionLayer.addChild(this.rect);
      this.osm_xy = new Rf();
      this.nsm_xy = new Rf();
      this.osm_xy.tween(
        this.oldSceneMatrix.tx,
        this.tx,
        this.oldSceneMatrix.ty,
        this.ty,
        xa.linear,
        (1e3 * this.duration) | 0
      );
      this.nsm_xy.tween(
        this.newSceneMatrix.tx,
        0,
        this.newSceneMatrix.ty,
        0,
        xa.linear,
        (1e3 * this.duration) | 0
      );
      this.nsm_xy.doOnComplete(B(this, this.stop));
    },
    update: function (a) {
      this.oldSceneMatrix.tx = this.osm_xy.value1;
      this.oldSceneMatrix.ty = this.osm_xy.value2;
      this.newSceneMatrix.tx = this.nsm_xy.value1;
      this.newSceneMatrix.ty = this.nsm_xy.value2;
    },
    draw: function (a) {
      this.graphics.clear();
      this.newBitmap.draw(this.sceneCol);
      this.newBitmap.draw(this.sceneSpr);
      this.drawBitmap.draw(this.newBitmap, this.newSceneMatrix);
      this.drawBitmap.draw(this.oldBitmap, this.oldSceneMatrix);
      this.graphics.beginBitmapFill(this.drawBitmap);
      this.graphics.drawRect(
        0,
        0,
        r.screenWidth * r.SCALE,
        r.screenHeight * r.SCALE
      );
      this.graphics.endFill();
    },
    cleanup: function () {
      this.sceneSpr = null;
      null != this.rect &&
        (r.engine.transitionLayer.removeChild(this.rect), (this.rect = null));
    },
    __class__: Ze,
  });
  var Ph = function () {};
  p["com.stencyl.io.AbstractReader"] = Ph;
  Ph.__name__ = ["com", "stencyl", "io", "AbstractReader"];
  Ph.prototype = { accepts: null, read: null, __class__: Ph };
  var Vl = function () {};
  p["com.stencyl.io.ActorTypeReader"] = Vl;
  Vl.__name__ = ["com", "stencyl", "io", "ActorTypeReader"];
  Vl.__interfaces__ = [Ph];
  Vl.prototype = {
    accepts: function (a) {
      return a == Ha.MBS_ACTOR_TYPE.getName();
    },
    read: function (a) {
      var b = a.getId(),
        c = a.getAtlasID(),
        d = a.getName(),
        e = new Vi();
      e.fixedRotation = a.getFixedRotation();
      switch (a.getBodyType()) {
        case 0:
          var f = ea.b2_staticBody;
          break;
        case 1:
          f = ea.b2_kinematicBody;
          break;
        default:
          f = ea.b2_dynamicBody;
      }
      e.type = f;
      e.linearDamping = a.getLinearDamping();
      e.angularDamping = a.getAngularDamping();
      e.friction = a.getFriction();
      e.bounciness = a.getRestitution();
      e.mass = a.getMass();
      e.aMass = a.getInertia();
      e.active = !0;
      e.bullet = !1;
      e.allowSleep = !1;
      e.awake = !0;
      e.ignoreGravity = a.getIgnoreGravity();
      e.bullet = a.getContinuous();
      f = a.getSprite();
      var g = a.getGroupID(),
        h = Ng.fromInt(a.getPhysicsMode()),
        n = a.getAutoScale(),
        k = a.getPausable(),
        m =
          e.ignoreGravity ||
          e.type == ea.b2_staticBody ||
          e.type == ea.b2_kinematicBody,
        l = He.readBehaviors(a.getSnippets()),
        p = a.getEventSnippetID();
      -1 < p &&
        ((a = new lk(p, new la())),
        (p = "" + p),
        null != t[p] ? l.setReserved(p, a) : (l.h[p] = a));
      return new ng(b, c, d, g, f, l, e, h, n, k, m);
    },
    __class__: Vl,
  };
  var He = function () {};
  p["com.stencyl.io.AttributeValues"] = He;
  He.__name__ = ["com", "stencyl", "io", "AttributeValues"];
  He.readBehaviors = function (a) {
    for (var b = new la(), c = 0, d = a.length(); c < d; ) {
      c++;
      var e = a.getNextObject();
      if (e.getEnabled()) {
        var f = e.getId();
        e = He.readBehaviorProperties(e.getProperties());
        e = new lk(f, e);
        f = "" + f;
        null != t[f] ? b.setReserved(f, e) : (b.h[f] = e);
      }
    }
    return b;
  };
  He.readBehaviorProperties = function (a) {
    for (var b = new la(), c = 0, d = a.length(); c < d; ) {
      c++;
      var e = a.getNextObject(),
        f = e.getId(),
        g = e.getType();
      f = "" + f;
      e = He.readAttribute(g, e);
      null != t[f] ? b.setReserved(f, e) : (b.h[f] = e);
    }
    return b;
  };
  He.readAttribute = function (a, b) {
    switch (a) {
      case "list":
        return He.readList(b.getValue());
      case "map":
        return He.readMap(b.getValue());
      default:
        return b.getValue();
    }
  };
  He.readAttributeDef = function (a, b) {
    switch (a) {
      case "list":
        return He.readList(b.getDefaultValue());
      case "map":
        return He.readMap(b.getDefaultValue());
      default:
        return b.getDefaultValue();
    }
  };
  He.readList = function (a) {
    if (null == a) return null;
    for (var b = [], c = 0, d = a.length(); c < d; ) {
      var e = c++;
      b[e] = a.readObject();
    }
    return b;
  };
  He.readMap = function (a) {
    if (null == a) return null;
    for (var b = new la(), c = 0, d = a.length(); c < d; ) {
      c++;
      var e = a.getNextObject(),
        f = e.getKey();
      e = e.getValue();
      if (u.__instanceof(e, Qh)) {
        for (var g = [], h = 0, n = e.length(); h < n; )
          h++, g.push(e.readObject());
        e = g;
      } else u.__instanceof(e, Ja) && (e = He.readMap(e));
      null != t[f] ? b.setReserved(f, e) : (b.h[f] = e);
    }
    return b;
  };
  var Sl = function () {};
  p["com.stencyl.io.BackgroundReader"] = Sl;
  Sl.__name__ = ["com", "stencyl", "io", "BackgroundReader"];
  Sl.__interfaces__ = [Ph];
  Sl.prototype = {
    accepts: function (a) {
      return a == ob.MBS_BACKGROUND.getName();
    },
    read: function (a) {
      var b = a.getId(),
        c = a.getAtlasID(),
        d = a.getName(),
        e = a.getXVelocity(),
        f = a.getYVelocity(),
        g = a.getXParallaxFactor(),
        h = a.getYParallaxFactor(),
        n = [];
      if (0 < a.getNumFrames())
        for (var k = a.getDurations(), m = 0, l = k.length(); m < l; )
          m++, n.push(k.readInt());
      a = a.getRepeats();
      return 0 != e || 0 != f
        ? new Rh(b, c, d, n, g, h, a, e, f)
        : new Tg(b, c, d, n, g, h, a);
    },
    __class__: Sl,
  };
  var Yi = function () {};
  p["com.stencyl.io.BehaviorReader"] = Yi;
  Yi.__name__ = ["com", "stencyl", "io", "BehaviorReader"];
  Yi.readBehavior = function (a) {
    var b = a.getId(),
      c = a.getName(),
      d = a.getClassname(),
      e = a.getAttachedEvent(),
      f = new la(),
      g = a.getType();
    a = a.getAttributes();
    for (var h = 0, n = a.length(); h < n; ) {
      h++;
      var k = a.getNextObject(),
        m = "" + k.getId();
      k = Yi.readAttribute(k, e);
      null != t[m] ? f.setReserved(m, k) : (f.h[m] = k);
    }
    return new Yl(null, null, b, c, d, !0, !0, f, g, e);
  };
  Yi.readAttribute = function (a, b) {
    var c = a.getId(),
      d = a.getName(),
      e = a.getFullname();
    b = b || a.getHidden();
    var f = a.getType();
    a = He.readAttributeDef(f, a);
    return new Zi(c, d, e, a, f, null, b);
  };
  Yi.prototype = { __class__: Yi };
  var Xl = function () {};
  p["com.stencyl.io.FontReader"] = Xl;
  Xl.__name__ = ["com", "stencyl", "io", "FontReader"];
  Xl.__interfaces__ = [Ph];
  Xl.prototype = {
    accepts: function (a) {
      return a == Wb.MBS_FONT.getName();
    },
    read: function (a) {
      return new Pf(a.getId(), a.getAtlasID(), a.getName(), !1);
    },
    __class__: Xl,
  };
  var yd = function () {};
  p["com.stencyl.io.ShapeReader"] = yd;
  yd.__name__ = ["com", "stencyl", "io", "ShapeReader"];
  yd.readPoint = function (a) {
    return new Y(a.getX(), a.getY());
  };
  yd.readPoints = function (a) {
    var b = a.length();
    b = Array(b);
    for (var c = 0, d = a.length(); c < d; ) {
      var e = c++,
        f = a.getNextObject();
      b[e] = new Y(f.getX(), f.getY());
    }
    return b;
  };
  yd.createCircle = function (a, b, c, d, e) {
    null == e && (e = -1);
    null == d && (d = -1);
    var f = 2 * a,
      g = new Jc();
    g.m_radius = r.toPhysicalUnits(a);
    g.m_p.x = r.toPhysicalUnits(b - (d - f) / 2);
    g.m_p.y = r.toPhysicalUnits(c - (e - f) / 2);
    return g;
  };
  yd.createPolygon = function (a, b, c, d) {
    null == d && (d = 0);
    null == c && (c = 0);
    var e = [];
    var f = b.length;
    var g = 0;
    c = (-c / 2) | 0;
    d = (-d / 2) | 0;
    if ("MbsPolygon" == a || "MbsPolyRegion" == a) {
      for (g = 0; g < f; ) {
        var h = b[g];
        a = r.toPhysicalUnits(h.x + c);
        h = r.toPhysicalUnits(h.y + d);
        e[g] = new D(a, h);
        ++g;
      }
      yd.EnsureCorrectVertexDirection(e);
      return Db.asArray(e, e.length);
    }
    if ("MbsWireframe" == a) {
      for (; g < f; )
        (c = b[g]),
          e.push(new D(r.toPhysicalUnits(c.x), r.toPhysicalUnits(c.y))),
          ++g;
      b = yd.getWidth(e);
      f = yd.getHeight(e);
      g = [];
      c = 0;
      for (d = e.length + 1; c < d; ) {
        var n = c++;
        a = new Ig(e[n % e.length], e[(n + 1) % e.length]);
        g.push(a);
        a.m_hasVertex0 = !0;
        a.m_hasVertex3 = !0;
        h = e[(n - 1) % e.length];
        n = e[(n + 2) % e.length];
        null == h && (h = e[e.length - 1]);
        null == n && (n = e[0]);
        a.m_v0 = h;
        a.m_v3 = n;
      }
      e = new Ca();
      e.h[0] = g;
      e.h[1] = b;
      e.h[2] = f;
      return e;
    }
    return null;
  };
  yd.CheckVertexDirection = function (a) {
    if (2 < a.length) {
      for (var b = 0, c = 0; 0 == b && c < a.length - 2; )
        (b = a[c].winding(a[c + 1], a[c + 2])), ++c;
      if (0 > b) return !1;
    }
    return !0;
  };
  yd.EnsureCorrectVertexDirection = function (a) {
    return yd.CheckVertexDirection(a) ? !0 : (yd.ReverseVertices(a), !1);
  };
  yd.ReverseVertices = function (a) {
    for (var b = 0, c = a.length - 1, d; c > b; )
      (d = a[b].x),
        (a[b].x = a[c].x),
        (a[c].x = d),
        (d = a[b].y),
        (a[b].y = a[c].y),
        (a[c].y = d),
        ++b,
        --c;
  };
  yd.getWidth = function (a) {
    for (var b = 1e7, c = 0, d = 0; d < a.length; ) {
      var e = a[d];
      ++d;
      b = Math.min(b, e.x);
      c = Math.max(c, e.x);
    }
    return c - b;
  };
  yd.getHeight = function (a) {
    for (var b = 1e7, c = 0, d = 0; d < a.length; ) {
      var e = a[d];
      ++d;
      b = Math.min(b, e.y);
      c = Math.max(c, e.y);
    }
    return c - b;
  };
  var Tl = function () {};
  p["com.stencyl.io.SoundReader"] = Tl;
  Tl.__name__ = ["com", "stencyl", "io", "SoundReader"];
  Tl.__interfaces__ = [Ph];
  Tl.prototype = {
    accepts: function (a) {
      return a == lc.MBS_MUSIC.getName();
    },
    read: function (a) {
      var b = a.getStream(),
        c = a.getLoop(),
        d = a.getPan(),
        e = a.getVolume(),
        f = a.getType();
      return new oi(a.getId(), a.getName(), b, c, d, e, f, a.getAtlasID());
    },
    __class__: Tl,
  };
  var Wl = function () {};
  p["com.stencyl.io.SpriteReader"] = Wl;
  Wl.__name__ = ["com", "stencyl", "io", "SpriteReader"];
  Wl.__interfaces__ = [Ph];
  Wl.prototype = {
    accepts: function (a) {
      return a == bc.MBS_SPRITE.getName();
    },
    read: function (a) {
      var b = a.getDefaultAnimation(),
        c = a.getReadableImages();
      b = new ii(a.getId(), a.getAtlasID(), a.getName(), b, c);
      a = a.getAnimations();
      c = 0;
      for (var d = a.length(); c < d; ) {
        c++;
        var e = a.getNextObject();
        e = this.readAnimation(e, b);
        b.animations.h[e.animID] = e;
      }
      return b;
    },
    readAnimation: function (a, b) {
      var c = a.getId(),
        d = a.getName(),
        e = a.getWidth(),
        f = a.getHeight(),
        g = a.getOriginX(),
        h = a.getOriginY(),
        n = a.getNumFrames(),
        k = a.getAcross(),
        m = a.getDown(),
        l = this.readSimpleShapes(a, (e / k) | 0, (f / m) | 0),
        p = this.readShapes(a, (e / k) | 0, (f / m) | 0),
        r = a.getLoop(),
        q = a.getSync(),
        t = [];
      a = a.getDurations();
      for (var u = 0, na = a.length(); u < na; ) {
        var x = u++;
        t[x] = a.readInt();
        t[x] = Math.floor(t[x] / 10);
        t[x] *= 10;
      }
      return new ue(c, d, b, l, p, r, q, e, f, g, h, t, n, k, m);
    },
    readSimpleShapes: function (a, b, c) {
      b = new Ca();
      a = a.getShapes();
      c = 0;
      for (var d = a.length(); c < d; ) {
        c++;
        var e = a.getNextObject(),
          f = e.getId(),
          g = e.getGroupID(),
          h = e.getSensor();
        e = e.getShape();
        if (u.__instanceof(e, Lc) && ((e = e.getPoints()), 4 == e.length())) {
          for (
            var n = e.getNextObject(),
              k = 0,
              m = 1e7,
              l = 1e7,
              p = 0,
              r = 0,
              q = n.getX() | 0,
              t = n.getY() | 0;
            k < e.length();

          )
            (m = Math.min(m, n.getX()) | 0),
              (l = Math.min(l, n.getY()) | 0),
              (p = Math.max(p, n.getX()) | 0),
              (r = Math.max(r, n.getY()) | 0),
              ++k,
              k < e.length() && (n = e.getNextObject());
          g = new jd(p - m, r - l, q, t, !h, g);
          b.h[f] = g;
        }
      }
      return b;
    },
    readShapes: function (a, b, c) {
      var d = new Ca();
      a = a.getShapes();
      for (var e = 0, f = a.length(); e < f; ) {
        e++;
        var g = a.getNextObject(),
          h = g.getId();
        g.getGroupID();
        var n = g.getSensor(),
          k = g.getShape();
        if (u.__instanceof(k, Jd))
          k = yd.createCircle(
            k.getRadius(),
            k.getPosition().getX(),
            k.getPosition().getY(),
            b,
            c
          );
        else {
          var m = k;
          k = yd.createPolygon(
            k.getMbsType().getName(),
            yd.readPoints(m.getPoints()).slice(0),
            b,
            c
          );
        }
        m = new Tf();
        m.shape = k;
        m.density = g.getDensity();
        m.friction = g.getFriction();
        m.restitution = g.getRestitution();
        m.isSensor = n;
        m.groupID = g.getGroupID();
        d.h[h] = m;
      }
      return d;
    },
    __class__: Wl,
  };
  var Ul = function () {};
  p["com.stencyl.io.TilesetReader"] = Ul;
  Ul.__name__ = ["com", "stencyl", "io", "TilesetReader"];
  Ul.__interfaces__ = [Ph];
  Ul.prototype = {
    accepts: function (a) {
      return a == Xb.MBS_TILESET.getName();
    },
    read: function (a) {
      var b = a.getAcross(),
        c = a.getDown(),
        d = a.getTileWidth(),
        e = a.getTileHeight(),
        f = a.getReadableImages(),
        g = [];
      b = new Gf(a.getId(), a.getAtlasID(), a.getName(), b, c, d, e, f, g);
      a = a.getTiles();
      c = 0;
      for (d = a.length(); c < d; )
        c++, (e = a.getNextObject()), (g[e.getId()] = this.readTile(e, b));
      b.isAtlasActive() && b.loadGraphics();
      return b;
    },
    readTile: function (a, b) {
      for (
        var c = a.getId(),
          d = a.getCollision(),
          e = a.getMetadata(),
          f = a.getFrames(),
          g = [],
          h = 0,
          n = a.getDurations(),
          k = 0,
          m = n.length();
        k < m;

      )
        k++,
          (g[h] = n.readInt()),
          (g[h] = Math.floor(g[h] / 10)),
          (g[h] *= 10),
          ++h;
      h = null;
      -1 != a.getAutotile() &&
        ((h = cb.get().autotileFormats), (n = a.getAutotile()), (h = h.h[n]));
      n = null;
      if (0 != a.getAutotileMerge().length())
        for (
          n = new Ca(), a = a.getAutotileMerge(), k = 0, m = a.length();
          k < m;

        ) {
          k++;
          var l = a.readInt();
          n.h[l] = l;
        }
      return new Fc(c, d, e, f, g, h, n, b);
    },
    __class__: Ul,
  };
  var Ta = function (a) {
    this.data = a;
  };
  p["mbs.core.MbsObject"] = Ta;
  Ta.__name__ = ["mbs", "core", "MbsObject"];
  Ta.prototype = {
    data: null,
    address: null,
    getMbs: function () {
      return this.data;
    },
    getAddress: function () {
      return this.address;
    },
    setAddress: function (a) {
      this.address = a;
    },
    getMbsType: function () {
      throw new v("Must override getMbsType in MbsObject subclasses");
    },
    __class__: Ta,
  };
  var nb = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.MbsResource"] = nb;
  nb.__name__ = ["com", "stencyl", "io", "mbs", "MbsResource"];
  nb.initializeType = function () {
    null == nb.MBS_RESOURCE &&
      ((nb.MBS_RESOURCE = new kb("MbsResource")),
      nb.MBS_RESOURCE.setInstantiator(function (a) {
        return new nb(a);
      }),
      (nb.atlasID = nb.MBS_RESOURCE.createField("atlasID", z.INTEGER)),
      (nb.description = nb.MBS_RESOURCE.createField("description", z.STRING)),
      (nb.id = nb.MBS_RESOURCE.createField("id", z.INTEGER)),
      (nb.$name = nb.MBS_RESOURCE.createField("name", z.STRING)));
  };
  nb.new_MbsResource_list = function (a) {
    return new Ja(a, nb.MBS_RESOURCE, new nb(a));
  };
  nb.__super__ = Ta;
  nb.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return nb.MBS_RESOURCE;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(nb.MBS_RESOURCE.getSize()));
    },
    getAtlasID: function () {
      return this.data.readInt(this.address + nb.atlasID.address);
    },
    setAtlasID: function (a) {
      this.data.writeInt(this.address + nb.atlasID.address, a);
    },
    getDescription: function () {
      return this.data.readString(this.address + nb.description.address);
    },
    setDescription: function (a) {
      this.data.writeString(this.address + nb.description.address, a);
    },
    getId: function () {
      return this.data.readInt(this.address + nb.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + nb.id.address, a);
    },
    getName: function () {
      return this.data.readString(this.address + nb.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + nb.$name.address, a);
    },
    __class__: nb,
  });
  var ob = function (a) {
    this.data = a;
    this._durations = new Wf(a);
  };
  p["com.stencyl.io.mbs.MbsBackground"] = ob;
  ob.__name__ = ["com", "stencyl", "io", "mbs", "MbsBackground"];
  ob.initializeType = function () {
    null == ob.MBS_BACKGROUND &&
      (nb.initializeType(),
      (ob.MBS_BACKGROUND = new kb("MbsBackground")),
      ob.MBS_BACKGROUND.setInstantiator(function (a) {
        return new ob(a);
      }),
      ob.MBS_BACKGROUND.inherit(nb.MBS_RESOURCE),
      (ob.readableImages = ob.MBS_BACKGROUND.createField(
        "readableImages",
        z.BOOLEAN
      )),
      (ob.durations = ob.MBS_BACKGROUND.createField("durations", z.LIST)),
      (ob.height = ob.MBS_BACKGROUND.createField("height", z.INTEGER)),
      (ob.numFrames = ob.MBS_BACKGROUND.createField("numFrames", z.INTEGER)),
      (ob.repeats = ob.MBS_BACKGROUND.createField("repeats", z.BOOLEAN)),
      (ob.resized = ob.MBS_BACKGROUND.createField("resized", z.BOOLEAN)),
      (ob.width = ob.MBS_BACKGROUND.createField("width", z.INTEGER)),
      (ob.xParallaxFactor = ob.MBS_BACKGROUND.createField(
        "xParallaxFactor",
        z.FLOAT
      )),
      (ob.xVelocity = ob.MBS_BACKGROUND.createField("xVelocity", z.FLOAT)),
      (ob.yParallaxFactor = ob.MBS_BACKGROUND.createField(
        "yParallaxFactor",
        z.FLOAT
      )),
      (ob.yVelocity = ob.MBS_BACKGROUND.createField("yVelocity", z.FLOAT)));
  };
  ob.new_MbsBackground_list = function (a) {
    return new Ja(a, ob.MBS_BACKGROUND, new ob(a));
  };
  ob.__super__ = nb;
  ob.prototype = x(nb.prototype, {
    getMbsType: function () {
      return ob.MBS_BACKGROUND;
    },
    _durations: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(ob.MBS_BACKGROUND.getSize()));
    },
    getReadableImages: function () {
      return this.data.readBool(this.address + ob.readableImages.address);
    },
    setReadableImages: function (a) {
      this.data.writeBool(this.address + ob.readableImages.address, a);
    },
    getDurations: function () {
      this._durations.setAddress(
        this.data.readInt(this.address + ob.durations.address)
      );
      return this._durations;
    },
    createDurations: function (a) {
      this._durations.allocateNew(a);
      this.data.writeInt(
        this.address + ob.durations.address,
        this._durations.getAddress()
      );
      return this._durations;
    },
    getHeight: function () {
      return this.data.readInt(this.address + ob.height.address);
    },
    setHeight: function (a) {
      this.data.writeInt(this.address + ob.height.address, a);
    },
    getNumFrames: function () {
      return this.data.readInt(this.address + ob.numFrames.address);
    },
    setNumFrames: function (a) {
      this.data.writeInt(this.address + ob.numFrames.address, a);
    },
    getRepeats: function () {
      return this.data.readBool(this.address + ob.repeats.address);
    },
    setRepeats: function (a) {
      this.data.writeBool(this.address + ob.repeats.address, a);
    },
    getResized: function () {
      return this.data.readBool(this.address + ob.resized.address);
    },
    setResized: function (a) {
      this.data.writeBool(this.address + ob.resized.address, a);
    },
    getWidth: function () {
      return this.data.readInt(this.address + ob.width.address);
    },
    setWidth: function (a) {
      this.data.writeInt(this.address + ob.width.address, a);
    },
    getXParallaxFactor: function () {
      return this.data.readFloat(this.address + ob.xParallaxFactor.address);
    },
    setXParallaxFactor: function (a) {
      this.data.writeFloat(this.address + ob.xParallaxFactor.address, a);
    },
    getXVelocity: function () {
      return this.data.readFloat(this.address + ob.xVelocity.address);
    },
    setXVelocity: function (a) {
      this.data.writeFloat(this.address + ob.xVelocity.address, a);
    },
    getYParallaxFactor: function () {
      return this.data.readFloat(this.address + ob.yParallaxFactor.address);
    },
    setYParallaxFactor: function (a) {
      this.data.writeFloat(this.address + ob.yParallaxFactor.address, a);
    },
    getYVelocity: function () {
      return this.data.readFloat(this.address + ob.yVelocity.address);
    },
    setYVelocity: function (a) {
      this.data.writeFloat(this.address + ob.yVelocity.address, a);
    },
    __class__: ob,
  });
  var zd = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.MbsBlank"] = zd;
  zd.__name__ = ["com", "stencyl", "io", "mbs", "MbsBlank"];
  zd.initializeType = function () {
    null == zd.MBS_BLANK &&
      ((zd.MBS_BLANK = new kb("MbsBlank")),
      zd.MBS_BLANK.setInstantiator(function (a) {
        return new zd(a);
      }),
      (zd.$name = zd.MBS_BLANK.createField("name", z.STRING)),
      (zd.type = zd.MBS_BLANK.createField("type", z.STRING)));
  };
  zd.new_MbsBlank_list = function (a) {
    return new Ja(a, zd.MBS_BLANK, new zd(a));
  };
  zd.__super__ = Ta;
  zd.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return zd.MBS_BLANK;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(zd.MBS_BLANK.getSize()));
    },
    getName: function () {
      return this.data.readString(this.address + zd.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + zd.$name.address, a);
    },
    getType: function () {
      return this.data.readString(this.address + zd.type.address);
    },
    setType: function (a) {
      this.data.writeString(this.address + zd.type.address, a);
    },
    __class__: zd,
  });
  var ub = function (a) {
    this.data = a;
    this._blanks = new Ja(a, zd.MBS_BLANK, new zd(a));
  };
  p["com.stencyl.io.mbs.MbsCustomBlock"] = ub;
  ub.__name__ = ["com", "stencyl", "io", "mbs", "MbsCustomBlock"];
  ub.initializeType = function () {
    null == ub.MBS_CUSTOM_BLOCK &&
      (nb.initializeType(),
      (ub.MBS_CUSTOM_BLOCK = new kb("MbsCustomBlock")),
      ub.MBS_CUSTOM_BLOCK.setInstantiator(function (a) {
        return new ub(a);
      }),
      ub.MBS_CUSTOM_BLOCK.inherit(nb.MBS_RESOURCE),
      (ub.blocktag = ub.MBS_CUSTOM_BLOCK.createField("blocktag", z.STRING)),
      (ub.blocktype = ub.MBS_CUSTOM_BLOCK.createField("blocktype", z.STRING)),
      (ub.code = ub.MBS_CUSTOM_BLOCK.createField("code", z.STRING)),
      (ub.global = ub.MBS_CUSTOM_BLOCK.createField("global", z.BOOLEAN)),
      (ub.gui = ub.MBS_CUSTOM_BLOCK.createField("gui", z.STRING)),
      (ub.message = ub.MBS_CUSTOM_BLOCK.createField("message", z.STRING)),
      (ub.returnType = ub.MBS_CUSTOM_BLOCK.createField("returnType", z.STRING)),
      (ub.snippetID = ub.MBS_CUSTOM_BLOCK.createField("snippetID", z.INTEGER)),
      (ub.blanks = ub.MBS_CUSTOM_BLOCK.createField("blanks", z.LIST)));
  };
  ub.new_MbsCustomBlock_list = function (a) {
    return new Ja(a, ub.MBS_CUSTOM_BLOCK, new ub(a));
  };
  ub.__super__ = nb;
  ub.prototype = x(nb.prototype, {
    getMbsType: function () {
      return ub.MBS_CUSTOM_BLOCK;
    },
    _blanks: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(ub.MBS_CUSTOM_BLOCK.getSize()));
    },
    getBlocktag: function () {
      return this.data.readString(this.address + ub.blocktag.address);
    },
    setBlocktag: function (a) {
      this.data.writeString(this.address + ub.blocktag.address, a);
    },
    getBlocktype: function () {
      return this.data.readString(this.address + ub.blocktype.address);
    },
    setBlocktype: function (a) {
      this.data.writeString(this.address + ub.blocktype.address, a);
    },
    getCode: function () {
      return this.data.readString(this.address + ub.code.address);
    },
    setCode: function (a) {
      this.data.writeString(this.address + ub.code.address, a);
    },
    getGlobal: function () {
      return this.data.readBool(this.address + ub.global.address);
    },
    setGlobal: function (a) {
      this.data.writeBool(this.address + ub.global.address, a);
    },
    getGui: function () {
      return this.data.readString(this.address + ub.gui.address);
    },
    setGui: function (a) {
      this.data.writeString(this.address + ub.gui.address, a);
    },
    getMessage: function () {
      return this.data.readString(this.address + ub.message.address);
    },
    setMessage: function (a) {
      this.data.writeString(this.address + ub.message.address, a);
    },
    getReturnType: function () {
      return this.data.readString(this.address + ub.returnType.address);
    },
    setReturnType: function (a) {
      this.data.writeString(this.address + ub.returnType.address, a);
    },
    getSnippetID: function () {
      return this.data.readInt(this.address + ub.snippetID.address);
    },
    setSnippetID: function (a) {
      this.data.writeInt(this.address + ub.snippetID.address, a);
    },
    getBlanks: function () {
      this._blanks.setAddress(
        this.data.readInt(this.address + ub.blanks.address)
      );
      return this._blanks;
    },
    createBlanks: function (a) {
      this._blanks.allocateNew(a);
      this.data.writeInt(
        this.address + ub.blanks.address,
        this._blanks.getAddress()
      );
      return this._blanks;
    },
    __class__: ub,
  });
  var Wb = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.MbsFont"] = Wb;
  Wb.__name__ = ["com", "stencyl", "io", "mbs", "MbsFont"];
  Wb.initializeType = function () {
    null == Wb.MBS_FONT &&
      (nb.initializeType(),
      (Wb.MBS_FONT = new kb("MbsFont")),
      Wb.MBS_FONT.setInstantiator(function (a) {
        return new Wb(a);
      }),
      Wb.MBS_FONT.inherit(nb.MBS_RESOURCE),
      (Wb.alphabet = Wb.MBS_FONT.createField("alphabet", z.STRING)),
      (Wb.readableImages = Wb.MBS_FONT.createField(
        "readableImages",
        z.BOOLEAN
      )),
      (Wb.height = Wb.MBS_FONT.createField("height", z.INTEGER)),
      (Wb.offsets = Wb.MBS_FONT.createField("offsets", z.STRING)),
      (Wb.prerendered = Wb.MBS_FONT.createField("prerendered", z.BOOLEAN)),
      (Wb.rowHeight = Wb.MBS_FONT.createField("rowHeight", z.INTEGER)));
  };
  Wb.new_MbsFont_list = function (a) {
    return new Ja(a, Wb.MBS_FONT, new Wb(a));
  };
  Wb.__super__ = nb;
  Wb.prototype = x(nb.prototype, {
    getMbsType: function () {
      return Wb.MBS_FONT;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Wb.MBS_FONT.getSize()));
    },
    getAlphabet: function () {
      return this.data.readString(this.address + Wb.alphabet.address);
    },
    setAlphabet: function (a) {
      this.data.writeString(this.address + Wb.alphabet.address, a);
    },
    getReadableImages: function () {
      return this.data.readBool(this.address + Wb.readableImages.address);
    },
    setReadableImages: function (a) {
      this.data.writeBool(this.address + Wb.readableImages.address, a);
    },
    getHeight: function () {
      return this.data.readInt(this.address + Wb.height.address);
    },
    setHeight: function (a) {
      this.data.writeInt(this.address + Wb.height.address, a);
    },
    getOffsets: function () {
      return this.data.readString(this.address + Wb.offsets.address);
    },
    setOffsets: function (a) {
      this.data.writeString(this.address + Wb.offsets.address, a);
    },
    getPrerendered: function () {
      return this.data.readBool(this.address + Wb.prerendered.address);
    },
    setPrerendered: function (a) {
      this.data.writeBool(this.address + Wb.prerendered.address, a);
    },
    getRowHeight: function () {
      return this.data.readInt(this.address + Wb.rowHeight.address);
    },
    setRowHeight: function (a) {
      this.data.writeInt(this.address + Wb.rowHeight.address, a);
    },
    __class__: Wb,
  });
  var lc = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.MbsMusic"] = lc;
  lc.__name__ = ["com", "stencyl", "io", "mbs", "MbsMusic"];
  lc.initializeType = function () {
    null == lc.MBS_MUSIC &&
      (nb.initializeType(),
      (lc.MBS_MUSIC = new kb("MbsMusic")),
      lc.MBS_MUSIC.setInstantiator(function (a) {
        return new lc(a);
      }),
      lc.MBS_MUSIC.inherit(nb.MBS_RESOURCE),
      (lc.loop = lc.MBS_MUSIC.createField("loop", z.BOOLEAN)),
      (lc.pan = lc.MBS_MUSIC.createField("pan", z.INTEGER)),
      (lc.stream = lc.MBS_MUSIC.createField("stream", z.BOOLEAN)),
      (lc.type = lc.MBS_MUSIC.createField("type", z.STRING)),
      (lc.volume = lc.MBS_MUSIC.createField("volume", z.INTEGER)));
  };
  lc.new_MbsMusic_list = function (a) {
    return new Ja(a, lc.MBS_MUSIC, new lc(a));
  };
  lc.__super__ = nb;
  lc.prototype = x(nb.prototype, {
    getMbsType: function () {
      return lc.MBS_MUSIC;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(lc.MBS_MUSIC.getSize()));
    },
    getLoop: function () {
      return this.data.readBool(this.address + lc.loop.address);
    },
    setLoop: function (a) {
      this.data.writeBool(this.address + lc.loop.address, a);
    },
    getPan: function () {
      return this.data.readInt(this.address + lc.pan.address);
    },
    setPan: function (a) {
      this.data.writeInt(this.address + lc.pan.address, a);
    },
    getStream: function () {
      return this.data.readBool(this.address + lc.stream.address);
    },
    setStream: function (a) {
      this.data.writeBool(this.address + lc.stream.address, a);
    },
    getType: function () {
      return this.data.readString(this.address + lc.type.address);
    },
    setType: function (a) {
      this.data.writeString(this.address + lc.type.address, a);
    },
    getVolume: function () {
      return this.data.readInt(this.address + lc.volume.address);
    },
    setVolume: function (a) {
      this.data.writeInt(this.address + lc.volume.address, a);
    },
    __class__: lc,
  });
  var Xf = function (a, b) {
    this.name = a;
    this.size = b;
  };
  p["mbs.core.MbsType"] = Xf;
  Xf.__name__ = ["mbs", "core", "MbsType"];
  Xf.prototype = {
    name: null,
    size: null,
    getName: function () {
      return this.name;
    },
    getSize: function () {
      return this.size;
    },
    toString: function () {
      return "MbsType [name=" + this.getName() + "]";
    },
    createInstance: function (a) {
      throw new v("Can't create an instance of type " + this.name);
    },
    __class__: Xf,
  };
  var z = function () {};
  p["mbs.core.MbsTypes"] = z;
  z.__name__ = ["mbs", "core", "MbsTypes"];
  var jc = function (a) {
    this.data = a;
  };
  p["mbs.core.header.MbsHeader"] = jc;
  jc.__name__ = ["mbs", "core", "header", "MbsHeader"];
  jc.initializeType = function () {
    null == jc.MBS_HEADER &&
      ((jc.MBS_HEADER = new kb("MbsHeader")),
      jc.MBS_HEADER.setInstantiator(function (a) {
        return new jc(a);
      }),
      (jc.version = jc.MBS_HEADER.createField("version", z.INTEGER)),
      (jc.typeTableHash = jc.MBS_HEADER.createField(
        "typeTableHash",
        z.INTEGER
      )),
      (jc.typeTablePointer = jc.MBS_HEADER.createField(
        "typeTablePointer",
        z.INTEGER
      )),
      (jc.stringTablePointer = jc.MBS_HEADER.createField(
        "stringTablePointer",
        z.INTEGER
      )),
      (jc.root = jc.MBS_HEADER.createField("root", z.DYNAMIC)));
  };
  jc.new_MbsHeader_list = function (a) {
    return new Ja(a, jc.MBS_HEADER, new jc(a));
  };
  jc.__super__ = Ta;
  jc.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return jc.MBS_HEADER;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(jc.MBS_HEADER.getSize()));
    },
    getVersion: function () {
      return this.data.readInt(this.address + jc.version.address);
    },
    setVersion: function (a) {
      this.data.writeInt(this.address + jc.version.address, a);
    },
    getTypeTableHash: function () {
      return this.data.readInt(this.address + jc.typeTableHash.address);
    },
    setTypeTableHash: function (a) {
      this.data.writeInt(this.address + jc.typeTableHash.address, a);
    },
    getTypeTablePointer: function () {
      return this.data.readInt(this.address + jc.typeTablePointer.address);
    },
    setTypeTablePointer: function (a) {
      this.data.writeInt(this.address + jc.typeTablePointer.address, a);
    },
    getStringTablePointer: function () {
      return this.data.readInt(this.address + jc.stringTablePointer.address);
    },
    setStringTablePointer: function (a) {
      this.data.writeInt(this.address + jc.stringTablePointer.address, a);
    },
    getRoot: function () {
      return be.readDynamic(this.data, this.address + jc.root.address);
    },
    setRoot: function (a) {
      be.writeDynamic(this.data, this.address + jc.root.address, a);
    },
    __class__: jc,
  });
  var kb = function (a) {
    Xf.call(this, a, 0);
    this.fields = [];
  };
  p["mbs.core.ComposedType"] = kb;
  kb.__name__ = ["mbs", "core", "ComposedType"];
  kb.__super__ = Xf;
  kb.prototype = x(Xf.prototype, {
    parent: null,
    fields: null,
    inherit: function (a) {
      this.parent = a;
      this.size = a.getSize();
    },
    createField: function (a, b) {
      a = new bj(a, b, this.size);
      this.fields.push(a);
      this.size += b.getSize();
      return a;
    },
    getParent: function () {
      return this.parent;
    },
    getFields: function () {
      return this.fields;
    },
    instantiator: null,
    setInstantiator: function (a) {
      this.instantiator = a;
    },
    createInstance: function (a) {
      return null != this.instantiator
        ? this.instantiator(a)
        : Xf.prototype.createInstance.call(this, a);
    },
    createList: function (a) {
      return new Ja(a, this, this.createInstance(a));
    },
    __class__: kb,
  });
  var Gc = function (a) {
    this.data = a;
  };
  p["mbs.core.header.MbsTypeInfo"] = Gc;
  Gc.__name__ = ["mbs", "core", "header", "MbsTypeInfo"];
  Gc.initializeType = function () {
    null == Gc.MBS_TYPE_INFO &&
      ((Gc.MBS_TYPE_INFO = new kb("MbsTypeInfo")),
      Gc.MBS_TYPE_INFO.setInstantiator(function (a) {
        return new Gc(a);
      }),
      (Gc.$name = Gc.MBS_TYPE_INFO.createField("name", z.STRING)),
      (Gc.parent = Gc.MBS_TYPE_INFO.createField("parent", z.STRING)),
      (Gc.fieldsPointer = Gc.MBS_TYPE_INFO.createField(
        "fieldsPointer",
        z.INTEGER
      )),
      (Gc.size = Gc.MBS_TYPE_INFO.createField("size", z.INTEGER)));
  };
  Gc.new_MbsTypeInfo_list = function (a) {
    return new Ja(a, Gc.MBS_TYPE_INFO, new Gc(a));
  };
  Gc.__super__ = Ta;
  Gc.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Gc.MBS_TYPE_INFO;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Gc.MBS_TYPE_INFO.getSize()));
    },
    getName: function () {
      return this.data.readString(this.address + Gc.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + Gc.$name.address, a);
    },
    getParent: function () {
      return this.data.readString(this.address + Gc.parent.address);
    },
    setParent: function (a) {
      this.data.writeString(this.address + Gc.parent.address, a);
    },
    getFieldsPointer: function () {
      return this.data.readInt(this.address + Gc.fieldsPointer.address);
    },
    setFieldsPointer: function (a) {
      this.data.writeInt(this.address + Gc.fieldsPointer.address, a);
    },
    getSize: function () {
      return this.data.readInt(this.address + Gc.size.address);
    },
    setSize: function (a) {
      this.data.writeInt(this.address + Gc.size.address, a);
    },
    __class__: Gc,
  });
  var $c = function (a) {
    this.data = a;
  };
  p["mbs.core.header.MbsFieldInfo"] = $c;
  $c.__name__ = ["mbs", "core", "header", "MbsFieldInfo"];
  $c.initializeType = function () {
    null == $c.MBS_FIELD_INFO &&
      (($c.MBS_FIELD_INFO = new kb("MbsFieldInfo")),
      $c.MBS_FIELD_INFO.setInstantiator(function (a) {
        return new $c(a);
      }),
      ($c.$name = $c.MBS_FIELD_INFO.createField("name", z.STRING)),
      ($c.type = $c.MBS_FIELD_INFO.createField("type", z.STRING)),
      ($c.fieldAddress = $c.MBS_FIELD_INFO.createField(
        "fieldAddress",
        z.INTEGER
      )));
  };
  $c.new_MbsFieldInfo_list = function (a) {
    return new Ja(a, $c.MBS_FIELD_INFO, new $c(a));
  };
  $c.__super__ = Ta;
  $c.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return $c.MBS_FIELD_INFO;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate($c.MBS_FIELD_INFO.getSize()));
    },
    getName: function () {
      return this.data.readString(this.address + $c.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + $c.$name.address, a);
    },
    getType: function () {
      return this.data.readString(this.address + $c.type.address);
    },
    setType: function (a) {
      this.data.writeString(this.address + $c.type.address, a);
    },
    getFieldAddress: function () {
      return this.data.readInt(this.address + $c.fieldAddress.address);
    },
    setFieldAddress: function (a) {
      this.data.writeInt(this.address + $c.fieldAddress.address, a);
    },
    __class__: $c,
  });
  var wi = function () {
    this.types = wi.basicTypes.slice();
    this.typecodes = new qd();
    this.addTypes();
    for (var a = 0, b = 0, c = this.types; b < c.length; ) {
      var d = c[b];
      ++b;
      this.typecodes.set(d, a++);
    }
  };
  p["mbs.core.MbsTypedefSet"] = wi;
  wi.__name__ = ["mbs", "core", "MbsTypedefSet"];
  wi.prototype = {
    types: null,
    typecodes: null,
    getTypes: function () {
      return this.types;
    },
    addTypes: function () {},
    getHash: function () {
      return 0;
    },
    getTypecode: function (a) {
      return this.typecodes.h[a.__id__];
    },
    getType: function (a) {
      return this.types[a];
    },
    __class__: wi,
  };
  var Ff = function () {
    wi.call(this);
  };
  p["com.stencyl.io.mbs.Typedefs"] = Ff;
  Ff.__name__ = ["com", "stencyl", "io", "mbs", "Typedefs"];
  Ff.get = function () {
    null == Ff.instance && (Ff.instance = new Ff());
    return Ff.instance;
  };
  Ff.__super__ = wi;
  Ff.prototype = x(wi.prototype, {
    addTypes: function () {
      nb.initializeType();
      this.types.push(nb.MBS_RESOURCE);
      ob.initializeType();
      this.types.push(ob.MBS_BACKGROUND);
      ub.initializeType();
      this.types.push(ub.MBS_CUSTOM_BLOCK);
      zd.initializeType();
      this.types.push(zd.MBS_BLANK);
      Wb.initializeType();
      this.types.push(Wb.MBS_FONT);
      lc.initializeType();
      this.types.push(lc.MBS_MUSIC);
      Ha.initializeType();
      this.types.push(Ha.MBS_ACTOR_TYPE);
      bc.initializeType();
      this.types.push(bc.MBS_SPRITE);
      Sa.initializeType();
      this.types.push(Sa.MBS_ANIMATION);
      Ma.initializeType();
      this.types.push(Ma.MBS_ANIM_SHAPE);
      fc.initializeType();
      this.types.push(fc.MBS_GAME);
      Ac.initializeType();
      this.types.push(Ac.MBS_ATLAS);
      sd.initializeType();
      this.types.push(sd.MBS_COLLISION_SHAPE);
      Ad.initializeType();
      this.types.push(Ad.MBS_COLLISION_GROUP);
      Hd.initializeType();
      this.types.push(Hd.MBS_COLLISION_PAIR);
      Mc.initializeType();
      this.types.push(Mc.MBS_SCENE_HEADER);
      Xb.initializeType();
      this.types.push(Xb.MBS_TILESET);
      Fb.initializeType();
      this.types.push(Fb.MBS_TILE);
      aa.initializeType();
      this.types.push(aa.MBS_SCENE);
      Qa.initializeType();
      this.types.push(Qa.MBS_ACTOR_INSTANCE);
      de.initializeType();
      this.types.push(de.MBS_COLOR_BACKGROUND);
      Nc.initializeType();
      this.types.push(Nc.MBS_GRADIENT_BACKGROUND);
      Ya.initializeType();
      this.types.push(Ya.MBS_LAYER);
      ee.initializeType();
      this.types.push(ee.MBS_INTERACTIVE_LAYER);
      Bd.initializeType();
      this.types.push(Bd.MBS_IMAGE_BACKGROUND);
      Gb.initializeType();
      this.types.push(Gb.MBS_JOINT);
      Cd.initializeType();
      this.types.push(Cd.MBS_STICK_JOINT);
      Yb.initializeType();
      this.types.push(Yb.MBS_HINGE_JOINT);
      Hb.initializeType();
      this.types.push(Hb.MBS_SLIDING_JOINT);
      Pb.initializeType();
      this.types.push(Pb.MBS_REGION);
      Yd.initializeType();
      this.types.push(Yd.MBS_TERRAIN_REGION);
      gc.initializeType();
      this.types.push(gc.MBS_POINT);
      Ud.initializeType();
      this.types.push(Ud.MBS_SHAPE);
      Jd.initializeType();
      this.types.push(Jd.MBS_CIRCLE);
      Lc.initializeType();
      this.types.push(Lc.MBS_POLYGON);
      td.initializeType();
      this.types.push(td.MBS_POLY_REGION);
      fe.initializeType();
      this.types.push(fe.MBS_WIREFRAME);
      Ua.initializeType();
      this.types.push(Ua.MBS_SNIPPET_DEF);
      xb.initializeType();
      this.types.push(xb.MBS_ATTRIBUTE_DEF);
      ad.initializeType();
      this.types.push(ad.MBS_BLOCK);
      Zb.initializeType();
      this.types.push(Zb.MBS_EVENT);
      mc.initializeType();
      this.types.push(mc.MBS_SNIPPET);
      Oc.initializeType();
      this.types.push(Oc.MBS_ATTRIBUTE);
      Tc.initializeType();
      this.types.push(Tc.MBS_MAP_ELEMENT);
      Sb.initializeType();
      this.types.push(Sb.MBS_AUTOTILE_FORMAT);
      bd.initializeType();
      this.types.push(bd.MBS_CORNERS);
    },
    getHash: function () {
      return 1466594936;
    },
    __class__: Ff,
  });
  var Ha = function (a) {
    this.data = a;
    this._snippets = new Ja(a, mc.MBS_SNIPPET, new mc(a));
  };
  p["com.stencyl.io.mbs.actortype.MbsActorType"] = Ha;
  Ha.__name__ = "com stencyl io mbs actortype MbsActorType".split(" ");
  Ha.initializeType = function () {
    null == Ha.MBS_ACTOR_TYPE &&
      (nb.initializeType(),
      (Ha.MBS_ACTOR_TYPE = new kb("MbsActorType")),
      Ha.MBS_ACTOR_TYPE.setInstantiator(function (a) {
        return new Ha(a);
      }),
      Ha.MBS_ACTOR_TYPE.inherit(nb.MBS_RESOURCE),
      (Ha.angularDamping = Ha.MBS_ACTOR_TYPE.createField(
        "angularDamping",
        z.FLOAT
      )),
      (Ha.autoScale = Ha.MBS_ACTOR_TYPE.createField("autoScale", z.BOOLEAN)),
      (Ha.bodyType = Ha.MBS_ACTOR_TYPE.createField("bodyType", z.INTEGER)),
      (Ha.continuous = Ha.MBS_ACTOR_TYPE.createField("continuous", z.BOOLEAN)),
      (Ha.eventSnippetID = Ha.MBS_ACTOR_TYPE.createField(
        "eventSnippetID",
        z.INTEGER
      )),
      (Ha.fixedRotation = Ha.MBS_ACTOR_TYPE.createField(
        "fixedRotation",
        z.BOOLEAN
      )),
      (Ha.friction = Ha.MBS_ACTOR_TYPE.createField("friction", z.FLOAT)),
      (Ha.groupID = Ha.MBS_ACTOR_TYPE.createField("groupID", z.INTEGER)),
      (Ha.ignoreGravity = Ha.MBS_ACTOR_TYPE.createField(
        "ignoreGravity",
        z.BOOLEAN
      )),
      (Ha.inertia = Ha.MBS_ACTOR_TYPE.createField("inertia", z.FLOAT)),
      (Ha.linearDamping = Ha.MBS_ACTOR_TYPE.createField(
        "linearDamping",
        z.FLOAT
      )),
      (Ha.mass = Ha.MBS_ACTOR_TYPE.createField("mass", z.FLOAT)),
      (Ha.pausable = Ha.MBS_ACTOR_TYPE.createField("pausable", z.BOOLEAN)),
      (Ha.physicsMode = Ha.MBS_ACTOR_TYPE.createField(
        "physicsMode",
        z.INTEGER
      )),
      (Ha.restitution = Ha.MBS_ACTOR_TYPE.createField("restitution", z.FLOAT)),
      (Ha.sprite = Ha.MBS_ACTOR_TYPE.createField("sprite", z.INTEGER)),
      (Ha.isStatic = Ha.MBS_ACTOR_TYPE.createField("isStatic", z.BOOLEAN)),
      (Ha.snippets = Ha.MBS_ACTOR_TYPE.createField("snippets", z.LIST)));
  };
  Ha.new_MbsActorType_list = function (a) {
    return new Ja(a, Ha.MBS_ACTOR_TYPE, new Ha(a));
  };
  Ha.__super__ = nb;
  Ha.prototype = x(nb.prototype, {
    getMbsType: function () {
      return Ha.MBS_ACTOR_TYPE;
    },
    _snippets: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(Ha.MBS_ACTOR_TYPE.getSize()));
    },
    getAngularDamping: function () {
      return this.data.readFloat(this.address + Ha.angularDamping.address);
    },
    setAngularDamping: function (a) {
      this.data.writeFloat(this.address + Ha.angularDamping.address, a);
    },
    getAutoScale: function () {
      return this.data.readBool(this.address + Ha.autoScale.address);
    },
    setAutoScale: function (a) {
      this.data.writeBool(this.address + Ha.autoScale.address, a);
    },
    getBodyType: function () {
      return this.data.readInt(this.address + Ha.bodyType.address);
    },
    setBodyType: function (a) {
      this.data.writeInt(this.address + Ha.bodyType.address, a);
    },
    getContinuous: function () {
      return this.data.readBool(this.address + Ha.continuous.address);
    },
    setContinuous: function (a) {
      this.data.writeBool(this.address + Ha.continuous.address, a);
    },
    getEventSnippetID: function () {
      return this.data.readInt(this.address + Ha.eventSnippetID.address);
    },
    setEventSnippetID: function (a) {
      this.data.writeInt(this.address + Ha.eventSnippetID.address, a);
    },
    getFixedRotation: function () {
      return this.data.readBool(this.address + Ha.fixedRotation.address);
    },
    setFixedRotation: function (a) {
      this.data.writeBool(this.address + Ha.fixedRotation.address, a);
    },
    getFriction: function () {
      return this.data.readFloat(this.address + Ha.friction.address);
    },
    setFriction: function (a) {
      this.data.writeFloat(this.address + Ha.friction.address, a);
    },
    getGroupID: function () {
      return this.data.readInt(this.address + Ha.groupID.address);
    },
    setGroupID: function (a) {
      this.data.writeInt(this.address + Ha.groupID.address, a);
    },
    getIgnoreGravity: function () {
      return this.data.readBool(this.address + Ha.ignoreGravity.address);
    },
    setIgnoreGravity: function (a) {
      this.data.writeBool(this.address + Ha.ignoreGravity.address, a);
    },
    getInertia: function () {
      return this.data.readFloat(this.address + Ha.inertia.address);
    },
    setInertia: function (a) {
      this.data.writeFloat(this.address + Ha.inertia.address, a);
    },
    getLinearDamping: function () {
      return this.data.readFloat(this.address + Ha.linearDamping.address);
    },
    setLinearDamping: function (a) {
      this.data.writeFloat(this.address + Ha.linearDamping.address, a);
    },
    getMass: function () {
      return this.data.readFloat(this.address + Ha.mass.address);
    },
    setMass: function (a) {
      this.data.writeFloat(this.address + Ha.mass.address, a);
    },
    getPausable: function () {
      return this.data.readBool(this.address + Ha.pausable.address);
    },
    setPausable: function (a) {
      this.data.writeBool(this.address + Ha.pausable.address, a);
    },
    getPhysicsMode: function () {
      return this.data.readInt(this.address + Ha.physicsMode.address);
    },
    setPhysicsMode: function (a) {
      this.data.writeInt(this.address + Ha.physicsMode.address, a);
    },
    getRestitution: function () {
      return this.data.readFloat(this.address + Ha.restitution.address);
    },
    setRestitution: function (a) {
      this.data.writeFloat(this.address + Ha.restitution.address, a);
    },
    getSprite: function () {
      return this.data.readInt(this.address + Ha.sprite.address);
    },
    setSprite: function (a) {
      this.data.writeInt(this.address + Ha.sprite.address, a);
    },
    getIsStatic: function () {
      return this.data.readBool(this.address + Ha.isStatic.address);
    },
    setIsStatic: function (a) {
      this.data.writeBool(this.address + Ha.isStatic.address, a);
    },
    getSnippets: function () {
      this._snippets.setAddress(
        this.data.readInt(this.address + Ha.snippets.address)
      );
      return this._snippets;
    },
    createSnippets: function (a) {
      this._snippets.allocateNew(a);
      this.data.writeInt(
        this.address + Ha.snippets.address,
        this._snippets.getAddress()
      );
      return this._snippets;
    },
    __class__: Ha,
  });
  var Ma = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.actortype.MbsAnimShape"] = Ma;
  Ma.__name__ = "com stencyl io mbs actortype MbsAnimShape".split(" ");
  Ma.initializeType = function () {
    null == Ma.MBS_ANIM_SHAPE &&
      ((Ma.MBS_ANIM_SHAPE = new kb("MbsAnimShape")),
      Ma.MBS_ANIM_SHAPE.setInstantiator(function (a) {
        return new Ma(a);
      }),
      (Ma.shape = Ma.MBS_ANIM_SHAPE.createField("shape", z.DYNAMIC)),
      (Ma.density = Ma.MBS_ANIM_SHAPE.createField("density", z.FLOAT)),
      (Ma.friction = Ma.MBS_ANIM_SHAPE.createField("friction", z.FLOAT)),
      (Ma.groupID = Ma.MBS_ANIM_SHAPE.createField("groupID", z.INTEGER)),
      (Ma.id = Ma.MBS_ANIM_SHAPE.createField("id", z.INTEGER)),
      (Ma.$name = Ma.MBS_ANIM_SHAPE.createField("name", z.STRING)),
      (Ma.restitution = Ma.MBS_ANIM_SHAPE.createField("restitution", z.FLOAT)),
      (Ma.sensor = Ma.MBS_ANIM_SHAPE.createField("sensor", z.BOOLEAN)));
  };
  Ma.new_MbsAnimShape_list = function (a) {
    return new Ja(a, Ma.MBS_ANIM_SHAPE, new Ma(a));
  };
  Ma.__super__ = Ta;
  Ma.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Ma.MBS_ANIM_SHAPE;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Ma.MBS_ANIM_SHAPE.getSize()));
    },
    getShape: function () {
      return be.readDynamic(this.data, this.address + Ma.shape.address);
    },
    setShape: function (a) {
      be.writeDynamic(this.data, this.address + Ma.shape.address, a);
    },
    getDensity: function () {
      return this.data.readFloat(this.address + Ma.density.address);
    },
    setDensity: function (a) {
      this.data.writeFloat(this.address + Ma.density.address, a);
    },
    getFriction: function () {
      return this.data.readFloat(this.address + Ma.friction.address);
    },
    setFriction: function (a) {
      this.data.writeFloat(this.address + Ma.friction.address, a);
    },
    getGroupID: function () {
      return this.data.readInt(this.address + Ma.groupID.address);
    },
    setGroupID: function (a) {
      this.data.writeInt(this.address + Ma.groupID.address, a);
    },
    getId: function () {
      return this.data.readInt(this.address + Ma.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + Ma.id.address, a);
    },
    getName: function () {
      return this.data.readString(this.address + Ma.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + Ma.$name.address, a);
    },
    getRestitution: function () {
      return this.data.readFloat(this.address + Ma.restitution.address);
    },
    setRestitution: function (a) {
      this.data.writeFloat(this.address + Ma.restitution.address, a);
    },
    getSensor: function () {
      return this.data.readBool(this.address + Ma.sensor.address);
    },
    setSensor: function (a) {
      this.data.writeBool(this.address + Ma.sensor.address, a);
    },
    __class__: Ma,
  });
  var Sa = function (a) {
    this.data = a;
    this._durations = new Wf(a);
    this._shapes = new Ja(a, Ma.MBS_ANIM_SHAPE, new Ma(a));
  };
  p["com.stencyl.io.mbs.actortype.MbsAnimation"] = Sa;
  Sa.__name__ = "com stencyl io mbs actortype MbsAnimation".split(" ");
  Sa.initializeType = function () {
    null == Sa.MBS_ANIMATION &&
      ((Sa.MBS_ANIMATION = new kb("MbsAnimation")),
      Sa.MBS_ANIMATION.setInstantiator(function (a) {
        return new Sa(a);
      }),
      (Sa.across = Sa.MBS_ANIMATION.createField("across", z.INTEGER)),
      (Sa.down = Sa.MBS_ANIMATION.createField("down", z.INTEGER)),
      (Sa.durations = Sa.MBS_ANIMATION.createField("durations", z.LIST)),
      (Sa.height = Sa.MBS_ANIMATION.createField("height", z.INTEGER)),
      (Sa.id = Sa.MBS_ANIMATION.createField("id", z.INTEGER)),
      (Sa.loop = Sa.MBS_ANIMATION.createField("loop", z.BOOLEAN)),
      (Sa.$name = Sa.MBS_ANIMATION.createField("name", z.STRING)),
      (Sa.numFrames = Sa.MBS_ANIMATION.createField("numFrames", z.INTEGER)),
      (Sa.originX = Sa.MBS_ANIMATION.createField("originX", z.INTEGER)),
      (Sa.originY = Sa.MBS_ANIMATION.createField("originY", z.INTEGER)),
      (Sa.sync = Sa.MBS_ANIMATION.createField("sync", z.BOOLEAN)),
      (Sa.version = Sa.MBS_ANIMATION.createField("version", z.INTEGER)),
      (Sa.width = Sa.MBS_ANIMATION.createField("width", z.INTEGER)),
      (Sa.shapes = Sa.MBS_ANIMATION.createField("shapes", z.LIST)));
  };
  Sa.new_MbsAnimation_list = function (a) {
    return new Ja(a, Sa.MBS_ANIMATION, new Sa(a));
  };
  Sa.__super__ = Ta;
  Sa.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Sa.MBS_ANIMATION;
    },
    _durations: null,
    _shapes: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(Sa.MBS_ANIMATION.getSize()));
    },
    getAcross: function () {
      return this.data.readInt(this.address + Sa.across.address);
    },
    setAcross: function (a) {
      this.data.writeInt(this.address + Sa.across.address, a);
    },
    getDown: function () {
      return this.data.readInt(this.address + Sa.down.address);
    },
    setDown: function (a) {
      this.data.writeInt(this.address + Sa.down.address, a);
    },
    getDurations: function () {
      this._durations.setAddress(
        this.data.readInt(this.address + Sa.durations.address)
      );
      return this._durations;
    },
    createDurations: function (a) {
      this._durations.allocateNew(a);
      this.data.writeInt(
        this.address + Sa.durations.address,
        this._durations.getAddress()
      );
      return this._durations;
    },
    getHeight: function () {
      return this.data.readInt(this.address + Sa.height.address);
    },
    setHeight: function (a) {
      this.data.writeInt(this.address + Sa.height.address, a);
    },
    getId: function () {
      return this.data.readInt(this.address + Sa.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + Sa.id.address, a);
    },
    getLoop: function () {
      return this.data.readBool(this.address + Sa.loop.address);
    },
    setLoop: function (a) {
      this.data.writeBool(this.address + Sa.loop.address, a);
    },
    getName: function () {
      return this.data.readString(this.address + Sa.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + Sa.$name.address, a);
    },
    getNumFrames: function () {
      return this.data.readInt(this.address + Sa.numFrames.address);
    },
    setNumFrames: function (a) {
      this.data.writeInt(this.address + Sa.numFrames.address, a);
    },
    getOriginX: function () {
      return this.data.readInt(this.address + Sa.originX.address);
    },
    setOriginX: function (a) {
      this.data.writeInt(this.address + Sa.originX.address, a);
    },
    getOriginY: function () {
      return this.data.readInt(this.address + Sa.originY.address);
    },
    setOriginY: function (a) {
      this.data.writeInt(this.address + Sa.originY.address, a);
    },
    getSync: function () {
      return this.data.readBool(this.address + Sa.sync.address);
    },
    setSync: function (a) {
      this.data.writeBool(this.address + Sa.sync.address, a);
    },
    getVersion: function () {
      return this.data.readInt(this.address + Sa.version.address);
    },
    setVersion: function (a) {
      this.data.writeInt(this.address + Sa.version.address, a);
    },
    getWidth: function () {
      return this.data.readInt(this.address + Sa.width.address);
    },
    setWidth: function (a) {
      this.data.writeInt(this.address + Sa.width.address, a);
    },
    getShapes: function () {
      this._shapes.setAddress(
        this.data.readInt(this.address + Sa.shapes.address)
      );
      return this._shapes;
    },
    createShapes: function (a) {
      this._shapes.allocateNew(a);
      this.data.writeInt(
        this.address + Sa.shapes.address,
        this._shapes.getAddress()
      );
      return this._shapes;
    },
    __class__: Sa,
  });
  var bc = function (a) {
    this.data = a;
    this._animations = new Ja(a, Sa.MBS_ANIMATION, new Sa(a));
  };
  p["com.stencyl.io.mbs.actortype.MbsSprite"] = bc;
  bc.__name__ = "com stencyl io mbs actortype MbsSprite".split(" ");
  bc.initializeType = function () {
    null == bc.MBS_SPRITE &&
      (nb.initializeType(),
      (bc.MBS_SPRITE = new kb("MbsSprite")),
      bc.MBS_SPRITE.setInstantiator(function (a) {
        return new bc(a);
      }),
      bc.MBS_SPRITE.inherit(nb.MBS_RESOURCE),
      (bc.defaultAnimation = bc.MBS_SPRITE.createField(
        "defaultAnimation",
        z.INTEGER
      )),
      (bc.readableImages = bc.MBS_SPRITE.createField(
        "readableImages",
        z.BOOLEAN
      )),
      (bc.height = bc.MBS_SPRITE.createField("height", z.INTEGER)),
      (bc.width = bc.MBS_SPRITE.createField("width", z.INTEGER)),
      (bc.animations = bc.MBS_SPRITE.createField("animations", z.LIST)));
  };
  bc.new_MbsSprite_list = function (a) {
    return new Ja(a, bc.MBS_SPRITE, new bc(a));
  };
  bc.__super__ = nb;
  bc.prototype = x(nb.prototype, {
    getMbsType: function () {
      return bc.MBS_SPRITE;
    },
    _animations: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(bc.MBS_SPRITE.getSize()));
    },
    getDefaultAnimation: function () {
      return this.data.readInt(this.address + bc.defaultAnimation.address);
    },
    setDefaultAnimation: function (a) {
      this.data.writeInt(this.address + bc.defaultAnimation.address, a);
    },
    getReadableImages: function () {
      return this.data.readBool(this.address + bc.readableImages.address);
    },
    setReadableImages: function (a) {
      this.data.writeBool(this.address + bc.readableImages.address, a);
    },
    getHeight: function () {
      return this.data.readInt(this.address + bc.height.address);
    },
    setHeight: function (a) {
      this.data.writeInt(this.address + bc.height.address, a);
    },
    getWidth: function () {
      return this.data.readInt(this.address + bc.width.address);
    },
    setWidth: function (a) {
      this.data.writeInt(this.address + bc.width.address, a);
    },
    getAnimations: function () {
      this._animations.setAddress(
        this.data.readInt(this.address + bc.animations.address)
      );
      return this._animations;
    },
    createAnimations: function (a) {
      this._animations.allocateNew(a);
      this.data.writeInt(
        this.address + bc.animations.address,
        this._animations.getAddress()
      );
      return this._animations;
    },
    __class__: bc,
  });
  var Ac = function (a) {
    this.data = a;
    this._members = new Wf(a);
  };
  p["com.stencyl.io.mbs.game.MbsAtlas"] = Ac;
  Ac.__name__ = "com stencyl io mbs game MbsAtlas".split(" ");
  Ac.initializeType = function () {
    null == Ac.MBS_ATLAS &&
      ((Ac.MBS_ATLAS = new kb("MbsAtlas")),
      Ac.MBS_ATLAS.setInstantiator(function (a) {
        return new Ac(a);
      }),
      (Ac.id = Ac.MBS_ATLAS.createField("id", z.INTEGER)),
      (Ac.$name = Ac.MBS_ATLAS.createField("name", z.STRING)),
      (Ac.members = Ac.MBS_ATLAS.createField("members", z.LIST)),
      (Ac.allScenes = Ac.MBS_ATLAS.createField("allScenes", z.BOOLEAN)));
  };
  Ac.new_MbsAtlas_list = function (a) {
    return new Ja(a, Ac.MBS_ATLAS, new Ac(a));
  };
  Ac.__super__ = Ta;
  Ac.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Ac.MBS_ATLAS;
    },
    _members: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(Ac.MBS_ATLAS.getSize()));
    },
    getId: function () {
      return this.data.readInt(this.address + Ac.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + Ac.id.address, a);
    },
    getName: function () {
      return this.data.readString(this.address + Ac.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + Ac.$name.address, a);
    },
    getMembers: function () {
      this._members.setAddress(
        this.data.readInt(this.address + Ac.members.address)
      );
      return this._members;
    },
    createMembers: function (a) {
      this._members.allocateNew(a);
      this.data.writeInt(
        this.address + Ac.members.address,
        this._members.getAddress()
      );
      return this._members;
    },
    getAllScenes: function () {
      return this.data.readBool(this.address + Ac.allScenes.address);
    },
    setAllScenes: function (a) {
      this.data.writeBool(this.address + Ac.allScenes.address, a);
    },
    __class__: Ac,
  });
  var Ad = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.game.MbsCollisionGroup"] = Ad;
  Ad.__name__ = "com stencyl io mbs game MbsCollisionGroup".split(" ");
  Ad.initializeType = function () {
    null == Ad.MBS_COLLISION_GROUP &&
      ((Ad.MBS_COLLISION_GROUP = new kb("MbsCollisionGroup")),
      Ad.MBS_COLLISION_GROUP.setInstantiator(function (a) {
        return new Ad(a);
      }),
      (Ad.id = Ad.MBS_COLLISION_GROUP.createField("id", z.INTEGER)),
      (Ad.$name = Ad.MBS_COLLISION_GROUP.createField("name", z.STRING)));
  };
  Ad.new_MbsCollisionGroup_list = function (a) {
    return new Ja(a, Ad.MBS_COLLISION_GROUP, new Ad(a));
  };
  Ad.__super__ = Ta;
  Ad.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Ad.MBS_COLLISION_GROUP;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Ad.MBS_COLLISION_GROUP.getSize()));
    },
    getId: function () {
      return this.data.readInt(this.address + Ad.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + Ad.id.address, a);
    },
    getName: function () {
      return this.data.readString(this.address + Ad.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + Ad.$name.address, a);
    },
    __class__: Ad,
  });
  var Hd = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.game.MbsCollisionPair"] = Hd;
  Hd.__name__ = "com stencyl io mbs game MbsCollisionPair".split(" ");
  Hd.initializeType = function () {
    null == Hd.MBS_COLLISION_PAIR &&
      ((Hd.MBS_COLLISION_PAIR = new kb("MbsCollisionPair")),
      Hd.MBS_COLLISION_PAIR.setInstantiator(function (a) {
        return new Hd(a);
      }),
      (Hd.group1 = Hd.MBS_COLLISION_PAIR.createField("group1", z.INTEGER)),
      (Hd.group2 = Hd.MBS_COLLISION_PAIR.createField("group2", z.INTEGER)));
  };
  Hd.new_MbsCollisionPair_list = function (a) {
    return new Ja(a, Hd.MBS_COLLISION_PAIR, new Hd(a));
  };
  Hd.__super__ = Ta;
  Hd.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Hd.MBS_COLLISION_PAIR;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Hd.MBS_COLLISION_PAIR.getSize()));
    },
    getGroup1: function () {
      return this.data.readInt(this.address + Hd.group1.address);
    },
    setGroup1: function (a) {
      this.data.writeInt(this.address + Hd.group1.address, a);
    },
    getGroup2: function () {
      return this.data.readInt(this.address + Hd.group2.address);
    },
    setGroup2: function (a) {
      this.data.writeInt(this.address + Hd.group2.address, a);
    },
    __class__: Hd,
  });
  var sd = function (a) {
    this.data = a;
    this._points = new Ja(a, gc.MBS_POINT, new gc(a));
  };
  p["com.stencyl.io.mbs.game.MbsCollisionShape"] = sd;
  sd.__name__ = "com stencyl io mbs game MbsCollisionShape".split(" ");
  sd.initializeType = function () {
    null == sd.MBS_COLLISION_SHAPE &&
      ((sd.MBS_COLLISION_SHAPE = new kb("MbsCollisionShape")),
      sd.MBS_COLLISION_SHAPE.setInstantiator(function (a) {
        return new sd(a);
      }),
      (sd.id = sd.MBS_COLLISION_SHAPE.createField("id", z.INTEGER)),
      (sd.points = sd.MBS_COLLISION_SHAPE.createField("points", z.LIST)));
  };
  sd.new_MbsCollisionShape_list = function (a) {
    return new Ja(a, sd.MBS_COLLISION_SHAPE, new sd(a));
  };
  sd.__super__ = Ta;
  sd.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return sd.MBS_COLLISION_SHAPE;
    },
    _points: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(sd.MBS_COLLISION_SHAPE.getSize()));
    },
    getId: function () {
      return this.data.readInt(this.address + sd.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + sd.id.address, a);
    },
    getPoints: function () {
      this._points.setAddress(
        this.data.readInt(this.address + sd.points.address)
      );
      return this._points;
    },
    createPoints: function (a) {
      this._points.allocateNew(a);
      this.data.writeInt(
        this.address + sd.points.address,
        this._points.getAddress()
      );
      return this._points;
    },
    __class__: sd,
  });
  var fc = function (a) {
    this.data = a;
    this._shapes = new Ja(a, sd.MBS_COLLISION_SHAPE, new sd(a));
    this._atlases = new Ja(a, Ac.MBS_ATLAS, new Ac(a));
    this._autotileFormats = new Ja(a, Sb.MBS_AUTOTILE_FORMAT, new Sb(a));
    this._groups = new Ja(a, Ad.MBS_COLLISION_GROUP, new Ad(a));
    this._cgroups = new Ja(a, Hd.MBS_COLLISION_PAIR, new Hd(a));
    this._gameAttributes = new Ja(a, Tc.MBS_MAP_ELEMENT, new Tc(a));
  };
  p["com.stencyl.io.mbs.game.MbsGame"] = fc;
  fc.__name__ = "com stencyl io mbs game MbsGame".split(" ");
  fc.initializeType = function () {
    null == fc.MBS_GAME &&
      ((fc.MBS_GAME = new kb("MbsGame")),
      fc.MBS_GAME.setInstantiator(function (a) {
        return new fc(a);
      }),
      (fc.shapes = fc.MBS_GAME.createField("shapes", z.LIST)),
      (fc.atlases = fc.MBS_GAME.createField("atlases", z.LIST)),
      (fc.autotileFormats = fc.MBS_GAME.createField("autotileFormats", z.LIST)),
      (fc.groups = fc.MBS_GAME.createField("groups", z.LIST)),
      (fc.cgroups = fc.MBS_GAME.createField("cgroups", z.LIST)),
      (fc.gameAttributes = fc.MBS_GAME.createField("gameAttributes", z.LIST)));
  };
  fc.new_MbsGame_list = function (a) {
    return new Ja(a, fc.MBS_GAME, new fc(a));
  };
  fc.__super__ = Ta;
  fc.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return fc.MBS_GAME;
    },
    _shapes: null,
    _atlases: null,
    _autotileFormats: null,
    _groups: null,
    _cgroups: null,
    _gameAttributes: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(fc.MBS_GAME.getSize()));
    },
    getShapes: function () {
      this._shapes.setAddress(
        this.data.readInt(this.address + fc.shapes.address)
      );
      return this._shapes;
    },
    createShapes: function (a) {
      this._shapes.allocateNew(a);
      this.data.writeInt(
        this.address + fc.shapes.address,
        this._shapes.getAddress()
      );
      return this._shapes;
    },
    getAtlases: function () {
      this._atlases.setAddress(
        this.data.readInt(this.address + fc.atlases.address)
      );
      return this._atlases;
    },
    createAtlases: function (a) {
      this._atlases.allocateNew(a);
      this.data.writeInt(
        this.address + fc.atlases.address,
        this._atlases.getAddress()
      );
      return this._atlases;
    },
    getAutotileFormats: function () {
      this._autotileFormats.setAddress(
        this.data.readInt(this.address + fc.autotileFormats.address)
      );
      return this._autotileFormats;
    },
    createAutotileFormats: function (a) {
      this._autotileFormats.allocateNew(a);
      this.data.writeInt(
        this.address + fc.autotileFormats.address,
        this._autotileFormats.getAddress()
      );
      return this._autotileFormats;
    },
    getGroups: function () {
      this._groups.setAddress(
        this.data.readInt(this.address + fc.groups.address)
      );
      return this._groups;
    },
    createGroups: function (a) {
      this._groups.allocateNew(a);
      this.data.writeInt(
        this.address + fc.groups.address,
        this._groups.getAddress()
      );
      return this._groups;
    },
    getCgroups: function () {
      this._cgroups.setAddress(
        this.data.readInt(this.address + fc.cgroups.address)
      );
      return this._cgroups;
    },
    createCgroups: function (a) {
      this._cgroups.allocateNew(a);
      this.data.writeInt(
        this.address + fc.cgroups.address,
        this._cgroups.getAddress()
      );
      return this._cgroups;
    },
    getGameAttributes: function () {
      this._gameAttributes.setAddress(
        this.data.readInt(this.address + fc.gameAttributes.address)
      );
      return this._gameAttributes;
    },
    createGameAttributes: function (a) {
      this._gameAttributes.allocateNew(a);
      this.data.writeInt(
        this.address + fc.gameAttributes.address,
        this._gameAttributes.getAddress()
      );
      return this._gameAttributes;
    },
    __class__: fc,
  });
  var Sb = function (a) {
    this.data = a;
    this._corners = new Ja(a, bd.MBS_CORNERS, new bd(a));
    this._flags = new Wf(a);
  };
  p["com.stencyl.io.mbs.game.autotile.MbsAutotileFormat"] = Sb;
  Sb.__name__ = "com stencyl io mbs game autotile MbsAutotileFormat".split(" ");
  Sb.initializeType = function () {
    null == Sb.MBS_AUTOTILE_FORMAT &&
      ((Sb.MBS_AUTOTILE_FORMAT = new kb("MbsAutotileFormat")),
      Sb.MBS_AUTOTILE_FORMAT.setInstantiator(function (a) {
        return new Sb(a);
      }),
      (Sb.id = Sb.MBS_AUTOTILE_FORMAT.createField("id", z.INTEGER)),
      (Sb.$name = Sb.MBS_AUTOTILE_FORMAT.createField("name", z.STRING)),
      (Sb.across = Sb.MBS_AUTOTILE_FORMAT.createField("across", z.INTEGER)),
      (Sb.down = Sb.MBS_AUTOTILE_FORMAT.createField("down", z.INTEGER)),
      (Sb.corners = Sb.MBS_AUTOTILE_FORMAT.createField("corners", z.LIST)),
      (Sb.flags = Sb.MBS_AUTOTILE_FORMAT.createField("flags", z.LIST)));
  };
  Sb.new_MbsAutotileFormat_list = function (a) {
    return new Ja(a, Sb.MBS_AUTOTILE_FORMAT, new Sb(a));
  };
  Sb.__super__ = Ta;
  Sb.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Sb.MBS_AUTOTILE_FORMAT;
    },
    _corners: null,
    _flags: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(Sb.MBS_AUTOTILE_FORMAT.getSize()));
    },
    getId: function () {
      return this.data.readInt(this.address + Sb.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + Sb.id.address, a);
    },
    getName: function () {
      return this.data.readString(this.address + Sb.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + Sb.$name.address, a);
    },
    getAcross: function () {
      return this.data.readInt(this.address + Sb.across.address);
    },
    setAcross: function (a) {
      this.data.writeInt(this.address + Sb.across.address, a);
    },
    getDown: function () {
      return this.data.readInt(this.address + Sb.down.address);
    },
    setDown: function (a) {
      this.data.writeInt(this.address + Sb.down.address, a);
    },
    getCorners: function () {
      this._corners.setAddress(
        this.data.readInt(this.address + Sb.corners.address)
      );
      return this._corners;
    },
    createCorners: function (a) {
      this._corners.allocateNew(a);
      this.data.writeInt(
        this.address + Sb.corners.address,
        this._corners.getAddress()
      );
      return this._corners;
    },
    getFlags: function () {
      this._flags.setAddress(
        this.data.readInt(this.address + Sb.flags.address)
      );
      return this._flags;
    },
    createFlags: function (a) {
      this._flags.allocateNew(a);
      this.data.writeInt(
        this.address + Sb.flags.address,
        this._flags.getAddress()
      );
      return this._flags;
    },
    __class__: Sb,
  });
  var bd = function (a) {
    this.data = a;
    this._topLeft = new gc(a);
    this._topRight = new gc(a);
    this._bottomLeft = new gc(a);
    this._bottomRight = new gc(a);
  };
  p["com.stencyl.io.mbs.game.autotile.MbsCorners"] = bd;
  bd.__name__ = "com stencyl io mbs game autotile MbsCorners".split(" ");
  bd.initializeType = function () {
    null == bd.MBS_CORNERS &&
      ((bd.MBS_CORNERS = new kb("MbsCorners")),
      bd.MBS_CORNERS.setInstantiator(function (a) {
        return new bd(a);
      }),
      (bd.topLeft = bd.MBS_CORNERS.createField("topLeft", gc.MBS_POINT)),
      (bd.topRight = bd.MBS_CORNERS.createField("topRight", gc.MBS_POINT)),
      (bd.bottomLeft = bd.MBS_CORNERS.createField("bottomLeft", gc.MBS_POINT)),
      (bd.bottomRight = bd.MBS_CORNERS.createField(
        "bottomRight",
        gc.MBS_POINT
      )));
  };
  bd.new_MbsCorners_list = function (a) {
    return new Ja(a, bd.MBS_CORNERS, new bd(a));
  };
  bd.__super__ = Ta;
  bd.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return bd.MBS_CORNERS;
    },
    _topLeft: null,
    _topRight: null,
    _bottomLeft: null,
    _bottomRight: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(bd.MBS_CORNERS.getSize()));
    },
    getTopLeft: function () {
      this._topLeft.setAddress(this.address + bd.topLeft.address);
      return this._topLeft;
    },
    getTopRight: function () {
      this._topRight.setAddress(this.address + bd.topRight.address);
      return this._topRight;
    },
    getBottomLeft: function () {
      this._bottomLeft.setAddress(this.address + bd.bottomLeft.address);
      return this._bottomLeft;
    },
    getBottomRight: function () {
      this._bottomRight.setAddress(this.address + bd.bottomRight.address);
      return this._bottomRight;
    },
    __class__: bd,
  });
  var Qa = function (a) {
    this.data = a;
    this._snippets = new Ja(a, mc.MBS_SNIPPET, new mc(a));
  };
  p["com.stencyl.io.mbs.scene.MbsActorInstance"] = Qa;
  Qa.__name__ = "com stencyl io mbs scene MbsActorInstance".split(" ");
  Qa.initializeType = function () {
    null == Qa.MBS_ACTOR_INSTANCE &&
      ((Qa.MBS_ACTOR_INSTANCE = new kb("MbsActorInstance")),
      Qa.MBS_ACTOR_INSTANCE.setInstantiator(function (a) {
        return new Qa(a);
      }),
      (Qa.angle = Qa.MBS_ACTOR_INSTANCE.createField("angle", z.FLOAT)),
      (Qa.aid = Qa.MBS_ACTOR_INSTANCE.createField("aid", z.INTEGER)),
      (Qa.customized = Qa.MBS_ACTOR_INSTANCE.createField(
        "customized",
        z.BOOLEAN
      )),
      (Qa.groupID = Qa.MBS_ACTOR_INSTANCE.createField("groupID", z.INTEGER)),
      (Qa.id = Qa.MBS_ACTOR_INSTANCE.createField("id", z.INTEGER)),
      (Qa.$name = Qa.MBS_ACTOR_INSTANCE.createField("name", z.STRING)),
      (Qa.scaleX = Qa.MBS_ACTOR_INSTANCE.createField("scaleX", z.FLOAT)),
      (Qa.scaleY = Qa.MBS_ACTOR_INSTANCE.createField("scaleY", z.FLOAT)),
      (Qa.x = Qa.MBS_ACTOR_INSTANCE.createField("x", z.INTEGER)),
      (Qa.y = Qa.MBS_ACTOR_INSTANCE.createField("y", z.INTEGER)),
      (Qa.z = Qa.MBS_ACTOR_INSTANCE.createField("z", z.INTEGER)),
      (Qa.snippets = Qa.MBS_ACTOR_INSTANCE.createField("snippets", z.LIST)));
  };
  Qa.new_MbsActorInstance_list = function (a) {
    return new Ja(a, Qa.MBS_ACTOR_INSTANCE, new Qa(a));
  };
  Qa.__super__ = Ta;
  Qa.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Qa.MBS_ACTOR_INSTANCE;
    },
    _snippets: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(Qa.MBS_ACTOR_INSTANCE.getSize()));
    },
    getAngle: function () {
      return this.data.readFloat(this.address + Qa.angle.address);
    },
    setAngle: function (a) {
      this.data.writeFloat(this.address + Qa.angle.address, a);
    },
    getAid: function () {
      return this.data.readInt(this.address + Qa.aid.address);
    },
    setAid: function (a) {
      this.data.writeInt(this.address + Qa.aid.address, a);
    },
    getCustomized: function () {
      return this.data.readBool(this.address + Qa.customized.address);
    },
    setCustomized: function (a) {
      this.data.writeBool(this.address + Qa.customized.address, a);
    },
    getGroupID: function () {
      return this.data.readInt(this.address + Qa.groupID.address);
    },
    setGroupID: function (a) {
      this.data.writeInt(this.address + Qa.groupID.address, a);
    },
    getId: function () {
      return this.data.readInt(this.address + Qa.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + Qa.id.address, a);
    },
    getName: function () {
      return this.data.readString(this.address + Qa.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + Qa.$name.address, a);
    },
    getScaleX: function () {
      return this.data.readFloat(this.address + Qa.scaleX.address);
    },
    setScaleX: function (a) {
      this.data.writeFloat(this.address + Qa.scaleX.address, a);
    },
    getScaleY: function () {
      return this.data.readFloat(this.address + Qa.scaleY.address);
    },
    setScaleY: function (a) {
      this.data.writeFloat(this.address + Qa.scaleY.address, a);
    },
    getX: function () {
      return this.data.readInt(this.address + Qa.x.address);
    },
    setX: function (a) {
      this.data.writeInt(this.address + Qa.x.address, a);
    },
    getY: function () {
      return this.data.readInt(this.address + Qa.y.address);
    },
    setY: function (a) {
      this.data.writeInt(this.address + Qa.y.address, a);
    },
    getZ: function () {
      return this.data.readInt(this.address + Qa.z.address);
    },
    setZ: function (a) {
      this.data.writeInt(this.address + Qa.z.address, a);
    },
    getSnippets: function () {
      this._snippets.setAddress(
        this.data.readInt(this.address + Qa.snippets.address)
      );
      return this._snippets;
    },
    createSnippets: function (a) {
      this._snippets.allocateNew(a);
      this.data.writeInt(
        this.address + Qa.snippets.address,
        this._snippets.getAddress()
      );
      return this._snippets;
    },
    __class__: Qa,
  });
  var aa = function (a) {
    this.data = a;
    this._actorInstances = new Ja(a, Qa.MBS_ACTOR_INSTANCE, new Qa(a));
    this._atlasMembers = new Wf(a);
    this._layers = new Qh(a);
    this._joints = new Qh(a);
    this._regions = new Ja(a, Pb.MBS_REGION, new Pb(a));
    this._snippets = new Ja(a, mc.MBS_SNIPPET, new mc(a));
    this._terrain = new Ja(a, fe.MBS_WIREFRAME, new fe(a));
    this._terrainRegions = new Ja(a, Yd.MBS_TERRAIN_REGION, new Yd(a));
  };
  p["com.stencyl.io.mbs.scene.MbsScene"] = aa;
  aa.__name__ = "com stencyl io mbs scene MbsScene".split(" ");
  aa.initializeType = function () {
    null == aa.MBS_SCENE &&
      ((aa.MBS_SCENE = new kb("MbsScene")),
      aa.MBS_SCENE.setInstantiator(function (a) {
        return new aa(a);
      }),
      (aa.retainAtlases = aa.MBS_SCENE.createField("retainAtlases", z.BOOLEAN)),
      (aa.depth = aa.MBS_SCENE.createField("depth", z.INTEGER)),
      (aa.description = aa.MBS_SCENE.createField("description", z.STRING)),
      (aa.eventSnippetID = aa.MBS_SCENE.createField(
        "eventSnippetID",
        z.INTEGER
      )),
      (aa.extendedHeight = aa.MBS_SCENE.createField(
        "extendedHeight",
        z.INTEGER
      )),
      (aa.extendedWidth = aa.MBS_SCENE.createField("extendedWidth", z.INTEGER)),
      (aa.extendedX = aa.MBS_SCENE.createField("extendedX", z.INTEGER)),
      (aa.extendedY = aa.MBS_SCENE.createField("extendedY", z.INTEGER)),
      (aa.format = aa.MBS_SCENE.createField("format", z.STRING)),
      (aa.gravityX = aa.MBS_SCENE.createField("gravityX", z.FLOAT)),
      (aa.gravityY = aa.MBS_SCENE.createField("gravityY", z.FLOAT)),
      (aa.height = aa.MBS_SCENE.createField("height", z.INTEGER)),
      (aa.id = aa.MBS_SCENE.createField("id", z.INTEGER)),
      (aa.$name = aa.MBS_SCENE.createField("name", z.STRING)),
      (aa.revision = aa.MBS_SCENE.createField("revision", z.STRING)),
      (aa.savecount = aa.MBS_SCENE.createField("savecount", z.INTEGER)),
      (aa.tileDepth = aa.MBS_SCENE.createField("tileDepth", z.INTEGER)),
      (aa.tileHeight = aa.MBS_SCENE.createField("tileHeight", z.INTEGER)),
      (aa.tileWidth = aa.MBS_SCENE.createField("tileWidth", z.INTEGER)),
      (aa.type = aa.MBS_SCENE.createField("type", z.STRING)),
      (aa.width = aa.MBS_SCENE.createField("width", z.INTEGER)),
      (aa.actorInstances = aa.MBS_SCENE.createField("actorInstances", z.LIST)),
      (aa.atlasMembers = aa.MBS_SCENE.createField("atlasMembers", z.LIST)),
      (aa.layers = aa.MBS_SCENE.createField("layers", z.LIST)),
      (aa.joints = aa.MBS_SCENE.createField("joints", z.LIST)),
      (aa.regions = aa.MBS_SCENE.createField("regions", z.LIST)),
      (aa.snippets = aa.MBS_SCENE.createField("snippets", z.LIST)),
      (aa.terrain = aa.MBS_SCENE.createField("terrain", z.LIST)),
      (aa.terrainRegions = aa.MBS_SCENE.createField("terrainRegions", z.LIST)));
  };
  aa.new_MbsScene_list = function (a) {
    return new Ja(a, aa.MBS_SCENE, new aa(a));
  };
  aa.__super__ = Ta;
  aa.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return aa.MBS_SCENE;
    },
    _actorInstances: null,
    _atlasMembers: null,
    _layers: null,
    _joints: null,
    _regions: null,
    _snippets: null,
    _terrain: null,
    _terrainRegions: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(aa.MBS_SCENE.getSize()));
    },
    getRetainAtlases: function () {
      return this.data.readBool(this.address + aa.retainAtlases.address);
    },
    setRetainAtlases: function (a) {
      this.data.writeBool(this.address + aa.retainAtlases.address, a);
    },
    getDepth: function () {
      return this.data.readInt(this.address + aa.depth.address);
    },
    setDepth: function (a) {
      this.data.writeInt(this.address + aa.depth.address, a);
    },
    getDescription: function () {
      return this.data.readString(this.address + aa.description.address);
    },
    setDescription: function (a) {
      this.data.writeString(this.address + aa.description.address, a);
    },
    getEventSnippetID: function () {
      return this.data.readInt(this.address + aa.eventSnippetID.address);
    },
    setEventSnippetID: function (a) {
      this.data.writeInt(this.address + aa.eventSnippetID.address, a);
    },
    getExtendedHeight: function () {
      return this.data.readInt(this.address + aa.extendedHeight.address);
    },
    setExtendedHeight: function (a) {
      this.data.writeInt(this.address + aa.extendedHeight.address, a);
    },
    getExtendedWidth: function () {
      return this.data.readInt(this.address + aa.extendedWidth.address);
    },
    setExtendedWidth: function (a) {
      this.data.writeInt(this.address + aa.extendedWidth.address, a);
    },
    getExtendedX: function () {
      return this.data.readInt(this.address + aa.extendedX.address);
    },
    setExtendedX: function (a) {
      this.data.writeInt(this.address + aa.extendedX.address, a);
    },
    getExtendedY: function () {
      return this.data.readInt(this.address + aa.extendedY.address);
    },
    setExtendedY: function (a) {
      this.data.writeInt(this.address + aa.extendedY.address, a);
    },
    getFormat: function () {
      return this.data.readString(this.address + aa.format.address);
    },
    setFormat: function (a) {
      this.data.writeString(this.address + aa.format.address, a);
    },
    getGravityX: function () {
      return this.data.readFloat(this.address + aa.gravityX.address);
    },
    setGravityX: function (a) {
      this.data.writeFloat(this.address + aa.gravityX.address, a);
    },
    getGravityY: function () {
      return this.data.readFloat(this.address + aa.gravityY.address);
    },
    setGravityY: function (a) {
      this.data.writeFloat(this.address + aa.gravityY.address, a);
    },
    getHeight: function () {
      return this.data.readInt(this.address + aa.height.address);
    },
    setHeight: function (a) {
      this.data.writeInt(this.address + aa.height.address, a);
    },
    getId: function () {
      return this.data.readInt(this.address + aa.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + aa.id.address, a);
    },
    getName: function () {
      return this.data.readString(this.address + aa.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + aa.$name.address, a);
    },
    getRevision: function () {
      return this.data.readString(this.address + aa.revision.address);
    },
    setRevision: function (a) {
      this.data.writeString(this.address + aa.revision.address, a);
    },
    getSavecount: function () {
      return this.data.readInt(this.address + aa.savecount.address);
    },
    setSavecount: function (a) {
      this.data.writeInt(this.address + aa.savecount.address, a);
    },
    getTileDepth: function () {
      return this.data.readInt(this.address + aa.tileDepth.address);
    },
    setTileDepth: function (a) {
      this.data.writeInt(this.address + aa.tileDepth.address, a);
    },
    getTileHeight: function () {
      return this.data.readInt(this.address + aa.tileHeight.address);
    },
    setTileHeight: function (a) {
      this.data.writeInt(this.address + aa.tileHeight.address, a);
    },
    getTileWidth: function () {
      return this.data.readInt(this.address + aa.tileWidth.address);
    },
    setTileWidth: function (a) {
      this.data.writeInt(this.address + aa.tileWidth.address, a);
    },
    getType: function () {
      return this.data.readString(this.address + aa.type.address);
    },
    setType: function (a) {
      this.data.writeString(this.address + aa.type.address, a);
    },
    getWidth: function () {
      return this.data.readInt(this.address + aa.width.address);
    },
    setWidth: function (a) {
      this.data.writeInt(this.address + aa.width.address, a);
    },
    getActorInstances: function () {
      this._actorInstances.setAddress(
        this.data.readInt(this.address + aa.actorInstances.address)
      );
      return this._actorInstances;
    },
    createActorInstances: function (a) {
      this._actorInstances.allocateNew(a);
      this.data.writeInt(
        this.address + aa.actorInstances.address,
        this._actorInstances.getAddress()
      );
      return this._actorInstances;
    },
    getAtlasMembers: function () {
      this._atlasMembers.setAddress(
        this.data.readInt(this.address + aa.atlasMembers.address)
      );
      return this._atlasMembers;
    },
    createAtlasMembers: function (a) {
      this._atlasMembers.allocateNew(a);
      this.data.writeInt(
        this.address + aa.atlasMembers.address,
        this._atlasMembers.getAddress()
      );
      return this._atlasMembers;
    },
    getLayers: function () {
      this._layers.setAddress(
        this.data.readInt(this.address + aa.layers.address)
      );
      return this._layers;
    },
    createLayers: function (a) {
      this._layers.allocateNew(a);
      this.data.writeInt(
        this.address + aa.layers.address,
        this._layers.getAddress()
      );
      return this._layers;
    },
    getJoints: function () {
      this._joints.setAddress(
        this.data.readInt(this.address + aa.joints.address)
      );
      return this._joints;
    },
    createJoints: function (a) {
      this._joints.allocateNew(a);
      this.data.writeInt(
        this.address + aa.joints.address,
        this._joints.getAddress()
      );
      return this._joints;
    },
    getRegions: function () {
      this._regions.setAddress(
        this.data.readInt(this.address + aa.regions.address)
      );
      return this._regions;
    },
    createRegions: function (a) {
      this._regions.allocateNew(a);
      this.data.writeInt(
        this.address + aa.regions.address,
        this._regions.getAddress()
      );
      return this._regions;
    },
    getSnippets: function () {
      this._snippets.setAddress(
        this.data.readInt(this.address + aa.snippets.address)
      );
      return this._snippets;
    },
    createSnippets: function (a) {
      this._snippets.allocateNew(a);
      this.data.writeInt(
        this.address + aa.snippets.address,
        this._snippets.getAddress()
      );
      return this._snippets;
    },
    getTerrain: function () {
      this._terrain.setAddress(
        this.data.readInt(this.address + aa.terrain.address)
      );
      return this._terrain;
    },
    createTerrain: function (a) {
      this._terrain.allocateNew(a);
      this.data.writeInt(
        this.address + aa.terrain.address,
        this._terrain.getAddress()
      );
      return this._terrain;
    },
    getTerrainRegions: function () {
      this._terrainRegions.setAddress(
        this.data.readInt(this.address + aa.terrainRegions.address)
      );
      return this._terrainRegions;
    },
    createTerrainRegions: function (a) {
      this._terrainRegions.allocateNew(a);
      this.data.writeInt(
        this.address + aa.terrainRegions.address,
        this._terrainRegions.getAddress()
      );
      return this._terrainRegions;
    },
    __class__: aa,
  });
  var Mc = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.scene.MbsSceneHeader"] = Mc;
  Mc.__name__ = "com stencyl io mbs scene MbsSceneHeader".split(" ");
  Mc.initializeType = function () {
    null == Mc.MBS_SCENE_HEADER &&
      ((Mc.MBS_SCENE_HEADER = new kb("MbsSceneHeader")),
      Mc.MBS_SCENE_HEADER.setInstantiator(function (a) {
        return new Mc(a);
      }),
      (Mc.id = Mc.MBS_SCENE_HEADER.createField("id", z.INTEGER)),
      (Mc.$name = Mc.MBS_SCENE_HEADER.createField("name", z.STRING)),
      (Mc.description = Mc.MBS_SCENE_HEADER.createField(
        "description",
        z.STRING
      )),
      (Mc.format = Mc.MBS_SCENE_HEADER.createField("format", z.STRING)));
  };
  Mc.new_MbsSceneHeader_list = function (a) {
    return new Ja(a, Mc.MBS_SCENE_HEADER, new Mc(a));
  };
  Mc.__super__ = Ta;
  Mc.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Mc.MBS_SCENE_HEADER;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Mc.MBS_SCENE_HEADER.getSize()));
    },
    getId: function () {
      return this.data.readInt(this.address + Mc.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + Mc.id.address, a);
    },
    getName: function () {
      return this.data.readString(this.address + Mc.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + Mc.$name.address, a);
    },
    getDescription: function () {
      return this.data.readString(this.address + Mc.description.address);
    },
    setDescription: function (a) {
      this.data.writeString(this.address + Mc.description.address, a);
    },
    getFormat: function () {
      return this.data.readString(this.address + Mc.format.address);
    },
    setFormat: function (a) {
      this.data.writeString(this.address + Mc.format.address, a);
    },
    __class__: Mc,
  });
  var Fb = function (a) {
    this.data = a;
    this._durations = new Wf(a);
    this._autotileMerge = new Wf(a);
  };
  p["com.stencyl.io.mbs.scene.MbsTile"] = Fb;
  Fb.__name__ = "com stencyl io mbs scene MbsTile".split(" ");
  Fb.initializeType = function () {
    null == Fb.MBS_TILE &&
      ((Fb.MBS_TILE = new kb("MbsTile")),
      Fb.MBS_TILE.setInstantiator(function (a) {
        return new Fb(a);
      }),
      (Fb.collision = Fb.MBS_TILE.createField("collision", z.INTEGER)),
      (Fb.metadata = Fb.MBS_TILE.createField("metadata", z.STRING)),
      (Fb.durations = Fb.MBS_TILE.createField("durations", z.LIST)),
      (Fb.frames = Fb.MBS_TILE.createField("frames", z.INTEGER)),
      (Fb.id = Fb.MBS_TILE.createField("id", z.INTEGER)),
      (Fb.order = Fb.MBS_TILE.createField("order", z.INTEGER)),
      (Fb.autotile = Fb.MBS_TILE.createField("autotile", z.INTEGER)),
      (Fb.autotileMerge = Fb.MBS_TILE.createField("autotileMerge", z.LIST)));
  };
  Fb.new_MbsTile_list = function (a) {
    return new Ja(a, Fb.MBS_TILE, new Fb(a));
  };
  Fb.__super__ = Ta;
  Fb.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Fb.MBS_TILE;
    },
    _durations: null,
    _autotileMerge: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(Fb.MBS_TILE.getSize()));
    },
    getCollision: function () {
      return this.data.readInt(this.address + Fb.collision.address);
    },
    setCollision: function (a) {
      this.data.writeInt(this.address + Fb.collision.address, a);
    },
    getMetadata: function () {
      return this.data.readString(this.address + Fb.metadata.address);
    },
    setMetadata: function (a) {
      this.data.writeString(this.address + Fb.metadata.address, a);
    },
    getDurations: function () {
      this._durations.setAddress(
        this.data.readInt(this.address + Fb.durations.address)
      );
      return this._durations;
    },
    createDurations: function (a) {
      this._durations.allocateNew(a);
      this.data.writeInt(
        this.address + Fb.durations.address,
        this._durations.getAddress()
      );
      return this._durations;
    },
    getFrames: function () {
      return this.data.readInt(this.address + Fb.frames.address);
    },
    setFrames: function (a) {
      this.data.writeInt(this.address + Fb.frames.address, a);
    },
    getId: function () {
      return this.data.readInt(this.address + Fb.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + Fb.id.address, a);
    },
    getOrder: function () {
      return this.data.readInt(this.address + Fb.order.address);
    },
    setOrder: function (a) {
      this.data.writeInt(this.address + Fb.order.address, a);
    },
    getAutotile: function () {
      return this.data.readInt(this.address + Fb.autotile.address);
    },
    setAutotile: function (a) {
      this.data.writeInt(this.address + Fb.autotile.address, a);
    },
    getAutotileMerge: function () {
      this._autotileMerge.setAddress(
        this.data.readInt(this.address + Fb.autotileMerge.address)
      );
      return this._autotileMerge;
    },
    createAutotileMerge: function (a) {
      this._autotileMerge.allocateNew(a);
      this.data.writeInt(
        this.address + Fb.autotileMerge.address,
        this._autotileMerge.getAddress()
      );
      return this._autotileMerge;
    },
    __class__: Fb,
  });
  var Xb = function (a) {
    this.data = a;
    this._tiles = new Ja(a, Fb.MBS_TILE, new Fb(a));
  };
  p["com.stencyl.io.mbs.scene.MbsTileset"] = Xb;
  Xb.__name__ = "com stencyl io mbs scene MbsTileset".split(" ");
  Xb.initializeType = function () {
    null == Xb.MBS_TILESET &&
      (nb.initializeType(),
      (Xb.MBS_TILESET = new kb("MbsTileset")),
      Xb.MBS_TILESET.setInstantiator(function (a) {
        return new Xb(a);
      }),
      Xb.MBS_TILESET.inherit(nb.MBS_RESOURCE),
      (Xb.across = Xb.MBS_TILESET.createField("across", z.INTEGER)),
      (Xb.down = Xb.MBS_TILESET.createField("down", z.INTEGER)),
      (Xb.readableImages = Xb.MBS_TILESET.createField(
        "readableImages",
        z.BOOLEAN
      )),
      (Xb.tileWidth = Xb.MBS_TILESET.createField("tileWidth", z.INTEGER)),
      (Xb.tileHeight = Xb.MBS_TILESET.createField("tileHeight", z.INTEGER)),
      (Xb.tiles = Xb.MBS_TILESET.createField("tiles", z.LIST)));
  };
  Xb.new_MbsTileset_list = function (a) {
    return new Ja(a, Xb.MBS_TILESET, new Xb(a));
  };
  Xb.__super__ = nb;
  Xb.prototype = x(nb.prototype, {
    getMbsType: function () {
      return Xb.MBS_TILESET;
    },
    _tiles: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(Xb.MBS_TILESET.getSize()));
    },
    getAcross: function () {
      return this.data.readInt(this.address + Xb.across.address);
    },
    setAcross: function (a) {
      this.data.writeInt(this.address + Xb.across.address, a);
    },
    getDown: function () {
      return this.data.readInt(this.address + Xb.down.address);
    },
    setDown: function (a) {
      this.data.writeInt(this.address + Xb.down.address, a);
    },
    getReadableImages: function () {
      return this.data.readBool(this.address + Xb.readableImages.address);
    },
    setReadableImages: function (a) {
      this.data.writeBool(this.address + Xb.readableImages.address, a);
    },
    getTileWidth: function () {
      return this.data.readInt(this.address + Xb.tileWidth.address);
    },
    setTileWidth: function (a) {
      this.data.writeInt(this.address + Xb.tileWidth.address, a);
    },
    getTileHeight: function () {
      return this.data.readInt(this.address + Xb.tileHeight.address);
    },
    setTileHeight: function (a) {
      this.data.writeInt(this.address + Xb.tileHeight.address, a);
    },
    getTiles: function () {
      this._tiles.setAddress(
        this.data.readInt(this.address + Xb.tiles.address)
      );
      return this._tiles;
    },
    createTiles: function (a) {
      this._tiles.allocateNew(a);
      this.data.writeInt(
        this.address + Xb.tiles.address,
        this._tiles.getAddress()
      );
      return this._tiles;
    },
    __class__: Xb,
  });
  var de = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.scene.layers.MbsColorBackground"] = de;
  de.__name__ = "com stencyl io mbs scene layers MbsColorBackground".split(" ");
  de.initializeType = function () {
    null == de.MBS_COLOR_BACKGROUND &&
      ((de.MBS_COLOR_BACKGROUND = new kb("MbsColorBackground")),
      de.MBS_COLOR_BACKGROUND.setInstantiator(function (a) {
        return new de(a);
      }),
      (de.color = de.MBS_COLOR_BACKGROUND.createField("color", z.INTEGER)));
  };
  de.new_MbsColorBackground_list = function (a) {
    return new Ja(a, de.MBS_COLOR_BACKGROUND, new de(a));
  };
  de.__super__ = Ta;
  de.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return de.MBS_COLOR_BACKGROUND;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(de.MBS_COLOR_BACKGROUND.getSize()));
    },
    getColor: function () {
      return this.data.readInt(this.address + de.color.address);
    },
    setColor: function (a) {
      this.data.writeInt(this.address + de.color.address, a);
    },
    __class__: de,
  });
  var Nc = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.scene.layers.MbsGradientBackground"] = Nc;
  Nc.__name__ = "com stencyl io mbs scene layers MbsGradientBackground".split(
    " "
  );
  Nc.initializeType = function () {
    null == Nc.MBS_GRADIENT_BACKGROUND &&
      ((Nc.MBS_GRADIENT_BACKGROUND = new kb("MbsGradientBackground")),
      Nc.MBS_GRADIENT_BACKGROUND.setInstantiator(function (a) {
        return new Nc(a);
      }),
      (Nc.color1 = Nc.MBS_GRADIENT_BACKGROUND.createField("color1", z.INTEGER)),
      (Nc.color2 = Nc.MBS_GRADIENT_BACKGROUND.createField(
        "color2",
        z.INTEGER
      )));
  };
  Nc.new_MbsGradientBackground_list = function (a) {
    return new Ja(a, Nc.MBS_GRADIENT_BACKGROUND, new Nc(a));
  };
  Nc.__super__ = Ta;
  Nc.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Nc.MBS_GRADIENT_BACKGROUND;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Nc.MBS_GRADIENT_BACKGROUND.getSize()));
    },
    getColor1: function () {
      return this.data.readInt(this.address + Nc.color1.address);
    },
    setColor1: function (a) {
      this.data.writeInt(this.address + Nc.color1.address, a);
    },
    getColor2: function () {
      return this.data.readInt(this.address + Nc.color2.address);
    },
    setColor2: function (a) {
      this.data.writeInt(this.address + Nc.color2.address, a);
    },
    __class__: Nc,
  });
  var Ya = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.scene.layers.MbsLayer"] = Ya;
  Ya.__name__ = "com stencyl io mbs scene layers MbsLayer".split(" ");
  Ya.initializeType = function () {
    null == Ya.MBS_LAYER &&
      ((Ya.MBS_LAYER = new kb("MbsLayer")),
      Ya.MBS_LAYER.setInstantiator(function (a) {
        return new Ya(a);
      }),
      (Ya.id = Ya.MBS_LAYER.createField("id", z.INTEGER)),
      (Ya.$name = Ya.MBS_LAYER.createField("name", z.STRING)),
      (Ya.order = Ya.MBS_LAYER.createField("order", z.INTEGER)),
      (Ya.opacity = Ya.MBS_LAYER.createField("opacity", z.INTEGER)),
      (Ya.blendmode = Ya.MBS_LAYER.createField("blendmode", z.STRING)),
      (Ya.scrollFactorX = Ya.MBS_LAYER.createField("scrollFactorX", z.FLOAT)),
      (Ya.scrollFactorY = Ya.MBS_LAYER.createField("scrollFactorY", z.FLOAT)),
      (Ya.visible = Ya.MBS_LAYER.createField("visible", z.BOOLEAN)),
      (Ya.locked = Ya.MBS_LAYER.createField("locked", z.BOOLEAN)));
  };
  Ya.new_MbsLayer_list = function (a) {
    return new Ja(a, Ya.MBS_LAYER, new Ya(a));
  };
  Ya.__super__ = Ta;
  Ya.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Ya.MBS_LAYER;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Ya.MBS_LAYER.getSize()));
    },
    getId: function () {
      return this.data.readInt(this.address + Ya.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + Ya.id.address, a);
    },
    getName: function () {
      return this.data.readString(this.address + Ya.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + Ya.$name.address, a);
    },
    getOrder: function () {
      return this.data.readInt(this.address + Ya.order.address);
    },
    setOrder: function (a) {
      this.data.writeInt(this.address + Ya.order.address, a);
    },
    getOpacity: function () {
      return this.data.readInt(this.address + Ya.opacity.address);
    },
    setOpacity: function (a) {
      this.data.writeInt(this.address + Ya.opacity.address, a);
    },
    getBlendmode: function () {
      return this.data.readString(this.address + Ya.blendmode.address);
    },
    setBlendmode: function (a) {
      this.data.writeString(this.address + Ya.blendmode.address, a);
    },
    getScrollFactorX: function () {
      return this.data.readFloat(this.address + Ya.scrollFactorX.address);
    },
    setScrollFactorX: function (a) {
      this.data.writeFloat(this.address + Ya.scrollFactorX.address, a);
    },
    getScrollFactorY: function () {
      return this.data.readFloat(this.address + Ya.scrollFactorY.address);
    },
    setScrollFactorY: function (a) {
      this.data.writeFloat(this.address + Ya.scrollFactorY.address, a);
    },
    getVisible: function () {
      return this.data.readBool(this.address + Ya.visible.address);
    },
    setVisible: function (a) {
      this.data.writeBool(this.address + Ya.visible.address, a);
    },
    getLocked: function () {
      return this.data.readBool(this.address + Ya.locked.address);
    },
    setLocked: function (a) {
      this.data.writeBool(this.address + Ya.locked.address, a);
    },
    __class__: Ya,
  });
  var Bd = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.scene.layers.MbsImageBackground"] = Bd;
  Bd.__name__ = "com stencyl io mbs scene layers MbsImageBackground".split(" ");
  Bd.initializeType = function () {
    null == Bd.MBS_IMAGE_BACKGROUND &&
      (Ya.initializeType(),
      (Bd.MBS_IMAGE_BACKGROUND = new kb("MbsImageBackground")),
      Bd.MBS_IMAGE_BACKGROUND.setInstantiator(function (a) {
        return new Bd(a);
      }),
      Bd.MBS_IMAGE_BACKGROUND.inherit(Ya.MBS_LAYER),
      (Bd.resourceID = Bd.MBS_IMAGE_BACKGROUND.createField(
        "resourceID",
        z.INTEGER
      )),
      (Bd.customScroll = Bd.MBS_IMAGE_BACKGROUND.createField(
        "customScroll",
        z.BOOLEAN
      )));
  };
  Bd.new_MbsImageBackground_list = function (a) {
    return new Ja(a, Bd.MBS_IMAGE_BACKGROUND, new Bd(a));
  };
  Bd.__super__ = Ya;
  Bd.prototype = x(Ya.prototype, {
    getMbsType: function () {
      return Bd.MBS_IMAGE_BACKGROUND;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Bd.MBS_IMAGE_BACKGROUND.getSize()));
    },
    getResourceID: function () {
      return this.data.readInt(this.address + Bd.resourceID.address);
    },
    setResourceID: function (a) {
      this.data.writeInt(this.address + Bd.resourceID.address, a);
    },
    getCustomScroll: function () {
      return this.data.readBool(this.address + Bd.customScroll.address);
    },
    setCustomScroll: function (a) {
      this.data.writeBool(this.address + Bd.customScroll.address, a);
    },
    __class__: Bd,
  });
  var ee = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.scene.layers.MbsInteractiveLayer"] = ee;
  ee.__name__ = "com stencyl io mbs scene layers MbsInteractiveLayer".split(
    " "
  );
  ee.initializeType = function () {
    null == ee.MBS_INTERACTIVE_LAYER &&
      (Ya.initializeType(),
      (ee.MBS_INTERACTIVE_LAYER = new kb("MbsInteractiveLayer")),
      ee.MBS_INTERACTIVE_LAYER.setInstantiator(function (a) {
        return new ee(a);
      }),
      ee.MBS_INTERACTIVE_LAYER.inherit(Ya.MBS_LAYER),
      (ee.color = ee.MBS_INTERACTIVE_LAYER.createField("color", z.INTEGER)));
  };
  ee.new_MbsInteractiveLayer_list = function (a) {
    return new Ja(a, ee.MBS_INTERACTIVE_LAYER, new ee(a));
  };
  ee.__super__ = Ya;
  ee.prototype = x(Ya.prototype, {
    getMbsType: function () {
      return ee.MBS_INTERACTIVE_LAYER;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(ee.MBS_INTERACTIVE_LAYER.getSize()));
    },
    getColor: function () {
      return this.data.readInt(this.address + ee.color.address);
    },
    setColor: function (a) {
      this.data.writeInt(this.address + ee.color.address, a);
    },
    __class__: ee,
  });
  var Gb = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.scene.physics.MbsJoint"] = Gb;
  Gb.__name__ = "com stencyl io mbs scene physics MbsJoint".split(" ");
  Gb.initializeType = function () {
    null == Gb.MBS_JOINT &&
      ((Gb.MBS_JOINT = new kb("MbsJoint")),
      Gb.MBS_JOINT.setInstantiator(function (a) {
        return new Gb(a);
      }),
      (Gb.id = Gb.MBS_JOINT.createField("id", z.INTEGER)),
      (Gb.$name = Gb.MBS_JOINT.createField("name", z.STRING)),
      (Gb.actor1 = Gb.MBS_JOINT.createField("actor1", z.INTEGER)),
      (Gb.actor2 = Gb.MBS_JOINT.createField("actor2", z.INTEGER)),
      (Gb.collide = Gb.MBS_JOINT.createField("collide", z.BOOLEAN)));
  };
  Gb.new_MbsJoint_list = function (a) {
    return new Ja(a, Gb.MBS_JOINT, new Gb(a));
  };
  Gb.__super__ = Ta;
  Gb.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Gb.MBS_JOINT;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Gb.MBS_JOINT.getSize()));
    },
    getId: function () {
      return this.data.readInt(this.address + Gb.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + Gb.id.address, a);
    },
    getName: function () {
      return this.data.readString(this.address + Gb.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + Gb.$name.address, a);
    },
    getActor1: function () {
      return this.data.readInt(this.address + Gb.actor1.address);
    },
    setActor1: function (a) {
      this.data.writeInt(this.address + Gb.actor1.address, a);
    },
    getActor2: function () {
      return this.data.readInt(this.address + Gb.actor2.address);
    },
    setActor2: function (a) {
      this.data.writeInt(this.address + Gb.actor2.address, a);
    },
    getCollide: function () {
      return this.data.readBool(this.address + Gb.collide.address);
    },
    setCollide: function (a) {
      this.data.writeBool(this.address + Gb.collide.address, a);
    },
    __class__: Gb,
  });
  var Yb = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.scene.physics.MbsHingeJoint"] = Yb;
  Yb.__name__ = "com stencyl io mbs scene physics MbsHingeJoint".split(" ");
  Yb.initializeType = function () {
    null == Yb.MBS_HINGE_JOINT &&
      (Gb.initializeType(),
      (Yb.MBS_HINGE_JOINT = new kb("MbsHingeJoint")),
      Yb.MBS_HINGE_JOINT.setInstantiator(function (a) {
        return new Yb(a);
      }),
      Yb.MBS_HINGE_JOINT.inherit(Gb.MBS_JOINT),
      (Yb.limit = Yb.MBS_HINGE_JOINT.createField("limit", z.BOOLEAN)),
      (Yb.motor = Yb.MBS_HINGE_JOINT.createField("motor", z.BOOLEAN)),
      (Yb.lower = Yb.MBS_HINGE_JOINT.createField("lower", z.FLOAT)),
      (Yb.upper = Yb.MBS_HINGE_JOINT.createField("upper", z.FLOAT)),
      (Yb.torque = Yb.MBS_HINGE_JOINT.createField("torque", z.FLOAT)),
      (Yb.speed = Yb.MBS_HINGE_JOINT.createField("speed", z.FLOAT)));
  };
  Yb.new_MbsHingeJoint_list = function (a) {
    return new Ja(a, Yb.MBS_HINGE_JOINT, new Yb(a));
  };
  Yb.__super__ = Gb;
  Yb.prototype = x(Gb.prototype, {
    getMbsType: function () {
      return Yb.MBS_HINGE_JOINT;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Yb.MBS_HINGE_JOINT.getSize()));
    },
    getLimit: function () {
      return this.data.readBool(this.address + Yb.limit.address);
    },
    setLimit: function (a) {
      this.data.writeBool(this.address + Yb.limit.address, a);
    },
    getMotor: function () {
      return this.data.readBool(this.address + Yb.motor.address);
    },
    setMotor: function (a) {
      this.data.writeBool(this.address + Yb.motor.address, a);
    },
    getLower: function () {
      return this.data.readFloat(this.address + Yb.lower.address);
    },
    setLower: function (a) {
      this.data.writeFloat(this.address + Yb.lower.address, a);
    },
    getUpper: function () {
      return this.data.readFloat(this.address + Yb.upper.address);
    },
    setUpper: function (a) {
      this.data.writeFloat(this.address + Yb.upper.address, a);
    },
    getTorque: function () {
      return this.data.readFloat(this.address + Yb.torque.address);
    },
    setTorque: function (a) {
      this.data.writeFloat(this.address + Yb.torque.address, a);
    },
    getSpeed: function () {
      return this.data.readFloat(this.address + Yb.speed.address);
    },
    setSpeed: function (a) {
      this.data.writeFloat(this.address + Yb.speed.address, a);
    },
    __class__: Yb,
  });
  var Pb = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.scene.physics.MbsRegion"] = Pb;
  Pb.__name__ = "com stencyl io mbs scene physics MbsRegion".split(" ");
  Pb.initializeType = function () {
    null == Pb.MBS_REGION &&
      ((Pb.MBS_REGION = new kb("MbsRegion")),
      Pb.MBS_REGION.setInstantiator(function (a) {
        return new Pb(a);
      }),
      (Pb.color = Pb.MBS_REGION.createField("color", z.INTEGER)),
      (Pb.id = Pb.MBS_REGION.createField("id", z.INTEGER)),
      (Pb.$name = Pb.MBS_REGION.createField("name", z.STRING)),
      (Pb.shape = Pb.MBS_REGION.createField("shape", z.DYNAMIC)),
      (Pb.x = Pb.MBS_REGION.createField("x", z.INTEGER)),
      (Pb.y = Pb.MBS_REGION.createField("y", z.INTEGER)));
  };
  Pb.new_MbsRegion_list = function (a) {
    return new Ja(a, Pb.MBS_REGION, new Pb(a));
  };
  Pb.__super__ = Ta;
  Pb.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Pb.MBS_REGION;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Pb.MBS_REGION.getSize()));
    },
    getColor: function () {
      return this.data.readInt(this.address + Pb.color.address);
    },
    setColor: function (a) {
      this.data.writeInt(this.address + Pb.color.address, a);
    },
    getId: function () {
      return this.data.readInt(this.address + Pb.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + Pb.id.address, a);
    },
    getName: function () {
      return this.data.readString(this.address + Pb.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + Pb.$name.address, a);
    },
    getShape: function () {
      return be.readDynamic(this.data, this.address + Pb.shape.address);
    },
    setShape: function (a) {
      be.writeDynamic(this.data, this.address + Pb.shape.address, a);
    },
    getX: function () {
      return this.data.readInt(this.address + Pb.x.address);
    },
    setX: function (a) {
      this.data.writeInt(this.address + Pb.x.address, a);
    },
    getY: function () {
      return this.data.readInt(this.address + Pb.y.address);
    },
    setY: function (a) {
      this.data.writeInt(this.address + Pb.y.address, a);
    },
    __class__: Pb,
  });
  var Hb = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.scene.physics.MbsSlidingJoint"] = Hb;
  Hb.__name__ = "com stencyl io mbs scene physics MbsSlidingJoint".split(" ");
  Hb.initializeType = function () {
    null == Hb.MBS_SLIDING_JOINT &&
      (Gb.initializeType(),
      (Hb.MBS_SLIDING_JOINT = new kb("MbsSlidingJoint")),
      Hb.MBS_SLIDING_JOINT.setInstantiator(function (a) {
        return new Hb(a);
      }),
      Hb.MBS_SLIDING_JOINT.inherit(Gb.MBS_JOINT),
      (Hb.limit = Hb.MBS_SLIDING_JOINT.createField("limit", z.BOOLEAN)),
      (Hb.motor = Hb.MBS_SLIDING_JOINT.createField("motor", z.BOOLEAN)),
      (Hb.lower = Hb.MBS_SLIDING_JOINT.createField("lower", z.FLOAT)),
      (Hb.upper = Hb.MBS_SLIDING_JOINT.createField("upper", z.FLOAT)),
      (Hb.force = Hb.MBS_SLIDING_JOINT.createField("force", z.FLOAT)),
      (Hb.speed = Hb.MBS_SLIDING_JOINT.createField("speed", z.FLOAT)),
      (Hb.x = Hb.MBS_SLIDING_JOINT.createField("x", z.FLOAT)),
      (Hb.y = Hb.MBS_SLIDING_JOINT.createField("y", z.FLOAT)));
  };
  Hb.new_MbsSlidingJoint_list = function (a) {
    return new Ja(a, Hb.MBS_SLIDING_JOINT, new Hb(a));
  };
  Hb.__super__ = Gb;
  Hb.prototype = x(Gb.prototype, {
    getMbsType: function () {
      return Hb.MBS_SLIDING_JOINT;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Hb.MBS_SLIDING_JOINT.getSize()));
    },
    getLimit: function () {
      return this.data.readBool(this.address + Hb.limit.address);
    },
    setLimit: function (a) {
      this.data.writeBool(this.address + Hb.limit.address, a);
    },
    getMotor: function () {
      return this.data.readBool(this.address + Hb.motor.address);
    },
    setMotor: function (a) {
      this.data.writeBool(this.address + Hb.motor.address, a);
    },
    getLower: function () {
      return this.data.readFloat(this.address + Hb.lower.address);
    },
    setLower: function (a) {
      this.data.writeFloat(this.address + Hb.lower.address, a);
    },
    getUpper: function () {
      return this.data.readFloat(this.address + Hb.upper.address);
    },
    setUpper: function (a) {
      this.data.writeFloat(this.address + Hb.upper.address, a);
    },
    getForce: function () {
      return this.data.readFloat(this.address + Hb.force.address);
    },
    setForce: function (a) {
      this.data.writeFloat(this.address + Hb.force.address, a);
    },
    getSpeed: function () {
      return this.data.readFloat(this.address + Hb.speed.address);
    },
    setSpeed: function (a) {
      this.data.writeFloat(this.address + Hb.speed.address, a);
    },
    getX: function () {
      return this.data.readFloat(this.address + Hb.x.address);
    },
    setX: function (a) {
      this.data.writeFloat(this.address + Hb.x.address, a);
    },
    getY: function () {
      return this.data.readFloat(this.address + Hb.y.address);
    },
    setY: function (a) {
      this.data.writeFloat(this.address + Hb.y.address, a);
    },
    __class__: Hb,
  });
  var Cd = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.scene.physics.MbsStickJoint"] = Cd;
  Cd.__name__ = "com stencyl io mbs scene physics MbsStickJoint".split(" ");
  Cd.initializeType = function () {
    null == Cd.MBS_STICK_JOINT &&
      (Gb.initializeType(),
      (Cd.MBS_STICK_JOINT = new kb("MbsStickJoint")),
      Cd.MBS_STICK_JOINT.setInstantiator(function (a) {
        return new Cd(a);
      }),
      Cd.MBS_STICK_JOINT.inherit(Gb.MBS_JOINT),
      (Cd.damping = Cd.MBS_STICK_JOINT.createField("damping", z.FLOAT)),
      (Cd.frequency = Cd.MBS_STICK_JOINT.createField("frequency", z.FLOAT)));
  };
  Cd.new_MbsStickJoint_list = function (a) {
    return new Ja(a, Cd.MBS_STICK_JOINT, new Cd(a));
  };
  Cd.__super__ = Gb;
  Cd.prototype = x(Gb.prototype, {
    getMbsType: function () {
      return Cd.MBS_STICK_JOINT;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Cd.MBS_STICK_JOINT.getSize()));
    },
    getDamping: function () {
      return this.data.readFloat(this.address + Cd.damping.address);
    },
    setDamping: function (a) {
      this.data.writeFloat(this.address + Cd.damping.address, a);
    },
    getFrequency: function () {
      return this.data.readFloat(this.address + Cd.frequency.address);
    },
    setFrequency: function (a) {
      this.data.writeFloat(this.address + Cd.frequency.address, a);
    },
    __class__: Cd,
  });
  var Yd = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.scene.physics.MbsTerrainRegion"] = Yd;
  Yd.__name__ = "com stencyl io mbs scene physics MbsTerrainRegion".split(" ");
  Yd.initializeType = function () {
    null == Yd.MBS_TERRAIN_REGION &&
      (Pb.initializeType(),
      (Yd.MBS_TERRAIN_REGION = new kb("MbsTerrainRegion")),
      Yd.MBS_TERRAIN_REGION.setInstantiator(function (a) {
        return new Yd(a);
      }),
      Yd.MBS_TERRAIN_REGION.inherit(Pb.MBS_REGION),
      (Yd.groupID = Yd.MBS_TERRAIN_REGION.createField("groupID", z.INTEGER)));
  };
  Yd.new_MbsTerrainRegion_list = function (a) {
    return new Ja(a, Yd.MBS_TERRAIN_REGION, new Yd(a));
  };
  Yd.__super__ = Pb;
  Yd.prototype = x(Pb.prototype, {
    getMbsType: function () {
      return Yd.MBS_TERRAIN_REGION;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Yd.MBS_TERRAIN_REGION.getSize()));
    },
    getGroupID: function () {
      return this.data.readInt(this.address + Yd.groupID.address);
    },
    setGroupID: function (a) {
      this.data.writeInt(this.address + Yd.groupID.address, a);
    },
    __class__: Yd,
  });
  var Ud = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.shape.MbsShape"] = Ud;
  Ud.__name__ = "com stencyl io mbs shape MbsShape".split(" ");
  Ud.initializeType = function () {
    null == Ud.MBS_SHAPE &&
      ((Ud.MBS_SHAPE = new kb("MbsShape")),
      Ud.MBS_SHAPE.setInstantiator(function (a) {
        return new Ud(a);
      }));
  };
  Ud.new_MbsShape_list = function (a) {
    return new Ja(a, Ud.MBS_SHAPE, new Ud(a));
  };
  Ud.__super__ = Ta;
  Ud.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Ud.MBS_SHAPE;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Ud.MBS_SHAPE.getSize()));
    },
    __class__: Ud,
  });
  var Jd = function (a) {
    this.data = a;
    this._position = new gc(a);
  };
  p["com.stencyl.io.mbs.shape.MbsCircle"] = Jd;
  Jd.__name__ = "com stencyl io mbs shape MbsCircle".split(" ");
  Jd.initializeType = function () {
    null == Jd.MBS_CIRCLE &&
      (Ud.initializeType(),
      (Jd.MBS_CIRCLE = new kb("MbsCircle")),
      Jd.MBS_CIRCLE.setInstantiator(function (a) {
        return new Jd(a);
      }),
      Jd.MBS_CIRCLE.inherit(Ud.MBS_SHAPE),
      (Jd.position = Jd.MBS_CIRCLE.createField("position", gc.MBS_POINT)),
      (Jd.radius = Jd.MBS_CIRCLE.createField("radius", z.FLOAT)));
  };
  Jd.new_MbsCircle_list = function (a) {
    return new Ja(a, Jd.MBS_CIRCLE, new Jd(a));
  };
  Jd.__super__ = Ud;
  Jd.prototype = x(Ud.prototype, {
    getMbsType: function () {
      return Jd.MBS_CIRCLE;
    },
    _position: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(Jd.MBS_CIRCLE.getSize()));
    },
    getPosition: function () {
      this._position.setAddress(this.address + Jd.position.address);
      return this._position;
    },
    getRadius: function () {
      return this.data.readFloat(this.address + Jd.radius.address);
    },
    setRadius: function (a) {
      this.data.writeFloat(this.address + Jd.radius.address, a);
    },
    __class__: Jd,
  });
  var gc = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.shape.MbsPoint"] = gc;
  gc.__name__ = "com stencyl io mbs shape MbsPoint".split(" ");
  gc.initializeType = function () {
    null == gc.MBS_POINT &&
      ((gc.MBS_POINT = new kb("MbsPoint")),
      gc.MBS_POINT.setInstantiator(function (a) {
        return new gc(a);
      }),
      (gc.x = gc.MBS_POINT.createField("x", z.FLOAT)),
      (gc.y = gc.MBS_POINT.createField("y", z.FLOAT)));
  };
  gc.new_MbsPoint_list = function (a) {
    return new Ja(a, gc.MBS_POINT, new gc(a));
  };
  gc.__super__ = Ta;
  gc.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return gc.MBS_POINT;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(gc.MBS_POINT.getSize()));
    },
    getX: function () {
      return this.data.readFloat(this.address + gc.x.address);
    },
    setX: function (a) {
      this.data.writeFloat(this.address + gc.x.address, a);
    },
    getY: function () {
      return this.data.readFloat(this.address + gc.y.address);
    },
    setY: function (a) {
      this.data.writeFloat(this.address + gc.y.address, a);
    },
    __class__: gc,
  });
  var Lc = function (a) {
    this.data = a;
    this._points = new Ja(a, gc.MBS_POINT, new gc(a));
  };
  p["com.stencyl.io.mbs.shape.MbsPolygon"] = Lc;
  Lc.__name__ = "com stencyl io mbs shape MbsPolygon".split(" ");
  Lc.initializeType = function () {
    null == Lc.MBS_POLYGON &&
      (Ud.initializeType(),
      (Lc.MBS_POLYGON = new kb("MbsPolygon")),
      Lc.MBS_POLYGON.setInstantiator(function (a) {
        return new Lc(a);
      }),
      Lc.MBS_POLYGON.inherit(Ud.MBS_SHAPE),
      (Lc.points = Lc.MBS_POLYGON.createField("points", z.LIST)));
  };
  Lc.new_MbsPolygon_list = function (a) {
    return new Ja(a, Lc.MBS_POLYGON, new Lc(a));
  };
  Lc.__super__ = Ud;
  Lc.prototype = x(Ud.prototype, {
    getMbsType: function () {
      return Lc.MBS_POLYGON;
    },
    _points: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(Lc.MBS_POLYGON.getSize()));
    },
    getPoints: function () {
      this._points.setAddress(
        this.data.readInt(this.address + Lc.points.address)
      );
      return this._points;
    },
    createPoints: function (a) {
      this._points.allocateNew(a);
      this.data.writeInt(
        this.address + Lc.points.address,
        this._points.getAddress()
      );
      return this._points;
    },
    __class__: Lc,
  });
  var td = function (a) {
    Lc.call(this, a);
  };
  p["com.stencyl.io.mbs.shape.MbsPolyRegion"] = td;
  td.__name__ = "com stencyl io mbs shape MbsPolyRegion".split(" ");
  td.initializeType = function () {
    null == td.MBS_POLY_REGION &&
      (Lc.initializeType(),
      (td.MBS_POLY_REGION = new kb("MbsPolyRegion")),
      td.MBS_POLY_REGION.setInstantiator(function (a) {
        return new td(a);
      }),
      td.MBS_POLY_REGION.inherit(Lc.MBS_POLYGON),
      (td.width = td.MBS_POLY_REGION.createField("width", z.INTEGER)),
      (td.height = td.MBS_POLY_REGION.createField("height", z.INTEGER)));
  };
  td.new_MbsPolyRegion_list = function (a) {
    return new Ja(a, td.MBS_POLY_REGION, new td(a));
  };
  td.__super__ = Lc;
  td.prototype = x(Lc.prototype, {
    getMbsType: function () {
      return td.MBS_POLY_REGION;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(td.MBS_POLY_REGION.getSize()));
    },
    getWidth: function () {
      return this.data.readInt(this.address + td.width.address);
    },
    setWidth: function (a) {
      this.data.writeInt(this.address + td.width.address, a);
    },
    getHeight: function () {
      return this.data.readInt(this.address + td.height.address);
    },
    setHeight: function (a) {
      this.data.writeInt(this.address + td.height.address, a);
    },
    __class__: td,
  });
  var fe = function (a) {
    Lc.call(this, a);
    this._position = new gc(a);
  };
  p["com.stencyl.io.mbs.shape.MbsWireframe"] = fe;
  fe.__name__ = "com stencyl io mbs shape MbsWireframe".split(" ");
  fe.initializeType = function () {
    null == fe.MBS_WIREFRAME &&
      (Lc.initializeType(),
      (fe.MBS_WIREFRAME = new kb("MbsWireframe")),
      fe.MBS_WIREFRAME.setInstantiator(function (a) {
        return new fe(a);
      }),
      fe.MBS_WIREFRAME.inherit(Lc.MBS_POLYGON),
      (fe.position = fe.MBS_WIREFRAME.createField("position", gc.MBS_POINT)));
  };
  fe.new_MbsWireframe_list = function (a) {
    return new Ja(a, fe.MBS_WIREFRAME, new fe(a));
  };
  fe.__super__ = Lc;
  fe.prototype = x(Lc.prototype, {
    getMbsType: function () {
      return fe.MBS_WIREFRAME;
    },
    _position: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(fe.MBS_WIREFRAME.getSize()));
    },
    getPosition: function () {
      this._position.setAddress(this.address + fe.position.address);
      return this._position;
    },
    __class__: fe,
  });
  var Oc = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.snippet.MbsAttribute"] = Oc;
  Oc.__name__ = "com stencyl io mbs snippet MbsAttribute".split(" ");
  Oc.initializeType = function () {
    null == Oc.MBS_ATTRIBUTE &&
      ((Oc.MBS_ATTRIBUTE = new kb("MbsAttribute")),
      Oc.MBS_ATTRIBUTE.setInstantiator(function (a) {
        return new Oc(a);
      }),
      (Oc.id = Oc.MBS_ATTRIBUTE.createField("id", z.INTEGER)),
      (Oc.type = Oc.MBS_ATTRIBUTE.createField("type", z.STRING)),
      (Oc.value = Oc.MBS_ATTRIBUTE.createField("value", z.DYNAMIC)));
  };
  Oc.new_MbsAttribute_list = function (a) {
    return new Ja(a, Oc.MBS_ATTRIBUTE, new Oc(a));
  };
  Oc.__super__ = Ta;
  Oc.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Oc.MBS_ATTRIBUTE;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Oc.MBS_ATTRIBUTE.getSize()));
    },
    getId: function () {
      return this.data.readInt(this.address + Oc.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + Oc.id.address, a);
    },
    getType: function () {
      return this.data.readString(this.address + Oc.type.address);
    },
    setType: function (a) {
      this.data.writeString(this.address + Oc.type.address, a);
    },
    getValue: function () {
      return be.readDynamic(this.data, this.address + Oc.value.address);
    },
    setValue: function (a) {
      be.writeDynamic(this.data, this.address + Oc.value.address, a);
    },
    __class__: Oc,
  });
  var xb = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.snippet.MbsAttributeDef"] = xb;
  xb.__name__ = "com stencyl io mbs snippet MbsAttributeDef".split(" ");
  xb.initializeType = function () {
    null == xb.MBS_ATTRIBUTE_DEF &&
      ((xb.MBS_ATTRIBUTE_DEF = new kb("MbsAttributeDef")),
      xb.MBS_ATTRIBUTE_DEF.setInstantiator(function (a) {
        return new xb(a);
      }),
      (xb.type = xb.MBS_ATTRIBUTE_DEF.createField("type", z.STRING)),
      (xb.defaultValue = xb.MBS_ATTRIBUTE_DEF.createField(
        "defaultValue",
        z.DYNAMIC
      )),
      (xb.description = xb.MBS_ATTRIBUTE_DEF.createField(
        "description",
        z.STRING
      )),
      (xb.dropdown = xb.MBS_ATTRIBUTE_DEF.createField("dropdown", z.STRING)),
      (xb.fullname = xb.MBS_ATTRIBUTE_DEF.createField("fullname", z.STRING)),
      (xb.hidden = xb.MBS_ATTRIBUTE_DEF.createField("hidden", z.BOOLEAN)),
      (xb.id = xb.MBS_ATTRIBUTE_DEF.createField("id", z.INTEGER)),
      (xb.$name = xb.MBS_ATTRIBUTE_DEF.createField("name", z.STRING)),
      (xb.order = xb.MBS_ATTRIBUTE_DEF.createField("order", z.INTEGER)));
  };
  xb.new_MbsAttributeDef_list = function (a) {
    return new Ja(a, xb.MBS_ATTRIBUTE_DEF, new xb(a));
  };
  xb.__super__ = Ta;
  xb.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return xb.MBS_ATTRIBUTE_DEF;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(xb.MBS_ATTRIBUTE_DEF.getSize()));
    },
    getType: function () {
      return this.data.readString(this.address + xb.type.address);
    },
    setType: function (a) {
      this.data.writeString(this.address + xb.type.address, a);
    },
    getDefaultValue: function () {
      return be.readDynamic(this.data, this.address + xb.defaultValue.address);
    },
    setDefaultValue: function (a) {
      be.writeDynamic(this.data, this.address + xb.defaultValue.address, a);
    },
    getDescription: function () {
      return this.data.readString(this.address + xb.description.address);
    },
    setDescription: function (a) {
      this.data.writeString(this.address + xb.description.address, a);
    },
    getDropdown: function () {
      return this.data.readString(this.address + xb.dropdown.address);
    },
    setDropdown: function (a) {
      this.data.writeString(this.address + xb.dropdown.address, a);
    },
    getFullname: function () {
      return this.data.readString(this.address + xb.fullname.address);
    },
    setFullname: function (a) {
      this.data.writeString(this.address + xb.fullname.address, a);
    },
    getHidden: function () {
      return this.data.readBool(this.address + xb.hidden.address);
    },
    setHidden: function (a) {
      this.data.writeBool(this.address + xb.hidden.address, a);
    },
    getId: function () {
      return this.data.readInt(this.address + xb.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + xb.id.address, a);
    },
    getName: function () {
      return this.data.readString(this.address + xb.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + xb.$name.address, a);
    },
    getOrder: function () {
      return this.data.readInt(this.address + xb.order.address);
    },
    setOrder: function (a) {
      this.data.writeInt(this.address + xb.order.address, a);
    },
    __class__: xb,
  });
  var ad = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.snippet.MbsBlock"] = ad;
  ad.__name__ = "com stencyl io mbs snippet MbsBlock".split(" ");
  ad.initializeType = function () {
    null == ad.MBS_BLOCK &&
      ((ad.MBS_BLOCK = new kb("MbsBlock")),
      ad.MBS_BLOCK.setInstantiator(function (a) {
        return new ad(a);
      }),
      (ad.type = ad.MBS_BLOCK.createField("type", z.STRING)),
      (ad.id = ad.MBS_BLOCK.createField("id", z.INTEGER)),
      (ad.blockID = ad.MBS_BLOCK.createField("blockID", z.INTEGER)));
  };
  ad.new_MbsBlock_list = function (a) {
    return new Ja(a, ad.MBS_BLOCK, new ad(a));
  };
  ad.__super__ = Ta;
  ad.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return ad.MBS_BLOCK;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(ad.MBS_BLOCK.getSize()));
    },
    getType: function () {
      return this.data.readString(this.address + ad.type.address);
    },
    setType: function (a) {
      this.data.writeString(this.address + ad.type.address, a);
    },
    getId: function () {
      return this.data.readInt(this.address + ad.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + ad.id.address, a);
    },
    getBlockID: function () {
      return this.data.readInt(this.address + ad.blockID.address);
    },
    setBlockID: function (a) {
      this.data.writeInt(this.address + ad.blockID.address, a);
    },
    __class__: ad,
  });
  var Zb = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.snippet.MbsEvent"] = Zb;
  Zb.__name__ = "com stencyl io mbs snippet MbsEvent".split(" ");
  Zb.initializeType = function () {
    null == Zb.MBS_EVENT &&
      ((Zb.MBS_EVENT = new kb("MbsEvent")),
      Zb.MBS_EVENT.setInstantiator(function (a) {
        return new Zb(a);
      }),
      (Zb.displayName = Zb.MBS_EVENT.createField("displayName", z.STRING)),
      (Zb.enabled = Zb.MBS_EVENT.createField("enabled", z.BOOLEAN)),
      (Zb.id = Zb.MBS_EVENT.createField("id", z.INTEGER)),
      (Zb.$name = Zb.MBS_EVENT.createField("name", z.STRING)),
      (Zb.order = Zb.MBS_EVENT.createField("order", z.INTEGER)),
      (Zb.repeats = Zb.MBS_EVENT.createField("repeats", z.BOOLEAN)));
  };
  Zb.new_MbsEvent_list = function (a) {
    return new Ja(a, Zb.MBS_EVENT, new Zb(a));
  };
  Zb.__super__ = Ta;
  Zb.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Zb.MBS_EVENT;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Zb.MBS_EVENT.getSize()));
    },
    getDisplayName: function () {
      return this.data.readString(this.address + Zb.displayName.address);
    },
    setDisplayName: function (a) {
      this.data.writeString(this.address + Zb.displayName.address, a);
    },
    getEnabled: function () {
      return this.data.readBool(this.address + Zb.enabled.address);
    },
    setEnabled: function (a) {
      this.data.writeBool(this.address + Zb.enabled.address, a);
    },
    getId: function () {
      return this.data.readInt(this.address + Zb.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + Zb.id.address, a);
    },
    getName: function () {
      return this.data.readString(this.address + Zb.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + Zb.$name.address, a);
    },
    getOrder: function () {
      return this.data.readInt(this.address + Zb.order.address);
    },
    setOrder: function (a) {
      this.data.writeInt(this.address + Zb.order.address, a);
    },
    getRepeats: function () {
      return this.data.readBool(this.address + Zb.repeats.address);
    },
    setRepeats: function (a) {
      this.data.writeBool(this.address + Zb.repeats.address, a);
    },
    __class__: Zb,
  });
  var Tc = function (a) {
    this.data = a;
  };
  p["com.stencyl.io.mbs.snippet.MbsMapElement"] = Tc;
  Tc.__name__ = "com stencyl io mbs snippet MbsMapElement".split(" ");
  Tc.initializeType = function () {
    null == Tc.MBS_MAP_ELEMENT &&
      ((Tc.MBS_MAP_ELEMENT = new kb("MbsMapElement")),
      Tc.MBS_MAP_ELEMENT.setInstantiator(function (a) {
        return new Tc(a);
      }),
      (Tc.key = Tc.MBS_MAP_ELEMENT.createField("key", z.STRING)),
      (Tc.value = Tc.MBS_MAP_ELEMENT.createField("value", z.DYNAMIC)));
  };
  Tc.new_MbsMapElement_list = function (a) {
    return new Ja(a, Tc.MBS_MAP_ELEMENT, new Tc(a));
  };
  Tc.__super__ = Ta;
  Tc.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Tc.MBS_MAP_ELEMENT;
    },
    allocateNew: function () {
      this.setAddress(this.data.allocate(Tc.MBS_MAP_ELEMENT.getSize()));
    },
    getKey: function () {
      return this.data.readString(this.address + Tc.key.address);
    },
    setKey: function (a) {
      this.data.writeString(this.address + Tc.key.address, a);
    },
    getValue: function () {
      return be.readDynamic(this.data, this.address + Tc.value.address);
    },
    setValue: function (a) {
      be.writeDynamic(this.data, this.address + Tc.value.address, a);
    },
    __class__: Tc,
  });
  var mc = function (a) {
    this.data = a;
    this._properties = new Ja(a, Oc.MBS_ATTRIBUTE, new Oc(a));
  };
  p["com.stencyl.io.mbs.snippet.MbsSnippet"] = mc;
  mc.__name__ = "com stencyl io mbs snippet MbsSnippet".split(" ");
  mc.initializeType = function () {
    null == mc.MBS_SNIPPET &&
      ((mc.MBS_SNIPPET = new kb("MbsSnippet")),
      mc.MBS_SNIPPET.setInstantiator(function (a) {
        return new mc(a);
      }),
      (mc.enabled = mc.MBS_SNIPPET.createField("enabled", z.BOOLEAN)),
      (mc.id = mc.MBS_SNIPPET.createField("id", z.INTEGER)),
      (mc.properties = mc.MBS_SNIPPET.createField("properties", z.LIST)));
  };
  mc.new_MbsSnippet_list = function (a) {
    return new Ja(a, mc.MBS_SNIPPET, new mc(a));
  };
  mc.__super__ = Ta;
  mc.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return mc.MBS_SNIPPET;
    },
    _properties: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(mc.MBS_SNIPPET.getSize()));
    },
    getEnabled: function () {
      return this.data.readBool(this.address + mc.enabled.address);
    },
    setEnabled: function (a) {
      this.data.writeBool(this.address + mc.enabled.address, a);
    },
    getId: function () {
      return this.data.readInt(this.address + mc.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + mc.id.address, a);
    },
    getProperties: function () {
      this._properties.setAddress(
        this.data.readInt(this.address + mc.properties.address)
      );
      return this._properties;
    },
    createProperties: function (a) {
      this._properties.allocateNew(a);
      this.data.writeInt(
        this.address + mc.properties.address,
        this._properties.getAddress()
      );
      return this._properties;
    },
    __class__: mc,
  });
  var Ua = function (a) {
    this.data = a;
    this._attributes = new Ja(a, xb.MBS_ATTRIBUTE_DEF, new xb(a));
    this._blocks = new Ja(a, ad.MBS_BLOCK, new ad(a));
    this._events = new Ja(a, Zb.MBS_EVENT, new Zb(a));
  };
  p["com.stencyl.io.mbs.snippet.MbsSnippetDef"] = Ua;
  Ua.__name__ = "com stencyl io mbs snippet MbsSnippetDef".split(" ");
  Ua.initializeType = function () {
    null == Ua.MBS_SNIPPET_DEF &&
      ((Ua.MBS_SNIPPET_DEF = new kb("MbsSnippetDef")),
      Ua.MBS_SNIPPET_DEF.setInstantiator(function (a) {
        return new Ua(a);
      }),
      (Ua.attachedEvent = Ua.MBS_SNIPPET_DEF.createField(
        "attachedEvent",
        z.BOOLEAN
      )),
      (Ua.actorID = Ua.MBS_SNIPPET_DEF.createField("actorID", z.INTEGER)),
      (Ua.classname = Ua.MBS_SNIPPET_DEF.createField("classname", z.STRING)),
      (Ua.description = Ua.MBS_SNIPPET_DEF.createField(
        "description",
        z.STRING
      )),
      (Ua.design = Ua.MBS_SNIPPET_DEF.createField("design", z.BOOLEAN)),
      (Ua.drawOrder = Ua.MBS_SNIPPET_DEF.createField("drawOrder", z.INTEGER)),
      (Ua.id = Ua.MBS_SNIPPET_DEF.createField("id", z.INTEGER)),
      (Ua.$name = Ua.MBS_SNIPPET_DEF.createField("name", z.STRING)),
      (Ua.packageName = Ua.MBS_SNIPPET_DEF.createField(
        "packageName",
        z.STRING
      )),
      (Ua.sceneID = Ua.MBS_SNIPPET_DEF.createField("sceneID", z.INTEGER)),
      (Ua.type = Ua.MBS_SNIPPET_DEF.createField("type", z.STRING)),
      (Ua.attributes = Ua.MBS_SNIPPET_DEF.createField("attributes", z.LIST)),
      (Ua.blocks = Ua.MBS_SNIPPET_DEF.createField("blocks", z.LIST)),
      (Ua.events = Ua.MBS_SNIPPET_DEF.createField("events", z.LIST)));
  };
  Ua.new_MbsSnippetDef_list = function (a) {
    return new Ja(a, Ua.MBS_SNIPPET_DEF, new Ua(a));
  };
  Ua.__super__ = Ta;
  Ua.prototype = x(Ta.prototype, {
    getMbsType: function () {
      return Ua.MBS_SNIPPET_DEF;
    },
    _attributes: null,
    _blocks: null,
    _events: null,
    allocateNew: function () {
      this.setAddress(this.data.allocate(Ua.MBS_SNIPPET_DEF.getSize()));
    },
    getAttachedEvent: function () {
      return this.data.readBool(this.address + Ua.attachedEvent.address);
    },
    setAttachedEvent: function (a) {
      this.data.writeBool(this.address + Ua.attachedEvent.address, a);
    },
    getActorID: function () {
      return this.data.readInt(this.address + Ua.actorID.address);
    },
    setActorID: function (a) {
      this.data.writeInt(this.address + Ua.actorID.address, a);
    },
    getClassname: function () {
      return this.data.readString(this.address + Ua.classname.address);
    },
    setClassname: function (a) {
      this.data.writeString(this.address + Ua.classname.address, a);
    },
    getDescription: function () {
      return this.data.readString(this.address + Ua.description.address);
    },
    setDescription: function (a) {
      this.data.writeString(this.address + Ua.description.address, a);
    },
    getDesign: function () {
      return this.data.readBool(this.address + Ua.design.address);
    },
    setDesign: function (a) {
      this.data.writeBool(this.address + Ua.design.address, a);
    },
    getDrawOrder: function () {
      return this.data.readInt(this.address + Ua.drawOrder.address);
    },
    setDrawOrder: function (a) {
      this.data.writeInt(this.address + Ua.drawOrder.address, a);
    },
    getId: function () {
      return this.data.readInt(this.address + Ua.id.address);
    },
    setId: function (a) {
      this.data.writeInt(this.address + Ua.id.address, a);
    },
    getName: function () {
      return this.data.readString(this.address + Ua.$name.address);
    },
    setName: function (a) {
      this.data.writeString(this.address + Ua.$name.address, a);
    },
    getPackageName: function () {
      return this.data.readString(this.address + Ua.packageName.address);
    },
    setPackageName: function (a) {
      this.data.writeString(this.address + Ua.packageName.address, a);
    },
    getSceneID: function () {
      return this.data.readInt(this.address + Ua.sceneID.address);
    },
    setSceneID: function (a) {
      this.data.writeInt(this.address + Ua.sceneID.address, a);
    },
    getType: function () {
      return this.data.readString(this.address + Ua.type.address);
    },
    setType: function (a) {
      this.data.writeString(this.address + Ua.type.address, a);
    },
    getAttributes: function () {
      this._attributes.setAddress(
        this.data.readInt(this.address + Ua.attributes.address)
      );
      return this._attributes;
    },
    createAttributes: function (a) {
      this._attributes.allocateNew(a);
      this.data.writeInt(
        this.address + Ua.attributes.address,
        this._attributes.getAddress()
      );
      return this._attributes;
    },
    getBlocks: function () {
      this._blocks.setAddress(
        this.data.readInt(this.address + Ua.blocks.address)
      );
      return this._blocks;
    },
    createBlocks: function (a) {
      this._blocks.allocateNew(a);
      this.data.writeInt(
        this.address + Ua.blocks.address,
        this._blocks.getAddress()
      );
      return this._blocks;
    },
    getEvents: function () {
      this._events.setAddress(
        this.data.readInt(this.address + Ua.events.address)
      );
      return this._events;
    },
    createEvents: function (a) {
      this._events.allocateNew(a);
      this.data.writeInt(
        this.address + Ua.events.address,
        this._events.getAddress()
      );
      return this._events;
    },
    __class__: Ua,
  });
  var $a = function (
    a,
    b,
    c,
    d,
    e,
    f,
    g,
    h,
    n,
    k,
    m,
    l,
    p,
    q,
    t,
    pc,
    x,
    na,
    v,
    w
  ) {
    null == w && (w = 0);
    null == v && (v = !1);
    null == na && (na = !0);
    null == pc && (pc = !1);
    null == t && (t = !1);
    null == q && (q = !1);
    null == p && (p = !1);
    null == h && (h = 32);
    null == g && (g = 32);
    null == f && (f = -1);
    null == e && (e = 0);
    null == d && (d = 0);
    this.collisionListenerCount = 0;
    this.maxMove = 99999;
    this.minMove = 3;
    this.moveXDistance = this.moveYDistance = 0;
    this.moveMultiplier = 0.33;
    this.drawX = this.drawY = 0;
    this.smoothMove = this.firstMove = this.snapOnSet = !1;
    this.attachedImages = null;
    gb.call(this);
    r.NO_PHYSICS && 0 == w && (this.physicsMode = w = 1);
    this.dummy = new D();
    this.zero = new D(0, 0);
    this._point = J.point;
    this._moveX = this._moveY = 0;
    this.HITBOX = new qg();
    this.set_shape(this.HITBOX);
    u.__instanceof(this, nd) &&
      r.NO_PHYSICS &&
      ((x = this.HITBOX = new jd(g | 0, h | 0, 0, 0, !1, -2)),
      this.set_shape(x));
    this.set_x(0);
    this.set_y(0);
    this.set_rotation(0);
    this.realAngle = this.realY = this.realX = 0;
    this.realScaleY = this.realScaleX = 1;
    this.collidable = !0;
    this.solid = !p;
    this.updateMatrix = !0;
    this.colY = this.colX = 0;
    this.lastScale = new Y(1, 1);
    this.lastY = this.lastX = -1e3;
    this.lastAngle = 0;
    this.tweenProps = new sp();
    this.tweenProps.xy.doOnUpdate(B(this, this.updateTweenXY));
    this.tweenProps.angle.doOnUpdate(B(this, this.updateTweenAngle));
    this.tweenProps.alpha.doOnUpdate(B(this, this.updateTweenAlpha));
    this.tweenProps.realScaleXY.doOnUpdate(B(this, this.updateTweenScaleXY));
    this.transformPoint = new Y(0, 0);
    this.transformMatrix = new ya();
    this.drawMatrix = new ya();
    this.currOrigin = new Y(0, 0);
    this.currOffset = new Y(0, 0);
    this.registry = new la();
    this.attachedImages = [];
    this.physicsMode = w;
    this.autoScale = na;
    this.mouseState = this.rSpeed = this.ySpeed = this.xSpeed = 0;
    this.isTerrainRegion =
      this.isRegion =
      this.isCamera =
      this.isOnScreenCache =
      this.lastSceneState =
      this.lastScreenState =
        !1;
    this.drawActor = !0;
    this.fixedRotation =
      this.continuousCollision =
      this.isHUD =
      this.alwaysSimulate =
      this.killLeaveScreen =
        !1;
    this.defaultGravity = this.ignoreGravity = v;
    this.resetOrigin = !0;
    this.allListeners = new Ca();
    this.allListenerReferences = [];
    this.whenCreatedListeners = [];
    this.whenUpdatedListeners = [];
    this.whenDrawingListeners = [];
    this.whenKilledListeners = [];
    this.mouseOverListeners = [];
    this.positionListeners = [];
    this.collisionListeners = [];
    this.destroyed = this.paused = this.recycled = !1;
    this.set_name("Unknown");
    this.ID = b;
    this.groupID = c;
    this.typeID = null != m ? m.ID : -1;
    this.engine = a;
    this.collidedList = [];
    this.collisions = new Ee(16);
    this.simpleCollisions = new Ee(16);
    this.contacts = new Ee(16);
    this.regionContacts = new Ee(16);
    this.collisions.reuseIterator = !0;
    this.simpleCollisions.reuseIterator = !0;
    this.contacts.reuseIterator = !0;
    this.regionContacts.reuseIterator = !0;
    this.collisionsCount = this.contactCount = 0;
    this.handlesCollisions = !0;
    this.behaviors = new Zl();
    this.currAnimationName = "";
    this.animationMap = new la();
    this.shapeMap = new la();
    this.originMap = new la();
    this.sprite = n;
    this.type = m;
    if (null != n)
      for (b = n.animations.iterator(); b.hasNext(); )
        (na = b.next()),
          this.addAnim(na),
          na.animID == n.defaultAnimation && (this.defaultAnim = na.animName);
    null == $a.recycledAnimation &&
      ($a.recycledAnimation = new ue(
        -1,
        "recyclingDefault",
        null,
        null,
        null,
        !1,
        !1,
        1,
        1,
        0,
        0,
        [10],
        1,
        1,
        1
      ));
    this.addAnim($a.recycledAnimation);
    if (null != l && 0 == w)
      l.bullet && (Rb.m_continuousPhysics = !0),
        (l.groupID = c),
        this.initFromBody(l),
        (c = new Db()),
        c.setAsBox(1, 1),
        this.body.createFixture2(c, 0.1),
        (this.md = new Zj()),
        (this.md.mass = l.mass),
        (this.md.I = l.aMass),
        (this.md.center.x = 0),
        (this.md.center.y = 0),
        this.body.setMassData(this.md),
        (this.bodyScale = new Y(1, 1));
    else {
      if (null == x || qa["typeof"](x) == Nb.TFloat) x = $a.createBox(g, h);
      null != l && (this.continuousCollision = l.bullet);
      u.__instanceof(this, nd) && ((p = !0), (pc = !1));
      u.__instanceof(this, oh) && (pc = !1);
      null != x && u.__instanceof(x, qg)
        ? (this.set_shape(x), (this.isTerrain = !0))
        : 0 == w && this.initBody(c, p, q, t, pc, x);
    }
    this.cacheAnchor = new Y(0, 0);
    this.switchToDefaultAnimation();
    null != n
      ? this.setLocation(d, e)
      : null != x && u.__instanceof(x, qg)
      ? ((d = new ic(new sa(1, 1, !0, 0))),
        d.set_x(g),
        d.set_y(h),
        this.addChild(d),
        (this.cacheWidth = this.set_width(g)),
        (this.cacheHeight = this.set_height(h)))
      : 0 == w &&
        this.body.setPosition(
          new D(r.toPhysicalUnits(d), r.toPhysicalUnits(e))
        );
    null == k && null != m && (k = m.behaviorValues);
    -1 != f && a.moveActorToLayer(this, a.getLayerById(f));
    r.initBehaviors(this.behaviors, k, this, a, !1);
  };
  p["com.stencyl.models.Actor"] = $a;
  $a.__name__ = ["com", "stencyl", "models", "Actor"];
  $a.resetStatics = function () {
    $a.lastCollided = null;
    $a.manifold = new Yj();
  };
  $a.createBox = function (a, b) {
    var c = new Db();
    c.setAsBox(r.toPhysicalUnits(a / 2), r.toPhysicalUnits(b / 2));
    return c;
  };
  $a.scaleShape = function (a, b, c) {
    if (u.__instanceof(a, Jc)) a.m_radius *= c;
    else if (u.__instanceof(a, Db)) {
      for (var d = a.m_vertices, e = [], f = 0; f < d.length; ) {
        var g = d[f];
        ++f;
        g.subtract(b);
        g.multiply(c);
        g.add(b);
        e.push(g);
      }
      a.setAsArray(e);
    }
  };
  $a.__super__ = gb;
  $a.prototype = x(gb.prototype, {
    engine: null,
    createTime: null,
    ID: null,
    groupID: null,
    cachedLayer: null,
    layer: null,
    typeID: null,
    type: null,
    recycled: null,
    paused: null,
    isRegion: null,
    isTerrainRegion: null,
    isTerrain: null,
    destroyed: null,
    drawActor: null,
    isHUD: null,
    alwaysSimulate: null,
    isCamera: null,
    killLeaveScreen: null,
    physicsMode: null,
    autoScale: null,
    dead: null,
    dying: null,
    fixedRotation: null,
    ignoreGravity: null,
    defaultGravity: null,
    collidable: null,
    solid: null,
    resetOrigin: null,
    realX: null,
    realY: null,
    realAngle: null,
    realScaleX: null,
    realScaleY: null,
    lastX: null,
    lastY: null,
    lastAngle: null,
    lastScale: null,
    colX: null,
    colY: null,
    xSpeed: null,
    ySpeed: null,
    rSpeed: null,
    continuousCollision: null,
    tweenProps: null,
    cacheWidth: null,
    cacheHeight: null,
    currAnimation: null,
    currAnimationName: null,
    animationMap: null,
    bitmapFilters: null,
    sprite: null,
    shapeMap: null,
    originMap: null,
    defaultAnim: null,
    currOrigin: null,
    currOffset: null,
    cacheAnchor: null,
    transformObj: null,
    transformPoint: null,
    transformMatrix: null,
    updateMatrix: null,
    drawMatrix: null,
    label: null,
    attachedImages: null,
    smoothMove: null,
    firstMove: null,
    snapOnSet: null,
    drawX: null,
    drawY: null,
    moveMultiplier: null,
    moveXDistance: null,
    moveYDistance: null,
    minMove: null,
    maxMove: null,
    behaviors: null,
    registry: null,
    allListeners: null,
    allListenerReferences: null,
    whenCreatedListeners: null,
    whenUpdatedListeners: null,
    whenDrawingListeners: null,
    whenKilledListeners: null,
    mouseOverListeners: null,
    positionListeners: null,
    collisionListeners: null,
    positionListenerCount: null,
    collisionListenerCount: null,
    mouseState: null,
    lastScreenState: null,
    lastSceneState: null,
    isOnScreenCache: null,
    body: null,
    bodyDef: null,
    md: null,
    bodyScale: null,
    handlesCollisions: null,
    contacts: null,
    regionContacts: null,
    collisions: null,
    dummy: null,
    zero: null,
    destroy: function () {
      if (!this.destroyed) {
        this.destroyed = !0;
        var a = this.animationMap;
        for (a = new Oe(a, a.arrayKeys()); a.hasNext(); )
          a.next().set_visible(!1);
        J.removeAllChildren(this);
        if (null != this.body && 0 == this.physicsMode) {
          for (a = this.body.getContactList(); null != a; )
            r.engine.world.m_contactManager.m_contactListener.endContact(
              a.contact
            ),
              (a = a.next);
          r.engine.world.destroyBody(this.body);
        }
        this.cancelTweens();
        this.regionContacts =
          this.contacts =
          this.sprite =
          this.body =
          this.currOrigin =
          this.currOffset =
          this.currAnimation =
          this.animationMap =
          this.defaultAnim =
          this.originMap =
          this.shapeMap =
          $a.lastCollided =
            null;
        this.collisionsCount = this.contactCount = 0;
        this.allListenerReferences =
          this.allListeners =
          this.collisionListeners =
          this.positionListeners =
          this.mouseOverListeners =
          this.whenKilledListeners =
          this.whenDrawingListeners =
          this.whenUpdatedListeners =
          this.whenCreatedListeners =
          this.transformMatrix =
          this.transformPoint =
            null;
        this.collisionListenerCount = this.positionListenerCount = 0;
        this.registry = null;
        for (a = this.collisions.keys(); a.hasNext(); ) {
          var b = a.next(),
            c = this.collisions,
            d = c.mH,
            e = d.mHash[(73856093 * b) & d.mMask];
          if (-1 == e) b = -2147483648;
          else if (((d = d.mData), d[e] == b)) b = d[e + 1];
          else {
            var f = -2147483648;
            for (e = d[e + 2]; -1 != e; ) {
              if (d[e] == b) {
                f = d[e + 1];
                break;
              }
              e = d[e + 2];
            }
            b = f;
          }
          for (c = -2147483648 == b ? null : c.mVals[b]; 0 < c.points.length; )
            Rd.free(c.points.pop());
        }
        this.simpleCollisions = this.collisions = null;
        null != this.bodyDef && (this.bodyDef = this.bodyDef.userData = null);
        this.behaviors.destroy();
      }
    },
    resetListeners: function () {
      for (var a = this.allListeners.iterator(); a.hasNext(); ) {
        var b = a.next();
        this.allListeners.remove(b);
      }
      for (; 0 < this.allListenerReferences.length; )
        this.allListenerReferences.pop();
      for (; 0 < this.whenUpdatedListeners.length; )
        this.whenUpdatedListeners.pop();
      for (; 0 < this.whenDrawingListeners.length; )
        this.whenDrawingListeners.pop();
      for (; 0 < this.whenKilledListeners.length; )
        this.whenKilledListeners.pop();
      for (; 0 < this.mouseOverListeners.length; )
        this.mouseOverListeners.pop();
      for (; 0 < this.positionListeners.length; ) this.positionListeners.pop();
      for (; 0 < this.collisionListeners.length; )
        this.collisionListeners.pop();
      this.collisionListenerCount = this.positionListenerCount = 0;
    },
    defaultHitbox: null,
    defaultMasklist: null,
    addAnim: function (a) {
      var b = 0 == this.physicsMode ? a.physicsShapes : a.simpleShapes;
      if (null != b) {
        var c = [];
        if (1 == this.physicsMode)
          for (b = b.iterator(); b.hasNext(); ) {
            var d = b.next();
            u.__instanceof(d, jd) &&
              0 != this.physicsMode &&
              ((d = u.__cast(d, jd).clone()), d.assignTo(this));
            c.push(d);
          }
        else if (2 != this.physicsMode)
          for (b = b.iterator(); b.hasNext(); ) (d = b.next()), c.push(d);
        0 != this.physicsMode
          ? ((b = a.animName), (d = this.shapeMap), (c = new cj(c, this)))
          : ((b = a.animName), (d = this.shapeMap));
        null != t[b] ? d.setReserved(b, c) : (d.h[b] = c);
      }
      c = this.animationMap;
      b = a.animName;
      d = new mk(a);
      null != t[b] ? c.setReserved(b, d) : (c.h[b] = d);
      c = this.originMap;
      b = a.animName;
      a = new D(a.originX, a.originY);
      null != t[b] ? c.setReserved(b, a) : (c.h[b] = a);
    },
    reloadAnimationGraphics: function (a) {
      if (-1 == a) {
        for (a = this.sprite.animations.iterator(); a.hasNext(); ) {
          var b = a.next().animName,
            c = this.animationMap;
          (null != t[b] ? c.getReserved(b) : c.h[b]).framesUpdated();
        }
        this.updateChildrenPositions();
      } else
        (a = this.sprite.animations.h[a].animName),
          (b = this.animationMap),
          (a = null != t[a] ? b.getReserved(a) : b.h[a]),
          a.framesUpdated(),
          a == this.currAnimation && this.updateChildrenPositions();
    },
    initScripts: function () {
      if (2 == this.physicsMode) this.handlesCollisions = !1;
      else {
        this.handlesCollisions = !0;
        this.behaviors.initScripts();
        for (var a = 0; a < this.whenCreatedListeners.length; ) {
          try {
            var b = this.whenCreatedListeners[a];
            b(this.whenCreatedListeners);
            -1 == J.indexOf(this.whenCreatedListeners, b) && --a;
          } catch (c) {
            if (
              ((X.lastException = c),
              c instanceof v && (c = c.val),
              !u.__instanceof(c, String))
            )
              throw c;
          }
          ++a;
        }
      }
    },
    initFromBody: function (a) {
      a.allowSleep = !1;
      a.userData = this;
      this.bodyDef = a;
      this.body = r.engine.world.createBody(a);
    },
    initBody: function (a, b, c, d, e, f) {
      var g = new Vi();
      g.groupID = a;
      a = this.get_x();
      g.position.x = r.toPhysicalUnits(a);
      a = this.get_y();
      g.position.y = r.toPhysicalUnits(a);
      g.angle = 0;
      g.fixedRotation = !e;
      g.allowSleep = !1;
      g.type = c
        ? ea.b2_staticBody
        : d
        ? ea.b2_kinematicBody
        : ea.b2_dynamicBody;
      if (f instanceof Array && null == f.__enum__)
        for (
          g.userData = this,
            this.body = r.engine.world.createBody(g),
            b = u.__cast(f, Array),
            f = 0;
          f < b.length;

        )
          (c = b[f]),
            ++f,
            (d = new Tf()),
            (d.shape = c),
            (d.friction = 1),
            (d.density = 0.1),
            (d.restitution = 0),
            (d.isSensor = !1),
            (d.groupID = 1),
            (d.userData = this),
            this.body.createFixture(d);
      else
        (c = new Tf()),
          (c.shape = f),
          (c.friction = 1),
          (c.density = 0.1),
          (c.restitution = 0),
          (c.isSensor = b),
          (c.groupID = -1e3),
          (c.userData = this),
          (g.userData = this),
          (this.body = r.engine.world.createBody(g)),
          this.body.createFixture(c);
      this.bodyDef = g;
    },
    addAnimation: function (a, b) {
      var c = this.animationMap;
      null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
    },
    getAnimation: function () {
      return this.currAnimationName;
    },
    setAnimation: function (a) {
      this.switchAnimation(a);
    },
    switchToDefaultAnimation: function () {
      null != this.defaultAnim &&
        (this.switchAnimation(this.defaultAnim, this.defaultShapeChanged()),
        this.setCurrentFrame(0));
    },
    isAnimationPlaying: function () {
      return !this.currAnimation.isFinished();
    },
    getCurrentFrame: function () {
      return this.currAnimation.getCurrentFrame();
    },
    setCurrentFrame: function (a) {
      this.currAnimation.setFrame(a);
    },
    getNumFrames: function () {
      return this.currAnimation.getNumFrames();
    },
    defaultShapeChanged: function () {
      if (0 != this.physicsMode) return !0;
      var a = this.defaultAnim,
        b = this.shapeMap;
      a = null != t[a] ? b.getReserved(a) : b.h[a];
      if (
        null == this.getBody() ||
        null == this.getBody().getFixtureList() ||
        null == this.getBody().getFixtureList().getShape()
      ) {
        if (null != a && 0 < a.length) return !0;
      } else {
        if (null == a || 0 == a.length || 1 < a.length) return !0;
        var c = a[0];
        if (null == c) return !0;
        var d = this.getBody().getFixtureList();
        a = this.getBody().getFixtureList().getShape();
        b = c.shape;
        if (
          d.groupID == c.groupID &&
          this.getBody().getFixtureList().isSensor() == c.isSensor &&
          (null == a ? null : u.getClass(a)) ==
            (null == b ? null : u.getClass(b))
        )
          if ((null == a ? null : u.getClass(a)) == Db) {
            if (a.m_vertexCount != b.m_vertexCount) return !0;
            c = 0;
            for (d = a.m_vertexCount; c < d; ) {
              var e = c++;
              if (
                a.m_vertices[e].x != b.m_vertices[e].x ||
                a.m_vertices[e].y != b.m_vertices[e].y
              )
                return !0;
            }
          } else {
            if (
              (null == a ? null : u.getClass(a)) == Jc &&
              (a.m_radius != b.m_radius ||
                a.m_p.x != b.m_p.x ||
                a.m_p.y != b.m_p.y)
            )
              return !0;
          }
        else return !0;
      }
      return !1;
    },
    switchAnimation: function (a, b) {
      null == b && (b = !1);
      if (a != this.currAnimationName || b) {
        var c = this.animationMap;
        c = null != t[a] ? c.getReserved(a) : c.h[a];
        if (null != c) {
          null != this.currAnimation && this.removeChild(this.currAnimation);
          if (null != this.body && 0 == this.physicsMode && !b) {
            var d = this.currAnimationName,
              e = this.shapeMap;
            d = null != t[d] ? e.getReserved(d) : e.h[d];
            e = this.shapeMap;
            e = null != t[a] ? e.getReserved(a) : e.h[a];
            if (null == d || null == e) b = !0;
            else if (d.length != e.length || 1 < d.length) b = !0;
            else {
              var f = d[0],
                g = e[0];
              if (null == f || null == g) b = !0;
              else if (((d = f.shape), (e = g.shape), f.isSensor != g.isSensor))
                b = !0;
              else if (f.groupID != g.groupID) b = !0;
              else if (
                (null == d ? null : u.getClass(d)) ==
                (null == e ? null : u.getClass(e))
              )
                if ((null == d ? null : u.getClass(d)) == Db)
                  if (d.m_vertexCount != e.m_vertexCount) b = !0;
                  else
                    for (f = 0, g = d.m_vertexCount; f < g; ) {
                      var h = f++;
                      if (d.m_vertices[h].x != e.m_vertices[h].x) {
                        b = !0;
                        break;
                      } else if (d.m_vertices[h].y != e.m_vertices[h].y) {
                        b = !0;
                        break;
                      }
                    }
                else
                  (null == d ? null : u.getClass(d)) != Jc ||
                    (d.m_radius == e.m_radius &&
                      d.m_p.x == e.m_p.x &&
                      d.m_p.y == e.m_p.y) ||
                    (b = !0);
              else b = !0;
            }
          }
          this.currAnimationName = a;
          this.currAnimation = c;
          this.currAnimation.set_filter(this.bitmapFilters);
          this.currAnimation.set_visible(this.drawActor);
          this.addChild(c);
          c = this.originMap;
          c = null != t[a] ? c.getReserved(a) : c.h[a];
          d = this.currAnimation.get_width() / r.SCALE / 2 - c.x;
          e = this.currAnimation.get_height() / r.SCALE / 2 - c.y;
          if (null != this.body && b && 0 == this.physicsMode) {
            b = [];
            for (f = this.body.getContactList(); null != f; )
              u.__instanceof(f.other.getUserData(), nd) &&
                f.contact.isTouching() &&
                b.push(f.other.getUserData()),
                r.engine.world.m_contactManager.m_contactListener.endContact(
                  f.contact
                ),
                (f = f.next);
            for (f = this.collisions.keys(); f.hasNext(); ) {
              g = f.next();
              h = this.collisions;
              var n = h.mH,
                k = n.mHash[(73856093 * g) & n.mMask];
              if (-1 == k) k = -2147483648;
              else if (((n = n.mData), n[k] == g)) k = n[k + 1];
              else {
                var m = -2147483648;
                for (k = n[k + 2]; -1 != k; ) {
                  if (n[k] == g) {
                    m = n[k + 1];
                    break;
                  }
                  k = n[k + 2];
                }
                k = m;
              }
              for (
                h = -2147483648 == k ? null : h.mVals[k];
                0 < h.points.length;

              )
                Rd.free(h.points.pop());
              this.collisions.unset(g);
            }
            this.collisions = new Ee(16);
            this.simpleCollisions = new Ee(16);
            this.contacts = new Ee(16);
            this.regionContacts = new Ee(16);
            this.collisions.reuseIterator = !0;
            this.simpleCollisions.reuseIterator = !0;
            this.contacts.reuseIterator = !0;
            this.regionContacts.reuseIterator = !0;
            for (
              this.collisionsCount = this.contactCount = 0;
              0 < this.body.m_fixtureCount;

            )
              this.body.DestroyFixture(this.body.getFixtureList());
            f = 0;
            g = this.shapeMap;
            for (
              a = u.__cast(null != t[a] ? g.getReserved(a) : g.h[a], Array);
              f < a.length;

            ) {
              k = a[f];
              ++f;
              g = new Tf();
              1.79769313486231e308 > this.bodyDef.friction &&
                ((g.friction = this.bodyDef.friction),
                (g.restitution = this.bodyDef.bounciness),
                0 < this.bodyDef.mass && (g.density = 0.1));
              g.density = k.density;
              g.isSensor = k.isSensor;
              g.groupID = k.groupID;
              g.shape = k.shape;
              if (null != c)
                if (
                  ((this.body.origin.x = r.toPhysicalUnits(-c.x)),
                  (this.body.origin.y = r.toPhysicalUnits(-c.y)),
                  u.__instanceof(k.shape, Db))
                ) {
                  h = new kf();
                  n = k.shape;
                  k = new Db();
                  k.setAsArray(n.m_vertices, n.m_vertices.length);
                  n = k.m_vertices;
                  m = k.m_normals;
                  var l = h.position,
                    p = r.toPhysicalUnits(d),
                    q = r.toPhysicalUnits(e);
                  l.x = p;
                  l.y = q;
                  h.R.setAngle(0);
                  l = 0;
                  for (p = k.m_vertexCount; l < p; )
                    (q = l++),
                      (n[q] = h.multiply(n[q])),
                      (m[q] = h.R.multiplyV(m[q]));
                  k.setAsArray(n, n.length);
                  k.m_normals = m;
                  g.shape = k;
                } else
                  u.__instanceof(k.shape, Jc) &&
                    ((k = k.shape),
                    (h = new Jc()),
                    h.setRadius(k.getRadius()),
                    (n = k.m_p.x),
                    (m = r.toPhysicalUnits(d)),
                    (h.m_p.x = n + m),
                    (k = k.m_p.y),
                    (n = r.toPhysicalUnits(e)),
                    (h.m_p.y = k + n),
                    (g.shape = h));
              this.body.createFixture(g).SetUserData(this);
            }
            if (null != this.body.getFixtureList())
              for (
                this.bodyScale.x = 1, this.bodyScale.y = 1, d = 0;
                d < b.length;

              )
                (e = b[d]),
                  ++d,
                  (a = this.body.getFixtureList().m_aabb),
                  e.getBody().getFixtureList().m_aabb.testOverlap(a) &&
                    e.addActor(this);
            null != this.md && this.body.setMassData(this.md);
          } else
            (b = this.shapeMap),
              null != (null != t[a] ? b.getReserved(a) : b.h[a]) &&
                1 == this.physicsMode &&
                ((b = this.shapeMap),
                this.set_shape(null != t[a] ? b.getReserved(a) : b.h[a]),
                (this.HITBOX = this._mask));
          this.cacheWidth = this.currAnimation.get_width() / r.SCALE;
          this.cacheHeight = this.currAnimation.get_height() / r.SCALE;
          null != this.body &&
            ((this.body.size.x = r.toPhysicalUnits(this.cacheWidth)),
            (this.body.size.y = r.toPhysicalUnits(this.cacheHeight)));
          0 == this.physicsMode &&
            ((this.realX = this.getX(!1)),
            (this.realY = this.getY(!1)),
            this.updateBodyScale());
          null != c && this.setOriginPoint(c.x | 0, c.y | 0);
          this.updateChildrenPositions();
          this.updateMatrix = !0;
          c = this.currAnimation;
          c.timer = 0;
          c.frameIndex = 0;
          c.finished = !1;
          c.needsUpdate = !0;
        }
      }
    },
    updateChildrenPositions: function () {
      var a = new Y(-this.currAnimation.get_x(), -this.currAnimation.get_y());
      if (!a.equals(this.cacheAnchor)) {
        this.cacheAnchor.copyFrom(a);
        a = 0;
        for (var b = this.attachedImages; a < b.length; ) {
          var c = b[a];
          ++a;
          c.updatePosition();
        }
        null != this.label && this.label.updatePosition();
      }
    },
    removeAttachedImages: function () {
      for (var a = 0, b = this.attachedImages; a < b.length; ) {
        var c = b[a];
        ++a;
        c.cacheParentAnchor = J.zero;
        this.removeChild(c);
      }
      this.attachedImages = [];
    },
    update: function (a) {
      this.innerUpdate(a, !0);
    },
    innerUpdate: function (a, b) {
      if (
        !(
          this.paused ||
          this.isCamera ||
          this.dying ||
          this.dead ||
          this.destroyed ||
          (b && (this.isHUD || this.alwaysSimulate))
        )
      ) {
        if (0 < this.mouseOverListeners.length) {
          b = this.isMouseOver();
          0 >= this.mouseState && b
            ? (this.mouseState = 1)
            : 1 <= this.mouseState && b
            ? ((this.mouseState = 2),
              H.mousePressed
                ? (this.mouseState = 3)
                : H.mouseDown && (this.mouseState = 4),
              H.mouseReleased && (this.mouseState = 5))
            : 0 < this.mouseState && !b
            ? (this.mouseState = -1)
            : -1 != this.mouseState || b || (this.mouseState = 0);
          b = this.mouseOverListeners;
          for (var c = this.mouseState, d = 0; d < b.length; ) {
            try {
              var e = b[d];
              e(c, b);
              -1 == J.indexOf(b, e) && --d;
            } catch (Ce) {
              if (
                ((X.lastException = Ce),
                Ce instanceof v && (Ce = Ce.val),
                !u.__instanceof(Ce, String))
              )
                throw Ce;
            }
            ++d;
          }
        }
        e = this.type.ID;
        b = 1e6 + this.groupID;
        d = this.engine.collisionListeners;
        c = this.engine.typeGroupPositionListeners;
        if (
          0 == this.physicsMode &&
          (0 < this.collisionListenerCount || null != d.h[e] || null != d.h[b])
        ) {
          if (0 < this.contactCount)
            for (var f = 0, g, h = this.contacts.iterator(); h.hasNext(); ) {
              g = h.next();
              var n = g.key;
              var k = this.collisions.mH;
              var m = k.mHash[(73856093 * n) & k.mMask];
              if (-1 == m) m = !1;
              else if (((k = k.mData), k[m] == n)) m = !0;
              else {
                var l = !1;
                for (m = k[m + 2]; -1 != m; ) {
                  if (k[m] == n) {
                    l = !0;
                    break;
                  }
                  m = k[m + 2];
                }
                m = l;
              }
              if (m) {
                m = this.collisions;
                l = m.mH;
                k = l.mHash[(73856093 * n) & l.mMask];
                if (-1 == k) n = -2147483648;
                else if (((l = l.mData), l[k] == n)) n = l[k + 1];
                else {
                  var p = -2147483648;
                  for (k = l[k + 2]; -1 != k; ) {
                    if (l[k] == n) {
                      p = l[k + 1];
                      break;
                    }
                    k = l[k + 2];
                  }
                  n = p;
                }
                n = -2147483648 == n ? null : m.mVals[n];
                g.getWorldManifold($a.manifold);
                m = 0;
                for (k = $a.manifold.m_points; m < k.length; )
                  (l = k[m]),
                    ++m,
                    0 != l.x &&
                      0 != l.y &&
                      ((g = n.points[f]),
                      null == g
                        ? (n.points[f] = Rd.get(
                            l.x,
                            l.y,
                            $a.manifold.m_normal.x,
                            $a.manifold.m_normal.y
                          ))
                        : ((g = n.points[f]),
                          (g.x = l.x),
                          (g.y = l.y),
                          (g.normalX = $a.manifold.m_normal.x),
                          (g.normalY = $a.manifold.m_normal.y)),
                      ++f);
                for (; n.points.length > f; ) Rd.free(n.points.pop());
                f = 0;
              } else {
                var r = g.getFixtureA().getUserData(),
                  q = g.getFixtureB().getUserData();
                r == this
                  ? ((m = q), (k = g.getFixtureB()), (l = g.getFixtureA()))
                  : ((m = r), (k = g.getFixtureA()), (l = g.getFixtureB()));
                p = new oc();
                p.otherActor = m;
                p.otherShape = k;
                p.thisActor = this;
                p.thisShape = l;
                p.actorA = r;
                p.actorB = q;
                g.getWorldManifold($a.manifold);
                this.collisions.set(n, p);
                this.collisionsCount++;
                n = this.getBody();
                r = m.getBody();
                q = g.getFixtureA().getBody();
                for (
                  var t = g.getFixtureB().getBody(),
                    x = 0,
                    na = $a.manifold.m_points;
                  x < na.length;

                )
                  ((g = na[x]), ++x, 0 == g.x || 0 == g.y || l.isSensor())
                    ? l.isSensor() &&
                      (null != m &&
                        ((p.thisCollidedWithActor =
                          p.thisCollidedWithActor ||
                          (1 != m.groupID &&
                            -2 != m.groupID &&
                            !m.isTerrainRegion)),
                        (p.thisCollidedWithTerrain =
                          p.thisCollidedWithTerrain || m.isTerrainRegion),
                        (p.thisCollidedWithTile =
                          p.thisCollidedWithTile || 1 == m.groupID)),
                      (p.otherCollidedWithActor =
                        p.otherCollidedWithActor ||
                        (1 != this.groupID &&
                          -2 != this.groupID &&
                          !this.isTerrainRegion)),
                      (p.otherCollidedWithTerrain =
                        p.otherCollidedWithTerrain || this.isTerrainRegion),
                      (p.otherCollidedWithTile =
                        p.otherCollidedWithTile || 1 == this.groupID),
                      (p.thisCollidedWithSensor =
                        p.thisCollidedWithSensor || k.isSensor()),
                      (p.otherCollidedWithSensor =
                        p.otherCollidedWithSensor || l.isSensor()))
                    : ((g = Rd.get(
                        g.x,
                        g.y,
                        $a.manifold.m_normal.x,
                        $a.manifold.m_normal.y
                      )),
                      p.points.push(g),
                      q == n
                        ? ((p.thisFromBottom =
                            p.thisFromBottom || 0 < g.normalY),
                          (p.thisFromTop = p.thisFromTop || 0 > g.normalY),
                          (p.thisFromLeft = p.thisFromLeft || 0 > g.normalX),
                          (p.thisFromRight = p.thisFromRight || 0 < g.normalX))
                        : t == n &&
                          ((p.thisFromBottom =
                            p.thisFromBottom || 0 > g.normalY),
                          (p.thisFromTop = p.thisFromTop || 0 < g.normalY),
                          (p.thisFromLeft = p.thisFromLeft || 0 < g.normalX),
                          (p.thisFromRight = p.thisFromRight || 0 > g.normalX)),
                      q == r
                        ? ((p.otherFromBottom =
                            p.otherFromBottom || 0 < g.normalY),
                          (p.otherFromTop = p.otherFromTop || 0 > g.normalY),
                          (p.otherFromLeft = p.otherFromLeft || 0 > g.normalX),
                          (p.otherFromRight =
                            p.otherFromRight || 0 < g.normalX))
                        : t == r &&
                          ((p.otherFromBottom =
                            p.otherFromBottom || 0 > g.normalY),
                          (p.otherFromTop = p.otherFromTop || 0 < g.normalY),
                          (p.otherFromLeft = p.otherFromLeft || 0 < g.normalX),
                          (p.otherFromRight =
                            p.otherFromRight || 0 > g.normalX)),
                      null != m &&
                        ((p.thisCollidedWithActor =
                          p.thisCollidedWithActor ||
                          (1 != m.groupID &&
                            -2 != m.groupID &&
                            !m.isTerrainRegion)),
                        (p.thisCollidedWithTerrain =
                          p.thisCollidedWithTerrain || m.isTerrainRegion),
                        (p.thisCollidedWithTile =
                          p.thisCollidedWithTile || 1 == m.groupID)),
                      (p.otherCollidedWithActor =
                        p.otherCollidedWithActor ||
                        (1 != this.groupID &&
                          -2 != this.groupID &&
                          !this.isTerrainRegion)),
                      (p.otherCollidedWithTerrain =
                        p.otherCollidedWithTerrain || this.isTerrainRegion),
                      (p.otherCollidedWithTile =
                        p.otherCollidedWithTile || 1 == this.groupID),
                      (p.thisCollidedWithSensor =
                        p.thisCollidedWithSensor || k.isSensor()),
                      (p.otherCollidedWithSensor =
                        p.otherCollidedWithSensor || l.isSensor()));
              }
            }
          if (0 < this.collisionsCount)
            for (f = this.collisions.iterator(); f.hasNext(); )
              if (
                ((h = f.next()),
                null != h &&
                  null != h.thisActor &&
                  null != h.otherActor &&
                  h.thisActor.handlesCollisions &&
                  h.otherActor.handlesCollisions)
              ) {
                $a.lastCollided = h.otherActor;
                g = this.collisionListeners;
                for (n = 0; n < g.length; ) {
                  try {
                    var w = g[n];
                    w(h, g);
                    -1 == J.indexOf(g, w) && --n;
                  } catch (Ce) {
                    if (
                      ((X.lastException = Ce),
                      Ce instanceof v && (Ce = Ce.val),
                      !u.__instanceof(Ce, String))
                    )
                      throw Ce;
                  }
                  ++n;
                }
                this.engine.handleCollision(this, h);
              }
        }
        this.internalUpdate(a, !0);
        1 == this.physicsMode &&
          ((0 < this.collisionListenerCount ||
            null != d.h[e] ||
            null != d.h[b]) &&
            this.handleCollisionsSimple(),
          this.disposeRemovedCollisionInfo());
        if (2 != this.physicsMode)
          for (w = this.whenUpdatedListeners, d = 0; d < w.length; ) {
            try {
              var B = w[d];
              B(a, w);
              -1 == J.indexOf(w, B) && --d;
            } catch (Ce) {
              if (
                ((X.lastException = Ce),
                Ce instanceof v && (Ce = Ce.val),
                !u.__instanceof(Ce, String))
              )
                throw Ce;
            }
            ++d;
          }
        (0 < this.positionListenerCount || null != c.h[e] || null != c.h[b]) &&
          this.checkScreenState();
        null != this.label && this.label.setAlpha(this.get_alpha());
      }
    },
    internalUpdate: function (a, b) {
      if (!this.paused) {
        if (0 != this.physicsMode) {
          1 != this.physicsMode ||
            this.ignoreGravity ||
            this.isHUD ||
            ((this.xSpeed += a * this.engine.gravityX * 0.001),
            (this.ySpeed += a * this.engine.gravityY * 0.001));
          if (0 != this.xSpeed || 0 != this.ySpeed)
            this.resetReal(this.realX, this.realY),
              this.moveActorBy(
                (10 / r.STEP_SIZE) * this.xSpeed * a * 0.01,
                (10 / r.STEP_SIZE) * this.ySpeed * a * 0.01,
                !1
              );
          0 != this.rSpeed && (this.realAngle += a * this.rSpeed * 0.001);
          this.fixedRotation && (this.rSpeed = this.realAngle = 0);
        } else {
          var c = this.body.getPosition();
          this.realX = c.x * r.physicsScale;
          this.realY = c.y * r.physicsScale;
          this.resetReal(this.realX, this.realY);
          this.realAngle = 57.29577951308402 * this.body.getAngle();
        }
        if (
          this.lastX != this.realX ||
          this.lastY != this.realY ||
          this.lastAngle != this.realAngle ||
          this.lastScale.x != this.realScaleX ||
          this.lastScale.y != this.realScaleY
        )
          this.updateMatrix = !0;
        this.lastX = this.realX;
        this.lastY = this.realY;
        this.lastAngle = this.realAngle;
        this.lastScale.x = this.realScaleX;
        this.lastScale.y = this.realScaleY;
        b &&
          null != this.currAnimation &&
          ((b = this.currAnimation),
          b.model.sync && b.model.looping
            ? ((a = b.frameIndex),
              (b.timer = b.model.sharedTimer),
              (b.frameIndex = b.model.sharedFrameIndex),
              a != b.frameIndex && (b.needsUpdate = !0))
            : ((b.timer += a),
              0 < b.numFrames &&
                b.timer > b.durations[b.frameIndex] &&
                ((a = b.frameIndex),
                (b.timer -= b.durations[b.frameIndex]),
                b.frameIndex++,
                b.frameIndex >= b.numFrames &&
                  (b.model.looping
                    ? (b.frameIndex = 0)
                    : ((b.finished = !0), b.frameIndex--)),
                a != b.frameIndex && (b.needsUpdate = !0))));
      }
    },
    updateDrawingMatrix: function (a) {
      null == a && (a = !1);
      if (!this.paused || a)
        this.smoothMove
          ? (this.firstMove ||
              ((this.drawX = this.realX),
              (this.drawY = this.realY),
              (this.firstMove = !0)),
            (this.moveXDistance = this.realX - this.drawX),
            (this.moveYDistance = this.realY - this.drawY),
            (this.drawX =
              this.moveXDistance > this.minMove
                ? this.moveXDistance * this.moveMultiplier > this.minMove
                  ? this.moveXDistance > this.maxMove
                    ? this.realX
                    : this.drawX + this.moveXDistance * this.moveMultiplier
                  : this.drawX + this.minMove
                : this.moveXDistance < -1 * this.minMove
                ? this.moveXDistance * this.moveMultiplier < -1 * this.minMove
                  ? this.moveXDistance < -1 * this.maxMove
                    ? this.realX
                    : this.drawX + this.moveXDistance * this.moveMultiplier
                  : this.drawX - this.minMove
                : this.realX),
            (this.drawY =
              this.moveYDistance > this.minMove
                ? this.moveYDistance * this.moveMultiplier > this.minMove
                  ? this.moveYDistance > this.maxMove
                    ? this.realY
                    : this.drawY + this.moveYDistance * this.moveMultiplier
                  : this.drawY + this.minMove
                : this.moveYDistance < -1 * this.minMove
                ? this.moveYDistance * this.moveMultiplier < -1 * this.minMove
                  ? this.moveYDistance < -1 * this.maxMove
                    ? this.realY
                    : this.drawY + this.moveYDistance * this.moveMultiplier
                  : this.drawY - this.minMove
                : this.realY))
          : 0 != this.physicsMode
          ? ((this.drawX = this.realX), (this.drawY = this.realY))
          : ((a = this.body.getPosition()),
            (this.drawX = a.x * r.physicsScale),
            (this.drawY = a.y * r.physicsScale)),
          (this.transformPoint.x =
            (this.currOrigin.x - this.cacheWidth / 2) * r.SCALE),
          (this.transformPoint.y =
            (this.currOrigin.y - this.cacheHeight / 2) * r.SCALE),
          this.transformMatrix.identity(),
          this.transformMatrix.translate(
            -this.transformPoint.x,
            -this.transformPoint.y
          ),
          this.transformMatrix.scale(this.realScaleX, this.realScaleY),
          0 != this.realAngle &&
            this.transformMatrix.rotate(0.01745329251994278 * this.realAngle),
          U.pixelsnap
            ? this.transformMatrix.translate(
                Math.round(this.drawX) * r.SCALE,
                Math.round(this.drawY) * r.SCALE
              )
            : this.transformMatrix.translate(
                this.drawX * r.SCALE,
                this.drawY * r.SCALE
              ),
          null == this.transformObj &&
            (this.transformObj = this.get_transform()),
          this.transformObj.set_matrix(this.transformMatrix);
    },
    updateTweenAlpha: function () {
      this.set_alpha(this.tweenProps.alpha.value);
    },
    updateTweenScaleXY: function () {
      this.realScaleX = this.tweenProps.realScaleXY.value1;
      this.realScaleY = this.tweenProps.realScaleXY.value2;
      this.updateBodyScale();
    },
    updateTweenAngle: function () {
      this.setAngle(this.tweenProps.angle.value, !1);
    },
    updateTweenXY: function () {
      0 == this.physicsMode
        ? this.setXY(this.tweenProps.xy.value1, this.tweenProps.xy.value2)
        : (this.moveActorBy(
            this.tweenProps.xy.value1 - this.getX(!1),
            this.tweenProps.xy.value2 - this.getY(!1),
            !1
          ),
          (this.updateMatrix = !0));
      this.tweenProps.xy.finished &&
        null != this.currOffset &&
        this.resetReal(this.realX, this.realY);
    },
    updateBodyScale: function () {
      this.autoScale &&
        0 == this.physicsMode &&
        null != this.body &&
        this.bodyDef.type != ea.b2_staticBody &&
        0 != this.realScaleX &&
        0 != this.realScaleY &&
        this.scaleBody(this.realScaleX, this.realScaleY);
    },
    scaleBody: function (a, b) {
      for (var c = [], d = this.body.getFixtureList(); null != d; )
        c.push(d), (d = d.getNext());
      for (d = 0; d < c.length; ) {
        var e = c[d];
        ++d;
        var f = e.getShape();
        e = this.body.getLocalCenter();
        if (u.__instanceof(f, Jc)) {
          var g = f,
            h = (1 / this.bodyScale.x) * a,
            n = (1 / this.bodyScale.y) * b,
            k = g.m_p;
          k.subtract(e);
          k.x *= h;
          k.y *= n;
          g.m_p = e.copy();
          g.m_p.add(k);
          f.m_radius *= Math.abs(h);
        } else if (u.__instanceof(f, Db)) {
          g = f.m_vertices;
          h = [];
          n =
            (0 < this.bodyScale.x && 0 > a) || (0 > this.bodyScale.x && 0 < a);
          k =
            (0 < this.bodyScale.y && 0 > b) || (0 > this.bodyScale.y && 0 < b);
          for (var m = 0; m < g.length; ) {
            var l = g[m];
            ++m;
            l.subtract(e);
            l.x = (1 / Math.abs(this.bodyScale.x)) * l.x * Math.abs(a);
            l.y = (1 / Math.abs(this.bodyScale.y)) * l.y * Math.abs(b);
            n && (l.x = -l.x);
            k && (l.y = -l.y);
            var p = e.copy();
            p.add(l);
            h.push(p);
          }
          (n && k) || (!n && !k) || h.reverse();
          f.setAsArray(h, h.length);
        }
      }
      this.bodyScale.x = a;
      this.bodyScale.y = b;
    },
    checkScreenState: function () {
      for (
        var a = this.isOnScreen(),
          b = a || this.isInScene(),
          c = !this.lastScreenState && a,
          d = !this.lastSceneState && b,
          e = this.lastScreenState && !a,
          f = this.lastSceneState && !b,
          g = this.positionListeners,
          h = 0;
        h < g.length;

      ) {
        try {
          var n = g[h];
          n(c, e, d, f, g);
          -1 == J.indexOf(g, n) && --h;
        } catch (l) {
          if (
            ((X.lastException = l),
            l instanceof v && (l = l.val),
            !u.__instanceof(l, String))
          )
            throw l;
        }
        ++h;
      }
      h = this.engine.typeGroupPositionListeners.h[this.groupID + 1e6];
      g = this.engine.typeGroupPositionListeners.h[this.typeID];
      if (null != h)
        for (n = 0; n < h.length; ) {
          try {
            var k = h[n];
            k(this, c, e, d, f, h);
            -1 == J.indexOf(h, k) && --n;
          } catch (l) {
            if (
              ((X.lastException = l),
              l instanceof v && (l = l.val),
              !u.__instanceof(l, String))
            )
              throw l;
          }
          ++n;
        }
      if (null != g)
        for (k = 0; k < g.length; ) {
          try {
            var m = g[k];
            m(this, c, e, d, f, g);
            -1 == J.indexOf(g, m) && --k;
          } catch (l) {
            if (
              ((X.lastException = l),
              l instanceof v && (l = l.val),
              !u.__instanceof(l, String))
            )
              throw l;
          }
          ++k;
        }
      this.lastScreenState = a;
      this.lastSceneState = b;
    },
    contactCount: null,
    collisionsCount: null,
    handleCollisions: function () {
      if (0 < this.contactCount)
        for (var a = 0, b, c = this.contacts.iterator(); c.hasNext(); ) {
          b = c.next();
          var d = b.key;
          var e = this.collisions.mH;
          var f = e.mHash[(73856093 * d) & e.mMask];
          if (-1 == f) f = !1;
          else if (((e = e.mData), e[f] == d)) f = !0;
          else {
            var g = !1;
            for (f = e[f + 2]; -1 != f; ) {
              if (e[f] == d) {
                g = !0;
                break;
              }
              f = e[f + 2];
            }
            f = g;
          }
          if (f) {
            f = this.collisions;
            g = f.mH;
            e = g.mHash[(73856093 * d) & g.mMask];
            if (-1 == e) d = -2147483648;
            else if (((g = g.mData), g[e] == d)) d = g[e + 1];
            else {
              var h = -2147483648;
              for (e = g[e + 2]; -1 != e; ) {
                if (g[e] == d) {
                  h = g[e + 1];
                  break;
                }
                e = g[e + 2];
              }
              d = h;
            }
            d = -2147483648 == d ? null : f.mVals[d];
            b.getWorldManifold($a.manifold);
            f = 0;
            for (e = $a.manifold.m_points; f < e.length; )
              (g = e[f]),
                ++f,
                0 != g.x &&
                  0 != g.y &&
                  ((b = d.points[a]),
                  null == b
                    ? (d.points[a] = Rd.get(
                        g.x,
                        g.y,
                        $a.manifold.m_normal.x,
                        $a.manifold.m_normal.y
                      ))
                    : ((b = d.points[a]),
                      (b.x = g.x),
                      (b.y = g.y),
                      (b.normalX = $a.manifold.m_normal.x),
                      (b.normalY = $a.manifold.m_normal.y)),
                  ++a);
            for (; d.points.length > a; ) Rd.free(d.points.pop());
            a = 0;
          } else {
            var n = b.getFixtureA().getUserData(),
              k = b.getFixtureB().getUserData();
            n == this
              ? ((f = k), (e = b.getFixtureB()), (g = b.getFixtureA()))
              : ((f = n), (e = b.getFixtureA()), (g = b.getFixtureB()));
            h = new oc();
            h.otherActor = f;
            h.otherShape = e;
            h.thisActor = this;
            h.thisShape = g;
            h.actorA = n;
            h.actorB = k;
            b.getWorldManifold($a.manifold);
            this.collisions.set(d, h);
            this.collisionsCount++;
            d = this.getBody();
            n = f.getBody();
            k = b.getFixtureA().getBody();
            for (
              var m = b.getFixtureB().getBody(),
                l = 0,
                p = $a.manifold.m_points;
              l < p.length;

            )
              ((b = p[l]), ++l, 0 == b.x || 0 == b.y || g.isSensor())
                ? g.isSensor() &&
                  (null != f &&
                    ((h.thisCollidedWithActor =
                      h.thisCollidedWithActor ||
                      (1 != f.groupID &&
                        -2 != f.groupID &&
                        !f.isTerrainRegion)),
                    (h.thisCollidedWithTerrain =
                      h.thisCollidedWithTerrain || f.isTerrainRegion),
                    (h.thisCollidedWithTile =
                      h.thisCollidedWithTile || 1 == f.groupID)),
                  (h.otherCollidedWithActor =
                    h.otherCollidedWithActor ||
                    (1 != this.groupID &&
                      -2 != this.groupID &&
                      !this.isTerrainRegion)),
                  (h.otherCollidedWithTerrain =
                    h.otherCollidedWithTerrain || this.isTerrainRegion),
                  (h.otherCollidedWithTile =
                    h.otherCollidedWithTile || 1 == this.groupID),
                  (h.thisCollidedWithSensor =
                    h.thisCollidedWithSensor || e.isSensor()),
                  (h.otherCollidedWithSensor =
                    h.otherCollidedWithSensor || g.isSensor()))
                : ((b = Rd.get(
                    b.x,
                    b.y,
                    $a.manifold.m_normal.x,
                    $a.manifold.m_normal.y
                  )),
                  h.points.push(b),
                  k == d
                    ? ((h.thisFromBottom = h.thisFromBottom || 0 < b.normalY),
                      (h.thisFromTop = h.thisFromTop || 0 > b.normalY),
                      (h.thisFromLeft = h.thisFromLeft || 0 > b.normalX),
                      (h.thisFromRight = h.thisFromRight || 0 < b.normalX))
                    : m == d &&
                      ((h.thisFromBottom = h.thisFromBottom || 0 > b.normalY),
                      (h.thisFromTop = h.thisFromTop || 0 < b.normalY),
                      (h.thisFromLeft = h.thisFromLeft || 0 < b.normalX),
                      (h.thisFromRight = h.thisFromRight || 0 > b.normalX)),
                  k == n
                    ? ((h.otherFromBottom = h.otherFromBottom || 0 < b.normalY),
                      (h.otherFromTop = h.otherFromTop || 0 > b.normalY),
                      (h.otherFromLeft = h.otherFromLeft || 0 > b.normalX),
                      (h.otherFromRight = h.otherFromRight || 0 < b.normalX))
                    : m == n &&
                      ((h.otherFromBottom = h.otherFromBottom || 0 > b.normalY),
                      (h.otherFromTop = h.otherFromTop || 0 < b.normalY),
                      (h.otherFromLeft = h.otherFromLeft || 0 < b.normalX),
                      (h.otherFromRight = h.otherFromRight || 0 > b.normalX)),
                  null != f &&
                    ((h.thisCollidedWithActor =
                      h.thisCollidedWithActor ||
                      (1 != f.groupID &&
                        -2 != f.groupID &&
                        !f.isTerrainRegion)),
                    (h.thisCollidedWithTerrain =
                      h.thisCollidedWithTerrain || f.isTerrainRegion),
                    (h.thisCollidedWithTile =
                      h.thisCollidedWithTile || 1 == f.groupID)),
                  (h.otherCollidedWithActor =
                    h.otherCollidedWithActor ||
                    (1 != this.groupID &&
                      -2 != this.groupID &&
                      !this.isTerrainRegion)),
                  (h.otherCollidedWithTerrain =
                    h.otherCollidedWithTerrain || this.isTerrainRegion),
                  (h.otherCollidedWithTile =
                    h.otherCollidedWithTile || 1 == this.groupID),
                  (h.thisCollidedWithSensor =
                    h.thisCollidedWithSensor || e.isSensor()),
                  (h.otherCollidedWithSensor =
                    h.otherCollidedWithSensor || g.isSensor()));
          }
        }
      if (0 < this.collisionsCount)
        for (a = this.collisions.iterator(); a.hasNext(); )
          if (
            ((c = a.next()),
            null != c &&
              null != c.thisActor &&
              null != c.otherActor &&
              c.thisActor.handlesCollisions &&
              c.otherActor.handlesCollisions)
          ) {
            $a.lastCollided = c.otherActor;
            b = this.collisionListeners;
            for (d = 0; d < b.length; ) {
              try {
                var r = b[d];
                r(c, b);
                -1 == J.indexOf(b, r) && --d;
              } catch (ql) {
                if (
                  ((X.lastException = ql),
                  ql instanceof v && (ql = ql.val),
                  !u.__instanceof(ql, String))
                )
                  throw ql;
              }
              ++d;
            }
            this.engine.handleCollision(this, c);
          }
    },
    addContact: function (a) {
      null != this.contacts &&
        (this.contacts.set(a.key, a), this.contactCount++);
    },
    removeContact: function (a) {
      if (null != this.collisions) {
        var b = this.collisions,
          c = a.key,
          d = b.mH,
          e = d.mHash[(73856093 * c) & d.mMask];
        if (-1 == e) c = -2147483648;
        else if (((d = d.mData), d[e] == c)) c = d[e + 1];
        else {
          var f = -2147483648;
          for (e = d[e + 2]; -1 != e; ) {
            if (d[e] == c) {
              f = d[e + 1];
              break;
            }
            e = d[e + 2];
          }
          c = f;
        }
        b = -2147483648 == c ? null : b.mVals[c];
        if (null != b)
          for (
            this.collisions.unset(a.key), this.collisionsCount--;
            0 < b.points.length;

          )
            Rd.free(b.points.pop());
      }
      null != this.contacts &&
        this.contacts.unset(a.key) &&
        this.contactCount--;
    },
    addRegionContact: function (a) {
      null != this.regionContacts && this.regionContacts.set(a.key, a);
    },
    removeRegionContact: function (a) {
      null != this.regionContacts && this.regionContacts.unset(a.key);
    },
    getID: function () {
      return this.ID;
    },
    getName: function () {
      return this.get_name();
    },
    getGroupID: function () {
      return 0 != this.physicsMode ? this.groupID : this.body.groupID;
    },
    getLayerID: function () {
      return this.layer.ID;
    },
    getLayer: function () {
      return this.layer;
    },
    getLayerName: function () {
      return this.layer.layerName;
    },
    getLayerOrder: function () {
      return this.layer.order;
    },
    getType: function () {
      return this.type;
    },
    isPausable: function () {
      return this.getType().pausable;
    },
    isPaused: function () {
      return this.paused;
    },
    pause: function () {
      if (this.isPausable()) {
        this.tweenProps.pause();
        for (var a = 0, b = this.behaviors.behaviors; a < b.length; ) {
          var c = b[a];
          ++a;
          null != c.script && c.script.pauseTweens();
        }
        this.paused = !0;
        0 == this.physicsMode && this.body.setPaused(!0);
      }
    },
    unpause: function () {
      if (this.isPausable()) {
        this.tweenProps.unpause();
        for (var a = 0, b = this.behaviors.behaviors; a < b.length; ) {
          var c = b[a];
          ++a;
          null != c.script && c.script.unpauseTweens();
        }
        this.paused = !1;
        0 == this.physicsMode && this.body.setPaused(!1);
      }
    },
    getGroup: function () {
      var a = this.engine.groups,
        b = this.getGroupID();
      return a.h[b];
    },
    getIsRegion: function () {
      return this.isRegion;
    },
    getIsTerrainRegion: function () {
      return this.isTerrainRegion;
    },
    moveToLayer: function (a) {
      !this.isHUD &&
        u.__instanceof(a, zc) &&
        this.engine.moveActorToLayer(this, a);
    },
    bringToFront: function () {
      this.isHUD || this.engine.bringToFront(this);
    },
    bringForward: function () {
      this.isHUD || this.engine.bringForward(this);
    },
    sendToBack: function () {
      this.isHUD || this.engine.sendToBack(this);
    },
    sendBackward: function () {
      this.isHUD || this.engine.sendBackward(this);
    },
    moveToBottom: function () {
      this.parent.setChildIndex(this, 0);
    },
    moveToTop: function () {
      this.parent.setChildIndex(this, this.parent.get_numChildren() - 1);
    },
    moveDown: function () {
      var a = this.parent.getChildIndex(this);
      0 < a && this.parent.setChildIndex(this, a - 1);
    },
    moveUp: function () {
      var a = this.parent.getChildIndex(this),
        b = this.parent.get_numChildren() - 1;
      a < b && this.parent.setChildIndex(this, a + 1);
    },
    getZIndex: function () {
      return this.parent.getChildIndex(this);
    },
    setZIndex: function (a) {
      var b = this.parent.get_numChildren() - 1;
      a > b && (a = b);
      0 > a && (a = 0);
      this.parent.setChildIndex(this, a);
    },
    enableSmoothMotion: function () {
      this.smoothMove = !0;
    },
    getX: function (a) {
      null == a && (a = !0);
      var b = -1;
      r.NO_PHYSICS ||
        (this.isRegion || this.isTerrainRegion
          ? (b =
              r.toPixelUnits(this.body.getPosition().x) - this.cacheWidth / 2)
          : 0 == this.physicsMode &&
            (b =
              this.body.getPosition().x * r.physicsScale -
              Math.floor(this.cacheWidth / 2) -
              this.currOffset.x));
      if (r.NO_PHYSICS || 0 != this.physicsMode)
        b = this.realX - Math.floor(this.cacheWidth / 2) - this.currOffset.x;
      return a ? Math.round(b) : b;
    },
    getY: function (a) {
      null == a && (a = !0);
      var b = -1;
      r.NO_PHYSICS ||
        (this.isRegion || this.isTerrainRegion
          ? (b =
              r.toPixelUnits(this.body.getPosition().y) - this.cacheHeight / 2)
          : 0 == this.physicsMode &&
            (b =
              this.body.getPosition().y * r.physicsScale -
              Math.floor(this.cacheHeight / 2) -
              this.currOffset.y));
      if (r.NO_PHYSICS || 0 != this.physicsMode)
        b = this.realY - Math.floor(this.cacheHeight / 2) - this.currOffset.y;
      return a ? Math.round(b) : b;
    },
    getXCenter: function () {
      return 0 == this.physicsMode
        ? Math.round(
            r.toPixelUnits(this.body.getWorldCenter().x) - this.currOffset.x
          )
        : this.realX - this.currOffset.x;
    },
    getYCenter: function () {
      return 0 == this.physicsMode
        ? Math.round(
            r.toPixelUnits(this.body.getWorldCenter().y) - this.currOffset.y
          )
        : this.realY - this.currOffset.y;
    },
    getScreenX: function () {
      return this.isHUD ? this.getX(!0) : this.getX(!0) - r.cameraX / r.SCALE;
    },
    getScreenY: function () {
      return this.isHUD ? this.getY(!0) : this.getY(!0) - r.cameraY / r.SCALE;
    },
    setX: function (a, b, c) {
      null == c && (c = !1);
      null == b && (b = !1);
      1 == this.physicsMode
        ? this.moveActorBy(
            a +
              Math.floor(this.cacheWidth / 2) +
              this.currOffset.x -
              this.realX,
            this.realY - this.realY,
            c || !this.continuousCollision,
            !1
          )
        : 2 == this.physicsMode
        ? this.resetReal(
            a + Math.floor(this.cacheWidth / 2) + this.currOffset.x,
            this.realY
          )
        : ((this.dummy.x =
            this.isRegion || this.isTerrainRegion
              ? r.toPhysicalUnits(a)
              : r.toPhysicalUnits(
                  a + Math.floor(this.cacheWidth / 2) + this.currOffset.x
                )),
          (this.dummy.y = this.body.getPosition().y),
          this.body.setPosition(this.dummy),
          b && this.body.setLinearVelocity(this.zero));
      this.snapOnSet && ((this.drawX = this.realX), (this.drawY = this.realY));
      this.updateMatrix = !0;
    },
    setY: function (a, b, c) {
      null == c && (c = !1);
      null == b && (b = !1);
      1 == this.physicsMode
        ? this.moveActorBy(
            this.realX - this.realX,
            a +
              Math.floor(this.cacheHeight / 2) +
              this.currOffset.y -
              this.realY,
            c || !this.continuousCollision,
            !1
          )
        : 2 == this.physicsMode
        ? this.resetReal(
            this.realX,
            a + Math.floor(this.cacheHeight / 2) + this.currOffset.y
          )
        : ((this.dummy.y =
            this.isRegion || this.isTerrainRegion
              ? r.toPhysicalUnits(a)
              : r.toPhysicalUnits(
                  a + Math.floor(this.cacheHeight / 2) + this.currOffset.y
                )),
          (this.dummy.x = this.body.getPosition().x),
          this.body.setPosition(this.dummy),
          b && this.body.setLinearVelocity(this.zero));
      this.snapOnSet && ((this.drawX = this.realX), (this.drawY = this.realY));
      this.updateMatrix = !0;
    },
    setXY: function (a, b, c, d) {
      null == d && (d = !1);
      null == c && (c = !1);
      1 == this.physicsMode
        ? this.moveActorBy(
            a +
              Math.floor(this.cacheWidth / 2) +
              this.currOffset.x -
              this.realX,
            b +
              Math.floor(this.cacheHeight / 2) +
              this.currOffset.y -
              this.realY,
            d || !this.continuousCollision,
            !1
          )
        : 2 == this.physicsMode
        ? this.resetReal(
            a + Math.floor(this.cacheWidth / 2) + this.currOffset.x,
            b + Math.floor(this.cacheHeight / 2) + this.currOffset.y
          )
        : (this.isRegion || this.isTerrainRegion
            ? ((this.dummy.x = r.toPhysicalUnits(a)),
              (this.dummy.y = r.toPhysicalUnits(b)))
            : ((this.dummy.x = r.toPhysicalUnits(
                a + Math.floor(this.cacheWidth / 2) + this.currOffset.x
              )),
              (this.dummy.y = r.toPhysicalUnits(
                b + Math.floor(this.cacheHeight / 2) + this.currOffset.y
              ))),
          this.body.setPosition(this.dummy),
          c && this.body.setLinearVelocity(this.zero));
      this.snapOnSet && ((this.drawX = this.realX), (this.drawY = this.realY));
      this.updateMatrix = !0;
    },
    setXCenter: function (a) {
      this.setX(a - this.getWidth() / 2);
    },
    setYCenter: function (a) {
      this.setY(a - this.getHeight() / 2);
    },
    setScreenX: function (a) {
      this.isHUD ? this.setX(a) : this.setX(a + r.cameraX / r.SCALE);
    },
    setScreenY: function (a) {
      this.isHUD ? this.setY(a) : this.setY(a + r.cameraY / r.SCALE);
    },
    follow: function (a) {
      if (null != a)
        if (0 != this.physicsMode) {
          var b = a.getXCenter();
          a = a.getYCenter();
          this.moveActorBy(b - this.realX, a - this.realY, !0, !1);
        } else this.body.setPosition(a.body.getWorldCenter());
    },
    followWithOffset: function (a, b, c) {
      0 != this.physicsMode
        ? ((b = a.getXCenter() + b),
          (c = a.getYCenter() + c),
          this.moveActorBy(b - this.realX, c - this.realY, !0, !1))
        : ((a = a.body.getWorldCenter()),
          (a.x += r.toPhysicalUnits(b)),
          (a.y += r.toPhysicalUnits(c)),
          this.body.setPosition(a));
    },
    setOriginPoint: function (a, b) {
      var c =
        0 == this.physicsMode
          ? this.body.getPosition()
          : new D(r.toPhysicalUnits(this.realX), r.toPhysicalUnits(this.realY));
      var d = new D(this.currOffset.x, this.currOffset.y),
        e = this.getAngle(),
        f = (a - this.cacheWidth / 2) | 0,
        g = (b - this.cacheHeight / 2) | 0;
      if (
        null != this.currOrigin &&
        ((this.currOffset.x | 0) != f || (this.currOffset.y | 0) != g) &&
        0 != ((57.29577951308402 * e) | 0)
      ) {
        var h = e + Math.atan2(-this.currOffset.y, -this.currOffset.x);
        e += Math.atan2(-g, -f);
        var n = Math.sqrt(
            Math.pow(this.currOffset.x, 2) + Math.pow(this.currOffset.y, 2)
          ),
          k = Math.sqrt(Math.pow(f, 2) + Math.pow(g, 2)),
          m = Math.round(this.currOrigin.y + Math.sin(h) * n),
          l = Math.round(b + Math.sin(e) * k);
        c.x += r.toPhysicalUnits(
          Math.round(this.currOrigin.x + Math.cos(h) * n) -
            Math.round(a + Math.cos(e) * k)
        );
        c.y += r.toPhysicalUnits(m - l);
      }
      this.currOrigin.x = a;
      this.currOrigin.y = b;
      this.currOffset.x = f;
      this.currOffset.y = g;
      d.x = this.currOffset.x - d.x;
      d.y = this.currOffset.y - d.y;
      c.x += r.toPhysicalUnits(d.x);
      c.y += r.toPhysicalUnits(d.y);
      0 == this.physicsMode
        ? this.body.setPosition(c)
        : ((this.realX = r.toPixelUnits(c.x)),
          (this.realY = r.toPixelUnits(c.y)));
      this.resetOrigin = !0;
    },
    getXVelocity: function () {
      return 0 != this.physicsMode
        ? this.xSpeed
        : this.body.getLinearVelocity().x;
    },
    getYVelocity: function () {
      return 0 != this.physicsMode
        ? this.ySpeed
        : this.body.getLinearVelocity().y;
    },
    setXVelocity: function (a) {
      if (0 != this.physicsMode) this.xSpeed = a;
      else {
        var b = this.body.getLinearVelocity();
        b.x = a;
        this.body.setLinearVelocity(b);
        this.body.setAwake(!0);
      }
    },
    setYVelocity: function (a) {
      if (0 != this.physicsMode) this.ySpeed = a;
      else {
        var b = this.body.getLinearVelocity();
        b.y = a;
        this.body.setLinearVelocity(b);
        this.body.setAwake(!0);
      }
    },
    setVelocity: function (a, b) {
      this.setXVelocity(b * Math.cos(0.01745329251994278 * a));
      this.setYVelocity(b * Math.sin(0.01745329251994278 * a));
    },
    accelerateX: function (a) {
      this.setXVelocity(this.getXVelocity() + a);
    },
    accelerateY: function (a) {
      this.setYVelocity(this.getYVelocity() + a);
    },
    accelerate: function (a, b) {
      this.setXVelocity(
        this.getXVelocity() + b * Math.cos(0.01745329251994278 * a)
      );
      this.setYVelocity(
        this.getYVelocity() + b * Math.sin(0.01745329251994278 * a)
      );
    },
    getAngle: function () {
      return 0 != this.physicsMode
        ? 0.01745329251994278 * this.realAngle
        : this.body.getAngle();
    },
    getAngleInDegrees: function () {
      return 0 != this.physicsMode
        ? this.realAngle
        : 57.29577951308402 * this.body.getAngle();
    },
    setAngle: function (a, b) {
      null == b && (b = !0);
      b
        ? 0 != this.physicsMode
          ? (this.realAngle = 57.29577951308402 * a)
          : this.body.setAngle(a)
        : 0 != this.physicsMode
        ? (this.realAngle = a)
        : this.body.setAngle(0.01745329251994278 * a);
      this.updateMatrix = !0;
    },
    rotate: function (a, b) {
      null == b && (b = !0);
      b
        ? 0 != this.physicsMode
          ? (this.realAngle += 57.29577951308402 * a)
          : this.body.setAngle(this.body.getAngle() + a)
        : 0 != this.physicsMode
        ? (this.realAngle += a)
        : this.body.setAngle(this.body.getAngle() + 0.01745329251994278 * a);
    },
    getAngularVelocity: function () {
      return 0 != this.physicsMode
        ? 0.01745329251994278 * this.rSpeed
        : this.body.getAngularVelocity();
    },
    setAngularVelocity: function (a) {
      0 != this.physicsMode
        ? (this.rSpeed = 57.29577951308402 * a)
        : (this.body.setAngularVelocity(a), this.body.setAwake(!0));
    },
    changeAngularVelocity: function (a) {
      0 != this.physicsMode
        ? (this.rSpeed += 57.29577951308402 * a)
        : (this.body.setAngularVelocity(this.body.getAngularVelocity() + a),
          this.body.setAwake(!0));
    },
    push: function (a, b, c) {
      if (0 != this.physicsMode)
        (this.dummy.x = a),
          (this.dummy.y = b),
          this.dummy.normalize(),
          this.accelerateX(this.dummy.x * c * 0.01),
          this.accelerateY(this.dummy.y * c * 0.01);
      else if (0 != a || 0 != b)
        (this.dummy.x = a),
          (this.dummy.y = b),
          this.dummy.normalize(),
          this.dummy.multiply(c),
          this.body.applyForce(this.dummy, this.body.getWorldCenter());
    },
    pushInDirection: function (a, b) {
      this.push(
        Math.cos(0.01745329251994278 * a),
        Math.sin(0.01745329251994278 * a),
        b
      );
    },
    applyImpulse: function (a, b, c) {
      if (0 != this.physicsMode)
        (this.dummy.x = a),
          (this.dummy.y = b),
          this.dummy.normalize(),
          this.accelerateX(this.dummy.x * c),
          this.accelerateY(this.dummy.y * c);
      else if (0 != a || 0 != b)
        (this.dummy.x = a),
          (this.dummy.y = b),
          this.dummy.normalize(),
          this.dummy.multiply(c),
          this.body.applyImpulse(this.dummy, this.body.getWorldCenter());
    },
    applyImpulseInDirection: function (a, b) {
      this.applyImpulse(
        Math.cos(0.01745329251994278 * a),
        Math.sin(0.01745329251994278 * a),
        b
      );
    },
    applyTorque: function (a) {
      0 != this.physicsMode
        ? this.fixedRotation || (this.rSpeed -= a)
        : (this.body.applyTorque(a), this.body.setAwake(!0));
    },
    getWidth: function () {
      return this.cacheWidth;
    },
    getHeight: function () {
      return this.cacheHeight;
    },
    getPhysicsWidth: function () {
      return this.cacheWidth / r.physicsScale;
    },
    getPhysicsHeight: function () {
      return this.cacheHeight / r.physicsScale;
    },
    getBody: function () {
      return this.body;
    },
    enableRotation: function () {
      0 != this.physicsMode
        ? (this.fixedRotation = !1)
        : this.body.setFixedRotation(!1);
    },
    disableRotation: function () {
      0 != this.physicsMode
        ? (this.fixedRotation = !0)
        : this.body.setFixedRotation(!0);
    },
    setIgnoreGravity: function (a) {
      this.ignoreGravity = a;
      0 == this.physicsMode && this.body.setIgnoreGravity(a);
    },
    ignoresGravity: function () {
      return 0 != this.physicsMode
        ? this.ignoreGravity
        : this.body.isIgnoringGravity();
    },
    getFriction: function () {
      return 0 == this.physicsMode && null != this.body.m_fixtureList
        ? this.body.m_fixtureList.m_friction
        : 0;
    },
    getBounciness: function () {
      return 0 == this.physicsMode && null != this.body.m_fixtureList
        ? this.body.m_fixtureList.m_restitution
        : 0;
    },
    getMass: function () {
      return 0 == this.physicsMode ? this.md.mass : 0;
    },
    getAngularMass: function () {
      return 0 == this.physicsMode ? this.md.I : 0;
    },
    getLinearDamping: function () {
      return 0 == this.physicsMode ? this.body.getLinearDamping() : 0;
    },
    getAngularDamping: function () {
      return 0 == this.physicsMode ? this.body.getAngularDamping() : 0;
    },
    setFriction: function (a) {
      0 == this.physicsMode && this.body.setFriction(a);
    },
    setBounciness: function (a) {
      0 == this.physicsMode && this.body.setBounciness(a);
    },
    setMass: function (a) {
      0 == this.physicsMode &&
        ((this.md.mass = a), this.body.setMassData(this.md));
    },
    setAngularMass: function (a) {
      0 == this.physicsMode &&
        ((this.md.I = a), this.body.setMassData(this.md));
    },
    setLinearDamping: function (a) {
      0 == this.physicsMode && this.body.setLinearDamping(a);
    },
    setAngularDamping: function (a) {
      0 == this.physicsMode && this.body.setAngularDamping(a);
    },
    isMouseOver: function () {
      if (this.isHUD) {
        var a = (H.mouseX - r.engine.hudLayer.get_x()) / r.SCALE;
        var b = (H.mouseY - r.engine.hudLayer.get_y()) / r.SCALE;
      } else
        (a = (H.mouseX + r.cameraX * this.layer.scrollFactorX) / r.SCALE),
          (b = (H.mouseY + r.cameraY * this.layer.scrollFactorY) / r.SCALE);
      var c = Math.abs(this.get_scaleX()),
        d = Math.abs(this.get_scaleY()),
        e = this.currOrigin.x * (c - 1),
        f = (this.cacheWidth - this.currOrigin.x) * (c - 1),
        g = this.currOrigin.y * (d - 1),
        h = (this.cacheHeight - this.currOrigin.y) * (d - 1);
      0 == this.physicsMode ||
        (this.currOrigin.x == this.cacheWidth / 2 &&
          this.currOrigin.y == this.cacheHeight / 2) ||
        this.resetReal(this.realX, this.realY);
      var n = this.colX - e,
        k = this.colY - g;
      if (0 != this.get_rotation()) {
        c = n + this.currOrigin.x * c;
        d = k + this.currOrigin.y * d;
        a -= c;
        b -= d;
        var m = 0.01745329251994278 * this.get_rotation();
        d = d - a * Math.sin(m) + b * Math.cos(m);
        a = c + a * Math.cos(m) + b * Math.sin(m);
        b = d;
      }
      return this.isHUD && !r.engine.isHUDZoomable
        ? a >= n / r.engine.zoomMultiplier &&
          b >= k / r.engine.zoomMultiplier &&
          a < (n + this.cacheWidth + e + f) / r.engine.zoomMultiplier
          ? b < (k + this.cacheHeight + g + h) / r.engine.zoomMultiplier
          : !1
        : a >= n && b >= k && a < n + this.cacheWidth + e + f
        ? b < k + this.cacheHeight + g + h
        : !1;
    },
    isMouseHover: function () {
      return this.isMouseOver() ? !H.mouseDown : !1;
    },
    isMouseDown: function () {
      return this.isMouseOver() ? H.mouseDown : !1;
    },
    isMousePressed: function () {
      return this.isMouseOver() ? H.mousePressed : !1;
    },
    isMouseReleased: function () {
      return this.isMouseOver() ? H.mouseReleased : !1;
    },
    cancelTweens: function () {
      this.tweenProps.cancel();
    },
    fadeTo: function (a, b, c) {
      null == b && (b = 1);
      this.tweenProps.alpha.tween(this.get_alpha(), a, c, (1e3 * b) | 0);
    },
    growTo: function (a, b, c, d) {
      null == c && (c = 1);
      null == b && (b = 1);
      null == a && (a = 1);
      this.tweenProps.realScaleXY.tween(
        this.realScaleX,
        a,
        this.realScaleY,
        b,
        d,
        (1e3 * c) | 0
      );
    },
    spinTo: function (a, b, c) {
      null == b && (b = 1);
      this.tweenProps.angle.tween(
        this.getAngleInDegrees(),
        a,
        c,
        (1e3 * b) | 0
      );
    },
    moveTo: function (a, b, c, d) {
      null == c && (c = 1);
      this.tweenProps.xy.tween(
        this.getX(!1),
        a,
        this.getY(!1),
        b,
        d,
        (1e3 * c) | 0
      );
    },
    spinBy: function (a, b, c) {
      null == b && (b = 1);
      this.spinTo(this.getAngleInDegrees() + a, b, c);
    },
    moveBy: function (a, b, c, d) {
      null == c && (c = 1);
      this.moveTo(this.getX(!1) + a, this.getY(!1) + b, c, d);
    },
    drawImage: function (a) {
      if (null != this.currAnimation) {
        var b = 0,
          c = 0;
        0 < this.realAngle &&
          (this.drawMatrix.identity(),
          (this.transformPoint.x = (0 - this.cacheWidth / 2) * r.SCALE),
          (this.transformPoint.y = (0 - this.cacheHeight / 2) * r.SCALE),
          this.drawMatrix.translate(
            -this.transformPoint.x,
            -this.transformPoint.y
          ),
          this.drawMatrix.scale(this.realScaleX, this.realScaleY),
          this.drawMatrix.rotate(0.01745329251994278 * this.realAngle),
          this.drawMatrix.translate(this.colX * r.SCALE, this.colY * r.SCALE),
          (b += this.transformMatrix.tx - this.drawMatrix.tx),
          (c += this.transformMatrix.ty - this.drawMatrix.ty));
        var d = this.currAnimation.get_visible();
        this.currAnimation.set_visible(!0);
        var e = this.currAnimation,
          f = 0.01745329251994278 * this.realAngle;
        if (!U.disposeImages || e.model.checkImageReadable()) {
          e = e.get_bitmapData();
          b *= a.scaleX;
          c *= a.scaleY;
          a.rect.x = 0;
          a.rect.y = 0;
          a.rect.width = e.width;
          a.rect.height = e.height;
          a.drawActor
            ? null != a.actor && a.actor.isHUD
              ? ((a.point.x = a.x + b), (a.point.y = a.y + c))
              : ((a.point.x = a.x + b - r.cameraX),
                (a.point.y = a.y + c - r.cameraY))
            : ((a.point.x = a.x + b), (a.point.y = a.y + c));
          a.mtx.identity();
          a.mtx.rotate(f);
          a.mtx.translate(a.point.x, a.point.y);
          if (0 == f)
            1 != a.alpha &&
              ((a.point2.x = 0),
              (a.point2.y = 0),
              (a.rect2.width = e.width),
              (a.rect2.height = e.height),
              (f = new sa(
                e.width,
                e.height,
                !0,
                a.toARGB(0, (255 * a.alpha) | 0)
              )),
              (c = new sa(e.width, e.height, !0, 0)),
              c.copyPixels(e, a.rect2, a.point2, f, null, !0),
              (e = c)),
              a.graphics.beginBitmapFill(e, a.mtx),
              a.graphics.drawRect(a.point.x, a.point.y, e.width, e.height);
          else {
            1 != a.alpha &&
              ((a.point2.x = 0),
              (a.point2.y = 0),
              (a.rect2.width = e.width),
              (a.rect2.height = e.height),
              (f = new sa(
                e.width,
                e.height,
                !0,
                a.toARGB(0, (255 * a.alpha) | 0)
              )),
              (c = new sa(e.width, e.height, !0, 0)),
              c.copyPixels(e, a.rect2, a.point2, f, null, !0),
              (e = c));
            f = new sa(e.width + 2, e.height + 2, !0, 0);
            c = Math.sqrt(Math.pow(f.width, 2) + Math.pow(f.height, 2)) | 0;
            b = new W(0, 0, e.width, e.height);
            var g = new Y(1, 1);
            f.copyPixels(e, b, g);
            a.graphics.beginBitmapFill(f, a.mtx, !1, U.antialias);
            a.graphics.drawRect(
              a.x - (c - e.width) / 2,
              a.y - (c - e.height) / 2,
              c,
              c
            );
          }
          a.graphics.endFill();
        }
        this.currAnimation.set_visible(d);
      }
    },
    getCurrentImage: function () {
      return this.currAnimation.getCurrentImage();
    },
    enableActorDrawing: function () {
      this.drawActor = !0;
      null != this.currAnimation && this.currAnimation.set_visible(!0);
    },
    disableActorDrawing: function () {
      this.drawActor = !1;
      null != this.currAnimation && this.currAnimation.set_visible(!1);
    },
    drawsImage: function () {
      return this.drawActor;
    },
    setFilter: function (a) {
      null == this.bitmapFilters && (this.bitmapFilters = []);
      this.bitmapFilters = this.bitmapFilters.concat(a);
      this.currAnimation.set_filter(this.bitmapFilters);
    },
    clearFilters: function () {
      this.bitmapFilters = null;
      this.currAnimation.set_filter(null);
    },
    setBlendMode: function (a) {
      this.set_blendMode(a);
    },
    resetBlendMode: function () {
      this.set_blendMode(10);
    },
    addBehavior: function (a) {
      null != this.behaviors && this.behaviors.add(a);
    },
    hasBehavior: function (a) {
      return null != this.behaviors ? this.behaviors.hasBehavior(a) : !1;
    },
    enableBehavior: function (a) {
      null != this.behaviors && this.behaviors.enableBehavior(a);
    },
    disableBehavior: function (a) {
      null != this.behaviors && this.behaviors.disableBehavior(a);
    },
    isBehaviorEnabled: function (a) {
      return null != this.behaviors ? this.behaviors.isBehaviorEnabled(a) : !1;
    },
    enableAllBehaviors: function () {
      if (null != this.behaviors)
        for (var a = 0, b = this.behaviors.behaviors; a < b.length; ) {
          var c = b[a];
          ++a;
          c.enabled = !0;
        }
    },
    getValue: function (a, b) {
      return this.behaviors.getAttribute(a, b);
    },
    setValue: function (a, b, c) {
      this.behaviors.setAttribute(a, b, c);
    },
    shout: function (a, b) {
      return this.behaviors.call(a, b);
    },
    say: function (a, b, c) {
      return this.behaviors.call2(a, b, c);
    },
    setActorValue: function (a, b) {
      if (null != this.registry) {
        var c = this.registry;
        null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
      }
    },
    getActorValue: function (a) {
      if (null == this.registry) return null;
      var b = this.registry;
      return null != t[a] ? b.getReserved(a) : b.h[a];
    },
    hasActorValue: function (a) {
      if (null == this.registry) return null;
      var b = this.registry;
      return null != (null != t[a] ? b.getReserved(a) : b.h[a]);
    },
    registerListener: function (a, b) {
      var c = J.indexOf(this.allListenerReferences, a);
      -1 != c
        ? (a = this.allListeners.h[c])
        : (this.allListenerReferences.push(a),
          (c = this.allListenerReferences.length - 1),
          (a = []),
          (this.allListeners.h[c] = a));
      a.push(b);
    },
    removeAllListeners: function () {
      for (var a = 0, b = this.allListenerReferences.length; a < b; ) {
        var c = a++,
          d = this.allListenerReferences[c];
        if (
          null != d &&
          ((c = u.__cast(this.allListeners.h[c], Array)), null != c)
        )
          for (var e = 0, f = c.length; e < f; ) {
            var g = e++;
            g = c[g];
            for (var h = d.length - 1; -1 < h; )
              d[h] == g && d.splice(h, 1), --h;
          }
      }
      this.allListenerReferences.length = 0;
    },
    anchorToScreen: function () {
      this.isHUD || this.engine.moveActorToLayer(this, this.engine.hudLayer);
    },
    unanchorFromScreen: function () {
      this.isHUD && this.engine.moveActorToLayer(this, this.cachedLayer);
    },
    isAnchoredToScreen: function () {
      return this.isHUD;
    },
    makeAlwaysSimulate: function (a) {
      null == a && (a = !0);
      this.alwaysSimulate ||
        (0 == this.physicsMode &&
          a &&
          (this.body.setAlwaysActive(!0), this.body.setActive(!0)),
        (this.alwaysSimulate = !0));
    },
    makeSometimesSimulate: function (a) {
      null == a && (a = !0);
      this.alwaysSimulate &&
        (0 == this.physicsMode &&
          a &&
          (this.body.setAlwaysActive(!1), this.body.setActive(!1)),
        (this.alwaysSimulate = !1));
    },
    alwaysSimulates: function () {
      return this.alwaysSimulate;
    },
    die: function () {
      this.dying = !0;
      var a = this.engine.whenTypeGroupDiesListeners,
        b = this.getType();
      a = a.h[b.__id__];
      b = this.engine.whenTypeGroupDiesListeners;
      var c = this.getGroup();
      b = b.h[c.__id__];
      c = this.whenKilledListeners;
      for (var d = 0; d < c.length; ) {
        try {
          var e = c[d];
          e(c);
          -1 == J.indexOf(c, e) && --d;
        } catch (h) {
          if (
            ((X.lastException = h),
            h instanceof v && (h = h.val),
            !u.__instanceof(h, String))
          )
            throw h;
        }
        ++d;
      }
      if (null != a)
        for (e = 0; e < a.length; ) {
          try {
            var f = a[e];
            f(this, a);
            -1 == J.indexOf(a, f) && --e;
          } catch (h) {
            if (
              ((X.lastException = h),
              h instanceof v && (h = h.val),
              !u.__instanceof(h, String))
            )
              throw h;
          }
          ++e;
        }
      if (null != b)
        for (f = 0; f < b.length; ) {
          try {
            var g = b[f];
            g(this, b);
            -1 == J.indexOf(b, g) && --f;
          } catch (h) {
            if (
              ((X.lastException = h),
              h instanceof v && (h = h.val),
              !u.__instanceof(h, String))
            )
              throw h;
          }
          ++f;
        }
      this.removeAllListeners();
    },
    isDying: function () {
      return this.dying;
    },
    isAlive: function () {
      return !(this.dead || this.dying || this.recycled);
    },
    isOnScreen: function () {
      var a = r.cameraX / r.SCALE,
        b = r.cameraY / r.SCALE,
        c = r.paddingLeft,
        d = r.paddingTop,
        e = r.paddingRight,
        f = r.paddingBottom;
      return (0 != this.physicsMode || this.body.isActive()) &&
        this.getX(!0) + this.cacheWidth >= a - c &&
        this.getY(!0) + this.cacheHeight >= b - d &&
        this.getX(!0) < a + r.screenWidth + e
        ? this.getY(!0) < b + r.screenHeight + f
        : !1;
    },
    isInScene: function () {
      return (0 != this.physicsMode || this.body.isActive()) &&
        0 <= this.getX(!0) + this.cacheWidth &&
        0 <= this.getY(!0) + this.cacheHeight &&
        this.getX(!0) < r.sceneWidth
        ? this.getY(!0) < r.sceneHeight
        : !1;
    },
    getLastCollidedActor: function () {
      return $a.lastCollided;
    },
    killSelfAfterLeavingScreen: function () {
      this.killLeaveScreen = !0;
    },
    toString: function () {
      return null == this.get_name()
        ? "Unknown Actor " + this.ID
        : "[Actor " + this.ID + "," + this.get_name() + "]";
    },
    addRectangularShape: function (a, b, c, d) {
      if (0 == this.physicsMode) {
        var e = new Db(),
          f = [];
        a = r.toPhysicalUnits(
          a - Math.floor(this.cacheWidth / 2) - this.currOffset.x
        );
        b = r.toPhysicalUnits(
          b - Math.floor(this.cacheHeight / 2) - this.currOffset.y
        );
        c = r.toPhysicalUnits(c);
        d = r.toPhysicalUnits(d);
        f.push(new D(a, b));
        f.push(new D(a + c, b));
        f.push(new D(a + c, b + d));
        f.push(new D(a, b + d));
        e.setAsVector(f);
        this.createFixture(e).SetUserData(this);
      }
    },
    addCircularShape: function (a, b, c) {
      if (0 == this.physicsMode) {
        var d = new Jc();
        d.m_radius = r.toPhysicalUnits(c);
        d.m_p.x = r.toPhysicalUnits(a);
        d.m_p.y = r.toPhysicalUnits(b);
        this.createFixture(d).SetUserData(this);
      }
    },
    addVertex: function (a, b, c) {
      b = r.toPhysicalUnits(
        b - Math.floor(this.cacheWidth / 2) - this.currOffset.x
      );
      c = r.toPhysicalUnits(
        c - Math.floor(this.cacheHeight / 2) - this.currOffset.y
      );
      a.push(new D(b, c));
    },
    addPolygonalShape: function (a) {
      if (0 == this.physicsMode) {
        var b = new Db();
        b.setAsArray(a);
        this.createFixture(b).SetUserData(this);
      }
    },
    createFixture: function (a) {
      var b = new Tf();
      b.shape = a;
      b.density = 0.1 * this.bodyDef.mass;
      b.friction = this.bodyDef.friction;
      b.restitution = this.bodyDef.bounciness;
      return this.body.createFixture(b);
    },
    getLastCreatedFixture: function () {
      return 0 == this.physicsMode ? this.body.getFixtureList() : null;
    },
    setLocation: function (a, b) {
      this.realX = a;
      this.realY = b;
      this.setXY(a, b, !1, !0);
    },
    get_shape: function () {
      return this._mask;
    },
    set_shape: function (a) {
      if (this._mask == a) return a;
      null != this._mask && this._mask.assignTo(null);
      this._mask = a;
      null != a && this._mask.assignTo(this);
      return this._mask;
    },
    collide: function (a, b, c) {
      a = this.engine.getGroup(a);
      this._x = this.realX;
      this._y = this.realY;
      this.resetReal(b, c);
      if (null == this._mask) {
        b = 0;
        for (a = a.list; b < a.length; )
          if (
            ((c = a[b]),
            ++b,
            !c.recycled &&
              this.colX + this.cacheWidth >= c.colX &&
              this.colY + this.cacheHeight >= c.colY &&
              this.colX <= c.colX + c.cacheWidth &&
              this.colY <= c.colY + c.cacheHeight &&
              c.collidable &&
              c != this &&
              (null == c._mask || c._mask.collide(this.HITBOX)))
          )
            return (
              (this.colMask = c._mask), this.resetReal(this._x, this._y), c
            );
        this.resetReal(this._x, this._y);
        return null;
      }
      b = 0;
      for (a = a.list; b < a.length; )
        if (
          ((c = a[b]),
          ++b,
          !c.recycled &&
            this.colX + this.cacheWidth >= c.colX &&
            this.colY + this.cacheHeight >= c.colY &&
            this.colX <= c.colX + c.cacheWidth &&
            this.colY <= c.colY + c.cacheHeight &&
            c.collidable &&
            c != this &&
            this._mask.collide(null != c._mask ? c._mask : c.HITBOX))
        )
          return (
            (this.colMask = null != c._mask ? c._mask : c.HITBOX),
            this.resetReal(this._x, this._y),
            c
          );
      this.resetReal(this._x, this._y);
      return null;
    },
    collideTypes: function (a, b, c) {
      for (var d = this.collidedList.length, e = 0; e < a.length; ) {
        var f = a[e];
        ++e;
        -2 != f && this.collideInto(f, b, c, this.collidedList);
      }
      return this.collidedList.length > d
        ? this.collidedList[this.collidedList.length - 1]
        : null;
    },
    collideWith: function (a, b, c) {
      this._x = this.realX;
      this._y = this.realY;
      this.resetReal(b, c);
      if (
        this.colX + this.cacheWidth >= a.colX &&
        this.colY + this.cacheHeight >= a.colY &&
        this.colX <= a.colX + a.cacheWidth &&
        this.colY <= a.colY + a.cacheHeight &&
        this.collidable &&
        a.collidable
      ) {
        if (null == this._mask) {
          if (null == a._mask || a._mask.collide(this.HITBOX))
            return this.resetReal(this._x, this._y), a;
          this.resetReal(this._x, this._y);
          return null;
        }
        if (this._mask.collide(null != a._mask ? a._mask : a.HITBOX))
          return this.resetReal(this._x, this._y), a;
      }
      this.resetReal(this._x, this._y);
      return null;
    },
    collideInto: function (a, b, c, d) {
      a = this.engine.getGroup(a);
      this._x = this.realX;
      this._y = this.realY;
      this.resetReal(b, c);
      b = d.length;
      if (null == this._mask)
        for (c = 0, a = a.list; c < a.length; ) {
          var e = a[c];
          ++c;
          e.recycled ||
            (this.colX + this.cacheWidth >= e.colX &&
              this.colY + this.cacheHeight >= e.colY &&
              this.colX <= e.colX + e.cacheWidth &&
              this.colY <= e.colY + e.cacheHeight &&
              e.collidable &&
              e != this &&
              (null == e._mask || e._mask.collide(this.HITBOX)) &&
              (J.contains(d, e) || (d[b++] = e)));
        }
      else
        for (c = 0, a = a.list; c < a.length; )
          (e = a[c]),
            ++c,
            this.colX + this.cacheWidth >= e.colX &&
              this.colY + this.cacheHeight >= e.colY &&
              this.colX <= e.colX + e.cacheWidth &&
              this.colY <= e.colY + e.cacheHeight &&
              e.collidable &&
              e != this &&
              this._mask.collide(null != e._mask ? e._mask : e.HITBOX) &&
              (J.contains(d, e) || (d[b++] = e));
      this.resetReal(this._x, this._y);
    },
    clearCollisionInfoList: function () {
      if (0 < this.collisionsCount)
        for (var a = this.simpleCollisions.iterator(); a.hasNext(); ) {
          var b = a.next();
          b.remove = !0;
          null != b.linkedCollision && (b.linkedCollision.remove = !0);
        }
    },
    disposeRemovedCollisionInfo: function () {
      if (0 < this.collisionsCount) {
        for (var a = -1, b = this.simpleCollisions.keys(); b.hasNext(); ) {
          var c = b.next(),
            d = this.simpleCollisions,
            e = d.mH,
            f = e.mHash[(73856093 * c) & e.mMask];
          if (-1 == f) f = -2147483648;
          else if (((e = e.mData), e[f] == c)) f = e[f + 1];
          else {
            var g = -2147483648;
            for (f = e[f + 2]; -1 != f; ) {
              if (e[f] == c) {
                g = e[f + 1];
                break;
              }
              f = e[f + 2];
            }
            f = g;
          }
          (-2147483648 == f ? null : d.mVals[f]).remove
            ? this.simpleCollisions.unset(c)
            : c > a && (a = c);
        }
        this.collisionsCount = a + 1;
      }
    },
    clearCollidedList: function () {
      for (; 0 < this.collidedList.length; ) this.collidedList.pop();
      this.listChecked = 0;
    },
    addCollision: function (a) {
      var b = this.alreadyCollided(a);
      if (-1 != b) {
        var c = this.simpleCollisions,
          d = c.mH,
          e = d.mHash[(73856093 * b) & d.mMask];
        if (-1 == e) e = -2147483648;
        else if (((d = d.mData), d[e] == b)) e = d[e + 1];
        else {
          var f = -2147483648;
          for (e = d[e + 2]; -1 != e; ) {
            if (d[e] == b) {
              f = d[e + 1];
              break;
            }
            e = d[e + 2];
          }
          e = f;
        }
        c = -2147483648 == e ? null : c.mVals[e];
        a.switchData(c.linkedCollision);
        a.linkedCollision.remove = !1;
        a.remove = !1;
        oc.recycle(c);
        this.simpleCollisions.unset(b);
        this.simpleCollisions.set(b, a);
        return a;
      }
      this.simpleCollisions.unset(this.collisionsCount);
      this.simpleCollisions.set(this.collisionsCount, a);
      this.collisionsCount++;
      return a;
    },
    alreadyCollided: function (a) {
      for (var b = this.simpleCollisions.keys(); b.hasNext(); ) {
        var c = b.next(),
          d = this.simpleCollisions,
          e = d.mH,
          f = e.mHash[(73856093 * c) & e.mMask];
        if (-1 == f) f = -2147483648;
        else if (((e = e.mData), e[f] == c)) f = e[f + 1];
        else {
          var g = -2147483648;
          for (f = e[f + 2]; -1 != f; ) {
            if (e[f] == c) {
              g = e[f + 1];
              break;
            }
            f = e[f + 2];
          }
          f = g;
        }
        d = -2147483648 == f ? null : d.mVals[f];
        if (
          null != d &&
          ((d.maskA == a.maskA && d.maskB == a.maskB) ||
            (d.maskA == a.maskB && d.maskB == a.maskA))
        )
          if (d.solidCollision)
            if (1 == d.maskA.groupID || 1 == d.maskB.groupID) {
              if (d.thisFromLeft || d.thisFromRight)
                if (a.thisFromLeft || a.thisFromRight) return c;
              if (d.thisFromTop || d.thisFromBottom)
                if (a.thisFromTop || a.thisFromBottom) return c;
            } else return c;
          else return c;
      }
      return -1;
    },
    resetReal: function (a, b) {
      this.realX = a;
      this.realY = b;
      this.colX =
        this.realX - Math.floor(this.cacheWidth / 2) - this.currOffset.x;
      this.colY =
        this.realY - Math.floor(this.cacheHeight / 2) - this.currOffset.y;
    },
    adjustByWidth: function (a) {
      if (
        null != this._mask &&
        null != this._mask.lastCheckedMask &&
        u.__instanceof(this._mask.lastCheckedMask, jd)
      ) {
        var b = this._mask.lastCheckedMask;
        return a
          ? this.cacheWidth / 2 - (this.cacheWidth - (b._x + b._width))
          : this.cacheWidth / 2 - b._x;
      }
      return this.cacheWidth / 2;
    },
    adjustByHeight: function (a) {
      if (
        null != this._mask &&
        null != this._mask.lastCheckedMask &&
        u.__instanceof(this._mask.lastCheckedMask, jd)
      ) {
        var b = this._mask.lastCheckedMask;
        return a
          ? this.cacheHeight / 2 - (this.cacheHeight - (b._y + b._height))
          : this.cacheHeight / 2 - b._y;
      }
      return this.cacheHeight / 2;
    },
    getAllCollisionInfo: function (a, b) {
      for (var c = null; this.listChecked < this.collidedList.length; ) {
        var d = oc.get();
        this.colMask = this.collidedList[this.listChecked]._mask;
        this.fillCollisionInfo(d, this.collidedList[this.listChecked], a, b);
        this.addCollision(d);
        if (null == d.linkedCollision) {
          var e = oc.get();
          d.switchData(e);
          this.collidedList[this.listChecked].addCollision(e);
        }
        d.solidCollision && (c = d);
        this.listChecked++;
      }
      return c;
    },
    moveActorBy: function (a, b, c, d) {
      null == d && (d = !1);
      null == c && (c = !0);
      if (0 != a || 0 != b) {
        this.clearCollisionInfoList();
        if (!c && this.collidable && null != this.HITBOX.collideTypes) {
          c = this.HITBOX.collideTypes;
          if (0 != a) {
            var e =
              0 < a ? Math.ceil(this.realX + a) : Math.floor(this.realX + a);
            this.clearCollidedList();
            if (d || null != this.collideTypes(c, e, this.realY))
              for (this.clearCollidedList(); 0 != a; ) {
                var f = 1 <= a || -1 >= a ? 1 : Math.abs(a);
                f = 0 < a ? f : -f;
                e =
                  0 < f
                    ? Math.ceil(this.realX + f)
                    : Math.floor(this.realX + f);
                var g = this.collide(-2, e, this.realY);
                null != g && u.__cast(g, nd).addActor(this);
                g = this.collideTypes(c, e, this.realY);
                if (
                  null != g &&
                  ((e = this.getAllCollisionInfo(f, 0)), null != e)
                ) {
                  this.xSpeed = 0;
                  e.useBounds &&
                    (this.realX =
                      0 < f
                        ? e.bounds.x - Math.ceil(this.adjustByWidth(!0))
                        : e.bounds.x +
                          e.bounds.width +
                          Math.floor(this.adjustByWidth(!1)));
                  break;
                }
                this.realX += f;
                a -= f;
              }
            else this.realX += a;
          }
          if (0 != b)
            if (
              ((e =
                0 < b ? Math.ceil(this.realY + b) : Math.floor(this.realY + b)),
              this.clearCollidedList(),
              d || null != this.collideTypes(c, this.realX, e))
            )
              for (this.clearCollidedList(); 0 != b; ) {
                f = 1 <= b || -1 >= b ? 1 : Math.abs(b);
                f = 0 < b ? f : -f;
                e =
                  0 < f
                    ? Math.ceil(this.realY + f)
                    : Math.floor(this.realY + f);
                g = this.collide(-2, this.realX, e);
                null != g && u.__cast(g, nd).addActor(this);
                g = this.collideTypes(c, this.realX, e);
                if (
                  null != g &&
                  ((a = this.getAllCollisionInfo(0, f)), null != a)
                ) {
                  this.ySpeed = 0;
                  a.useBounds &&
                    (this.realY =
                      0 < f
                        ? a.bounds.y - Math.ceil(this.adjustByHeight(!0))
                        : a.bounds.y +
                          a.bounds.height +
                          Math.floor(this.adjustByHeight(!1)));
                  break;
                }
                this.realY += f;
                b -= f;
              }
            else this.realY += b;
        } else (this.realX += a), (this.realY += b);
        this.resetReal(this.realX, this.realY);
      }
    },
    moveActorTo: function (a, b, c, d) {
      null == d && (d = !1);
      null == c && (c = !0);
      this.moveActorBy(a - this.realX, b - this.realY, c, d);
    },
    moveActorTowards: function (a, b, c, d, e) {
      null == e && (e = !1);
      null == d && (d = !0);
      this._point.x = a - this.realX;
      this._point.y = b - this.realY;
      this._point.normalize(c);
      this.moveActorBy(this._point.x, this._point.y, d, e);
    },
    moveCollideX: function (a, b) {},
    moveCollideY: function (a, b) {},
    fillCollisionInfo: function (a, b, c, d) {
      if (u.__instanceof(b, nd)) b.addActor(this);
      else {
        a.thisActor = a.actorA = this;
        a.otherActor = a.actorB = b;
        a.maskA = this._mask;
        a.maskB = this.colMask;
        a.solidCollision = this._mask.solid && this.colMask.solid;
        a.groupA = this._mask.lastCheckedMask.groupID;
        a.groupB = this._mask.lastCheckedMask.lastColID;
        var e = oc.collisionResponses,
          f = this.getGroupID();
        e = e.h[f];
        var g = (f = !1);
        if (null != e) {
          var h = b.getGroupID();
          h = null != e.h[h];
        } else h = !1;
        h &&
          ((h = b.getGroupID()),
          "sensor" == e.h[h]
            ? ((a.solidCollision = !1), (f = !0))
            : (g = a.solidCollision = !0));
        null != this.colMask &&
          ((a.useBounds = !0),
          (a.bounds.x = this.colMask.lastBounds.x),
          (a.bounds.y = this.colMask.lastBounds.y),
          (a.bounds.width = this.colMask.lastBounds.width),
          (a.bounds.height = this.colMask.lastBounds.height));
        0 != c &&
          (1e8 == b.ID
            ? ((a.thisFromLeft = 0 > c), (a.thisFromRight = 0 < c))
            : ((a.thisFromLeft = b.colX < this.colX),
              (a.thisFromRight = b.colX > this.colX)),
          (a.otherFromLeft = !a.thisFromLeft),
          (a.otherFromRight = !a.thisFromRight),
          (a.thisFromTop = a.otherFromTop = !1),
          (a.thisFromBottom = a.otherFromBottom = !1));
        0 != d &&
          (1e8 == b.ID
            ? ((a.thisFromTop = 0 > d), (a.thisFromBottom = 0 < d))
            : ((a.thisFromTop = b.colY < this.colY),
              (a.thisFromBottom = b.colY > this.colY)),
          (a.otherFromTop = !a.thisFromTop),
          (a.otherFromBottom = !a.thisFromBottom),
          (a.thisFromLeft = a.otherFromLeft = !1),
          (a.thisFromRight = a.otherFromRight = !1));
        a.thisCollidedWithActor = !0;
        a.thisCollidedWithTile = 1e8 == b.ID;
        a.thisCollidedWithSensor = null != a ? f || (!g && !a.maskB.solid) : !1;
        a.thisCollidedWithTerrain = !1;
        a.otherCollidedWithActor = !0;
        a.otherCollidedWithTile = 1e8 == b.ID;
        a.otherCollidedWithSensor = null != a ? !a.maskA.solid : !1;
        a.otherCollidedWithTerrain = !1;
      }
    },
    handleCollisionsSimple: function () {
      if (0 < this.collisionsCount)
        for (var a = this.simpleCollisions.iterator(); a.hasNext(); ) {
          var b = a.next();
          if (null != b && 1 != b.remove) {
            $a.lastCollided = b.otherActor;
            for (var c = this.collisionListeners, d = 0; d < c.length; ) {
              try {
                var e = c[d];
                e(b, c);
                -1 == J.indexOf(c, e) && --d;
              } catch (f) {
                if (
                  ((X.lastException = f),
                  f instanceof v && (f = f.val),
                  !u.__instanceof(f, String))
                )
                  throw f;
              }
              ++d;
            }
            this.engine.handleCollision(this, b);
          }
        }
    },
    HITBOX: null,
    _mask: null,
    colMask: null,
    _x: null,
    _y: null,
    _moveX: null,
    _moveY: null,
    _point: null,
    simpleCollisions: null,
    collidedList: null,
    listChecked: null,
    __class__: $a,
    __properties__: x(gb.prototype.__properties__, {
      set_shape: "set_shape",
      get_shape: "get_shape",
    }),
  });
  var tp = function (a, b, c, d) {
    this.ID = a;
    this.name = b;
    this.allScenes = c;
    this.members = d;
    this.active = !0;
  };
  p["com.stencyl.models.Atlas"] = tp;
  tp.__name__ = ["com", "stencyl", "models", "Atlas"];
  tp.prototype = {
    ID: null,
    name: null,
    allScenes: null,
    active: null,
    members: null,
    __class__: tp,
  };
  var dj = function () {};
  p["com.stencyl.models.Background"] = dj;
  dj.__name__ = ["com", "stencyl", "models", "Background"];
  dj.prototype = { update: null, draw: null, __class__: dj };
  var jm = function (a, b) {
    this.group1 = a;
    this.group2 = b;
  };
  p["com.stencyl.models.CollisionGroupDef"] = jm;
  jm.__name__ = ["com", "stencyl", "models", "CollisionGroupDef"];
  jm.prototype = { group1: null, group2: null, __class__: jm };
  var kd = function (a, b, c) {
    this.ID = a;
    this.atlasID = c;
    this.name = b;
    this.sID = a + "," + b;
  };
  p["com.stencyl.models.Resource"] = kd;
  kd.__name__ = ["com", "stencyl", "models", "Resource"];
  kd.prototype = {
    ID: null,
    atlasID: null,
    name: null,
    sID: null,
    toString: function () {
      return this.sID;
    },
    isAtlasActive: function () {
      var a = cb.get().atlases.h[this.atlasID];
      return null == a ? !1 : a.active;
    },
    loadGraphics: function () {},
    unloadGraphics: function () {},
    reloadGraphics: function (a) {
      this.unloadGraphics();
      this.loadGraphics();
    },
    __class__: kd,
  };
  var Pf = function (a, b, c, d) {
    kd.call(this, a, c, b);
    this.isDefault = d;
    this.isAtlasActive() && this.loadGraphics();
  };
  p["com.stencyl.models.Font"] = Pf;
  Pf.__name__ = ["com", "stencyl", "models", "Font"];
  Pf.resetStatics = function () {
    Pf.defaultFont = null;
  };
  Pf.__super__ = kd;
  Pf.prototype = x(kd.prototype, {
    font: null,
    fontScale: null,
    letterSpacing: null,
    isDefault: null,
    graphicsLoaded: null,
    getHeight: function () {
      return null != this.font ? this.font.getFontHeight() : 0;
    },
    loadGraphics: function () {
      if (!this.graphicsLoaded) {
        if (this.isDefault) {
          var a = oa.getText("assets/graphics/default-font.fnt");
          a = ta.parse(a);
          Pf.defaultFont = this.font = new Af().loadAngelCode(
            oa.getBitmapData("assets/graphics/default-font.png"),
            a
          );
          this.fontScale = r.SCALE;
          this.letterSpacing = 0;
          Pf.defaultFont.isDefault = !0;
        } else {
          a = oa.getText(
            "assets/graphics/" + r.IMG_BASE + "/font-" + this.ID + ".fnt"
          );
          a = ta.parse(a);
          var b = oa.getBitmapData(
            "assets/graphics/" + r.IMG_BASE + "/font-" + this.ID + ".png",
            !1
          );
          this.font = new Af().loadAngelCode(b, a);
          this.fontScale = 1;
          this.letterSpacing = 0;
        }
        this.graphicsLoaded = !0;
      }
    },
    unloadGraphics: function () {
      this.graphicsLoaded &&
        ((this.font = Pf.defaultFont),
        (this.fontScale = 1),
        (this.letterSpacing = 0),
        (this.graphicsLoaded = !1));
    },
    reloadGraphics: function (a) {
      kd.prototype.reloadGraphics.call(this, a);
    },
    setLetterSpacing: function (a) {
      this.letterSpacing = a | 0;
    },
    isBitmapFont: function (a) {
      null == a &&
        ((a = oa.getText(
          "assets/graphics/" + r.IMG_BASE + "/font-" + this.ID + ".fnt"
        )),
        (a = ta.parse(a)));
      for (a = a.elements(); a.hasNext(); ) {
        var b = a.next();
        if (b.nodeType != ta.Element)
          throw new v(
            "Bad node type, expected Element but found " + b.nodeType
          );
        if ("font" == b.nodeName)
          for (b = b.elements(); b.hasNext(); ) {
            var c = b.next();
            if (c.nodeType != ta.Element)
              throw new v(
                "Bad node type, expected Element but found " + c.nodeType
              );
            if ("info" == c.nodeName)
              for (c = c.attributes(); c.hasNext(); )
                if ("lspace" == c.next()) return !0;
          }
      }
      return !1;
    },
    __class__: Pf,
  });
  var cb = function () {
    var a = $b.get().gameMbs.getRoot();
    this.shapes = this.readShapes(a);
    this.atlases = this.readAtlases(a);
    this.autotileFormats = this.readAutotileFormats(a);
    this.groups = this.readGroups(a);
    this.groups.push(new Sh(-2, "Regions"));
    this.groups.push(new Sh(0, "Players"));
    this.groups.push(new Sh(1, "Terrain"));
    this.groups.push(new Sh(2, "Doodads"));
    this.groups.push(new Sh(3, "Actors"));
    this.groupsCollidesWith = new Ca();
    this.collisionGroups = this.readCollisionGroups(a);
    cb.collisionMap = [];
    for (var b = 0, c = 0, d = this.groups; c < d.length; ) {
      var e = d[c];
      ++c;
      b = Math.max(e.ID | 0, b) | 0;
    }
    ++b;
    c = 0;
    for (d = b; c < d; ) {
      e = c++;
      cb.collisionMap.push([]);
      for (var f = 0, g = b; f < g; ) f++, cb.collisionMap[e].push(!1);
    }
    if (r.NO_PHYSICS)
      for (b = 0, c = this.groups; b < c.length; )
        (d = c[b]), ++b, this.collisionGroups.push(new jm(d.ID, -2));
    b = 0;
    for (c = this.collisionGroups; b < c.length; ) {
      e = c[b];
      ++b;
      d = e.group1;
      e = e.group2;
      this.groupsCollidesWith.h.hasOwnProperty(d) ||
        (this.groupsCollidesWith.h[d] = []);
      this.groupsCollidesWith.h.hasOwnProperty(e) ||
        (this.groupsCollidesWith.h[e] = []);
      if (!r.NO_PHYSICS || (0 <= d && 0 <= e))
        (cb.collisionMap[d][e] = !0), (cb.collisionMap[e][d] = !0);
      this.groupsCollidesWith.h[d].push(e);
      this.groupsCollidesWith.h[e].push(d);
    }
    this.gameAttributes = cb.readGameAttributes(a);
    $b.get().gameMbs = null;
  };
  p["com.stencyl.models.GameModel"] = cb;
  cb.__name__ = ["com", "stencyl", "models", "GameModel"];
  cb.resetStatics = function () {
    cb.instance = null;
    cb.collisionMap = null;
  };
  cb.get = function () {
    null == cb.instance && (cb.instance = new cb());
    return cb.instance;
  };
  cb.readGameAttributes = function (a) {
    return He.readMap(a.getGameAttributes());
  };
  cb.prototype = {
    groups: null,
    groupsCollidesWith: null,
    collisionGroups: null,
    gameAttributes: null,
    shapes: null,
    atlases: null,
    scenes: null,
    autotileFormats: null,
    loadScenes: function () {
      this.scenes = new Ca();
      for (
        var a = $b.get().sceneListMbs.getRoot(), b = 0, c = a.length();
        b < c;

      ) {
        b++;
        var d = a.getNextObject(),
          e = d.getId(),
          f = this.scenes;
        d = new km(e, d.getName());
        f.h[e] = d;
      }
      $b.get().sceneListMbs = null;
    },
    readShapes: function (a) {
      var b = new Ca();
      a = a.getShapes();
      for (var c = 0, d = a.length(); c < d; ) {
        c++;
        var e = a.getNextObject(),
          f = e.getPoints(),
          g = [],
          h = 0;
        for (f = yd.readPoints(f); h < f.length; ) {
          var n = f[h];
          ++h;
          g.push(new D(3.1 * n.x, 3.1 * n.y));
        }
        yd.EnsureCorrectVertexDirection(g);
        h = new Db();
        h.setAsArray(g, g.length);
        e = e.getId();
        b.h[e] = h;
      }
      return b;
    },
    readAtlases: function (a) {
      var b = new Ca();
      a = a.getAtlases();
      for (var c = 0, d = a.length(); c < d; ) {
        c++;
        var e = a.getNextObject(),
          f = e.getId(),
          g = e.getName(),
          h = e.getAllScenes();
        e = e.getMembers();
        for (var n = [], k = 0, m = e.length(); k < m; )
          k++, n.push(e.readInt());
        g = new tp(f, g, h, n);
        b.h[f] = g;
      }
      return b;
    },
    readAutotileFormats: function (a) {
      var b = new Ca();
      a = a.getAutotileFormats();
      for (var c = 0, d = a.length(); c < d; ) {
        c++;
        for (
          var e = a.getNextObject(),
            f = e.getName(),
            g = e.getId(),
            h = e.getAcross(),
            n = e.getDown(),
            k = [],
            m = [],
            l = e.getCorners(),
            p = 0,
            r = l.length();
          p < r;

        ) {
          p++;
          var q = l.getNextObject(),
            t = q.getTopLeft();
          t = new Y(t.getX(), t.getY());
          var u = q.getTopRight();
          u = new Y(u.getX(), u.getY());
          var na = q.getBottomLeft();
          na = new Y(na.getX(), na.getY());
          q = q.getBottomRight();
          m.push(new up(t, u, na, new Y(q.getX(), q.getY())));
        }
        e = e.getFlags();
        l = 0;
        for (p = e.length(); l < p; ) (r = l++), (k[r] = m[e.readInt()]);
        f = new vp(f, g, h, n, k);
        b.h[g] = f;
      }
      return b;
    },
    readGroups: function (a) {
      var b = [];
      a = a.getGroups();
      for (var c = 0, d = a.length(); c < d; ) {
        c++;
        var e = a.getNextObject();
        b.push(new Sh(e.getId(), e.getName()));
      }
      return b;
    },
    readCollisionGroups: function (a) {
      var b = [];
      a = a.getCgroups();
      for (var c = 0, d = a.length(); c < d; ) {
        c++;
        var e = a.getNextObject();
        b.push(new jm(e.getGroup1(), e.getGroup2()));
      }
      return b;
    },
    __class__: cb,
  };
  var Sh = function (a, b) {
    this.ID = a;
    this.name = b;
  };
  p["com.stencyl.models.GroupDef"] = Sh;
  Sh.__name__ = ["com", "stencyl", "models", "GroupDef"];
  Sh.prototype = { ID: null, name: null, __class__: Sh };
  var Aa = function () {
    this.isPressed = !1;
    this.outerAlphaWhenReleased =
      this.outerAlphaWhenPressed =
      this.innerAlphaWhenReleased =
      this.innerAlphaWhenPressed =
        1;
    this.outerImage = this.innerImage = null;
    this.hideWhenReleased = !1;
    this.joystickDistance =
      this.joystickDirection =
      this.joystickDefaultDirection =
      this.joystickType =
        0;
    gb.call(this);
  };
  p["com.stencyl.models.Joystick"] = Aa;
  Aa.__name__ = ["com", "stencyl", "models", "Joystick"];
  Aa.resetStatics = function () {
    Aa.joystickMap = null;
    Aa.fixedCenter = 0;
    Aa.showWherePressed = 1;
    Aa.viewOffsetX = Aa.viewOffsetY = 0;
    Aa.initialized = !1;
  };
  Aa.addJoystick = function (a, b, c, d, e, f, g, h, n) {
    null == n && (n = !1);
    null == h && (h = 0);
    null == g && (g = 0);
    null == f && (f = 0);
    null == e && (e = 0);
    null == d && (d = 0);
    null != Aa.joystickMap &&
      Aa.joystickMap.h.hasOwnProperty(a) &&
      Aa.removeJoystick(a);
    var k = qa.createEmptyInstance(Aa);
    k.start();
    k.id = a;
    k.joystickTouchID = -1;
    k.joystickDistance = 0;
    k.joystickDirection = 0;
    k.joystickDefaultDirection = 0;
    k.joystickType = d;
    k.center = new Y(b * r.SCALE, c * r.SCALE);
    Aa.joystickMap.h[a] = k;
    Aa.setJoystickImage(a, !0, "outer-joystick");
    Aa.setJoystickImage(a, !1, "inner-joystick");
    k.outerAlphaWhenPressed = 1;
    k.outerAlphaWhenReleased = 1;
    k.innerAlphaWhenPressed = 1;
    k.innerAlphaWhenReleased = 1;
    k.joystickType == Aa.showWherePressed &&
      (k.joystickBounds = new W(
        e * r.SCALE + Aa.viewOffsetX,
        f * r.SCALE + Aa.viewOffsetY,
        g * r.SCALE,
        h * r.SCALE
      ));
    n &&
      ((k.hideWhenReleased = !0),
      k.outerImage.set_visible(!1),
      k.innerImage.set_visible(!1));
  };
  Aa.removeJoystick = function (a) {
    if (Aa.joystickMap.h.hasOwnProperty(a)) {
      var b = Aa.joystickMap.h[a],
        c = r.engine.root;
      Aa.joystickMap.remove(a);
      c.removeChild(b.outerImage);
      c.removeChild(b.innerImage);
    }
  };
  Aa.getJoystickDisDir = function (a, b) {
    null == b && (b = !0);
    var c = 0;
    Aa.joystickMap.h.hasOwnProperty(a) &&
      ((a = Aa.joystickMap.h[a]),
      (c = b ? a.joystickDistance : a.joystickDirection));
    return c;
  };
  Aa.setJoystickCenter = function (a, b, c) {
    Aa.joystickMap.h.hasOwnProperty(a) &&
      ((a = Aa.joystickMap.h[a]),
      (a.center = new Y(b * r.SCALE, c * r.SCALE)),
      a.outerImage.set_x(a.center.x - 0.5 * a.outerImage.get_width()),
      a.outerImage.set_y(a.center.y - 0.5 * a.outerImage.get_height()),
      a.innerImage.set_x(a.center.x - 0.5 * a.innerImage.get_width()),
      a.innerImage.set_y(a.center.y - 0.5 * a.innerImage.get_height()));
  };
  Aa.getJoystickCenter = function (a, b) {
    null == b && (b = !0);
    var c = 0;
    Aa.joystickMap.h.hasOwnProperty(a) &&
      ((a = Aa.joystickMap.h[a]),
      (c = (b ? a.center.x : a.center.y) / r.SCALE));
    return c;
  };
  Aa.setJoystickRadius = function (a, b, c) {
    null == b && (b = !0);
    Aa.joystickMap.h.hasOwnProperty(a) &&
      ((a = Aa.joystickMap.h[a]),
      b && a.outerRadius != c * r.SCALE
        ? (a.outerRadius = c * r.SCALE)
        : a.innerRadius != c * r.SCALE && (a.innerRadius = c * r.SCALE));
  };
  Aa.getJoystickRadius = function (a, b) {
    null == b && (b = !0);
    var c = 0;
    Aa.joystickMap.h.hasOwnProperty(a) &&
      ((a = Aa.joystickMap.h[a]),
      (c = (b ? a.innerRadius : a.outerRadius) / r.SCALE));
    return c;
  };
  Aa.alwaysHideRJ = function (a) {
    Aa.joystickMap.h.hasOwnProperty(a) &&
      ((a = Aa.joystickMap.h[a]),
      (a.hideWhenReleased = !0),
      a.outerImage.set_visible(!1),
      a.innerImage.set_visible(!1));
  };
  Aa.setDefaultDirection = function (a, b) {
    Aa.joystickMap.h.hasOwnProperty(a) &&
      ((a = Aa.joystickMap.h[a]),
      (a.joystickDefaultDirection = b),
      (a.joystickDirection = b));
  };
  Aa.isJoystickPressed = function (a) {
    return Aa.joystickMap.h.hasOwnProperty(a)
      ? Aa.joystickMap.h[a].isPressed
      : !1;
  };
  Aa.setTouchRegionForRJ = function (a, b, c, d, e) {
    null == e && (e = 0);
    null == d && (d = 0);
    null == c && (c = 0);
    null == b && (b = 0);
    Aa.joystickMap.h.hasOwnProperty(a) &&
      ((a = Aa.joystickMap.h[a]),
      a.joystickType == Aa.showWherePressed &&
        (a.joystickBounds = new W(
          b * r.SCALE + Aa.viewOffsetX,
          c * r.SCALE + Aa.viewOffsetY,
          d * r.SCALE,
          e * r.SCALE
        )));
  };
  Aa.getTouchRegionPropertyForRJ = function (a, b) {
    return Aa.joystickMap.h.hasOwnProperty(a) &&
      ((a = Aa.joystickMap.h[a]), a.joystickType == Aa.showWherePressed)
      ? 1 == b
        ? a.joystickBounds.x - Aa.viewOffsetX
        : 2 == b
        ? a.joystickBounds.y - Aa.viewOffsetY
        : 3 == b
        ? a.joystickBounds.width / r.SCALE
        : a.joystickBounds.height / r.SCALE
      : 0;
  };
  Aa.setJoystickImage = function (a, b, c) {
    if (Aa.joystickMap.h.hasOwnProperty(a)) {
      a = Aa.joystickMap.h[a];
      var d = r.engine.root;
      c =
        1 == r.SCALE
          ? oa.getBitmapData("assets/data/" + c + ".png")
          : 1.5 == r.SCALE
          ? oa.getBitmapData("assets/data/" + c + "@1.5x.png")
          : 2 == r.SCALE
          ? oa.getBitmapData("assets/data/" + c + "@2x.png")
          : oa.getBitmapData("assets/data/" + c + "@4x.png");
      b
        ? (null != a.outerImage && d.removeChild(a.outerImage),
          (a.outerImage = new ic(c)),
          a.outerImage.set_x(a.center.x - 0.5 * a.outerImage.get_width()),
          a.outerImage.set_y(a.center.y - 0.5 * a.outerImage.get_height()),
          d.addChild(a.outerImage),
          (a.outerRadius = 0.5 * a.outerImage.get_width()))
        : (null != a.innerImage && d.removeChild(a.innerImage),
          (a.innerImage = new ic(c)),
          a.innerImage.set_x(a.center.x - 0.5 * a.innerImage.get_width()),
          a.innerImage.set_y(a.center.y - 0.5 * a.innerImage.get_height()),
          d.addChild(a.innerImage),
          (a.innerRadius = a.outerRadius - 0.5 * a.innerImage.get_width()));
    }
  };
  Aa.setJoystickAlpha = function (a, b, c, d) {
    null == d && (d = !0);
    null == c && (c = 1);
    null == b && (b = !0);
    Aa.joystickMap.h.hasOwnProperty(a) &&
      ((a = Aa.joystickMap.h[a]),
      b
        ? d
          ? ((a.outerAlphaWhenReleased = c), a.outerImage.set_alpha(c))
          : (a.outerAlphaWhenPressed = c)
        : d
        ? ((a.innerAlphaWhenReleased = c), a.innerImage.set_alpha(c))
        : (a.innerAlphaWhenPressed = c));
  };
  Aa.__super__ = gb;
  Aa.prototype = x(gb.prototype, {
    center: null,
    outerRadius: null,
    innerRadius: null,
    joystickBounds: null,
    joystickTouchID: null,
    id: null,
    joystickDistance: null,
    joystickDirection: null,
    joystickDefaultDirection: null,
    joystickType: null,
    hideWhenReleased: null,
    outerImage: null,
    innerImage: null,
    outerAlphaWhenReleased: null,
    outerAlphaWhenPressed: null,
    innerAlphaWhenReleased: null,
    innerAlphaWhenPressed: null,
    isPressed: null,
    start: function () {
      Aa.initialized ||
        ((Aa.initialized = !0),
        (Aa.joystickMap = new Ca()),
        (Aa.viewOffsetX = r.screenOffsetX),
        (Aa.viewOffsetY = r.screenOffsetY));
      Xe.get_supportsTouchEvents()
        ? (r.stage.addEventListener("touchBegin", B(this, this.onTouchBegin)),
          r.stage.addEventListener("touchMove", B(this, this.onTouchMove)),
          r.stage.addEventListener("touchEnd", B(this, this.onTouchEnd)),
          (Xe.inputMode = 2))
        : (r.stage.addEventListener("mouseDown", B(this, this.onMouseDown)),
          r.stage.addEventListener("mouseMove", B(this, this.onMouseMove)),
          r.stage.addEventListener("mouseUp", B(this, this.onMouseUp)));
    },
    stop: function () {
      Xe.get_supportsTouchEvents()
        ? (r.stage.removeEventListener(
            "touchBegin",
            B(this, this.onTouchBegin)
          ),
          r.stage.removeEventListener("touchMove", B(this, this.onTouchMove)),
          r.stage.removeEventListener("touchEnd", B(this, this.onTouchEnd)))
        : (r.stage.removeEventListener("mouseDown", B(this, this.onMouseDown)),
          r.stage.removeEventListener("mouseMove", B(this, this.onMouseMove)),
          r.stage.removeEventListener("mouseUp", B(this, this.onMouseUp)));
      Aa.joystickMap = null;
    },
    onTouchBegin: function (a) {
      this.onBegin(a.stageX, a.stageY, a.touchPointID);
    },
    onTouchMove: function (a) {
      this.onMove(a.stageX, a.stageY, a.touchPointID);
    },
    onTouchEnd: function (a) {
      this.onEnd(a.stageX, a.stageY, a.touchPointID);
    },
    onMouseDown: function (a) {
      this.onBegin(a.stageX, a.stageY, 0);
    },
    onMouseMove: function (a) {
      this.onMove(a.stageX, a.stageY, 0);
    },
    onMouseUp: function (a) {
      this.onEnd(a.stageX, a.stageY, 0);
    },
    onBegin: function (a, b, c) {
      if (-1 == this.joystickTouchID)
        if (
          ((a /= r.screenScaleX),
          (b /= r.screenScaleY),
          this.outerImage.set_alpha(this.outerAlphaWhenPressed),
          this.innerImage.set_alpha(this.innerAlphaWhenPressed),
          (this.isPressed = !0),
          this.joystickType == Aa.fixedCenter)
        ) {
          var d = Math.sqrt(
              Math.pow(this.center.x + Aa.viewOffsetX - a, 2) +
                Math.pow(this.center.y + Aa.viewOffsetY - b, 2)
            ),
            e = Math.atan2(
              this.center.y + Aa.viewOffsetY - b,
              this.center.x + Aa.viewOffsetX - a
            );
          d > this.outerRadius ||
            (d > this.outerRadius - this.innerRadius
              ? ((d = this.outerRadius - this.innerRadius),
                this.innerImage.set_x(
                  this.center.x -
                    Math.cos(e) * (this.outerRadius - this.innerRadius) -
                    0.5 * this.innerImage.get_width()
                ),
                this.innerImage.set_y(
                  this.center.y -
                    Math.sin(e) * (this.outerRadius - this.innerRadius) -
                    0.5 * this.innerImage.get_height()
                ))
              : (this.innerImage.set_x(
                  a - Aa.viewOffsetX - 0.5 * this.innerImage.get_width()
                ),
                this.innerImage.set_y(
                  b - Aa.viewOffsetY - 0.5 * this.innerImage.get_height()
                )),
            (this.joystickTouchID = c),
            (this.joystickDistance = d / (this.outerRadius - this.innerRadius)),
            (this.joystickDirection = (180 * e) / 3.1415926535 + 180));
        } else
          this.joystickType != Aa.showWherePressed ||
            a < this.joystickBounds.x ||
            a > this.joystickBounds.x + this.joystickBounds.width ||
            b < this.joystickBounds.y ||
            b > this.joystickBounds.y + this.joystickBounds.height ||
            ((this.center.x = a - Aa.viewOffsetX),
            (this.center.y = b - Aa.viewOffsetY),
            this.outerImage.set_x(
              this.center.x - 0.5 * this.outerImage.get_width()
            ),
            this.outerImage.set_y(
              this.center.y - 0.5 * this.outerImage.get_height()
            ),
            this.innerImage.set_x(
              this.center.x - 0.5 * this.innerImage.get_width()
            ),
            this.innerImage.set_y(
              this.center.y - 0.5 * this.innerImage.get_height()
            ),
            this.hideWhenReleased &&
              (this.outerImage.set_visible(!0),
              this.innerImage.set_visible(!0)),
            (this.joystickTouchID = c));
    },
    onMove: function (a, b, c) {
      if (c == this.joystickTouchID) {
        a /= r.screenScaleX;
        b /= r.screenScaleY;
        c = Math.sqrt(
          Math.pow(this.center.x + Aa.viewOffsetX - a, 2) +
            Math.pow(this.center.y + Aa.viewOffsetY - b, 2)
        );
        var d = Math.atan2(
          this.center.y + Aa.viewOffsetY - b,
          this.center.x + Aa.viewOffsetX - a
        );
        c > this.outerRadius - this.innerRadius
          ? ((c = this.outerRadius - this.innerRadius),
            this.innerImage.set_x(
              this.center.x -
                Math.cos(d) * (this.outerRadius - this.innerRadius) -
                0.5 * this.innerImage.get_width()
            ),
            this.innerImage.set_y(
              this.center.y -
                Math.sin(d) * (this.outerRadius - this.innerRadius) -
                0.5 * this.innerImage.get_height()
            ))
          : (this.innerImage.set_x(
              a - Aa.viewOffsetX - 0.5 * this.innerImage.get_width()
            ),
            this.innerImage.set_y(
              b - Aa.viewOffsetY - 0.5 * this.innerImage.get_height()
            ));
        this.joystickDistance = c / (this.outerRadius - this.innerRadius);
        this.joystickDirection = (180 * d) / 3.1415926535 + 180;
      }
    },
    onEnd: function (a, b, c) {
      c == this.joystickTouchID &&
        ((this.joystickTouchID = -1),
        (this.isPressed = !1),
        this.outerImage.set_alpha(this.outerAlphaWhenReleased),
        this.innerImage.set_alpha(this.innerAlphaWhenReleased),
        (a = this.outerImage.get_x()),
        (this.center.x = a + this.outerRadius),
        (a = this.outerImage.get_y()),
        (this.center.y = a + this.outerRadius),
        this.innerImage.set_x(
          this.center.x - 0.5 * this.innerImage.get_width()
        ),
        this.innerImage.set_y(
          this.center.y - 0.5 * this.innerImage.get_height()
        ),
        this.hideWhenReleased &&
          (this.outerImage.set_visible(!1), this.innerImage.set_visible(!1)),
        (this.joystickDistance = 0),
        (this.joystickDirection = this.joystickDefaultDirection));
    },
    __class__: Aa,
  });
  var Ng = {};
  p["com.stencyl.models._PhysicsMode.PhysicsMode_Impl_"] = Ng;
  Ng.__name__ = [
    "com",
    "stencyl",
    "models",
    "_PhysicsMode",
    "PhysicsMode_Impl_",
  ];
  Ng._new = function (a) {
    return a;
  };
  Ng.fromInt = function (a) {
    return Ng._new(a);
  };
  Ng.fromString = function (a) {
    switch (a) {
      case "MINIMAL_PHYSICS":
        return 2;
      case "NORMAL_PHYSICS":
        return 0;
      case "SIMPLE_PHYSICS":
        return 1;
      default:
        return 0;
    }
  };
  Ng.toString = function (a) {
    switch (a) {
      case 0:
        return "NORMAL_PHYSICS";
      case 1:
        return "SIMPLE_PHYSICS";
      case 2:
        return "MINIMAL_PHYSICS";
      default:
        return "NORMAL_PHYSICS";
    }
  };
  var nd = function (a, b, c, d, e) {
    $a.call(
      this,
      a,
      -1,
      -2,
      b,
      c,
      -1,
      r.NO_PHYSICS ? e.width : 1,
      r.NO_PHYSICS ? e.height : 1,
      null,
      null,
      null,
      null,
      !1,
      !1,
      !1,
      !1,
      r.NO_PHYSICS ? null : d[0],
      r.NO_PHYSICS
    );
    this.isRegion = this.alwaysSimulate = !0;
    this.solid = this.isTerrainRegion = !1;
    this.set_name("Region");
    this.simpleBounds = e;
    this.copy = d[0];
    this.containedActors = new Ca();
    this.whenActorEntersListeners = [];
    this.whenActorExitsListeners = [];
    this.justAdded = [];
    this.justRemoved = [];
    r.NO_PHYSICS ||
      (this.body.setSleepingAllowed(!0),
      this.body.setAwake(!1),
      this.body.setIgnoreGravity(!0));
    a = 0;
    var f = 0;
    if (r.NO_PHYSICS) {
      var g = e.width;
      e = e.height;
      this.cacheWidth =
        this.originalWidth =
        this.regionWidth =
          Math.round(Math.abs(a - g));
      this.cacheHeight =
        this.originalHeight =
        this.regionHeight =
          Math.round(Math.abs(f - e));
      this.currOffset.x = -(this.cacheWidth / 2);
      this.currOffset.y = -(this.cacheHeight / 2);
      this.resetReal(b, c);
    } else if (u.__instanceof(d[0], Db)) {
      this.isCircle = !1;
      b = new kf();
      b.setIdentity();
      c = new jf();
      u.__cast(d[0], Db).computeAABB(c, b);
      a = c.lowerBound.x;
      g = c.upperBound.x;
      f = c.lowerBound.y;
      e = c.upperBound.y;
      for (var h = 0, n = d.length; h < n; ) {
        var k = h++,
          m = new Tf();
        m.isSensor = !0;
        m.userData = this;
        m.shape = d[k];
        m.friction = 1;
        m.density = 0.1;
        m.restitution = 0;
        m.groupID = -1e3;
        this.body.createFixture(m);
        u.__cast(d[k], Db).computeAABB(c, b);
        a = Math.min(a, c.lowerBound.x);
        g = Math.max(g, c.upperBound.x);
        f = Math.min(f, c.lowerBound.y);
        e = Math.max(e, c.upperBound.y);
      }
      this.cacheWidth =
        this.originalWidth =
        this.regionWidth =
          Math.round(r.toPixelUnits(Math.abs(a - g)));
      this.cacheHeight =
        this.originalHeight =
        this.regionHeight =
          Math.round(r.toPixelUnits(Math.abs(f - e)));
    } else
      u.__instanceof(d[0], Jc) &&
        ((this.isCircle = !0),
        (this.cacheWidth =
          this.originalWidth =
          this.regionWidth =
            r.toPixelUnits(2 * u.__cast(d[0], Jc).m_radius)),
        (this.cacheHeight =
          this.originalHeight =
          this.regionHeight =
            r.toPixelUnits(2 * u.__cast(d[0], Jc).m_radius)));
  };
  p["com.stencyl.models.Region"] = nd;
  nd.__name__ = ["com", "stencyl", "models", "Region"];
  nd.__super__ = $a;
  nd.prototype = x($a.prototype, {
    isCircle: null,
    containedActors: null,
    copy: null,
    simpleBounds: null,
    regionWidth: null,
    regionHeight: null,
    originalWidth: null,
    originalHeight: null,
    whenActorEntersListeners: null,
    whenActorExitsListeners: null,
    justAdded: null,
    justRemoved: null,
    containsActor: function (a) {
      return null != a ? this.containedActors.h.hasOwnProperty(a.ID) : !1;
    },
    getContainedActors: function () {
      return this.containedActors;
    },
    addActor: function (a) {
      if (
        null != a &&
        -1 != a.ID &&
        !this.containedActors.h.hasOwnProperty(a.ID)
      ) {
        this.containedActors.h[a.ID] = a.ID;
        var b = J.indexOf(this.justRemoved, a);
        -1 == b ? this.justAdded.push(a) : this.justRemoved.splice(b, 1);
      }
    },
    removeActor: function (a) {
      null != a &&
        -1 != a.ID &&
        -1 == J.indexOf(this.justRemoved, a) &&
        (this.containedActors.remove(a.ID), this.justRemoved.push(a));
    },
    follow: function (a) {
      var b = a.realY + a.cacheHeight / 2;
      this.setX(a.realX + a.cacheWidth / 2);
      this.setY(b);
    },
    resetSize: function () {
      this.setRegionSize(this.originalWidth, this.originalHeight);
    },
    setRegionDiameter: function (a) {
      this.setRegionSize(a, a);
    },
    setRegionSize: function (a, b) {
      var c = this.regionWidth,
        d = this.regionHeight;
      a = r.toPhysicalUnits(a);
      b = r.toPhysicalUnits(b);
      if (this.isCircle) {
        var e = new Jc();
        e.m_radius = a / 2;
      } else (e = new Db()), e.setAsBox(a / 2, b / 2);
      var f = new Tf();
      f.isSensor = !0;
      f.userData = this;
      f.shape = e;
      f.groupID = -1e3;
      if (null != this.body && null != this.body.getFixtureList()) {
        for (; 0 < this.body.m_fixtureCount; )
          this.body.DestroyFixture(this.body.getFixtureList());
        this.body.createFixture(f);
        this.cacheWidth = this.regionWidth = r.toPixelUnits(a);
        this.cacheHeight = this.regionHeight = r.toPixelUnits(b);
      }
      a = this.regionWidth - c;
      d = this.regionHeight - d;
      this.setLocation(this.getX() + a / 2, this.getY() + d / 2);
    },
    setLocation: function (a, b) {
      this.setX(a + this.regionWidth / 2);
      this.setY(b + this.regionHeight / 2);
    },
    getWidth: function () {
      return this.regionWidth;
    },
    getHeight: function () {
      return this.regionHeight;
    },
    isMouseOver: function () {
      var a = (H.mouseX + r.cameraX) / r.SCALE,
        b = (H.mouseY + r.cameraY) / r.SCALE,
        c = this.getX(),
        d = this.getY();
      return a >= c && b >= d && a < c + this.regionWidth
        ? b < d + this.regionHeight
        : !1;
    },
    innerUpdate: function (a, b) {
      this.clearCollisionInfoList();
      if (r.NO_PHYSICS)
        for (a = this.containedActors.iterator(); a.hasNext(); )
          (b = a.next()),
            (b = r.engine.getActor(b)),
            null == this.HITBOX ||
              null == b ||
              this.HITBOX.collide(b.HITBOX) ||
              this.removeActor(b);
      for (; null != this.justAdded && 0 < this.justAdded.length; ) {
        a = u.__cast(this.justAdded.pop(), $a);
        b = this.whenActorEntersListeners;
        for (var c = 0; c < b.length; ) {
          try {
            var d = b[c];
            d(a, b);
            -1 == J.indexOf(b, d) && --c;
          } catch (g) {
            if (
              ((X.lastException = g),
              g instanceof v && (g = g.val),
              !u.__instanceof(g, String))
            )
              throw g;
          }
          ++c;
        }
      }
      for (; null != this.justRemoved && 0 < this.justRemoved.length; )
        for (
          d = u.__cast(this.justRemoved.pop(), $a),
            a = this.whenActorExitsListeners,
            b = 0;
          b < a.length;

        ) {
          try {
            var e = a[b];
            e(d, a);
            -1 == J.indexOf(a, e) && --b;
          } catch (g) {
            if (
              ((X.lastException = g),
              g instanceof v && (g = g.val),
              !u.__instanceof(g, String))
            )
              throw g;
          }
          ++b;
        }
      if (null != this.mouseOverListeners && 0 < this.mouseOverListeners.length)
        for (
          e = this.isMouseOver(),
            0 >= this.mouseState && e
              ? (this.mouseState = 1)
              : 1 <= this.mouseState && e
              ? ((this.mouseState = 2),
                H.mousePressed
                  ? (this.mouseState = 3)
                  : H.mouseDown && (this.mouseState = 4),
                H.mouseReleased && (this.mouseState = 5))
              : 0 < this.mouseState && !e
              ? (this.mouseState = -1)
              : -1 != this.mouseState || e || (this.mouseState = 0),
            e = this.mouseOverListeners,
            d = this.mouseState,
            a = 0;
          a < e.length;

        ) {
          try {
            var f = e[a];
            f(d, e);
            -1 == J.indexOf(e, f) && --a;
          } catch (g) {
            if (
              ((X.lastException = g),
              g instanceof v && (g = g.val),
              !u.__instanceof(g, String))
            )
              throw g;
          }
          ++a;
        }
    },
    __class__: nd,
  });
  var km = function (a, b) {
    this.currW = this.currH = 0;
    this.ID = a;
    this.name = b;
  };
  p["com.stencyl.models.Scene"] = km;
  km.__name__ = ["com", "stencyl", "models", "Scene"];
  km.prototype = {
    ID: null,
    name: null,
    sceneWidth: null,
    sceneHeight: null,
    tileWidth: null,
    tileHeight: null,
    gravityX: null,
    gravityY: null,
    eventID: null,
    colorBackground: null,
    layers: null,
    actors: null,
    behaviorValues: null,
    atlases: null,
    retainsAtlases: null,
    wireframes: null,
    joints: null,
    regions: null,
    terrainRegions: null,
    animatedTiles: null,
    load: function () {
      var a = new Mh(Ff.get(), !1, !0);
      a.readData(
        Na.toBytes(oa.getBytes("assets/data/scene-" + this.ID + ".mbs"))
      );
      a = a.getRoot();
      var b = a.getDepth();
      this.sceneWidth = a.getWidth();
      this.sceneHeight = a.getHeight();
      this.tileWidth = a.getTileWidth();
      this.tileHeight = a.getTileHeight();
      this.gravityX = a.getGravityX();
      this.gravityY = a.getGravityY();
      this.animatedTiles = [];
      this.actors = this.readActors(a.getActorInstances());
      this.behaviorValues = He.readBehaviors(a.getSnippets());
      var c = a.getEventSnippetID();
      if (-1 < c) {
        var d = this.behaviorValues,
          e = new lk(c, new la());
        c = "" + c;
        null != t[c] ? d.setReserved(c, e) : (d.h[c] = e);
      }
      this.joints = this.readJoints(a.getJoints());
      this.regions = this.readRegions(a.getRegions());
      this.terrainRegions = this.readTerrainRegions(a.getTerrainRegions());
      this.wireframes = this.readWireframes(a.getTerrain());
      d = oa.getBytes("assets/data/scene-" + this.ID + ".scn");
      d.__endian = 0;
      b = this.readRawLayers(d, b);
      this.layers = this.readAllLayers(a.getLayers(), b);
      this.atlases = (this.retainsAtlases = a.getRetainAtlases())
        ? []
        : this.readAtlases(a.getAtlasMembers());
    },
    unload: function () {
      this.animatedTiles =
        this.terrainRegions =
        this.regions =
        this.joints =
        this.wireframes =
        this.layers =
        this.behaviorValues =
        this.actors =
        this.colorBackground =
          null;
    },
    readRegions: function (a) {
      for (var b = new Ca(), c = 0, d = a.length(); c < d; ) {
        c++;
        var e = this.readRegion(a.getNextObject());
        b.h[e.ID] = e;
      }
      return b;
    },
    readRegion: function (a) {
      var b = a.getId(),
        c = a.getName(),
        d = a.getX(),
        e = a.getY();
      this.shapeList = [];
      var f = a.getShape();
      if (u.__instanceof(f, td)) {
        a = this.currW = f.getWidth();
        var g = (this.currH = f.getHeight());
        f = f.getPoints();
        r.NO_PHYSICS
          ? (b = new ej(this.shapeList, b, c, d, e, 0, new W(0, 0, a, g)))
          : ((a = yd.readPoints(f).slice(0)),
            new Bc(a).decompose(B(this, this.addPolygonRegion)),
            (b = new ej(this.shapeList, b, c, d, e)));
      } else
        (g = f.getRadius()),
          r.NO_PHYSICS
            ? (b = new ej(
                this.shapeList,
                b,
                c,
                d,
                e,
                0,
                new W(0, 0, 2 * g, 2 * g)
              ))
            : ((a = new Jc()),
              (a.m_radius = r.toPhysicalUnits(g)),
              (this.shapeList[0] = a),
              (b = new ej(this.shapeList, b, c, d, e)));
      return b;
    },
    shapeList: null,
    currW: null,
    currH: null,
    addPolygonRegion: function (a) {
      a = u.__cast(
        yd.createPolygon("MbsPolyRegion", a.points, this.currW, this.currH),
        Db
      );
      this.shapeList.push(a);
    },
    addPolygonTerrain: function (a) {
      a = u.__cast(
        yd.createPolygon("MbsPolyRegion", a.points, this.currW, this.currH),
        Db
      );
      this.shapeList.push(a);
    },
    readTerrainRegions: function (a) {
      for (var b = new Ca(), c = 0, d = a.length(); c < d; ) {
        c++;
        var e = this.readTerrainRegion(a.getNextObject());
        b.h[e.ID] = e;
      }
      return b;
    },
    readTerrainRegion: function (a) {
      var b = a.getId(),
        c = a.getName(),
        d = a.getGroupID(),
        e = r.toPhysicalUnits(a.getX()),
        f = r.toPhysicalUnits(a.getY()),
        g = a.getColor();
      this.shapeList = [];
      a = a.getShape();
      if (u.__instanceof(a, td))
        (this.currW = a.getWidth()),
          (this.currH = a.getHeight()),
          (a = yd.readPoints(a.getPoints()).slice(0)),
          new Bc(a).decompose(B(this, this.addPolygonTerrain));
      else {
        var h = a.getRadius();
        a = new Jc();
        a.m_radius = r.toPhysicalUnits(h);
        this.shapeList[0] = a;
      }
      return new wp(this.shapeList, b, c, e, f, d, g);
    },
    readJoints: function (a) {
      for (var b = new Ca(), c = 0, d = a.length(); c < d; ) {
        c++;
        var e = this.readJoint(a.readObject());
        b.h[e.ID] = e;
      }
      return b;
    },
    readJoint: function (a) {
      var b = a.getId(),
        c = a.getActor1(),
        d = a.getActor2(),
        e = a.getCollide();
      if (u.__instanceof(a, Cd)) {
        var f = new li();
        f.ID = b;
        f.actor1 = c;
        f.actor2 = d;
        f.localAnchorA = null;
        f.localAnchorB = null;
        f.collideConnected = e;
        f.dampingRatio = a.getDamping();
        f.frequencyHz = a.getFrequency();
        return f;
      }
      return u.__instanceof(a, Yb)
        ? ((f = new mi()),
          (f.ID = b),
          (f.actor1 = c),
          (f.actor2 = d),
          (f.localAnchorA = null),
          (f.localAnchorB = null),
          (f.collideConnected = e),
          (f.enableLimit = a.getLimit()),
          (f.enableMotor = a.getMotor()),
          (f.lowerAngle = a.getLower()),
          (f.upperAngle = a.getUpper()),
          (f.maxMotorTorque = a.getTorque()),
          (f.motorSpeed = a.getSpeed()),
          f)
        : u.__instanceof(a, Hb)
        ? ((f = new ni()),
          (f.ID = b),
          (f.actor1 = c),
          (f.actor2 = d),
          (f.localAnchorA = null),
          (f.localAnchorB = null),
          (f.collideConnected = e),
          (f.enableLimit = a.getLimit()),
          (f.enableMotor = a.getMotor()),
          (f.lowerTranslation = a.getLower()),
          (f.upperTranslation = a.getUpper()),
          (f.maxMotorForce = a.getForce()),
          (f.motorSpeed = a.getSpeed()),
          (f.localAxisA.x = a.getX()),
          (f.localAxisA.y = a.getY()),
          f)
        : null;
    },
    readAllLayers: function (a, b) {
      var c = new Ee(16);
      c.reuseIterator = !0;
      for (var d = 0, e = a.length(); d < e; ) {
        d++;
        var f = a.readObject();
        if (u.__instanceof(f, de) || u.__instanceof(f, Nc))
          this.colorBackground = this.readColorBackground(f);
        else {
          var g = f,
            h = g.getId(),
            n = g.getName(),
            k = g.getOrder(),
            m = g.getScrollFactorX(),
            l = g.getScrollFactorY(),
            p = g.getOpacity() / 100;
          g = gm.get(g.getBlendmode());
          if (u.__instanceof(f, ee)) {
            var r = b.mH;
            f = r.mHash[(73856093 * h) & r.mMask];
            if (-1 == f) f = -2147483648;
            else if (((r = r.mData), r[f] == h)) f = r[f + 1];
            else {
              var q = -2147483648;
              for (f = r[f + 2]; -1 != f; ) {
                if (r[f] == h) {
                  q = r[f + 1];
                  break;
                }
                f = r[f + 2];
              }
              f = q;
            }
            f = -2147483648 == f ? null : b.mVals[f];
            null == f &&
              (f = new le(
                h,
                this,
                Math.floor(this.sceneWidth / this.tileWidth) | 0,
                Math.floor(this.sceneHeight / this.tileHeight) | 0
              ));
            f.set_name(n);
            h = new zc(h, n, k, m, l, p, g, f);
            c.set(h.ID, h);
          } else
            u.__instanceof(f, Bd) &&
              ((r = f),
              (f = r.getResourceID()),
              (r = r.getCustomScroll()),
              (h = new Xd(h, n, k, m, l, p, g, f, r)),
              c.set(h.ID, h));
        }
      }
      return c;
    },
    readColorBackground: function (a) {
      if (u.__instanceof(a, de)) {
        var b = a.getColor();
        return new Uf(b);
      }
      return u.__instanceof(a, Nc)
        ? ((b = a.getColor1()), (a = a.getColor2()), new $i(b, a))
        : null;
    },
    readRawLayers: function (a, b) {
      var c = new Ee(16);
      c.reuseIterator = !0;
      var d = [];
      if (null != a) {
        for (var e = 0; e < b; ) {
          var f = e++;
          d[f] = a.readInt();
        }
        for (e = 0; e < b; )
          (f = e++), (f = this.readRawLayer(a, d[f])), c.set(f.layerID, f);
      }
      return c;
    },
    readRawLayer: function (a, b) {
      var c = Math.floor(this.sceneWidth / this.tileWidth) | 0,
        d = Math.floor(this.sceneHeight / this.tileHeight) | 0,
        e = a.readInt();
      b -= 4;
      a.readInt();
      b -= 4;
      d = new le(e, this, c, d);
      var f = (e = 0);
      b = (b / 8) | 0;
      var g = new lm(
        this.sceneWidth,
        this.sceneHeight,
        this.tileWidth,
        this.tileHeight
      );
      d.grid = g;
      for (var h = 0; h < b; ) {
        h++;
        var n = a.readShort(),
          k = a.readShort(),
          m = a.readShort(),
          l = a.readShort(),
          p = null;
        -1 != k && (p = $b.get().resources.get(k));
        0 > n && (n = Math.abs(n + 1) | 0);
        for (k = 0; k < l; ) {
          k++;
          if (null == p || 0 > m) d.setTileAt(e, f, null, !1);
          else {
            var r = p.tiles[m];
            if (null == r) d.setTileAt(e, f, null, !1);
            else if (
              (d.setTileAt(e, f, r, !1),
              (d.autotileData[e][f] = n),
              0 <= r.collisionID && g.setTile(f, e, !0),
              1 < r.durations.length)
            ) {
              for (
                var q = !1, t = 0, u = this.animatedTiles;
                t < u.length && !((q = u[t]), ++t, (q = q == r));

              );
              q || this.animatedTiles.push(r);
            }
          }
          ++f;
          f >= c && ((f = 0), ++e);
        }
      }
      return d;
    },
    readAtlases: function (a) {
      for (var b = [], c = 0, d = a.length(); c < d; ) {
        c++;
        var e = a.readInt();
        cb.get().atlases.h[e].allScenes || b.push(e);
      }
      return b;
    },
    readWireframes: function (a) {
      if (r.NO_PHYSICS) return [];
      for (var b = [], c = 0, d = a.length(); c < d; ) {
        c++;
        var e = a.getNextObject(),
          f = e.getPosition();
        f = new Y(f.getX(), f.getY());
        e = yd.readPoints(e.getPoints()).slice(0);
        e = yd.createPolygon("MbsWireframe", e);
        b.push(new xp(f.x, f.y, e.h[1], e.h[2], e.h[0], null));
      }
      return b;
    },
    readActors: function (a) {
      for (var b = new Ca(), c = 0, d = a.length(); c < d; ) {
        c++;
        var e = this.readActorInstance(a.getNextObject());
        null != e && (b.h[e.elementID] = e);
      }
      return b;
    },
    readActorInstance: function (a) {
      var b = a.getAid(),
        c = a.getX(),
        d = a.getY(),
        e = a.getScaleX(),
        f = a.getScaleY(),
        g = a.getZ(),
        h = a.getAngle() | 0,
        n = a.getGroupID(),
        k = a.getId(),
        m = a.getCustomized(),
        l = null;
      m && (l = He.readBehaviors(a.getSnippets()));
      if (0 == e || 0 == f) f = e = 1;
      m || (l = null);
      if (null == $b.get().resources.get(k)) return null;
      a = new $l(b, c, d, e, f, g, h, n, k, l, m);
      null != a.actorType && (a.groupID = a.actorType.groupID);
      return a;
    },
    getID: function () {
      return this.ID;
    },
    __class__: km,
  };
  var oi = function (a, b, c, d, e, f, g, h) {
    kd.call(this, a, b, -1);
    this.streaming = c;
    this.looping = d;
    this.panning = e;
    this.volume = f;
    this.ext = g;
    this.atlasID = h;
    this.ext = "ogg";
    a = cb.get().atlases.h[h];
    null != a && a.active && this.loadGraphics();
  };
  p["com.stencyl.models.Sound"] = oi;
  oi.__name__ = ["com", "stencyl", "models", "Sound"];
  oi.__super__ = kd;
  oi.prototype = x(kd.prototype, {
    streaming: null,
    looping: null,
    panning: null,
    volume: null,
    ext: null,
    src: null,
    loadGraphics: function () {
      this.src = oa.getSound(
        "assets/" +
          (this.streaming ? "music" : "sfx") +
          "/sound-" +
          this.ID +
          "." +
          this.ext,
        !1
      );
    },
    unloadGraphics: function () {
      this.streaming ||
        (null != this.src && (this.stopInstances(), this.src.close()),
        (this.src = null));
    },
    play: function (a, b) {
      null == b && (b = 0);
      this.streaming &&
        null == this.src &&
        (this.src = this.getStreamingSource());
      return null == this.src ? null : this.src.play(b);
    },
    loop: function (a, b) {
      null == b && (b = 0);
      this.streaming &&
        null == this.src &&
        (this.src = this.getStreamingSource());
      return null == this.src ? null : this.src.play(b, 1e8);
    },
    getStreamingSource: function () {
      return oa.getSound("assets/music/sound-" + this.ID + "." + this.ext, !1);
    },
    stopInstances: function () {
      for (var a = 0; 32 > a; ) {
        var b = a++;
        b = r.engine.channels[b];
        b.currentSource == this.src && b.stopSound();
      }
    },
    __class__: oi,
  });
  var wf = function (a, b) {
    this.paused = !1;
    this.currentClip = this.currentSound = null;
    this.looping = !1;
    this.volume = 1;
    this.position = this.panning = 0;
    this.channelNum = b;
    this.engine = a;
    this.transform = new Yf();
    this.tweenVolume = new Ge();
    this.tweenVolume.doOnUpdate(B(this, this.tweenUpdated));
  };
  p["com.stencyl.models.SoundChannel"] = wf;
  wf.__name__ = ["com", "stencyl", "models", "SoundChannel"];
  wf.resetStatics = function () {
    wf.muted = !1;
    wf.masterVolume = 1;
  };
  wf.prototype = {
    currentSource: null,
    currentSound: null,
    currentClip: null,
    volume: null,
    panning: null,
    channelNum: null,
    looping: null,
    paused: null,
    position: null,
    engine: null,
    transform: null,
    tweenVolume: null,
    playSound: function (a, b) {
      null == b && (b = 0);
      null != this.currentSound &&
        (this.currentSound.stop(), (this.paused = !1));
      if (null != a) {
        a.volume = this.volume * wf.masterVolume;
        this.currentClip = a;
        this.currentSound = a.play(this.channelNum, b);
        if (null == this.currentSound) return (this.currentClip = null);
        this.setVolume(this.volume);
        this.setPanning(this.panning);
        this.currentSound.addEventListener(
          "soundComplete",
          B(this, this.stopped)
        );
      }
      null != a && (this.currentSource = a.src);
      this.looping = !1;
      return this.currentSound;
    },
    loopSound: function (a, b) {
      null == b && (b = 0);
      null != this.currentSound && this.currentSound.stop();
      if (null != a) {
        a.volume = this.volume * wf.masterVolume;
        this.currentClip = a;
        this.currentSound = a.play(this.channelNum, b);
        if (null == this.currentSound) return (this.currentClip = null);
        this.setVolume(this.volume);
        this.setPanning(this.panning);
        this.currentSound.addEventListener(
          "soundComplete",
          B(this, this.looped)
        );
      }
      null != a && (this.currentSource = a.src);
      this.looping = !0;
      return this.currentSound;
    },
    setPause: function (a) {
      null != this.currentSound &&
        (a
          ? (this.currentSound.removeEventListener(
              "soundComplete",
              B(this, this.looped)
            ),
            (this.position = this.currentSound.get_position()),
            this.currentSound.stop(),
            (this.paused = !0))
          : null != this.currentSource &&
            this.paused &&
            ((this.currentSound = this.currentClip.play(
              this.channelNum,
              this.position
            )),
            this.currentSound.set_soundTransform(this.transform),
            this.looping &&
              this.currentSound.addEventListener(
                "soundComplete",
                B(this, this.looped)
              ),
            (this.paused = !1)));
    },
    looped: function (a) {
      null != this.currentSound &&
        this.currentSound.removeEventListener(
          "soundComplete",
          B(this, this.looped)
        );
      this.loopSound(this.currentClip);
    },
    stopped: function (a) {
      null != this.currentSound &&
        this.currentSound.removeEventListener(
          "soundComplete",
          B(this, this.stopped)
        );
      r.engine.soundFinished(this.channelNum);
    },
    stopSound: function () {
      null != this.currentSound &&
        (this.currentSound.stop(),
        (this.position = 0),
        (this.currentSound = this.currentSource = null),
        (this.paused = !1));
    },
    tweenUpdated: function () {
      this.transform.volume = this.tweenVolume.value;
      null != this.currentSound &&
        this.currentSound.set_soundTransform(this.transform);
    },
    fadeInSound: function (a) {
      null != this.currentSound &&
        this.tweenVolume.tween(
          this.transform.volume,
          1,
          xa.linear,
          (1e3 * a) | 0
        );
    },
    fadeOutSound: function (a) {
      null != this.currentSound &&
        this.tweenVolume.tween(
          this.transform.volume,
          0,
          xa.linear,
          (1e3 * a) | 0
        );
    },
    fadeSound: function (a, b) {
      null != this.currentSound &&
        this.tweenVolume.tween(
          this.transform.volume,
          b,
          xa.linear,
          (1e3 * a) | 0
        );
    },
    setVolume: function (a) {
      this.volume = a;
      null != this.currentSound &&
        ((this.transform.volume = a * wf.masterVolume),
        this.currentSound.set_soundTransform(this.transform));
    },
    setPanning: function (a) {
      this.panning = a;
      null != this.currentSound &&
        ((this.transform.pan = a),
        this.currentSound.set_soundTransform(this.transform));
    },
    __class__: wf,
  };
  var oh = function (a, b, c, d, e, f) {
    null == f && (f = 0);
    $a.call(
      this,
      a,
      -1,
      e,
      b,
      c,
      -1,
      1,
      1,
      null,
      null,
      null,
      null,
      !1,
      !0,
      !1,
      !1,
      d[0]
    );
    0 == f && (f = 0);
    this.fillColor = f;
    this.alwaysSimulate = !0;
    this.isRegion = !1;
    this.isTerrainRegion = !0;
    this.copy = d[0];
    this.body.setSleepingAllowed(!0);
    this.body.setAwake(!1);
    this.body.setIgnoreGravity(!0);
    if (u.__instanceof(d[0], Db)) {
      this.isCircle = !1;
      var g = new kf();
      g.setIdentity();
      var h = new jf();
      u.__cast(d[0], Db).computeAABB(h, g);
      a = h.lowerBound.x;
      b = h.upperBound.x;
      c = h.lowerBound.y;
      f = h.upperBound.y;
      for (var n = 0, k = d.length; n < k; ) {
        var m = n++,
          l = new Tf();
        l.isSensor = !1;
        l.userData = this;
        l.shape = d[m];
        l.friction = 1;
        l.density = 0.1;
        l.restitution = 0;
        l.groupID = e;
        this.body.createFixture(l);
        u.__cast(d[m], Db).computeAABB(h, g);
        a = Math.min(a, h.lowerBound.x);
        b = Math.max(b, h.upperBound.x);
        c = Math.min(c, h.lowerBound.y);
        f = Math.max(f, h.upperBound.y);
      }
      this.originalWidth = this.regionWidth = Math.round(
        r.toPixelUnits(Math.abs(a - b))
      );
      this.originalHeight = this.regionHeight = Math.round(
        r.toPixelUnits(Math.abs(c - f))
      );
    } else
      u.__instanceof(d[0], Jc) &&
        ((this.isCircle = !0),
        (this.originalWidth = this.regionWidth =
          r.toPixelUnits(2 * u.__cast(d[0], Jc).m_radius)),
        (this.originalHeight = this.regionHeight =
          r.toPixelUnits(2 * u.__cast(d[0], Jc).m_radius)));
  };
  p["com.stencyl.models.Terrain"] = oh;
  oh.__name__ = ["com", "stencyl", "models", "Terrain"];
  oh.__super__ = $a;
  oh.prototype = x($a.prototype, {
    isCircle: null,
    fillColor: null,
    copy: null,
    originalWidth: null,
    originalHeight: null,
    regionWidth: null,
    regionHeight: null,
    follow: function (a) {
      var b = a.realY + a.cacheHeight / 2;
      this.setX(a.realX + a.cacheWidth / 2);
      this.setY(b);
    },
    resetSize: function () {
      this.setRegionSize(this.originalWidth, this.originalHeight);
    },
    setRegionDiameter: function (a) {
      this.setRegionSize(a, a);
    },
    setRegionSize: function (a, b) {
      var c = this.regionWidth,
        d = this.regionHeight;
      a = r.toPhysicalUnits(a);
      b = r.toPhysicalUnits(b);
      if (this.isCircle) {
        var e = new Jc();
        e.m_radius = a / 2;
      } else (e = new Db()), e.setAsBox(a / 2, b / 2);
      var f = new Tf();
      f.isSensor = !0;
      f.userData = this;
      f.shape = e;
      if (null != this.body && null != this.body.getFixtureList()) {
        for (; 0 < this.body.m_fixtureCount; )
          this.body.DestroyFixture(this.body.getFixtureList());
        this.body.createFixture(f);
        this.regionWidth = r.toPixelUnits(a);
        this.regionHeight = r.toPixelUnits(b);
      }
      a = this.regionWidth - c;
      d = this.regionHeight - d;
      this.setLocation(this.getX() + a / 2, this.getY() + d / 2);
    },
    setLocation: function (a, b) {
      this.setX(a + this.regionWidth / 2);
      this.setY(b + this.regionHeight / 2);
    },
    getWidth: function () {
      return this.regionWidth;
    },
    getHeight: function () {
      return this.regionHeight;
    },
    getFillColor: function () {
      return this.fillColor;
    },
    __class__: oh,
  });
  var sp = function () {
    this.xy = new Rf();
    this.angle = new Ge();
    this.alpha = new Ge();
    this.realScaleXY = new Rf();
  };
  p["com.stencyl.models.actor.ActorTweenProperties"] = sp;
  sp.__name__ = ["com", "stencyl", "models", "actor", "ActorTweenProperties"];
  sp.prototype = {
    xy: null,
    angle: null,
    alpha: null,
    realScaleXY: null,
    pause: function () {
      this.xy.paused = !0;
      this.angle.paused = !0;
      this.alpha.paused = !0;
      this.realScaleXY.paused = !0;
    },
    unpause: function () {
      this.xy.paused = !1;
      this.angle.paused = !1;
      this.alpha.paused = !1;
      this.realScaleXY.paused = !1;
    },
    cancel: function () {
      this.xy.active && sb.cancel(this.xy);
      this.angle.active && sb.cancel(this.angle);
      this.alpha.active && sb.cancel(this.alpha);
      this.realScaleXY.active && sb.cancel(this.realScaleXY);
    },
    __class__: sp,
  };
  var ng = function (a, b, c, d, e, f, g, h, n, k, m) {
    kd.call(this, a, c, b);
    this.groupID = d;
    this.spriteID = e;
    this.behaviorValues = f;
    this.bodyDef = g;
    this.physicsMode = h;
    this.autoScale = n;
    this.pausable = k;
    this.ignoreGravity = m;
  };
  p["com.stencyl.models.actor.ActorType"] = ng;
  ng.__name__ = ["com", "stencyl", "models", "actor", "ActorType"];
  ng.__super__ = kd;
  ng.prototype = x(kd.prototype, {
    groupID: null,
    spriteID: null,
    behaviorValues: null,
    bodyDef: null,
    physicsMode: null,
    autoScale: null,
    pausable: null,
    ignoreGravity: null,
    toString: function () {
      return this.name;
    },
    loadGraphics: function () {
      $b.get().resources.get(this.spriteID).loadGraphics();
    },
    unloadGraphics: function () {
      $b.get().resources.get(this.spriteID).unloadGraphics();
    },
    __class__: ng,
  });
  var ue = function (a, b, c, d, e, f, g, h, n, k, m, l, p, r, q) {
    this.sharedTimer = this.sharedFrameIndex = 0;
    this.animID = a;
    this.animName = b;
    this.parent = c;
    this.simpleShapes = d;
    this.physicsShapes = e;
    this.looping = f;
    this.sync = g;
    this.durations = l;
    null == ue.UNLOADED && (ue.UNLOADED = new sa(1, 1));
    a = [];
    for (b = 0; b < p; ) b++, a.push(ue.UNLOADED);
    this.frames = a;
    this.frameWidth = (h / r) | 0;
    this.frameHeight = (n / q) | 0;
    this.imgWidth = h;
    this.imgHeight = n;
    this.frameCount = p;
    this.framesAcross = r;
    this.framesDown = q;
    this.originX = k;
    this.originY = m;
    null == c
      ? (this.frames = [ue.UNLOADED])
      : ((c = cb.get().atlases.h[c.atlasID]),
        null != c && c.active && this.loadGraphics(),
        1 < p && f && ue.allAnimations.push(this));
  };
  p["com.stencyl.models.actor.Animation"] = ue;
  ue.__name__ = ["com", "stencyl", "models", "actor", "Animation"];
  ue.resetStatics = function () {
    ue.allAnimations = [];
  };
  ue.updateAll = function (a) {
    for (var b = 0, c = ue.allAnimations; b < c.length; ) {
      var d = c[b];
      ++b;
      d.sharedTimer += a;
      1 < d.frameCount &&
        d.sharedTimer > d.durations[d.sharedFrameIndex] &&
        ((d.sharedTimer -= d.durations[d.sharedFrameIndex]),
        d.sharedFrameIndex++,
        d.sharedFrameIndex >= d.frameCount &&
          (d.looping ? (d.sharedFrameIndex = 0) : d.sharedFrameIndex--));
    }
  };
  ue.prototype = {
    animID: null,
    animName: null,
    parent: null,
    simpleShapes: null,
    physicsShapes: null,
    looping: null,
    sync: null,
    durations: null,
    frames: null,
    frameWidth: null,
    frameHeight: null,
    originX: null,
    originY: null,
    sharedTimer: null,
    sharedFrameIndex: null,
    imgWidth: null,
    imgHeight: null,
    frameCount: null,
    framesAcross: null,
    framesDown: null,
    graphicsLoaded: null,
    loadGraphics: function () {
      if (!this.graphicsLoaded) {
        var a = oa.getBitmapData(
          "assets/graphics/" +
            r.IMG_BASE +
            "/sprite-" +
            this.parent.ID +
            "-" +
            this.animID +
            ".png",
          !1
        );
        if (null == a) {
          a = [];
          for (var b = 0, c = this.frameCount; b < c; )
            b++, a.push(ue.UNLOADED);
          this.frames = a;
        } else {
          if (1 == this.frameCount) this.frames[0] = a;
          else {
            b = (this.frameWidth * r.SCALE) | 0;
            c = (this.frameHeight * r.SCALE) | 0;
            for (var d = new Y(0, 0), e = 0, f = this.frameCount; e < f; ) {
              var g = e++,
                h = new W(
                  (g % this.framesAcross) * b,
                  Math.floor(g / this.framesAcross) * c,
                  b,
                  c
                ),
                n = new sa(b, c, !0, 0);
              n.copyPixels(a, h, d);
              this.frames[g] = n;
            }
            a.dispose();
          }
          if (
            U.disposeImages &&
            null != this.parent &&
            !this.parent.readableImages
          )
            for (a = 0, b = this.frames; a < b.length; )
              (c = b[a]), ++a, hd.uploadTexture(c, !0);
          this.graphicsLoaded = !0;
        }
      }
    },
    unloadGraphics: function () {
      if (this.graphicsLoaded) {
        for (var a = 0, b = this.frameCount; a < b; ) {
          var c = a++;
          this.frames[c].readable && this.frames[c].dispose();
          this.frames[c] = ue.UNLOADED;
        }
        this.graphicsLoaded = !1;
      }
    },
    checkImageReadable: function () {
      return this.frames[0].readable ? !0 : !1;
    },
    update: function (a) {
      this.sharedTimer += a;
      1 < this.frameCount &&
        this.sharedTimer > this.durations[this.sharedFrameIndex] &&
        ((this.sharedTimer -= this.durations[this.sharedFrameIndex]),
        this.sharedFrameIndex++,
        this.sharedFrameIndex >= this.frameCount &&
          (this.looping
            ? (this.sharedFrameIndex = 0)
            : this.sharedFrameIndex--));
    },
    __class__: ue,
  };
  var oc = function () {
    this.points = [];
    this.bounds = new W();
    this.clear();
  };
  p["com.stencyl.models.actor.Collision"] = oc;
  oc.__name__ = ["com", "stencyl", "models", "actor", "Collision"];
  oc.resetStatics = function () {
    oc.recycledCollisions = [];
    oc.collisionResponses = new Ca();
  };
  oc.addResponse = function (a, b, c) {
    var d = -1,
      e = -1;
    u.__instanceof(a, ng)
      ? (d = a.groupID)
      : u.__instanceof(a, qi) && (d = a.ID);
    u.__instanceof(b, ng)
      ? (e = b.groupID)
      : u.__instanceof(b, qi) && (e = b.ID);
    null == oc.collisionResponses.h[d] &&
      ((a = oc.collisionResponses), (b = new Ca()), (a.h[d] = b));
    null == oc.collisionResponses.h[e] &&
      ((a = oc.collisionResponses), (b = new Ca()), (a.h[e] = b));
    oc.collisionResponses.h[d].h[e] = c;
    oc.collisionResponses.h[e].h[d] = c;
  };
  oc.preSolve = function (a, b) {
    b = a.getFixtureA().getBody().groupID;
    var c = a.getFixtureB().getBody().groupID;
    null != oc.collisionResponses.h[b] &&
      "sensor" == oc.collisionResponses.h[b].h[c] &&
      a.setEnabled(!1);
  };
  oc.get = function () {
    return 0 < oc.recycledCollisions.length
      ? oc.recycledCollisions.pop()
      : new oc();
  };
  oc.recycle = function (a) {
    a.clear();
    oc.recycledCollisions.push(a);
  };
  oc.prototype = {
    thisFromTop: null,
    thisFromLeft: null,
    thisFromBottom: null,
    thisFromRight: null,
    thisCollidedWithActor: null,
    thisCollidedWithTile: null,
    thisCollidedWithSensor: null,
    thisCollidedWithTerrain: null,
    otherFromTop: null,
    otherFromLeft: null,
    otherFromBottom: null,
    otherFromRight: null,
    otherCollidedWithActor: null,
    otherCollidedWithTile: null,
    otherCollidedWithSensor: null,
    otherCollidedWithTerrain: null,
    points: null,
    thisActor: null,
    otherActor: null,
    thisShape: null,
    otherShape: null,
    actorA: null,
    actorB: null,
    maskA: null,
    maskB: null,
    groupA: null,
    groupB: null,
    bounds: null,
    useBounds: null,
    remove: null,
    solidCollision: null,
    linkedCollision: null,
    clear: function () {
      for (; 0 < this.points.length; ) this.points.pop();
      this.remove =
        this.solidCollision =
        this.useBounds =
        this.otherCollidedWithTerrain =
        this.otherCollidedWithSensor =
        this.otherCollidedWithTile =
        this.otherCollidedWithActor =
        this.otherFromRight =
        this.otherFromBottom =
        this.otherFromLeft =
        this.otherFromTop =
        this.thisCollidedWithTerrain =
        this.thisCollidedWithSensor =
        this.thisCollidedWithTile =
        this.thisCollidedWithActor =
        this.thisFromRight =
        this.thisFromBottom =
        this.thisFromLeft =
        this.thisFromTop =
          !1;
      this.linkedCollision =
        this.maskA =
        this.maskB =
        this.actorB =
        this.actorA =
        this.otherShape =
        this.thisShape =
        this.otherActor =
        this.thisActor =
          null;
      this.bounds.setEmpty();
    },
    switchData: function (a) {
      if (null == a) return null;
      a.thisActor = this.otherActor;
      a.thisShape = this.otherShape;
      a.thisFromTop = this.otherFromTop;
      a.thisFromLeft = this.otherFromLeft;
      a.thisFromBottom = this.otherFromBottom;
      a.thisFromRight = this.otherFromRight;
      a.thisCollidedWithActor = this.otherCollidedWithActor;
      a.thisCollidedWithTile = this.otherCollidedWithTile;
      a.thisCollidedWithSensor = this.otherCollidedWithSensor;
      a.thisCollidedWithTerrain = this.otherCollidedWithTerrain;
      a.otherActor = this.thisActor;
      a.otherShape = this.thisShape;
      a.otherFromTop = this.thisFromTop;
      a.otherFromLeft = this.thisFromLeft;
      a.otherFromBottom = this.thisFromBottom;
      a.otherFromRight = this.thisFromRight;
      a.otherCollidedWithActor = this.thisCollidedWithActor;
      a.otherCollidedWithTile = this.thisCollidedWithTile;
      a.otherCollidedWithSensor = this.thisCollidedWithSensor;
      a.otherCollidedWithTerrain = this.thisCollidedWithTerrain;
      a.actorA = this.actorA;
      a.actorB = this.actorB;
      a.points = this.points;
      a.useBounds = this.useBounds;
      a.maskA = this.maskA;
      a.maskB = this.maskB;
      a.solidCollision = this.solidCollision;
      a.groupA = this.groupA;
      a.groupB = this.groupB;
      a.linkedCollision = this;
      return (this.linkedCollision = a);
    },
    __class__: oc,
  };
  var Rd = function (a, b, c, d) {
    this.x = a;
    this.y = b;
    this.normalX = c;
    this.normalY = d;
  };
  p["com.stencyl.models.actor.CollisionPoint"] = Rd;
  Rd.__name__ = ["com", "stencyl", "models", "actor", "CollisionPoint"];
  Rd.resetStatics = function () {
    Rd.freedCollisionPoints = [];
  };
  Rd.get = function (a, b, c, d) {
    if (0 < Rd.freedCollisionPoints.length) {
      var e = Rd.freedCollisionPoints.pop();
      e.x = a;
      e.y = b;
      e.normalX = c;
      e.normalY = d;
      return e;
    }
    return new Rd(a, b, c, d);
  };
  Rd.free = function (a) {
    Rd.freedCollisionPoints.push(a);
  };
  Rd.prototype = {
    x: null,
    y: null,
    normalX: null,
    normalY: null,
    __class__: Rd,
  };
  var qi = function (a, b) {
    this.name = b;
    this.ID = a;
    this.sID = "[Group " + a + "," + b + "]";
    this.list = [];
  };
  p["com.stencyl.models.actor.Group"] = qi;
  qi.__name__ = ["com", "stencyl", "models", "actor", "Group"];
  qi.prototype = {
    list: null,
    name: null,
    ID: null,
    sID: null,
    addChild: function (a) {
      this.list.push(a);
    },
    removeChild: function (a) {},
    toString: function () {
      return this.sID;
    },
    __class__: qi,
  };
  var ii = function (a, b, c, d, e) {
    kd.call(this, a, c, b);
    this.defaultAnimation = d;
    this.readableImages = e;
    this.animations = new Ca();
  };
  p["com.stencyl.models.actor.Sprite"] = ii;
  ii.__name__ = ["com", "stencyl", "models", "actor", "Sprite"];
  ii.__super__ = kd;
  ii.prototype = x(kd.prototype, {
    defaultAnimation: null,
    animations: null,
    readableImages: null,
    loadGraphics: function () {
      for (var a = this.animations.iterator(); a.hasNext(); )
        a.next().loadGraphics();
    },
    unloadGraphics: function () {
      for (var a = this.animations.iterator(); a.hasNext(); )
        a.next().unloadGraphics();
    },
    reloadGraphics: function (a) {
      -1 == a
        ? (this.unloadGraphics(), this.loadGraphics())
        : (this.animations.h[a].unloadGraphics(),
          this.animations.h[a].loadGraphics());
      for (var b = r.engine.allActors.iterator(); b.hasNext(); ) {
        var c = b.next();
        null == c ||
          c.dead ||
          c.recycled ||
          (c.type.spriteID == this.ID && c.reloadAnimationGraphics(a));
      }
    },
    get_width: function () {
      var a = this.animations.h[this.defaultAnimation];
      return (a.imgWidth / a.framesAcross) | 0;
    },
    get_height: function () {
      var a = this.animations.h[this.defaultAnimation];
      return (a.imgHeight / a.framesDown) | 0;
    },
    __class__: ii,
    __properties__: { get_height: "get_height", get_width: "get_width" },
  });
  var Uf = function (a) {
    kd.call(this, 0, "Color Background", -1);
    this.bgColor = a;
    a == Uf.WHITE && (this.bgColor = 16777215);
  };
  p["com.stencyl.models.background.ColorBackground"] = Uf;
  Uf.__name__ = ["com", "stencyl", "models", "background", "ColorBackground"];
  Uf.__interfaces__ = [dj];
  Uf.__super__ = kd;
  Uf.prototype = x(kd.prototype, {
    bgColor: null,
    update: function () {},
    draw: function (a, b, c, d, e) {
      this.bgColor != Uf.TRANSPARENT &&
        (a.clear(),
        a.beginFill(this.bgColor),
        a.drawRect(0, 0, d, e),
        a.endFill(),
        a.drawCircle(1, 1, 1));
    },
    __class__: Uf,
  });
  var $i = function (a, b) {
    kd.call(this, 0, "Gradient Background", -1);
    this.topColor = a;
    this.bottomColor = b;
  };
  p["com.stencyl.models.background.GradientBackground"] = $i;
  $i.__name__ = [
    "com",
    "stencyl",
    "models",
    "background",
    "GradientBackground",
  ];
  $i.__interfaces__ = [dj];
  $i.__super__ = kd;
  $i.prototype = x(kd.prototype, {
    topColor: null,
    bottomColor: null,
    update: function () {},
    draw: function (a, b, c, d, e) {
      b = [this.topColor, this.bottomColor];
      c = new ya();
      c.createGradientBox(d, e, Math.PI / 2, 0, 0);
      a.clear();
      a.beginGradientFill(0, b, [100, 100], [0, 255], c, 0);
      a.drawRect(0, 0, d, e);
      a.endFill();
    },
    __class__: $i,
  });
  var Tg = function (a, b, c, d, e, f, g) {
    kd.call(this, a, c, b);
    this.parallaxX = e;
    this.parallaxY = f;
    this.durations = d;
    this.repeats = g;
    this.currFrame = this.currTime = 0;
    this.isAtlasActive() && this.loadGraphics();
    this.repeated = !1;
  };
  p["com.stencyl.models.background.ImageBackground"] = Tg;
  Tg.__name__ = ["com", "stencyl", "models", "background", "ImageBackground"];
  Tg.__interfaces__ = [dj];
  Tg.__super__ = kd;
  Tg.prototype = x(kd.prototype, {
    currFrame: null,
    currTime: null,
    img: null,
    frames: null,
    durations: null,
    parallaxX: null,
    parallaxY: null,
    repeats: null,
    repeated: null,
    graphicsLoaded: null,
    update: function () {},
    draw: function (a, b, c, d, e) {},
    drawRepeated: function (a, b, c) {
      a = this.img.width;
      var d = this.img.height,
        e = new W(0, 0, a, d);
      if (!(a >= b && d >= c)) {
        a < b && (b += (a | 0) - (b % (a | 0)));
        d < c && (c += (d | 0) - (c % (d | 0)));
        var f = new sa(Math.max(b, a) | 0, Math.max(c, d) | 0),
          g = 0;
        for (c = ((c / d) | 0) + 1; g < c; )
          for (var h = g++, n = 0, k = ((b / a) | 0) + 1; n < k; ) {
            var m = n++;
            f.copyPixels(this.img, e, new Y(m * a, h * d));
          }
        this.img = f;
      }
      this.repeated = !0;
    },
    loadGraphics: function () {
      if (!this.graphicsLoaded) {
        var a = [],
          b = this.durations.length;
        if (0 < b)
          for (var c = 0; c < b; ) {
            var d = c++;
            a.push(
              oa.getBitmapData(
                "assets/graphics/" +
                  r.IMG_BASE +
                  "/background-" +
                  this.ID +
                  "-" +
                  d +
                  ".png",
                !1
              )
            );
          }
        else
          a.push(
            oa.getBitmapData(
              "assets/graphics/" +
                r.IMG_BASE +
                "/background-" +
                this.ID +
                "-0.png",
              !1
            )
          );
        this.frames = [];
        b = 0;
        for (c = a.length; b < c; )
          (d = b++),
            this.repeats
              ? ((this.img = a[d]),
                this.drawRepeated(
                  null,
                  (r.screenWidth * r.SCALE) | 0,
                  (r.screenHeight * r.SCALE) | 0
                ),
                this.frames.push(this.img))
              : this.frames.push(a[d]);
        this.img = this.frames[0];
        this.graphicsLoaded = !0;
      }
    },
    unloadGraphics: function () {
      if (this.graphicsLoaded) {
        this.img = new sa(1, 1);
        this.currFrame = 0;
        this.repeated = !1;
        this.frames = [];
        for (var a = 0, b = this.durations; a < b.length; )
          ++a, this.frames.push(this.img);
        this.graphicsLoaded = !1;
      }
    },
    reloadGraphics: function (a) {
      kd.prototype.reloadGraphics.call(this, a);
      a = 0;
      for (var b = r.engine.backgroundLayers; a < b.length; ) {
        var c = b[a];
        ++a;
        c.model == this && c.reload(c.resourceID);
      }
    },
    __class__: Tg,
  });
  var Rh = function (a, b, c, d, e, f, g, h, n) {
    Tg.call(this, a, b, c, d, e, f, g);
    this.xVelocity = h;
    this.yVelocity = n;
  };
  p["com.stencyl.models.background.ScrollingBackground"] = Rh;
  Rh.__name__ = [
    "com",
    "stencyl",
    "models",
    "background",
    "ScrollingBackground",
  ];
  Rh.__interfaces__ = [dj];
  Rh.__super__ = Tg;
  Rh.prototype = x(Tg.prototype, {
    xVelocity: null,
    yVelocity: null,
    update: function () {},
    draw: function (a, b, c, d, e) {},
    __class__: Rh,
  });
  var Qf = function () {
    this.reset();
  };
  p["com.stencyl.models.collision.CollisionInfo"] = Qf;
  Qf.__name__ = ["com", "stencyl", "models", "collision", "CollisionInfo"];
  Qf.resetStatics = function () {
    Qf.infoArray = [];
  };
  Qf.getCollisionInfo = function () {
    return 0 < Qf.infoArray.length ? Qf.infoArray.pop() : new Qf();
  };
  Qf.recycle = function (a) {
    Qf.infoArray.push(a);
  };
  Qf.prototype = {
    max: null,
    min: null,
    maskA: null,
    maskB: null,
    solidCollision: null,
    reset: function () {
      this.max = this.min = 0;
      this.maskA = this.maskB = null;
      this.solidCollision = !0;
    },
    __class__: Qf,
  };
  var qg = function () {
    this.collideTypes = [];
    this.solid = !0;
    this._class = qa.getClassName(u.getClass(this));
    var a = (this._check = new la()),
      b = qa.getClassName(qg),
      c = B(this, this.collideMask);
    null != t[b] ? a.setReserved(b, c) : (a.h[b] = c);
    a = this._check;
    b = qa.getClassName(cj);
    c = B(this, this.collideMasklist);
    null != t[b] ? a.setReserved(b, c) : (a.h[b] = c);
    this.lastBounds = new W();
    this.lastColID = -1;
  };
  p["com.stencyl.models.collision.Mask"] = qg;
  qg.__name__ = ["com", "stencyl", "models", "collision", "Mask"];
  qg.prototype = {
    parent: null,
    groupID: null,
    list: null,
    lastBounds: null,
    lastCheckedMask: null,
    lastColID: null,
    solid: null,
    collideTypes: null,
    collide: function (a) {
      if (null == this.parent)
        throw new v("Mask must be attached to a parent Entity");
      var b = a._class,
        c = this._check;
      b = null != t[b] ? c.getReserved(b) : c.h[b];
      if (null != b) return b(a);
      b = this._class;
      a = a._check;
      b = null != t[b] ? a.getReserved(b) : a.h[b];
      return null != b ? b(this) : !1;
    },
    collideMask: function (a) {
      return this.parent.colX + this.parent.cacheWidth > a.parent.colX &&
        this.parent.colY + this.parent.cacheHeight > a.parent.colY &&
        this.parent.colX < a.parent.colX + a.parent.cacheWidth &&
        this.parent.colY < a.parent.colY + a.parent.cacheHeight
        ? ((this.lastBounds.x = this.parent.colX),
          (this.lastBounds.y = this.parent.colY),
          (this.lastBounds.width = this.parent.cacheWidth),
          (this.lastBounds.height = this.parent.cacheHeight),
          (this.lastCheckedMask = this),
          !0)
        : !1;
    },
    collideMasklist: function (a) {
      return a.collide(this);
    },
    assignTo: function (a) {
      this.parent = a;
      null != a && this.update();
    },
    debugDraw: function (a, b, c) {},
    update: function () {},
    projectMask: function (a, b) {
      var c = -9999999999,
        d = 9999999999;
      var e = -this.parent.currOffset.x * a.x - this.parent.currOffset.y * a.y;
      e < d && (d = e);
      e > c && (c = e);
      e =
        (-this.parent.currOffset.x + this.parent.cacheWidth) * a.x -
        this.parent.currOffset.y * a.y;
      e < d && (d = e);
      e > c && (c = e);
      e =
        -this.parent.currOffset.x * a.x +
        (-this.parent.currOffset.y + this.parent.cacheHeight) * a.y;
      e < d && (d = e);
      e > c && (c = e);
      e =
        (-this.parent.currOffset.x + this.parent.cacheWidth) * a.x +
        (-this.parent.currOffset.y + this.parent.cacheHeight) * a.y;
      e < d && (d = e);
      e > c && (c = e);
      b.min = d;
      b.max = c;
    },
    _class: null,
    _check: null,
    __class__: qg,
  };
  var jd = function (a, b, c, d, e, f) {
    null == f && (f = 0);
    null == e && (e = !0);
    null == d && (d = 0);
    null == c && (c = 0);
    null == b && (b = 1);
    null == a && (a = 1);
    qg.call(this);
    this.lastBounds.width = this._width = a;
    this.lastBounds.height = this._height = b;
    this._x = c;
    this._y = d;
    this.solid = e;
    this.groupID = f;
    a = this._check;
    b = qa.getClassName(jd);
    c = B(this, this.collideHitbox);
    null != t[b] ? a.setReserved(b, c) : (a.h[b] = c);
  };
  p["com.stencyl.models.collision.Hitbox"] = jd;
  jd.__name__ = ["com", "stencyl", "models", "collision", "Hitbox"];
  jd.__super__ = qg;
  jd.prototype = x(qg.prototype, {
    clone: function () {
      return new jd(
        this._width,
        this._height,
        this._x,
        this._y,
        this.solid,
        this.groupID
      );
    },
    collideMask: function (a) {
      return this.parent.colX + this._x + this._width > a.parent.colX &&
        this.parent.colY + this._y + this._height > a.parent.colY &&
        this.parent.colX + this._x < a.parent.colX + a.parent.cacheWidth &&
        this.parent.colY + this._y < a.parent.colY + a.parent.cacheHeight
        ? ((this.lastBounds.x = this.parent.colX + this.parent.cacheWidth),
          (this.lastBounds.y = this.parent.colY + this.parent.cacheHeight),
          (this.lastBounds.width = this.parent.cacheWidth),
          (this.lastBounds.height = this.parent.cacheHeight),
          (this.lastCheckedMask = this),
          !0)
        : !1;
    },
    collideHitbox: function (a) {
      return this.parent.colX + this._x + this._width > a.parent.colX + a._x &&
        this.parent.colY + this._y + this._height > a.parent.colY + a._y &&
        this.parent.colX + this._x < a.parent.colX + a._x + a._width &&
        this.parent.colY + this._y < a.parent.colY + a._y + a._height
        ? ((this.lastBounds.x = this.parent.colX + this._x),
          (this.lastBounds.y = this.parent.colY + this._y),
          (this.lastBounds.width = this._width),
          (this.lastBounds.height = this._height),
          (this.lastCheckedMask = this),
          !0)
        : !1;
    },
    get_x: function () {
      return this._x;
    },
    set_x: function (a) {
      if (this._x == a) return a;
      this._x = a;
      null != this.list
        ? this.list.update()
        : null != this.parent && this.update();
      return this._x;
    },
    get_y: function () {
      return this._y;
    },
    set_y: function (a) {
      if (this._y == a) return a;
      this._y = a;
      null != this.list
        ? this.list.update()
        : null != this.parent && this.update();
      return this._y;
    },
    get_width: function () {
      return this._width;
    },
    set_width: function (a) {
      if (this._width == a) return a;
      this._width = a;
      null != this.list
        ? this.list.update()
        : null != this.parent && this.update();
      return this._width;
    },
    get_height: function () {
      return this._height;
    },
    set_height: function (a) {
      if (this._height == a) return a;
      this._height = a;
      null != this.list
        ? this.list.update()
        : null != this.parent && this.update();
      return this._height;
    },
    update: function () {
      null != this.parent && null != this.list && this.list.update();
    },
    _width: null,
    _height: null,
    _x: null,
    _y: null,
    __class__: jd,
    __properties__: {
      set_height: "set_height",
      get_height: "get_height",
      set_width: "set_width",
      get_width: "get_width",
      set_y: "set_y",
      get_y: "get_y",
      set_x: "set_x",
      get_x: "get_x",
    },
  });
  var lm = function (a, b, c, d, e, f) {
    null == f && (f = 0);
    null == e && (e = 0);
    jd.call(this);
    if (0 == a || 0 == b || 0 == c || 0 == d)
      throw new v("Illegal Grid, sizes cannot be 0.");
    this._rect = J.rect;
    this._point = J.point;
    this._point2 = J.point2;
    this.columns = (a / c) | 0;
    this.rows = (b / d) | 0;
    this._tile = new W(0, 0, c, d);
    this._x = e;
    this._y = f;
    this._width = a;
    this._height = b;
    this.usePositions = !1;
    this.groupID = 1;
    a = this._check;
    b = qa.getClassName(qg);
    c = B(this, this.collideMask);
    null != t[b] ? a.setReserved(b, c) : (a.h[b] = c);
    a = this._check;
    b = qa.getClassName(jd);
    c = B(this, this.collideHitbox);
    null != t[b] ? a.setReserved(b, c) : (a.h[b] = c);
    a = this._check;
    b = qa.getClassName(ok);
    c = B(this, this.collidePixelmask);
    null != t[b] ? a.setReserved(b, c) : (a.h[b] = c);
    this.data = [];
    a = 0;
    for (b = this.rows; a < b; ) a++, this.data.push([]);
  };
  p["com.stencyl.models.collision.Grid"] = lm;
  lm.__name__ = ["com", "stencyl", "models", "collision", "Grid"];
  lm.__super__ = jd;
  lm.prototype = x(jd.prototype, {
    usePositions: null,
    setTile: function (a, b, c) {
      null == c && (c = !0);
      null == b && (b = 0);
      null == a && (a = 0);
      0 > a ||
        a > this.columns - 1 ||
        0 > b ||
        b > this.rows - 1 ||
        (this.usePositions &&
          ((a = (a / this._tile.width) | 0), (b = (b / this._tile.height) | 0)),
        (this.data[b][a] = c));
    },
    clearTile: function (a, b) {
      null == b && (b = 0);
      null == a && (a = 0);
      this.setTile(a, b, !1);
    },
    checkTile: function (a, b) {
      return 0 > a || a > this.columns - 1 || 0 > b || b > this.rows - 1
        ? !1
        : !0;
    },
    getTile: function (a, b) {
      null == b && (b = 0);
      null == a && (a = 0);
      if (0 > a || a > this.columns - 1 || 0 > b || b > this.rows - 1)
        return !1;
      this.usePositions &&
        ((a = (a / this._tile.width) | 0), (b = (b / this._tile.height) | 0));
      return this.data[b][a];
    },
    setRect: function (a, b, c, d, e) {
      null == e && (e = !0);
      null == d && (d = 1);
      null == c && (c = 1);
      null == b && (b = 0);
      null == a && (a = 0);
      this.usePositions &&
        ((a = (a / this._tile.width) | 0),
        (b = (b / this._tile.height) | 0),
        (c = (c / this._tile.width) | 0),
        (d = (d / this._tile.height) | 0));
      var f = b;
      for (b += d; f < b; ) {
        d = f++;
        for (var g = a, h = a + c; g < h; ) {
          var n = g++;
          this.setTile(n, d, e);
        }
      }
    },
    clearRect: function (a, b, c, d) {
      null == d && (d = 1);
      null == c && (c = 1);
      null == b && (b = 0);
      null == a && (a = 0);
      this.setRect(a, b, c, d, !1);
    },
    get_tileWidth: function () {
      return this._tile.width | 0;
    },
    get_tileHeight: function () {
      return this._tile.height | 0;
    },
    columns: null,
    rows: null,
    data: null,
    collideMask: function (a) {
      this._rect.x = a.parent.colX - this.parent.colX;
      this._rect.y = a.parent.colY - this.parent.colY;
      var b =
        (((this._rect.x + a.parent.cacheWidth - 1) / this._tile.width) | 0) + 1;
      var c =
        (((this._rect.y + a.parent.cacheHeight - 1) / this._tile.height) | 0) +
        1;
      a = (this._rect.x / this._tile.width) | 0;
      for (var d = (this._rect.y / this._tile.height) | 0; d < c; )
        for (var e = d++, f = a, g = b; f < g; ) {
          var h = f++;
          if (this.getTile(h, e)) return !0;
        }
      return !1;
    },
    collideHitbox: function (a) {
      this._rect.x = a.parent.colX + a._x;
      this._rect.y = a.parent.colY + a._y;
      var b = (((this._rect.x + a._width - 1) / this._tile.width) | 0) + 1;
      var c = (((this._rect.y + a._height - 1) / this._tile.height) | 0) + 1;
      var d = (this._rect.x / this._tile.width) | 0;
      for (var e = (this._rect.y / this._tile.height) | 0; e < c; )
        for (var f = e++, g = d, h = b; g < h; ) {
          var n = g++;
          if (this.getTile(n, f))
            return (
              (this.lastBounds.x = n * this._tile.width),
              (this.lastBounds.y = f * this._tile.height),
              (this.lastBounds.width = this._tile.width),
              (this.lastBounds.height = this._tile.height),
              (a.lastColID = this.groupID),
              !0
            );
        }
      return !1;
    },
    collidePixelmask: function (a) {
      return !1;
    },
    squareProjection: function (a, b) {
      a.x < a.y ? ((b.x = a.x), (b.y = a.y)) : ((b.y = a.x), (b.x = a.y));
    },
    _tile: null,
    _rect: null,
    _point: null,
    _point2: null,
    __class__: lm,
    __properties__: x(jd.prototype.__properties__, {
      get_tileHeight: "get_tileHeight",
      get_tileWidth: "get_tileWidth",
    }),
  });
  var cj = function (a, b) {
    this._count = 0;
    jd.call(this);
    this._masks = [];
    this._temp = [];
    this.solid = !1;
    this.parent = b;
    for (b = 0; b < a.length; ) {
      var c = a[b];
      ++b;
      this.add(c);
    }
  };
  p["com.stencyl.models.collision.Masklist"] = cj;
  cj.__name__ = ["com", "stencyl", "models", "collision", "Masklist"];
  cj.__super__ = jd;
  cj.prototype = x(jd.prototype, {
    collide: function (a) {
      for (var b = 0, c = this._masks; b < c.length; ) {
        var d = c[b];
        ++b;
        d.groupID = -1e3 == d.groupID ? d.parent.groupID : d.groupID;
        if (
          (u.__instanceof(a, cj) ||
            -2 == a.groupID ||
            cb.collisionMap[d.groupID][a.groupID]) &&
          d.collide(a)
        )
          return (
            (this.lastBounds.x = d.lastBounds.x),
            (this.lastBounds.y = d.lastBounds.y),
            (this.lastBounds.width = d.lastBounds.width),
            (this.lastBounds.height = d.lastBounds.height),
            (this.lastCheckedMask = d),
            (this.lastColID = a.groupID),
            !0
          );
      }
      return !1;
    },
    collideMasklist: function (a) {
      for (var b = 0, c = this._masks; b < c.length; ) {
        var d = c[b];
        ++b;
        d.groupID = -1e3 == d.groupID ? d.parent.groupID : d.groupID;
        for (var e = 0, f = a._masks; e < f.length; ) {
          var g = f[e];
          ++e;
          g.groupID = -1e3 == g.groupID ? g.parent.groupID : g.groupID;
          if (d.collide(g))
            return (
              (a.lastBounds.x = g.lastBounds.x),
              (a.lastBounds.y = g.lastBounds.y),
              (a.lastBounds.width = g.lastBounds.width),
              (a.lastBounds.height = g.lastBounds.height),
              (a.lastCheckedMask = g),
              (a.lastColID = d.groupID),
              !0
            );
        }
      }
      return !0;
    },
    add: function (a) {
      this._masks[this._count++] = a;
      a.list = this;
      a.parent = this.parent;
      this.solid = this.solid || a.solid;
      this.update();
      a.groupID = -1e3 == a.groupID ? this.parent.groupID : a.groupID;
      var b = cb.get().groupsCollidesWith.h[a.groupID];
      if (null != b)
        for (var c = 0; c < b.length; ) {
          var d = b[c];
          ++c;
          J.contains(this.collideTypes, d) || this.collideTypes.push(d);
        }
      return a;
    },
    remove: function (a) {
      if (0 > zh.indexOf(this._masks, a)) return a;
      for (var b = (this._temp.length = 0), c = this._masks; b < c.length; ) {
        var d = c[b];
        ++b;
        d == a
          ? ((a.list = null), (a.parent = null), this._count--, this.update())
          : (this._temp[this._temp.length] = d);
      }
      b = this._masks;
      this._masks = this._temp;
      this._temp = b;
      return a;
    },
    removeAt: function (a) {
      null == a && (a = 0);
      this._temp.length = 0;
      var b = this._masks.length;
      for (a %= b; 0 < b--; )
        b == a
          ? ((this._masks[a].list = null), this._count--, this.update())
          : (this._temp[this._temp.length] = this._masks[a]);
      a = this._masks;
      this._masks = this._temp;
      this._temp = a;
    },
    removeAll: function () {
      for (var a = 0, b = this._masks; a < b.length; ) {
        var c = b[a];
        ++a;
        c.list = null;
      }
      this._count = 0;
      this._masks.length = 0;
      this._temp.length = 0;
      this.update();
    },
    getMask: function (a) {
      null == a && (a = 0);
      return this._masks[a % this._masks.length];
    },
    assignTo: function (a) {
      for (var b = 0, c = this._masks; b < c.length; ) {
        var d = c[b];
        ++b;
        d.parent = a;
      }
      jd.prototype.assignTo.call(this, a);
    },
    update: function () {
      for (var a = 1e5, b = 1e5, c = 0, d = 0, e, f = this._count; 0 < f--; )
        (e = u.__cast(this._masks[f], jd)),
          null != e &&
            (e._x < b && (b = e._x),
            e._y < a && (a = e._y),
            e._x + e._width > c && (c = e._x + e._width),
            e._y + e._height > d && (d = e._y + e._height));
      this._x = b;
      this._y = a;
      this._width = c - b;
      this._height = d - a;
      jd.prototype.update.call(this);
    },
    count: null,
    get_count: function () {
      return this._count;
    },
    _masks: null,
    _temp: null,
    _count: null,
    __class__: cj,
    __properties__: x(jd.prototype.__properties__, { get_count: "get_count" }),
  });
  var ok = function (a, b, c) {
    null == c && (c = 0);
    null == b && (b = 0);
    jd.call(this);
    u.__instanceof(a, sa) && (this._data = a);
    if (null == this._data) throw new v("Invalid Pixelmask source image.");
    this.threshold = 1;
    this._rect = J.rect;
    this._point = J.point;
    this._point2 = J.point2;
    this._width = this.get_data().width;
    this._height = this.get_data().height;
    this._x = b;
    this._y = c;
    a = this._check;
    b = qa.getClassName(qg);
    c = B(this, this.collideMask);
    null != t[b] ? a.setReserved(b, c) : (a.h[b] = c);
    a = this._check;
    b = qa.getClassName(ok);
    c = B(this, this.collidePixelmask);
    null != t[b] ? a.setReserved(b, c) : (a.h[b] = c);
    a = this._check;
    b = qa.getClassName(jd);
    c = B(this, this.collideHitbox);
    null != t[b] ? a.setReserved(b, c) : (a.h[b] = c);
  };
  p["com.stencyl.models.collision.Pixelmask"] = ok;
  ok.__name__ = ["com", "stencyl", "models", "collision", "Pixelmask"];
  ok.__super__ = jd;
  ok.prototype = x(jd.prototype, {
    threshold: null,
    collideMask: function (a) {
      this._point.x = this.parent.colX + this._x;
      this._point.y = this.parent.colY + this._y;
      this._rect.x = a.parent.colX;
      this._rect.y = a.parent.colY;
      this._rect.width = a.parent.cacheWidth;
      this._rect.height = a.parent.cacheHeight;
      return !1;
    },
    collideHitbox: function (a) {
      this._point.x = this.parent.colX + this._x;
      this._point.y = this.parent.colY + this._y;
      this._rect.x = a.parent.colX + a._x;
      this._rect.y = a.parent.colY + a._y;
      this._rect.width = a._width;
      this._rect.height = a._height;
      return !1;
    },
    collidePixelmask: function (a) {
      this._point.x = this.parent.colX + this._x;
      this._point.y = this.parent.colY + this._y;
      this._point2.x = a.parent.colX + a._x;
      this._point2.y = a.parent.colY + a._y;
      return !1;
    },
    get_data: function () {
      return this._data;
    },
    set_data: function (a) {
      this._data = a;
      this._width = a.width;
      this._height = a.height;
      this.update();
      return this._data;
    },
    _data: null,
    _rect: null,
    _point: null,
    _point2: null,
    __class__: ok,
    __properties__: x(jd.prototype.__properties__, {
      set_data: "set_data",
      get_data: "get_data",
    }),
  });
  var $l = function (a, b, c, d, e, f, g, h, n, k, m) {
    this.elementID = a;
    this.x = b;
    this.y = c;
    this.scaleX = d;
    this.scaleY = e;
    this.layerID = f;
    this.angle = g;
    this.groupID = h;
    this.actorID = n;
    this.behaviorValues = k;
    this.isCustomized = m;
    this.actorType = u.__cast($b.get().resources.get(n), ng);
  };
  p["com.stencyl.models.scene.ActorInstance"] = $l;
  $l.__name__ = ["com", "stencyl", "models", "scene", "ActorInstance"];
  $l.prototype = {
    elementID: null,
    x: null,
    y: null,
    scaleX: null,
    scaleY: null,
    layerID: null,
    angle: null,
    groupID: null,
    actorID: null,
    isCustomized: null,
    behaviorValues: null,
    actorType: null,
    __class__: $l,
  };
  var Re = function () {};
  p["com.stencyl.models.scene.Autotile"] = Re;
  Re.__name__ = ["com", "stencyl", "models", "scene", "Autotile"];
  var vp = function (a, b, c, d, e) {
    this.animIndex = [];
    this.defaultAnimationIndex = 0;
    this.name = a;
    this.id = b;
    this.tilesAcross = c;
    this.tilesDown = d;
    a = 0;
    b = new qd();
    for (c = 0; 256 > c; )
      (d = c++),
        null != b.h.__keys__[e[d].__id__]
          ? (this.animIndex[d] = b.h[e[d].__id__])
          : ((this.animIndex[d] = a), b.set(e[d], a), ++a);
    this.defaultAnimationIndex = this.animIndex[255];
    this.autotileArrayLength = a;
    this.animCorners = [];
    for (a = 0; 256 > a; )
      (b = a++), (this.animCorners[this.animIndex[b]] = e[b]);
  };
  p["com.stencyl.models.scene.AutotileFormat"] = vp;
  vp.__name__ = ["com", "stencyl", "models", "scene", "AutotileFormat"];
  vp.prototype = {
    autotileArrayLength: null,
    defaultAnimationIndex: null,
    name: null,
    id: null,
    tilesAcross: null,
    tilesDown: null,
    animIndex: null,
    animCorners: null,
    __class__: vp,
  };
  var up = function (a, b, c, d) {
    this.tl = a;
    this.tr = b;
    this.bl = c;
    this.br = d;
  };
  p["com.stencyl.models.scene.Corners"] = up;
  up.__name__ = ["com", "stencyl", "models", "scene", "Corners"];
  up.prototype = {
    tl: null,
    tr: null,
    bl: null,
    br: null,
    toString: function () {
      return (
        "TL: " +
        P.string(this.tl) +
        ", TR: " +
        P.string(this.tr) +
        ", BL: " +
        P.string(this.bl) +
        ", BR: " +
        P.string(this.br)
      );
    },
    __class__: up,
  };
  var ap = function (a, b, c, d) {
    this.type = a;
    this.x = b;
    this.y = c;
    this.layer = d;
  };
  p["com.stencyl.models.scene.DeferredActor"] = ap;
  ap.__name__ = ["com", "stencyl", "models", "scene", "DeferredActor"];
  ap.prototype = { type: null, x: null, y: null, layer: null, __class__: ap };
  var Og = function (a, b, c, d, e, f, g) {
    gb.call(this);
    this.ID = a;
    this.layerName = b;
    this.order = c;
    this.scrollFactorX = d;
    this.scrollFactorY = e;
    this.set_alpha(f);
    this.set_blendMode(g);
  };
  p["com.stencyl.models.scene.layers.RegularLayer"] = Og;
  Og.__name__ = "com stencyl models scene layers RegularLayer".split(" ");
  Og.__super__ = gb;
  Og.prototype = x(gb.prototype, {
    ID: null,
    layerName: null,
    order: null,
    scrollFactorX: null,
    scrollFactorY: null,
    opacity: null,
    alphaTween: null,
    updatePosition: function (a, b, c) {},
    __class__: Og,
  });
  var zc = function (a, b, c, d, e, f, g, h) {
    this.cameraOldX = this.cameraOldY = -1;
    this.cameraMoved = !0;
    Og.call(this, a, b, c, d, e, f, g);
    this.tiles = h;
    null != this.tiles && this.tiles.set_blendMode(g);
    this.actorContainer = new gb();
    this.overlay = new gb();
    null != this.tiles && this.addChild(this.tiles);
    this.addChild(this.actorContainer);
    this.addChild(this.overlay);
    this.attachedImages = [];
  };
  p["com.stencyl.models.scene.Layer"] = zc;
  zc.__name__ = ["com", "stencyl", "models", "scene", "Layer"];
  zc.__super__ = Og;
  zc.prototype = x(Og.prototype, {
    tiles: null,
    actorContainer: null,
    overlay: null,
    attachedImages: null,
    cameraMoved: null,
    cameraOldX: null,
    cameraOldY: null,
    updatePosition: function (a, b, c) {
      var d = (a * this.scrollFactorX) | 0;
      c = (b * this.scrollFactorY) | 0;
      a = U.pixelsnap ? Math.round(a) : a | 0;
      b = U.pixelsnap ? Math.round(b) : b | 0;
      this.overlay.set_x(a);
      this.overlay.set_y(b);
      this.tiles.setPosition(d, c);
      this.set_x(-((a * this.scrollFactorX) | 0));
      this.set_y(-((b * this.scrollFactorY) | 0));
      a = (d / (r.engine.scene.tileWidth * r.SCALE)) | 0;
      b = (c / (r.engine.scene.tileHeight * r.SCALE)) | 0;
      this.cameraMoved =
        this.cameraMoved || this.cameraOldX != a || this.cameraOldY != b;
      this.cameraOldX = a;
      this.cameraOldY = b;
    },
    clear: function () {
      for (var a = 0, b = this.attachedImages; a < b.length; ) {
        var c = b[a];
        ++a;
        this.removeChild(c);
      }
      this.attachedImages = [];
      J.removeAllChildren(this.actorContainer);
      this.overlay.get_graphics().clear();
      null != this.tiles && this.tiles.clear();
    },
    __class__: zc,
  });
  var ej = function (a, b, c, d, e, f, g) {
    null == f && (f = 0);
    this.x = d;
    this.y = e;
    this.shapes = a;
    this.shape = this.shapes[0];
    this.ID = b;
    this.name = c;
    this.shapeID = f;
    this.simpleBounds = g;
  };
  p["com.stencyl.models.scene.RegionDef"] = ej;
  ej.__name__ = ["com", "stencyl", "models", "scene", "RegionDef"];
  ej.prototype = {
    x: null,
    y: null,
    shape: null,
    shapes: null,
    ID: null,
    name: null,
    shapeID: null,
    simpleBounds: null,
    __class__: ej,
  };
  var Zf = function (a, b, c, d, e, f, g) {
    null == g && (g = !0);
    null == f && (f = 0);
    null == e && (e = 0);
    null == d && (d = 0);
    gb.call(this);
    this.curStep = 0;
    this.running = !0;
    this.repeats = g;
    this.image1 = new ic(a);
    this.addChild(this.image1);
    this.cacheWidth = this.image1.get_width();
    this.cacheHeight = this.image1.get_height();
    g &&
      ((this.image2 = new ic(a)),
      this.image2.set_x(this.image1.get_x() - this.cacheWidth),
      this.addChild(this.image2),
      (this.image3 = new ic(a)),
      this.image3.set_x(this.image1.get_x() + this.cacheWidth),
      this.addChild(this.image3),
      (this.image4 = new ic(a)),
      this.image4.set_x(this.image1.get_x() - this.cacheWidth),
      this.image4.set_y(this.image1.get_y() - this.cacheHeight),
      this.addChild(this.image4),
      (this.image5 = new ic(a)),
      this.image5.set_y(this.image1.get_y() - this.cacheHeight),
      this.addChild(this.image5),
      (this.image6 = new ic(a)),
      this.image6.set_x(this.image1.get_x() + this.cacheWidth),
      this.image6.set_y(this.image1.get_y() - this.cacheHeight),
      this.addChild(this.image6),
      (this.image7 = new ic(a)),
      this.image7.set_x(this.image1.get_x() - this.cacheWidth),
      this.image7.set_y(this.image1.get_y() + this.cacheHeight),
      this.addChild(this.image7),
      (this.image8 = new ic(a)),
      this.image8.set_y(this.image1.get_y() + this.cacheHeight),
      this.addChild(this.image8),
      (this.image9 = new ic(a)),
      this.image9.set_x(this.image1.get_x() + this.cacheWidth),
      this.image9.set_y(this.image1.get_y() + this.cacheHeight),
      this.addChild(this.image9));
    this.yPos = this.xPos = this.yP = this.xP = 0;
    this.xVelocity = b;
    this.yVelocity = c;
    this.parallaxX = d;
    this.parallaxY = e;
    this.scrolling = 0 != b || 0 != c;
    this.parallax = 0 != d || 0 != e;
    this.backgroundID = f;
  };
  p["com.stencyl.models.scene.ScrollingBitmap"] = Zf;
  Zf.__name__ = ["com", "stencyl", "models", "scene", "ScrollingBitmap"];
  Zf.__super__ = gb;
  Zf.prototype = x(gb.prototype, {
    image1: null,
    image2: null,
    image3: null,
    image4: null,
    image5: null,
    image6: null,
    image7: null,
    image8: null,
    image9: null,
    speed: null,
    curStep: null,
    running: null,
    parallax: null,
    scrolling: null,
    cacheWidth: null,
    cacheHeight: null,
    xP: null,
    yP: null,
    xPos: null,
    yPos: null,
    xVelocity: null,
    yVelocity: null,
    parallaxX: null,
    parallaxY: null,
    backgroundID: null,
    repeats: null,
    update: function (a, b, c) {
      c = !1;
      this.parallax
        ? ((this.xPos = -((a * this.parallaxX) | 0)),
          (this.yPos = -((b * this.parallaxY) | 0)),
          (c = !0))
        : this.running
        ? (this.yPos = this.xPos = 0)
        : ((this.xPos = this.xP), (this.yPos = this.yP));
      if (this.scrolling && this.running) {
        a = this.cacheWidth;
        b = this.cacheHeight;
        this.xP += (this.xVelocity / 10) * r.SCALE;
        this.yP += (this.yVelocity / 10) * r.SCALE;
        if (this.repeats) {
          if (this.xP < -a || this.xP > a) this.xP = 0;
          if (this.yP < -b || this.yP > b) this.yP = 0;
        }
        this.xPos += Math.floor(this.xP);
        this.yPos += Math.floor(this.yP);
        this.curStep += 1;
        1 <= this.curStep &&
          ((c = !0), (this.curStep -= Math.floor(this.curStep)));
      }
      c && this.resetPositions();
    },
    resetPositions: function () {
      this.cacheWidth = this.image1.get_width();
      this.cacheHeight = this.image1.get_height();
      this.repeats &&
        (this.xPos < -this.cacheWidth && (this.xPos %= this.cacheWidth),
        this.yPos < -this.cacheHeight && (this.yPos %= this.cacheHeight));
      this.image1.set_x(this.xPos);
      this.image1.set_y(this.yPos);
      this.repeats &&
        (this.image2.set_x(this.xPos - this.cacheWidth),
        this.image2.set_y(this.yPos),
        this.image3.set_x(this.xPos + this.cacheWidth),
        this.image3.set_y(this.yPos),
        this.image4.set_x(this.xPos - this.cacheWidth),
        this.image4.set_y(this.yPos - this.cacheHeight),
        this.image5.set_x(this.xPos),
        this.image5.set_y(this.yPos - this.cacheHeight),
        this.image6.set_x(this.xPos + this.cacheWidth),
        this.image6.set_y(this.yPos - this.cacheHeight),
        this.image7.set_x(this.xPos - this.cacheWidth),
        this.image7.set_y(this.yPos + this.cacheHeight),
        this.image8.set_x(this.xPos),
        this.image8.set_y(this.yPos + this.cacheHeight),
        this.image9.set_x(this.xPos + this.cacheWidth),
        this.image9.set_y(this.yPos + this.cacheHeight));
    },
    start: function () {
      this.running = !0;
    },
    stop: function () {
      this.running = !1;
    },
    __class__: Zf,
  });
  var wp = function (a, b, c, d, e, f, g) {
    null == g && (g = 0);
    null == f && (f = 0);
    this.x = d;
    this.y = e;
    this.shapes = a;
    this.shape = this.shapes[0];
    this.ID = b;
    this.name = c;
    this.groupID = f;
    0 == this.fillColor && (this.fillColor = 0);
    this.fillColor = g;
  };
  p["com.stencyl.models.scene.TerrainDef"] = wp;
  wp.__name__ = ["com", "stencyl", "models", "scene", "TerrainDef"];
  wp.prototype = {
    x: null,
    y: null,
    shape: null,
    shapes: null,
    ID: null,
    name: null,
    groupID: null,
    fillColor: null,
    __class__: wp,
  };
  var Fc = function (a, b, c, d, e, f, g, h) {
    this.tileID = a;
    this.collisionID = b;
    this.metadata = c;
    this.frameIndex = d;
    this.durations = e;
    this.parent = h;
    var n = cb.get().atlases.h[h.atlasID];
    if (null != f) {
      this.autotileFormat = f;
      this.autotileMergeSet = g;
      g = [];
      var k = 0;
      for (f = f.autotileArrayLength; k < f; )
        k++, g.push(new Fc(a, b, c, d, e, null, null, h));
      this.autotiles = g;
    }
    null != n && n.active && this.loadGraphics();
    this.currTime = this.currFrame = 0;
    this.updateSource = !1;
  };
  p["com.stencyl.models.scene.Tile"] = Fc;
  Fc.__name__ = ["com", "stencyl", "models", "scene", "Tile"];
  Fc.prototype = {
    tileID: null,
    collisionID: null,
    metadata: null,
    frameIndex: null,
    parent: null,
    autotileFormat: null,
    autotiles: null,
    autotileMergeSet: null,
    pixels: null,
    durations: null,
    frames: null,
    currFrame: null,
    currTime: null,
    updateSource: null,
    data: null,
    update: function (a) {
      1 == this.durations.length ||
        r.paused ||
        ((this.currTime += Math.floor(a)),
        this.currTime > (this.durations[this.currFrame] | 0) &&
          ((this.currTime -= this.durations[this.currFrame] | 0),
          this.currFrame + 1 < this.durations.length
            ? this.currFrame++
            : (this.currFrame = 0),
          (this.updateSource = !0)));
    },
    getSource: function (a, b) {
      return new W(this.currFrame * a * r.SCALE, 0, a * r.SCALE, b * r.SCALE);
    },
    loadGraphics: function () {
      var a = null;
      if (1 < this.durations.length || null != this.autotileFormat)
        a = oa.getBitmapData(
          "assets/graphics/" +
            r.IMG_BASE +
            "/tileset-" +
            this.parent.ID +
            "-" +
            this.tileID +
            ".png",
          !1
        );
      if (null != this.autotileFormat) {
        var b = 0,
          c = 0;
        for (
          a = this.createAutotileAnimations(a, this.autotileFormat);
          c < a.length;

        ) {
          var d = a[c];
          ++c;
          this.autotiles[b++].loadAnimationPixels(d);
        }
      } else this.loadAnimationPixels(a);
    },
    unloadGraphics: function () {
      this.data = this.pixels = null;
      if (null != this.autotiles)
        for (var a = 0, b = this.autotiles; a < b.length; ) {
          var c = b[a];
          ++a;
          c.pixels = null;
          c.data = null;
        }
    },
    loadAnimationPixels: function (a) {
      if (null != a) {
        this.pixels = a;
        this.data = new ui(a);
        a = 0;
        for (var b = this.durations.length; a < b; )
          (this.currFrame = a++),
            this.data.addRect(
              this.getSource(this.parent.tileWidth, this.parent.tileHeight)
            );
      }
    },
    createAutotileAnimations: function (a, b) {
      var c = [],
        d = this.durations.length,
        e = (a.width / d / b.tilesAcross) | 0,
        f = (a.height / b.tilesDown) | 0,
        g = (e / 2) | 0,
        h = (f / 2) | 0;
      Fc.dummyRect.width = g;
      Fc.dummyRect.height = h;
      for (var n = 0, k = b.animCorners; n < k.length; ) {
        var m = k[n];
        ++n;
        for (
          var l = new sa(e * d, f),
            p = (function (a, b) {
              return function (c, d) {
                b[0](a[0], c, d);
              };
            })([a], [B(l, l.copyPixels)]),
            r = 0,
            q = d;
          r < q;

        ) {
          var t = r++,
            u = e * b.tilesAcross * t;
          t *= e;
          var na = m.tl;
          Fc.dummyRect.x = u + na.x * Fc.dummyRect.width;
          Fc.dummyRect.y = na.y * Fc.dummyRect.height;
          p(Fc.dummyRect, new Y(t, 0));
          na = m.tr;
          Fc.dummyRect.x = u + na.x * Fc.dummyRect.width;
          Fc.dummyRect.y = na.y * Fc.dummyRect.height;
          p(Fc.dummyRect, new Y(t + g, 0));
          na = m.br;
          Fc.dummyRect.x = u + na.x * Fc.dummyRect.width;
          Fc.dummyRect.y = na.y * Fc.dummyRect.height;
          p(Fc.dummyRect, new Y(t + g, h));
          na = m.bl;
          Fc.dummyRect.x = u + na.x * Fc.dummyRect.width;
          Fc.dummyRect.y = na.y * Fc.dummyRect.height;
          p(Fc.dummyRect, new Y(t, h));
        }
        c.push(l);
      }
      return c;
    },
    sourceRect: function (a, b) {
      Fc.dummyRect.x = b + a.x * Fc.dummyRect.width;
      Fc.dummyRect.y = a.y * Fc.dummyRect.height;
      return Fc.dummyRect;
    },
    __class__: Fc,
  };
  var le = function (a, b, c, d) {
    gb.call(this);
    this.layerID = a;
    this.scene = b;
    this.numRows = d;
    this.numCols = c;
    this.clear();
    this.tilemaps = new qd();
  };
  p["com.stencyl.models.scene.TileLayer"] = le;
  le.__name__ = ["com", "stencyl", "models", "scene", "TileLayer"];
  le.__interfaces__ = [pi];
  le.resetStatics = function () {
    le.cacheSource = new Ca();
  };
  le.__super__ = gb;
  le.prototype = x(gb.prototype, {
    layerID: null,
    rows: null,
    autotileData: null,
    grid: null,
    scene: null,
    numRows: null,
    numCols: null,
    tilemaps: null,
    noTiles: null,
    clear: function () {
      if (null != this.tilemaps)
        for (var a = this.tilemaps.iterator(); a.hasNext(); )
          a.next().removeTiles();
      this.noTiles = !0;
      this.rows = [];
      this.autotileData = [];
      a = 0;
      for (var b = this.numRows; a < b; ) {
        var c = a++;
        this.rows[c] = [];
        this.autotileData[c] = [];
        for (var d = 0, e = this.numCols; d < e; ) {
          var f = d++;
          this.rows[c][f] = null;
          this.autotileData[c][f] = 0;
        }
      }
    },
    setPosition: function (a, b) {},
    mountGrid: function () {
      if (null != this.grid) {
        var a = new $a(
          r.engine,
          1e8,
          1,
          0,
          0,
          -1,
          this.grid.get_width(),
          this.grid.get_height(),
          null,
          new la(),
          null,
          null,
          !1,
          !0,
          !1,
          !1,
          this.grid,
          r.NO_PHYSICS
        );
        a.set_name("Terrain");
        a.typeID = -1;
        a.set_visible(!1);
        a.ignoreGravity = !0;
        r.engine.getGroup(1).addChild(a);
      }
    },
    setTileAt: function (a, b, c, d) {
      null == d && (d = !0);
      if (!(0 > b || 0 > a || b >= this.numCols || a >= this.numRows)) {
        this.noTiles && null != c && (this.noTiles = !1);
        var e = this.rows[a][b];
        d &&
          (d =
            null == e || null == e.autotiles
              ? null != c
                ? null != c.autotiles
                : !1
              : !0);
        this.rows[a][b] = c;
        this.autotileData[a][b] = 0;
        d && this.updateAutotilesNear(a, b);
      }
    },
    getTileAt: function (a, b) {
      return 0 > b || 0 > a || b >= this.numCols || a >= this.numRows
        ? null
        : this.rows[a][b];
    },
    updateAutotilesNear: function (a, b) {
      var c = a - 1;
      for (a += 2; c < a; )
        for (var d = c++, e = b - 1, f = b + 2; e < f; ) {
          var g = e++;
          0 > g ||
            0 > d ||
            g >= this.numCols ||
            d >= this.numRows ||
            this.updateAutotile(d, g);
        }
    },
    updateAutotile: function (a, b) {
      var c = this.rows[a][b];
      if (null != c && null != c.autotiles) {
        for (var d = 0, e = le.autotileFlagPointMap.keys(); e.hasNext(); ) {
          var f = e.next(),
            g = le.autotileFlagPointMap.h[f],
            h = (b + g.x) | 0;
          g = (a + g.y) | 0;
          0 > h ||
            0 > g ||
            h >= this.numCols ||
            g >= this.numRows ||
            this.rows[g][h] == c ||
            (d |= f);
        }
        this.autotileData[a][b] = c.autotileFormat.animIndex[d];
      }
    },
    draw: function (a, b) {
      if (!this.noTiles) {
        for (var c = this.tilemaps.iterator(); c.hasNext(); )
          c.next().removeTiles();
        a = Math.floor(a);
        b = Math.floor(b);
        var d = this.numRows;
        c = this.scene.tileWidth;
        var e = this.scene.tileHeight;
        a = (a / r.SCALE / c) | 0;
        var f = (b / r.SCALE / e) | 0;
        b = 2 + a + ((r.screenWidth / c) | 0);
        var g = 2 + f + ((r.screenHeight / e) | 0);
        b = Math.min(b, this.numCols) | 0;
        g = Math.min(g, d) | 0;
        for (d = f; d < g; ) {
          for (f = a; f < b; ) {
            var h = this.getTileAt(d, f);
            if (null != h) {
              if (
                null == le.cacheSource.h[1e6 * h.parent.ID + h.tileID] ||
                h.updateSource
              ) {
                h.updateSource = !1;
                if (null == h.pixels && null == h.autotiles)
                  var n = le.cacheSource,
                    k = 1e6 * h.parent.ID + h.tileID,
                    m = h.parent.getImageSourceForTile(h.tileID, c, e);
                else
                  (n = le.cacheSource),
                    (k = 1e6 * h.parent.ID + h.tileID),
                    (m = h.getSource(c, e));
                n.h[k] = m;
              }
              null != le.cacheSource.h[1e6 * h.parent.ID + h.tileID] &&
                (null != h.autotiles &&
                  (h = h.autotiles[this.autotileData[d][f]]),
                null == h.data
                  ? ((n = h.parent.sheetMap.h[h.tileID]),
                    this.getTilemap(h.parent.flTileset).addTile(
                      new Sg(n, f * c * r.SCALE, d * e * r.SCALE)
                    ))
                  : ((n = h.currFrame),
                    this.getTilemap(h.data).addTile(
                      new Sg(n, f * c * r.SCALE, d * e * r.SCALE)
                    )));
            }
            ++f;
          }
          ++d;
        }
      }
    },
    updateScale: function () {
      for (var a = this.tilemaps.iterator(); a.hasNext(); ) {
        var b = a.next();
        b.set_width(r.sceneWidth * r.SCALE);
        b.set_height(r.sceneHeight * r.SCALE);
      }
    },
    getTilemap: function (a) {
      if (null == this.tilemaps.h.__keys__[a.__id__]) {
        var b = new pg(
          (r.sceneWidth * r.SCALE) | 0,
          (r.sceneHeight * r.SCALE) | 0,
          a,
          U.antialias
        );
        this.tilemaps.set(a, b);
        this.addChild(b);
      }
      return this.tilemaps.h[a.__id__];
    },
    __class__: le,
  });
  var Gf = function (a, b, c, d, e, f, g, h, n) {
    kd.call(this, a, c, b);
    this.framesAcross = d;
    this.framesDown = e;
    this.tileWidth = f;
    this.tileHeight = g;
    this.readableImages = h;
    this.tiles = n;
  };
  p["com.stencyl.models.scene.Tileset"] = Gf;
  Gf.__name__ = ["com", "stencyl", "models", "scene", "Tileset"];
  Gf.__super__ = kd;
  Gf.prototype = x(kd.prototype, {
    framesAcross: null,
    framesDown: null,
    tileWidth: null,
    tileHeight: null,
    tiles: null,
    readableImages: null,
    pixels: null,
    graphicsLoaded: null,
    flTileset: null,
    sheetMap: null,
    setupFLTileset: function () {
      this.sheetMap = new Ca();
      if (null != this.pixels) {
        this.flTileset = new ui(this.convertPixels(this.pixels));
        for (var a = 0, b = this.tiles; a < b.length; ) {
          var c = b[a];
          ++a;
          if (null != c) {
            var d = this.getImageSourceForTile(
                c.tileID,
                this.tileWidth | 0,
                this.tileHeight | 0
              ),
              e = this.sheetMap;
            c = c.tileID;
            d = this.flTileset.addRect(d);
            e.h[c] = d;
          }
        }
      }
    },
    getImageSourceForTile: function (a, b, c) {
      var d = this.tiles[a];
      null == d
        ? ((Gf.temp.x = 0), (Gf.temp.y = 0))
        : ((a = Math.floor(d.frameIndex / this.framesAcross)),
          (d = Math.floor(d.frameIndex % this.framesAcross)),
          (Gf.temp.x = d * b * r.SCALE + 2 * d + 1),
          (Gf.temp.y = a * c * r.SCALE + 2 * a + 1));
      Gf.temp.width = b * r.SCALE;
      Gf.temp.height = c * r.SCALE;
      return Gf.temp.clone();
    },
    loadGraphics: function () {
      if (!this.graphicsLoaded) {
        this.pixels = oa.getBitmapData(
          "assets/graphics/" + r.IMG_BASE + "/tileset-" + this.ID + ".png",
          !1
        );
        for (var a = 0, b = this.tiles; a < b.length; ) {
          var c = b[a];
          ++a;
          null != c && c.loadGraphics();
        }
        this.setupFLTileset();
        U.disposeImages && !this.readableImages && this.pixels.dispose();
        this.graphicsLoaded = !0;
      }
    },
    unloadGraphics: function () {
      if (this.graphicsLoaded) {
        this.pixels.readable && this.pixels.dispose();
        this.flTileset = this.pixels = null;
        for (var a = 0, b = this.tiles; a < b.length; ) {
          var c = b[a];
          ++a;
          null != c && c.unloadGraphics();
        }
        this.graphicsLoaded = !1;
      }
    },
    reloadGraphics: function (a) {
      if (-1 == a) {
        this.unloadGraphics();
        this.loadGraphics();
        a = 0;
        for (var b = this.tiles; a < b.length; ) {
          var c = b[a];
          ++a;
          null != c && (c.updateSource = !0);
        }
      } else
        (a = this.tiles[a]),
          null != a && (a.unloadGraphics(), a.loadGraphics());
      r.engine.tileUpdated = !0;
    },
    convertPixels: function (a) {
      var b = (this.tileWidth * r.SCALE) | 0,
        c = (this.tileHeight * r.SCALE) | 0,
        d = (a.width / b) | 0,
        e = (a.height / c) | 0,
        f = new sa((a.width + 2 * d) | 0, (a.height + 2 * e) | 0, !0, 0),
        g,
        h;
      for (g = 0; g < e; ) {
        for (h = 0; h < d; ) {
          var n = (h * b + 2 * h + 1) | 0;
          var k = (g * c + 2 * g + 1) | 0;
          var m = new W(h * b, g * c, b, c);
          n = new Y(n, k);
          f.copyPixels(a, m, n);
          ++h;
        }
        ++g;
      }
      for (g = 0; g < e; ) {
        for (h = 0; h < d; ) {
          n = (h * b + 2 * h + 1) | 0;
          k = (g * c + 2 * g + 1) | 0;
          for (a = 0; a < b; )
            (m = f.getPixel32(n + a, k)),
              f.setPixel32(n + a, k - 1, m),
              (m = f.getPixel32(n + a, k + c - 1)),
              f.setPixel32(n + a, k + c, m),
              ++a;
          for (a = 0; a < c; )
            (m = f.getPixel32(n, k + a)),
              f.setPixel32(n - 1, k + a, m),
              (m = f.getPixel32(n + b - 1, k + a)),
              f.setPixel32(n + b, k + a, m),
              ++a;
          ++h;
        }
        ++g;
      }
      return f;
    },
    __class__: Gf,
  });
  var xp = function (a, b, c, d, e, f) {
    this.x = a;
    this.y = b;
    this.width = c;
    this.height = d;
    this.shape = e;
    this.shape2 = f;
  };
  p["com.stencyl.models.scene.Wireframe"] = xp;
  xp.__name__ = ["com", "stencyl", "models", "scene", "Wireframe"];
  xp.prototype = {
    x: null,
    y: null,
    shape: null,
    shape2: null,
    width: null,
    height: null,
    __class__: xp,
  };
  var Xd = function (a, b, c, d, e, f, g, h, n) {
    Og.call(this, a, b, c, d, e, f, g);
    this.resourceID = h;
    this.customScroll = n;
    this.model = u.__cast($b.get().resources.get(h), Tg);
  };
  p["com.stencyl.models.scene.layers.BackgroundLayer"] = Xd;
  Xd.__name__ = "com stencyl models scene layers BackgroundLayer".split(" ");
  Xd.__super__ = Og;
  Xd.prototype = x(Og.prototype, {
    model: null,
    bitmap: null,
    resourceID: null,
    customScroll: null,
    isAnimated: null,
    frameCount: null,
    currIndex: null,
    currTime: null,
    cacheIndex: null,
    cacheWidth: null,
    cacheHeight: null,
    bgChild: null,
    load: function () {
      if (null != this.model && null != this.model.img) {
        this.bitmap = new ic(this.model.img, 1, !0);
        this.bitmap.smoothing = U.antialias;
        this.currTime = this.currIndex = 0;
        this.isAnimated = 1 < this.model.frames.length;
        this.frameCount = this.model.frames.length;
        this.model.repeats &&
          !this.model.repeated &&
          this.model.drawRepeated(
            this,
            (r.screenWidth * r.SCALE) | 0,
            (r.screenHeight * r.SCALE) | 0
          );
        var a = 0,
          b = 0;
        if (this.customScroll)
          (a = this.scrollFactorX), (b = this.scrollFactorY);
        else if (this.model.repeats)
          (a = this.model.parallaxX), (b = this.model.parallaxY);
        else {
          var c = this.model.img.width,
            d = this.model.img.height,
            e = (r.screenWidth * r.SCALE) | 0,
            f = (r.screenHeight * r.SCALE) | 0,
            g = (r.sceneWidth * r.SCALE) | 0,
            h = (r.sceneHeight * r.SCALE) | 0;
          c > e && c < g && (a = 1 - (g - c) / (g - e));
          d > f && d < h && (b = 1 - (h - d) / (h - f));
        }
        u.__instanceof(this.model, Rh)
          ? ((c = u.__cast(this.model, Rh)),
            (a = new Zf(
              this.model.img,
              c.xVelocity,
              c.yVelocity,
              a,
              b,
              this.resourceID,
              this.model.repeats
            )),
            this.addChild((this.bgChild = a)))
          : this.model.repeats
          ? ((a = new Zf(this.model.img, 0, 0, a, b, this.resourceID)),
            this.addChild((this.bgChild = a)))
          : ((this.cacheWidth = this.model.img.width),
            (this.cacheHeight = this.model.img.height),
            (this.scrollFactorX = a),
            (this.scrollFactorY = b),
            this.addChild((this.bgChild = this.bitmap)));
      }
    },
    loadFromImg: function (a, b) {
      this.model = new Rh(-1, -1, "", [100], 0, 0, b, 0, 0);
      this.model.img = a;
      this.model.frames = [a];
      this.load();
    },
    setScrollFactor: function (a, b) {
      this.scrollFactorX = a;
      this.scrollFactorY = b;
      if (u.__instanceof(this.bgChild, Zf)) {
        var c = u.__cast(this.bgChild, Zf);
        c.parallaxX = a;
        c.parallaxY = b;
        c.parallax = 0 != a || 0 != b;
      }
    },
    setScrollSpeed: function (a, b) {
      if (u.__instanceof(this.bgChild, Zf)) {
        var c = u.__cast(this.bgChild, Zf);
        c.xVelocity = a;
        c.yVelocity = b;
        c.scrolling = 0 != a || 0 != b;
      }
    },
    reload: function (a) {
      null != this.bgChild &&
        (this.removeChild(this.bgChild), (this.bgChild = null));
      this.resourceID = a;
      this.model = u.__cast($b.get().resources.get(this.resourceID), Tg);
      this.load();
    },
    setImage: function (a) {
      this.bitmap.set_bitmapData(a);
      this.currTime = this.currIndex = 0;
      this.isAnimated = 1 < this.model.frames.length;
      this.frameCount = this.model.frames.length;
    },
    updateAnimation: function (a) {
      this.currTime += a;
      null != this.model &&
        this.currTime >= this.model.durations[this.currIndex] &&
        ((this.currTime = 0),
        this.currIndex++,
        this.currIndex >= this.frameCount && (this.currIndex = 0),
        u.__instanceof(this.bgChild, Zf)
          ? ((this.cacheIndex = this.currIndex),
            this.model.repeats &&
              this.model.drawRepeated(
                this,
                (r.screenWidth * r.SCALE) | 0,
                (r.screenHeight * r.SCALE) | 0
              ),
            (this.currIndex = this.cacheIndex),
            (a = this.bgChild.image1),
            a.set_bitmapData(this.model.frames[this.currIndex]),
            this.model.repeats &&
              ((a = this.bgChild.image2),
              a.set_bitmapData(this.model.frames[this.currIndex]),
              (a = this.bgChild.image3),
              a.set_bitmapData(this.model.frames[this.currIndex]),
              (a = this.bgChild.image4),
              a.set_bitmapData(this.model.frames[this.currIndex]),
              (a = this.bgChild.image5),
              a.set_bitmapData(this.model.frames[this.currIndex]),
              (a = this.bgChild.image6),
              a.set_bitmapData(this.model.frames[this.currIndex]),
              (a = this.bgChild.image7),
              a.set_bitmapData(this.model.frames[this.currIndex]),
              (a = this.bgChild.image8),
              a.set_bitmapData(this.model.frames[this.currIndex]),
              (a = this.bgChild.image9),
              a.set_bitmapData(this.model.frames[this.currIndex])))
          : this.bitmap.set_bitmapData(this.model.frames[this.currIndex]));
    },
    updatePosition: function (a, b, c) {
      u.__instanceof(this.bgChild, Zf)
        ? u.__cast(this.bgChild, Zf).update(a, b, c)
        : (this.set_x(-((a * this.scrollFactorX) | 0)),
          this.set_y(-((b * this.scrollFactorY) | 0)));
      this.isAnimated && this.updateAnimation(c);
    },
    getBitmap: function () {
      return this.bgChild;
    },
    __class__: Xd,
  });
  var wc = function (a, b, c, d) {
    null == d && (d = 0);
    null == c && (c = 0);
    null == b && (b = 0);
    null == a && (a = 0);
    this.a = a;
    this.r = b;
    this.g = c;
    this.b = d;
  };
  p["com.stencyl.utils.ARGB"] = wc;
  wc.__name__ = ["com", "stencyl", "utils", "ARGB"];
  wc.setARGBi = function (a, b, c, d) {
    return ((a & 255) << 24) | ((b & 255) << 16) | ((c & 255) << 8) | (d & 255);
  };
  wc.setARGBf = function (a, b, c, d) {
    a = 255 * (0 > a ? 0 : 1 < a ? 1 : a);
    b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
    c = 255 * (0 > c ? 0 : 1 < c ? 1 : c);
    d = 255 * (0 > d ? 0 : 1 < d ? 1 : d);
    return (
      ((((0 < a ? a + 0.5 : 0 > a ? a - 0.5 : 0) | 0) & 255) << 24) |
      ((((0 < b ? b + 0.5 : 0 > b ? b - 0.5 : 0) | 0) & 255) << 16) |
      ((((0 < c ? c + 0.5 : 0 > c ? c - 0.5 : 0) | 0) & 255) << 8) |
      (((0 < d ? d + 0.5 : 0 > d ? d - 0.5 : 0) | 0) & 255)
    );
  };
  wc.toARGB = function (a) {
    return new wc(
      0.00392156862745098 * (a >>> 24),
      0.00392156862745098 * ((a >>> 16) & 255),
      0.00392156862745098 * ((a >>> 8) & 255),
      0.00392156862745098 * (a & 255)
    );
  };
  wc.getRGB = function (a) {
    return a & 16777215;
  };
  wc.setRGB = function (a, b, c, d) {
    return (b << 16) | (c << 8) | d | (a & -16777216);
  };
  wc.getA = function (a) {
    return a >>> 24;
  };
  wc.getAf = function (a) {
    return 0.00392156862745098 * (a >>> 24);
  };
  wc.getR = function (a) {
    return (a >>> 16) & 255;
  };
  wc.getRf = function (a) {
    return 0.00392156862745098 * ((a >>> 16) & 255);
  };
  wc.getG = function (a) {
    return (a >>> 8) & 255;
  };
  wc.getGf = function (a) {
    return 0.00392156862745098 * ((a >>> 8) & 255);
  };
  wc.getB = function (a) {
    return a & 255;
  };
  wc.getBf = function (a) {
    return 0.00392156862745098 * (a & 255);
  };
  wc.setA = function (a, b) {
    return (b << 24) | (a & 16777215);
  };
  wc.setAf = function (a, b) {
    b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
    return (
      (((0 < b ? b + 0.5 : 0 > b ? b - 0.5 : 0) | 0) << 24) | (a & 16777215)
    );
  };
  wc.setR = function (a, b) {
    return ((b & 255) << 16) | (a & -16711681);
  };
  wc.setRf = function (a, b) {
    b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
    return (
      ((((0 < b ? b + 0.5 : 0 > b ? b - 0.5 : 0) | 0) & 255) << 16) |
      (a & -16711681)
    );
  };
  wc.setG = function (a, b) {
    return (b << 8) | (a & -65281);
  };
  wc.setGf = function (a, b) {
    b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
    return (((0 < b ? b + 0.5 : 0 > b ? b - 0.5 : 0) | 0) << 8) | (a & -65281);
  };
  wc.setB = function (a, b) {
    return b | (a & -256);
  };
  wc.setBf = function (a, b) {
    b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
    return (0 < b ? b + 0.5 : 0 > b ? b - 0.5 : 0) | 0 | (a & -256);
  };
  wc.prototype = {
    a: null,
    r: null,
    g: null,
    b: null,
    set: function (a, b, c, d) {
      this.a = a;
      this.r = b;
      this.g = c;
      this.b = d;
    },
    lerp: function (a, b, c) {
      c.a = this.a + (a.a - this.a) * b;
      c.r = this.r + (a.r - this.r) * b;
      c.g = this.g + (a.g - this.g) * b;
      c.b = this.b + (a.b - this.b) * b;
    },
    getA8: function () {
      var a = 255 * this.a;
      return (0 < a ? a + 0.5 : 0 > a ? a - 0.5 : 0) | 0;
    },
    getR8: function () {
      var a = 255 * this.r;
      return (0 < a ? a + 0.5 : 0 > a ? a - 0.5 : 0) | 0;
    },
    getG8: function () {
      var a = 255 * this.g;
      return (0 < a ? a + 0.5 : 0 > a ? a - 0.5 : 0) | 0;
    },
    getB8: function () {
      var a = 255 * this.b;
      return (0 < a ? a + 0.5 : 0 > a ? a - 0.5 : 0) | 0;
    },
    get24: function () {
      var a = 255 * this.r,
        b = 255 * this.g,
        c = 255 * this.b;
      return (
        (((0 < a ? a + 0.5 : 0 > a ? a - 0.5 : 0) | 0) << 16) |
        (((0 < b ? b + 0.5 : 0 > b ? b - 0.5 : 0) | 0) << 8) |
        (0 < c ? c + 0.5 : 0 > c ? c - 0.5 : 0) |
        0
      );
    },
    set24: function (a, b, c) {
      this.a = this.a;
      this.r = 0.00392156862745098 * (a & 255);
      this.g = 0.00392156862745098 * (b & 255);
      this.b = 0.00392156862745098 * (c & 255);
    },
    get32: function () {
      var a = 255 * this.a,
        b = 255 * this.r,
        c = 255 * this.g,
        d = 255 * this.b;
      return (
        (((0 < a ? a + 0.5 : 0 > a ? a - 0.5 : 0) | 0) << 24) |
        (((0 < b ? b + 0.5 : 0 > b ? b - 0.5 : 0) | 0) << 16) |
        (((0 < c ? c + 0.5 : 0 > c ? c - 0.5 : 0) | 0) << 8) |
        (0 < d ? d + 0.5 : 0 > d ? d - 0.5 : 0) |
        0
      );
    },
    set32: function (a, b, c, d) {
      this.a = 0.00392156862745098 * (a & 255);
      this.r = 0.00392156862745098 * (b & 255);
      this.g = 0.00392156862745098 * (c & 255);
      this.b = 0.00392156862745098 * (d & 255);
    },
    copy: function (a) {
      a.a = this.a;
      a.r = this.r;
      a.g = this.g;
      a.b = this.b;
      return a;
    },
    __class__: wc,
  };
  var Uc = (p["com.stencyl.utils.ColorDeficiencyTypes"] = {
    __ename__: ["com", "stencyl", "utils", "ColorDeficiencyTypes"],
    __constructs__:
      "Protanopia Protanomaly Deuteranopia Deuteranomaly Tritanopia Tritanomaly Achromatopsia Achromatomaly".split(
        " "
      ),
  });
  Uc.Protanopia = ["Protanopia", 0];
  Uc.Protanopia.toString = M;
  Uc.Protanopia.__enum__ = Uc;
  Uc.Protanomaly = ["Protanomaly", 1];
  Uc.Protanomaly.toString = M;
  Uc.Protanomaly.__enum__ = Uc;
  Uc.Deuteranopia = ["Deuteranopia", 2];
  Uc.Deuteranopia.toString = M;
  Uc.Deuteranopia.__enum__ = Uc;
  Uc.Deuteranomaly = ["Deuteranomaly", 3];
  Uc.Deuteranomaly.toString = M;
  Uc.Deuteranomaly.__enum__ = Uc;
  Uc.Tritanopia = ["Tritanopia", 4];
  Uc.Tritanopia.toString = M;
  Uc.Tritanopia.__enum__ = Uc;
  Uc.Tritanomaly = ["Tritanomaly", 5];
  Uc.Tritanomaly.toString = M;
  Uc.Tritanomaly.__enum__ = Uc;
  Uc.Achromatopsia = ["Achromatopsia", 6];
  Uc.Achromatopsia.toString = M;
  Uc.Achromatopsia.__enum__ = Uc;
  Uc.Achromatomaly = ["Achromatomaly", 7];
  Uc.Achromatomaly.toString = M;
  Uc.Achromatomaly.__enum__ = Uc;
  var Ia = function () {
    this.identity();
    this.matrix = [];
  };
  p["com.stencyl.utils.ColorMatrix"] = Ia;
  Ia.__name__ = ["com", "stencyl", "utils", "ColorMatrix"];
  Ia.mulMatrixMatrix = function (a, b, c) {
    var d = a.m11,
      e = a.m12,
      f = a.m13,
      g = a.m14;
    c.m11 = a.m11 * b.m11 + a.m12 * b.m21 + a.m13 * b.m31 + a.m14 * b.m41;
    c.m12 = d * b.m12 + a.m12 * b.m22 + a.m13 * b.m32 + a.m14 * b.m42;
    c.m13 = d * b.m13 + e * b.m23 + a.m13 * b.m33 + a.m14 * b.m43;
    c.m14 = d * b.m14 + e * b.m24 + f * b.m34 + a.m14 * b.m44;
    c.m15 = d * b.m15 + e * b.m25 + f * b.m35 + g * b.m45;
    d = a.m21;
    e = a.m22;
    f = a.m23;
    g = a.m24;
    c.m21 = a.m21 * b.m11 + a.m22 * b.m21 + a.m23 * b.m31 + a.m24 * b.m41;
    c.m22 = d * b.m12 + a.m22 * b.m22 + a.m23 * b.m32 + a.m24 * b.m42;
    c.m23 = d * b.m13 + e * b.m23 + a.m23 * b.m33 + a.m24 * b.m43;
    c.m24 = d * b.m14 + e * b.m24 + f * b.m34 + a.m24 * b.m44;
    c.m25 = d * b.m15 + e * b.m25 + f * b.m35 + g * b.m45;
    d = a.m31;
    e = a.m32;
    f = a.m33;
    g = a.m34;
    c.m31 = a.m31 * b.m11 + a.m32 * b.m21 + a.m33 * b.m31 + a.m34 * b.m41;
    c.m32 = d * b.m12 + a.m32 * b.m22 + a.m33 * b.m32 + a.m34 * b.m42;
    c.m33 = d * b.m13 + e * b.m23 + a.m33 * b.m33 + a.m34 * b.m43;
    c.m34 = d * b.m14 + e * b.m24 + f * b.m34 + a.m34 * b.m44;
    c.m35 = d * b.m15 + e * b.m25 + f * b.m35 + g * b.m45;
    d = a.m41;
    e = a.m42;
    f = a.m43;
    g = a.m44;
    c.m41 = a.m41 * b.m11 + a.m42 * b.m21 + a.m43 * b.m31 + a.m44 * b.m41;
    c.m42 = d * b.m12 + a.m42 * b.m22 + a.m43 * b.m32 + a.m44 * b.m42;
    c.m43 = d * b.m13 + e * b.m23 + a.m43 * b.m33 + a.m44 * b.m43;
    c.m44 = d * b.m14 + e * b.m24 + f * b.m34 + a.m44 * b.m44;
    c.m45 = d * b.m15 + e * b.m25 + f * b.m35 + g * b.m45;
    return c;
  };
  Ia.blendMatrixMatrix = function (a, b, c, d) {
    var e = 1 - d;
    c.m11 = e * a.m11 + d * b.m11;
    c.m12 = e * a.m12 + d * b.m12;
    c.m13 = e * a.m13 + d * b.m13;
    c.m14 = e * a.m14 + d * b.m14;
    c.m15 = e * a.m15 + d * b.m15;
    c.m21 = e * a.m21 + d * b.m21;
    c.m22 = e * a.m22 + d * b.m22;
    c.m23 = e * a.m23 + d * b.m23;
    c.m24 = e * a.m24 + d * b.m24;
    c.m25 = e * a.m25 + d * b.m25;
    c.m31 = e * a.m31 + d * b.m31;
    c.m32 = e * a.m32 + d * b.m32;
    c.m33 = e * a.m33 + d * b.m33;
    c.m34 = e * a.m34 + d * b.m34;
    c.m35 = e * a.m35 + d * b.m35;
    c.m41 = e * a.m41 + d * b.m41;
    c.m42 = e * a.m42 + d * b.m42;
    c.m43 = e * a.m43 + d * b.m43;
    c.m44 = e * a.m44 + d * b.m44;
    c.m45 = e * a.m45 + d * b.m45;
    return c;
  };
  Ia.prototype = {
    m11: null,
    m12: null,
    m13: null,
    m14: null,
    m15: null,
    m21: null,
    m22: null,
    m23: null,
    m24: null,
    m25: null,
    m31: null,
    m32: null,
    m33: null,
    m34: null,
    m35: null,
    m41: null,
    m42: null,
    m43: null,
    m44: null,
    m45: null,
    matrix: null,
    preHue: null,
    postHue: null,
    hueInitialized: null,
    getFilter: function () {
      var a = this.matrix;
      a[0] = this.m11;
      a[1] = this.m12;
      a[2] = this.m13;
      a[3] = this.m14;
      a[4] = this.m15;
      a[5] = this.m21;
      a[6] = this.m22;
      a[7] = this.m23;
      a[8] = this.m24;
      a[9] = this.m25;
      a[10] = this.m31;
      a[11] = this.m32;
      a[12] = this.m33;
      a[13] = this.m34;
      a[14] = this.m35;
      a[15] = this.m41;
      a[16] = this.m42;
      a[17] = this.m43;
      a[18] = this.m44;
      a[19] = this.m45;
      return new Vf(this.matrix);
    },
    identity: function () {
      this.m11 = 1;
      this.m21 = this.m15 = this.m14 = this.m13 = this.m12 = 0;
      this.m22 = 1;
      this.m32 = this.m31 = this.m25 = this.m24 = this.m23 = 0;
      this.m33 = 1;
      this.m43 = this.m42 = this.m41 = this.m35 = this.m34 = 0;
      this.m44 = 1;
      this.m45 = 0;
      return this;
    },
    invert: function () {
      var a = this.m11,
        b = this.m12,
        c = this.m13,
        d = this.m14;
      this.m11 = -1 * this.m11 + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
      this.m12 = 0 * a + -1 * this.m12 + 0 * this.m13 + 0 * this.m14;
      this.m13 = 0 * a + 0 * b + -1 * this.m13 + 0 * this.m14;
      this.m14 = 0 * a + 0 * b + 0 * c + this.m14;
      this.m15 = 255 * a + 255 * b + 255 * c + 0 * d;
      a = this.m21;
      b = this.m22;
      c = this.m23;
      d = this.m24;
      this.m21 = -1 * this.m21 + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
      this.m22 = 0 * a + -1 * this.m22 + 0 * this.m23 + 0 * this.m24;
      this.m23 = 0 * a + 0 * b + -1 * this.m23 + 0 * this.m24;
      this.m24 = 0 * a + 0 * b + 0 * c + this.m24;
      this.m25 = 255 * a + 255 * b + 255 * c + 0 * d;
      a = this.m31;
      b = this.m32;
      c = this.m33;
      d = this.m34;
      this.m31 = -1 * this.m31 + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
      this.m32 = 0 * a + -1 * this.m32 + 0 * this.m33 + 0 * this.m34;
      this.m33 = 0 * a + 0 * b + -1 * this.m33 + 0 * this.m34;
      this.m34 = 0 * a + 0 * b + 0 * c + this.m34;
      this.m35 = 255 * a + 255 * b + 255 * c + 0 * d;
      a = this.m41;
      b = this.m42;
      c = this.m43;
      d = this.m44;
      this.m41 = -1 * this.m41 + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
      this.m42 = 0 * a + -1 * this.m42 + 0 * this.m43 + 0 * this.m44;
      this.m43 = 0 * a + 0 * b + -1 * this.m43 + 0 * this.m44;
      this.m44 = 0 * a + 0 * b + 0 * c + this.m44;
      this.m45 = 255 * a + 255 * b + 255 * c + 0 * d;
      return this;
    },
    adjustSaturation: function (a) {
      var b = 1 - a,
        c = b * Ia.LUMA_R,
        d = b * Ia.LUMA_G;
      b *= Ia.LUMA_B;
      var e = c + a,
        f = d + a;
      a = b + a;
      var g = this.m11,
        h = this.m12,
        n = this.m13,
        k = this.m14;
      this.m11 = this.m11 * e + this.m12 * c + this.m13 * c + 0 * this.m14;
      this.m12 = g * d + this.m12 * f + this.m13 * d + 0 * this.m14;
      this.m13 = g * b + h * b + this.m13 * a + 0 * this.m14;
      this.m14 = 0 * g + 0 * h + 0 * n + this.m14;
      this.m15 = 0 * g + 0 * h + 0 * n + 0 * k;
      g = this.m21;
      h = this.m22;
      n = this.m23;
      k = this.m24;
      this.m21 = this.m21 * e + this.m22 * c + this.m23 * c + 0 * this.m24;
      this.m22 = g * d + this.m22 * f + this.m23 * d + 0 * this.m24;
      this.m23 = g * b + h * b + this.m23 * a + 0 * this.m24;
      this.m24 = 0 * g + 0 * h + 0 * n + this.m24;
      this.m25 = 0 * g + 0 * h + 0 * n + 0 * k;
      g = this.m31;
      h = this.m32;
      n = this.m33;
      k = this.m34;
      this.m31 = this.m31 * e + this.m32 * c + this.m33 * c + 0 * this.m34;
      this.m32 = g * d + this.m32 * f + this.m33 * d + 0 * this.m34;
      this.m33 = g * b + h * b + this.m33 * a + 0 * this.m34;
      this.m34 = 0 * g + 0 * h + 0 * n + this.m34;
      this.m35 = 0 * g + 0 * h + 0 * n + 0 * k;
      g = this.m41;
      h = this.m42;
      n = this.m43;
      k = this.m44;
      this.m41 = this.m41 * e + this.m42 * c + this.m43 * c + 0 * this.m44;
      this.m42 = g * d + this.m42 * f + this.m43 * d + 0 * this.m44;
      this.m43 = g * b + h * b + this.m43 * a + 0 * this.m44;
      this.m44 = 0 * g + 0 * h + 0 * n + this.m44;
      this.m45 = 0 * g + 0 * h + 0 * n + 0 * k;
      return this;
    },
    adjustBrightness: function (a) {
      this.adjustBrightnessRGB(a, a, a);
      return this;
    },
    adjustBrightnessRGB: function (a, b, c) {
      a *= 255;
      b *= 255;
      c *= 255;
      var d = this.m11,
        e = this.m12,
        f = this.m13,
        g = this.m14;
      this.m11 = this.m11 + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
      this.m12 = 0 * d + this.m12 + 0 * this.m13 + 0 * this.m14;
      this.m13 = 0 * d + 0 * e + this.m13 + 0 * this.m14;
      this.m14 = 0 * d + 0 * e + 0 * f + this.m14;
      this.m15 = d * a + e * b + f * c + 0 * g;
      d = this.m21;
      e = this.m22;
      f = this.m23;
      g = this.m24;
      this.m21 = this.m21 + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
      this.m22 = 0 * d + this.m22 + 0 * this.m23 + 0 * this.m24;
      this.m23 = 0 * d + 0 * e + this.m23 + 0 * this.m24;
      this.m24 = 0 * d + 0 * e + 0 * f + this.m24;
      this.m25 = d * a + e * b + f * c + 0 * g;
      d = this.m31;
      e = this.m32;
      f = this.m33;
      g = this.m34;
      this.m31 = this.m31 + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
      this.m32 = 0 * d + this.m32 + 0 * this.m33 + 0 * this.m34;
      this.m33 = 0 * d + 0 * e + this.m33 + 0 * this.m34;
      this.m34 = 0 * d + 0 * e + 0 * f + this.m34;
      this.m35 = d * a + e * b + f * c + 0 * g;
      d = this.m41;
      e = this.m42;
      f = this.m43;
      g = this.m44;
      this.m41 = this.m41 + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
      this.m42 = 0 * d + this.m42 + 0 * this.m43 + 0 * this.m44;
      this.m43 = 0 * d + 0 * e + this.m43 + 0 * this.m44;
      this.m44 = 0 * d + 0 * e + 0 * f + this.m44;
      this.m45 = d * a + e * b + f * c + 0 * g;
      return this;
    },
    adjustContrast: function (a) {
      this.adjustContrastRGB(a, a, a);
      return this;
    },
    adjustContrastRGB: function (a, b, c) {
      a += 1;
      b += 1;
      c += 1;
      var d = 128 * (1 - a),
        e = 128 * (1 - b),
        f = 128 * (1 - c),
        g = this.m11,
        h = this.m12,
        n = this.m13,
        k = this.m14;
      this.m11 = this.m11 * a + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
      this.m12 = 0 * g + this.m12 * b + 0 * this.m13 + 0 * this.m14;
      this.m13 = 0 * g + 0 * h + this.m13 * c + 0 * this.m14;
      this.m14 = 0 * g + 0 * h + 0 * n + this.m14;
      this.m15 = g * d + h * e + n * f + 0 * k;
      g = this.m21;
      h = this.m22;
      n = this.m23;
      k = this.m24;
      this.m21 = this.m21 * a + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
      this.m22 = 0 * g + this.m22 * b + 0 * this.m23 + 0 * this.m24;
      this.m23 = 0 * g + 0 * h + this.m23 * c + 0 * this.m24;
      this.m24 = 0 * g + 0 * h + 0 * n + this.m24;
      this.m25 = g * d + h * e + n * f + 0 * k;
      g = this.m31;
      h = this.m32;
      n = this.m33;
      k = this.m34;
      this.m31 = this.m31 * a + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
      this.m32 = 0 * g + this.m32 * b + 0 * this.m33 + 0 * this.m34;
      this.m33 = 0 * g + 0 * h + this.m33 * c + 0 * this.m34;
      this.m34 = 0 * g + 0 * h + 0 * n + this.m34;
      this.m35 = g * d + h * e + n * f + 0 * k;
      g = this.m41;
      h = this.m42;
      n = this.m43;
      k = this.m44;
      this.m41 = this.m41 * a + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
      this.m42 = 0 * g + this.m42 * b + 0 * this.m43 + 0 * this.m44;
      this.m43 = 0 * g + 0 * h + this.m43 * c + 0 * this.m44;
      this.m44 = 0 * g + 0 * h + 0 * n + this.m44;
      this.m45 = g * d + h * e + n * f + 0 * k;
      return this;
    },
    adjustHue: function (a) {
      a *= 0.01745329251994278;
      var b = Math.cos(a),
        c = Math.sin(a);
      a = Ia.LUMA_R + b * (1 - Ia.LUMA_R) + c * -Ia.LUMA_R;
      var d = Ia.LUMA_G + b * -Ia.LUMA_G + c * -Ia.LUMA_G,
        e = Ia.LUMA_B + b * -Ia.LUMA_B + c * (1 - Ia.LUMA_B),
        f = Ia.LUMA_R + b * -Ia.LUMA_R + 0.143 * c,
        g = Ia.LUMA_G + b * (1 - Ia.LUMA_G) + 0.14 * c,
        h = Ia.LUMA_B + b * -Ia.LUMA_B + -0.283 * c,
        n = Ia.LUMA_R + b * -Ia.LUMA_R + c * -(1 - Ia.LUMA_R),
        k = Ia.LUMA_G + b * -Ia.LUMA_G + c * Ia.LUMA_G;
      b = Ia.LUMA_B + b * (1 - Ia.LUMA_B) + c * Ia.LUMA_B;
      c = this.m11;
      var m = this.m12,
        l = this.m13,
        p = this.m14;
      this.m11 = this.m11 * a + this.m12 * f + this.m13 * n + 0 * this.m14;
      this.m12 = c * d + this.m12 * g + this.m13 * k + 0 * this.m14;
      this.m13 = c * e + m * h + this.m13 * b + 0 * this.m14;
      this.m14 = 0 * c + 0 * m + 0 * l + this.m14;
      this.m15 = 0 * c + 0 * m + 0 * l + 0 * p;
      c = this.m21;
      m = this.m22;
      l = this.m23;
      p = this.m24;
      this.m21 = this.m21 * a + this.m22 * f + this.m23 * n + 0 * this.m24;
      this.m22 = c * d + this.m22 * g + this.m23 * k + 0 * this.m24;
      this.m23 = c * e + m * h + this.m23 * b + 0 * this.m24;
      this.m24 = 0 * c + 0 * m + 0 * l + this.m24;
      this.m25 = 0 * c + 0 * m + 0 * l + 0 * p;
      c = this.m31;
      m = this.m32;
      l = this.m33;
      p = this.m34;
      this.m31 = this.m31 * a + this.m32 * f + this.m33 * n + 0 * this.m34;
      this.m32 = c * d + this.m32 * g + this.m33 * k + 0 * this.m34;
      this.m33 = c * e + m * h + this.m33 * b + 0 * this.m34;
      this.m34 = 0 * c + 0 * m + 0 * l + this.m34;
      this.m35 = 0 * c + 0 * m + 0 * l + 0 * p;
      c = this.m41;
      m = this.m42;
      l = this.m43;
      p = this.m44;
      this.m41 = this.m41 * a + this.m42 * f + this.m43 * n + 0 * this.m44;
      this.m42 = c * d + this.m42 * g + this.m43 * k + 0 * this.m44;
      this.m43 = c * e + m * h + this.m43 * b + 0 * this.m44;
      this.m44 = 0 * c + 0 * m + 0 * l + this.m44;
      this.m45 = 0 * c + 0 * m + 0 * l + 0 * p;
      return this;
    },
    luminance2Alpha: function () {
      var a = Ia.LUMA_R,
        b = Ia.LUMA_G,
        c = Ia.LUMA_B,
        d = this.m11,
        e = this.m12,
        f = this.m13,
        g = this.m14;
      this.m11 = 0 * this.m11 + 0 * this.m12 + 0 * this.m13 + this.m14 * a;
      this.m12 = 0 * d + 0 * this.m12 + 0 * this.m13 + this.m14 * b;
      this.m13 = 0 * d + 0 * e + 0 * this.m13 + this.m14 * c;
      this.m14 = 0 * d + 0 * e + 0 * f + 0 * this.m14;
      this.m15 = 255 * d + 255 * e + 255 * f + 0 * g;
      d = this.m21;
      e = this.m22;
      f = this.m23;
      g = this.m24;
      this.m21 = 0 * this.m21 + 0 * this.m22 + 0 * this.m23 + this.m24 * a;
      this.m22 = 0 * d + 0 * this.m22 + 0 * this.m23 + this.m24 * b;
      this.m23 = 0 * d + 0 * e + 0 * this.m23 + this.m24 * c;
      this.m24 = 0 * d + 0 * e + 0 * f + 0 * this.m24;
      this.m25 = 255 * d + 255 * e + 255 * f + 0 * g;
      d = this.m31;
      e = this.m32;
      f = this.m33;
      g = this.m34;
      this.m31 = 0 * this.m31 + 0 * this.m32 + 0 * this.m33 + this.m34 * a;
      this.m32 = 0 * d + 0 * this.m32 + 0 * this.m33 + this.m34 * b;
      this.m33 = 0 * d + 0 * e + 0 * this.m33 + this.m34 * c;
      this.m34 = 0 * d + 0 * e + 0 * f + 0 * this.m34;
      this.m35 = 255 * d + 255 * e + 255 * f + 0 * g;
      d = this.m41;
      e = this.m42;
      f = this.m43;
      g = this.m44;
      this.m41 = 0 * this.m41 + 0 * this.m42 + 0 * this.m43 + this.m44 * a;
      this.m42 = 0 * d + 0 * this.m42 + 0 * this.m43 + this.m44 * b;
      this.m43 = 0 * d + 0 * e + 0 * this.m43 + this.m44 * c;
      this.m44 = 0 * d + 0 * e + 0 * f + 0 * this.m44;
      this.m45 = 255 * d + 255 * e + 255 * f + 0 * g;
      return this;
    },
    adjustAlphaContrast: function (a) {
      a += 1;
      var b = 128 * (1 - a),
        c = this.m11,
        d = this.m12,
        e = this.m13,
        f = this.m14;
      this.m11 = this.m11 + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
      this.m12 = 0 * c + this.m12 + 0 * this.m13 + 0 * this.m14;
      this.m13 = 0 * c + 0 * d + this.m13 + 0 * this.m14;
      this.m14 = 0 * c + 0 * d + 0 * e + this.m14 * a;
      this.m15 = 0 * c + 0 * d + 0 * e + f * b;
      c = this.m21;
      d = this.m22;
      e = this.m23;
      f = this.m24;
      this.m21 = this.m21 + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
      this.m22 = 0 * c + this.m22 + 0 * this.m23 + 0 * this.m24;
      this.m23 = 0 * c + 0 * d + this.m23 + 0 * this.m24;
      this.m24 = 0 * c + 0 * d + 0 * e + this.m24 * a;
      this.m25 = 0 * c + 0 * d + 0 * e + f * b;
      c = this.m31;
      d = this.m32;
      e = this.m33;
      f = this.m34;
      this.m31 = this.m31 + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
      this.m32 = 0 * c + this.m32 + 0 * this.m33 + 0 * this.m34;
      this.m33 = 0 * c + 0 * d + this.m33 + 0 * this.m34;
      this.m34 = 0 * c + 0 * d + 0 * e + this.m34 * a;
      this.m35 = 0 * c + 0 * d + 0 * e + f * b;
      c = this.m41;
      d = this.m42;
      e = this.m43;
      f = this.m44;
      this.m41 = this.m41 + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
      this.m42 = 0 * c + this.m42 + 0 * this.m43 + 0 * this.m44;
      this.m43 = 0 * c + 0 * d + this.m43 + 0 * this.m44;
      this.m44 = 0 * c + 0 * d + 0 * e + this.m44 * a;
      this.m45 = 0 * c + 0 * d + 0 * e + f * b;
      return this;
    },
    colorize: function (a, b) {
      null == b && (b = 1);
      var c = 0.00392156862745098 * ((a >>> 16) & 255),
        d = 0.00392156862745098 * ((a >>> 8) & 255),
        e = 0.00392156862745098 * (a & 255),
        f = 1 - b;
      a = f + b * c * Ia.LUMA_R;
      var g = b * c * Ia.LUMA_G;
      c = b * c * Ia.LUMA_B;
      var h = b * d * Ia.LUMA_R,
        n = f + b * d * Ia.LUMA_G;
      d = b * d * Ia.LUMA_B;
      var k = b * e * Ia.LUMA_R,
        m = b * e * Ia.LUMA_G;
      b = f + b * e * Ia.LUMA_B;
      e = this.m11;
      f = this.m12;
      var l = this.m13,
        p = this.m14;
      this.m11 = this.m11 * a + this.m12 * h + this.m13 * k + 0 * this.m14;
      this.m12 = e * g + this.m12 * n + this.m13 * m + 0 * this.m14;
      this.m13 = e * c + f * d + this.m13 * b + 0 * this.m14;
      this.m14 = 0 * e + 0 * f + 0 * l + this.m14;
      this.m15 = 0 * e + 0 * f + 0 * l + 0 * p;
      e = this.m21;
      f = this.m22;
      l = this.m23;
      p = this.m24;
      this.m21 = this.m21 * a + this.m22 * h + this.m23 * k + 0 * this.m24;
      this.m22 = e * g + this.m22 * n + this.m23 * m + 0 * this.m24;
      this.m23 = e * c + f * d + this.m23 * b + 0 * this.m24;
      this.m24 = 0 * e + 0 * f + 0 * l + this.m24;
      this.m25 = 0 * e + 0 * f + 0 * l + 0 * p;
      e = this.m31;
      f = this.m32;
      l = this.m33;
      p = this.m34;
      this.m31 = this.m31 * a + this.m32 * h + this.m33 * k + 0 * this.m34;
      this.m32 = e * g + this.m32 * n + this.m33 * m + 0 * this.m34;
      this.m33 = e * c + f * d + this.m33 * b + 0 * this.m34;
      this.m34 = 0 * e + 0 * f + 0 * l + this.m34;
      this.m35 = 0 * e + 0 * f + 0 * l + 0 * p;
      e = this.m41;
      f = this.m42;
      l = this.m43;
      p = this.m44;
      this.m41 = this.m41 * a + this.m42 * h + this.m43 * k + 0 * this.m44;
      this.m42 = e * g + this.m42 * n + this.m43 * m + 0 * this.m44;
      this.m43 = e * c + f * d + this.m43 * b + 0 * this.m44;
      this.m44 = 0 * e + 0 * f + 0 * l + this.m44;
      this.m45 = 0 * e + 0 * f + 0 * l + 0 * p;
      return this;
    },
    rotateHue: function (a) {
      if (!this.hueInitialized) {
        this.hueInitialized = !0;
        this.preHue = new Ia();
        this.preHue.rotateRed(45);
        this.preHue.rotateGreen(-39.182655);
        var b = [];
        b[0] = Ia.LUMA_R2;
        b[1] = Ia.LUMA_G2;
        b[2] = Ia.LUMA_B2;
        b[3] = 1;
        this.preHue.transformVector(b);
        var c = b[0] / b[2];
        b = b[1] / b[2];
        this.preHue.shearBlue(c, b);
        this.postHue = new Ia();
        this.postHue.shearBlue(-c, -b);
        this.postHue.rotateGreen(39.182655);
        this.postHue.rotateRed(-45);
      }
      c = this.preHue;
      b = this.m11;
      var d = this.m12,
        e = this.m13,
        f = this.m14;
      this.m11 =
        this.m11 * c.m11 +
        this.m12 * c.m21 +
        this.m13 * c.m31 +
        this.m14 * c.m41;
      this.m12 =
        b * c.m12 + this.m12 * c.m22 + this.m13 * c.m32 + this.m14 * c.m42;
      this.m13 = b * c.m13 + d * c.m23 + this.m13 * c.m33 + this.m14 * c.m43;
      this.m14 = b * c.m14 + d * c.m24 + e * c.m34 + this.m14 * c.m44;
      this.m15 = b * c.m15 + d * c.m25 + e * c.m35 + f * c.m45;
      b = this.m21;
      d = this.m22;
      e = this.m23;
      f = this.m24;
      this.m21 =
        this.m21 * c.m11 +
        this.m22 * c.m21 +
        this.m23 * c.m31 +
        this.m24 * c.m41;
      this.m22 =
        b * c.m12 + this.m22 * c.m22 + this.m23 * c.m32 + this.m24 * c.m42;
      this.m23 = b * c.m13 + d * c.m23 + this.m23 * c.m33 + this.m24 * c.m43;
      this.m24 = b * c.m14 + d * c.m24 + e * c.m34 + this.m24 * c.m44;
      this.m25 = b * c.m15 + d * c.m25 + e * c.m35 + f * c.m45;
      b = this.m31;
      d = this.m32;
      e = this.m33;
      f = this.m34;
      this.m31 =
        this.m31 * c.m11 +
        this.m32 * c.m21 +
        this.m33 * c.m31 +
        this.m34 * c.m41;
      this.m32 =
        b * c.m12 + this.m32 * c.m22 + this.m33 * c.m32 + this.m34 * c.m42;
      this.m33 = b * c.m13 + d * c.m23 + this.m33 * c.m33 + this.m34 * c.m43;
      this.m34 = b * c.m14 + d * c.m24 + e * c.m34 + this.m34 * c.m44;
      this.m35 = b * c.m15 + d * c.m25 + e * c.m35 + f * c.m45;
      b = this.m41;
      d = this.m42;
      e = this.m43;
      f = this.m44;
      this.m41 =
        this.m41 * c.m11 +
        this.m42 * c.m21 +
        this.m43 * c.m31 +
        this.m44 * c.m41;
      this.m42 =
        b * c.m12 + this.m42 * c.m22 + this.m43 * c.m32 + this.m44 * c.m42;
      this.m43 = b * c.m13 + d * c.m23 + this.m43 * c.m33 + this.m44 * c.m43;
      this.m44 = b * c.m14 + d * c.m24 + e * c.m34 + this.m44 * c.m44;
      this.m45 = b * c.m15 + d * c.m25 + e * c.m35 + f * c.m45;
      this.rotateBlue(a);
      a = this.postHue;
      c = this.m11;
      b = this.m12;
      d = this.m13;
      e = this.m14;
      this.m11 =
        this.m11 * a.m11 +
        this.m12 * a.m21 +
        this.m13 * a.m31 +
        this.m14 * a.m41;
      this.m12 =
        c * a.m12 + this.m12 * a.m22 + this.m13 * a.m32 + this.m14 * a.m42;
      this.m13 = c * a.m13 + b * a.m23 + this.m13 * a.m33 + this.m14 * a.m43;
      this.m14 = c * a.m14 + b * a.m24 + d * a.m34 + this.m14 * a.m44;
      this.m15 = c * a.m15 + b * a.m25 + d * a.m35 + e * a.m45;
      c = this.m21;
      b = this.m22;
      d = this.m23;
      e = this.m24;
      this.m21 =
        this.m21 * a.m11 +
        this.m22 * a.m21 +
        this.m23 * a.m31 +
        this.m24 * a.m41;
      this.m22 =
        c * a.m12 + this.m22 * a.m22 + this.m23 * a.m32 + this.m24 * a.m42;
      this.m23 = c * a.m13 + b * a.m23 + this.m23 * a.m33 + this.m24 * a.m43;
      this.m24 = c * a.m14 + b * a.m24 + d * a.m34 + this.m24 * a.m44;
      this.m25 = c * a.m15 + b * a.m25 + d * a.m35 + e * a.m45;
      c = this.m31;
      b = this.m32;
      d = this.m33;
      e = this.m34;
      this.m31 =
        this.m31 * a.m11 +
        this.m32 * a.m21 +
        this.m33 * a.m31 +
        this.m34 * a.m41;
      this.m32 =
        c * a.m12 + this.m32 * a.m22 + this.m33 * a.m32 + this.m34 * a.m42;
      this.m33 = c * a.m13 + b * a.m23 + this.m33 * a.m33 + this.m34 * a.m43;
      this.m34 = c * a.m14 + b * a.m24 + d * a.m34 + this.m34 * a.m44;
      this.m35 = c * a.m15 + b * a.m25 + d * a.m35 + e * a.m45;
      c = this.m41;
      b = this.m42;
      d = this.m43;
      e = this.m44;
      this.m41 =
        this.m41 * a.m11 +
        this.m42 * a.m21 +
        this.m43 * a.m31 +
        this.m44 * a.m41;
      this.m42 =
        c * a.m12 + this.m42 * a.m22 + this.m43 * a.m32 + this.m44 * a.m42;
      this.m43 = c * a.m13 + b * a.m23 + this.m43 * a.m33 + this.m44 * a.m43;
      this.m44 = c * a.m14 + b * a.m24 + d * a.m34 + this.m44 * a.m44;
      this.m45 = c * a.m15 + b * a.m25 + d * a.m35 + e * a.m45;
      return this;
    },
    setChannels: function (a, b, c, d) {
      null == d && (d = 8);
      null == c && (c = 4);
      null == b && (b = 2);
      null == a && (a = 1);
      var e =
        (1 == (a & 1) ? 1 : 0) +
        (2 == (a & 2) ? 1 : 0) +
        (4 == (a & 4) ? 1 : 0) +
        (8 == (a & 8) ? 1 : 0);
      0 < e && (e = 1 / e);
      var f =
        (1 == (b & 1) ? 1 : 0) +
        (2 == (b & 2) ? 1 : 0) +
        (4 == (b & 4) ? 1 : 0) +
        (8 == (b & 8) ? 1 : 0);
      0 < f && (f = 1 / f);
      var g =
        (1 == (c & 1) ? 1 : 0) +
        (2 == (c & 2) ? 1 : 0) +
        (4 == (c & 4) ? 1 : 0) +
        (8 == (c & 8) ? 1 : 0);
      0 < g && (g = 1 / g);
      var h =
        (1 == (d & 1) ? 1 : 0) +
        (2 == (d & 2) ? 1 : 0) +
        (4 == (d & 4) ? 1 : 0) +
        (8 == (d & 8) ? 1 : 0);
      0 < h && (h = 1 / h);
      var n = 1 == (a & 1) ? e : 0,
        k = 2 == (a & 2) ? e : 0,
        m = 4 == (a & 4) ? e : 0;
      a = 8 == (a & 8) ? e : 0;
      e = 1 == (b & 1) ? f : 0;
      var l = 2 == (b & 2) ? f : 0,
        p = 4 == (b & 4) ? f : 0;
      b = 8 == (b & 8) ? f : 0;
      f = 1 == (c & 1) ? g : 0;
      var r = 2 == (c & 2) ? g : 0,
        q = 4 == (c & 4) ? g : 0;
      c = 8 == (c & 8) ? g : 0;
      g = 1 == (d & 1) ? h : 0;
      var t = 2 == (d & 2) ? h : 0,
        u = 4 == (d & 4) ? h : 0;
      d = 8 == (d & 8) ? h : 0;
      h = this.m11;
      var na = this.m12,
        x = this.m13,
        v = this.m14;
      this.m11 = this.m11 * n + this.m12 * e + this.m13 * f + this.m14 * g;
      this.m12 = h * k + this.m12 * l + this.m13 * r + this.m14 * t;
      this.m13 = h * m + na * p + this.m13 * q + this.m14 * u;
      this.m14 = h * a + na * b + x * c + this.m14 * d;
      this.m15 = 0 * h + 0 * na + 0 * x + 0 * v;
      h = this.m21;
      na = this.m22;
      x = this.m23;
      v = this.m24;
      this.m21 = this.m21 * n + this.m22 * e + this.m23 * f + this.m24 * g;
      this.m22 = h * k + this.m22 * l + this.m23 * r + this.m24 * t;
      this.m23 = h * m + na * p + this.m23 * q + this.m24 * u;
      this.m24 = h * a + na * b + x * c + this.m24 * d;
      this.m25 = 0 * h + 0 * na + 0 * x + 0 * v;
      h = this.m31;
      na = this.m32;
      x = this.m33;
      v = this.m34;
      this.m31 = this.m31 * n + this.m32 * e + this.m33 * f + this.m34 * g;
      this.m32 = h * k + this.m32 * l + this.m33 * r + this.m34 * t;
      this.m33 = h * m + na * p + this.m33 * q + this.m34 * u;
      this.m34 = h * a + na * b + x * c + this.m34 * d;
      this.m35 = 0 * h + 0 * na + 0 * x + 0 * v;
      h = this.m41;
      na = this.m42;
      x = this.m43;
      v = this.m44;
      this.m41 = this.m41 * n + this.m42 * e + this.m43 * f + this.m44 * g;
      this.m42 = h * k + this.m42 * l + this.m43 * r + this.m44 * t;
      this.m43 = h * m + na * p + this.m43 * q + this.m44 * u;
      this.m44 = h * a + na * b + x * c + this.m44 * d;
      this.m45 = 0 * h + 0 * na + 0 * x + 0 * v;
      return this;
    },
    average: function (a, b, c) {
      null == c && (c = 0.33333333);
      null == b && (b = 0.33333333);
      null == a && (a = 0.33333333);
      var d = this.m11,
        e = this.m12,
        f = this.m13,
        g = this.m14;
      this.m11 = this.m11 * a + this.m12 * a + this.m13 * a + 0 * this.m14;
      this.m12 = d * b + this.m12 * b + this.m13 * b + 0 * this.m14;
      this.m13 = d * c + e * c + this.m13 * c + 0 * this.m14;
      this.m14 = 0 * d + 0 * e + 0 * f + this.m14;
      this.m15 = 0 * d + 0 * e + 0 * f + 0 * g;
      d = this.m21;
      e = this.m22;
      f = this.m23;
      g = this.m24;
      this.m21 = this.m21 * a + this.m22 * a + this.m23 * a + 0 * this.m24;
      this.m22 = d * b + this.m22 * b + this.m23 * b + 0 * this.m24;
      this.m23 = d * c + e * c + this.m23 * c + 0 * this.m24;
      this.m24 = 0 * d + 0 * e + 0 * f + this.m24;
      this.m25 = 0 * d + 0 * e + 0 * f + 0 * g;
      d = this.m31;
      e = this.m32;
      f = this.m33;
      g = this.m34;
      this.m31 = this.m31 * a + this.m32 * a + this.m33 * a + 0 * this.m34;
      this.m32 = d * b + this.m32 * b + this.m33 * b + 0 * this.m34;
      this.m33 = d * c + e * c + this.m33 * c + 0 * this.m34;
      this.m34 = 0 * d + 0 * e + 0 * f + this.m34;
      this.m35 = 0 * d + 0 * e + 0 * f + 0 * g;
      d = this.m41;
      e = this.m42;
      f = this.m43;
      g = this.m44;
      this.m41 = this.m41 * a + this.m42 * a + this.m43 * a + 0 * this.m44;
      this.m42 = d * b + this.m42 * b + this.m43 * b + 0 * this.m44;
      this.m43 = d * c + e * c + this.m43 * c + 0 * this.m44;
      this.m44 = 0 * d + 0 * e + 0 * f + this.m44;
      this.m45 = 0 * d + 0 * e + 0 * f + 0 * g;
      return this;
    },
    threshold: function (a, b) {
      null == b && (b = 256);
      var c = Ia.LUMA_R * b,
        d = Ia.LUMA_G * b,
        e = Ia.LUMA_B * b,
        f = -b * a,
        g = Ia.LUMA_R * b,
        h = Ia.LUMA_G * b,
        n = Ia.LUMA_B * b,
        k = -b * a,
        m = Ia.LUMA_R * b,
        l = Ia.LUMA_G * b,
        p = Ia.LUMA_B * b;
      a *= -b;
      b = this.m11;
      var r = this.m12,
        q = this.m13,
        t = this.m14;
      this.m11 = this.m11 * c + this.m12 * g + this.m13 * m + 0 * this.m14;
      this.m12 = b * d + this.m12 * h + this.m13 * l + 0 * this.m14;
      this.m13 = b * e + r * n + this.m13 * p + 0 * this.m14;
      this.m14 = 0 * b + 0 * r + 0 * q + this.m14;
      this.m15 = b * f + r * k + q * a + 0 * t;
      b = this.m21;
      r = this.m22;
      q = this.m23;
      t = this.m24;
      this.m21 = this.m21 * c + this.m22 * g + this.m23 * m + 0 * this.m24;
      this.m22 = b * d + this.m22 * h + this.m23 * l + 0 * this.m24;
      this.m23 = b * e + r * n + this.m23 * p + 0 * this.m24;
      this.m24 = 0 * b + 0 * r + 0 * q + this.m24;
      this.m25 = b * f + r * k + q * a + 0 * t;
      b = this.m31;
      r = this.m32;
      q = this.m33;
      t = this.m34;
      this.m31 = this.m31 * c + this.m32 * g + this.m33 * m + 0 * this.m34;
      this.m32 = b * d + this.m32 * h + this.m33 * l + 0 * this.m34;
      this.m33 = b * e + r * n + this.m33 * p + 0 * this.m34;
      this.m34 = 0 * b + 0 * r + 0 * q + this.m34;
      this.m35 = b * f + r * k + q * a + 0 * t;
      b = this.m41;
      r = this.m42;
      q = this.m43;
      t = this.m44;
      this.m41 = this.m41 * c + this.m42 * g + this.m43 * m + 0 * this.m44;
      this.m42 = b * d + this.m42 * h + this.m43 * l + 0 * this.m44;
      this.m43 = b * e + r * n + this.m43 * p + 0 * this.m44;
      this.m44 = 0 * b + 0 * r + 0 * q + this.m44;
      this.m45 = b * f + r * k + q * a + 0 * t;
      return this;
    },
    desaturate: function () {
      var a = Ia.LUMA_R,
        b = Ia.LUMA_G,
        c = Ia.LUMA_B,
        d = Ia.LUMA_R,
        e = Ia.LUMA_G,
        f = Ia.LUMA_B,
        g = Ia.LUMA_R,
        h = Ia.LUMA_G,
        n = Ia.LUMA_B,
        k = this.m11,
        m = this.m12,
        l = this.m13,
        p = this.m14;
      this.m11 = this.m11 * a + this.m12 * d + this.m13 * g + 0 * this.m14;
      this.m12 = k * b + this.m12 * e + this.m13 * h + 0 * this.m14;
      this.m13 = k * c + m * f + this.m13 * n + 0 * this.m14;
      this.m14 = 0 * k + 0 * m + 0 * l + this.m14;
      this.m15 = 0 * k + 0 * m + 0 * l + 0 * p;
      k = this.m21;
      m = this.m22;
      l = this.m23;
      p = this.m24;
      this.m21 = this.m21 * a + this.m22 * d + this.m23 * g + 0 * this.m24;
      this.m22 = k * b + this.m22 * e + this.m23 * h + 0 * this.m24;
      this.m23 = k * c + m * f + this.m23 * n + 0 * this.m24;
      this.m24 = 0 * k + 0 * m + 0 * l + this.m24;
      this.m25 = 0 * k + 0 * m + 0 * l + 0 * p;
      k = this.m31;
      m = this.m32;
      l = this.m33;
      p = this.m34;
      this.m31 = this.m31 * a + this.m32 * d + this.m33 * g + 0 * this.m34;
      this.m32 = k * b + this.m32 * e + this.m33 * h + 0 * this.m34;
      this.m33 = k * c + m * f + this.m33 * n + 0 * this.m34;
      this.m34 = 0 * k + 0 * m + 0 * l + this.m34;
      this.m35 = 0 * k + 0 * m + 0 * l + 0 * p;
      k = this.m41;
      m = this.m42;
      l = this.m43;
      p = this.m44;
      this.m41 = this.m41 * a + this.m42 * d + this.m43 * g + 0 * this.m44;
      this.m42 = k * b + this.m42 * e + this.m43 * h + 0 * this.m44;
      this.m43 = k * c + m * f + this.m43 * n + 0 * this.m44;
      this.m44 = 0 * k + 0 * m + 0 * l + this.m44;
      this.m45 = 0 * k + 0 * m + 0 * l + 0 * p;
      return this;
    },
    setMultiplicators: function (a, b, c, d) {
      null == d && (d = 1);
      null == c && (c = 1);
      null == b && (b = 1);
      null == a && (a = 1);
      var e = this.m11,
        f = this.m12,
        g = this.m13,
        h = this.m14;
      this.m11 = this.m11 * a + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
      this.m12 = 0 * e + this.m12 * b + 0 * this.m13 + 0 * this.m14;
      this.m13 = 0 * e + 0 * f + this.m13 * c + 0 * this.m14;
      this.m14 = 0 * e + 0 * f + 0 * g + this.m14 * d;
      this.m15 = 0 * e + 0 * f + 0 * g + 0 * h;
      e = this.m21;
      f = this.m22;
      g = this.m23;
      h = this.m24;
      this.m21 = this.m21 * a + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
      this.m22 = 0 * e + this.m22 * b + 0 * this.m23 + 0 * this.m24;
      this.m23 = 0 * e + 0 * f + this.m23 * c + 0 * this.m24;
      this.m24 = 0 * e + 0 * f + 0 * g + this.m24 * d;
      this.m25 = 0 * e + 0 * f + 0 * g + 0 * h;
      e = this.m31;
      f = this.m32;
      g = this.m33;
      h = this.m34;
      this.m31 = this.m31 * a + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
      this.m32 = 0 * e + this.m32 * b + 0 * this.m33 + 0 * this.m34;
      this.m33 = 0 * e + 0 * f + this.m33 * c + 0 * this.m34;
      this.m34 = 0 * e + 0 * f + 0 * g + this.m34 * d;
      this.m35 = 0 * e + 0 * f + 0 * g + 0 * h;
      e = this.m41;
      f = this.m42;
      g = this.m43;
      h = this.m44;
      this.m41 = this.m41 * a + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
      this.m42 = 0 * e + this.m42 * b + 0 * this.m43 + 0 * this.m44;
      this.m43 = 0 * e + 0 * f + this.m43 * c + 0 * this.m44;
      this.m44 = 0 * e + 0 * f + 0 * g + this.m44 * d;
      this.m45 = 0 * e + 0 * f + 0 * g + 0 * h;
      return this;
    },
    clearChannels: function (a, b, c, d) {
      null == d && (d = !1);
      null == c && (c = !1);
      null == b && (b = !1);
      null == a && (a = !1);
      a && (this.m11 = this.m12 = this.m13 = this.m14 = this.m15 = 0);
      b && (this.m21 = this.m22 = this.m23 = this.m24 = this.m25 = 0);
      c && (this.m31 = this.m32 = this.m33 = this.m34 = this.m35 = 0);
      d && (this.m41 = this.m42 = this.m43 = this.m44 = this.m45 = 0);
      return this;
    },
    thresholdAlpha: function (a, b) {
      null == b && (b = 256);
      a *= -b;
      var c = this.m11,
        d = this.m12,
        e = this.m13,
        f = this.m14;
      this.m11 = this.m11 + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
      this.m12 = 0 * c + this.m12 + 0 * this.m13 + 0 * this.m14;
      this.m13 = 0 * c + 0 * d + this.m13 + 0 * this.m14;
      this.m14 = 0 * c + 0 * d + 0 * e + this.m14 * b;
      this.m15 = 0 * c + 0 * d + 0 * e + f * a;
      c = this.m21;
      d = this.m22;
      e = this.m23;
      f = this.m24;
      this.m21 = this.m21 + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
      this.m22 = 0 * c + this.m22 + 0 * this.m23 + 0 * this.m24;
      this.m23 = 0 * c + 0 * d + this.m23 + 0 * this.m24;
      this.m24 = 0 * c + 0 * d + 0 * e + this.m24 * b;
      this.m25 = 0 * c + 0 * d + 0 * e + f * a;
      c = this.m31;
      d = this.m32;
      e = this.m33;
      f = this.m34;
      this.m31 = this.m31 + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
      this.m32 = 0 * c + this.m32 + 0 * this.m33 + 0 * this.m34;
      this.m33 = 0 * c + 0 * d + this.m33 + 0 * this.m34;
      this.m34 = 0 * c + 0 * d + 0 * e + this.m34 * b;
      this.m35 = 0 * c + 0 * d + 0 * e + f * a;
      c = this.m41;
      d = this.m42;
      e = this.m43;
      f = this.m44;
      this.m41 = this.m41 + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
      this.m42 = 0 * c + this.m42 + 0 * this.m43 + 0 * this.m44;
      this.m43 = 0 * c + 0 * d + this.m43 + 0 * this.m44;
      this.m44 = 0 * c + 0 * d + 0 * e + this.m44 * b;
      this.m45 = 0 * c + 0 * d + 0 * e + f * a;
      return this;
    },
    averageRGB2Alpha: function () {
      var a = Ia.INV3,
        b = Ia.INV3,
        c = Ia.INV3,
        d = this.m11,
        e = this.m12,
        f = this.m13,
        g = this.m14;
      this.m11 = 0 * this.m11 + 0 * this.m12 + 0 * this.m13 + this.m14 * a;
      this.m12 = 0 * d + 0 * this.m12 + 0 * this.m13 + this.m14 * b;
      this.m13 = 0 * d + 0 * e + 0 * this.m13 + this.m14 * c;
      this.m14 = 0 * d + 0 * e + 0 * f + 0 * this.m14;
      this.m15 = 255 * d + 255 * e + 255 * f + 0 * g;
      d = this.m21;
      e = this.m22;
      f = this.m23;
      g = this.m24;
      this.m21 = 0 * this.m21 + 0 * this.m22 + 0 * this.m23 + this.m24 * a;
      this.m22 = 0 * d + 0 * this.m22 + 0 * this.m23 + this.m24 * b;
      this.m23 = 0 * d + 0 * e + 0 * this.m23 + this.m24 * c;
      this.m24 = 0 * d + 0 * e + 0 * f + 0 * this.m24;
      this.m25 = 255 * d + 255 * e + 255 * f + 0 * g;
      d = this.m31;
      e = this.m32;
      f = this.m33;
      g = this.m34;
      this.m31 = 0 * this.m31 + 0 * this.m32 + 0 * this.m33 + this.m34 * a;
      this.m32 = 0 * d + 0 * this.m32 + 0 * this.m33 + this.m34 * b;
      this.m33 = 0 * d + 0 * e + 0 * this.m33 + this.m34 * c;
      this.m34 = 0 * d + 0 * e + 0 * f + 0 * this.m34;
      this.m35 = 255 * d + 255 * e + 255 * f + 0 * g;
      d = this.m41;
      e = this.m42;
      f = this.m43;
      g = this.m44;
      this.m41 = 0 * this.m41 + 0 * this.m42 + 0 * this.m43 + this.m44 * a;
      this.m42 = 0 * d + 0 * this.m42 + 0 * this.m43 + this.m44 * b;
      this.m43 = 0 * d + 0 * e + 0 * this.m43 + this.m44 * c;
      this.m44 = 0 * d + 0 * e + 0 * f + 0 * this.m44;
      this.m45 = 255 * d + 255 * e + 255 * f + 0 * g;
      return this;
    },
    invertAlpha: function () {
      var a = this.m11,
        b = this.m12,
        c = this.m13,
        d = this.m14;
      this.m11 = this.m11 + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
      this.m12 = 0 * a + this.m12 + 0 * this.m13 + 0 * this.m14;
      this.m13 = 0 * a + 0 * b + this.m13 + 0 * this.m14;
      this.m14 = 0 * a + 0 * b + 0 * c + -1 * this.m14;
      this.m15 = 0 * a + 0 * b + 0 * c + 255 * d;
      a = this.m21;
      b = this.m22;
      c = this.m23;
      d = this.m24;
      this.m21 = this.m21 + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
      this.m22 = 0 * a + this.m22 + 0 * this.m23 + 0 * this.m24;
      this.m23 = 0 * a + 0 * b + this.m23 + 0 * this.m24;
      this.m24 = 0 * a + 0 * b + 0 * c + -1 * this.m24;
      this.m25 = 0 * a + 0 * b + 0 * c + 255 * d;
      a = this.m31;
      b = this.m32;
      c = this.m33;
      d = this.m34;
      this.m31 = this.m31 + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
      this.m32 = 0 * a + this.m32 + 0 * this.m33 + 0 * this.m34;
      this.m33 = 0 * a + 0 * b + this.m33 + 0 * this.m34;
      this.m34 = 0 * a + 0 * b + 0 * c + -1 * this.m34;
      this.m35 = 0 * a + 0 * b + 0 * c + 255 * d;
      a = this.m41;
      b = this.m42;
      c = this.m43;
      d = this.m44;
      this.m41 = this.m41 + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
      this.m42 = 0 * a + this.m42 + 0 * this.m43 + 0 * this.m44;
      this.m43 = 0 * a + 0 * b + this.m43 + 0 * this.m44;
      this.m44 = 0 * a + 0 * b + 0 * c + -1 * this.m44;
      this.m45 = 0 * a + 0 * b + 0 * c + 255 * d;
      return this;
    },
    rgb2Alpha: function (a, b, c) {
      var d = this.m11,
        e = this.m12,
        f = this.m13,
        g = this.m14;
      this.m11 = 0 * this.m11 + 0 * this.m12 + 0 * this.m13 + this.m14 * a;
      this.m12 = 0 * d + 0 * this.m12 + 0 * this.m13 + this.m14 * b;
      this.m13 = 0 * d + 0 * e + 0 * this.m13 + this.m14 * c;
      this.m14 = 0 * d + 0 * e + 0 * f + 0 * this.m14;
      this.m15 = 255 * d + 255 * e + 255 * f + 0 * g;
      d = this.m21;
      e = this.m22;
      f = this.m23;
      g = this.m24;
      this.m21 = 0 * this.m21 + 0 * this.m22 + 0 * this.m23 + this.m24 * a;
      this.m22 = 0 * d + 0 * this.m22 + 0 * this.m23 + this.m24 * b;
      this.m23 = 0 * d + 0 * e + 0 * this.m23 + this.m24 * c;
      this.m24 = 0 * d + 0 * e + 0 * f + 0 * this.m24;
      this.m25 = 255 * d + 255 * e + 255 * f + 0 * g;
      d = this.m31;
      e = this.m32;
      f = this.m33;
      g = this.m34;
      this.m31 = 0 * this.m31 + 0 * this.m32 + 0 * this.m33 + this.m34 * a;
      this.m32 = 0 * d + 0 * this.m32 + 0 * this.m33 + this.m34 * b;
      this.m33 = 0 * d + 0 * e + 0 * this.m33 + this.m34 * c;
      this.m34 = 0 * d + 0 * e + 0 * f + 0 * this.m34;
      this.m35 = 255 * d + 255 * e + 255 * f + 0 * g;
      d = this.m41;
      e = this.m42;
      f = this.m43;
      g = this.m44;
      this.m41 = 0 * this.m41 + 0 * this.m42 + 0 * this.m43 + this.m44 * a;
      this.m42 = 0 * d + 0 * this.m42 + 0 * this.m43 + this.m44 * b;
      this.m43 = 0 * d + 0 * e + 0 * this.m43 + this.m44 * c;
      this.m44 = 0 * d + 0 * e + 0 * f + 0 * this.m44;
      this.m45 = 255 * d + 255 * e + 255 * f + 0 * g;
      return this;
    },
    setAlpha: function (a) {
      var b = this.m11,
        c = this.m12,
        d = this.m13,
        e = this.m14;
      this.m11 = this.m11 + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
      this.m12 = 0 * b + this.m12 + 0 * this.m13 + 0 * this.m14;
      this.m13 = 0 * b + 0 * c + this.m13 + 0 * this.m14;
      this.m14 = 0 * b + 0 * c + 0 * d + this.m14 * a;
      this.m15 = 0 * b + 0 * c + 0 * d + 0 * e;
      b = this.m21;
      c = this.m22;
      d = this.m23;
      e = this.m24;
      this.m21 = this.m21 + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
      this.m22 = 0 * b + this.m22 + 0 * this.m23 + 0 * this.m24;
      this.m23 = 0 * b + 0 * c + this.m23 + 0 * this.m24;
      this.m24 = 0 * b + 0 * c + 0 * d + this.m24 * a;
      this.m25 = 0 * b + 0 * c + 0 * d + 0 * e;
      b = this.m31;
      c = this.m32;
      d = this.m33;
      e = this.m34;
      this.m31 = this.m31 + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
      this.m32 = 0 * b + this.m32 + 0 * this.m33 + 0 * this.m34;
      this.m33 = 0 * b + 0 * c + this.m33 + 0 * this.m34;
      this.m34 = 0 * b + 0 * c + 0 * d + this.m34 * a;
      this.m35 = 0 * b + 0 * c + 0 * d + 0 * e;
      b = this.m41;
      c = this.m42;
      d = this.m43;
      e = this.m44;
      this.m41 = this.m41 + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
      this.m42 = 0 * b + this.m42 + 0 * this.m43 + 0 * this.m44;
      this.m43 = 0 * b + 0 * c + this.m43 + 0 * this.m44;
      this.m44 = 0 * b + 0 * c + 0 * d + this.m44 * a;
      this.m45 = 0 * b + 0 * c + 0 * d + 0 * e;
      return this;
    },
    rotateRed: function (a) {
      a *= 0.01745329251994278;
      var b = Math.cos(a);
      a = Math.cos(a);
      this.m11 = 1;
      this.m21 = this.m15 = this.m14 = this.m13 = this.m12 = 0;
      this.m22 = b;
      this.m23 = -a;
      this.m31 = this.m25 = this.m24 = 0;
      this.m32 = a;
      this.m33 = b;
      this.m43 = this.m42 = this.m41 = this.m35 = this.m34 = 0;
      this.m44 = 1;
      this.m45 = 0;
      return this;
    },
    rotateGreen: function (a) {
      a *= 0.01745329251994278;
      var b = Math.cos(a);
      a = Math.cos(a);
      this.m11 = b;
      this.m12 = 0;
      this.m13 = a;
      this.m21 = this.m15 = this.m14 = 0;
      this.m22 = 1;
      this.m25 = this.m24 = this.m23 = 0;
      this.m31 = -a;
      this.m32 = 0;
      this.m33 = b;
      this.m43 = this.m42 = this.m41 = this.m35 = this.m34 = 0;
      this.m44 = 1;
      this.m45 = 0;
      return this;
    },
    rotateBlue: function (a) {
      a *= 0.01745329251994278;
      var b = Math.cos(a);
      a = Math.cos(a);
      this.m11 = b;
      this.m12 = -a;
      this.m15 = this.m14 = this.m13 = 0;
      this.m21 = a;
      this.m22 = b;
      this.m32 = this.m31 = this.m25 = this.m24 = this.m23 = 0;
      this.m33 = 1;
      this.m43 = this.m42 = this.m41 = this.m35 = this.m34 = 0;
      this.m44 = 1;
      this.m45 = 0;
      return this;
    },
    shearRed: function (a, b) {
      this.m11 = 1;
      this.m12 = a;
      this.m13 = b;
      this.m21 = this.m15 = this.m14 = 0;
      this.m22 = 1;
      this.m32 = this.m31 = this.m25 = this.m24 = this.m23 = 0;
      this.m33 = 1;
      this.m43 = this.m42 = this.m41 = this.m35 = this.m34 = 0;
      this.m44 = 1;
      this.m45 = 0;
      return this;
    },
    shearGreen: function (a, b) {
      this.m11 = 1;
      this.m15 = this.m14 = this.m13 = this.m12 = 0;
      this.m21 = a;
      this.m22 = 1;
      this.m23 = b;
      this.m32 = this.m31 = this.m25 = this.m24 = 0;
      this.m33 = 1;
      this.m43 = this.m42 = this.m41 = this.m35 = this.m34 = 0;
      this.m44 = 1;
      this.m45 = 0;
      return this;
    },
    shearBlue: function (a, b) {
      this.m11 = 1;
      this.m21 = this.m15 = this.m14 = this.m13 = this.m12 = 0;
      this.m22 = 1;
      this.m25 = this.m24 = this.m23 = 0;
      this.m31 = a;
      this.m32 = b;
      this.m33 = 1;
      this.m43 = this.m42 = this.m41 = this.m35 = this.m34 = 0;
      this.m44 = 1;
      this.m45 = 0;
      return this;
    },
    applyColorDeficiency: function (a) {
      switch (a[1]) {
        case 0:
          var b = this.m11,
            c = this.m12,
            d = this.m13,
            e = this.m14;
          this.m11 =
            0.567 * this.m11 + 0.558 * this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m12 =
            0.433 * b + 0.442 * this.m12 + 0.242 * this.m13 + 0 * this.m14;
          this.m13 = 0 * b + 0 * c + 0.758 * this.m13 + 0 * this.m14;
          this.m14 = 0 * b + 0 * c + 0 * d + this.m14;
          this.m15 = 0 * b + 0 * c + 0 * d + 0 * e;
          var f = this.m21,
            g = this.m22,
            h = this.m23,
            n = this.m24;
          this.m21 =
            0.567 * this.m21 + 0.558 * this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m22 =
            0.433 * f + 0.442 * this.m22 + 0.242 * this.m23 + 0 * this.m24;
          this.m23 = 0 * f + 0 * g + 0.758 * this.m23 + 0 * this.m24;
          this.m24 = 0 * f + 0 * g + 0 * h + this.m24;
          this.m25 = 0 * f + 0 * g + 0 * h + 0 * n;
          var k = this.m31,
            m = this.m32,
            l = this.m33,
            p = this.m34;
          this.m31 =
            0.567 * this.m31 + 0.558 * this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m32 =
            0.433 * k + 0.442 * this.m32 + 0.242 * this.m33 + 0 * this.m34;
          this.m33 = 0 * k + 0 * m + 0.758 * this.m33 + 0 * this.m34;
          this.m34 = 0 * k + 0 * m + 0 * l + this.m34;
          this.m35 = 0 * k + 0 * m + 0 * l + 0 * p;
          var r = this.m41,
            q = this.m42,
            t = this.m43,
            u = this.m44;
          this.m41 =
            0.567 * this.m41 + 0.558 * this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m42 =
            0.433 * r + 0.442 * this.m42 + 0.242 * this.m43 + 0 * this.m44;
          this.m43 = 0 * r + 0 * q + 0.758 * this.m43 + 0 * this.m44;
          this.m44 = 0 * r + 0 * q + 0 * t + this.m44;
          this.m45 = 0 * r + 0 * q + 0 * t + 0 * u;
          break;
        case 1:
          var x = this.m11,
            v = this.m12,
            w = this.m13,
            B = this.m14;
          this.m11 =
            0.817 * this.m11 + 0.333 * this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m12 =
            0.183 * x + 0.667 * this.m12 + 0.125 * this.m13 + 0 * this.m14;
          this.m13 = 0 * x + 0 * v + 0.875 * this.m13 + 0 * this.m14;
          this.m14 = 0 * x + 0 * v + 0 * w + this.m14;
          this.m15 = 0 * x + 0 * v + 0 * w + 0 * B;
          var A = this.m21,
            y = this.m22,
            C = this.m23,
            z = this.m24;
          this.m21 =
            0.817 * this.m21 + 0.333 * this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m22 =
            0.183 * A + 0.667 * this.m22 + 0.125 * this.m23 + 0 * this.m24;
          this.m23 = 0 * A + 0 * y + 0.875 * this.m23 + 0 * this.m24;
          this.m24 = 0 * A + 0 * y + 0 * C + this.m24;
          this.m25 = 0 * A + 0 * y + 0 * C + 0 * z;
          var D = this.m31,
            E = this.m32,
            F = this.m33,
            H = this.m34;
          this.m31 =
            0.817 * this.m31 + 0.333 * this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m32 =
            0.183 * D + 0.667 * this.m32 + 0.125 * this.m33 + 0 * this.m34;
          this.m33 = 0 * D + 0 * E + 0.875 * this.m33 + 0 * this.m34;
          this.m34 = 0 * D + 0 * E + 0 * F + this.m34;
          this.m35 = 0 * D + 0 * E + 0 * F + 0 * H;
          var K = this.m41,
            J = this.m42,
            I = this.m43,
            M = this.m44;
          this.m41 =
            0.817 * this.m41 + 0.333 * this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m42 =
            0.183 * K + 0.667 * this.m42 + 0.125 * this.m43 + 0 * this.m44;
          this.m43 = 0 * K + 0 * J + 0.875 * this.m43 + 0 * this.m44;
          this.m44 = 0 * K + 0 * J + 0 * I + this.m44;
          this.m45 = 0 * K + 0 * J + 0 * I + 0 * M;
          break;
        case 2:
          var N = this.m11,
            L = this.m12,
            O = this.m13,
            P = this.m14;
          this.m11 =
            0.625 * this.m11 + 0.7 * this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m12 = 0.375 * N + 0.3 * this.m12 + 0.3 * this.m13 + 0 * this.m14;
          this.m13 = 0 * N + 0 * L + 0.7 * this.m13 + 0 * this.m14;
          this.m14 = 0 * N + 0 * L + 0 * O + this.m14;
          this.m15 = 0 * N + 0 * L + 0 * O + 0 * P;
          var Q = this.m21,
            R = this.m22,
            S = this.m23,
            W = this.m24;
          this.m21 =
            0.625 * this.m21 + 0.7 * this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m22 = 0.375 * Q + 0.3 * this.m22 + 0.3 * this.m23 + 0 * this.m24;
          this.m23 = 0 * Q + 0 * R + 0.7 * this.m23 + 0 * this.m24;
          this.m24 = 0 * Q + 0 * R + 0 * S + this.m24;
          this.m25 = 0 * Q + 0 * R + 0 * S + 0 * W;
          var T = this.m31,
            U = this.m32,
            Y = this.m33,
            ba = this.m34;
          this.m31 =
            0.625 * this.m31 + 0.7 * this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m32 = 0.375 * T + 0.3 * this.m32 + 0.3 * this.m33 + 0 * this.m34;
          this.m33 = 0 * T + 0 * U + 0.7 * this.m33 + 0 * this.m34;
          this.m34 = 0 * T + 0 * U + 0 * Y + this.m34;
          this.m35 = 0 * T + 0 * U + 0 * Y + 0 * ba;
          var V = this.m41,
            aa = this.m42,
            ea = this.m43,
            ca = this.m44;
          this.m41 =
            0.625 * this.m41 + 0.7 * this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m42 = 0.375 * V + 0.3 * this.m42 + 0.3 * this.m43 + 0 * this.m44;
          this.m43 = 0 * V + 0 * aa + 0.7 * this.m43 + 0 * this.m44;
          this.m44 = 0 * V + 0 * aa + 0 * ea + this.m44;
          this.m45 = 0 * V + 0 * aa + 0 * ea + 0 * ca;
          break;
        case 3:
          var da = this.m11,
            fa = this.m12,
            X = this.m13,
            ma = this.m14;
          this.m11 =
            0.8 * this.m11 + 0.258 * this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m12 =
            0.2 * da + 0.742 * this.m12 + 0.142 * this.m13 + 0 * this.m14;
          this.m13 = 0 * da + 0 * fa + 0.858 * this.m13 + 0 * this.m14;
          this.m14 = 0 * da + 0 * fa + 0 * X + this.m14;
          this.m15 = 0 * da + 0 * fa + 0 * X + 0 * ma;
          var ha = this.m21,
            ka = this.m22,
            la = this.m23,
            pa = this.m24;
          this.m21 =
            0.8 * this.m21 + 0.258 * this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m22 =
            0.2 * ha + 0.742 * this.m22 + 0.142 * this.m23 + 0 * this.m24;
          this.m23 = 0 * ha + 0 * ka + 0.858 * this.m23 + 0 * this.m24;
          this.m24 = 0 * ha + 0 * ka + 0 * la + this.m24;
          this.m25 = 0 * ha + 0 * ka + 0 * la + 0 * pa;
          var oa = this.m31,
            ja = this.m32,
            ia = this.m33,
            ra = this.m34;
          this.m31 =
            0.8 * this.m31 + 0.258 * this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m32 =
            0.2 * oa + 0.742 * this.m32 + 0.142 * this.m33 + 0 * this.m34;
          this.m33 = 0 * oa + 0 * ja + 0.858 * this.m33 + 0 * this.m34;
          this.m34 = 0 * oa + 0 * ja + 0 * ia + this.m34;
          this.m35 = 0 * oa + 0 * ja + 0 * ia + 0 * ra;
          var ta = this.m41,
            ua = this.m42,
            sa = this.m43,
            ya = this.m44;
          this.m41 =
            0.8 * this.m41 + 0.258 * this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m42 =
            0.2 * ta + 0.742 * this.m42 + 0.142 * this.m43 + 0 * this.m44;
          this.m43 = 0 * ta + 0 * ua + 0.858 * this.m43 + 0 * this.m44;
          this.m44 = 0 * ta + 0 * ua + 0 * sa + this.m44;
          this.m45 = 0 * ta + 0 * ua + 0 * sa + 0 * ya;
          break;
        case 4:
          var va = this.m11,
            qa = this.m12,
            Aa = this.m13,
            Ca = this.m14;
          this.m11 =
            0.95 * this.m11 + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m12 =
            0.05 * va + 0.433 * this.m12 + 0.475 * this.m13 + 0 * this.m14;
          this.m13 = 0 * va + 0.567 * qa + 0.525 * this.m13 + 0 * this.m14;
          this.m14 = 0 * va + 0 * qa + 0 * Aa + this.m14;
          this.m15 = 0 * va + 0 * qa + 0 * Aa + 0 * Ca;
          var Z = this.m21,
            xa = this.m22,
            Da = this.m23,
            Ba = this.m24;
          this.m21 =
            0.95 * this.m21 + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m22 =
            0.05 * Z + 0.433 * this.m22 + 0.475 * this.m23 + 0 * this.m24;
          this.m23 = 0 * Z + 0.567 * xa + 0.525 * this.m23 + 0 * this.m24;
          this.m24 = 0 * Z + 0 * xa + 0 * Da + this.m24;
          this.m25 = 0 * Z + 0 * xa + 0 * Da + 0 * Ba;
          var wa = this.m31,
            Ea = this.m32,
            Ha = this.m33,
            Fa = this.m34;
          this.m31 =
            0.95 * this.m31 + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m32 =
            0.05 * wa + 0.433 * this.m32 + 0.475 * this.m33 + 0 * this.m34;
          this.m33 = 0 * wa + 0.567 * Ea + 0.525 * this.m33 + 0 * this.m34;
          this.m34 = 0 * wa + 0 * Ea + 0 * Ha + this.m34;
          this.m35 = 0 * wa + 0 * Ea + 0 * Ha + 0 * Fa;
          var Ia = this.m41,
            za = this.m42,
            Ja = this.m43,
            Oa = this.m44;
          this.m41 =
            0.95 * this.m41 + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m42 =
            0.05 * Ia + 0.433 * this.m42 + 0.475 * this.m43 + 0 * this.m44;
          this.m43 = 0 * Ia + 0.567 * za + 0.525 * this.m43 + 0 * this.m44;
          this.m44 = 0 * Ia + 0 * za + 0 * Ja + this.m44;
          this.m45 = 0 * Ia + 0 * za + 0 * Ja + 0 * Oa;
          break;
        case 5:
          var Ka = this.m11,
            Ga = this.m12,
            Na = this.m13,
            Ra = this.m14;
          this.m11 =
            0.967 * this.m11 + 0 * this.m12 + 0 * this.m13 + 0 * this.m14;
          this.m12 =
            0.033 * Ka + 0.733 * this.m12 + 0.183 * this.m13 + 0 * this.m14;
          this.m13 = 0 * Ka + 0.267 * Ga + 0.817 * this.m13 + 0 * this.m14;
          this.m14 = 0 * Ka + 0 * Ga + 0 * Na + this.m14;
          this.m15 = 0 * Ka + 0 * Ga + 0 * Na + 0 * Ra;
          var La = this.m21,
            Pa = this.m22,
            Sa = this.m23,
            Ua = this.m24;
          this.m21 =
            0.967 * this.m21 + 0 * this.m22 + 0 * this.m23 + 0 * this.m24;
          this.m22 =
            0.033 * La + 0.733 * this.m22 + 0.183 * this.m23 + 0 * this.m24;
          this.m23 = 0 * La + 0.267 * Pa + 0.817 * this.m23 + 0 * this.m24;
          this.m24 = 0 * La + 0 * Pa + 0 * Sa + this.m24;
          this.m25 = 0 * La + 0 * Pa + 0 * Sa + 0 * Ua;
          var Ta = this.m31,
            Va = this.m32,
            eb = this.m33,
            gb = this.m34;
          this.m31 =
            0.967 * this.m31 + 0 * this.m32 + 0 * this.m33 + 0 * this.m34;
          this.m32 =
            0.033 * Ta + 0.733 * this.m32 + 0.183 * this.m33 + 0 * this.m34;
          this.m33 = 0 * Ta + 0.267 * Va + 0.817 * this.m33 + 0 * this.m34;
          this.m34 = 0 * Ta + 0 * Va + 0 * eb + this.m34;
          this.m35 = 0 * Ta + 0 * Va + 0 * eb + 0 * gb;
          var Qa = this.m41,
            bb = this.m42,
            hb = this.m43,
            mb = this.m44;
          this.m41 =
            0.967 * this.m41 + 0 * this.m42 + 0 * this.m43 + 0 * this.m44;
          this.m42 =
            0.033 * Qa + 0.733 * this.m42 + 0.183 * this.m43 + 0 * this.m44;
          this.m43 = 0 * Qa + 0.267 * bb + 0.817 * this.m43 + 0 * this.m44;
          this.m44 = 0 * Qa + 0 * bb + 0 * hb + this.m44;
          this.m45 = 0 * Qa + 0 * bb + 0 * hb + 0 * mb;
          break;
        case 6:
          var fb = this.m11,
            nb = this.m12,
            ob = this.m13,
            Ya = this.m14;
          this.m11 =
            0.299 * this.m11 +
            0.299 * this.m12 +
            0.299 * this.m13 +
            0 * this.m14;
          this.m12 =
            0.587 * fb + 0.587 * this.m12 + 0.587 * this.m13 + 0 * this.m14;
          this.m13 = 0.114 * fb + 0.114 * nb + 0.114 * this.m13 + 0 * this.m14;
          this.m14 = 0 * fb + 0 * nb + 0 * ob + this.m14;
          this.m15 = 0 * fb + 0 * nb + 0 * ob + 0 * Ya;
          var lb = this.m21,
            pb = this.m22,
            Xa = this.m23,
            qb = this.m24;
          this.m21 =
            0.299 * this.m21 +
            0.299 * this.m22 +
            0.299 * this.m23 +
            0 * this.m24;
          this.m22 =
            0.587 * lb + 0.587 * this.m22 + 0.587 * this.m23 + 0 * this.m24;
          this.m23 = 0.114 * lb + 0.114 * pb + 0.114 * this.m23 + 0 * this.m24;
          this.m24 = 0 * lb + 0 * pb + 0 * Xa + this.m24;
          this.m25 = 0 * lb + 0 * pb + 0 * Xa + 0 * qb;
          var Wa = this.m31,
            $a = this.m32,
            db = this.m33,
            jb = this.m34;
          this.m31 =
            0.299 * this.m31 +
            0.299 * this.m32 +
            0.299 * this.m33 +
            0 * this.m34;
          this.m32 =
            0.587 * Wa + 0.587 * this.m32 + 0.587 * this.m33 + 0 * this.m34;
          this.m33 = 0.114 * Wa + 0.114 * $a + 0.114 * this.m33 + 0 * this.m34;
          this.m34 = 0 * Wa + 0 * $a + 0 * db + this.m34;
          this.m35 = 0 * Wa + 0 * $a + 0 * db + 0 * jb;
          var Za = this.m41,
            sb = this.m42,
            ib = this.m43,
            wb = this.m44;
          this.m41 =
            0.299 * this.m41 +
            0.299 * this.m42 +
            0.299 * this.m43 +
            0 * this.m44;
          this.m42 =
            0.587 * Za + 0.587 * this.m42 + 0.587 * this.m43 + 0 * this.m44;
          this.m43 = 0.114 * Za + 0.114 * sb + 0.114 * this.m43 + 0 * this.m44;
          this.m44 = 0 * Za + 0 * sb + 0 * ib + this.m44;
          this.m45 = 0 * Za + 0 * sb + 0 * ib + 0 * wb;
          break;
        case 7:
          var ab = this.m11,
            kb = this.m12,
            xb = this.m13,
            Ab = this.m14;
          this.m11 =
            0.618 * this.m11 +
            0.163 * this.m12 +
            0.163 * this.m13 +
            0 * this.m14;
          this.m12 =
            0.32 * ab + 0.775 * this.m12 + 0.32 * this.m13 + 0 * this.m14;
          this.m13 = 0.062 * ab + 0.062 * kb + 0.516 * this.m13 + 0 * this.m14;
          this.m14 = 0 * ab + 0 * kb + 0 * xb + this.m14;
          this.m15 = 0 * ab + 0 * kb + 0 * xb + 0 * Ab;
          var rb = this.m21,
            zb = this.m22,
            cb = this.m23,
            Db = this.m24;
          this.m21 =
            0.618 * this.m21 +
            0.163 * this.m22 +
            0.163 * this.m23 +
            0 * this.m24;
          this.m22 =
            0.32 * rb + 0.775 * this.m22 + 0.32 * this.m23 + 0 * this.m24;
          this.m23 = 0.062 * rb + 0.062 * zb + 0.516 * this.m23 + 0 * this.m24;
          this.m24 = 0 * rb + 0 * zb + 0 * cb + this.m24;
          this.m25 = 0 * rb + 0 * zb + 0 * cb + 0 * Db;
          var yb = this.m31,
            ub = this.m32,
            Cb = this.m33,
            vb = this.m34;
          this.m31 =
            0.618 * this.m31 +
            0.163 * this.m32 +
            0.163 * this.m33 +
            0 * this.m34;
          this.m32 =
            0.32 * yb + 0.775 * this.m32 + 0.32 * this.m33 + 0 * this.m34;
          this.m33 = 0.062 * yb + 0.062 * ub + 0.516 * this.m33 + 0 * this.m34;
          this.m34 = 0 * yb + 0 * ub + 0 * Cb + this.m34;
          this.m35 = 0 * yb + 0 * ub + 0 * Cb + 0 * vb;
          var Bb = this.m41,
            Ma = this.m42,
            Eb = this.m43,
            tb = this.m44;
          this.m41 =
            0.618 * this.m41 +
            0.163 * this.m42 +
            0.163 * this.m43 +
            0 * this.m44;
          this.m42 =
            0.32 * Bb + 0.775 * this.m42 + 0.32 * this.m43 + 0 * this.m44;
          this.m43 = 0.062 * Bb + 0.062 * Ma + 0.516 * this.m43 + 0 * this.m44;
          this.m44 = 0 * Bb + 0 * Ma + 0 * Eb + this.m44;
          this.m45 = 0 * Bb + 0 * Ma + 0 * Eb + 0 * tb;
      }
      return this;
    },
    applyMatrix: function (a, b) {
      var c = a.a,
        d = a.r,
        e = a.g,
        f = a.b;
      a = J.clamp(
        (0.5 +
          d * this.m41 +
          e * this.m42 +
          f * this.m43 +
          c * this.m44 +
          this.m45) |
          0,
        0,
        255
      );
      var g = J.clamp(
          (0.5 +
            d * this.m11 +
            e * this.m12 +
            f * this.m13 +
            c * this.m14 +
            this.m15) |
            0,
          0,
          255
        ),
        h = J.clamp(
          (0.5 +
            d * this.m21 +
            e * this.m22 +
            f * this.m23 +
            c * this.m24 +
            this.m25) |
            0,
          0,
          255
        );
      c = J.clamp(
        (0.5 +
          d * this.m31 +
          e * this.m32 +
          f * this.m33 +
          c * this.m34 +
          this.m35) |
          0,
        0,
        255
      );
      b.a = a;
      b.r = g;
      b.g = h;
      b.b = c;
      return b;
    },
    transformVector: function (a) {
      var b = a[0],
        c = a[1],
        d = a[2],
        e = a[3],
        f =
          b * this.m21 + c * this.m22 + d * this.m23 + e * this.m24 + this.m25,
        g =
          b * this.m31 + c * this.m32 + d * this.m33 + e * this.m34 + this.m35,
        h =
          b * this.m41 + c * this.m42 + d * this.m43 + e * this.m44 + this.m45;
      a[0] =
        b * this.m11 + c * this.m12 + d * this.m13 + e * this.m14 + this.m15;
      a[1] = f;
      a[2] = g;
      a[3] = h;
      return a;
    },
    initHue: function () {
      if (!this.hueInitialized) {
        this.hueInitialized = !0;
        this.preHue = new Ia();
        this.preHue.rotateRed(45);
        this.preHue.rotateGreen(-39.182655);
        var a = [];
        a[0] = Ia.LUMA_R2;
        a[1] = Ia.LUMA_G2;
        a[2] = Ia.LUMA_B2;
        a[3] = 1;
        this.preHue.transformVector(a);
        var b = a[0] / a[2];
        a = a[1] / a[2];
        this.preHue.shearBlue(b, a);
        this.postHue = new Ia();
        this.postHue.shearBlue(-b, -a);
        this.postHue.rotateGreen(39.182655);
        this.postHue.rotateRed(-45);
      }
    },
    toArray: function (a) {
      a[0] = this.m11;
      a[1] = this.m12;
      a[2] = this.m13;
      a[3] = this.m14;
      a[4] = this.m15;
      a[5] = this.m21;
      a[6] = this.m22;
      a[7] = this.m23;
      a[8] = this.m24;
      a[9] = this.m25;
      a[10] = this.m31;
      a[11] = this.m32;
      a[12] = this.m33;
      a[13] = this.m34;
      a[14] = this.m35;
      a[15] = this.m41;
      a[16] = this.m42;
      a[17] = this.m43;
      a[18] = this.m44;
      a[19] = this.m45;
      return a;
    },
    set: function (a, b, c, d, e, f, g, h, n, k, m, l, p, r, q, t, u, x, v, w) {
      this.m11 = a;
      this.m12 = b;
      this.m13 = c;
      this.m14 = d;
      this.m15 = e;
      this.m21 = f;
      this.m22 = g;
      this.m23 = h;
      this.m24 = n;
      this.m25 = k;
      this.m31 = m;
      this.m32 = l;
      this.m33 = p;
      this.m34 = r;
      this.m35 = q;
      this.m41 = t;
      this.m42 = u;
      this.m43 = x;
      this.m44 = v;
      this.m45 = w;
    },
    mul: function (a, b, c, d, e, f, g, h, n, k, m, l, p, r, q, t, u, x, v, w) {
      var G = this.m11,
        me = this.m12,
        na = this.m13,
        pc = this.m14;
      this.m11 = this.m11 * a + this.m12 * f + this.m13 * m + this.m14 * t;
      this.m12 = G * b + this.m12 * g + this.m13 * l + this.m14 * u;
      this.m13 = G * c + me * h + this.m13 * p + this.m14 * x;
      this.m14 = G * d + me * n + na * r + this.m14 * v;
      this.m15 = G * e + me * k + na * q + pc * w;
      G = this.m21;
      me = this.m22;
      na = this.m23;
      pc = this.m24;
      this.m21 = this.m21 * a + this.m22 * f + this.m23 * m + this.m24 * t;
      this.m22 = G * b + this.m22 * g + this.m23 * l + this.m24 * u;
      this.m23 = G * c + me * h + this.m23 * p + this.m24 * x;
      this.m24 = G * d + me * n + na * r + this.m24 * v;
      this.m25 = G * e + me * k + na * q + pc * w;
      G = this.m31;
      me = this.m32;
      na = this.m33;
      pc = this.m34;
      this.m31 = this.m31 * a + this.m32 * f + this.m33 * m + this.m34 * t;
      this.m32 = G * b + this.m32 * g + this.m33 * l + this.m34 * u;
      this.m33 = G * c + me * h + this.m33 * p + this.m34 * x;
      this.m34 = G * d + me * n + na * r + this.m34 * v;
      this.m35 = G * e + me * k + na * q + pc * w;
      G = this.m41;
      me = this.m42;
      na = this.m43;
      pc = this.m44;
      this.m41 = this.m41 * a + this.m42 * f + this.m43 * m + this.m44 * t;
      this.m42 = G * b + this.m42 * g + this.m43 * l + this.m44 * u;
      this.m43 = G * c + me * h + this.m43 * p + this.m44 * x;
      this.m44 = G * d + me * n + na * r + this.m44 * v;
      this.m45 = G * e + me * k + na * q + pc * w;
    },
    __class__: Ia,
  };
  var Xt = function () {};
  p["com.stencyl.utils.HaxeDefines"] = Xt;
  Xt.__name__ = ["com", "stencyl", "utils", "HaxeDefines"];
  var Rl = function (a, b) {
    this.map = a;
    this.initializer = b;
  };
  p["com.stencyl.utils.LazyIntMap"] = Rl;
  Rl.__name__ = ["com", "stencyl", "utils", "LazyIntMap"];
  Rl.prototype = {
    map: null,
    initializer: null,
    get: function (a) {
      var b = this.map.h[a];
      null == b && ((b = this.initializer(a)), (this.map.h[a] = b));
      return b;
    },
    set: function (a, b) {
      this.map.h[a] = b;
    },
    exists: function (a) {
      return this.map.h.hasOwnProperty(a);
    },
    remove: function (a) {
      return this.map.remove(a);
    },
    keys: function () {
      return this.map.keys();
    },
    iterator: function () {
      return this.map.iterator();
    },
    __class__: Rl,
  };
  var $o = function (a, b) {
    this.map = a;
    this.initializer = b;
  };
  p["com.stencyl.utils.LazyStringMap"] = $o;
  $o.__name__ = ["com", "stencyl", "utils", "LazyStringMap"];
  $o.prototype = {
    map: null,
    initializer: null,
    get: function (a) {
      var b = this.map;
      b = null != t[a] ? b.getReserved(a) : b.h[a];
      if (null == b) {
        b = this.initializer(a);
        var c = this.map;
        null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
      }
      return b;
    },
    set: function (a, b) {
      var c = this.map;
      null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
    },
    exists: function (a) {
      var b = this.map;
      return null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a);
    },
    remove: function (a) {
      return this.map.remove(a);
    },
    keys: function () {
      return this.map.keys();
    },
    iterator: function () {
      var a = this.map;
      return new Oe(a, a.arrayKeys());
    },
    __class__: $o,
  };
  var yp = function () {};
  p["com.stencyl.utils.Mathematics"] = yp;
  yp.__name__ = ["com", "stencyl", "utils", "Mathematics"];
  yp.round = function (a) {
    return (0 < a ? a + 0.5 : 0 > a ? a - 0.5 : 0) | 0;
  };
  yp.clamp = function (a, b, c) {
    return a < b ? b : a > c ? c : a;
  };
  yp.fclamp = function (a, b, c) {
    return a < b ? b : a > c ? c : a;
  };
  var Bc = function (a) {
    this.points = a;
    this.combineClosePoints();
    this.combineColinearPoints();
    this.makeCCW();
  };
  p["com.stencyl.utils.PolyDecompBayazit"] = Bc;
  Bc.__name__ = ["com", "stencyl", "utils", "PolyDecompBayazit"];
  Bc.area = function (a, b, c) {
    return (b.x - a.x) * (c.y - a.y) - (c.x - a.x) * (b.y - a.y);
  };
  Bc.right = function (a, b, c) {
    return 0 > Bc.area(a, b, c);
  };
  Bc.rightOn = function (a, b, c) {
    return 0 >= Bc.area(a, b, c);
  };
  Bc.left = function (a, b, c) {
    return 0 < Bc.area(a, b, c);
  };
  Bc.leftOn = function (a, b, c) {
    return 0 <= Bc.area(a, b, c);
  };
  Bc.sqdist = function (a, b) {
    var c = b.x - a.x;
    a = b.y - a.y;
    return c * c + a * a;
  };
  Bc.getIntersection = function (a, b, c, d) {
    var e = b.y - a.y;
    b = a.x - b.x;
    a = e * a.x + b * a.y;
    var f = d.y - c.y;
    d = c.x - d.x;
    c = f * c.x + d * c.y;
    var g = e * d - f * b;
    return Math.abs(g) > Number.MIN_VALUE
      ? new Y((d * a - b * c) / g, (e * c - f * a) / g)
      : null;
  };
  Bc.prototype = {
    combineColinearPoints: function () {
      for (var a = [], b = 0, c = this.points.length; b < c; ) {
        var d = b++,
          e = this.at(d - 1),
          f = this.at(d);
        d = this.at(d + 1);
        null != Bc.getIntersection(e, f, f, d) && a.push(f);
      }
      this.points = a;
    },
    points: null,
    combineClosePoints: function () {
      for (var a = [], b = 0, c = this.points.length; b < c; ) {
        var d = b++,
          e = this.at(d);
        d = this.at(d + 1);
        Bc.sqdist(e, d) > Number.MIN_VALUE && a.push(e);
      }
      this.points = a;
    },
    at: function (a) {
      var b = this.points.length;
      return this.points[(a + b) % b];
    },
    isReflex: function (a) {
      return Bc.right(this.at(a - 1), this.at(a), this.at(a + 1));
    },
    polyFromRange: function (a, b) {
      return a < b
        ? new Bc(this.points.slice(a, b + 1))
        : new Bc(this.points.slice(a).concat(this.points.slice(0, b + 1)));
    },
    decompose: function (a) {
      if (!(3 > this.points.length)) {
        for (var b = 0, c = this.points.length; b < c; ) {
          var d = b++;
          if (this.isReflex(d)) {
            var e = Number.MAX_VALUE,
              f = null;
            b = 0;
            for (
              var g = Number.MAX_VALUE,
                h = null,
                n = (c = 0),
                k = this.points.length;
              n < k;

            ) {
              var m = n++;
              if (
                Bc.left(this.at(d - 1), this.at(d), this.at(m)) &&
                Bc.rightOn(this.at(d - 1), this.at(d), this.at(m - 1))
              ) {
                var l = Bc.getIntersection(
                  this.at(d - 1),
                  this.at(d),
                  this.at(m),
                  this.at(m - 1)
                );
                if (Bc.right(this.at(d + 1), this.at(d), l)) {
                  var p = Bc.sqdist(this.at(d), l);
                  p < g && ((g = p), (h = l), (c = m));
                }
              }
              Bc.left(this.at(d + 1), this.at(d), this.at(m + 1)) &&
                Bc.rightOn(this.at(d + 1), this.at(d), this.at(m)) &&
                ((l = Bc.getIntersection(
                  this.at(d + 1),
                  this.at(d),
                  this.at(m),
                  this.at(m + 1)
                )),
                Bc.left(this.at(d - 1), this.at(d), l) &&
                  ((p = Bc.sqdist(this.at(d), l)),
                  p < e && ((e = p), (f = l), (b = m))));
            }
            if (c == (b + 1) % this.points.length)
              (e = new Y(0.5 * (h.x + f.x), 0.5 * (h.y + f.y))),
                (f = this.polyFromRange(d, b)),
                f.points.push(e),
                (d =
                  d < b ? this.polyFromRange(c, d) : this.polyFromRange(0, d)),
                d.points.push(e);
            else {
              c > b && (b += this.points.length);
              e = 0;
              for (f = Number.MAX_VALUE; c <= b; )
                Bc.leftOn(this.at(d - 1), this.at(d), this.at(c)) &&
                  Bc.rightOn(this.at(d + 1), this.at(d), this.at(c)) &&
                  ((g = Bc.sqdist(this.at(d), this.at(c))),
                  g < f && ((f = g), this.at(c), (e = c % this.points.length))),
                  ++c;
              f = this.polyFromRange(d, e);
              d = this.polyFromRange(e, d);
            }
            f.points.length < d.points.length
              ? (f.decompose(a), d.decompose(a))
              : (d.decompose(a), f.decompose(a));
            return;
          }
        }
        3 <= this.points.length && a(this);
      }
    },
    makeCCW: function () {
      for (var a = 0, b = 1, c = this.points.length; b < c; ) {
        var d = b++;
        if (
          this.at(d).y < this.at(a).y ||
          (this.at(d).y == this.at(a).y && this.at(d).x > this.at(a).x)
        )
          a = d;
      }
      Bc.left(this.at(a - 1), this.at(a), this.at(a + 1)) ||
        this.points.reverse();
    },
    __class__: Bc,
  };
  var Kd = function (a, b, c) {
    null == c && (c = 0);
    null == b && (b = 0);
    null == a && (a = 0);
    this.r = a;
    this.g = b;
    this.b = c;
  };
  p["com.stencyl.utils.RGB"] = Kd;
  Kd.__name__ = ["com", "stencyl", "utils", "RGB"];
  Kd.setRGBi = function (a, b, c) {
    return ((a & 255) << 16) | ((b & 255) << 8) | (c & 255);
  };
  Kd.setRGBf = function (a, b, c) {
    a = 255 * (0 > a ? 0 : 1 < a ? 1 : a);
    b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
    c = 255 * (0 > c ? 0 : 1 < c ? 1 : c);
    return (
      ((((0 < a ? a + 0.5 : 0 > a ? a - 0.5 : 0) | 0) & 255) << 16) |
      ((((0 < b ? b + 0.5 : 0 > b ? b - 0.5 : 0) | 0) & 255) << 8) |
      (((0 < c ? c + 0.5 : 0 > c ? c - 0.5 : 0) | 0) & 255)
    );
  };
  Kd.getR = function (a) {
    return (a >>> 16) & 255;
  };
  Kd.getRf = function (a) {
    return 0.00392156862745098 * ((a >>> 16) & 255);
  };
  Kd.getG = function (a) {
    return (a >>> 8) & 255;
  };
  Kd.getGf = function (a) {
    return 0.00392156862745098 * ((a >>> 8) & 255);
  };
  Kd.getB = function (a) {
    return a & 255;
  };
  Kd.getBf = function (a) {
    return 0.00392156862745098 * (a & 255);
  };
  Kd.setR = function (a, b) {
    return ((b & 255) << 16) | (a & -16711681);
  };
  Kd.setRf = function (a, b) {
    b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
    return (
      ((((0 < b ? b + 0.5 : 0 > b ? b - 0.5 : 0) | 0) & 255) << 16) |
      (a & -16711681)
    );
  };
  Kd.setG = function (a, b) {
    return ((b & 255) << 8) | (a & -65281);
  };
  Kd.setGf = function (a, b) {
    b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
    return (
      ((((0 < b ? b + 0.5 : 0 > b ? b - 0.5 : 0) | 0) & 255) << 8) |
      (a & -65281)
    );
  };
  Kd.setB = function (a, b) {
    return (b & 255) | (a & -256);
  };
  Kd.setBf = function (a, b) {
    b = 255 * (0 > b ? 0 : 1 < b ? 1 : b);
    return (((0 < b ? b + 0.5 : 0 > b ? b - 0.5 : 0) | 0) & 255) | (a & -256);
  };
  Kd.prototype = {
    r: null,
    g: null,
    b: null,
    set: function (a, b, c) {
      this.r = a;
      this.g = b;
      this.b = c;
    },
    lerp: function (a, b, c) {
      b.r = this.r + (a.r - this.r) * c;
      b.g = this.g + (a.g - this.g) * c;
      b.b = this.b + (a.b - this.b) * c;
    },
    getR8: function () {
      var a = 255 * this.r;
      return (0 < a ? a + 0.5 : 0 > a ? a - 0.5 : 0) | 0;
    },
    getG8: function () {
      var a = 255 * this.g;
      return (0 < a ? a + 0.5 : 0 > a ? a - 0.5 : 0) | 0;
    },
    getB8: function () {
      var a = 255 * this.b;
      return (0 < a ? a + 0.5 : 0 > a ? a - 0.5 : 0) | 0;
    },
    get24: function () {
      var a = 255 * this.r,
        b = 255 * this.g,
        c = 255 * this.b;
      return (
        (((0 < a ? a + 0.5 : 0 > a ? a - 0.5 : 0) | 0) << 16) |
        (((0 < b ? b + 0.5 : 0 > b ? b - 0.5 : 0) | 0) << 8) |
        (0 < c ? c + 0.5 : 0 > c ? c - 0.5 : 0) |
        0
      );
    },
    set24: function (a, b, c) {
      this.r = 0.00392156862745098 * (a & 255);
      this.g = 0.00392156862745098 * (b & 255);
      this.b = 0.00392156862745098 * (c & 255);
    },
    copy: function (a) {
      a.r = this.r;
      a.g = this.g;
      a.b = this.b;
      return a;
    },
    __class__: Kd,
  };
  var Yf = function (a, b) {
    null == b && (b = 0);
    null == a && (a = 1);
    this.volume = a;
    this.pan = b;
    this.rightToRight =
      this.rightToLeft =
      this.leftToRight =
      this.leftToLeft =
        0;
  };
  p["openfl.media.SoundTransform"] = Yf;
  Yf.__name__ = ["openfl", "media", "SoundTransform"];
  Yf.prototype = {
    leftToLeft: null,
    leftToRight: null,
    pan: null,
    rightToLeft: null,
    rightToRight: null,
    volume: null,
    clone: function () {
      return new Yf(this.volume, this.pan);
    },
    __class__: Yf,
  };
  var la = function () {
    this.h = {};
  };
  p["haxe.ds.StringMap"] = la;
  la.__name__ = ["haxe", "ds", "StringMap"];
  la.__interfaces__ = [Fd];
  la.prototype = {
    h: null,
    rh: null,
    set: function (a, b) {
      null != t[a] ? this.setReserved(a, b) : (this.h[a] = b);
    },
    get: function (a) {
      return null != t[a] ? this.getReserved(a) : this.h[a];
    },
    exists: function (a) {
      return null != t[a] ? this.existsReserved(a) : this.h.hasOwnProperty(a);
    },
    setReserved: function (a, b) {
      null == this.rh && (this.rh = {});
      this.rh["$" + a] = b;
    },
    getReserved: function (a) {
      return null == this.rh ? null : this.rh["$" + a];
    },
    existsReserved: function (a) {
      return null == this.rh ? !1 : this.rh.hasOwnProperty("$" + a);
    },
    remove: function (a) {
      if (null != t[a]) {
        a = "$" + a;
        if (null == this.rh || !this.rh.hasOwnProperty(a)) return !1;
        delete this.rh[a];
      } else {
        if (!this.h.hasOwnProperty(a)) return !1;
        delete this.h[a];
      }
      return !0;
    },
    keys: function () {
      return Q.iter(this.arrayKeys());
    },
    arrayKeys: function () {
      var a = [],
        b;
      for (b in this.h) this.h.hasOwnProperty(b) && a.push(b);
      if (null != this.rh)
        for (b in this.rh) 36 == b.charCodeAt(0) && a.push(b.substr(1));
      return a;
    },
    iterator: function () {
      return new Oe(this, this.arrayKeys());
    },
    toString: function () {
      var a = "{";
      for (var b = this.arrayKeys(), c = 0, d = b.length; c < d; ) {
        var e = c++,
          f = b[e];
        a += null == f ? "null" : "" + f;
        a += " => ";
        a += P.string(P.string(null != t[f] ? this.getReserved(f) : this.h[f]));
        e < b.length - 1 && (a += ", ");
      }
      return a + "}";
    },
    __class__: la,
  };
  var Ca = function () {
    this.h = {};
  };
  p["haxe.ds.IntMap"] = Ca;
  Ca.__name__ = ["haxe", "ds", "IntMap"];
  Ca.__interfaces__ = [Fd];
  Ca.prototype = {
    h: null,
    set: function (a, b) {
      this.h[a] = b;
    },
    get: function (a) {
      return this.h[a];
    },
    exists: function (a) {
      return this.h.hasOwnProperty(a);
    },
    remove: function (a) {
      if (!this.h.hasOwnProperty(a)) return !1;
      delete this.h[a];
      return !0;
    },
    keys: function () {
      var a = [],
        b;
      for (b in this.h) this.h.hasOwnProperty(b) && a.push(b | 0);
      return Q.iter(a);
    },
    iterator: function () {
      return {
        ref: this.h,
        it: this.keys(),
        hasNext: function () {
          return this.it.hasNext();
        },
        next: function () {
          var a = this.it.next();
          return this.ref[a];
        },
      };
    },
    __class__: Ca,
  };
  var xi = function (a, b, c, d, e, f) {
    null == f && (f = 0);
    null == e && (e = 0);
    null == d && (d = 1);
    null == c && (c = 0);
    null == b && (b = 0);
    null == a && (a = 1);
    this.a = a;
    this.b = b;
    this.c = c;
    this.d = d;
    this.tx = e;
    this.ty = f;
  };
  p["lime.math.Matrix3"] = xi;
  xi.__name__ = ["lime", "math", "Matrix3"];
  xi.prototype = {
    a: null,
    b: null,
    c: null,
    d: null,
    tx: null,
    ty: null,
    clone: function () {
      return new xi(this.a, this.b, this.c, this.d, this.tx, this.ty);
    },
    concat: function (a) {
      var b = this.a * a.a + this.b * a.c;
      this.b = this.a * a.b + this.b * a.d;
      this.a = b;
      b = this.c * a.a + this.d * a.c;
      this.d = this.c * a.b + this.d * a.d;
      this.c = b;
      b = this.tx * a.a + this.ty * a.c + a.tx;
      this.ty = this.tx * a.b + this.ty * a.d + a.ty;
      this.tx = b;
    },
    copyColumnFrom: function (a, b) {
      if (2 < a) throw new v("Column " + a + " out of bounds (2)");
      0 == a
        ? ((this.a = b.x), (this.b = b.y))
        : 1 == a
        ? ((this.c = b.x), (this.d = b.y))
        : ((this.tx = b.x), (this.ty = b.y));
    },
    copyColumnTo: function (a, b) {
      if (2 < a) throw new v("Column " + a + " out of bounds (2)");
      0 == a
        ? ((b.x = this.a), (b.y = this.b), (b.z = 0))
        : 1 == a
        ? ((b.x = this.c), (b.y = this.d), (b.z = 0))
        : ((b.x = this.tx), (b.y = this.ty), (b.z = 1));
    },
    copyFrom: function (a) {
      this.a = a.a;
      this.b = a.b;
      this.c = a.c;
      this.d = a.d;
      this.tx = a.tx;
      this.ty = a.ty;
    },
    copyRowFrom: function (a, b) {
      if (2 < a) throw new v("Row " + a + " out of bounds (2)");
      0 == a
        ? ((this.a = b.x), (this.c = b.y), (this.tx = b.z))
        : 1 == a && ((this.b = b.x), (this.d = b.y), (this.ty = b.z));
    },
    copyRowTo: function (a, b) {
      if (2 < a) throw new v("Row " + a + " out of bounds (2)");
      0 == a
        ? ((b.x = this.a), (b.y = this.c), (b.z = this.tx))
        : 1 == a
        ? ((b.x = this.b), (b.y = this.d), (b.z = this.ty))
        : ((b.x = 0), (b.y = 0), (b.z = 1));
    },
    createBox: function (a, b, c, d, e) {
      null == e && (e = 0);
      null == d && (d = 0);
      null == c && (c = 0);
      if (0 != c) {
        var f = Math.cos(c);
        c = Math.sin(c);
        this.a = f * a;
        this.b = c * b;
        this.c = -c * a;
        this.d = f * b;
      } else (this.a = a), (this.c = this.b = 0), (this.d = b);
      this.tx = d;
      this.ty = e;
    },
    createGradientBox: function (a, b, c, d, e) {
      null == e && (e = 0);
      null == d && (d = 0);
      null == c && (c = 0);
      this.a = a / 1638.4;
      this.d = b / 1638.4;
      if (0 != c) {
        var f = Math.cos(c);
        c = Math.sin(c);
        this.b = c * this.d;
        this.c = -c * this.a;
        this.a *= f;
        this.d *= f;
      } else this.c = this.b = 0;
      this.tx = d + a / 2;
      this.ty = e + b / 2;
    },
    equals: function (a) {
      return null != a &&
        this.tx == a.tx &&
        this.ty == a.ty &&
        this.a == a.a &&
        this.b == a.b &&
        this.c == a.c
        ? this.d == a.d
        : !1;
    },
    deltaTransformVector: function (a, b) {
      null == b && (b = new xd());
      b.x = a.x * this.a + a.y * this.c;
      b.y = a.x * this.b + a.y * this.d;
      return b;
    },
    identity: function () {
      this.a = 1;
      this.c = this.b = 0;
      this.d = 1;
      this.ty = this.tx = 0;
    },
    invert: function () {
      var a = this.a * this.d - this.b * this.c;
      if (0 == a)
        (this.a = this.b = this.c = this.d = 0),
          (this.tx = -this.tx),
          (this.ty = -this.ty);
      else {
        a = 1 / a;
        var b = this.d * a;
        this.d = this.a * a;
        this.a = b;
        this.b *= -a;
        this.c *= -a;
        a = -this.a * this.tx - this.c * this.ty;
        this.ty = -this.b * this.tx - this.d * this.ty;
        this.tx = a;
      }
      return this;
    },
    rotate: function (a) {
      var b = Math.cos(a);
      a = Math.sin(a);
      var c = this.a * b - this.b * a;
      this.b = this.a * a + this.b * b;
      this.a = c;
      c = this.c * b - this.d * a;
      this.d = this.c * a + this.d * b;
      this.c = c;
      c = this.tx * b - this.ty * a;
      this.ty = this.tx * a + this.ty * b;
      this.tx = c;
    },
    scale: function (a, b) {
      this.a *= a;
      this.b *= b;
      this.c *= a;
      this.d *= b;
      this.tx *= a;
      this.ty *= b;
    },
    setRotation: function (a, b) {
      null == b && (b = 1);
      this.a = Math.cos(a) * b;
      this.c = Math.sin(a) * b;
      this.b = -this.c;
      this.d = this.a;
    },
    setTo: function (a, b, c, d, e, f) {
      this.a = a;
      this.b = b;
      this.c = c;
      this.d = d;
      this.tx = e;
      this.ty = f;
    },
    to3DString: function (a) {
      null == a && (a = !1);
      return a
        ? "matrix3d(" +
            this.a +
            ", " +
            this.b +
            ", 0, 0, " +
            this.c +
            ", " +
            this.d +
            ", 0, 0, 0, 0, 1, 0, " +
            (this.tx | 0) +
            ", " +
            (this.ty | 0) +
            ", 0, 1)"
        : "matrix3d(" +
            this.a +
            ", " +
            this.b +
            ", 0, 0, " +
            this.c +
            ", " +
            this.d +
            ", 0, 0, 0, 0, 1, 0, " +
            this.tx +
            ", " +
            this.ty +
            ", 0, 1)";
    },
    toString: function () {
      return (
        "matrix(" +
        this.a +
        ", " +
        this.b +
        ", " +
        this.c +
        ", " +
        this.d +
        ", " +
        this.tx +
        ", " +
        this.ty +
        ")"
      );
    },
    transformRect: function (a, b) {
      null == b && (b = new Td());
      var c = this.a * a.x + this.c * a.y,
        d = c,
        e = this.b * a.x + this.d * a.y,
        f = e,
        g = this.a * (a.x + a.width) + this.c * a.y,
        h = this.b * (a.x + a.width) + this.d * a.y;
      g < c && (c = g);
      h < e && (e = h);
      g > d && (d = g);
      h > f && (f = h);
      g = this.a * (a.x + a.width) + this.c * (a.y + a.height);
      h = this.b * (a.x + a.width) + this.d * (a.y + a.height);
      g < c && (c = g);
      h < e && (e = h);
      g > d && (d = g);
      h > f && (f = h);
      g = this.a * a.x + this.c * (a.y + a.height);
      h = this.b * a.x + this.d * (a.y + a.height);
      g < c && (c = g);
      h < e && (e = h);
      g > d && (d = g);
      h > f && (f = h);
      b.setTo(c + g, e + h, d - c, f - e);
      return b;
    },
    transformVector: function (a, b) {
      null == b && (b = new xd());
      b.x = a.x * this.a + a.y * this.c + this.tx;
      b.y = a.x * this.b + a.y * this.d + this.ty;
      return b;
    },
    translate: function (a, b) {
      this.tx += a;
      this.ty += b;
    },
    __class__: xi,
  };
  var ya = function (a, b, c, d, e, f) {
    null == f && (f = 0);
    null == e && (e = 0);
    null == d && (d = 1);
    null == c && (c = 0);
    null == b && (b = 0);
    null == a && (a = 1);
    this.a = a;
    this.b = b;
    this.c = c;
    this.d = d;
    this.tx = e;
    this.ty = f;
  };
  p["openfl.geom.Matrix"] = ya;
  ya.__name__ = ["openfl", "geom", "Matrix"];
  ya.prototype = {
    a: null,
    b: null,
    c: null,
    d: null,
    tx: null,
    ty: null,
    __array: null,
    clone: function () {
      return new ya(this.a, this.b, this.c, this.d, this.tx, this.ty);
    },
    concat: function (a) {
      var b = this.a * a.a + this.b * a.c;
      this.b = this.a * a.b + this.b * a.d;
      this.a = b;
      b = this.c * a.a + this.d * a.c;
      this.d = this.c * a.b + this.d * a.d;
      this.c = b;
      b = this.tx * a.a + this.ty * a.c + a.tx;
      this.ty = this.tx * a.b + this.ty * a.d + a.ty;
      this.tx = b;
    },
    copyColumnFrom: function (a, b) {
      if (2 < a) throw new v("Column " + a + " out of bounds (2)");
      0 == a
        ? ((this.a = b.x), (this.b = b.y))
        : 1 == a
        ? ((this.c = b.x), (this.d = b.y))
        : ((this.tx = b.x), (this.ty = b.y));
    },
    copyColumnTo: function (a, b) {
      if (2 < a) throw new v("Column " + a + " out of bounds (2)");
      0 == a
        ? ((b.x = this.a), (b.y = this.b), (b.z = 0))
        : 1 == a
        ? ((b.x = this.c), (b.y = this.d), (b.z = 0))
        : ((b.x = this.tx), (b.y = this.ty), (b.z = 1));
    },
    copyFrom: function (a) {
      this.a = a.a;
      this.b = a.b;
      this.c = a.c;
      this.d = a.d;
      this.tx = a.tx;
      this.ty = a.ty;
    },
    copyRowFrom: function (a, b) {
      if (2 < a) throw new v("Row " + a + " out of bounds (2)");
      0 == a
        ? ((this.a = b.x), (this.c = b.y), (this.tx = b.z))
        : 1 == a && ((this.b = b.x), (this.d = b.y), (this.ty = b.z));
    },
    copyRowTo: function (a, b) {
      if (2 < a) throw new v("Row " + a + " out of bounds (2)");
      0 == a
        ? ((b.x = this.a), (b.y = this.c), (b.z = this.tx))
        : 1 == a
        ? ((b.x = this.b), (b.y = this.d), (b.z = this.ty))
        : b.setTo(0, 0, 1);
    },
    createBox: function (a, b, c, d, e) {
      null == e && (e = 0);
      null == d && (d = 0);
      null == c && (c = 0);
      if (0 != c) {
        var f = Math.cos(c);
        c = Math.sin(c);
        this.a = f * a;
        this.b = c * b;
        this.c = -c * a;
        this.d = f * b;
      } else (this.a = a), (this.c = this.b = 0), (this.d = b);
      this.tx = d;
      this.ty = e;
    },
    createGradientBox: function (a, b, c, d, e) {
      null == e && (e = 0);
      null == d && (d = 0);
      null == c && (c = 0);
      this.a = a / 1638.4;
      this.d = b / 1638.4;
      if (0 != c) {
        var f = Math.cos(c);
        c = Math.sin(c);
        this.b = c * this.d;
        this.c = -c * this.a;
        this.a *= f;
        this.d *= f;
      } else this.c = this.b = 0;
      this.tx = d + a / 2;
      this.ty = e + b / 2;
    },
    deltaTransformPoint: function (a) {
      return new Y(a.x * this.a + a.y * this.c, a.x * this.b + a.y * this.d);
    },
    equals: function (a) {
      return null != a &&
        this.tx == a.tx &&
        this.ty == a.ty &&
        this.a == a.a &&
        this.b == a.b &&
        this.c == a.c
        ? this.d == a.d
        : !1;
    },
    identity: function () {
      this.a = 1;
      this.c = this.b = 0;
      this.d = 1;
      this.ty = this.tx = 0;
    },
    invert: function () {
      var a = this.a * this.d - this.b * this.c;
      if (0 == a)
        (this.a = this.b = this.c = this.d = 0),
          (this.tx = -this.tx),
          (this.ty = -this.ty);
      else {
        a = 1 / a;
        var b = this.d * a;
        this.d = this.a * a;
        this.a = b;
        this.b *= -a;
        this.c *= -a;
        a = -this.a * this.tx - this.c * this.ty;
        this.ty = -this.b * this.tx - this.d * this.ty;
        this.tx = a;
      }
      return this;
    },
    rotate: function (a) {
      var b = Math.cos(a);
      a = Math.sin(a);
      var c = this.a * b - this.b * a;
      this.b = this.a * a + this.b * b;
      this.a = c;
      c = this.c * b - this.d * a;
      this.d = this.c * a + this.d * b;
      this.c = c;
      c = this.tx * b - this.ty * a;
      this.ty = this.tx * a + this.ty * b;
      this.tx = c;
    },
    scale: function (a, b) {
      this.a *= a;
      this.b *= b;
      this.c *= a;
      this.d *= b;
      this.tx *= a;
      this.ty *= b;
    },
    setRotation: function (a, b) {
      null == b && (b = 1);
      this.a = Math.cos(a) * b;
      this.c = Math.sin(a) * b;
      this.b = -this.c;
      this.d = this.a;
    },
    setTo: function (a, b, c, d, e, f) {
      this.a = a;
      this.b = b;
      this.c = c;
      this.d = d;
      this.tx = e;
      this.ty = f;
    },
    to3DString: function (a) {
      null == a && (a = !1);
      return a
        ? "matrix3d(" +
            this.a +
            ", " +
            this.b +
            ", 0, 0, " +
            this.c +
            ", " +
            this.d +
            ", 0, 0, 0, 0, 1, 0, " +
            (this.tx | 0) +
            ", " +
            (this.ty | 0) +
            ", 0, 1)"
        : "matrix3d(" +
            this.a +
            ", " +
            this.b +
            ", 0, 0, " +
            this.c +
            ", " +
            this.d +
            ", 0, 0, 0, 0, 1, 0, " +
            this.tx +
            ", " +
            this.ty +
            ", 0, 1)";
    },
    toMozString: function () {
      return (
        "matrix(" +
        this.a +
        ", " +
        this.b +
        ", " +
        this.c +
        ", " +
        this.d +
        ", " +
        this.tx +
        "px, " +
        this.ty +
        "px)"
      );
    },
    toString: function () {
      return (
        "matrix(" +
        this.a +
        ", " +
        this.b +
        ", " +
        this.c +
        ", " +
        this.d +
        ", " +
        this.tx +
        ", " +
        this.ty +
        ")"
      );
    },
    transformPoint: function (a) {
      return new Y(
        a.x * this.a + a.y * this.c + this.tx,
        a.x * this.b + a.y * this.d + this.ty
      );
    },
    translate: function (a, b) {
      this.tx += a;
      this.ty += b;
    },
    toArray: function (a) {
      null == a && (a = !1);
      null == this.__array && (this.__array = new vc(9));
      a
        ? ((this.__array[0] = this.a),
          (this.__array[1] = this.b),
          (this.__array[2] = 0),
          (this.__array[3] = this.c),
          (this.__array[4] = this.d),
          (this.__array[5] = 0),
          (this.__array[6] = this.tx),
          (this.__array[7] = this.ty))
        : ((this.__array[0] = this.a),
          (this.__array[1] = this.c),
          (this.__array[2] = this.tx),
          (this.__array[3] = this.b),
          (this.__array[4] = this.d),
          (this.__array[5] = this.ty),
          (this.__array[6] = 0),
          (this.__array[7] = 0));
      this.__array[8] = 1;
      return this.__array;
    },
    __cleanValues: function () {
      this.a = Math.round(1e3 * this.a) / 1e3;
      this.b = Math.round(1e3 * this.b) / 1e3;
      this.c = Math.round(1e3 * this.c) / 1e3;
      this.d = Math.round(1e3 * this.d) / 1e3;
      this.tx = Math.round(10 * this.tx) / 10;
      this.ty = Math.round(10 * this.ty) / 10;
    },
    __toMatrix3: function () {
      ya.__matrix3.setTo(this.a, this.b, this.c, this.d, this.tx, this.ty);
      return ya.__matrix3;
    },
    __transformInversePoint: function (a) {
      var b = this.a * this.d - this.b * this.c;
      if (0 == b) (a.x = -this.tx), (a.y = -this.ty);
      else {
        var c = (1 / b) * (this.c * (this.ty - a.y) + this.d * (a.x - this.tx));
        a.y = (1 / b) * (this.a * (a.y - this.ty) + this.b * (this.tx - a.x));
        a.x = c;
      }
    },
    __transformInverseX: function (a, b) {
      var c = this.a * this.d - this.b * this.c;
      return 0 == c
        ? -this.tx
        : (1 / c) * (this.c * (this.ty - b) + this.d * (a - this.tx));
    },
    __transformInverseY: function (a, b) {
      var c = this.a * this.d - this.b * this.c;
      return 0 == c
        ? -this.ty
        : (1 / c) * (this.a * (b - this.ty) + this.b * (this.tx - a));
    },
    __transformPoint: function (a) {
      var b = a.x,
        c = a.y;
      a.x = b * this.a + c * this.c + this.tx;
      a.y = b * this.b + c * this.d + this.ty;
    },
    __transformX: function (a, b) {
      return a * this.a + b * this.c + this.tx;
    },
    __transformY: function (a, b) {
      return a * this.b + b * this.d + this.ty;
    },
    __translateTransformed: function (a, b) {
      this.tx = a * this.a + b * this.c + this.tx;
      this.ty = a * this.b + b * this.d + this.ty;
    },
    __class__: ya,
  };
  var sc = function (a, b, c, d, e, f, g, h) {
    null == h && (h = 0);
    null == g && (g = 0);
    null == f && (f = 0);
    null == e && (e = 0);
    null == d && (d = 1);
    null == c && (c = 1);
    null == b && (b = 1);
    null == a && (a = 1);
    this.redMultiplier = a;
    this.greenMultiplier = b;
    this.blueMultiplier = c;
    this.alphaMultiplier = d;
    this.redOffset = e;
    this.greenOffset = f;
    this.blueOffset = g;
    this.alphaOffset = h;
  };
  p["openfl.geom.ColorTransform"] = sc;
  sc.__name__ = ["openfl", "geom", "ColorTransform"];
  sc.prototype = {
    alphaMultiplier: null,
    alphaOffset: null,
    blueMultiplier: null,
    blueOffset: null,
    greenMultiplier: null,
    greenOffset: null,
    redMultiplier: null,
    redOffset: null,
    concat: function (a) {
      this.redOffset = a.redOffset * this.redMultiplier + this.redOffset;
      this.greenOffset =
        a.greenOffset * this.greenMultiplier + this.greenOffset;
      this.blueOffset = a.blueOffset * this.blueMultiplier + this.blueOffset;
      this.alphaOffset =
        a.alphaOffset * this.alphaMultiplier + this.alphaOffset;
      this.redMultiplier *= a.redMultiplier;
      this.greenMultiplier *= a.greenMultiplier;
      this.blueMultiplier *= a.blueMultiplier;
      this.alphaMultiplier *= a.alphaMultiplier;
    },
    toString: function () {
      return (
        "(redMultiplier=" +
        this.redMultiplier +
        ", greenMultiplier=" +
        this.greenMultiplier +
        ", blueMultiplier=" +
        this.blueMultiplier +
        ", alphaMultiplier=" +
        this.alphaMultiplier +
        ", redOffset=" +
        this.redOffset +
        ", greenOffset=" +
        this.greenOffset +
        ", blueOffset=" +
        this.blueOffset +
        ", alphaOffset=" +
        this.alphaOffset +
        ")"
      );
    },
    __clone: function () {
      return new sc(
        this.redMultiplier,
        this.greenMultiplier,
        this.blueMultiplier,
        this.alphaMultiplier,
        this.redOffset,
        this.greenOffset,
        this.blueOffset,
        this.alphaOffset
      );
    },
    __copyFrom: function (a) {
      this.redMultiplier = a.redMultiplier;
      this.greenMultiplier = a.greenMultiplier;
      this.blueMultiplier = a.blueMultiplier;
      this.alphaMultiplier = a.alphaMultiplier;
      this.redOffset = a.redOffset;
      this.greenOffset = a.greenOffset;
      this.blueOffset = a.blueOffset;
      this.alphaOffset = a.alphaOffset;
    },
    __combine: function (a) {
      this.redMultiplier *= a.redMultiplier;
      this.greenMultiplier *= a.greenMultiplier;
      this.blueMultiplier *= a.blueMultiplier;
      this.alphaMultiplier *= a.alphaMultiplier;
      this.redOffset += a.redOffset;
      this.greenOffset += a.greenOffset;
      this.blueOffset += a.blueOffset;
      this.alphaOffset += a.alphaOffset;
    },
    __identity: function () {
      this.alphaMultiplier =
        this.blueMultiplier =
        this.greenMultiplier =
        this.redMultiplier =
          1;
      this.alphaOffset =
        this.blueOffset =
        this.greenOffset =
        this.redOffset =
          0;
    },
    __invert: function () {
      this.redMultiplier = 1 / this.redMultiplier;
      this.greenMultiplier = 1 / this.greenMultiplier;
      this.blueMultiplier = 1 / this.blueMultiplier;
      this.alphaMultiplier = 1 / this.alphaMultiplier;
      this.redOffset = -this.redOffset;
      this.greenOffset = -this.greenOffset;
      this.blueOffset = -this.blueOffset;
      this.alphaOffset = -this.alphaOffset;
    },
    __equals: function (a, b) {
      return null == a ||
        this.redMultiplier != a.redMultiplier ||
        this.greenMultiplier != a.greenMultiplier ||
        this.blueMultiplier != a.blueMultiplier ||
        (!b && this.alphaMultiplier != a.alphaMultiplier) ||
        this.redOffset != a.redOffset ||
        this.greenOffset != a.greenOffset ||
        this.blueOffset != a.blueOffset
        ? !1
        : this.alphaOffset == a.alphaOffset;
    },
    __isDefault: function (a) {
      return a
        ? 1 == this.redMultiplier &&
          1 == this.greenMultiplier &&
          1 == this.blueMultiplier &&
          0 == this.redOffset &&
          0 == this.greenOffset &&
          0 == this.blueOffset
          ? 0 == this.alphaOffset
          : !1
        : 1 == this.redMultiplier &&
          1 == this.greenMultiplier &&
          1 == this.blueMultiplier &&
          1 == this.alphaMultiplier &&
          0 == this.redOffset &&
          0 == this.greenOffset &&
          0 == this.blueOffset
        ? 0 == this.alphaOffset
        : !1;
    },
    __setArrays: function (a, b) {
      a[0] = this.redMultiplier;
      a[1] = this.greenMultiplier;
      a[2] = this.blueMultiplier;
      a[3] = this.alphaMultiplier;
      b[0] = this.redOffset;
      b[1] = this.greenOffset;
      b[2] = this.blueOffset;
      b[3] = this.alphaOffset;
    },
    get_color: function () {
      return (
        ((this.redOffset | 0) << 16) |
        ((this.greenOffset | 0) << 8) |
        this.blueOffset |
        0
      );
    },
    set_color: function (a) {
      this.redOffset = (a >> 16) & 255;
      this.greenOffset = (a >> 8) & 255;
      this.blueOffset = a & 255;
      this.blueMultiplier = this.greenMultiplier = this.redMultiplier = 0;
      return this.get_color();
    },
    __toLimeColorMatrix: function () {
      if (null == sc.__limeColorMatrix) {
        var a = new vc(20);
        sc.__limeColorMatrix = a;
      }
      sc.__limeColorMatrix[0] = this.redMultiplier;
      sc.__limeColorMatrix[4] = this.redOffset / 255;
      sc.__limeColorMatrix[6] = this.greenMultiplier;
      sc.__limeColorMatrix[9] = this.greenOffset / 255;
      sc.__limeColorMatrix[12] = this.blueMultiplier;
      sc.__limeColorMatrix[14] = this.blueOffset / 255;
      sc.__limeColorMatrix[18] = this.alphaMultiplier;
      sc.__limeColorMatrix[19] = this.alphaOffset / 255;
      return sc.__limeColorMatrix;
    },
    __class__: sc,
    __properties__: { set_color: "set_color", get_color: "get_color" },
  };
  var J = function () {};
  p["com.stencyl.utils.Utils"] = J;
  J.__name__ = ["com", "stencyl", "utils", "Utils"];
  J.__properties__ = {
    set_time: "set_time",
    set_pan: "set_pan",
    get_pan: "get_pan",
    set_volume: "set_volume",
    get_volume: "get_volume",
  };
  J.toBoolean = function (a) {
    return "true" == a ? !0 : !1;
  };
  J.clear = function (a) {
    a.length = 0;
  };
  J.removeValueFromArray = function (a, b) {
    for (var c = a.length - 1; -1 < c; ) a[c] == b && a.splice(c, 1), --c;
  };
  J.contains = function (a, b) {
    if (null == a) return !1;
    for (var c = a.length - 1; -1 < c; ) {
      if (a[c] == b) return !0;
      --c;
    }
    return !1;
  };
  J.mapContainsValue = function (a, b) {
    for (a = new Oe(a, a.arrayKeys()); a.hasNext(); )
      if (a.next() == b) return !0;
    return !1;
  };
  J.mapCount = function (a) {
    var b = 0;
    for (a = new Oe(a, a.arrayKeys()); a.hasNext(); ) a.next(), ++b;
    return b;
  };
  J.mapToList = function (a, b) {
    var c = [];
    for (a = "keys" == b ? a.keys() : new Oe(a, a.arrayKeys()); a.hasNext(); )
      (b = a.next()), c.push(b);
    return c;
  };
  J.clone = function (a) {
    return J.cloner.clone(a);
  };
  J.copyMap = function (a) {
    for (var b = new la(), c = a.keys(); c.hasNext(); ) {
      var d = c.next(),
        e = null != t[d] ? a.getReserved(d) : a.h[d];
      null != t[d] ? b.setReserved(d, e) : (b.h[d] = e);
    }
    return b;
  };
  J.applyToAllChildren = function (a, b) {
    for (var c = 0, d = a.get_numChildren(); c < d; ) {
      var e = c++;
      e = a.getChildAt(e);
      u.__instanceof(e, wd) && J.applyToAllChildren(e, b);
      b(e);
    }
  };
  J.removeAllChildren = function (a) {
    for (; 0 < a.get_numChildren(); ) {
      var b = a.getChildAt(0);
      u.__instanceof(b, wd) && J.removeAllChildren(u.__cast(b, wd));
      u.__instanceof(b, pg) && J.removeAllTiles(b);
      a.removeChild(b);
    }
  };
  J.removeAllTiles = function (a) {
    for (; 0 < a.get_numTiles(); ) {
      var b = a.getTileAt(0);
      u.__instanceof(b, pk) && J.removeAllTiles(b);
      a.removeTile(b);
    }
  };
  J.demouse = function (a) {
    for (var b = 0, c = a.get_numChildren(); b < c; ) {
      var d = b++;
      d = a.getChildAt(d);
      u.__instanceof(d, wd) && J.demouse(u.__cast(d, wd));
      a.mouseChildren = !1;
      a.mouseEnabled = !1;
    }
  };
  J.getAnchorPoint = function (a) {
    a = a.getRect(a);
    return new Y(-1 * a.x, -1 * a.y);
  };
  J.setCamera = function (a, b) {
    null == b && (b = 0);
    null == a && (a = 0);
    J.camera.x = a;
    J.camera.y = b;
  };
  J.resetCamera = function () {
    J.camera.x = J.camera.y = 0;
  };
  J.get_volume = function () {
    return J._volume;
  };
  J.set_volume = function (a) {
    0 > a && (a = 0);
    if (J._volume == a) return a;
    J._soundTransform.volume = J._volume = a;
    return J._volume;
  };
  J.get_pan = function () {
    return J._pan;
  };
  J.set_pan = function (a) {
    -1 > a && (a = -1);
    1 < a && (a = 1);
    if (J._pan == a) return a;
    J._soundTransform.pan = J._pan = a;
    return J._pan;
  };
  J.sign = function (a) {
    return 0 > a ? -1 : 0 < a ? 1 : 0;
  };
  J.approach = function (a, b, c) {
    return a < b ? (b < a + c ? b : a + c) : b > a - c ? b : a - c;
  };
  J.lerp = function (a, b, c) {
    null == c && (c = 1);
    return a + (b - a) * c;
  };
  J.colorLerp = function (a, b, c) {
    null == c && (c = 1);
    if (0 >= c) return a;
    if (1 <= c) return b;
    var d = (a >> 24) & 255,
      e = (a >> 16) & 255,
      f = (a >> 8) & 255;
    a &= 255;
    return (
      ((d + (((((b >> 24) & 255) - d) * c) | 0)) << 24) |
      ((e + (((((b >> 16) & 255) - e) * c) | 0)) << 16) |
      ((f + (((((b >> 8) & 255) - f) * c) | 0)) << 8) |
      (a + ((((b & 255) - a) * c) | 0))
    );
  };
  J.stepTowards = function (a, b, c, d) {
    null == d && (d = 1);
    J.point.x = b - a.x;
    J.point.y = c - a.y;
    J.point.get_length() <= d
      ? ((a.x = b), (a.y = c))
      : (J.point.normalize(d), (a.x += J.point.x), (a.y += J.point.y));
  };
  J.anchorTo = function (a, b, c) {
    null == c && (c = 0);
    J.point.x = a.x - b.x;
    J.point.y = a.y - b.y;
    J.point.get_length() > c && J.point.normalize(c);
    a.x = b.x + J.point.x;
    a.y = b.y + J.point.y;
  };
  J.angle = function (a, b, c, d) {
    a = 57.29577951308402 * Math.atan2(d - b, c - a);
    return 0 > a ? a + 360 : a;
  };
  J.angleXY = function (a, b, c, d, e) {
    null == e && (e = 0);
    null == d && (d = 0);
    null == c && (c = 1);
    b *= 0.01745329251994278;
    a.x = Math.cos(b) * c + d;
    a.y = Math.sin(b) * c + e;
  };
  J.rotateAround = function (a, b, c, d) {
    null == d && (d = !0);
    null == c && (c = 0);
    d &&
      ((d = 57.29577951308402 * Math.atan2(a.y - b.y, a.x - b.x)),
      (c += 0 > d ? d + 360 : d));
    d = b.x;
    var e = b.y,
      f = a.x,
      g = a.y;
    d = Math.sqrt((f - d) * (f - d) + (g - e) * (g - e));
    c *= 0.01745329251994278;
    a.x = Math.cos(c) * d + b.x;
    a.y = Math.sin(c) * d + b.y;
  };
  J.distance = function (a, b, c, d) {
    null == d && (d = 0);
    null == c && (c = 0);
    return Math.sqrt((c - a) * (c - a) + (d - b) * (d - b));
  };
  J.distanceSquared = function (a, b, c, d) {
    null == d && (d = 0);
    null == c && (c = 0);
    return (c - a) * (c - a) + (d - b) * (d - b);
  };
  J.distanceRects = function (a, b, c, d, e, f, g, h) {
    if (a < e + g && e < a + c)
      return b < f + h && f < b + d ? 0 : b > f ? b - (f + h) : f - (b + d);
    if (b < f + h && f < b + d) return a > e ? a - (e + g) : e - (a + c);
    if (a > e) {
      if (b > f)
        return (
          (e += g), (f += h), Math.sqrt((e - a) * (e - a) + (f - b) * (f - b))
        );
      b += d;
      e += g;
      return Math.sqrt((e - a) * (e - a) + (f - b) * (f - b));
    }
    if (b > f)
      return (
        (a += c), (f += h), Math.sqrt((e - a) * (e - a) + (f - b) * (f - b))
      );
    a += c;
    b += d;
    return Math.sqrt((e - a) * (e - a) + (f - b) * (f - b));
  };
  J.distanceRectPoint = function (a, b, c, d, e, f) {
    if (a >= c && a <= c + e)
      return b >= d && b <= d + f ? 0 : b > d ? b - (d + f) : d - b;
    if (b >= d && b <= d + f) return a > c ? a - (c + e) : c - a;
    if (a > c) {
      if (b > d)
        return (
          (c += e), (d += f), Math.sqrt((c - a) * (c - a) + (d - b) * (d - b))
        );
      c += e;
      return Math.sqrt((c - a) * (c - a) + (d - b) * (d - b));
    }
    b > d && (d += f);
    return Math.sqrt((c - a) * (c - a) + (d - b) * (d - b));
  };
  J.clamp = function (a, b, c) {
    if (c > b) return a < c || (a = c), a > b ? a : b;
    a < b || (a = b);
    return a > c ? a : c;
  };
  J.clampInRect = function (a, b, c, d, e, f) {
    null == f && (f = 0);
    a.x = J.clamp(a.x, b + f, b + d - f);
    a.y = J.clamp(a.y, c + f, c + e - f);
  };
  J.scale = function (a, b, c, d, e) {
    return d + ((a - b) / (c - b)) * (e - d);
  };
  J.scaleClamp = function (a, b, c, d, e) {
    a = d + ((a - b) / (c - b)) * (e - d);
    if (e > d) return a < e || (a = e), a > d ? a : d;
    a < d || (a = d);
    return a > e ? a : e;
  };
  J.indexOf = function (a, b) {
    for (var c = 0, d = 0; d < a.length; ) {
      var e = a[d];
      ++d;
      if (b == e) return c;
      ++c;
    }
    return -1;
  };
  J.next = function (a, b, c) {
    null == c && (c = !0);
    return c
      ? b[(J.indexOf(b, a) + 1) % b.length]
      : b[Math.max(J.indexOf(b, a) + 1, b.length - 1) | 0];
  };
  J.prev = function (a, b, c) {
    null == c && (c = !0);
    return c
      ? b[(J.indexOf(b, a) - 1 + b.length) % b.length]
      : b[Math.max(J.indexOf(b, a) - 1, 0) | 0];
  };
  J.swap = function (a, b, c) {
    return a == b ? c : b;
  };
  J.getColorRGB = function (a, b, c) {
    null == c && (c = 0);
    null == b && (b = 0);
    null == a && (a = 0);
    return (a << 16) | (b << 8) | c;
  };
  J.getRed = function (a) {
    return (a >> 16) & 255;
  };
  J.getGreen = function (a) {
    return (a >> 8) & 255;
  };
  J.getBlue = function (a) {
    return a & 255;
  };
  J.convertColor = function (a) {
    return 0 > a ? a + 16777216 : a;
  };
  J.timeFlag = function () {
    var a = new Date().getTime() / 1e3,
      b = a - J._time;
    J._time = a;
    return b;
  };
  J.frames = function (a, b, c) {
    null == c && (c = 0);
    var d = [];
    ++c;
    if (a < b) for (; a <= b; ) d.push(a), (a += c);
    else for (; a >= b; ) d.push(a), (a -= c);
    return d;
  };
  J.set_time = function (a) {
    J._time = a;
    return J._time;
  };
  J.saveToSharedObject = function (a, b, c) {
    a.data[b] = J.clone(c);
  };
  J.loadFromSharedObject = function (a, b) {
    return J.cloner.clone(V.field(a.data, b));
  };
  J.flushSharedObject = function (a, b) {
    var c = null;
    try {
      c = a.flush();
    } catch (d) {
      X.lastException = d;
      null != b && b(!1);
      return;
    }
    0 == c && null != b && b(!0);
  };
  J.saveMap = function (a, b, c) {
    b = od.getLocal(b);
    for (var d = a.keys(); d.hasNext(); ) {
      var e = d.next();
      b.data[e] = null != t[e] ? a.getReserved(e) : a.h[e];
    }
    J.flushSharedObject(b, c);
  };
  J.loadMap = function (a, b, c) {
    b = od.getLocal(b);
    for (var d = 0, e = V.fields(b.data); d < e.length; ) {
      var f = e[d];
      ++d;
      var g = V.field(b.data, f);
      null != t[f] ? a.setReserved(f, g) : (a.h[f] = g);
    }
    null != c && c(!0);
  };
  J.convertLegacySharedObject = function (a, b) {};
  J.getFlatName = function (a) {
    a = ba.replace(a, "/", "_");
    a = ba.replace(a, ".", "_");
    return (a = ba.replace(a, "-", "_"));
  };
  J.getAssetClass = function (a) {
    return qa.resolveClass("__ASSET__" + J.getFlatName(a));
  };
  J.getConfigBytes = function (a) {
    return Th.getBytes(J.getFlatName(a));
  };
  J.getConfigText = function (a) {
    return Th.getString(J.getFlatName(a));
  };
  J.getConfigBitmap = function (a) {
    try {
      var b = J.getFlatName(ba.replace(a, ".png", ".txt")),
        c = Th.getString(b);
      return sa.loadFromBase64(c, "png").then(function (a) {
        return ab.withValue(new ic(a));
      });
    } catch (d) {
      X.lastException = d;
      d instanceof v && (d = d.val);
      if (u.__instanceof(d, String))
        return ab.withError(
          "(You probably have a old browser) Error occurred: " + d
        );
      throw d;
    }
  };
  J.loadBytes = function (a) {
    a = qa.createInstance(J.getAssetClass(a), []);
    return Hc.ofData(Na.toArrayBuffer(a));
  };
  J.loadText = function (a) {
    a = J.loadBytes(a);
    return a.getString(0, a.length);
  };
  J.loadBitmapData = function (a) {
    a = pb.fromFile(a);
    return sa.fromImage(a);
  };
  J.resetStatics = function () {
    J.width = 0;
    J.height = 0;
    J.elapsed = 0;
    J.rate = 1;
    J.bounds = null;
    J.camera = new Y();
    J._time = 0;
    J._updateTime = 0;
    J._renderTime = 0;
    J._gameTime = 0;
    J._flashTime = 0;
    J._bitmap = new la();
    J._seed = 0;
    J._getSeed = 0;
    J._volume = 1;
    J._pan = 0;
    J._soundTransform = new Yf();
    J.stage = null;
    J.point = new Y();
    J.point2 = new Y();
    J.zero = new Y();
    J.rect = new W();
    J.matrix = new ya();
    J.sprite = new gb();
    J.collision = new oc();
  };
  var Ba = function () {};
  p["com.stencyl.utils.motion.EasingFunction"] = Ba;
  Ba.__name__ = ["com", "stencyl", "utils", "motion", "EasingFunction"];
  Ba.prototype = {
    apply: function (a) {
      return 0;
    },
    __class__: Ba,
  };
  var mm = function () {};
  p["com.stencyl.utils.motion.BackIn"] = mm;
  mm.__name__ = ["com", "stencyl", "utils", "motion", "BackIn"];
  mm.__super__ = Ba;
  mm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0 == a ? 0 : 1 == a ? 1 : a * a * (2.70158 * a - 1.70158);
    },
    __class__: mm,
  });
  var nm = function () {};
  p["com.stencyl.utils.motion.BackInOut"] = nm;
  nm.__name__ = ["com", "stencyl", "utils", "motion", "BackInOut"];
  nm.__super__ = Ba;
  nm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0 == a
        ? 0
        : 1 == a
        ? 1
        : 1 > (a *= 2)
        ? 0.5 * a * a * (3.5949095 * a - 2.5949095)
        : 0.5 * ((a -= 2) * a * (3.5949095 * a + 2.5949095) + 2);
    },
    __class__: nm,
  });
  var om = function () {};
  p["com.stencyl.utils.motion.BackOut"] = om;
  om.__name__ = ["com", "stencyl", "utils", "motion", "BackOut"];
  om.__super__ = Ba;
  om.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0 == a ? 0 : 1 == a ? 1 : --a * a * (2.70158 * a + 1.70158) + 1;
    },
    __class__: om,
  });
  var pm = function () {};
  p["com.stencyl.utils.motion.BackOutIn"] = pm;
  pm.__name__ = ["com", "stencyl", "utils", "motion", "BackOutIn"];
  pm.__super__ = Ba;
  pm.prototype = x(Ba.prototype, {
    apply: function (a) {
      if (0 == a) return 0;
      if (1 == a) return 1;
      if (0.5 > a)
        return (a = 2 * a - 1), 0.5 * (a * a * (2.70158 * a + 1.70158) + 1);
      a = 2 * a - 1;
      return 0.5 * a * a * (2.70158 * a - 1.70158) + 0.5;
    },
    __class__: pm,
  });
  var qm = function () {};
  p["com.stencyl.utils.motion.BounceIn"] = qm;
  qm.__name__ = ["com", "stencyl", "utils", "motion", "BounceIn"];
  qm.__super__ = Ba;
  qm.prototype = x(Ba.prototype, {
    apply: function (a) {
      a = 1 - a;
      return 0.36363636363636365 > a
        ? 1 - 7.5625 * a * a
        : 0.7272727272727273 > a
        ? 1 - (7.5625 * (a -= 0.5454545454545454) * a + 0.75)
        : 0.9090909090909091 > a
        ? 1 - (7.5625 * (a -= 0.8181818181818182) * a + 0.9375)
        : 1 - (7.5625 * (a -= 0.9545454545454546) * a + 0.984375);
    },
    __class__: qm,
  });
  var rm = function () {};
  p["com.stencyl.utils.motion.BounceInOut"] = rm;
  rm.__name__ = ["com", "stencyl", "utils", "motion", "BounceInOut"];
  rm.__super__ = Ba;
  rm.prototype = x(Ba.prototype, {
    apply: function (a) {
      if (0.5 > a)
        return (
          (a = 1 - 2 * a),
          0.36363636363636365 > a
            ? 0.5 * (1 - 7.5625 * a * a)
            : 0.7272727272727273 > a
            ? 0.5 * (1 - (7.5625 * (a -= 0.5454545454545454) * a + 0.75))
            : 0.9090909090909091 > a
            ? 0.5 * (1 - (7.5625 * (a -= 0.8181818181818182) * a + 0.9375))
            : 0.5 * (1 - (7.5625 * (a -= 0.9545454545454546) * a + 0.984375))
        );
      a = 2 * a - 1;
      return 0.36363636363636365 > a
        ? 7.5625 * a * a * 0.5 + 0.5
        : 0.7272727272727273 > a
        ? 0.5 * (7.5625 * (a -= 0.5454545454545454) * a + 0.75) + 0.5
        : 0.9090909090909091 > a
        ? 0.5 * (7.5625 * (a -= 0.8181818181818182) * a + 0.9375) + 0.5
        : 0.5 * (7.5625 * (a -= 0.9545454545454546) * a + 0.984375) + 0.5;
    },
    __class__: rm,
  });
  var sm = function () {};
  p["com.stencyl.utils.motion.BounceOut"] = sm;
  sm.__name__ = ["com", "stencyl", "utils", "motion", "BounceOut"];
  sm.__super__ = Ba;
  sm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0.36363636363636365 > a
        ? 7.5625 * a * a
        : 0.7272727272727273 > a
        ? 7.5625 * (a -= 0.5454545454545454) * a + 0.75
        : 0.9090909090909091 > a
        ? 7.5625 * (a -= 0.8181818181818182) * a + 0.9375
        : 7.5625 * (a -= 0.9545454545454546) * a + 0.984375;
    },
    __class__: sm,
  });
  var tm = function () {};
  p["com.stencyl.utils.motion.BounceOutIn"] = tm;
  tm.__name__ = ["com", "stencyl", "utils", "motion", "BounceOutIn"];
  tm.__super__ = Ba;
  tm.prototype = x(Ba.prototype, {
    apply: function (a) {
      if (0.5 > a)
        return 0.36363636363636365 > (a *= 2)
          ? 3.78125 * a * a
          : 0.7272727272727273 > a
          ? 0.5 * (7.5625 * (a -= 0.5454545454545454) * a + 0.75)
          : 0.9090909090909091 > a
          ? 0.5 * (7.5625 * (a -= 0.8181818181818182) * a + 0.9375)
          : 0.5 * (7.5625 * (a -= 0.9545454545454546) * a + 0.984375);
      a = 1 - (2 * a - 1);
      return 0.36363636363636365 > a
        ? 0.5 - 3.78125 * a * a + 0.5
        : 0.7272727272727273 > a
        ? 0.5 - 0.5 * (7.5625 * (a -= 0.5454545454545454) * a + 0.75) + 0.5
        : 0.9090909090909091 > a
        ? 0.5 - 0.5 * (7.5625 * (a -= 0.8181818181818182) * a + 0.9375) + 0.5
        : 0.5 - 0.5 * (7.5625 * (a -= 0.9545454545454546) * a + 0.984375) + 0.5;
    },
    __class__: tm,
  });
  var um = function () {};
  p["com.stencyl.utils.motion.CircIn"] = um;
  um.__name__ = ["com", "stencyl", "utils", "motion", "CircIn"];
  um.__super__ = Ba;
  um.prototype = x(Ba.prototype, {
    apply: function (a) {
      return -1 > a || 1 < a ? 0 : 1 - Math.sqrt(1 - a * a);
    },
    __class__: um,
  });
  var vm = function () {};
  p["com.stencyl.utils.motion.CircInOut"] = vm;
  vm.__name__ = ["com", "stencyl", "utils", "motion", "CircInOut"];
  vm.__super__ = Ba;
  vm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return -0.5 > a || 1.5 < a
        ? 0.5
        : 1 > (a *= 2)
        ? -0.5 * (Math.sqrt(1 - a * a) - 1)
        : 0.5 * (Math.sqrt(1 - (a -= 2) * a) + 1);
    },
    __class__: vm,
  });
  var wm = function () {};
  p["com.stencyl.utils.motion.CircOut"] = wm;
  wm.__name__ = ["com", "stencyl", "utils", "motion", "CircOut"];
  wm.__super__ = Ba;
  wm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0 > a || 2 < a ? 0 : Math.sqrt(a * (2 - a));
    },
    __class__: wm,
  });
  var xm = function () {};
  p["com.stencyl.utils.motion.CircOutIn"] = xm;
  xm.__name__ = ["com", "stencyl", "utils", "motion", "CircOutIn"];
  xm.__super__ = Ba;
  xm.prototype = x(Ba.prototype, {
    apply: function (a) {
      if (0 > a) return 0;
      if (1 < a) return 1;
      if (0.5 > a) return (a = 2 * a - 1), 0.5 * Math.sqrt(1 - a * a);
      a = 2 * a - 1;
      return -0.5 * (Math.sqrt(1 - a * a) - 1 - 1);
    },
    __class__: xm,
  });
  var ym = function () {};
  p["com.stencyl.utils.motion.CubicIn"] = ym;
  ym.__name__ = ["com", "stencyl", "utils", "motion", "CubicIn"];
  ym.__super__ = Ba;
  ym.prototype = x(Ba.prototype, {
    apply: function (a) {
      return a * a * a;
    },
    __class__: ym,
  });
  var zm = function () {};
  p["com.stencyl.utils.motion.CubicInOut"] = zm;
  zm.__name__ = ["com", "stencyl", "utils", "motion", "CubicInOut"];
  zm.__super__ = Ba;
  zm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 1 > (a *= 2) ? 0.5 * a * a * a : 0.5 * ((a -= 2) * a * a + 2);
    },
    __class__: zm,
  });
  var Am = function () {};
  p["com.stencyl.utils.motion.CubicOut"] = Am;
  Am.__name__ = ["com", "stencyl", "utils", "motion", "CubicOut"];
  Am.__super__ = Ba;
  Am.prototype = x(Ba.prototype, {
    apply: function (a) {
      return --a * a * a + 1;
    },
    __class__: Am,
  });
  var Bm = function () {};
  p["com.stencyl.utils.motion.CubicOutIn"] = Bm;
  Bm.__name__ = ["com", "stencyl", "utils", "motion", "CubicOutIn"];
  Bm.__super__ = Ba;
  Bm.prototype = x(Ba.prototype, {
    apply: function (a) {
      a = 2 * a - 1;
      return 0.5 * (a * a * a + 1);
    },
    __class__: Bm,
  });
  var Cm = function () {};
  p["com.stencyl.utils.motion.ElasticIn"] = Cm;
  Cm.__name__ = ["com", "stencyl", "utils", "motion", "ElasticIn"];
  Cm.__super__ = Ba;
  Cm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0 == a
        ? 0
        : 1 == a
        ? 1
        : -(
            Math.exp(6.931471805599453 * --a) *
            Math.sin((6.283185307179586 * (0.001 * a - 7.5e-5)) / 3e-4)
          );
    },
    __class__: Cm,
  });
  var Dm = function () {};
  p["com.stencyl.utils.motion.ElasticInOut"] = Dm;
  Dm.__name__ = ["com", "stencyl", "utils", "motion", "ElasticInOut"];
  Dm.__super__ = Ba;
  Dm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0 == a
        ? 0
        : 1 == a
        ? 1
        : 1 > (a *= 2)
        ? -0.5 *
          Math.exp(6.931471805599453 * --a) *
          Math.sin((6.283185307179586 * (0.001 * a - 7.5e-5)) / 3e-4)
        : Math.exp(-6.931471805599453 * --a) *
            Math.sin((6.283185307179586 * (0.001 * a - 7.5e-5)) / 3e-4) *
            0.5 +
          1;
    },
    __class__: Dm,
  });
  var Em = function () {};
  p["com.stencyl.utils.motion.ElasticOut"] = Em;
  Em.__name__ = ["com", "stencyl", "utils", "motion", "ElasticOut"];
  Em.__super__ = Ba;
  Em.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0 == a
        ? 0
        : 1 == a
        ? 1
        : Math.exp(-6.931471805599453 * a) *
            Math.sin((6.283185307179586 * (0.001 * a - 7.5e-5)) / 3e-4) +
          1;
    },
    __class__: Em,
  });
  var Fm = function () {};
  p["com.stencyl.utils.motion.ElasticOutIn"] = Fm;
  Fm.__name__ = ["com", "stencyl", "utils", "motion", "ElasticOutIn"];
  Fm.__super__ = Ba;
  Fm.prototype = x(Ba.prototype, {
    apply: function (a) {
      if (0.5 > a)
        return 0 == (a *= 2)
          ? 0
          : 0.5 *
              Math.exp(-6.931471805599453 * a) *
              Math.sin((6.283185307179586 * (0.001 * a - 7.5e-5)) / 3e-4) +
              0.5;
      if (0.5 == a) return 0.5;
      if (1 == a) return 1;
      a = 2 * a - 1;
      return (
        -(
          0.5 *
          Math.exp(6.931471805599453 * --a) *
          Math.sin((6.283185307179586 * (0.001 * a - 7.5e-5)) / 3e-4)
        ) + 0.5
      );
    },
    __class__: Fm,
  });
  var Gm = function () {};
  p["com.stencyl.utils.motion.ExpoIn"] = Gm;
  Gm.__name__ = ["com", "stencyl", "utils", "motion", "ExpoIn"];
  Gm.__super__ = Ba;
  Gm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0 == a ? 0 : Math.exp(6.931471805599453 * (a - 1));
    },
    __class__: Gm,
  });
  var Hm = function () {};
  p["com.stencyl.utils.motion.ExpoInOut"] = Hm;
  Hm.__name__ = ["com", "stencyl", "utils", "motion", "ExpoInOut"];
  Hm.__super__ = Ba;
  Hm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0 == a
        ? 0
        : 1 == a
        ? 1
        : 1 > (a *= 2)
        ? 0.5 * Math.exp(6.931471805599453 * (a - 1))
        : 0.5 * (2 - Math.exp(-6.931471805599453 * (a - 1)));
    },
    __class__: Hm,
  });
  var Im = function () {};
  p["com.stencyl.utils.motion.ExpoOut"] = Im;
  Im.__name__ = ["com", "stencyl", "utils", "motion", "ExpoOut"];
  Im.__super__ = Ba;
  Im.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 1 == a ? 1 : 1 - Math.exp(-6.931471805599453 * a);
    },
    __class__: Im,
  });
  var Jm = function () {};
  p["com.stencyl.utils.motion.ExpoOutIn"] = Jm;
  Jm.__name__ = ["com", "stencyl", "utils", "motion", "ExpoOutIn"];
  Jm.__super__ = Ba;
  Jm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0.5 > a
        ? 0.5 * (1 - Math.exp(-13.862943611198906 * a))
        : 0.5 == a
        ? 0.5
        : 0.5 * (Math.exp(13.862943611198906 * (a - 1)) + 1);
    },
    __class__: Jm,
  });
  var Km = function () {};
  p["com.stencyl.utils.motion.Linear"] = Km;
  Km.__name__ = ["com", "stencyl", "utils", "motion", "Linear"];
  Km.__super__ = Ba;
  Km.prototype = x(Ba.prototype, {
    apply: function (a) {
      return a;
    },
    __class__: Km,
  });
  var Lm = function () {};
  p["com.stencyl.utils.motion.QuadIn"] = Lm;
  Lm.__name__ = ["com", "stencyl", "utils", "motion", "QuadIn"];
  Lm.__super__ = Ba;
  Lm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return a * a;
    },
    __class__: Lm,
  });
  var Mm = function () {};
  p["com.stencyl.utils.motion.QuadInOut"] = Mm;
  Mm.__name__ = ["com", "stencyl", "utils", "motion", "QuadInOut"];
  Mm.__super__ = Ba;
  Mm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0.5 > a ? 2 * a * a : -2 * --a * a + 1;
    },
    __class__: Mm,
  });
  var Nm = function () {};
  p["com.stencyl.utils.motion.QuadOut"] = Nm;
  Nm.__name__ = ["com", "stencyl", "utils", "motion", "QuadOut"];
  Nm.__super__ = Ba;
  Nm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return -a * (a - 2);
    },
    __class__: Nm,
  });
  var Om = function () {};
  p["com.stencyl.utils.motion.QuadOutIn"] = Om;
  Om.__name__ = ["com", "stencyl", "utils", "motion", "QuadOutIn"];
  Om.__super__ = Ba;
  Om.prototype = x(Ba.prototype, {
    apply: function (a) {
      if (0.5 > a) return -0.5 * (a *= 2) * (a - 2);
      a = 2 * a - 1;
      return 0.5 * a * a + 0.5;
    },
    __class__: Om,
  });
  var Pm = function () {};
  p["com.stencyl.utils.motion.QuartIn"] = Pm;
  Pm.__name__ = ["com", "stencyl", "utils", "motion", "QuartIn"];
  Pm.__super__ = Ba;
  Pm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return (a *= a) * a;
    },
    __class__: Pm,
  });
  var Qm = function () {};
  p["com.stencyl.utils.motion.QuartInOut"] = Qm;
  Qm.__name__ = ["com", "stencyl", "utils", "motion", "QuartInOut"];
  Qm.__super__ = Ba;
  Qm.prototype = x(Ba.prototype, {
    apply: function (a) {
      if (1 > (a *= 2)) return 0.5 * (a *= a) * a;
      a *= a -= 2;
      return -0.5 * (a * a - 2);
    },
    __class__: Qm,
  });
  var Rm = function () {};
  p["com.stencyl.utils.motion.QuartOut"] = Rm;
  Rm.__name__ = ["com", "stencyl", "utils", "motion", "QuartOut"];
  Rm.__super__ = Ba;
  Rm.prototype = x(Ba.prototype, {
    apply: function (a) {
      a *= --a;
      return 1 - a * a;
    },
    __class__: Rm,
  });
  var Sm = function () {};
  p["com.stencyl.utils.motion.QuartOutIn"] = Sm;
  Sm.__name__ = ["com", "stencyl", "utils", "motion", "QuartOutIn"];
  Sm.__super__ = Ba;
  Sm.prototype = x(Ba.prototype, {
    apply: function (a) {
      if (0.5 > a) return (a = 2 * a - 1), -0.5 * (a *= a) * a + 0.5;
      a = 2 * a - 1;
      return 0.5 * (a *= a) * a + 0.5;
    },
    __class__: Sm,
  });
  var Tm = function () {};
  p["com.stencyl.utils.motion.QuintIn"] = Tm;
  Tm.__name__ = ["com", "stencyl", "utils", "motion", "QuintIn"];
  Tm.__super__ = Ba;
  Tm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return a * (a *= a) * a;
    },
    __class__: Tm,
  });
  var Um = function () {};
  p["com.stencyl.utils.motion.QuintInOut"] = Um;
  Um.__name__ = ["com", "stencyl", "utils", "motion", "QuintInOut"];
  Um.__super__ = Ba;
  Um.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 1 > (a *= 2)
        ? 0.5 * a * (a *= a) * a
        : 0.5 * (a -= 2) * (a *= a) * a + 1;
    },
    __class__: Um,
  });
  var Vm = function () {};
  p["com.stencyl.utils.motion.QuintOut"] = Vm;
  Vm.__name__ = ["com", "stencyl", "utils", "motion", "QuintOut"];
  Vm.__super__ = Ba;
  Vm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return --a * (a *= a) * a + 1;
    },
    __class__: Vm,
  });
  var Wm = function () {};
  p["com.stencyl.utils.motion.QuintOutIn"] = Wm;
  Wm.__name__ = ["com", "stencyl", "utils", "motion", "QuintOutIn"];
  Wm.__super__ = Ba;
  Wm.prototype = x(Ba.prototype, {
    apply: function (a) {
      a = 2 * a - 1;
      return 0.5 * (a * (a *= a) * a + 1);
    },
    __class__: Wm,
  });
  var Xm = function () {};
  p["com.stencyl.utils.motion.SineIn"] = Xm;
  Xm.__name__ = ["com", "stencyl", "utils", "motion", "SineIn"];
  Xm.__super__ = Ba;
  Xm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0 == a ? 0 : 1 == a ? 1 : 1 - Math.cos(1.5707963267948966 * a);
    },
    __class__: Xm,
  });
  var Ym = function () {};
  p["com.stencyl.utils.motion.SineInOut"] = Ym;
  Ym.__name__ = ["com", "stencyl", "utils", "motion", "SineInOut"];
  Ym.__super__ = Ba;
  Ym.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0 == a
        ? 0
        : 1 == a
        ? 1
        : -0.5 * (Math.cos(3.141592653589793 * a) - 1);
    },
    __class__: Ym,
  });
  var Zm = function () {};
  p["com.stencyl.utils.motion.SineOut"] = Zm;
  Zm.__name__ = ["com", "stencyl", "utils", "motion", "SineOut"];
  Zm.__super__ = Ba;
  Zm.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0 == a ? 0 : 1 == a ? 1 : Math.sin(1.5707963267948966 * a);
    },
    __class__: Zm,
  });
  var $m = function () {};
  p["com.stencyl.utils.motion.SineOutIn"] = $m;
  $m.__name__ = ["com", "stencyl", "utils", "motion", "SineOutIn"];
  $m.__super__ = Ba;
  $m.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0 == a
        ? 0
        : 1 == a
        ? 1
        : 0.5 > a
        ? 0.5 * Math.sin(3.141592653589793 * a)
        : -0.5 * Math.cos(1.5707963267948966 * (2 * a - 1)) + 1;
    },
    __class__: $m,
  });
  var an = function () {};
  p["com.stencyl.utils.motion.WarpIn"] = an;
  an.__name__ = ["com", "stencyl", "utils", "motion", "WarpIn"];
  an.__super__ = Ba;
  an.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 1 > a ? 0 : 1;
    },
    __class__: an,
  });
  var bn = function () {};
  p["com.stencyl.utils.motion.WarpInOut"] = bn;
  bn.__name__ = ["com", "stencyl", "utils", "motion", "WarpInOut"];
  bn.__super__ = Ba;
  bn.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0.5 > a ? 0 : 1;
    },
    __class__: bn,
  });
  var cn = function () {};
  p["com.stencyl.utils.motion.WarpOut"] = cn;
  cn.__name__ = ["com", "stencyl", "utils", "motion", "WarpOut"];
  cn.__super__ = Ba;
  cn.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0 >= a ? 0 : 1;
    },
    __class__: cn,
  });
  var dn = function () {};
  p["com.stencyl.utils.motion.WarpOutIn"] = dn;
  dn.__name__ = ["com", "stencyl", "utils", "motion", "WarpOutIn"];
  dn.__super__ = Ba;
  dn.prototype = x(Ba.prototype, {
    apply: function (a) {
      return 0 >= a ? 0 : 1 > a ? 0.5 : 1;
    },
    __class__: dn,
  });
  var xa = function () {};
  p["com.stencyl.utils.motion.Easing"] = xa;
  xa.__name__ = ["com", "stencyl", "utils", "motion", "Easing"];
  var yi = function () {};
  p["com.stencyl.utils.motion.EasingConstants"] = yi;
  yi.__name__ = ["com", "stencyl", "utils", "motion", "EasingConstants"];
  var rg = function () {
    this.paused = this.finished = this.active = !1;
  };
  p["com.stencyl.utils.motion.TweenObject"] = rg;
  rg.__name__ = ["com", "stencyl", "utils", "motion", "TweenObject"];
  rg.prototype = {
    easing: null,
    time: null,
    duration: null,
    active: null,
    paused: null,
    updated: null,
    finished: null,
    onUpdate: null,
    onComplete: null,
    _tween: function (a, b) {
      null == a && (a = xa.linear);
      this.easing = a;
      this.duration = b;
      this.active || sb.markActive(this);
      this.time = 0;
      this.active = !0;
      this.paused = this.finished = this.updated = !1;
      0 == b && ((this.duration = 1), sb.finish(this));
    },
    update: function (a) {
      if (!this.paused)
        if (
          ((this.time += a),
          this.time > this.duration && (this.time = this.duration),
          this.updateValue(),
          (this.updated = !0),
          this.time == this.duration)
        ) {
          this.active = !1;
          this.finished = !0;
          if (null != this.onUpdate) this.onUpdate();
          if (null != this.onComplete) this.onComplete();
        } else if (null != this.onUpdate) this.onUpdate();
    },
    updateValue: function () {},
    doOnUpdate: function (a) {
      this.onUpdate = a;
      return this;
    },
    doOnComplete: function (a) {
      this.onComplete = a;
      return this;
    },
    __class__: rg,
  };
  var Ge = function () {
    rg.call(this);
  };
  p["com.stencyl.utils.motion.TweenFloat"] = Ge;
  Ge.__name__ = ["com", "stencyl", "utils", "motion", "TweenFloat"];
  Ge.__super__ = rg;
  Ge.prototype = x(rg.prototype, {
    startValue: null,
    endValue: null,
    value: null,
    tween: function (a, b, c, d) {
      this.startValue = a;
      this.endValue = b;
      this.value = a;
      this._tween(c, d);
      return this;
    },
    updateValue: function () {
      this.value = Pa.lerp(
        this.easing.apply(this.time / this.duration),
        this.startValue,
        this.endValue
      );
    },
    __class__: Ge,
  });
  var Rf = function () {
    rg.call(this);
  };
  p["com.stencyl.utils.motion.TweenFloat2"] = Rf;
  Rf.__name__ = ["com", "stencyl", "utils", "motion", "TweenFloat2"];
  Rf.__super__ = rg;
  Rf.prototype = x(rg.prototype, {
    startValue1: null,
    endValue1: null,
    value1: null,
    startValue2: null,
    endValue2: null,
    value2: null,
    tween: function (a, b, c, d, e, f) {
      this.startValue1 = a;
      this.endValue1 = b;
      this.value1 = a;
      this.startValue2 = c;
      this.endValue2 = d;
      this.value2 = c;
      this._tween(e, f);
      return this;
    },
    updateValue: function () {
      var a = this.easing.apply(this.time / this.duration);
      this.value1 = Pa.lerp(a, this.startValue1, this.endValue1);
      this.value2 = Pa.lerp(a, this.startValue2, this.endValue2);
    },
    __class__: Rf,
  });
  var sb = function () {};
  p["com.stencyl.utils.motion.TweenManager"] = sb;
  sb.__name__ = ["com", "stencyl", "utils", "motion", "TweenManager"];
  sb.resetStatics = function () {
    sb.activeObjects = [];
    sb.finishedObjects = [];
  };
  sb.markActive = function (a) {
    sb.activeObjects.push(a);
  };
  sb.cancel = function (a) {
    var b = sb.activeObjects.indexOf(a);
    -1 != b &&
      ((a.active = !1),
      (a.updated = !1),
      (a.finished = !1),
      (a.paused = !1),
      (sb.activeObjects[b] = sb.activeObjects[sb.activeObjects.length - 1]),
      sb.activeObjects.pop());
  };
  sb.finish = function (a) {
    var b = sb.activeObjects.indexOf(a);
    -1 != b &&
      (a.update(a.duration - a.time),
      (sb.activeObjects[b] = sb.activeObjects[sb.activeObjects.length - 1]),
      sb.activeObjects.pop(),
      sb.finishedObjects.push(a));
  };
  sb.update = function (a) {
    for (var b = sb.finishedObjects.length; 0 < b--; )
      sb.finishedObjects.pop().updated = !1;
    for (b = sb.activeObjects.length; 0 < b--; ) {
      var c = sb.activeObjects[b];
      c.update(a);
      c.finished &&
        ((sb.activeObjects[b] = sb.activeObjects[sb.activeObjects.length - 1]),
        sb.activeObjects.pop(),
        sb.finishedObjects.push(c));
    }
  };
  sb.timer = function (a) {
    return new en().tween(a);
  };
  var en = function () {
    rg.call(this);
  };
  p["com.stencyl.utils.motion.TweenTimer"] = en;
  en.__name__ = ["com", "stencyl", "utils", "motion", "TweenTimer"];
  en.__super__ = rg;
  en.prototype = x(rg.prototype, {
    tween: function (a) {
      this._tween(xa.linear, a);
      return this;
    },
    updateValue: function () {},
    __class__: en,
  });
  var ia = function () {};
  p["de.polygonal.Printf"] = ia;
  ia.__name__ = ["de", "polygonal", "Printf"];
  ia.init = function () {
    ia.dataTypeMap = ia.makeDataTypeMap();
    ia.formatIntFuncHash = new Ca();
    ia.formatIntFuncHash.h[1] = ia.formatSignedDecimal;
    ia.formatIntFuncHash.h[2] = ia.formatUnsignedDecimal;
    ia.formatIntFuncHash.h[0] = ia.formatCharacter;
    ia.formatIntFuncHash.h[4] = ia.formatHexadecimal;
    ia.formatIntFuncHash.h[3] = ia.formatOctal;
    ia.formatIntFuncHash.h[5] = ia.formatBinary;
    ia.formatFloatFuncHash = new Ca();
    ia.formatFloatFuncHash.h[0] = ia.formatNormalFloat;
    ia.formatFloatFuncHash.h[1] = ia.formatScientific;
    ia.formatFloatFuncHash.h[2] = ia.formatNaturalFloat;
    ia.formatStringFuncHash = new Ca();
    ia.formatStringFuncHash.h[2] = ia.formatString;
  };
  ia.makeDataTypeMap = function () {
    var a = new Ca();
    a.h[105] = Vc.FmtInteger(Wc.ISignedDecimal);
    a.h[100] = Vc.FmtInteger(Wc.ISignedDecimal);
    a.h[117] = Vc.FmtInteger(Wc.IUnsignedDecimal);
    a.h[99] = Vc.FmtInteger(Wc.ICharacter);
    a.h[120] = Vc.FmtInteger(Wc.IHex);
    a.h[88] = Vc.FmtInteger(Wc.IHex);
    a.h[111] = Vc.FmtInteger(Wc.IOctal);
    a.h[98] = Vc.FmtInteger(Wc.IBin);
    a.h[102] = Vc.FmtFloat(mf.FNormal);
    a.h[101] = Vc.FmtFloat(mf.FScientific);
    a.h[69] = Vc.FmtFloat(mf.FScientific);
    a.h[103] = Vc.FmtFloat(mf.FNatural);
    a.h[71] = Vc.FmtFloat(mf.FNatural);
    a.h[115] = Vc.FmtString;
    a.h[112] = Vc.FmtPointer;
    a.h[110] = Vc.FmtNothing;
    return a;
  };
  ia.format = function (a, b) {
    ia._initialized || ((ia._initialized = !0), ia.init());
    var c = "",
      d = 0;
    a = ia.tokenize(a);
    for (var e = 0; e < a.length; ) {
      var f = a[e];
      ++e;
      switch (f[1]) {
        case 0:
          c += f[2];
          break;
        case 1:
          var g = f[3];
          f = f[2];
          g.width = null != g.width ? g.width : u.__cast(b[d++], og);
          g.precision =
            null != g.precision ? g.precision : u.__cast(b[d++], og);
          var h = b[d++];
          switch (f[1]) {
            case 0:
              var n = ia.formatIntFuncHash.h[f[2][1]];
              break;
            case 1:
              n = ia.formatFloatFuncHash.h[f[2][1]];
              break;
            case 2:
              n = ia.formatStringFuncHash.h[2];
              break;
            case 3:
              throw new v("specifier 'p' is not supported");
            case 4:
              throw new v("specifier 'n' is not supported");
          }
          c += n(h, g);
          break;
        case 2:
          g = f[2];
          if (!Object.prototype.hasOwnProperty.call(b[0], g))
            throw new v("no field named " + g);
          c += P.string(V.field(b[0], g));
          break;
        case 3:
          throw new v("invalid format specifier");
      }
    }
    return c;
  };
  ia.tokenize = function (a) {
    return [];
  };
  ia.formatBinary = function (a, b) {
    var c = "",
      d = b.flags,
      e = b.precision;
    b = b.width;
    -1 == e && (e = 1);
    if (0 != a) {
      for (
        0 != (d & (1 << eb.LengthH[1])) && (a &= 65535);
        (c = (0 < (a & 1) ? "1" : "0") + c), (a >>>= 1), 0 < a;

      );
      1 < e &&
        (e > c.length && (c = ia.lpad(c, "0", e)),
        0 != (d & (1 << eb.Sharp[1])) && (c = "b" + c));
    }
    return 0 != (d & (1 << eb.Minus[1]))
      ? b > c.length
        ? ia.rpad(c, " ", b)
        : c
      : b > c.length
      ? ia.lpad(c, 0 != (d & (1 << eb.Zero[1])) ? "0" : " ", b)
      : c;
  };
  ia.formatOctal = function (a, b) {
    var c = "",
      d = b.flags,
      e = b.precision;
    b = b.width;
    -1 == e && (e = 1);
    0 != a &&
      (0 != (d & (1 << eb.LengthH[1])) && (a &= 65535),
      (c = ia.toOct(a)),
      0 != (d & (1 << eb.Sharp[1])) && (c = "0" + c),
      1 < e && c.length < e && (c = ia.lpad(c, "0", e)));
    return 0 != (d & (1 << eb.Minus[1]))
      ? b > c.length
        ? ia.rpad(c, " ", b)
        : c
      : b > c.length
      ? ia.lpad(c, 0 != (d & (1 << eb.Zero[1])) ? "0" : " ", b)
      : c;
  };
  ia.formatHexadecimal = function (a, b) {
    var c = "",
      d = b.flags,
      e = b.precision;
    b = b.width;
    -1 == e && (e = 1);
    if (0 != a) {
      0 != (d & (1 << eb.LengthH[1])) && (a &= 65535);
      c = a;
      for (
        var f = "";
        (f = "0123456789ABCDEF".charAt(c & 15) + f), (c >>>= 4), 0 < c;

      );
      c = f;
      1 < e && c.length < e && (c = ia.lpad(c, "0", e));
      0 != (d & (1 << eb.Sharp[1])) && 0 != a && (c = "0x" + c);
      c = 0 != (d & (1 << eb.UpperCase[1])) ? c.toUpperCase() : c.toLowerCase();
    }
    return 0 != (d & (1 << eb.Minus[1]))
      ? b > c.length
        ? ia.rpad(c, " ", b)
        : c
      : b > c.length
      ? ia.lpad(c, 0 != (d & (1 << eb.Zero[1])) ? "0" : " ", b)
      : c;
  };
  ia.formatUnsignedDecimal = function (a, b) {
    var c = b.precision;
    if (0 <= a) var d = ia.formatSignedDecimal(a, b);
    else
      (d = new Fa(0, a)),
        (d = fn.toString(d)),
        1 < c && d.length < c && (d = ia.lpad(d, "0", c)),
        (d = ia.padNumber(d, a, b.flags, b.width));
    return d;
  };
  ia.formatNaturalFloat = function (a, b) {
    b.precision = 0;
    var c = ia.formatNormalFloat(a, b);
    a = ia.formatScientific(a, b);
    if (0 != (b.flags & (1 << eb.Sharp[1])) && -1 != c.indexOf(".")) {
      for (b = c.length - 1; 48 == ia.codeAt(c, b); ) --b;
      c = Q.substr(c, 0, b);
    }
    return c.length <= a.length ? c : a;
  };
  ia.formatScientific = function (a, b) {
    var c = "",
      d = b.flags;
    b = b.precision;
    -1 == b && (b = 6);
    var e;
    if (0 == a) {
      var f = (e = 0);
      c += "0";
      if (0 < b) {
        c += ".";
        for (var g = 0, h = b; g < h; ) g++, (c += "0");
      }
    } else
      (e = 0 < a ? 1 : 0 > a ? -1 : 0),
        0 > a && (a = -a),
        (f = Math.floor(Math.log(a) / 2.302585092994046)),
        (a /= Math.pow(10, f)),
        (g = Math.pow(0.1, b)),
        (a = Math.round(a / g) * g);
    c += 0 > e ? "-" : 0 != (d & (1 << eb.Plus[1])) ? "+" : "";
    0 != a && (c += ia.rpad(Q.substr(ia.str(a), 0, b + 2), "0", b + 2));
    c += 0 != (d & (1 << eb.UpperCase[1])) ? "E" : "e";
    c += 0 <= f ? "+" : "-";
    10 > f ? (c += "00") : 100 > f && (c += "0");
    return (c += ia.str(ia.abs(f)));
  };
  ia.formatSignedDecimal = function (a, b) {
    var c = b.flags,
      d = b.precision,
      e = b.width;
    if (0 == d && 0 == a) var f = "";
    else
      0 != (c & (1 << eb.LengthH[1])) && (a &= 65535),
        (f = ia.str(ia.abs(a))),
        1 < d && f.length < d && (f = ia.lpad(f, "0", d)),
        0 != (c & (1 << eb.Zero[1])) &&
          (f = ia.lpad(f, "0", 0 > a ? e - 1 : e)),
        0 > a && (f = "-" + f);
    0 <= a &&
      (0 != (c & (1 << eb.Plus[1]))
        ? (f = "+" + f)
        : 0 != (c & (1 << eb.Space[1])) && (f = " " + f));
    return (f =
      0 != (c & (1 << eb.Minus[1]))
        ? ia.rpad(f, " ", b.width)
        : ia.lpad(f, " ", b.width));
  };
  ia.formatString = function (a, b) {
    var c = a,
      d = b.precision,
      e = b.width;
    0 < d && (c = Q.substr(a, 0, d));
    a = c.length;
    0 < e &&
      a < e &&
      (c =
        0 != (b.flags & (1 << eb.Minus[1]))
          ? ia.rpad(c, " ", e)
          : ia.lpad(c, " ", e));
    return c;
  };
  ia.formatNormalFloat = function (a, b) {
    var c = b.flags,
      d = b.precision;
    b = b.width;
    -1 == d && (d = 6);
    if (0 == d) {
      var e = ia.str(ia.abs(Math.round(a)));
      0 != (c & (1 << eb.Sharp[1])) && (e += ".");
    } else if (((e = Math.pow(0.1, d)), (a = Math.round(a / e) * e), isNaN(a)))
      e = "NaN";
    else {
      e = Math.pow(10, d) | 0;
      e = ia.str(((a * e) | 0) / e);
      var f = e.indexOf(".");
      -1 != f ? (f = Q.substr(e, f + 1, null).length) : ((e += "."), (f = 0));
      for (; f < d; ) f++, (e += "0");
    }
    0 != (c & (1 << eb.Plus[1])) && 0 <= a
      ? (e = "+" + e)
      : 0 != (c & (1 << eb.Space[1])) && 0 <= a && (e = " " + e);
    0 != (c & (1 << eb.Zero[1])) && (e = ia.lpad(e, "0", 0 > a ? b - 1 : b));
    0 > a && (e = "-" + e);
    return (e =
      0 != (c & (1 << eb.Minus[1])) ? ia.rpad(e, " ", b) : ia.lpad(e, " ", b));
  };
  ia.formatCharacter = function (a, b) {
    a = String.fromCharCode(a);
    1 < b.width &&
      (a =
        0 != (b.flags & (1 << eb.Minus[1]))
          ? ia.rpad(a, " ", b.width)
          : ia.lpad(a, " ", b.width));
    return a;
  };
  ia.padNumber = function (a, b, c, d) {
    var e = a.length;
    0 < d &&
      e < d &&
      (a =
        0 != (c & (1 << eb.Minus[1]))
          ? ia.rpad(a, " ", d)
          : 0 <= b
          ? ia.lpad(a, 0 != (c & (1 << eb.Zero[1])) ? "0" : " ", d)
          : 0 != (c & (1 << eb.Zero[1]))
          ? "-" + ia.lpad(Q.substr(a, 1, null), "0", d)
          : ia.lpad(a, " ", d));
    return a;
  };
  ia.lpad = function (a, b, c) {
    if (0 >= b.length) throw new v("error");
    for (; a.length < c; ) a = b + a;
    return a;
  };
  ia.rpad = function (a, b, c) {
    if (0 >= b.length) throw new v("error");
    for (; a.length < c; ) a += b;
    return a;
  };
  ia.toHex = function (a) {
    for (
      var b = "";
      (b = "0123456789ABCDEF".charAt(a & 15) + b), (a >>>= 4), 0 < a;

    );
    return b;
  };
  ia.toOct = function (a) {
    for (var b = ""; (b = (a & 7) + b), (a >>>= 3), 0 < a; );
    return b;
  };
  ia.abs = function (a) {
    return Math.abs(a) | 0;
  };
  ia.str = function (a) {
    return P.string(a);
  };
  ia.codeAt = function (a, b) {
    return a.charCodeAt(b);
  };
  ia.isDigit = function (a) {
    return 48 <= a ? 57 >= a : !1;
  };
  ia.roundTo = function (a, b) {
    return Math.round(a / b) * b;
  };
  ia.round = function (a) {
    return Math.round(a);
  };
  ia.exp = function (a, b) {
    return Math.pow(a, b) | 0;
  };
  ia.fabs = function (a) {
    return 0 > a ? -a : a;
  };
  ia.fsgn = function (a) {
    return 0 < a ? 1 : 0 > a ? -1 : 0;
  };
  var eb = (p["de.polygonal._Printf.FormatFlags"] = {
    __ename__: ["de", "polygonal", "_Printf", "FormatFlags"],
    __constructs__:
      "Minus Plus Space Sharp Zero LengthH LengthL Lengthl UpperCase".split(
        " "
      ),
  });
  eb.Minus = ["Minus", 0];
  eb.Minus.toString = M;
  eb.Minus.__enum__ = eb;
  eb.Plus = ["Plus", 1];
  eb.Plus.toString = M;
  eb.Plus.__enum__ = eb;
  eb.Space = ["Space", 2];
  eb.Space.toString = M;
  eb.Space.__enum__ = eb;
  eb.Sharp = ["Sharp", 3];
  eb.Sharp.toString = M;
  eb.Sharp.__enum__ = eb;
  eb.Zero = ["Zero", 4];
  eb.Zero.toString = M;
  eb.Zero.__enum__ = eb;
  eb.LengthH = ["LengthH", 5];
  eb.LengthH.toString = M;
  eb.LengthH.__enum__ = eb;
  eb.LengthL = ["LengthL", 6];
  eb.LengthL.toString = M;
  eb.LengthL.__enum__ = eb;
  eb.Lengthl = ["Lengthl", 7];
  eb.Lengthl.toString = M;
  eb.Lengthl.__enum__ = eb;
  eb.UpperCase = ["UpperCase", 8];
  eb.UpperCase.toString = M;
  eb.UpperCase.__enum__ = eb;
  var fj = (p["de.polygonal._Printf.FormatToken"] = {
    __ename__: ["de", "polygonal", "_Printf", "FormatToken"],
    __constructs__: ["BareString", "Tag", "Property", "Unknown"],
  });
  fj.BareString = function (a) {
    a = ["BareString", 0, a];
    a.__enum__ = fj;
    a.toString = M;
    return a;
  };
  fj.Tag = function (a, b) {
    a = ["Tag", 1, a, b];
    a.__enum__ = fj;
    a.toString = M;
    return a;
  };
  fj.Property = function (a) {
    a = ["Property", 2, a];
    a.__enum__ = fj;
    a.toString = M;
    return a;
  };
  fj.Unknown = function (a, b) {
    a = ["Unknown", 3, a, b];
    a.__enum__ = fj;
    a.toString = M;
    return a;
  };
  var Vc = (p["de.polygonal._Printf.FormatDataType"] = {
    __ename__: ["de", "polygonal", "_Printf", "FormatDataType"],
    __constructs__: [
      "FmtInteger",
      "FmtFloat",
      "FmtString",
      "FmtPointer",
      "FmtNothing",
    ],
  });
  Vc.FmtInteger = function (a) {
    a = ["FmtInteger", 0, a];
    a.__enum__ = Vc;
    a.toString = M;
    return a;
  };
  Vc.FmtFloat = function (a) {
    a = ["FmtFloat", 1, a];
    a.__enum__ = Vc;
    a.toString = M;
    return a;
  };
  Vc.FmtString = ["FmtString", 2];
  Vc.FmtString.toString = M;
  Vc.FmtString.__enum__ = Vc;
  Vc.FmtPointer = ["FmtPointer", 3];
  Vc.FmtPointer.toString = M;
  Vc.FmtPointer.__enum__ = Vc;
  Vc.FmtNothing = ["FmtNothing", 4];
  Vc.FmtNothing.toString = M;
  Vc.FmtNothing.__enum__ = Vc;
  var Wc = (p["de.polygonal._Printf.IntegerType"] = {
    __ename__: ["de", "polygonal", "_Printf", "IntegerType"],
    __constructs__:
      "ICharacter ISignedDecimal IUnsignedDecimal IOctal IHex IBin".split(" "),
  });
  Wc.ICharacter = ["ICharacter", 0];
  Wc.ICharacter.toString = M;
  Wc.ICharacter.__enum__ = Wc;
  Wc.ISignedDecimal = ["ISignedDecimal", 1];
  Wc.ISignedDecimal.toString = M;
  Wc.ISignedDecimal.__enum__ = Wc;
  Wc.IUnsignedDecimal = ["IUnsignedDecimal", 2];
  Wc.IUnsignedDecimal.toString = M;
  Wc.IUnsignedDecimal.__enum__ = Wc;
  Wc.IOctal = ["IOctal", 3];
  Wc.IOctal.toString = M;
  Wc.IOctal.__enum__ = Wc;
  Wc.IHex = ["IHex", 4];
  Wc.IHex.toString = M;
  Wc.IHex.__enum__ = Wc;
  Wc.IBin = ["IBin", 5];
  Wc.IBin.toString = M;
  Wc.IBin.__enum__ = Wc;
  var mf = (p["de.polygonal._Printf.FloatType"] = {
    __ename__: ["de", "polygonal", "_Printf", "FloatType"],
    __constructs__: ["FNormal", "FScientific", "FNatural"],
  });
  mf.FNormal = ["FNormal", 0];
  mf.FNormal.toString = M;
  mf.FNormal.__enum__ = mf;
  mf.FScientific = ["FScientific", 1];
  mf.FScientific.toString = M;
  mf.FScientific.__enum__ = mf;
  mf.FNatural = ["FNatural", 2];
  mf.FNatural.toString = M;
  mf.FNatural.__enum__ = mf;
  var Ug = function () {};
  p["de.polygonal.ds.Cloneable"] = Ug;
  Ug.__name__ = ["de", "polygonal", "ds", "Cloneable"];
  Ug.prototype = { clone: null, __class__: Ug };
  var zp = function () {};
  p["de.polygonal.ds.Hashable"] = zp;
  zp.__name__ = ["de", "polygonal", "ds", "Hashable"];
  zp.prototype = { key: null, __class__: zp };
  var qk = function () {};
  p["de.polygonal.ds.Collection"] = qk;
  qk.__name__ = ["de", "polygonal", "ds", "Collection"];
  qk.__interfaces__ = [zp];
  qk.prototype = {
    get_size: null,
    free: null,
    contains: null,
    remove: null,
    clear: null,
    iterator: null,
    isEmpty: null,
    toArray: null,
    clone: null,
    __class__: qk,
    __properties__: { get_size: "get_size" },
  };
  var sg = function () {};
  p["de.polygonal.ds.HashKey"] = sg;
  sg.__name__ = ["de", "polygonal", "ds", "HashKey"];
  sg.next = function () {
    null == sg._counter && (sg._counter = 0);
    if (1 != sg._counter < sg._counter + 1)
      throw new v(
        new ra("_counter < _counter + 1", {
          fileName: "HashKey.hx",
          lineNumber: 44,
          className: "de.polygonal.ds.HashKey",
          methodName: "next",
        })
      );
    return sg._counter++;
  };
  var gj = function () {};
  p["de.polygonal.ds.Map"] = gj;
  gj.__name__ = ["de", "polygonal", "ds", "Map"];
  gj.__interfaces__ = [qk];
  gj.prototype = {
    has: null,
    hasKey: null,
    get: null,
    set: null,
    unset: null,
    remap: null,
    toValSet: null,
    toKeySet: null,
    keys: null,
    __class__: gj,
  };
  var gn = function (a, b) {
    null == b && (b = -1);
    this.mTmpKeyBuffer = [];
    this.mTmpIntBuffer = [];
    this.mIterator = null;
    this.mFree = this.mSize = 0;
    this.reuseIterator = !1;
    this.key = sg.next();
    if (1 != 0 < a)
      throw new v(
        new ra("slotCount > 0", {
          fileName: "HashTable.hx",
          lineNumber: 158,
          className: "de.polygonal.ds.HashTable",
          methodName: "new",
        })
      );
    -1 == b && (b = a);
    2 > b && (b = 2);
    this.mMinCapacity = this.capacity = b;
    this.mH = new tg(a, this.capacity);
    this.mKeys = Array(this.capacity);
    this.mVals = Array(this.capacity);
    a = this.mNext = Array(this.capacity);
    b = 0;
    for (var c = this.capacity - 1; b < c; ) {
      var d = b++;
      a[d] = d + 1;
    }
    a[this.capacity - 1] = -1;
  };
  p["de.polygonal.ds.HashTable"] = gn;
  gn.__name__ = ["de", "polygonal", "ds", "HashTable"];
  gn.__interfaces__ = [gj];
  gn.prototype = {
    key: null,
    capacity: null,
    get_loadFactor: function () {
      return this.mH.get_loadFactor();
    },
    get_slotCount: function () {
      return this.mH.slotCount;
    },
    reuseIterator: null,
    get_growthRate: function () {
      return this.mH.growthRate;
    },
    set_growthRate: function (a) {
      return (this.mH.growthRate = a);
    },
    mH: null,
    mKeys: null,
    mVals: null,
    mNext: null,
    mFree: null,
    mSize: null,
    mMinCapacity: null,
    mIterator: null,
    mTmpIntBuffer: null,
    mTmpKeyBuffer: null,
    getCollisionCount: function () {
      return this.mH.getCollisionCount();
    },
    getFront: function (a) {
      var b = this.mH;
      a = a.key;
      var c = (73856093 * a) & b.mMask,
        d = b.mHash[c];
      if (-1 == d) b = -2147483648;
      else {
        var e = b.mData;
        if (e[d] == a) b = e[d + 1];
        else {
          var f = -2147483648,
            g = d,
            h = g;
          for (d = e[d + 2]; -1 != d; ) {
            if (e[d] == a) {
              f = e[d + 1];
              e[h + 2] = e[d + 2];
              e[d + 2] = g;
              b.mHash[c] = d;
              break;
            }
            h = d;
            d = e[h + 2];
          }
          b = f;
        }
      }
      return -2147483648 == b ? null : this.mVals[b];
    },
    setIfAbsent: function (a, b) {
      if (1 != (null != a))
        throw new v(
          new ra("key != null", {
            fileName: "HashTable.hx",
            lineNumber: 210,
            className: "de.polygonal.ds.HashTable",
            methodName: "setIfAbsent",
          })
        );
      this.mSize == this.capacity && this.grow();
      var c = this.mFree,
        d = this.mH,
        e = a.key;
      if (1 != (-2147483648 != c))
        throw new v(
          new ra("val 0x80000000 is reserved (val != KEY_ABSENT)", {
            fileName: "IntIntHashTable.hx",
            lineNumber: 291,
            className: "de.polygonal.ds.IntIntHashTable",
            methodName: "setIfAbsent",
          })
        );
      var f = (73856093 * e) & d.mMask,
        g = d.mData,
        h = d.mHash[f];
      if (-1 == h)
        d.mSize == d.capacity && (d.grow(), (g = d.mData)),
          (h = 3 * d.mFree),
          (d.mFree = d.mNext[d.mFree]),
          (d.mHash[f] = h),
          (g[h] = e),
          (g[h + 1] = c),
          d.mSize++,
          (d = !0);
      else if (g[h] == e) d = !1;
      else {
        for (f = g[h + 2]; -1 != f; ) {
          if (g[f] == e) {
            h = -1;
            break;
          }
          h = f;
          f = g[h + 2];
        }
        -1 == h
          ? (d = !1)
          : (d.mSize == d.capacity && (d.grow(), (g = d.mData)),
            (f = 3 * d.mFree),
            (d.mFree = d.mNext[d.mFree]),
            (g[h + 2] = f),
            (g[f] = e),
            (g[f + 1] = c),
            d.mSize++,
            (d = !0));
      }
      return d
        ? ((this.mVals[c] = b),
          (this.mKeys[c] = a),
          (this.mFree = this.mNext[c]),
          this.mSize++,
          !0)
        : !1;
    },
    rehash: function (a) {
      this.mH.rehash(a);
      return this;
    },
    remap: function (a, b) {
      if (1 != (null != a))
        throw new v(
          new ra("key != null", {
            fileName: "HashTable.hx",
            lineNumber: 244,
            className: "de.polygonal.ds.HashTable",
            methodName: "remap",
          })
        );
      var c = this.mH;
      a = a.key;
      var d = c.mHash[(73856093 * a) & c.mMask];
      if (-1 == d) a = -2147483648;
      else if (((c = c.mData), c[d] == a)) a = c[d + 1];
      else {
        var e = -2147483648;
        for (d = c[d + 2]; -1 != d; ) {
          if (c[d] == a) {
            e = c[d + 1];
            break;
          }
          d = c[d + 2];
        }
        a = e;
      }
      return -2147483648 != a ? ((this.mVals[a] = b), !0) : !1;
    },
    toKeyArray: function () {
      if (0 == this.mSize) return [];
      var a = this.mSize;
      if (1 != 0 <= a)
        throw new v(
          new ra("len >= 0", {
            fileName: "ArrayTools.hx",
            lineNumber: 37,
            className: "de.polygonal.ds.tools.ArrayTools",
            methodName: "alloc",
          })
        );
      a = Array(a);
      for (var b = 0, c = this.mKeys, d, e = 0, f = this.capacity; e < f; )
        (d = e++), (d = c[d]), null != d && (a[b++] = d);
      return a;
    },
    pack: function () {
      this.mH.pack();
      if (this.mH.capacity == this.capacity) return this;
      this.capacity = this.mH.capacity;
      for (
        var a = (this.mNext = Array(this.capacity)),
          b = 0,
          c = this.capacity - 1;
        b < c;

      ) {
        var d = b++;
        a[d] = d + 1;
      }
      a[this.capacity - 1] = -1;
      this.mFree = 0;
      b = this.mKeys;
      a = Array(this.capacity);
      c = this.mVals;
      d = Array(this.capacity);
      for (var e = this.mFree, f = this.mH.iterator(); f.hasNext(); ) {
        var g = f.next();
        a[e] = b[g];
        d[e] = c[g];
        e = this.mNext[e];
      }
      this.mFree = e;
      this.mKeys = a;
      this.mVals = d;
      b = 0;
      for (c = this.mSize; b < c; )
        if (
          ((d = b++),
          (g = this.mH),
          (e = a[d].key),
          (f = g.mHash[(73856093 * e) & g.mMask]),
          -1 != f)
        )
          if (((g = g.mData), g[f] == e)) g[f + 1] = d;
          else
            for (f = g[f + 2]; -1 != f; ) {
              if (g[f] == e) {
                g[f + 1] = d;
                break;
              }
              f = g[f + 2];
            }
      return this;
    },
    iter: function (a) {
      if (1 != (null != a))
        throw new v(
          new ra("f != null", {
            fileName: "HashTable.hx",
            lineNumber: 322,
            className: "de.polygonal.ds.HashTable",
            methodName: "iter",
          })
        );
      for (
        var b = this.mH.mData,
          c = this.mVals,
          d = this.mKeys,
          e,
          f = 0,
          g = this.mH.capacity;
        f < g;

      )
        (e = f++), (e = b[3 * e + 1]), -2147483648 != e && a(d[e], c[e]);
      return this;
    },
    toString: function () {
      var a =
        "" +
        P.string(
          ia.format(
            "[ HashTable size=" +
              this.mSize +
              " capacity=" +
              this.capacity +
              " load=%.2f",
            [this.get_loadFactor()]
          )
        );
      if (0 == this.mSize) return a + " ]";
      a += "\n";
      for (var b = 0, c = this.keys(); c.hasNext(); ) {
        var d = c.next();
        d = P.string(d).length;
        b > d || (b = d);
      }
      c = [];
      b = "  %- " + b + "s -> %s\n";
      d = [];
      for (var e = this.keys(); e.hasNext(); ) {
        var f = e.next();
        d.push(f);
      }
      d.sort(function (a, b) {
        return a.key - b.key;
      });
      e = 1;
      f = d.length;
      for (var g = 0, h = 1; e < f; ) {
        if (d[g] == d[e]) ++h;
        else {
          g = d[g];
          c[0] = g;
          if (1 < h) (h = []), this.getAll(g, h), (c[1] = h.join(","));
          else {
            if (1 != (null != g))
              throw new v(
                new ra("key != null", {
                  fileName: "HashTable.hx",
                  lineNumber: 448,
                  className: "de.polygonal.ds.HashTable",
                  methodName: "get",
                })
              );
            var n = this.mH;
            h = g.key;
            g = n.mHash[(73856093 * h) & n.mMask];
            if (-1 == g) h = -2147483648;
            else if (((n = n.mData), n[g] == h)) h = n[g + 1];
            else {
              var k = -2147483648;
              for (g = n[g + 2]; -1 != g; ) {
                if (n[g] == h) {
                  k = n[g + 1];
                  break;
                }
                g = n[g + 2];
              }
              h = k;
            }
            c[1] = P.string(-2147483648 == h ? null : this.mVals[h]);
          }
          a += P.string(ia.format(b, c));
          g = e;
          h = 1;
        }
        ++e;
      }
      d = d[g];
      c[0] = d;
      if (1 < h) (e = []), this.getAll(d, e), (c[1] = e.join(","));
      else {
        if (1 != (null != d))
          throw new v(
            new ra("key != null", {
              fileName: "HashTable.hx",
              lineNumber: 448,
              className: "de.polygonal.ds.HashTable",
              methodName: "get",
            })
          );
        f = this.mH;
        d = d.key;
        e = f.mHash[(73856093 * d) & f.mMask];
        if (-1 == e) d = -2147483648;
        else if (((f = f.mData), f[e] == d)) d = f[e + 1];
        else {
          h = -2147483648;
          for (e = f[e + 2]; -1 != e; ) {
            if (f[e] == d) {
              h = f[e + 1];
              break;
            }
            e = f[e + 2];
          }
          d = h;
        }
        c[1] = P.string(-2147483648 == d ? null : this.mVals[d]);
      }
      a += P.string(ia.format(b, c));
      return a + "]";
    },
    grow: function () {
      var a = this.capacity;
      this.capacity = Vg.compute(this.get_growthRate(), this.capacity);
      var b = Array(this.capacity);
      Eb.blit(this.mNext, 0, b, 0, a);
      b = this.mNext = b;
      for (var c = a - 1, d = this.capacity - 1; c < d; ) {
        var e = c++;
        b[e] = e + 1;
      }
      b[this.capacity - 1] = -1;
      this.mFree = a;
      b = Array(this.capacity);
      Eb.blit(this.mVals, 0, b, 0, a);
      this.mVals = b;
      b = Array(this.capacity);
      Eb.blit(this.mKeys, 0, b, 0, a);
      this.mKeys = b;
    },
    has: function (a) {
      for (
        var b = this.mKeys, c = this.mVals, d = 0, e = this.capacity;
        d < e;

      ) {
        var f = d++;
        if (null != b[f] && c[f] == a) return !0;
      }
      return !1;
    },
    hasKey: function (a) {
      if (1 != (null != a))
        throw new v(
          new ra("key != null", {
            fileName: "HashTable.hx",
            lineNumber: 438,
            className: "de.polygonal.ds.HashTable",
            methodName: "hasKey",
          })
        );
      var b = this.mH;
      a = a.key;
      var c = b.mHash[(73856093 * a) & b.mMask];
      if (-1 == c) return !1;
      b = b.mData;
      if (b[c] == a) return !0;
      var d = !1;
      for (c = b[c + 2]; -1 != c; ) {
        if (b[c] == a) {
          d = !0;
          break;
        }
        c = b[c + 2];
      }
      return d;
    },
    get: function (a) {
      if (1 != (null != a))
        throw new v(
          new ra("key != null", {
            fileName: "HashTable.hx",
            lineNumber: 448,
            className: "de.polygonal.ds.HashTable",
            methodName: "get",
          })
        );
      var b = this.mH;
      a = a.key;
      var c = b.mHash[(73856093 * a) & b.mMask];
      if (-1 == c) a = -2147483648;
      else if (((b = b.mData), b[c] == a)) a = b[c + 1];
      else {
        var d = -2147483648;
        for (c = b[c + 2]; -1 != c; ) {
          if (b[c] == a) {
            d = b[c + 1];
            break;
          }
          c = b[c + 2];
        }
        a = d;
      }
      return -2147483648 == a ? null : this.mVals[a];
    },
    getAll: function (a, b) {
      var c = this.mH,
        d = a.key,
        e = c.mHash[(73856093 * d) & c.mMask];
      if (-1 == e) d = -2147483648;
      else if (((c = c.mData), c[e] == d)) d = c[e + 1];
      else {
        var f = -2147483648;
        for (e = c[e + 2]; -1 != e; ) {
          if (c[e] == d) {
            f = c[e + 1];
            break;
          }
          e = c[e + 2];
        }
        d = f;
      }
      if (-2147483648 == d) return 0;
      d = this.mTmpIntBuffer;
      a = this.mH.getAll(a.key, d);
      e = this.mVals;
      for (c = 0; c < a; ) (f = c++), (b[f] = e[d[f]]);
      return a;
    },
    set: function (a, b) {
      if (1 != (null != a))
        throw new v(
          new ra("key != null", {
            fileName: "HashTable.hx",
            lineNumber: 482,
            className: "de.polygonal.ds.HashTable",
            methodName: "set",
          })
        );
      this.mSize == this.capacity && this.grow();
      var c = this.mFree,
        d = this.mH,
        e = a.key;
      if (1 != (-2147483648 != c))
        throw new v(
          new ra("val 0x80000000 is reserved (val != KEY_ABSENT)", {
            fileName: "IntIntHashTable.hx",
            lineNumber: 1046,
            className: "de.polygonal.ds.IntIntHashTable",
            methodName: "set",
          })
        );
      d.mSize == d.capacity && d.grow();
      var f = d.mData,
        g = d.mHash,
        h = 3 * d.mFree;
      d.mFree = d.mNext[d.mFree];
      f[h] = e;
      f[h + 1] = c;
      var n = (73856093 * e) & d.mMask,
        k = g[n];
      if (-1 == k) (g[n] = h), d.mSize++, (d = !0);
      else {
        g = f[k] != e;
        for (n = f[k + 2]; -1 != n; )
          f[n] == e && (g = !1), (k = n), (n = f[n + 2]);
        f[k + 2] = h;
        d.mSize++;
        d = g;
      }
      this.mVals[c] = b;
      this.mKeys[c] = a;
      this.mFree = this.mNext[c];
      this.mSize++;
      return d;
    },
    unset: function (a) {
      var b = this.mH,
        c = a.key,
        d = b.mHash[(73856093 * c) & b.mMask];
      if (-1 == d) c = -2147483648;
      else if (((b = b.mData), b[d] == c)) c = b[d + 1];
      else {
        var e = -2147483648;
        for (d = b[d + 2]; -1 != d; ) {
          if (b[d] == c) {
            e = b[d + 1];
            break;
          }
          d = b[d + 2];
        }
        c = e;
      }
      if (-2147483648 == c) return !1;
      this.mKeys[c] = null;
      this.mNext[c] = this.mFree;
      this.mFree = c;
      c = this.mH;
      b = a.key;
      e = (73856093 * b) & c.mMask;
      var f = c.mHash;
      a = f[e];
      if (-1 != a)
        if (((d = c.mData), b == d[a]))
          (f[e] = -1 == d[a + 2] ? -1 : d[a + 2]),
            (b = (a / 3) | 0),
            (c.mNext[b] = c.mFree),
            (c.mFree = b),
            (d[a + 1] = -2147483648),
            (d[a + 2] = -1),
            c.mSize--;
        else {
          e = !1;
          f = a;
          for (a = d[a + 2]; -1 != a; ) {
            if (d[a] == b) {
              e = !0;
              break;
            }
            f = a;
            a = d[f + 2];
          }
          e &&
            ((d[f + 2] = d[a + 2]),
            (b = (a / 3) | 0),
            (c.mNext[b] = c.mFree),
            (c.mFree = b),
            (d[a + 1] = -2147483648),
            (d[a + 2] = -1),
            c.mSize--);
        }
      this.mSize--;
      return !0;
    },
    toValSet: function () {
      for (
        var a = new zi(),
          b = this.mKeys,
          c = this.mVals,
          d = 0,
          e = this.capacity;
        d < e;

      ) {
        var f = d++;
        null != b[f] && a.set(c[f]);
      }
      return a;
    },
    toKeySet: function () {
      for (
        var a = new zi(), b = this.mKeys, c, d = 0, e = this.capacity;
        d < e;

      )
        (c = d++), (c = b[c]), null != c && a.set(c);
      return a;
    },
    keys: function () {
      return new hn(this);
    },
    get_size: function () {
      return this.mSize;
    },
    free: function () {
      Eb.nullify(this.mVals);
      this.mVals = null;
      Eb.nullify(this.mKeys);
      this.mNext = this.mKeys = null;
      this.mH.free();
      this.mH = null;
      null != this.mIterator &&
        (this.mIterator.free(), (this.mIterator = null));
      this.mTmpKeyBuffer = this.mTmpIntBuffer = null;
    },
    contains: function (a) {
      return this.has(a);
    },
    remove: function (a) {
      for (
        var b = this.mTmpKeyBuffer,
          c = this.mKeys,
          d = this.mVals,
          e,
          f = 0,
          g = 0,
          h = this.capacity;
        g < h;

      ) {
        var n = g++;
        e = c[n];
        null != e && d[n] == a && (b[f++] = e);
      }
      a = 0;
      for (c = f; a < c; ) (d = a++), this.unset(b[d]), (b[d] = null);
      return 0 < f;
    },
    clear: function (a) {
      null == a && (a = !1);
      this.mH.clear(a);
      Eb.init(this.mKeys, null, 0, this.capacity);
      Eb.init(this.mVals, null, 0, this.capacity);
      a = this.mNext;
      for (var b = 0, c = this.capacity - 1; b < c; ) {
        var d = b++;
        a[d] = d + 1;
      }
      a[this.capacity - 1] = -1;
      this.mSize = this.mFree = 0;
    },
    iterator: function () {
      return this.reuseIterator
        ? (null == this.mIterator
            ? (this.mIterator = new rk(this))
            : this.mIterator.reset(),
          this.mIterator)
        : new rk(this);
    },
    isEmpty: function () {
      return 0 == this.mSize;
    },
    toArray: function () {
      if (0 == this.mSize) return [];
      var a = this.mSize;
      if (1 != 0 <= a)
        throw new v(
          new ra("len >= 0", {
            fileName: "ArrayTools.hx",
            lineNumber: 37,
            className: "de.polygonal.ds.tools.ArrayTools",
            methodName: "alloc",
          })
        );
      a = Array(a);
      for (
        var b = 0, c = this.mKeys, d = this.mVals, e = 0, f = this.capacity;
        e < f;

      ) {
        var g = e++;
        null != c[g] && (a[b++] = d[g]);
      }
      return a;
    },
    clone: function (a, b) {
      null == a && (a = !0);
      var c = new gn(this.mH.slotCount, this.mSize);
      c.mH = this.mH.clone();
      c.mSize = this.mSize;
      c.mFree = this.mFree;
      var d = this.mVals,
        e = c.mVals,
        f = this.mKeys;
      Eb.blit(f, 0, c.mKeys, 0, this.mSize);
      if (a) Eb.blit(d, 0, e, 0, this.mSize);
      else if (null != b) {
        a = 0;
        for (var g = this.mSize; a < g; ) {
          var h = a++;
          e[h] = null != f[h] ? b(d[h]) : null;
        }
      } else
        for (b = 0, a = this.mSize; b < a; )
          if (((g = b++), null != f[g])) {
            if (1 != u.__instanceof(d[g], Ug))
              throw new v(
                new ra(
                  "element is not of type Cloneable (Std.is(srcVals.get(i), Cloneable))",
                  {
                    fileName: "HashTable.hx",
                    lineNumber: 734,
                    className: "de.polygonal.ds.HashTable",
                    methodName: "clone",
                  }
                )
              );
            e[g] = u.__cast(d[g], Ug).clone();
          } else e[g] = null;
      Eb.blit(this.mNext, 0, c.mNext, 0, this.mSize);
      return c;
    },
    __class__: gn,
    __properties__: {
      get_size: "get_size",
      set_growthRate: "set_growthRate",
      get_growthRate: "get_growthRate",
      get_slotCount: "get_slotCount",
      get_loadFactor: "get_loadFactor",
    },
  };
  var qh = function () {};
  p["de.polygonal.ds.Itr"] = qh;
  qh.__name__ = ["de", "polygonal", "ds", "Itr"];
  qh.prototype = {
    hasNext: null,
    next: null,
    remove: null,
    reset: null,
    __class__: qh,
  };
  var hn = function (a) {
    this.mObject = a;
    this.reset();
  };
  p["de.polygonal.ds.HashTableKeyIterator"] = hn;
  hn.__name__ = ["de", "polygonal", "ds", "HashTableKeyIterator"];
  hn.__interfaces__ = [qh];
  hn.prototype = {
    mObject: null,
    mKeys: null,
    mI: null,
    mS: null,
    free: function () {
      this.mKeys = this.mObject = null;
    },
    reset: function () {
      this.mKeys = this.mObject.mKeys;
      this.mS = this.mObject.mH.capacity;
      for (this.mI = 0; this.mI < this.mS && null == this.mKeys[this.mI]; )
        this.mI++;
      return this;
    },
    hasNext: function () {
      return this.mI < this.mS;
    },
    next: function () {
      for (
        var a = this.mKeys[this.mI];
        ++this.mI < this.mS && null == this.mKeys[this.mI];

      );
      return a;
    },
    remove: function () {
      throw new v("unsupported operation");
    },
    __class__: hn,
  };
  var rk = function (a) {
    this.mObject = a;
    this.reset();
  };
  p["de.polygonal.ds.HashTableValIterator"] = rk;
  rk.__name__ = ["de", "polygonal", "ds", "HashTableValIterator"];
  rk.__interfaces__ = [qh];
  rk.prototype = {
    mObject: null,
    mKeys: null,
    mVals: null,
    mI: null,
    mS: null,
    free: function () {
      this.mVals = this.mKeys = this.mObject = null;
    },
    reset: function () {
      this.mVals = this.mObject.mVals;
      this.mKeys = this.mObject.mKeys;
      this.mS = this.mObject.mH.capacity;
      for (this.mI = 0; this.mI < this.mS && null == this.mKeys[this.mI]; )
        this.mI++;
      return this;
    },
    hasNext: function () {
      return this.mI < this.mS;
    },
    next: function () {
      for (
        var a = this.mVals[this.mI];
        ++this.mI < this.mS && null == this.mKeys[this.mI];

      );
      return a;
    },
    remove: function () {
      throw new v("unsupported operation");
    },
    __class__: rk,
  };
  var sk = function () {};
  p["de.polygonal.ds.Set"] = sk;
  sk.__name__ = ["de", "polygonal", "ds", "Set"];
  sk.__interfaces__ = [qk];
  sk.prototype = { has: null, set: null, unset: null, __class__: sk };
  var Wg = function (a, b) {
    null == b && (b = -1);
    this.mFree = this.mSize = 0;
    this.reuseIterator = !1;
    this.growthRate = -3;
    this.key = sg.next();
    if (1 != 0 < a)
      throw new v(
        new ra("slotCount > 0", {
          fileName: "IntHashSet.hx",
          lineNumber: 136,
          className: "de.polygonal.ds.IntHashSet",
          methodName: "new",
        })
      );
    if (1 != (0 < a && 0 == (a & (a - 1))))
      throw new v(
        new ra("slotCount is not a power of 2 (M.isPow2(slotCount))", {
          fileName: "IntHashSet.hx",
          lineNumber: 137,
          className: "de.polygonal.ds.IntHashSet",
          methodName: "new",
        })
      );
    -1 == b && (b = a);
    2 > b && (b = 2);
    this.mMinCapacity = this.capacity = b;
    this.slotCount = a;
    this.mMask = a - 1;
    this.mHash = Eb.init(Array(a), -1);
    this.mData = Array(this.capacity << 1);
    this.mNext = Array(this.capacity);
    b = 1;
    a = this.mData;
    for (var c = 0, d = this.capacity; c < d; )
      c++, (a[b - 1] = -2147483648), (a[b] = -1), (b += 2);
    a = this.mNext;
    b = 0;
    for (c = this.capacity - 1; b < c; ) (d = b++), (a[d] = d + 1);
    a[this.capacity - 1] = -1;
  };
  p["de.polygonal.ds.IntHashSet"] = Wg;
  Wg.__name__ = ["de", "polygonal", "ds", "IntHashSet"];
  Wg.__interfaces__ = [sk];
  Wg.prototype = {
    key: null,
    capacity: null,
    growthRate: null,
    reuseIterator: null,
    get_loadFactor: function () {
      return this.mSize / this.slotCount;
    },
    slotCount: null,
    mHash: null,
    mData: null,
    mNext: null,
    mMask: null,
    mFree: null,
    mSize: null,
    mMinCapacity: null,
    mIterator: null,
    getCollisionCount: function () {
      for (
        var a = 0, b, c = this.mData, d = this.mHash, e = 0, f = this.slotCount;
        e < f;

      )
        if (((b = e++), (b = d[b]), -1 != b))
          for (b = c[b + 1]; -1 != b; ) (b = c[b + 1]), ++a;
      return a;
    },
    hasFront: function (a) {
      if (1 != (-2147483648 != a))
        throw new v(
          new ra("value 0x80000000 is reserved (val != VAL_ABSENT)", {
            fileName: "IntHashSet.hx",
            lineNumber: 201,
            className: "de.polygonal.ds.IntHashSet",
            methodName: "hasFront",
          })
        );
      var b = (73856093 * a) & this.mMask,
        c = this.mHash[b];
      if (-1 == c) return !1;
      var d = this.mData;
      if (d[c] == a) return !0;
      var e = !1,
        f = c,
        g = f;
      for (c = d[c + 1]; -1 != c; ) {
        if (d[c] == a) {
          d[g + 1] = d[c + 1];
          d[c + 1] = f;
          d[b] = c;
          e = !0;
          break;
        }
        g = c;
        c = d[g + 1];
      }
      return e;
    },
    rehash: function (a) {
      if (1 != (0 < a && 0 == (a & (a - 1))))
        throw new v(
          new ra("slotCount is not a power of 2 (M.isPow2(slotCount))", {
            fileName: "IntHashSet.hx",
            lineNumber: 268,
            className: "de.polygonal.ds.IntHashSet",
            methodName: "rehash",
          })
        );
      if (this.slotCount == a) return this;
      for (
        var b = new Wg(a, this.capacity),
          c = this.mData,
          d = 0,
          e = this.capacity;
        d < e;

      ) {
        var f = d++;
        f = c[f << 1];
        if (-2147483648 != f) {
          if (1 != (-2147483648 != f))
            throw new v(
              new ra("value 0x80000000 is reserved (val != VAL_ABSENT)", {
                fileName: "IntHashSet.hx",
                lineNumber: 519,
                className: "de.polygonal.ds.IntHashSet",
                methodName: "set",
              })
            );
          var g = (73856093 * f) & b.mMask,
            h = b.mData,
            n = b.mHash[g];
          if (-1 == n)
            b.mSize == b.capacity && (b.grow(), (h = b.mData)),
              (n = b.mFree << 1),
              (b.mFree = b.mNext[b.mFree]),
              (b.mHash[g] = n),
              (h[n] = f),
              b.mSize++;
          else if (h[n] != f) {
            for (g = h[n + 1]; -1 != g; ) {
              if (h[g] == f) {
                n = -1;
                break;
              }
              n = g;
              g = h[g + 1];
            }
            -1 != n &&
              (b.mSize == b.capacity && (b.grow(), (h = b.mData)),
              (g = b.mFree << 1),
              (b.mFree = b.mNext[b.mFree]),
              (h[g] = f),
              (h[n + 1] = g),
              b.mSize++);
          }
        }
      }
      this.mHash = b.mHash;
      this.mData = b.mData;
      this.mNext = b.mNext;
      this.slotCount = a;
      this.mMask = b.mMask;
      this.mFree = b.mFree;
      return this;
    },
    pack: function () {
      if (this.capacity == this.mMinCapacity) return this;
      var a = this.mSize,
        b = this.mMinCapacity;
      this.capacity = a > b ? a : b;
      a = this.mData;
      var c = 0,
        d = this.mHash;
      b = Array(this.capacity << 1);
      for (var e = 0, f = this.slotCount; e < f; ) {
        var g = e++;
        var h = d[g];
        if (-1 != h)
          for (d[g] = c, b[c++] = a[h], b[c++] = -1, h = a[h + 1]; -1 != h; )
            (b[c - 1] = c), (b[c++] = a[h]), (b[c++] = -1), (h = a[h + 1]);
      }
      this.mData = b;
      a = this.mNext = Array(this.capacity);
      b = 0;
      for (c = this.capacity - 1; b < c; ) (d = b++), (a[d] = d + 1);
      this.mFree = a[this.capacity - 1] = -1;
      return this;
    },
    iter: function (a) {
      if (1 != (null != a))
        throw new v(
          new ra("f != null", {
            fileName: "IntHashSet.hx",
            lineNumber: 383,
            className: "de.polygonal.ds.IntHashSet",
            methodName: "iter",
          })
        );
      for (var b = this.mData, c, d, e = 0, f = this.capacity; e < f; )
        (c = e++ << 1), (d = b[c]), -2147483648 != d && a(b[c]);
      return this;
    },
    toString: function () {
      var a =
        "" +
        P.string(
          ia.format(
            "[ IntHashSet size=" +
              this.mSize +
              " capacity=" +
              this.capacity +
              " load=%.2f",
            [this.get_loadFactor()]
          )
        );
      if (0 == this.mSize) return a + " ]";
      a += "\n";
      for (var b = this.iterator(); b.hasNext(); ) {
        var c = b.next();
        a += P.string("  " + c + "\n");
      }
      return a + "]";
    },
    hashCode: function (a) {
      return (73856093 * a) & this.mMask;
    },
    grow: function () {
      var a = this.capacity;
      this.capacity = Vg.compute(this.growthRate, this.capacity);
      var b = Array(this.capacity);
      Eb.blit(this.mNext, 0, b, 0, a);
      this.mNext = b;
      b = Array(this.capacity << 1);
      Eb.blit(this.mData, 0, b, 0, a << 1);
      this.mData = b;
      b = this.mNext;
      for (var c = a - 1, d = this.capacity - 1; c < d; ) {
        var e = c++;
        b[e] = e + 1;
      }
      b[this.capacity - 1] = -1;
      this.mFree = a;
      b = a << 1;
      c = this.mData;
      d = 0;
      for (a = this.capacity - a; d < a; )
        d++, (c[b] = -2147483648), (c[b + 1] = -1), (b += 2);
    },
    has: function (a) {
      if (1 != (-2147483648 != a))
        throw new v(
          new ra("value 0x80000000 is reserved (val != VAL_ABSENT)", {
            fileName: "IntHashSet.hx",
            lineNumber: 465,
            className: "de.polygonal.ds.IntHashSet",
            methodName: "has",
          })
        );
      var b = this.mHash[(73856093 * a) & this.mMask];
      if (-1 == b) return !1;
      var c = this.mData;
      if (c[b] == a) return !0;
      var d = !1;
      for (b = c[b + 1]; -1 != b; ) {
        if (c[b] == a) {
          d = !0;
          break;
        }
        b = c[b + 1];
      }
      return d;
    },
    set: function (a) {
      if (1 != (-2147483648 != a))
        throw new v(
          new ra("value 0x80000000 is reserved (val != VAL_ABSENT)", {
            fileName: "IntHashSet.hx",
            lineNumber: 519,
            className: "de.polygonal.ds.IntHashSet",
            methodName: "set",
          })
        );
      var b = (73856093 * a) & this.mMask,
        c = this.mData,
        d = this.mHash[b];
      if (-1 == d)
        return (
          this.mSize == this.capacity && (this.grow(), (c = this.mData)),
          (d = this.mFree << 1),
          (this.mFree = this.mNext[this.mFree]),
          (this.mHash[b] = d),
          (c[d] = a),
          this.mSize++,
          !0
        );
      if (c[d] == a) return !1;
      for (b = c[d + 1]; -1 != b; ) {
        if (c[b] == a) {
          d = -1;
          break;
        }
        d = b;
        b = c[b + 1];
      }
      if (-1 == d) return !1;
      this.mSize == this.capacity && (this.grow(), (c = this.mData));
      b = this.mFree << 1;
      this.mFree = this.mNext[this.mFree];
      c[b] = a;
      c[d + 1] = b;
      this.mSize++;
      return !0;
    },
    unset: function (a) {
      var b = (73856093 * a) & this.mMask,
        c = this.mHash[b];
      if (-1 == c) return !1;
      var d = this.mData;
      if (a == d[c])
        return (
          (this.mHash[b] = -1 == d[c + 1] ? -1 : d[c + 1]),
          (a = c >> 1),
          (this.mNext[a] = this.mFree),
          (this.mFree = a),
          (d[c] = -2147483648),
          (d[c + 1] = -1),
          this.mSize--,
          !0
        );
      b = !1;
      var e = c;
      for (c = d[c + 1]; -1 != c; ) {
        if (d[c] == a) {
          b = !0;
          break;
        }
        e = c;
        c = d[e + 1];
      }
      return b
        ? ((d[e + 1] = d[c + 1]),
          (a = c >> 1),
          (this.mNext[a] = this.mFree),
          (this.mFree = a),
          (d[c] = -2147483648),
          (d[c + 1] = -1),
          --this.mSize,
          !0)
        : !1;
    },
    get_size: function () {
      return this.mSize;
    },
    free: function () {
      this.mNext = this.mData = this.mHash = null;
      null != this.mIterator &&
        (this.mIterator.free(), (this.mIterator = null));
    },
    contains: function (a) {
      if (1 != (-2147483648 != a))
        throw new v(
          new ra("value 0x80000000 is reserved (val != VAL_ABSENT)", {
            fileName: "IntHashSet.hx",
            lineNumber: 465,
            className: "de.polygonal.ds.IntHashSet",
            methodName: "has",
          })
        );
      var b = this.mHash[(73856093 * a) & this.mMask];
      if (-1 == b) return !1;
      var c = this.mData;
      if (c[b] == a) return !0;
      var d = !1;
      for (b = c[b + 1]; -1 != b; ) {
        if (c[b] == a) {
          d = !0;
          break;
        }
        b = c[b + 1];
      }
      return d;
    },
    remove: function (a) {
      var b = (73856093 * a) & this.mMask,
        c = this.mHash[b];
      if (-1 == c) return !1;
      var d = this.mData;
      if (a == d[c])
        return (
          (this.mHash[b] = -1 == d[c + 1] ? -1 : d[c + 1]),
          (a = c >> 1),
          (this.mNext[a] = this.mFree),
          (this.mFree = a),
          (d[c] = -2147483648),
          (d[c + 1] = -1),
          this.mSize--,
          !0
        );
      b = !1;
      var e = c;
      for (c = d[c + 1]; -1 != c; ) {
        if (d[c] == a) {
          b = !0;
          break;
        }
        e = c;
        c = d[e + 1];
      }
      return b
        ? ((d[e + 1] = d[c + 1]),
          (a = c >> 1),
          (this.mNext[a] = this.mFree),
          (this.mFree = a),
          (d[c] = -2147483648),
          (d[c + 1] = -1),
          --this.mSize,
          !0)
        : !1;
    },
    clear: function (a) {
      a = this.mHash;
      for (var b = 0, c = this.slotCount; b < c; ) {
        var d = b++;
        a[d] = -1;
      }
      b = 1;
      a = this.mData;
      c = 0;
      for (d = this.capacity; c < d; )
        c++, (a[b - 1] = -2147483648), (a[b] = -1), (b += 2);
      a = this.mNext;
      b = 0;
      for (c = this.capacity - 1; b < c; ) (d = b++), (a[d] = d + 1);
      a[this.capacity - 1] = -1;
      this.mSize = this.mFree = 0;
    },
    iterator: function () {
      return this.reuseIterator
        ? (null == this.mIterator
            ? (this.mIterator = new tk(this))
            : this.mIterator.reset(),
          this.mIterator)
        : new tk(this);
    },
    isEmpty: function () {
      return 0 == this.mSize;
    },
    toArray: function () {
      if (0 == this.mSize) return [];
      var a = this.mSize;
      if (1 != 0 <= a)
        throw new v(
          new ra("len >= 0", {
            fileName: "ArrayTools.hx",
            lineNumber: 37,
            className: "de.polygonal.ds.tools.ArrayTools",
            methodName: "alloc",
          })
        );
      a = Array(a);
      for (var b = 0, c, d = this.mData, e = 0, f = this.capacity; e < f; )
        (c = e++), (c = d[c << 1]), -2147483648 != c && (a[b++] = c);
      return a;
    },
    clone: function (a, b) {
      a = new Wg(this.slotCount, this.mSize);
      Eb.blit(this.mHash, 0, a.mHash, 0, this.slotCount);
      Eb.blit(this.mData, 0, a.mData, 0, this.mSize << 1);
      Eb.blit(this.mNext, 0, a.mNext, 0, this.mSize);
      a.mMask = this.mMask;
      a.slotCount = this.slotCount;
      a.capacity = this.capacity;
      a.mFree = this.mFree;
      a.mSize = this.mSize;
      return a;
    },
    __class__: Wg,
    __properties__: { get_size: "get_size", get_loadFactor: "get_loadFactor" },
  };
  var tk = function (a) {
    this.mObject = a;
    this.mData = a.mData;
    this.mI = 0;
    this.mS = a.capacity;
    this.scan();
  };
  p["de.polygonal.ds.IntHashSetIterator"] = tk;
  tk.__name__ = ["de", "polygonal", "ds", "IntHashSetIterator"];
  tk.__interfaces__ = [qh];
  tk.prototype = {
    mObject: null,
    mI: null,
    mS: null,
    mData: null,
    free: function () {
      this.mData = this.mObject = null;
    },
    reset: function () {
      this.mData = this.mObject.mData;
      this.mI = 0;
      this.mS = this.mObject.capacity;
      this.scan();
      return this;
    },
    hasNext: function () {
      return this.mI < this.mS;
    },
    next: function () {
      var a = this.mData[this.mI++ << 1];
      this.scan();
      return a;
    },
    remove: function () {
      throw new v("unsupported operation");
    },
    scan: function () {
      for (; this.mI < this.mS && -2147483648 == this.mData[this.mI << 1]; )
        this.mI++;
    },
    __class__: tk,
  };
  var Ee = function (a, b) {
    null == b && (b = -1);
    this.mTmpKeyBuffer = [];
    this.mIterator = null;
    this.mFree = this.mSize = 0;
    this.reuseIterator = !1;
    this.key = sg.next();
    if (1 != 0 < a)
      throw new v(
        new ra("slotCount > 0", {
          fileName: "IntHashTable.hx",
          lineNumber: 158,
          className: "de.polygonal.ds.IntHashTable",
          methodName: "new",
        })
      );
    -1 == b && (b = a);
    2 > b && (b = 2);
    this.mMinCapacity = this.capacity = b;
    this.mH = new tg(a, this.capacity);
    this.mVals = Array(this.capacity);
    this.mNext = Array(this.capacity);
    this.mKeys = Eb.init(Array(this.capacity), -2147483648, 0, this.capacity);
    a = this.mNext;
    b = 0;
    for (var c = this.capacity - 1; b < c; ) {
      var d = b++;
      a[d] = d + 1;
    }
    a[this.capacity - 1] = -1;
  };
  p["de.polygonal.ds.IntHashTable"] = Ee;
  Ee.__name__ = ["de", "polygonal", "ds", "IntHashTable"];
  Ee.__interfaces__ = [gj];
  Ee.prototype = {
    key: null,
    capacity: null,
    get_growthRate: function () {
      return this.mH.growthRate;
    },
    set_growthRate: function (a) {
      return (this.mH.growthRate = a);
    },
    reuseIterator: null,
    get_loadFactor: function () {
      return this.mH.get_loadFactor();
    },
    get_slotCount: function () {
      return this.mH.slotCount;
    },
    mH: null,
    mVals: null,
    mNext: null,
    mKeys: null,
    mFree: null,
    mSize: null,
    mMinCapacity: null,
    mShrinkSize: null,
    mIterator: null,
    mTmpKeyBuffer: null,
    getCollisionCount: function () {
      return this.mH.getCollisionCount();
    },
    getFront: function (a) {
      var b = this.mH,
        c = (73856093 * a) & b.mMask,
        d = b.mHash[c];
      if (-1 == d) a = -2147483648;
      else {
        var e = b.mData;
        if (e[d] == a) a = e[d + 1];
        else {
          var f = -2147483648,
            g = d,
            h = g;
          for (d = e[d + 2]; -1 != d; ) {
            if (e[d] == a) {
              f = e[d + 1];
              e[h + 2] = e[d + 2];
              e[d + 2] = g;
              b.mHash[c] = d;
              break;
            }
            h = d;
            d = e[h + 2];
          }
          a = f;
        }
      }
      return -2147483648 == a ? null : this.mVals[a];
    },
    setIfAbsent: function (a, b) {
      if (1 != (-2147483648 != a))
        throw new v(
          new ra(
            "key 0x80000000 is reserved (key != IntIntHashTable.KEY_ABSENT)",
            {
              fileName: "IntHashTable.hx",
              lineNumber: 212,
              className: "de.polygonal.ds.IntHashTable",
              methodName: "setIfAbsent",
            }
          )
        );
      this.mSize == this.capacity && this.grow();
      var c = this.mFree,
        d = this.mH;
      if (1 != (-2147483648 != c))
        throw new v(
          new ra("val 0x80000000 is reserved (val != KEY_ABSENT)", {
            fileName: "IntIntHashTable.hx",
            lineNumber: 291,
            className: "de.polygonal.ds.IntIntHashTable",
            methodName: "setIfAbsent",
          })
        );
      var e = (73856093 * a) & d.mMask,
        f = d.mData,
        g = d.mHash[e];
      if (-1 == g)
        d.mSize == d.capacity && (d.grow(), (f = d.mData)),
          (g = 3 * d.mFree),
          (d.mFree = d.mNext[d.mFree]),
          (d.mHash[e] = g),
          (f[g] = a),
          (f[g + 1] = c),
          d.mSize++,
          (d = !0);
      else if (f[g] == a) d = !1;
      else {
        for (e = f[g + 2]; -1 != e; ) {
          if (f[e] == a) {
            g = -1;
            break;
          }
          g = e;
          e = f[g + 2];
        }
        -1 == g
          ? (d = !1)
          : (d.mSize == d.capacity && (d.grow(), (f = d.mData)),
            (e = 3 * d.mFree),
            (d.mFree = d.mNext[d.mFree]),
            (f[g + 2] = e),
            (f[e] = a),
            (f[e + 1] = c),
            d.mSize++,
            (d = !0));
      }
      return d
        ? ((this.mVals[c] = b),
          (this.mKeys[c] = a),
          (this.mFree = this.mNext[c]),
          this.mSize++,
          !0)
        : !1;
    },
    rehash: function (a) {
      this.mH.rehash(a);
      return this;
    },
    remap: function (a, b) {
      var c = this.mH,
        d = c.mHash[(73856093 * a) & c.mMask];
      if (-1 == d) a = -2147483648;
      else if (((c = c.mData), c[d] == a)) a = c[d + 1];
      else {
        var e = -2147483648;
        for (d = c[d + 2]; -1 != d; ) {
          if (c[d] == a) {
            e = c[d + 1];
            break;
          }
          d = c[d + 2];
        }
        a = e;
      }
      return -2147483648 != a ? ((this.mVals[a] = b), !0) : !1;
    },
    toKeyArray: function () {
      return this.mH.toKeyArray();
    },
    toString: function () {
      var a =
        "" +
        P.string(
          ia.format(
            "[ IntHashTable size=" +
              this.mSize +
              " capacity=" +
              this.capacity +
              " load=%.2f",
            [this.get_loadFactor()]
          )
        );
      if (0 == this.mSize) return a + " ]";
      a += "\n";
      for (var b = 0, c = this.keys(); c.hasNext(); ) {
        var d = c.next();
        b = Math.max(b, d);
      }
      for (var e = 1; 0 != b; ) ++e, (b = (b / 10) | 0);
      b = [];
      c = "  %- " + e + "d -> %s\n";
      d = [];
      for (e = this.keys(); e.hasNext(); ) {
        var f = e.next();
        d.push(f);
      }
      d.sort(function (a, b) {
        return a - b;
      });
      e = 1;
      f = d.length;
      for (var g = 0, h = 1; e < f; ) {
        if (d[g] == d[e]) ++h;
        else {
          g = d[g];
          b[0] = g;
          if (1 < h) (h = []), this.getAll(g, h), (b[1] = h.join(","));
          else {
            h = this.mVals;
            var n = this.mH,
              k = n.mHash[(73856093 * g) & n.mMask];
            if (-1 == k) g = -2147483648;
            else if (((n = n.mData), n[k] == g)) g = n[k + 1];
            else {
              var m = -2147483648;
              for (k = n[k + 2]; -1 != k; ) {
                if (n[k] == g) {
                  m = n[k + 1];
                  break;
                }
                k = n[k + 2];
              }
              g = m;
            }
            b[1] = P.string(h[g]);
          }
          a += P.string(ia.format(c, b));
          g = e;
          h = 1;
        }
        ++e;
      }
      d = d[g];
      b[0] = d;
      if (1 < h) (e = []), this.getAll(d, e), (b[1] = e.join(","));
      else {
        e = this.mVals;
        g = this.mH;
        f = g.mHash[(73856093 * d) & g.mMask];
        if (-1 == f) d = -2147483648;
        else if (((g = g.mData), g[f] == d)) d = g[f + 1];
        else {
          h = -2147483648;
          for (f = g[f + 2]; -1 != f; ) {
            if (g[f] == d) {
              h = g[f + 1];
              break;
            }
            f = g[f + 2];
          }
          d = h;
        }
        b[1] = P.string(e[d]);
      }
      a += P.string(ia.format(c, b));
      return a + "]";
    },
    has: function (a) {
      for (
        var b = this.mKeys, c = this.mVals, d = 0, e = this.capacity;
        d < e;

      ) {
        var f = d++;
        if (-2147483648 != b[f] && c[f] == a) return !0;
      }
      return !1;
    },
    hasKey: function (a) {
      var b = this.mH,
        c = b.mHash[(73856093 * a) & b.mMask];
      if (-1 == c) return !1;
      b = b.mData;
      if (b[c] == a) return !0;
      var d = !1;
      for (c = b[c + 2]; -1 != c; ) {
        if (b[c] == a) {
          d = !0;
          break;
        }
        c = b[c + 2];
      }
      return d;
    },
    count: function (a) {
      return this.mH.count(a);
    },
    get: function (a) {
      var b = this.mH,
        c = b.mHash[(73856093 * a) & b.mMask];
      if (-1 == c) a = -2147483648;
      else if (((b = b.mData), b[c] == a)) a = b[c + 1];
      else {
        var d = -2147483648;
        for (c = b[c + 2]; -1 != c; ) {
          if (b[c] == a) {
            d = b[c + 1];
            break;
          }
          c = b[c + 2];
        }
        a = d;
      }
      return -2147483648 == a ? null : this.mVals[a];
    },
    getAll: function (a, b) {
      var c = this.mH,
        d = c.mHash[(73856093 * a) & c.mMask];
      if (-1 == d) d = -2147483648;
      else if (((c = c.mData), c[d] == a)) d = c[d + 1];
      else {
        var e = -2147483648;
        for (d = c[d + 2]; -1 != d; ) {
          if (c[d] == a) {
            e = c[d + 1];
            break;
          }
          d = c[d + 2];
        }
        d = e;
      }
      if (-2147483648 == d) return 0;
      d = this.mTmpKeyBuffer;
      a = this.mH.getAll(a, d);
      c = this.mVals;
      for (e = 0; e < a; ) {
        var f = e++;
        b[f] = c[d[f]];
      }
      return a;
    },
    set: function (a, b) {
      if (1 != (-2147483648 != a))
        throw new v(
          new ra(
            "key 0x80000000 is reserved (key != IntIntHashTable.KEY_ABSENT)",
            {
              fileName: "IntHashTable.hx",
              lineNumber: 397,
              className: "de.polygonal.ds.IntHashTable",
              methodName: "set",
            }
          )
        );
      this.mSize == this.capacity && this.grow();
      var c = this.mFree,
        d = this.mH;
      if (1 != (-2147483648 != c))
        throw new v(
          new ra("val 0x80000000 is reserved (val != KEY_ABSENT)", {
            fileName: "IntIntHashTable.hx",
            lineNumber: 1046,
            className: "de.polygonal.ds.IntIntHashTable",
            methodName: "set",
          })
        );
      d.mSize == d.capacity && d.grow();
      var e = d.mData,
        f = d.mHash,
        g = 3 * d.mFree;
      d.mFree = d.mNext[d.mFree];
      e[g] = a;
      e[g + 1] = c;
      var h = (73856093 * a) & d.mMask,
        n = f[h];
      if (-1 == n) (f[h] = g), d.mSize++, (d = !0);
      else {
        f = e[n] != a;
        for (h = e[n + 2]; -1 != h; )
          e[h] == a && (f = !1), (n = h), (h = e[h + 2]);
        e[n + 2] = g;
        d.mSize++;
        d = f;
      }
      this.mVals[c] = b;
      this.mKeys[c] = a;
      this.mFree = this.mNext[c];
      this.mSize++;
      return d;
    },
    unset: function (a) {
      var b = this.mH,
        c = b.mHash[(73856093 * a) & b.mMask];
      if (-1 == c) c = -2147483648;
      else if (((b = b.mData), b[c] == a)) c = b[c + 1];
      else {
        var d = -2147483648;
        for (c = b[c + 2]; -1 != c; ) {
          if (b[c] == a) {
            d = b[c + 1];
            break;
          }
          c = b[c + 2];
        }
        c = d;
      }
      if (-2147483648 == c) return !1;
      this.mVals[c] = null;
      this.mKeys[c] = -2147483648;
      this.mNext[c] = this.mFree;
      this.mFree = c;
      c = this.mH;
      var e = (73856093 * a) & c.mMask,
        f = c.mHash;
      b = f[e];
      if (-1 != b)
        if (((d = c.mData), a == d[b]))
          (f[e] = -1 == d[b + 2] ? -1 : d[b + 2]),
            (a = (b / 3) | 0),
            (c.mNext[a] = c.mFree),
            (c.mFree = a),
            (d[b + 1] = -2147483648),
            (d[b + 2] = -1),
            c.mSize--;
        else {
          e = !1;
          f = b;
          for (b = d[b + 2]; -1 != b; ) {
            if (d[b] == a) {
              e = !0;
              break;
            }
            f = b;
            b = d[f + 2];
          }
          e &&
            ((d[f + 2] = d[b + 2]),
            (a = (b / 3) | 0),
            (c.mNext[a] = c.mFree),
            (c.mFree = a),
            (d[b + 1] = -2147483648),
            (d[b + 2] = -1),
            c.mSize--);
        }
      this.mSize--;
      return !0;
    },
    toValSet: function () {
      for (
        var a = new zi(),
          b = this.mKeys,
          c = this.mVals,
          d = 0,
          e = this.capacity;
        d < e;

      ) {
        var f = d++;
        -2147483648 != b[f] && a.set(c[f]);
      }
      return a;
    },
    toKeySet: function () {
      return this.mH.toKeySet();
    },
    keys: function () {
      return this.mH.keys();
    },
    pack: function () {
      this.mH.pack();
      if (this.mH.capacity == this.capacity) return this;
      this.capacity = this.mH.capacity;
      for (
        var a = (this.mNext = Array(this.capacity)),
          b = 0,
          c = this.capacity - 1;
        b < c;

      ) {
        var d = b++;
        a[d] = d + 1;
      }
      a[this.capacity - 1] = -1;
      this.mFree = 0;
      b = this.mKeys;
      a = Array(this.capacity);
      c = this.mVals;
      d = Array(this.capacity);
      for (var e = this.mFree, f = this.mH.iterator(); f.hasNext(); ) {
        var g = f.next();
        a[e] = b[g];
        d[e] = c[g];
        e = this.mNext[e];
      }
      this.mFree = e;
      this.mKeys = a;
      this.mVals = d;
      b = 0;
      for (c = this.mSize; b < c; )
        if (
          ((d = b++),
          (g = this.mH),
          (e = a[d]),
          (f = g.mHash[(73856093 * e) & g.mMask]),
          -1 != f)
        )
          if (((g = g.mData), g[f] == e)) g[f + 1] = d;
          else
            for (f = g[f + 2]; -1 != f; ) {
              if (g[f] == e) {
                g[f + 1] = d;
                break;
              }
              f = g[f + 2];
            }
      return this;
    },
    iter: function (a) {
      if (1 != (null != a))
        throw new v(
          new ra("f != null", {
            fileName: "IntHashTable.hx",
            lineNumber: 518,
            className: "de.polygonal.ds.IntHashTable",
            methodName: "iter",
          })
        );
      for (
        var b = this.mVals, c = this.mH, d = c.mData, e, f = 0, g = c.capacity;
        f < g;

      )
        (c = 3 * f++), (e = d[c + 1]), -2147483648 != e && a(d[c], b[e]);
      return this;
    },
    grow: function () {
      var a = this.capacity;
      this.capacity = Vg.compute(this.get_growthRate(), this.capacity);
      var b = Array(this.capacity);
      Eb.blit(this.mNext, 0, b, 0, a);
      this.mNext = b;
      b = Array(this.capacity);
      Eb.blit(this.mKeys, 0, b, 0, a);
      b = this.mKeys = b;
      for (var c = a, d = this.capacity; c < d; ) {
        var e = c++;
        b[e] = -2147483648;
      }
      b = this.mNext;
      c = a - 1;
      for (d = this.capacity - 1; c < d; ) (e = c++), (b[e] = e + 1);
      b[this.capacity - 1] = -1;
      this.mFree = a;
      b = Array(this.capacity);
      Eb.blit(this.mVals, 0, b, 0, a);
      this.mVals = b;
    },
    get_size: function () {
      return this.mSize;
    },
    free: function () {
      Eb.nullify(this.mVals);
      this.mNext = this.mKeys = this.mVals = null;
      this.mH.free();
      this.mH = null;
      null != this.mIterator &&
        (this.mIterator.free(), (this.mIterator = null));
      this.mTmpKeyBuffer = null;
    },
    contains: function (a) {
      return this.has(a);
    },
    remove: function (a) {
      for (
        var b = this.mTmpKeyBuffer,
          c = 0,
          d = this.mKeys,
          e = this.mVals,
          f,
          g = 0,
          h = this.capacity;
        g < h;

      ) {
        var n = g++;
        f = d[n];
        -2147483648 != f && e[n] == a && (b[c++] = f);
      }
      a = 0;
      for (d = c; a < d; ) (e = a++), this.unset(b[e]);
      return 0 < c;
    },
    clear: function (a) {
      null == a && (a = !1);
      this.mH.clear(a);
      Eb.init(this.mKeys, -2147483648, 0, this.capacity);
      a = this.mNext;
      for (var b = 0, c = this.capacity - 1; b < c; ) {
        var d = b++;
        a[d] = d + 1;
      }
      a[this.capacity - 1] = -1;
      this.mSize = this.mFree = 0;
    },
    iterator: function () {
      return this.reuseIterator
        ? (null == this.mIterator
            ? (this.mIterator = new uk(this))
            : this.mIterator.reset(),
          this.mIterator)
        : new uk(this);
    },
    isEmpty: function () {
      return 0 == this.mSize;
    },
    toArray: function () {
      if (0 == this.mSize) return [];
      var a = this.mSize;
      if (1 != 0 <= a)
        throw new v(
          new ra("len >= 0", {
            fileName: "ArrayTools.hx",
            lineNumber: 37,
            className: "de.polygonal.ds.tools.ArrayTools",
            methodName: "alloc",
          })
        );
      a = Array(a);
      for (
        var b = 0, c = this.mKeys, d = this.mVals, e = 0, f = this.capacity;
        e < f;

      ) {
        var g = e++;
        -2147483648 != c[g] && (a[b++] = d[g]);
      }
      return a;
    },
    clone: function (a, b) {
      null == a && (a = !0);
      var c = new Ee(this.mH.slotCount, this.mSize);
      c.mH = this.mH.clone(!1);
      c.mSize = this.mSize;
      c.mFree = this.mFree;
      var d = this.mVals,
        e = c.mVals;
      if (a) Eb.blit(d, 0, e, 0, this.mSize);
      else if (((a = this.mKeys), null != b))
        for (var f = 0, g = this.mSize; f < g; ) {
          var h = f++;
          -2147483648 != a[h] && (e[h] = b(d[h]));
        }
      else
        for (b = 0, f = this.mSize; b < f; )
          if (((g = b++), -2147483648 != a[g])) {
            if (1 != u.__instanceof(d[g], Ug))
              throw new v(
                new ra(
                  "element is not of type Cloneable (Std.is(src.get(i), Cloneable))",
                  {
                    fileName: "IntHashTable.hx",
                    lineNumber: 727,
                    className: "de.polygonal.ds.IntHashTable",
                    methodName: "clone",
                  }
                )
              );
            e[g] = u.__cast(d[g], Ug).clone();
          }
      Eb.blit(this.mKeys, 0, c.mKeys, 0, this.mSize);
      Eb.blit(this.mNext, 0, c.mNext, 0, this.mSize);
      return c;
    },
    __class__: Ee,
    __properties__: {
      get_size: "get_size",
      get_slotCount: "get_slotCount",
      get_loadFactor: "get_loadFactor",
      set_growthRate: "set_growthRate",
      get_growthRate: "get_growthRate",
    },
  };
  var uk = function (a) {
    this.mObject = a;
    this.reset();
  };
  p["de.polygonal.ds.IntHashTableIterator"] = uk;
  uk.__name__ = ["de", "polygonal", "ds", "IntHashTableIterator"];
  uk.__interfaces__ = [qh];
  uk.prototype = {
    mObject: null,
    mVals: null,
    mKeys: null,
    mI: null,
    mS: null,
    free: function () {
      this.mKeys = this.mVals = this.mObject = null;
    },
    reset: function () {
      this.mVals = this.mObject.mVals;
      this.mKeys = this.mObject.mKeys;
      this.mS = this.mObject.mH.capacity;
      for (
        this.mI = 0;
        this.mI < this.mS && -2147483648 == this.mKeys[this.mI];

      )
        this.mI++;
      return this;
    },
    hasNext: function () {
      return this.mI < this.mS;
    },
    next: function () {
      for (
        var a = this.mVals[this.mI];
        ++this.mI < this.mS && -2147483648 == this.mKeys[this.mI];

      );
      return a;
    },
    remove: function () {
      throw new v("unsupported operation");
    },
    __class__: uk,
  };
  var tg = function (a, b) {
    null == b && (b = -1);
    this.mTmpBufferSize = 16;
    this.mFree = this.mSize = 0;
    this.reuseIterator = !1;
    this.growthRate = -3;
    this.key = sg.next();
    if (1 != 0 < a)
      throw new v(
        new ra("slotCount > 0", {
          fileName: "IntIntHashTable.hx",
          lineNumber: 156,
          className: "de.polygonal.ds.IntIntHashTable",
          methodName: "new",
        })
      );
    if (1 != (0 < a && 0 == (a & (a - 1))))
      throw new v(
        new ra("slotCount is not a power of 2 (M.isPow2(slotCount))", {
          fileName: "IntIntHashTable.hx",
          lineNumber: 157,
          className: "de.polygonal.ds.IntIntHashTable",
          methodName: "new",
        })
      );
    if (-1 == b) b = a;
    else {
      if (1 != 2 <= b)
        throw new v(
          new ra("minimum capacity is 2 (initialCapacity >= 2)", {
            fileName: "IntIntHashTable.hx",
            lineNumber: 163,
            className: "de.polygonal.ds.IntIntHashTable",
            methodName: "new",
          })
        );
      if (1 != (0 < a && 0 == (a & (a - 1))))
        throw new v(
          new ra("capacity is not a power of 2 (M.isPow2(slotCount))", {
            fileName: "IntIntHashTable.hx",
            lineNumber: 164,
            className: "de.polygonal.ds.IntIntHashTable",
            methodName: "new",
          })
        );
    }
    this.mMinCapacity = this.capacity = b;
    this.slotCount = a;
    this.mMask = a - 1;
    this.mHash = Eb.init(Array(a), -1);
    this.mData = Array(3 * this.capacity);
    this.mNext = Array(this.capacity);
    b = 2;
    a = this.mData;
    for (var c = 0, d = this.capacity; c < d; )
      c++, (a[b - 1] = -2147483648), (a[b] = -1), (b += 3);
    a = this.mNext;
    b = 0;
    for (c = this.capacity - 1; b < c; ) (d = b++), (a[d] = d + 1);
    a[this.capacity - 1] = -1;
    this.mTmpBuffer = Array(this.mTmpBufferSize);
  };
  p["de.polygonal.ds.IntIntHashTable"] = tg;
  tg.__name__ = ["de", "polygonal", "ds", "IntIntHashTable"];
  tg.__interfaces__ = [gj];
  tg.prototype = {
    key: null,
    capacity: null,
    growthRate: null,
    reuseIterator: null,
    get_loadFactor: function () {
      return this.mSize / this.slotCount;
    },
    slotCount: null,
    mHash: null,
    mData: null,
    mNext: null,
    mMask: null,
    mFree: null,
    mSize: null,
    mMinCapacity: null,
    mIterator: null,
    mTmpBuffer: null,
    mTmpBufferSize: null,
    getCollisionCount: function () {
      for (
        var a = 0, b, c = this.mData, d = this.mHash, e = 0, f = this.slotCount;
        e < f;

      )
        if (((b = e++), (b = d[b]), -1 != b))
          for (b = c[b + 2]; -1 != b; ) (b = c[b + 2]), ++a;
      return a;
    },
    getFront: function (a) {
      var b = (73856093 * a) & this.mMask,
        c = this.mHash[b];
      if (-1 == c) return -2147483648;
      var d = this.mData;
      if (d[c] == a) return d[c + 1];
      var e = -2147483648,
        f = c,
        g = f;
      for (c = d[c + 2]; -1 != c; ) {
        if (d[c] == a) {
          e = d[c + 1];
          d[g + 2] = d[c + 2];
          d[c + 2] = f;
          this.mHash[b] = c;
          break;
        }
        g = c;
        c = d[g + 2];
      }
      return e;
    },
    setIfAbsent: function (a, b) {
      if (1 != (-2147483648 != b))
        throw new v(
          new ra("val 0x80000000 is reserved (val != KEY_ABSENT)", {
            fileName: "IntIntHashTable.hx",
            lineNumber: 291,
            className: "de.polygonal.ds.IntIntHashTable",
            methodName: "setIfAbsent",
          })
        );
      var c = (73856093 * a) & this.mMask,
        d = this.mData,
        e = this.mHash[c];
      if (-1 == e)
        return (
          this.mSize == this.capacity && (this.grow(), (d = this.mData)),
          (e = 3 * this.mFree),
          (this.mFree = this.mNext[this.mFree]),
          (this.mHash[c] = e),
          (d[e] = a),
          (d[e + 1] = b),
          this.mSize++,
          !0
        );
      if (d[e] == a) return !1;
      for (c = d[e + 2]; -1 != c; ) {
        if (d[c] == a) {
          e = -1;
          break;
        }
        e = c;
        c = d[e + 2];
      }
      if (-1 == e) return !1;
      this.mSize == this.capacity && (this.grow(), (d = this.mData));
      c = 3 * this.mFree;
      this.mFree = this.mNext[this.mFree];
      d[e + 2] = c;
      d[c] = a;
      d[c + 1] = b;
      this.mSize++;
      return !0;
    },
    rehash: function (a) {
      if (1 != (0 < a && 0 == (a & (a - 1))))
        throw new v(
          new ra("slotCount is not a power of 2 (M.isPow2(slotCount))", {
            fileName: "IntIntHashTable.hx",
            lineNumber: 403,
            className: "de.polygonal.ds.IntIntHashTable",
            methodName: "rehash",
          })
        );
      if (this.slotCount == a) return this;
      for (
        var b = new tg(a, this.capacity),
          c = this.mData,
          d = 0,
          e = this.capacity;
        d < e;

      ) {
        var f = d++,
          g = c[3 * f + 1];
        if (-2147483648 != g) {
          var h = c[3 * f];
          if (1 != (-2147483648 != g))
            throw new v(
              new ra("val 0x80000000 is reserved (val != KEY_ABSENT)", {
                fileName: "IntIntHashTable.hx",
                lineNumber: 1046,
                className: "de.polygonal.ds.IntIntHashTable",
                methodName: "set",
              })
            );
          b.mSize == b.capacity && b.grow();
          f = b.mData;
          var n = b.mHash,
            k = 3 * b.mFree;
          b.mFree = b.mNext[b.mFree];
          f[k] = h;
          f[k + 1] = g;
          h = (73856093 * h) & b.mMask;
          g = n[h];
          if (-1 == g) n[h] = k;
          else {
            for (n = f[g + 2]; -1 != n; ) (g = n), (n = f[n + 2]);
            f[g + 2] = k;
          }
          b.mSize++;
        }
      }
      this.mHash = b.mHash;
      this.mData = b.mData;
      this.mNext = b.mNext;
      this.slotCount = a;
      this.mMask = b.mMask;
      this.mFree = b.mFree;
      return this;
    },
    remap: function (a, b) {
      var c = this.mHash[(73856093 * a) & this.mMask];
      if (-1 == c) return !1;
      var d = this.mData;
      if (d[c] == a) return (d[c + 1] = b), !0;
      for (c = d[c + 2]; -1 != c; ) {
        if (d[c] == a) {
          d[c + 1] = b;
          break;
        }
        c = d[c + 2];
      }
      return -1 != c;
    },
    extract: function (a) {
      var b = (73856093 * a) & this.mMask,
        c = this.mHash,
        d = c[b];
      if (-1 == d) return -2147483648;
      var e = this.mData;
      if (a == e[d])
        return (
          (a = e[d + 1]),
          (c[b] = -1 == e[d + 2] ? -1 : e[d + 2]),
          (b = (d / 3) | 0),
          (this.mNext[b] = this.mFree),
          (this.mFree = b),
          (e[d + 1] = -2147483648),
          (e[d + 2] = -1),
          this.mSize--,
          a
        );
      c = d;
      d = e[d + 2];
      for (b = -2147483648; -1 != d; ) {
        if (e[d] == a) {
          b = e[d + 1];
          break;
        }
        c = d;
        d = e[c + 2];
      }
      return -2147483648 != b
        ? ((e[c + 2] = e[d + 2]),
          (a = (d / 3) | 0),
          (this.mNext[a] = this.mFree),
          (this.mFree = a),
          (e[d + 1] = -2147483648),
          (e[d + 2] = -1),
          this.mSize--,
          b)
        : -2147483648;
    },
    toKeyArray: function () {
      if (0 == this.mSize) return [];
      var a = this.mSize;
      if (1 != 0 <= a)
        throw new v(
          new ra("len >= 0", {
            fileName: "ArrayTools.hx",
            lineNumber: 37,
            className: "de.polygonal.ds.tools.ArrayTools",
            methodName: "alloc",
          })
        );
      a = Array(a);
      for (var b = 0, c = this.mData, d = 0, e = this.capacity; d < e; ) {
        var f = d++;
        -2147483648 != c[3 * f + 1] && (a[b++] = c[3 * f]);
      }
      return a;
    },
    toString: function () {
      var a =
        "" +
        P.string(
          ia.format(
            "[ IntIntHashTable size=" +
              this.mSize +
              " capacity=" +
              this.capacity +
              " load=%.2f",
            [this.get_loadFactor()]
          )
        );
      if (0 == this.mSize) return a + " ]";
      a += "\n";
      for (var b = 0, c = this.keys(); c.hasNext(); ) {
        var d = c.next();
        b = Math.max(b, d);
      }
      for (var e = 1; 0 != b; ) ++e, (b = (b / 10) | 0);
      b = [];
      c = "  %- " + e + "d -> %s\n";
      d = [];
      for (e = this.keys(); e.hasNext(); ) {
        var f = e.next();
        d.push(f);
      }
      d.sort(function (a, b) {
        return a - b;
      });
      e = 1;
      f = d.length;
      for (var g = 0, h = 1; e < f; ) {
        if (d[g] == d[e]) ++h;
        else {
          g = d[g];
          b[0] = g;
          if (1 < h) (h = []), this.getAll(g, h), (b[1] = h.join(","));
          else {
            h = this.mHash[(73856093 * g) & this.mMask];
            if (-1 == h) g = -2147483648;
            else {
              var n = this.mData;
              if (n[h] == g) g = n[h + 1];
              else {
                var k = -2147483648;
                for (h = n[h + 2]; -1 != h; ) {
                  if (n[h] == g) {
                    k = n[h + 1];
                    break;
                  }
                  h = n[h + 2];
                }
                g = k;
              }
            }
            b[1] = g;
          }
          a += P.string(ia.format(c, b));
          g = e;
          h = 1;
        }
        ++e;
      }
      d = d[g];
      b[0] = d;
      if (1 < h) (e = []), this.getAll(d, e), (b[1] = e.join(","));
      else {
        e = this.mHash[(73856093 * d) & this.mMask];
        if (-1 == e) d = -2147483648;
        else if (((f = this.mData), f[e] == d)) d = f[e + 1];
        else {
          g = -2147483648;
          for (e = f[e + 2]; -1 != e; ) {
            if (f[e] == d) {
              g = f[e + 1];
              break;
            }
            e = f[e + 2];
          }
          d = g;
        }
        b[1] = d;
      }
      a += P.string(ia.format(c, b));
      return a + "]";
    },
    has: function (a) {
      if (1 != (-2147483648 != a))
        throw new v(
          new ra("val 0x80000000 is reserved (val != VAL_ABSENT)", {
            fileName: "IntIntHashTable.hx",
            lineNumber: 697,
            className: "de.polygonal.ds.IntIntHashTable",
            methodName: "has",
          })
        );
      for (var b = !1, c = this.mData, d = 0, e = this.capacity; d < e; ) {
        var f = d++;
        if (c[3 * f + 1] == a) {
          b = !0;
          break;
        }
      }
      return b;
    },
    hasKey: function (a) {
      var b = this.mHash[(73856093 * a) & this.mMask];
      if (-1 == b) return !1;
      var c = this.mData;
      if (c[b] == a) return !0;
      var d = !1;
      for (b = c[b + 2]; -1 != b; ) {
        if (c[b] == a) {
          d = !0;
          break;
        }
        b = c[b + 2];
      }
      return d;
    },
    count: function (a) {
      var b = 0,
        c = this.mHash[(73856093 * a) & this.mMask];
      if (-1 != c)
        for (var d = this.mData; -1 != c; ) d[c] == a && ++b, (c = d[c + 2]);
      return b;
    },
    get: function (a) {
      var b = this.mHash[(73856093 * a) & this.mMask];
      if (-1 == b) return -2147483648;
      var c = this.mData;
      if (c[b] == a) return c[b + 1];
      var d = -2147483648;
      for (b = c[b + 2]; -1 != b; ) {
        if (c[b] == a) {
          d = c[b + 1];
          break;
        }
        b = c[b + 2];
      }
      return d;
    },
    getAll: function (a, b) {
      var c = this.mHash[(73856093 * a) & this.mMask];
      if (-1 == c) return 0;
      var d = 0,
        e = this.mData;
      e[c] == a && (b[d++] = e[c + 1]);
      for (c = e[c + 2]; -1 != c; )
        e[c] == a && (b[d++] = e[c + 1]), (c = e[c + 2]);
      return d;
    },
    hasPair: function (a, b) {
      if (1 != (-2147483648 != b))
        throw new v(
          new ra("val 0x80000000 is reserved (val != KEY_ABSENT)", {
            fileName: "IntIntHashTable.hx",
            lineNumber: 891,
            className: "de.polygonal.ds.IntIntHashTable",
            methodName: "hasPair",
          })
        );
      var c = this.mHash[(73856093 * a) & this.mMask];
      if (-1 != c) {
        var d = this.mData;
        if (d[c] == a && d[c + 1] == b) return !0;
        for (c = d[c + 2]; -1 != c; ) {
          if (d[c] == a && d[c + 1] == b) return !0;
          c = d[c + 2];
        }
      }
      return !1;
    },
    unsetPair: function (a, b) {
      if (1 != (-2147483648 != b))
        throw new v(
          new ra("val 0x80000000 is reserved (val != KEY_ABSENT)", {
            fileName: "IntIntHashTable.hx",
            lineNumber: 939,
            className: "de.polygonal.ds.IntIntHashTable",
            methodName: "unsetPair",
          })
        );
      var c = (73856093 * a) & this.mMask,
        d = this.mHash,
        e = d[c];
      if (-1 == e) return !1;
      var f = this.mData;
      if (a == f[e] && b == f[e + 1])
        return (
          (d[c] = -1 == f[e + 2] ? -1 : f[e + 2]),
          (a = (e / 3) | 0),
          (this.mNext[a] = this.mFree),
          (this.mFree = a),
          (f[e + 1] = -2147483648),
          (f[e + 2] = -1),
          this.mSize--,
          !0
        );
      c = !1;
      d = e;
      for (e = f[e + 2]; -1 != e; ) {
        if (f[e] == a && f[e + 1] == b) {
          c = !0;
          break;
        }
        d = e;
        e = f[d + 2];
      }
      return c
        ? ((f[d + 2] = f[e + 2]),
          (a = (e / 3) | 0),
          (this.mNext[a] = this.mFree),
          (this.mFree = a),
          (f[e + 1] = -2147483648),
          (f[e + 2] = -1),
          --this.mSize,
          !0)
        : !1;
    },
    set: function (a, b) {
      if (1 != (-2147483648 != b))
        throw new v(
          new ra("val 0x80000000 is reserved (val != KEY_ABSENT)", {
            fileName: "IntIntHashTable.hx",
            lineNumber: 1046,
            className: "de.polygonal.ds.IntIntHashTable",
            methodName: "set",
          })
        );
      this.mSize == this.capacity && this.grow();
      var c = this.mData,
        d = this.mHash,
        e = 3 * this.mFree;
      this.mFree = this.mNext[this.mFree];
      c[e] = a;
      c[e + 1] = b;
      var f = (73856093 * a) & this.mMask;
      b = d[f];
      if (-1 == b) return (d[f] = e), this.mSize++, !0;
      d = c[b] != a;
      for (f = c[b + 2]; -1 != f; )
        c[f] == a && (d = !1), (b = f), (f = c[f + 2]);
      c[b + 2] = e;
      this.mSize++;
      return d;
    },
    unset: function (a) {
      var b = (73856093 * a) & this.mMask,
        c = this.mHash,
        d = c[b];
      if (-1 == d) return !1;
      var e = this.mData;
      if (a == e[d])
        return (
          (c[b] = -1 == e[d + 2] ? -1 : e[d + 2]),
          (a = (d / 3) | 0),
          (this.mNext[a] = this.mFree),
          (this.mFree = a),
          (e[d + 1] = -2147483648),
          (e[d + 2] = -1),
          this.mSize--,
          !0
        );
      b = !1;
      c = d;
      for (d = e[d + 2]; -1 != d; ) {
        if (e[d] == a) {
          b = !0;
          break;
        }
        c = d;
        d = e[c + 2];
      }
      return b
        ? ((e[c + 2] = e[d + 2]),
          (a = (d / 3) | 0),
          (this.mNext[a] = this.mFree),
          (this.mFree = a),
          (e[d + 1] = -2147483648),
          (e[d + 2] = -1),
          this.mSize--,
          !0)
        : !1;
    },
    toValSet: function () {
      for (
        var a = new Wg(this.capacity), b = this.mData, c = 0, d = this.capacity;
        c < d;

      ) {
        var e = c++;
        e = b[3 * e + 1];
        if (-2147483648 != e) {
          if (1 != (-2147483648 != e))
            throw new v(
              new ra("value 0x80000000 is reserved (val != VAL_ABSENT)", {
                fileName: "IntHashSet.hx",
                lineNumber: 519,
                className: "de.polygonal.ds.IntHashSet",
                methodName: "set",
              })
            );
          var f = (73856093 * e) & a.mMask,
            g = a.mData,
            h = a.mHash[f];
          if (-1 == h)
            a.mSize == a.capacity && (a.grow(), (g = a.mData)),
              (h = a.mFree << 1),
              (a.mFree = a.mNext[a.mFree]),
              (a.mHash[f] = h),
              (g[h] = e),
              a.mSize++;
          else if (g[h] != e) {
            for (f = g[h + 1]; -1 != f; ) {
              if (g[f] == e) {
                h = -1;
                break;
              }
              h = f;
              f = g[f + 1];
            }
            -1 != h &&
              (a.mSize == a.capacity && (a.grow(), (g = a.mData)),
              (f = a.mFree << 1),
              (a.mFree = a.mNext[a.mFree]),
              (g[f] = e),
              (g[h + 1] = f),
              a.mSize++);
          }
        }
      }
      return a;
    },
    toKeySet: function () {
      for (
        var a = new Wg(this.capacity), b = this.mData, c = 0, d = this.capacity;
        c < d;

      ) {
        var e = c++;
        if (-2147483648 != b[3 * e + 1]) {
          e = b[3 * e];
          if (1 != (-2147483648 != e))
            throw new v(
              new ra("value 0x80000000 is reserved (val != VAL_ABSENT)", {
                fileName: "IntHashSet.hx",
                lineNumber: 519,
                className: "de.polygonal.ds.IntHashSet",
                methodName: "set",
              })
            );
          var f = (73856093 * e) & a.mMask,
            g = a.mData,
            h = a.mHash[f];
          if (-1 == h)
            a.mSize == a.capacity && (a.grow(), (g = a.mData)),
              (h = a.mFree << 1),
              (a.mFree = a.mNext[a.mFree]),
              (a.mHash[f] = h),
              (g[h] = e),
              a.mSize++;
          else if (g[h] != e) {
            for (f = g[h + 1]; -1 != f; ) {
              if (g[f] == e) {
                h = -1;
                break;
              }
              h = f;
              f = g[f + 1];
            }
            -1 != h &&
              (a.mSize == a.capacity && (a.grow(), (g = a.mData)),
              (f = a.mFree << 1),
              (a.mFree = a.mNext[a.mFree]),
              (g[f] = e),
              (g[h + 1] = f),
              a.mSize++);
          }
        }
      }
      return a;
    },
    keys: function () {
      return new jn(this);
    },
    pack: function () {
      if (this.capacity == this.mMinCapacity) return this;
      var a = this.mSize,
        b = this.mMinCapacity;
      this.capacity = a > b ? a : b;
      a = this.mData;
      var c = 0,
        d = this.mHash;
      b = Array(3 * this.capacity);
      for (var e = 2, f = 0, g = this.capacity; f < g; )
        f++, (b[e - 1] = -2147483648), (b[e] = -1), (e += 3);
      f = 0;
      for (g = this.slotCount; f < g; ) {
        var h = f++;
        e = d[h];
        if (-1 != e)
          for (
            d[h] = c,
              b[c] = a[e],
              b[c + 1] = a[e + 1],
              b[c + 2] = -1,
              c += 3,
              e = a[e + 2];
            -1 != e;

          )
            (b[c - 1] = c),
              (b[c] = a[e]),
              (b[c + 1] = a[e + 1]),
              (b[c + 2] = -1),
              (c += 3),
              (e = a[e + 2]);
      }
      this.mData = b;
      a = this.mNext = Array(this.capacity);
      b = 0;
      for (c = this.capacity - 1; b < c; ) (d = b++), (a[d] = d + 1);
      this.mFree = a[this.capacity - 1] = -1;
      return this;
    },
    iter: function (a) {
      if (1 != (null != a))
        throw new v(
          new ra("f != null", {
            fileName: "IntIntHashTable.hx",
            lineNumber: 1361,
            className: "de.polygonal.ds.IntIntHashTable",
            methodName: "iter",
          })
        );
      for (var b = this.mData, c, d, e = 0, f = this.capacity; e < f; )
        (c = 3 * e++), (d = b[c + 1]), -2147483648 != d && a(b[c], d);
      return this;
    },
    hashCode: function (a) {
      return (73856093 * a) & this.mMask;
    },
    grow: function () {
      var a = this.capacity;
      this.capacity = Vg.compute(this.growthRate, this.capacity);
      var b = Array(this.capacity);
      Eb.blit(this.mNext, 0, b, 0, a);
      this.mNext = b;
      b = Array(3 * this.capacity);
      Eb.blit(this.mData, 0, b, 0, 3 * a);
      this.mData = b;
      b = this.mNext;
      for (var c = a - 1, d = this.capacity - 1; c < d; ) {
        var e = c++;
        b[e] = e + 1;
      }
      b[this.capacity - 1] = -1;
      this.mFree = a;
      b = 3 * a + 2;
      c = this.mData;
      d = 0;
      for (a = this.capacity - a; d < a; )
        d++, (c[b - 1] = -2147483648), (c[b] = -1), (b += 3);
    },
    get_size: function () {
      return this.mSize;
    },
    free: function () {
      this.mNext = this.mData = this.mHash = null;
      null != this.mIterator &&
        (this.mIterator.free(), (this.mIterator = null));
      this.mTmpBuffer = null;
    },
    contains: function (a) {
      return this.has(a);
    },
    remove: function (a) {
      if (1 != (-2147483648 != a))
        throw new v(
          new ra("val 0x80000000 is reserved (val != KEY_ABSENT)", {
            fileName: "IntIntHashTable.hx",
            lineNumber: 1465,
            className: "de.polygonal.ds.IntIntHashTable",
            methodName: "remove",
          })
        );
      for (
        var b = 0,
          c = this.mTmpBuffer,
          d = this.mTmpBufferSize,
          e = this.mData,
          f,
          g = 0,
          h = this.capacity;
        g < h;

      )
        (f = 3 * g++),
          e[f + 1] == a &&
            (b == d &&
              ((this.mTmpBufferSize = d <<= 1),
              (c = Array(d)),
              Eb.blit(this.mTmpBuffer, 0, c, 0, b),
              (this.mTmpBuffer = c)),
            (c[b++] = e[f]));
      a = 0;
      for (d = b; a < d; ) {
        e = a++;
        g = c[e];
        h = (73856093 * g) & this.mMask;
        var n = this.mHash;
        e = n[h];
        if (-1 != e)
          if (((f = this.mData), g == f[e]))
            (n[h] = -1 == f[e + 2] ? -1 : f[e + 2]),
              (g = (e / 3) | 0),
              (this.mNext[g] = this.mFree),
              (this.mFree = g),
              (f[e + 1] = -2147483648),
              (f[e + 2] = -1),
              this.mSize--;
          else {
            h = !1;
            n = e;
            for (e = f[e + 2]; -1 != e; ) {
              if (f[e] == g) {
                h = !0;
                break;
              }
              n = e;
              e = f[n + 2];
            }
            h &&
              ((f[n + 2] = f[e + 2]),
              (g = (e / 3) | 0),
              (this.mNext[g] = this.mFree),
              (this.mFree = g),
              (f[e + 1] = -2147483648),
              (f[e + 2] = -1),
              this.mSize--);
          }
      }
      return 0 < b;
    },
    clear: function (a) {
      a = this.mHash;
      for (var b = 0, c = this.slotCount; b < c; ) {
        var d = b++;
        a[d] = -1;
      }
      b = 2;
      a = this.mData;
      c = 0;
      for (d = this.capacity; c < d; )
        c++, (a[b - 1] = -2147483648), (a[b] = -1), (b += 3);
      a = this.mNext;
      b = 0;
      for (c = this.capacity - 1; b < c; ) (d = b++), (a[d] = d + 1);
      a[this.capacity - 1] = -1;
      this.mSize = this.mFree = 0;
    },
    iterator: function () {
      return this.reuseIterator
        ? (null == this.mIterator
            ? (this.mIterator = new vk(this))
            : this.mIterator.reset(),
          this.mIterator)
        : new vk(this);
    },
    isEmpty: function () {
      return 0 == this.mSize;
    },
    toArray: function () {
      if (0 == this.mSize) return [];
      var a = this.mSize;
      if (1 != 0 <= a)
        throw new v(
          new ra("len >= 0", {
            fileName: "ArrayTools.hx",
            lineNumber: 37,
            className: "de.polygonal.ds.tools.ArrayTools",
            methodName: "alloc",
          })
        );
      a = Array(a);
      for (var b = 0, c, d = this.mData, e = 0, f = this.capacity; e < f; )
        (c = e++), (c = d[3 * c + 1]), -2147483648 != c && (a[b++] = c);
      return a;
    },
    clone: function (a, b) {
      a = new tg(this.slotCount, this.capacity);
      Eb.blit(this.mHash, 0, a.mHash, 0, this.slotCount);
      Eb.blit(this.mData, 0, a.mData, 0, 3 * this.capacity);
      Eb.blit(this.mNext, 0, a.mNext, 0, this.capacity);
      a.mMask = this.mMask;
      a.slotCount = this.slotCount;
      a.capacity = this.capacity;
      a.mFree = this.mFree;
      a.mSize = this.mSize;
      return a;
    },
    __class__: tg,
    __properties__: { get_size: "get_size", get_loadFactor: "get_loadFactor" },
  };
  var vk = function (a) {
    this.mObject = a;
    this.mData = a.mData;
    this.mI = 0;
    this.mS = a.capacity;
    this.scan();
  };
  p["de.polygonal.ds.IntIntHashTableValIterator"] = vk;
  vk.__name__ = ["de", "polygonal", "ds", "IntIntHashTableValIterator"];
  vk.__interfaces__ = [qh];
  vk.prototype = {
    mObject: null,
    mI: null,
    mS: null,
    mData: null,
    free: function () {
      this.mData = this.mObject = null;
    },
    reset: function () {
      this.mData = this.mObject.mData;
      this.mI = 0;
      this.mS = this.mObject.capacity;
      this.scan();
      return this;
    },
    hasNext: function () {
      return this.mI < this.mS;
    },
    next: function () {
      var a = this.mData[3 * this.mI++ + 1];
      this.scan();
      return a;
    },
    remove: function () {
      throw new v("unsupported operation");
    },
    scan: function () {
      for (; this.mI < this.mS && -2147483648 == this.mData[3 * this.mI + 1]; )
        this.mI++;
    },
    __class__: vk,
  };
  var jn = function (a) {
    this.mObject = a;
    this.mData = a.mData;
    this.mI = 0;
    this.mS = a.capacity;
    this.scan();
  };
  p["de.polygonal.ds.IntIntHashTableKeyIterator"] = jn;
  jn.__name__ = ["de", "polygonal", "ds", "IntIntHashTableKeyIterator"];
  jn.__interfaces__ = [qh];
  jn.prototype = {
    mObject: null,
    mI: null,
    mS: null,
    mData: null,
    free: function () {
      this.mData = this.mObject = null;
    },
    reset: function () {
      this.mData = this.mObject.mData;
      this.mI = 0;
      this.mS = this.mObject.capacity;
      this.scan();
      return this;
    },
    hasNext: function () {
      return this.mI < this.mS;
    },
    next: function () {
      var a = this.mData[3 * this.mI++];
      this.scan();
      return a;
    },
    remove: function () {
      throw new v("unsupported operation");
    },
    scan: function () {
      for (; this.mI < this.mS && -2147483648 == this.mData[3 * this.mI + 1]; )
        this.mI++;
    },
    __class__: jn,
  };
  var zi = function (a, b) {
    null == a && (a = 16);
    this.mIterator = null;
    this.mSize = 0;
    this.reuseIterator = !1;
    this.growthRate = -2;
    this.key = sg.next();
    this.capacity = this.mInitialCapacity = 1 > a ? 1 : a;
    null != b && (this.capacity = b.length);
    this.mData = Array(this.capacity);
    if (null != b)
      for (a = 0; a < b.length; ) {
        var c = b[a];
        ++a;
        this.set(c);
      }
  };
  p["de.polygonal.ds.ListSet"] = zi;
  zi.__name__ = ["de", "polygonal", "ds", "ListSet"];
  zi.__interfaces__ = [sk];
  zi.prototype = {
    key: null,
    capacity: null,
    growthRate: null,
    reuseIterator: null,
    mData: null,
    mInitialCapacity: null,
    mSize: null,
    mIterator: null,
    reserve: function (a) {
      a > this.capacity && ((this.capacity = a), this.resizeContainer(a));
      return this;
    },
    pack: function () {
      if (this.capacity > this.mInitialCapacity) {
        var a = this.mInitialCapacity,
          b = this.mSize;
        this.capacity = a > b ? a : b;
        this.resizeContainer(this.capacity);
      } else {
        a = this.mData;
        b = this.mSize;
        for (var c = this.capacity; b < c; ) {
          var d = b++;
          a[d] = null;
        }
      }
      return this;
    },
    iter: function (a) {
      if (1 != (null != a))
        throw new v(
          new ra("f != null", {
            fileName: "ListSet.hx",
            lineNumber: 136,
            className: "de.polygonal.ds.ListSet",
            methodName: "iter",
          })
        );
      for (var b = this.mData, c = 0, d = this.mSize; c < d; ) {
        var e = c++;
        a(b[e]);
      }
      return this;
    },
    toString: function () {
      var a = "" + P.string("[ ListSet size=" + this.mSize);
      if (this.isEmpty()) return a + " ]";
      a += "\n";
      for (var b = 0, c = this.mSize; b < c; ) {
        var d = b++;
        a += "  ";
        a += P.string(P.string(this.mData[d]));
        a += "\n";
      }
      return a + "]";
    },
    has: function (a) {
      if (this.isEmpty()) return !1;
      for (var b = this.mData, c = 0, d = this.mSize; c < d; ) {
        var e = c++;
        if (b[e] == a) return !0;
      }
      return !1;
    },
    set: function (a) {
      for (var b = this.mData, c = 0, d = this.mSize; c < d; ) {
        var e = c++;
        if (b[e] == a) return !1;
      }
      this.mSize == this.capacity && (this.grow(), (b = this.mData));
      b[this.mSize++] = a;
      return !0;
    },
    unset: function (a) {
      return this.remove(a);
    },
    merge: function (a, b, c) {
      if (b) for (c = a.iterator(); c.hasNext(); ) (a = c.next()), this.set(a);
      else if (null != c)
        for (a = a.iterator(); a.hasNext(); ) (b = a.next()), this.set(c(b));
      else
        for (c = a.iterator(); c.hasNext(); ) {
          a = c.next();
          if (1 != u.__instanceof(a, Ug))
            throw new v(
              new ra(
                "element is not of type Cloneable (Std.is(val, Cloneable))",
                {
                  fileName: "ListSet.hx",
                  lineNumber: 230,
                  className: "de.polygonal.ds.ListSet",
                  methodName: "merge",
                }
              )
            );
          this.set(u.__cast(a, Ug).clone());
        }
    },
    get_size: function () {
      return this.mSize;
    },
    free: function () {
      Eb.nullify(this.mData);
      this.mData = null;
      null != this.mIterator &&
        (this.mIterator.free(), (this.mIterator = null));
    },
    contains: function (a) {
      return this.has(a);
    },
    remove: function (a) {
      for (var b = this.mData, c = 0, d = this.mSize; c < d; ) {
        var e = c++;
        if (b[e] == a) return (b[e] = this.mData[--this.mSize]), !0;
      }
      return !1;
    },
    clear: function (a) {
      null == a && (a = !1);
      a && Eb.nullify(this.mData);
      this.mSize = 0;
    },
    iterator: function () {
      if (this.reuseIterator) {
        if (null == this.mIterator) this.mIterator = new wk(this);
        else {
          var a = this.mIterator;
          a.mData = a.mObject.mData;
          a.mS = a.mObject.mSize;
          a.mI = 0;
        }
        return this.mIterator;
      }
      return new wk(this);
    },
    isEmpty: function () {
      return 0 == this.mSize;
    },
    toArray: function () {
      return Eb.toArray(this.mData, 0, this.mSize, []);
    },
    clone: function (a, b) {
      null == a && (a = !0);
      var c = new zi();
      c.capacity = this.mSize;
      c.mSize = this.mSize;
      c.mData = Array(this.mSize);
      var d = this.mData,
        e = c.mData;
      if (a) Eb.blit(d, 0, e, 0, this.mSize);
      else if (null == b)
        for (b = 0, a = this.mSize; b < a; ) {
          var f = b++;
          if (1 != u.__instanceof(d[f], Ug))
            throw new v(
              new ra(
                "element is not of type Cloneable (Std.is(src.get(i), Cloneable))",
                {
                  fileName: "ListSet.hx",
                  lineNumber: 359,
                  className: "de.polygonal.ds.ListSet",
                  methodName: "clone",
                }
              )
            );
          e[f] = u.__cast(d[f], Ug).clone();
        }
      else
        for (a = 0, f = this.mSize; a < f; ) {
          var g = a++;
          e[g] = b(d[g]);
        }
      return c;
    },
    grow: function () {
      this.capacity = Vg.compute(this.growthRate, this.capacity);
      this.resizeContainer(this.capacity);
    },
    resizeContainer: function (a) {
      a = Array(a);
      Eb.blit(this.mData, 0, a, 0, this.mSize);
      this.mData = a;
    },
    __class__: zi,
    __properties__: { get_size: "get_size" },
  };
  var wk = function (a) {
    this.mObject = a;
    this.mData = this.mObject.mData;
    this.mS = this.mObject.mSize;
    this.mI = 0;
  };
  p["de.polygonal.ds.ListSetIterator"] = wk;
  wk.__name__ = ["de", "polygonal", "ds", "ListSetIterator"];
  wk.__interfaces__ = [qh];
  wk.prototype = {
    mObject: null,
    mData: null,
    mI: null,
    mS: null,
    free: function () {
      this.mData = this.mObject = null;
    },
    reset: function () {
      this.mData = this.mObject.mData;
      this.mS = this.mObject.mSize;
      this.mI = 0;
      return this;
    },
    hasNext: function () {
      return this.mI < this.mS;
    },
    next: function () {
      return this.mData[this.mI++];
    },
    remove: function () {
      if (1 != 0 < this.mI)
        throw new v(
          new ra("call next() before removing an element (mI > 0)", {
            fileName: "ListSet.hx",
            lineNumber: 430,
            className: "de.polygonal.ds.ListSetIterator",
            methodName: "remove",
          })
        );
      this.mData[this.mI] = this.mData[--this.mS];
    },
    __class__: wk,
  };
  var ve = function () {};
  p["de.polygonal.ds.tools.ArrayTools"] = ve;
  ve.__name__ = ["de", "polygonal", "ds", "tools", "ArrayTools"];
  ve.alloc = function (a) {
    if (1 != 0 <= a)
      throw new v(
        new ra("len >= 0", {
          fileName: "ArrayTools.hx",
          lineNumber: 37,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "alloc",
        })
      );
    return Array(a);
  };
  ve.trim = function (a, b) {
    a.length > b && (a.length = b);
    return a;
  };
  ve.swap = function (a, b, c) {
    if (1 != (null != a))
      throw new v(
        new ra("array != null", {
          fileName: "ArrayTools.hx",
          lineNumber: 87,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "swap",
        })
      );
    if (1 != (0 <= b && b < a.length))
      throw new v(
        new ra("0 <= a && a < array.length", {
          fileName: "ArrayTools.hx",
          lineNumber: 88,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "swap",
        })
      );
    if (1 != (0 <= c && c < a.length))
      throw new v(
        new ra("0 <= b && b < array.length", {
          fileName: "ArrayTools.hx",
          lineNumber: 89,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "swap",
        })
      );
    if (b != c) {
      var d = a[b];
      a[b] = a[c];
      a[c] = d;
    }
  };
  ve.getFront = function (a, b) {
    if (1 != (null != a))
      throw new v(
        new ra("array != null", {
          fileName: "ArrayTools.hx",
          lineNumber: 106,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "getFront",
        })
      );
    if (1 != (0 <= b && b < a.length))
      throw new v(
        new ra("0 <= index && index < array.length", {
          fileName: "ArrayTools.hx",
          lineNumber: 107,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "getFront",
        })
      );
    if (1 != (null != a))
      throw new v(
        new ra("array != null", {
          fileName: "ArrayTools.hx",
          lineNumber: 87,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "swap",
        })
      );
    if (1 != (0 <= b && b < a.length))
      throw new v(
        new ra("0 <= a && a < array.length", {
          fileName: "ArrayTools.hx",
          lineNumber: 88,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "swap",
        })
      );
    if (1 != 0 < a.length)
      throw new v(
        new ra("0 <= b && b < array.length", {
          fileName: "ArrayTools.hx",
          lineNumber: 89,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "swap",
        })
      );
    if (0 != b) {
      var c = a[b];
      a[b] = a[0];
      a[0] = c;
    }
    return a[0];
  };
  ve.init = function (a, b, c, d) {
    null == d && (d = 0);
    null == c && (c = 0);
    d = 0 >= d ? a.length : c + d;
    if (1 != (0 <= c && c < a.length))
      throw new v(
        new ra("min >= 0 && min < a.length", {
          fileName: "ArrayTools.hx",
          lineNumber: 122,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "init",
        })
      );
    if (1 != d <= a.length)
      throw new v(
        new ra("max <= a.length", {
          fileName: "ArrayTools.hx",
          lineNumber: 123,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "init",
        })
      );
    for (; c < d; ) a[c++] = b;
    return a;
  };
  ve.blit = function (a, b, c, d, e) {
    if (0 < e) {
      if (1 != b < a.length)
        throw new v(
          new ra("srcPos out of range (srcPos < src.length)", {
            fileName: "ArrayTools.hx",
            lineNumber: 138,
            className: "de.polygonal.ds.tools.ArrayTools",
            methodName: "blit",
          })
        );
      if (1 != d < c.length)
        throw new v(
          new ra("dstPos out of range (dstPos < dst.length)", {
            fileName: "ArrayTools.hx",
            lineNumber: 139,
            className: "de.polygonal.ds.tools.ArrayTools",
            methodName: "blit",
          })
        );
      if (1 != (b + e <= a.length && d + e <= c.length))
        throw new v(
          new ra(
            "n out of range (srcPos + n <= src.length && dstPos + n <= dst.length)",
            {
              fileName: "ArrayTools.hx",
              lineNumber: 140,
              className: "de.polygonal.ds.tools.ArrayTools",
              methodName: "blit",
            }
          )
        );
      if (a == c)
        if (b < d)
          for (c = b + e, d += e, b = 0; b < e; ) b++, --c, --d, (a[d] = a[c]);
        else {
          if (b > d) for (c = b, b = 0; b < e; ) b++, (a[d] = a[c]), ++c, ++d;
        }
      else if (0 == b && 0 == d) for (d = 0; d < e; ) (b = d++), (c[b] = a[b]);
      else if (0 == b)
        for (b = 0; b < e; ) {
          var f = b++;
          c[d + f] = a[f];
        }
      else if (0 == d) for (d = 0; d < e; ) (f = d++), (c[f] = a[b + f]);
      else
        for (f = 0; f < e; ) {
          var g = f++;
          c[d + g] = a[b + g];
        }
    }
  };
  ve.iter = function (a, b, c) {
    null == c && (c = 0);
    0 == c && (c = a.length);
    for (var d = 0; d < c; ) {
      var e = d++;
      b(a[e]);
    }
  };
  ve.binarySearchCmp = function (a, b, c, d, e) {
    if (1 != (null != a))
      throw new v(
        new ra("a != null", {
          fileName: "ArrayTools.hx",
          lineNumber: 214,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchCmp",
        })
      );
    if (1 != (null != e))
      throw new v(
        new ra("comparator != null", {
          fileName: "ArrayTools.hx",
          lineNumber: 215,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchCmp",
        })
      );
    if (1 != (0 <= c && c < a.length))
      throw new v(
        new ra("min >= 0 && min < a.length", {
          fileName: "ArrayTools.hx",
          lineNumber: 216,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchCmp",
        })
      );
    if (1 != d < a.length)
      throw new v(
        new ra("max < a.length", {
          fileName: "ArrayTools.hx",
          lineNumber: 217,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchCmp",
        })
      );
    for (var f, g = d + 1; c < g; )
      (f = c + ((g - c) >> 1)), 0 > e(a[f], b) ? (c = f + 1) : (g = f);
    return c <= d && 0 == e(a[c], b) ? c : ~c;
  };
  ve.binarySearchf = function (a, b, c, d) {
    if (1 != (null != a))
      throw new v(
        new ra("a != null", {
          fileName: "ArrayTools.hx",
          lineNumber: 243,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchf",
        })
      );
    if (1 != (0 <= c && c < a.length))
      throw new v(
        new ra("min >= 0 && min < a.length", {
          fileName: "ArrayTools.hx",
          lineNumber: 244,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchf",
        })
      );
    if (1 != d < a.length)
      throw new v(
        new ra("max < a.length", {
          fileName: "ArrayTools.hx",
          lineNumber: 245,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchf",
        })
      );
    for (var e, f = d + 1; c < f; )
      (e = c + ((f - c) >> 1)), a[e] < b ? (c = e + 1) : (f = e);
    return c <= d && a[c] == b ? c : ~c;
  };
  ve.binarySearchi = function (a, b, c, d) {
    if (1 != (null != a))
      throw new v(
        new ra("a != null", {
          fileName: "ArrayTools.hx",
          lineNumber: 271,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchi",
        })
      );
    if (1 != (0 <= c && c < a.length))
      throw new v(
        new ra("min >= 0 && min < a.length", {
          fileName: "ArrayTools.hx",
          lineNumber: 272,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchi",
        })
      );
    if (1 != d < a.length)
      throw new v(
        new ra("max < a.length", {
          fileName: "ArrayTools.hx",
          lineNumber: 273,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "binarySearchi",
        })
      );
    for (var e, f = d + 1; c < f; )
      (e = c + ((f - c) >> 1)), a[e] < b ? (c = e + 1) : (f = e);
    return c <= d && a[c] == b ? c : ~c;
  };
  ve.shuffle = function (a, b) {
    if (1 != (null != a))
      throw new v(
        new ra("a != null", {
          fileName: "ArrayTools.hx",
          lineNumber: 298,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "shuffle",
        })
      );
    var c = a.length;
    if (null == b)
      for (; 1 < --c; ) {
        b = (hj._f() * c) | 0;
        var d = a[c];
        a[c] = a[b];
        a[b] = d;
      }
    else {
      if (1 != b.length >= a.length)
        throw new v(
          new ra("insufficient random values (rvals.length >= a.length)", {
            fileName: "ArrayTools.hx",
            lineNumber: 313,
            className: "de.polygonal.ds.tools.ArrayTools",
            methodName: "shuffle",
          })
        );
      for (d = 0; 1 < --c; ) {
        var e = (b[d++] * c) | 0,
          f = a[c];
        a[c] = a[e];
        a[e] = f;
      }
    }
  };
  ve.sortRange = function (a, b, c, d, e) {
    var f = a.length;
    if (1 < f) {
      if (1 != (0 <= d && d <= f - 1 && d + e <= f))
        throw new v(
          new ra(
            "first out of range (first >= 0 && first <= k - 1 && first + n <= k)",
            {
              fileName: "ArrayTools.hx",
              lineNumber: 339,
              className: "de.polygonal.ds.tools.ArrayTools",
              methodName: "sortRange",
            }
          )
        );
      if (1 != (0 <= e && e <= f))
        throw new v(
          new ra("n out of range (n >= 0 && n <= k)", {
            fileName: "ArrayTools.hx",
            lineNumber: 340,
            className: "de.polygonal.ds.tools.ArrayTools",
            methodName: "sortRange",
          })
        );
      if (c)
        for (c = d + 1, e = d + e; c < e; ) {
          var g = c++;
          for (f = a[g]; g > d; ) {
            var h = a[g - 1];
            if (0 < b(h, f)) (a[g] = h), --g;
            else break;
          }
          a[g] = f;
        }
      else ve._quickSort(a, d, e, b);
    }
  };
  ve.quickPerm = function (a) {
    var b = [],
      c = [],
      d = [],
      e;
    for (e = 0; e < a; ) {
      var f = e++;
      c[f] = f + 1;
      d[f] = 0;
    }
    b.push(c.slice());
    for (e = 1; e < a; )
      if (d[e] < e) {
        f = (e % 2) * d[e];
        var g = c[f];
        c[f] = c[e];
        c[e] = g;
        b.push(c.slice());
        d[e]++;
        e = 1;
      } else (d[e] = 0), ++e;
    return b;
  };
  ve.equals = function (a, b) {
    if (a.length != b.length) return !1;
    for (var c = 0, d = a.length; c < d; ) {
      var e = c++;
      if (a[e] != b[e]) return !1;
    }
    return !0;
  };
  ve.split = function (a, b, c) {
    if (1 != (0 == b % c))
      throw new v(
        new ra("n is not a multiple of k (n % k == 0)", {
          fileName: "ArrayTools.hx",
          lineNumber: 426,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "split",
        })
      );
    for (var d = [], e = null, f = 0; f < b; ) {
      var g = f++;
      0 == g % c && ((e = []), (d[(g / c) | 0] = e));
      e.push(a[g]);
    }
    return d;
  };
  ve._quickSort = function (a, b, c, d) {
    var e = b + c - 1,
      f = b,
      g = e;
    if (1 < c) {
      var h = b + (c >> 1);
      c = b + c - 1;
      var n = a[b],
        k = a[h],
        m = a[c],
        l = d(n, m);
      h =
        0 > l && 0 > d(n, k)
          ? 0 > d(k, m)
            ? h
            : c
          : 0 > d(k, n) && 0 > d(k, m)
          ? 0 > l
            ? b
            : c
          : 0 > d(m, n)
          ? h
          : b;
      c = a[h];
      for (a[h] = a[b]; f < g; ) {
        for (; 0 > d(c, a[g]) && f < g; ) --g;
        g != f && ((a[f] = a[g]), ++f);
        for (; 0 < d(c, a[f]) && f < g; ) ++f;
        g != f && ((a[g] = a[f]), --g);
      }
      a[f] = c;
      ve._quickSort(a, b, f - b, d);
      ve._quickSort(a, f + 1, e - f, d);
    }
  };
  var Yt = function () {};
  p["de.polygonal.ds.tools.Assert"] = Yt;
  Yt.__name__ = ["de", "polygonal", "ds", "tools", "Assert"];
  var ra = function (a, b) {
    null == a && (a = "");
    this.message = a;
    var c = X.toString(X.callStack());
    c = c.replace(
      /\nCalled from de\.polygonal\.ds\.tools\.AssertError.*$/m,
      ""
    );
    this.message =
      "Assertation " +
      a +
      " failed in file " +
      b.fileName +
      ", line " +
      b.lineNumber +
      ", " +
      b.className +
      ":: " +
      b.methodName +
      "\nCall stack:" +
      c;
  };
  p["de.polygonal.ds.tools.AssertError"] = ra;
  ra.__name__ = ["de", "polygonal", "ds", "tools", "AssertError"];
  ra.prototype = {
    message: null,
    toString: function () {
      return this.message;
    },
    __class__: ra,
  };
  var Vg = function () {};
  p["de.polygonal.ds.tools.GrowthRate"] = Vg;
  Vg.__name__ = ["de", "polygonal", "ds", "tools", "GrowthRate"];
  Vg.compute = function (a, b) {
    if (1 != -3 <= a)
      throw new v(
        new ra("invalid growth rate (rate >= -3)", {
          fileName: "GrowthRate.hx",
          lineNumber: 52,
          className: "de.polygonal.ds.tools.GrowthRate",
          methodName: "compute",
        })
      );
    if (0 < a) b += a;
    else
      switch (a) {
        case -3:
          b <<= 1;
          break;
        case -2:
          b = ((3 * b) >> 1) + 1;
          break;
        case -1:
          a = b + 1;
          b = (a >> 3) + (9 > a ? 3 : 6) + a;
          break;
        case 0:
          throw new v("out of space");
      }
    return b;
  };
  var Eb = function () {};
  p["de.polygonal.ds.tools.NativeArrayTools"] = Eb;
  Eb.__name__ = ["de", "polygonal", "ds", "tools", "NativeArrayTools"];
  Eb.alloc = function (a) {
    return Array(a);
  };
  Eb.get = function (a, b) {
    return a[b];
  };
  Eb.set = function (a, b, c) {
    a[b] = c;
  };
  Eb.size = function (a) {
    return a.length;
  };
  Eb.toArray = function (a, b, c, d) {
    if (1 != (0 <= b && b < a.length))
      throw new v(
        new ra("first index out of range (first >= 0 && first < size(src))", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 132,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "toArray",
        })
      );
    if (1 != (0 <= c && b + c <= a.length))
      throw new v(
        new ra("len out of range (len >= 0 && first + len <= size(src))", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 133,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "toArray",
        })
      );
    if (0 == c) return [];
    if (1 != 0 <= c)
      throw new v(
        new ra("len >= 0", {
          fileName: "ArrayTools.hx",
          lineNumber: 37,
          className: "de.polygonal.ds.tools.ArrayTools",
          methodName: "alloc",
        })
      );
    d = Array(c);
    if (0 == b)
      for (b = 0; b < c; ) {
        var e = b++;
        d[e] = a[e];
      }
    else
      for (e = b, c = b + c; e < c; ) {
        var f = e++;
        d[f - b] = a[f];
      }
    return d;
  };
  Eb.ofArray = function (a) {
    return a.slice(0, a.length);
  };
  Eb.blit = function (a, b, c, d, e) {
    if (0 < e) {
      if (1 != b < a.length)
        throw new v(
          new ra("srcPos out of range (srcPos < size(src))", {
            fileName: "NativeArrayTools.hx",
            lineNumber: 188,
            className: "de.polygonal.ds.tools.NativeArrayTools",
            methodName: "blit",
          })
        );
      if (1 != d < c.length)
        throw new v(
          new ra("dstPos out of range (dstPos < size(dst))", {
            fileName: "NativeArrayTools.hx",
            lineNumber: 189,
            className: "de.polygonal.ds.tools.NativeArrayTools",
            methodName: "blit",
          })
        );
      if (1 != (b + e <= a.length && d + e <= c.length))
        throw new v(
          new ra(
            "n out of range (srcPos + n <= size(src) && dstPos + n <= size(dst))",
            {
              fileName: "NativeArrayTools.hx",
              lineNumber: 190,
              className: "de.polygonal.ds.tools.NativeArrayTools",
              methodName: "blit",
            }
          )
        );
      if (a == c)
        if (b < d)
          for (c = b + e, d += e, b = 0; b < e; ) b++, --c, --d, (a[d] = a[c]);
        else {
          if (b > d) for (c = b, b = 0; b < e; ) b++, (a[d] = a[c]), ++c, ++d;
        }
      else if (0 == b && 0 == d) for (d = 0; d < e; ) (b = d++), (c[b] = a[b]);
      else if (0 == b)
        for (b = 0; b < e; ) {
          var f = b++;
          c[d + f] = a[f];
        }
      else if (0 == d) for (d = 0; d < e; ) (f = d++), (c[f] = a[b + f]);
      else
        for (f = 0; f < e; ) {
          var g = f++;
          c[d + g] = a[b + g];
        }
    }
  };
  Eb.copy = function (a) {
    return a.slice(0);
  };
  Eb.zero = function (a, b, c) {
    null == c && (c = 0);
    null == b && (b = 0);
    c = 0 >= c ? a.length : b + c;
    if (1 != (0 <= b && b < a.length))
      throw new v(
        new ra("min >= 0 && min < size(dst)", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 284,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "zero",
        })
      );
    if (1 != c <= a.length)
      throw new v(
        new ra("max <= size(dst)", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 285,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "zero",
        })
      );
    for (; b < c; ) a[b++] = 0;
    return a;
  };
  Eb.init = function (a, b, c, d) {
    null == d && (d = 0);
    null == c && (c = 0);
    d = 0 >= d ? a.length : c + d;
    if (1 != (0 <= c && c < a.length))
      throw new v(
        new ra("min >= 0 && min < size(a)", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 306,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "init",
        })
      );
    if (1 != d <= a.length)
      throw new v(
        new ra("max <= size(a)", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 307,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "init",
        })
      );
    for (; c < d; ) a[c++] = b;
    return a;
  };
  Eb.nullify = function (a, b, c) {
    null == c && (c = 0);
    null == b && (b = 0);
    c = 0 >= c ? a.length : b + c;
    if (1 != (0 <= b && b < a.length))
      throw new v(
        new ra("min >= 0 && min < size(a)", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 322,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "nullify",
        })
      );
    if (1 != c <= a.length)
      throw new v(
        new ra("max <= size(a)", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 323,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "nullify",
        })
      );
    for (; b < c; ) a[b++] = null;
    return a;
  };
  Eb.binarySearchCmp = function (a, b, c, d, e) {
    if (1 != (null != a))
      throw new v(
        new ra("a != null", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 342,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchCmp",
        })
      );
    if (1 != (null != e))
      throw new v(
        new ra("cmp != null", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 343,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchCmp",
        })
      );
    if (1 != (0 <= c && c < a.length))
      throw new v(
        new ra("min >= 0 && min < size(a)", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 344,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchCmp",
        })
      );
    if (1 != d < a.length)
      throw new v(
        new ra("max < size(a)", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 345,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchCmp",
        })
      );
    for (var f, g = d + 1; c < g; )
      (f = c + ((g - c) >> 1)), 0 > e(a[f], b) ? (c = f + 1) : (g = f);
    return c <= d && 0 == e(a[c], b) ? c : ~c;
  };
  Eb.binarySearchf = function (a, b, c, d) {
    if (1 != (null != a))
      throw new v(
        new ra("a != null", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 370,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchf",
        })
      );
    if (1 != (0 <= c && c < a.length))
      throw new v(
        new ra("min >= 0 && min < size(a)", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 371,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchf",
        })
      );
    if (1 != d < a.length)
      throw new v(
        new ra("max < size(a)", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 372,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchf",
        })
      );
    for (var e, f = d + 1; c < f; )
      (e = c + ((f - c) >> 1)), a[e] < b ? (c = e + 1) : (f = e);
    return c <= d && a[c] == b ? c : ~c;
  };
  Eb.binarySearchi = function (a, b, c, d) {
    if (1 != (null != a))
      throw new v(
        new ra("a != null", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 397,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchi",
        })
      );
    if (1 != (0 <= c && c < a.length))
      throw new v(
        new ra("min >= 0 && min < size(a)", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 398,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchi",
        })
      );
    if (1 != d < a.length)
      throw new v(
        new ra("max < size(a)", {
          fileName: "NativeArrayTools.hx",
          lineNumber: 399,
          className: "de.polygonal.ds.tools.NativeArrayTools",
          methodName: "binarySearchi",
        })
      );
    for (var e, f = d + 1; c < f; )
      (e = c + ((f - c) >> 1)), a[e] < b ? (c = e + 1) : (f = e);
    return c <= d && a[c] == b ? c : ~c;
  };
  var hj = function () {};
  p["de.polygonal.ds.tools.Shuffle"] = hj;
  hj.__name__ = ["de", "polygonal", "ds", "tools", "Shuffle"];
  hj._f = function () {
    return Math.random();
  };
  hj.setRandom = function (a) {
    hj._f = a;
  };
  hj.frand = function () {
    return hj._f();
  };
  var $e = (p["haxe.StackItem"] = {
    __ename__: ["haxe", "StackItem"],
    __constructs__: [
      "CFunction",
      "Module",
      "FilePos",
      "Method",
      "LocalFunction",
    ],
  });
  $e.CFunction = ["CFunction", 0];
  $e.CFunction.toString = M;
  $e.CFunction.__enum__ = $e;
  $e.Module = function (a) {
    a = ["Module", 1, a];
    a.__enum__ = $e;
    a.toString = M;
    return a;
  };
  $e.FilePos = function (a, b, c) {
    a = ["FilePos", 2, a, b, c];
    a.__enum__ = $e;
    a.toString = M;
    return a;
  };
  $e.Method = function (a, b) {
    a = ["Method", 3, a, b];
    a.__enum__ = $e;
    a.toString = M;
    return a;
  };
  $e.LocalFunction = function (a) {
    a = ["LocalFunction", 4, a];
    a.__enum__ = $e;
    a.toString = M;
    return a;
  };
  var X = function () {};
  p["haxe.CallStack"] = X;
  X.__name__ = ["haxe", "CallStack"];
  X.getStack = function (a) {
    if (null == a) return [];
    var b = Error.prepareStackTrace;
    Error.prepareStackTrace = function (a, b) {
      a = [];
      for (var c = 0; c < b.length; ) {
        var d = b[c];
        ++c;
        null != X.wrapCallSite && (d = X.wrapCallSite(d));
        var g = null,
          h = d.getFunctionName();
        if (null != h) {
          var n = h.lastIndexOf(".");
          0 <= n &&
            ((g = Q.substr(h, 0, n)),
            (h = Q.substr(h, n + 1, null)),
            (g = $e.Method(g, h)));
        }
        a.push($e.FilePos(g, d.getFileName(), d.getLineNumber()));
      }
      return a;
    };
    a = X.makeStack(a.stack);
    Error.prepareStackTrace = b;
    return a;
  };
  X.callStack = function () {
    try {
      throw Error();
    } catch (b) {
      X.lastException = b;
      b instanceof v && (b = b.val);
      var a = X.getStack(b);
      a.shift();
      return a;
    }
  };
  X.exceptionStack = function () {
    return X.getStack(X.lastException);
  };
  X.toString = function (a) {
    for (var b = new Cf(), c = 0; c < a.length; ) {
      var d = a[c];
      ++c;
      b.b += "\nCalled from ";
      X.itemToString(b, d);
    }
    return b.b;
  };
  X.itemToString = function (a, b) {
    switch (b[1]) {
      case 0:
        a.b += "a C function";
        break;
      case 1:
        b = b[2];
        a.b += "module ";
        a.b += null == b ? "null" : "" + b;
        break;
      case 2:
        var c = b[4],
          d = b[3];
        b = b[2];
        null != b && (X.itemToString(a, b), (a.b += " ("));
        a.b += null == d ? "null" : "" + d;
        a.b += " line ";
        a.b += null == c ? "null" : "" + c;
        null != b && (a.b += ")");
        break;
      case 3:
        c = b[3];
        b = b[2];
        a.b += null == b ? "null" : "" + b;
        a.b += ".";
        a.b += null == c ? "null" : "" + c;
        break;
      case 4:
        (b = b[2]),
          (a.b += "local function #"),
          (a.b += null == b ? "null" : "" + b);
    }
  };
  X.makeStack = function (a) {
    if (null == a) return [];
    if ("string" == typeof a) {
      a = a.split("\n");
      "Error" == a[0] && a.shift();
      for (
        var b = [],
          c = new Ib(
            "^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$",
            ""
          ),
          d = 0;
        d < a.length;

      ) {
        var e = a[d];
        ++d;
        if (c.match(e)) {
          e = c.matched(1).split(".");
          var f = e.pop(),
            g = c.matched(2),
            h = P.parseInt(c.matched(3));
          b.push(
            $e.FilePos(
              "Anonymous function" == f
                ? $e.LocalFunction()
                : "Global code" == f
                ? null
                : $e.Method(e.join("."), f),
              g,
              h
            )
          );
        } else b.push($e.Module(ba.trim(e)));
      }
      return b;
    }
    return a;
  };
  var ij = {};
  p["haxe._Int32.Int32_Impl_"] = ij;
  ij.__name__ = ["haxe", "_Int32", "Int32_Impl_"];
  ij.ucompare = function (a, b) {
    return 0 > a ? (0 > b ? (~b - ~a) | 0 : 1) : 0 > b ? -1 : (a - b) | 0;
  };
  var fn = {};
  p["haxe._Int64.Int64_Impl_"] = fn;
  fn.__name__ = ["haxe", "_Int64", "Int64_Impl_"];
  fn.toString = function (a) {
    var b = a;
    a = new Fa(0, 0);
    if (b.high == a.high && b.low == a.low) return "0";
    a = "";
    var c = !1;
    0 > b.high && (c = !0);
    for (var d = new Fa(0, 10); ; ) {
      var e = new Fa(0, 0);
      if (b.high == e.high && b.low == e.low) break;
      b = fn.divMod(b, d);
      if (0 > b.modulus.high) {
        var f = b.modulus;
        e = ~f.high;
        f = -f.low;
        0 == f && (e++, (e |= 0));
        a = new Fa(e, f).low + a;
        e = b.quotient;
        b = ~e.high;
        e = -e.low;
        0 == e && (b++, (b |= 0));
        b = new Fa(b, e);
      } else (a = b.modulus.low + a), (b = b.quotient);
    }
    c && (a = "-" + a);
    return a;
  };
  fn.divMod = function (a, b) {
    if (0 == b.high)
      switch (b.low) {
        case 0:
          throw new v("divide by zero");
        case 1:
          a = new Fa(a.high, a.low);
          var c = new Fa(0, 0);
          return { quotient: a, modulus: c };
      }
    var d = 0 > a.high != 0 > b.high;
    if (0 > a.high) {
      c = ~a.high;
      var e = -a.low;
      0 == e && (c++, (c |= 0));
      c = new Fa(c, e);
    } else c = new Fa(a.high, a.low);
    0 > b.high &&
      ((e = ~b.high),
      (b = -b.low),
      0 == b && (e++, (e |= 0)),
      (b = new Fa(e, b)));
    e = new Fa(0, 0);
    for (var f = new Fa(0, 1); !(0 > b.high); ) {
      var g = ij.ucompare(b.high, c.high);
      g = 0 != g ? g : ij.ucompare(b.low, c.low);
      var h = 1;
      h &= 63;
      b =
        0 == h
          ? new Fa(b.high, b.low)
          : 32 > h
          ? new Fa((b.high << h) | (b.low >>> (32 - h)), b.low << h)
          : new Fa(b.low << (h - 32), 0);
      h = 1;
      h &= 63;
      f =
        0 == h
          ? new Fa(f.high, f.low)
          : 32 > h
          ? new Fa((f.high << h) | (f.low >>> (32 - h)), f.low << h)
          : new Fa(f.low << (h - 32), 0);
      if (0 <= g) break;
    }
    for (;;) {
      g = new Fa(0, 0);
      if (f.high == g.high && f.low == g.low) break;
      g = ij.ucompare(c.high, b.high);
      0 <= (0 != g ? g : ij.ucompare(c.low, b.low)) &&
        ((e = new Fa(e.high | f.high, e.low | f.low)),
        (g = (c.high - b.high) | 0),
        (h = (c.low - b.low) | 0),
        0 > ij.ucompare(c.low, b.low) && (g--, (g |= 0)),
        (c = new Fa(g, h)));
      g = 1;
      g &= 63;
      f =
        0 == g
          ? new Fa(f.high, f.low)
          : 32 > g
          ? new Fa(f.high >>> g, (f.high << (32 - g)) | (f.low >>> g))
          : new Fa(0, f.high >>> (g - 32));
      g = 1;
      g &= 63;
      b =
        0 == g
          ? new Fa(b.high, b.low)
          : 32 > g
          ? new Fa(b.high >>> g, (b.high << (32 - g)) | (b.low >>> g))
          : new Fa(0, b.high >>> (g - 32));
    }
    d &&
      ((d = ~e.high),
      (b = -e.low),
      0 == b && (d++, (d |= 0)),
      (e = new Fa(d, b)));
    0 > a.high &&
      ((a = ~c.high),
      (c = -c.low),
      0 == c && (a++, (a |= 0)),
      (c = new Fa(a, c)));
    return { quotient: e, modulus: c };
  };
  var Fa = function (a, b) {
    this.high = a;
    this.low = b;
  };
  p["haxe._Int64.___Int64"] = Fa;
  Fa.__name__ = ["haxe", "_Int64", "___Int64"];
  Fa.prototype = { high: null, low: null, __class__: Fa };
  var Bh = function () {};
  p["haxe.Log"] = Bh;
  Bh.__name__ = ["haxe", "Log"];
  Bh.trace = function (a, b) {
    u.__trace(a, b);
  };
  var Th = function () {};
  p["haxe.Resource"] = Th;
  Th.__name__ = ["haxe", "Resource"];
  Th.getString = function (a) {
    for (var b = 0, c = Th.content; b < c.length; ) {
      var d = c[b];
      ++b;
      if (d.name == a)
        return null != d.str ? d.str : ug.decode(d.data).toString();
    }
    return null;
  };
  Th.getBytes = function (a) {
    for (var b = 0, c = Th.content; b < c.length; ) {
      var d = c[b];
      ++b;
      if (d.name == a)
        return null != d.str ? Ra.ofString(d.str) : ug.decode(d.data);
    }
    return null;
  };
  var we = function () {
    this.buf = new Cf();
    this.cache = [];
    this.useCache = we.USE_CACHE;
    this.useEnumIndex = we.USE_ENUM_INDEX;
    this.shash = new la();
    this.scount = 0;
  };
  p["haxe.Serializer"] = we;
  we.__name__ = ["haxe", "Serializer"];
  we.run = function (a) {
    var b = new we();
    b.serialize(a);
    return b.toString();
  };
  we.prototype = {
    buf: null,
    cache: null,
    shash: null,
    scount: null,
    useCache: null,
    useEnumIndex: null,
    toString: function () {
      return this.buf.b;
    },
    serializeString: function (a) {
      var b = this.shash;
      b = null != t[a] ? b.getReserved(a) : b.h[a];
      if (null != b)
        (this.buf.b += "R"), (this.buf.b += null == b ? "null" : "" + b);
      else {
        b = this.shash;
        var c = this.scount++;
        null != t[a] ? b.setReserved(a, c) : (b.h[a] = c);
        this.buf.b += "y";
        a = encodeURIComponent(a);
        this.buf.b += P.string(a.length);
        this.buf.b += ":";
        this.buf.b += null == a ? "null" : "" + a;
      }
    },
    serializeRef: function (a) {
      for (var b = typeof a, c = 0, d = this.cache.length; c < d; ) {
        var e = c++,
          f = this.cache[e];
        if (typeof f == b && f == a)
          return (
            (this.buf.b += "r"), (this.buf.b += null == e ? "null" : "" + e), !0
          );
      }
      this.cache.push(a);
      return !1;
    },
    serializeFields: function (a) {
      for (var b = 0, c = V.fields(a); b < c.length; ) {
        var d = c[b];
        ++b;
        this.serializeString(d);
        this.serialize(V.field(a, d));
      }
      this.buf.b += "g";
    },
    serialize: function (a) {
      var b = qa["typeof"](a);
      switch (b[1]) {
        case 0:
          this.buf.b += "n";
          break;
        case 1:
          if (0 == a) {
            this.buf.b += "z";
            break;
          }
          this.buf.b += "i";
          this.buf.b += null == a ? "null" : "" + a;
          break;
        case 2:
          isNaN(a)
            ? (this.buf.b += "k")
            : isFinite(a)
            ? ((this.buf.b += "d"), (this.buf.b += null == a ? "null" : "" + a))
            : (this.buf.b += 0 > a ? "m" : "p");
          break;
        case 3:
          this.buf.b += a ? "t" : "f";
          break;
        case 4:
          u.__instanceof(a, Zt)
            ? ((a = qa.getClassName(a)),
              (this.buf.b += "A"),
              this.serializeString(a))
            : u.__instanceof(a, $t)
            ? ((this.buf.b += "B"), this.serializeString(qa.getEnumName(a)))
            : (this.useCache && this.serializeRef(a)) ||
              ((this.buf.b += "o"), this.serializeFields(a));
          break;
        case 5:
          throw new v("Cannot serialize function");
        case 6:
          b = b[2];
          if (b == String) {
            this.serializeString(a);
            break;
          }
          if (this.useCache && this.serializeRef(a)) break;
          switch (b) {
            case Array:
              b = 0;
              this.buf.b += "a";
              for (var c = 0, d = a.length; c < d; ) {
                var e = c++;
                null == a[e]
                  ? ++b
                  : (0 < b &&
                      (1 == b
                        ? (this.buf.b += "n")
                        : ((this.buf.b += "u"),
                          (this.buf.b += null == b ? "null" : "" + b)),
                      (b = 0)),
                    this.serialize(a[e]));
              }
              0 < b &&
                (1 == b
                  ? (this.buf.b += "n")
                  : ((this.buf.b += "u"),
                    (this.buf.b += null == b ? "null" : "" + b)));
              this.buf.b += "h";
              break;
            case Date:
              this.buf.b += "v";
              this.buf.b += P.string(a.getTime());
              break;
            case yf:
              this.buf.b += "l";
              for (a = a.h; null != a; )
                (b = a.item), (a = a.next), this.serialize(b);
              this.buf.b += "h";
              break;
            case Ca:
              this.buf.b += "q";
              for (b = a.keys(); b.hasNext(); )
                (c = b.next()),
                  (this.buf.b += ":"),
                  (this.buf.b += null == c ? "null" : "" + c),
                  this.serialize(a.h[c]);
              this.buf.b += "h";
              break;
            case qd:
              this.buf.b += "M";
              for (b = a.keys(); b.hasNext(); )
                (c = b.next()),
                  (d = V.field(c, "__id__")),
                  V.deleteField(c, "__id__"),
                  this.serialize(c),
                  (c.__id__ = d),
                  this.serialize(a.h[c.__id__]);
              this.buf.b += "h";
              break;
            case la:
              this.buf.b += "b";
              for (b = a.keys(); b.hasNext(); )
                (c = b.next()),
                  this.serializeString(c),
                  this.serialize(null != t[c] ? a.getReserved(c) : a.h[c]);
              this.buf.b += "h";
              break;
            case Ra:
              this.buf.b += "s";
              this.buf.b += P.string(Math.ceil((8 * a.length) / 6));
              this.buf.b += ":";
              c = 0;
              d = a.length - 2;
              b = we.BASE64_CODES;
              if (null == b) {
                b = Array(we.BASE64.length);
                e = 0;
                for (var f = we.BASE64.length; e < f; ) {
                  var g = e++;
                  b[g] = Q.cca(we.BASE64, g);
                }
                we.BASE64_CODES = b;
              }
              for (; c < d; )
                (e = a.b[c++]),
                  (f = a.b[c++]),
                  (g = a.b[c++]),
                  (this.buf.b += String.fromCharCode(b[e >> 2])),
                  (this.buf.b += String.fromCharCode(
                    b[((e << 4) | (f >> 4)) & 63]
                  )),
                  (this.buf.b += String.fromCharCode(
                    b[((f << 2) | (g >> 6)) & 63]
                  )),
                  (this.buf.b += String.fromCharCode(b[g & 63]));
              c == d
                ? ((d = a.b[c++]),
                  (a = a.b[c++]),
                  (this.buf.b += String.fromCharCode(b[d >> 2])),
                  (this.buf.b += String.fromCharCode(
                    b[((d << 4) | (a >> 4)) & 63]
                  )),
                  (this.buf.b += String.fromCharCode(b[(a << 2) & 63])))
                : c == d + 1 &&
                  ((a = a.b[c++]),
                  (this.buf.b += String.fromCharCode(b[a >> 2])),
                  (this.buf.b += String.fromCharCode(b[(a << 4) & 63])));
              break;
            default:
              this.useCache && this.cache.pop(),
                null != a.hxSerialize
                  ? ((this.buf.b += "C"),
                    this.serializeString(qa.getClassName(b)),
                    this.useCache && this.cache.push(a),
                    a.hxSerialize(this),
                    (this.buf.b += "g"))
                  : ((this.buf.b += "c"),
                    this.serializeString(qa.getClassName(b)),
                    this.useCache && this.cache.push(a),
                    this.serializeFields(a));
          }
          break;
        case 7:
          b = b[2];
          if (this.useCache) {
            if (this.serializeRef(a)) break;
            this.cache.pop();
          }
          this.buf.b += P.string(this.useEnumIndex ? "j" : "w");
          this.serializeString(qa.getEnumName(b));
          this.useEnumIndex
            ? ((this.buf.b += ":"), (this.buf.b += P.string(a[1])))
            : this.serializeString(a[0]);
          this.buf.b += ":";
          b = a.length;
          this.buf.b += P.string(b - 2);
          for (c = 2; c < b; ) (d = c++), this.serialize(a[d]);
          this.useCache && this.cache.push(a);
          break;
        default:
          throw new v("Cannot serialize " + P.string(a));
      }
    },
    __class__: we,
  };
  var af = function (a) {
    var b = this;
    this.id = setInterval(function () {
      b.run();
    }, a);
  };
  p["haxe.Timer"] = af;
  af.__name__ = ["haxe", "Timer"];
  af.delay = function (a, b) {
    var c = new af(b);
    c.run = function () {
      c.stop();
      a();
    };
    return c;
  };
  af.measure = function (a, b) {
    var c = new Date().getTime() / 1e3;
    a = a();
    Bh.trace(new Date().getTime() / 1e3 - c + "s", b);
    return a;
  };
  af.stamp = function () {
    return new Date().getTime() / 1e3;
  };
  af.prototype = {
    id: null,
    stop: function () {
      null != this.id && (clearInterval(this.id), (this.id = null));
    },
    run: function () {},
    __class__: af,
  };
  var kn = function () {};
  p["haxe._Unserializer.DefaultResolver"] = kn;
  kn.__name__ = ["haxe", "_Unserializer", "DefaultResolver"];
  kn.prototype = {
    resolveClass: function (a) {
      return qa.resolveClass(a);
    },
    resolveEnum: function (a) {
      return qa.resolveEnum(a);
    },
    __class__: kn,
  };
  var Ie = function (a) {
    this.buf = a;
    this.length = a.length;
    this.pos = 0;
    this.scache = [];
    this.cache = [];
    a = Ie.DEFAULT_RESOLVER;
    null == a && ((a = new kn()), (Ie.DEFAULT_RESOLVER = a));
    this.resolver = a;
  };
  p["haxe.Unserializer"] = Ie;
  Ie.__name__ = ["haxe", "Unserializer"];
  Ie.initCodes = function () {
    for (var a = [], b = 0, c = Ie.BASE64.length; b < c; ) {
      var d = b++;
      a[Ie.BASE64.charCodeAt(d)] = d;
    }
    return a;
  };
  Ie.run = function (a) {
    return new Ie(a).unserialize();
  };
  Ie.prototype = {
    buf: null,
    pos: null,
    length: null,
    cache: null,
    scache: null,
    resolver: null,
    setResolver: function (a) {
      null == a
        ? (null == jj.instance && (jj.instance = new jj()),
          (this.resolver = jj.instance))
        : (this.resolver = a);
    },
    readDigits: function () {
      for (var a = 0, b = !1, c = this.pos; ; ) {
        var d = this.buf.charCodeAt(this.pos);
        if (d != d) break;
        if (45 == d) {
          if (this.pos != c) break;
          b = !0;
        } else {
          if (48 > d || 57 < d) break;
          a = 10 * a + (d - 48);
        }
        this.pos++;
      }
      b && (a *= -1);
      return a;
    },
    readFloat: function () {
      for (var a = this.pos; ; ) {
        var b = this.buf.charCodeAt(this.pos);
        if (b != b) break;
        if ((43 <= b && 58 > b) || 101 == b || 69 == b) this.pos++;
        else break;
      }
      return parseFloat(Q.substr(this.buf, a, this.pos - a));
    },
    unserializeObject: function (a) {
      for (;;) {
        if (this.pos >= this.length) throw new v("Invalid object");
        if (103 == this.buf.charCodeAt(this.pos)) break;
        var b = this.unserialize();
        if ("string" != typeof b) throw new v("Invalid object key");
        var c = this.unserialize();
        a[b] = c;
      }
      this.pos++;
    },
    unserializeEnum: function (a, b) {
      if (58 != this.buf.charCodeAt(this.pos++))
        throw new v("Invalid enum format");
      var c = this.readDigits();
      if (0 == c) return qa.createEnum(a, b);
      for (var d = []; 0 < c--; ) d.push(this.unserialize());
      return qa.createEnum(a, b, d);
    },
    unserialize: function () {
      switch (this.buf.charCodeAt(this.pos++)) {
        case 65:
          var a = this.unserialize(),
            b = this.resolver.resolveClass(a);
          if (null == b) throw new v("Class not found " + a);
          return b;
        case 66:
          a = this.unserialize();
          b = this.resolver.resolveEnum(a);
          if (null == b) throw new v("Enum not found " + a);
          return b;
        case 67:
          a = this.unserialize();
          b = this.resolver.resolveClass(a);
          if (null == b) throw new v("Class not found " + a);
          a = qa.createEmptyInstance(b);
          this.cache.push(a);
          a.hxUnserialize(this);
          if (103 != this.buf.charCodeAt(this.pos++))
            throw new v("Invalid custom data");
          return a;
        case 77:
          a = new qd();
          for (this.cache.push(a); 104 != this.buf.charCodeAt(this.pos); )
            (b = this.unserialize()), a.set(b, this.unserialize());
          this.pos++;
          return a;
        case 82:
          a = this.readDigits();
          if (0 > a || a >= this.scache.length)
            throw new v("Invalid string reference");
          return this.scache[a];
        case 97:
          a = [];
          for (this.cache.push(a); ; ) {
            b = this.buf.charCodeAt(this.pos);
            if (104 == b) {
              this.pos++;
              break;
            }
            117 == b
              ? (this.pos++,
                (b = this.readDigits()),
                (a[a.length + b - 1] = null))
              : a.push(this.unserialize());
          }
          return a;
        case 98:
          a = new la();
          for (this.cache.push(a); 104 != this.buf.charCodeAt(this.pos); ) {
            b = this.unserialize();
            var c = this.unserialize();
            null != t[b] ? a.setReserved(b, c) : (a.h[b] = c);
          }
          this.pos++;
          return a;
        case 99:
          a = this.unserialize();
          b = this.resolver.resolveClass(a);
          if (null == b) throw new v("Class not found " + a);
          a = qa.createEmptyInstance(b);
          this.cache.push(a);
          this.unserializeObject(a);
          return a;
        case 100:
          return this.readFloat();
        case 102:
          return !1;
        case 105:
          return this.readDigits();
        case 106:
          a = this.unserialize();
          b = this.resolver.resolveEnum(a);
          if (null == b) throw new v("Enum not found " + a);
          this.pos++;
          c = this.readDigits();
          var d = b.__constructs__.slice()[c];
          if (null == d) throw new v("Unknown enum index " + a + "@" + c);
          a = this.unserializeEnum(b, d);
          this.cache.push(a);
          return a;
        case 107:
          return NaN;
        case 108:
          a = new yf();
          for (this.cache.push(a); 104 != this.buf.charCodeAt(this.pos); )
            a.add(this.unserialize());
          this.pos++;
          return a;
        case 109:
          return -Infinity;
        case 110:
          return null;
        case 111:
          return (a = {}), this.cache.push(a), this.unserializeObject(a), a;
        case 112:
          return Infinity;
        case 113:
          a = new Ca();
          this.cache.push(a);
          for (b = this.buf.charCodeAt(this.pos++); 58 == b; )
            (b = this.readDigits()),
              (c = this.unserialize()),
              (a.h[b] = c),
              (b = this.buf.charCodeAt(this.pos++));
          if (104 != b) throw new v("Invalid IntMap format");
          return a;
        case 114:
          a = this.readDigits();
          if (0 > a || a >= this.cache.length) throw new v("Invalid reference");
          return this.cache[a];
        case 115:
          a = this.readDigits();
          d = this.buf;
          if (
            58 != this.buf.charCodeAt(this.pos++) ||
            this.length - this.pos < a
          )
            throw new v("Invalid bytes length");
          var e = Ie.CODES;
          null == e && ((e = Ie.initCodes()), (Ie.CODES = e));
          var f = this.pos,
            g = a & 3,
            h = f + (a - g);
          b = new Ra(new Je(3 * (a >> 2) + (2 <= g ? g - 1 : 0)));
          for (c = 0; f < h; ) {
            var n = e[d.charCodeAt(f++)],
              k = e[d.charCodeAt(f++)];
            b.b[c++] = ((n << 2) | (k >> 4)) & 255;
            n = e[d.charCodeAt(f++)];
            b.b[c++] = ((k << 4) | (n >> 2)) & 255;
            k = e[d.charCodeAt(f++)];
            b.b[c++] = ((n << 6) | k) & 255;
          }
          2 <= g &&
            ((k = e[d.charCodeAt(f++)]),
            (h = e[d.charCodeAt(f++)]),
            (b.b[c++] = ((k << 2) | (h >> 4)) & 255),
            3 == g &&
              ((d = e[d.charCodeAt(f++)]),
              (b.b[c++] = ((h << 4) | (d >> 2)) & 255)));
          this.pos += a;
          this.cache.push(b);
          return b;
        case 116:
          return !0;
        case 118:
          return (
            48 <= this.buf.charCodeAt(this.pos) &&
            57 >= this.buf.charCodeAt(this.pos) &&
            48 <= this.buf.charCodeAt(this.pos + 1) &&
            57 >= this.buf.charCodeAt(this.pos + 1) &&
            48 <= this.buf.charCodeAt(this.pos + 2) &&
            57 >= this.buf.charCodeAt(this.pos + 2) &&
            48 <= this.buf.charCodeAt(this.pos + 3) &&
            57 >= this.buf.charCodeAt(this.pos + 3) &&
            45 == this.buf.charCodeAt(this.pos + 4)
              ? ((a = Q.strDate(Q.substr(this.buf, this.pos, 19))),
                (this.pos += 19))
              : ((a = this.readFloat()), (a = new Date(a))),
            this.cache.push(a),
            a
          );
        case 119:
          a = this.unserialize();
          b = this.resolver.resolveEnum(a);
          if (null == b) throw new v("Enum not found " + a);
          a = this.unserializeEnum(b, this.unserialize());
          this.cache.push(a);
          return a;
        case 120:
          throw v.wrap(this.unserialize());
        case 121:
          a = this.readDigits();
          if (
            58 != this.buf.charCodeAt(this.pos++) ||
            this.length - this.pos < a
          )
            throw new v("Invalid string length");
          b = Q.substr(this.buf, this.pos, a);
          this.pos += a;
          b = decodeURIComponent(b.split("+").join(" "));
          this.scache.push(b);
          return b;
        case 122:
          return 0;
      }
      this.pos--;
      throw new v(
        "Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos
      );
    },
    __class__: Ie,
  };
  var jj = function () {};
  p["haxe._Unserializer.NullResolver"] = jj;
  jj.__name__ = ["haxe", "_Unserializer", "NullResolver"];
  jj.prototype = {
    resolveClass: function (a) {
      return null;
    },
    resolveEnum: function (a) {
      return null;
    },
    __class__: jj,
  };
  var Ra = function (a) {
    this.length = a.byteLength;
    this.b = new lb(a);
    this.b.bufferValue = a;
    a.hxBytes = this;
    a.bytes = this.b;
  };
  p["haxe.io.Bytes"] = Ra;
  Ra.__name__ = ["haxe", "io", "Bytes"];
  Ra.alloc = function (a) {
    return new Ra(new Je(a));
  };
  Ra.ofString = function (a, b) {
    b = [];
    for (var c = 0; c < a.length; ) {
      var d = a.charCodeAt(c++);
      55296 <= d &&
        56319 >= d &&
        (d = ((d - 55232) << 10) | (a.charCodeAt(c++) & 1023));
      127 >= d
        ? b.push(d)
        : (2047 >= d
            ? b.push(192 | (d >> 6))
            : (65535 >= d
                ? b.push(224 | (d >> 12))
                : (b.push(240 | (d >> 18)), b.push(128 | ((d >> 12) & 63))),
              b.push(128 | ((d >> 6) & 63))),
          b.push(128 | (d & 63)));
    }
    return new Ra(new lb(b).buffer);
  };
  Ra.ofData = function (a) {
    var b = a.hxBytes;
    return null != b ? b : new Ra(a);
  };
  Ra.fastGet = function (a, b) {
    return a.bytes[b];
  };
  Ra.prototype = {
    length: null,
    b: null,
    data: null,
    get: function (a) {
      return this.b[a];
    },
    set: function (a, b) {
      this.b[a] = b & 255;
    },
    blit: function (a, b, c, d) {
      if (0 > a || 0 > c || 0 > d || a + d > this.length || c + d > b.length)
        throw new v(pe.OutsideBounds);
      0 == c && d == b.b.byteLength
        ? this.b.set(b.b, a)
        : this.b.set(b.b.subarray(c, c + d), a);
    },
    fill: function (a, b, c) {
      for (var d = 0; d < b; ) d++, (this.b[a++] = c & 255);
    },
    sub: function (a, b) {
      if (0 > a || 0 > b || a + b > this.length) throw new v(pe.OutsideBounds);
      return new Ra(
        this.b.buffer.slice(a + this.b.byteOffset, a + this.b.byteOffset + b)
      );
    },
    compare: function (a) {
      for (
        var b = this.b,
          c = a.b,
          d = 0,
          e = this.length < a.length ? this.length : a.length;
        d < e;

      ) {
        var f = d++;
        if (b[f] != c[f]) return b[f] - c[f];
      }
      return this.length - a.length;
    },
    initData: function () {
      null == this.data &&
        (this.data = new Ai(
          this.b.buffer,
          this.b.byteOffset,
          this.b.byteLength
        ));
    },
    getDouble: function (a) {
      null == this.data &&
        (this.data = new Ai(
          this.b.buffer,
          this.b.byteOffset,
          this.b.byteLength
        ));
      return this.data.getFloat64(a, !0);
    },
    getFloat: function (a) {
      null == this.data &&
        (this.data = new Ai(
          this.b.buffer,
          this.b.byteOffset,
          this.b.byteLength
        ));
      return this.data.getFloat32(a, !0);
    },
    setDouble: function (a, b) {
      null == this.data &&
        (this.data = new Ai(
          this.b.buffer,
          this.b.byteOffset,
          this.b.byteLength
        ));
      this.data.setFloat64(a, b, !0);
    },
    setFloat: function (a, b) {
      null == this.data &&
        (this.data = new Ai(
          this.b.buffer,
          this.b.byteOffset,
          this.b.byteLength
        ));
      this.data.setFloat32(a, b, !0);
    },
    getUInt16: function (a) {
      null == this.data &&
        (this.data = new Ai(
          this.b.buffer,
          this.b.byteOffset,
          this.b.byteLength
        ));
      return this.data.getUint16(a, !0);
    },
    setUInt16: function (a, b) {
      null == this.data &&
        (this.data = new Ai(
          this.b.buffer,
          this.b.byteOffset,
          this.b.byteLength
        ));
      this.data.setUint16(a, b, !0);
    },
    getInt32: function (a) {
      null == this.data &&
        (this.data = new Ai(
          this.b.buffer,
          this.b.byteOffset,
          this.b.byteLength
        ));
      return this.data.getInt32(a, !0);
    },
    setInt32: function (a, b) {
      null == this.data &&
        (this.data = new Ai(
          this.b.buffer,
          this.b.byteOffset,
          this.b.byteLength
        ));
      this.data.setInt32(a, b, !0);
    },
    getInt64: function (a) {
      return new Fa(this.getInt32(a + 4), this.getInt32(a));
    },
    setInt64: function (a, b) {
      this.setInt32(a, b.low);
      this.setInt32(a + 4, b.high);
    },
    getString: function (a, b, c) {
      if (0 > a || 0 > b || a + b > this.length) throw new v(pe.OutsideBounds);
      c = "";
      var d = this.b,
        e = String.fromCharCode,
        f = a;
      for (a += b; f < a; )
        if (((b = d[f++]), 128 > b)) {
          if (0 == b) break;
          c += e(b);
        } else if (224 > b) c += e(((b & 63) << 6) | (d[f++] & 127));
        else if (240 > b) {
          var g = d[f++];
          c += e(((b & 31) << 12) | ((g & 127) << 6) | (d[f++] & 127));
        } else {
          g = d[f++];
          var h = d[f++];
          b =
            ((b & 15) << 18) |
            ((g & 127) << 12) |
            ((h & 127) << 6) |
            (d[f++] & 127);
          c += e((b >> 10) + 55232);
          c += e((b & 1023) | 56320);
        }
      return c;
    },
    readString: function (a, b) {
      return this.getString(a, b);
    },
    toString: function () {
      return this.getString(0, this.length);
    },
    toHex: function () {
      for (var a = "", b = [], c = 0; 16 > c; ) {
        var d = c++;
        b.push(Q.cca("0123456789abcdef", d));
      }
      c = 0;
      for (d = this.length; c < d; ) {
        var e = c++;
        e = this.b[e];
        a += String.fromCharCode(b[e >> 4]);
        a += String.fromCharCode(b[e & 15]);
      }
      return a;
    },
    getData: function () {
      return this.b.bufferValue;
    },
    __class__: Ra,
  };
  var ug = function () {};
  p["haxe.crypto.Base64"] = ug;
  ug.__name__ = ["haxe", "crypto", "Base64"];
  ug.encode = function (a, b) {
    null == b && (b = !0);
    var c = new ti(ug.BYTES).encodeBytes(a).toString();
    if (b)
      switch (a.length % 3) {
        case 1:
          c += "==";
          break;
        case 2:
          c += "=";
      }
    return c;
  };
  ug.decode = function (a, b) {
    null == b && (b = !0);
    if (b) for (; 61 == Q.cca(a, a.length - 1); ) a = Q.substr(a, 0, -1);
    return new ti(ug.BYTES).decodeBytes(Ra.ofString(a));
  };
  var ti = function (a) {
    for (var b = a.length, c = 1; b > 1 << c; ) ++c;
    if (8 < c || b != 1 << c)
      throw new v("BaseCode : base length must be a power of two.");
    this.base = a;
    this.nbits = c;
  };
  p["haxe.crypto.BaseCode"] = ti;
  ti.__name__ = ["haxe", "crypto", "BaseCode"];
  ti.prototype = {
    base: null,
    nbits: null,
    tbl: null,
    encodeBytes: function (a) {
      for (
        var b = this.nbits,
          c = this.base,
          d = ((8 * a.length) / b) | 0,
          e = new Ra(new Je(d + (0 == (8 * a.length) % b ? 0 : 1))),
          f = 0,
          g = 0,
          h = (1 << b) - 1,
          n = 0,
          k = 0;
        k < d;

      ) {
        for (; g < b; ) (g += 8), (f <<= 8), (f |= a.b[n++]);
        g -= b;
        e.b[k++] = c.b[(f >> g) & h] & 255;
      }
      0 < g && (e.b[k++] = c.b[(f << (b - g)) & h] & 255);
      return e;
    },
    initTable: function () {
      for (var a = [], b = 0; 256 > b; ) {
        var c = b++;
        a[c] = -1;
      }
      b = 0;
      for (c = this.base.length; b < c; ) {
        var d = b++;
        a[this.base.b[d]] = d;
      }
      this.tbl = a;
    },
    decodeBytes: function (a) {
      var b = this.nbits;
      null == this.tbl && this.initTable();
      for (
        var c = this.tbl,
          d = (a.length * b) >> 3,
          e = new Ra(new Je(d)),
          f = 0,
          g = 0,
          h = 0,
          n = 0;
        n < d;

      ) {
        for (; 8 > g; ) {
          g += b;
          f <<= b;
          var k = c[a.b[h++]];
          if (-1 == k) throw new v("BaseCode : invalid encoded char");
          f |= k;
        }
        g -= 8;
        e.b[n++] = (f >> g) & 255;
      }
      return e;
    },
    __class__: ti,
  };
  var ge = function () {};
  p["haxe.ds.ArraySort"] = ge;
  ge.__name__ = ["haxe", "ds", "ArraySort"];
  ge.sort = function (a, b) {
    ge.rec(a, b, 0, a.length);
  };
  ge.rec = function (a, b, c, d) {
    var e = (c + d) >> 1;
    if (12 > d - c) {
      if (!(d <= c))
        for (e = c + 1; e < d; )
          for (var f = e++; f > c; ) {
            if (0 > b(a[f], a[f - 1])) ge.swap(a, f - 1, f);
            else break;
            --f;
          }
    } else
      ge.rec(a, b, c, e),
        ge.rec(a, b, e, d),
        ge.doMerge(a, b, c, e, d, e - c, d - e);
  };
  ge.doMerge = function (a, b, c, d, e, f, g) {
    if (0 != f && 0 != g)
      if (2 == f + g) 0 > b(a[d], a[c]) && ge.swap(a, d, c);
      else {
        if (f > g) {
          var h = f >> 1;
          var n = c + h;
          var k = ge.lower(a, b, d, e, n);
          var m = k - d;
        } else
          (m = g >> 1), (k = d + m), (n = ge.upper(a, b, c, d, k)), (h = n - c);
        ge.rotate(a, b, n, d, k);
        d = n + m;
        ge.doMerge(a, b, c, n, d, h, m);
        ge.doMerge(a, b, d, k, e, f - h, g - m);
      }
  };
  ge.rotate = function (a, b, c, d, e) {
    if (c != d && d != e)
      for (b = ge.gcd(e - c, d - c); 0 != b--; ) {
        for (
          var f = a[c + b], g = d - c, h = c + b, n = c + b + g;
          n != c + b;

        )
          (a[h] = a[n]), (h = n), (n = e - n > g ? n + g : c + (g - (e - n)));
        a[h] = f;
      }
  };
  ge.gcd = function (a, b) {
    for (; 0 != b; ) {
      var c = a % b;
      a = b;
      b = c;
    }
    return a;
  };
  ge.upper = function (a, b, c, d, e) {
    d -= c;
    for (var f, g; 0 < d; )
      (f = d >> 1),
        (g = c + f),
        0 > b(a[e], a[g]) ? (d = f) : ((c = g + 1), (d = d - f - 1));
    return c;
  };
  ge.lower = function (a, b, c, d, e) {
    d -= c;
    for (var f, g; 0 < d; )
      (f = d >> 1),
        (g = c + f),
        0 > b(a[g], a[e]) ? ((c = g + 1), (d = d - f - 1)) : (d = f);
    return c;
  };
  ge.swap = function (a, b, c) {
    var d = a[b];
    a[b] = a[c];
    a[c] = d;
  };
  var ln = function () {};
  p["haxe.ds.BalancedTree"] = ln;
  ln.__name__ = ["haxe", "ds", "BalancedTree"];
  ln.prototype = {
    root: null,
    set: function (a, b) {
      this.root = this.setLoop(a, b, this.root);
    },
    get: function (a) {
      for (var b = this.root; null != b; ) {
        var c = this.compare(a, b.key);
        if (0 == c) return b.value;
        b = 0 > c ? b.left : b.right;
      }
      return null;
    },
    remove: function (a) {
      try {
        return (this.root = this.removeLoop(a, this.root)), !0;
      } catch (b) {
        X.lastException = b;
        b instanceof v && (b = b.val);
        if (u.__instanceof(b, String)) return !1;
        throw b;
      }
    },
    exists: function (a) {
      for (var b = this.root; null != b; ) {
        var c = this.compare(a, b.key);
        if (0 == c) return !0;
        b = 0 > c ? b.left : b.right;
      }
      return !1;
    },
    iterator: function () {
      var a = [];
      this.iteratorLoop(this.root, a);
      return Q.iter(a);
    },
    keys: function () {
      var a = [];
      this.keysLoop(this.root, a);
      return Q.iter(a);
    },
    setLoop: function (a, b, c) {
      if (null == c) return new nf(null, a, b, null);
      var d = this.compare(a, c.key);
      if (0 == d)
        return new nf(c.left, a, b, c.right, null == c ? 0 : c._height);
      if (0 > d)
        return (
          (a = this.setLoop(a, b, c.left)),
          this.balance(a, c.key, c.value, c.right)
        );
      a = this.setLoop(a, b, c.right);
      return this.balance(c.left, c.key, c.value, a);
    },
    removeLoop: function (a, b) {
      if (null == b) throw new v("Not_found");
      var c = this.compare(a, b.key);
      return 0 == c
        ? this.merge(b.left, b.right)
        : 0 > c
        ? this.balance(this.removeLoop(a, b.left), b.key, b.value, b.right)
        : this.balance(b.left, b.key, b.value, this.removeLoop(a, b.right));
    },
    iteratorLoop: function (a, b) {
      null != a &&
        (this.iteratorLoop(a.left, b),
        b.push(a.value),
        this.iteratorLoop(a.right, b));
    },
    keysLoop: function (a, b) {
      null != a &&
        (this.keysLoop(a.left, b), b.push(a.key), this.keysLoop(a.right, b));
    },
    merge: function (a, b) {
      if (null == a) return b;
      if (null == b) return a;
      var c = this.minBinding(b);
      return this.balance(a, c.key, c.value, this.removeMinBinding(b));
    },
    minBinding: function (a) {
      if (null == a) throw new v("Not_found");
      return null == a.left ? a : this.minBinding(a.left);
    },
    removeMinBinding: function (a) {
      return null == a.left
        ? a.right
        : this.balance(this.removeMinBinding(a.left), a.key, a.value, a.right);
    },
    balance: function (a, b, c, d) {
      var e = null == a ? 0 : a._height,
        f = null == d ? 0 : d._height;
      return e > f + 2
        ? ((e = a.left),
          (f = a.right),
          (null == e ? 0 : e._height) >= (null == f ? 0 : f._height)
            ? new nf(a.left, a.key, a.value, new nf(a.right, b, c, d))
            : new nf(
                new nf(a.left, a.key, a.value, a.right.left),
                a.right.key,
                a.right.value,
                new nf(a.right.right, b, c, d)
              ))
        : f > e + 2
        ? ((e = d.right),
          (f = d.left),
          (null == e ? 0 : e._height) > (null == f ? 0 : f._height)
            ? new nf(new nf(a, b, c, d.left), d.key, d.value, d.right)
            : new nf(
                new nf(a, b, c, d.left.left),
                d.left.key,
                d.left.value,
                new nf(d.left.right, d.key, d.value, d.right)
              ))
        : new nf(a, b, c, d, (e > f ? e : f) + 1);
    },
    compare: function (a, b) {
      return V.compare(a, b);
    },
    __class__: ln,
  };
  var nf = function (a, b, c, d, e) {
    null == e && (e = -1);
    this.left = a;
    this.key = b;
    this.value = c;
    this.right = d;
    -1 == e
      ? ((a = this.left),
        (b = this.right),
        (a =
          (null == a ? 0 : a._height) > (null == b ? 0 : b._height)
            ? this.left
            : this.right),
        (a = null == a ? 0 : a._height),
        (this._height = a + 1))
      : (this._height = e);
  };
  p["haxe.ds.TreeNode"] = nf;
  nf.__name__ = ["haxe", "ds", "TreeNode"];
  nf.prototype = {
    left: null,
    right: null,
    key: null,
    value: null,
    _height: null,
    __class__: nf,
  };
  var kj = function () {};
  p["haxe.ds.EnumValueMap"] = kj;
  kj.__name__ = ["haxe", "ds", "EnumValueMap"];
  kj.__interfaces__ = [Fd];
  kj.__super__ = ln;
  kj.prototype = x(ln.prototype, {
    compare: function (a, b) {
      var c = a[1] - b[1];
      if (0 != c) return c;
      a = a.slice(2);
      b = b.slice(2);
      return 0 == a.length && 0 == b.length ? 0 : this.compareArgs(a, b);
    },
    compareArgs: function (a, b) {
      var c = a.length - b.length;
      if (0 != c) return c;
      c = 0;
      for (var d = a.length; c < d; ) {
        var e = c++;
        e = this.compareArg(a[e], b[e]);
        if (0 != e) return e;
      }
      return 0;
    },
    compareArg: function (a, b) {
      return V.isEnumValue(a) && V.isEnumValue(b)
        ? this.compare(a, b)
        : a instanceof Array &&
          null == a.__enum__ &&
          b instanceof Array &&
          null == b.__enum__
        ? this.compareArgs(a, b)
        : V.compare(a, b);
    },
    __class__: kj,
  });
  var Cc = function (a, b) {
    this.elt = a;
    this.next = b;
  };
  p["haxe.ds.GenericCell"] = Cc;
  Cc.__name__ = ["haxe", "ds", "GenericCell"];
  Cc.prototype = { elt: null, next: null, __class__: Cc };
  var Ap = function () {};
  p["haxe.ds.GenericStack"] = Ap;
  Ap.__name__ = ["haxe", "ds", "GenericStack"];
  Ap.prototype = { head: null, __class__: Ap };
  var Oe = function (a, b) {
    this.map = a;
    this.keys = b;
    this.index = 0;
    this.count = b.length;
  };
  p["haxe.ds._StringMap.StringMapIterator"] = Oe;
  Oe.__name__ = ["haxe", "ds", "_StringMap", "StringMapIterator"];
  Oe.prototype = {
    map: null,
    keys: null,
    index: null,
    count: null,
    hasNext: function () {
      return this.index < this.count;
    },
    next: function () {
      var a = this.map,
        b = this.keys[this.index++];
      return null != t[b] ? a.getReserved(b) : a.h[b];
    },
    __class__: Oe,
  };
  var Bp = function () {
    this.b = [];
  };
  p["haxe.io.BytesBuffer"] = Bp;
  Bp.__name__ = ["haxe", "io", "BytesBuffer"];
  Bp.prototype = {
    b: null,
    getBytes: function () {
      var a = new Ra(new lb(this.b).buffer);
      this.b = null;
      return a;
    },
    __class__: Bp,
  };
  var mn = function () {};
  p["haxe.io.Input"] = mn;
  mn.__name__ = ["haxe", "io", "Input"];
  mn.prototype = {
    readByte: function () {
      throw new v("Not implemented");
    },
    readBytes: function (a, b, c) {
      var d = c,
        e = a.b;
      if (0 > b || 0 > c || b + c > a.length) throw new v(pe.OutsideBounds);
      try {
        for (; 0 < d; ) (e[b] = this.readByte()), ++b, --d;
      } catch (f) {
        if (
          ((X.lastException = f),
          f instanceof v && (f = f.val),
          !u.__instanceof(f, xk))
        )
          throw f;
      }
      return c - d;
    },
    readFullBytes: function (a, b, c) {
      for (; 0 < c; ) {
        var d = this.readBytes(a, b, c);
        if (0 == d) throw new v(pe.Blocked);
        b += d;
        c -= d;
      }
    },
    readString: function (a) {
      var b = new Ra(new Je(a));
      this.readFullBytes(b, 0, a);
      return b.toString();
    },
    __class__: mn,
  };
  var lj = function (a, b, c) {
    null == b && (b = 0);
    null == c && (c = a.length - b);
    if (0 > b || 0 > c || b + c > a.length) throw new v(pe.OutsideBounds);
    this.b = a.b;
    this.pos = b;
    this.totlen = this.len = c;
  };
  p["haxe.io.BytesInput"] = lj;
  lj.__name__ = ["haxe", "io", "BytesInput"];
  lj.__super__ = mn;
  lj.prototype = x(mn.prototype, {
    b: null,
    pos: null,
    len: null,
    totlen: null,
    readByte: function () {
      if (0 == this.len) throw new v(new xk());
      this.len--;
      return this.b[this.pos++];
    },
    readBytes: function (a, b, c) {
      if (0 > b || 0 > c || b + c > a.length) throw new v(pe.OutsideBounds);
      if (0 == this.len && 0 < c) throw new v(new xk());
      this.len < c && (c = this.len);
      var d = this.b;
      a = a.b;
      for (var e = 0, f = c; e < f; ) {
        var g = e++;
        a[b + g] = d[this.pos + g];
      }
      this.pos += c;
      this.len -= c;
      return c;
    },
    __class__: lj,
  });
  var Ls = function () {};
  p["haxe.io.Output"] = Ls;
  Ls.__name__ = ["haxe", "io", "Output"];
  var nn = function () {
    this.b = new Bp();
  };
  p["haxe.io.BytesOutput"] = nn;
  nn.__name__ = ["haxe", "io", "BytesOutput"];
  nn.__super__ = Ls;
  nn.prototype = x(Ls.prototype, {
    b: null,
    writeByte: function (a) {
      this.b.b.push(a);
    },
    getBytes: function () {
      return this.b.getBytes();
    },
    __class__: nn,
  });
  var xk = function () {};
  p["haxe.io.Eof"] = xk;
  xk.__name__ = ["haxe", "io", "Eof"];
  xk.prototype = {
    toString: function () {
      return "Eof";
    },
    __class__: xk,
  };
  var pe = (p["haxe.io.Error"] = {
    __ename__: ["haxe", "io", "Error"],
    __constructs__: ["Blocked", "Overflow", "OutsideBounds", "Custom"],
  });
  pe.Blocked = ["Blocked", 0];
  pe.Blocked.toString = M;
  pe.Blocked.__enum__ = pe;
  pe.Overflow = ["Overflow", 1];
  pe.Overflow.toString = M;
  pe.Overflow.__enum__ = pe;
  pe.OutsideBounds = ["OutsideBounds", 2];
  pe.OutsideBounds.toString = M;
  pe.OutsideBounds.__enum__ = pe;
  pe.Custom = function (a) {
    a = ["Custom", 3, a];
    a.__enum__ = pe;
    a.toString = M;
    return a;
  };
  var xe = function () {};
  p["haxe.io.FPHelper"] = xe;
  xe.__name__ = ["haxe", "io", "FPHelper"];
  xe.i32ToFloat = function (a) {
    var b = (a >>> 23) & 255,
      c = a & 8388607;
    return 0 == c && 0 == b
      ? 0
      : (1 - ((a >>> 31) << 1)) *
          (1 + Math.pow(2, -23) * c) *
          Math.pow(2, b - 127);
  };
  xe.floatToI32 = function (a) {
    if (0 == a) return 0;
    var b = 0 > a ? -a : a,
      c = Math.floor(Math.log(b) / 0.6931471805599453);
    -127 > c ? (c = -127) : 128 < c && (c = 128);
    b = Math.round(8388608 * (b / Math.pow(2, c) - 1));
    8388608 == b && 128 > c && ((b = 0), ++c);
    return (0 > a ? -2147483648 : 0) | ((c + 127) << 23) | b;
  };
  xe.i64ToDouble = function (a, b) {
    var c = ((b >> 20) & 2047) - 1023;
    a = 4294967296 * (b & 1048575) + 2147483648 * (a >>> 31) + (a & 2147483647);
    return 0 == a && -1023 == c
      ? 0
      : (1 - ((b >>> 31) << 1)) * (1 + Math.pow(2, -52) * a) * Math.pow(2, c);
  };
  xe.doubleToI64 = function (a) {
    var b = xe.i64tmp;
    if (0 == a) (b.low = 0), (b.high = 0);
    else if (isFinite(a)) {
      var c = 0 > a ? -a : a,
        d = Math.floor(Math.log(c) / 0.6931471805599453);
      c = Math.round(4503599627370496 * (c / Math.pow(2, d) - 1));
      b.low = c | 0;
      b.high =
        (0 > a ? -2147483648 : 0) | ((d + 1023) << 20) | (c / 4294967296) | 0;
    } else
      0 < a
        ? ((b.low = 0), (b.high = 2146435072))
        : ((b.low = 0), (b.high = -1048576));
    return b;
  };
  var mj = function (a) {
    switch (a) {
      case ".":
      case "..":
        this.dir = a;
        this.file = "";
        return;
    }
    var b = a.lastIndexOf("/"),
      c = a.lastIndexOf("\\");
    b < c
      ? ((this.dir = Q.substr(a, 0, c)),
        (a = Q.substr(a, c + 1, null)),
        (this.backslash = !0))
      : c < b
      ? ((this.dir = Q.substr(a, 0, b)), (a = Q.substr(a, b + 1, null)))
      : (this.dir = null);
    b = a.lastIndexOf(".");
    -1 != b
      ? ((this.ext = Q.substr(a, b + 1, null)), (this.file = Q.substr(a, 0, b)))
      : ((this.ext = null), (this.file = a));
  };
  p["haxe.io.Path"] = mj;
  mj.__name__ = ["haxe", "io", "Path"];
  mj.directory = function (a) {
    a = new mj(a);
    return null == a.dir ? "" : a.dir;
  };
  mj.prototype = {
    dir: null,
    file: null,
    ext: null,
    backslash: null,
    __class__: mj,
  };
  var on = function (a) {
    lj.call(this, Ra.ofString(a));
  };
  p["haxe.io.StringInput"] = on;
  on.__name__ = ["haxe", "io", "StringInput"];
  on.__super__ = lj;
  on.prototype = x(lj.prototype, { __class__: on });
  var Cp = function (a) {
    this.__x = a;
  };
  p["haxe.xml._Fast.NodeAccess"] = Cp;
  Cp.__name__ = ["haxe", "xml", "_Fast", "NodeAccess"];
  Cp.prototype = {
    __x: null,
    resolve: function (a) {
      var b = this.__x.elementsNamed(a).next();
      if (null == b) {
        if (this.__x.nodeType == ta.Document) b = "Document";
        else {
          b = this.__x;
          if (b.nodeType != ta.Element)
            throw new v(
              "Bad node type, expected Element but found " + b.nodeType
            );
          b = b.nodeName;
        }
        throw new v(b + " is missing element " + a);
      }
      return new im(b);
    },
    __class__: Cp,
  };
  var Dp = function (a) {
    this.__x = a;
  };
  p["haxe.xml._Fast.AttribAccess"] = Dp;
  Dp.__name__ = ["haxe", "xml", "_Fast", "AttribAccess"];
  Dp.prototype = { __x: null, __class__: Dp };
  var Ep = function (a) {
    this.__x = a;
  };
  p["haxe.xml._Fast.HasAttribAccess"] = Ep;
  Ep.__name__ = ["haxe", "xml", "_Fast", "HasAttribAccess"];
  Ep.prototype = { __x: null, __class__: Ep };
  var Fp = function (a) {
    this.__x = a;
  };
  p["haxe.xml._Fast.HasNodeAccess"] = Fp;
  Fp.__name__ = ["haxe", "xml", "_Fast", "HasNodeAccess"];
  Fp.prototype = {
    __x: null,
    resolve: function (a) {
      return this.__x.elementsNamed(a).hasNext();
    },
    __class__: Fp,
  };
  var Gp = function (a) {
    this.__x = a;
  };
  p["haxe.xml._Fast.NodeListAccess"] = Gp;
  Gp.__name__ = ["haxe", "xml", "_Fast", "NodeListAccess"];
  Gp.prototype = { __x: null, __class__: Gp };
  var im = function (a) {
    if (a.nodeType != ta.Document && a.nodeType != ta.Element)
      throw new v("Invalid nodeType " + a.nodeType);
    this.x = a;
    this.node = new Cp(a);
    this.nodes = new Gp(a);
    this.att = new Dp(a);
    this.has = new Ep(a);
    this.hasNode = new Fp(a);
  };
  p["haxe.xml.Fast"] = im;
  im.__name__ = ["haxe", "xml", "Fast"];
  im.prototype = {
    x: null,
    node: null,
    nodes: null,
    att: null,
    has: null,
    hasNode: null,
    get_name: function () {
      if (this.x.nodeType == ta.Document) return "Document";
      var a = this.x;
      if (a.nodeType != ta.Element)
        throw new v("Bad node type, expected Element but found " + a.nodeType);
      return a.nodeName;
    },
    get_innerData: function () {
      var a = this.x;
      if (a.nodeType != ta.Document && a.nodeType != ta.Element)
        throw new v(
          "Bad node type, expected Element or Document but found " + a.nodeType
        );
      a = Q.iter(a.children);
      if (!a.hasNext()) throw new v(this.get_name() + " does not have data");
      var b = a.next();
      if (a.hasNext()) {
        var c = a.next();
        if (b.nodeType == ta.PCData && c.nodeType == ta.CData) {
          if (b.nodeType == ta.Document || b.nodeType == ta.Element)
            throw new v("Bad node type, unexpected " + b.nodeType);
          b = "" == ba.trim(b.nodeValue);
        } else b = !1;
        if (b) {
          if (!a.hasNext()) {
            if (c.nodeType == ta.Document || c.nodeType == ta.Element)
              throw new v("Bad node type, unexpected " + c.nodeType);
            return c.nodeValue;
          }
          b = a.next();
          if (b.nodeType == ta.PCData) {
            if (b.nodeType == ta.Document || b.nodeType == ta.Element)
              throw new v("Bad node type, unexpected " + b.nodeType);
            b = "" == ba.trim(b.nodeValue);
          } else b = !1;
          if (b && !a.hasNext()) {
            if (c.nodeType == ta.Document || c.nodeType == ta.Element)
              throw new v("Bad node type, unexpected " + c.nodeType);
            return c.nodeValue;
          }
        }
        throw new v(this.get_name() + " does not only have data");
      }
      if (b.nodeType != ta.PCData && b.nodeType != ta.CData)
        throw new v(this.get_name() + " does not have data");
      if (b.nodeType == ta.Document || b.nodeType == ta.Element)
        throw new v("Bad node type, unexpected " + b.nodeType);
      return b.nodeValue;
    },
    __class__: im,
    __properties__: { get_innerData: "get_innerData", get_name: "get_name" },
  };
  var ye = function (a, b, c) {
    this.xml = b;
    this.message = a;
    this.position = c;
    this.lineNumber = 1;
    for (a = this.positionAtLine = 0; a < c; ) {
      var d = a++;
      d = b.charCodeAt(d);
      10 == d
        ? (this.lineNumber++, (this.positionAtLine = 0))
        : 13 != d && this.positionAtLine++;
    }
  };
  p["haxe.xml.XmlParserException"] = ye;
  ye.__name__ = ["haxe", "xml", "XmlParserException"];
  ye.prototype = {
    message: null,
    lineNumber: null,
    positionAtLine: null,
    position: null,
    xml: null,
    toString: function () {
      return (
        qa.getClassName(u.getClass(this)) +
        ": " +
        this.message +
        " at line " +
        this.lineNumber +
        " char " +
        this.positionAtLine
      );
    },
    __class__: ye,
  };
  var Ch = function () {};
  p["haxe.xml.Parser"] = Ch;
  Ch.__name__ = ["haxe", "xml", "Parser"];
  Ch.parse = function (a, b) {
    null == b && (b = !1);
    var c = ta.createDocument();
    Ch.doParse(a, b, 0, c);
    return c;
  };
  Ch.doParse = function (a, b, c, d) {
    null == c && (c = 0);
    for (
      var e = null,
        f = 1,
        g = 1,
        h = null,
        n = 0,
        k = 0,
        m = 0,
        l = a.charCodeAt(c),
        p = new Cf(),
        r = 1,
        q = -1;
      l == l;

    ) {
      switch (f) {
        case 0:
          switch (l) {
            case 9:
            case 10:
            case 13:
            case 32:
              break;
            default:
              f = g;
              continue;
          }
          break;
        case 1:
          if (60 == l) (f = 0), (g = 2);
          else {
            n = c;
            f = 13;
            continue;
          }
          break;
        case 2:
          switch (l) {
            case 33:
              if (91 == a.charCodeAt(c + 1)) {
                c += 2;
                if ("CDATA[" != Q.substr(a, c, 6).toUpperCase())
                  throw new v(new ye("Expected <![CDATA[", a, c));
                c += 5;
                f = 17;
              } else if (
                68 == a.charCodeAt(c + 1) ||
                100 == a.charCodeAt(c + 1)
              ) {
                if ("OCTYPE" != Q.substr(a, c + 2, 6).toUpperCase())
                  throw new v(new ye("Expected <!DOCTYPE", a, c));
                c += 8;
                f = 16;
              } else {
                if (45 != a.charCodeAt(c + 1) || 45 != a.charCodeAt(c + 2))
                  throw new v(new ye("Expected \x3c!--", a, c));
                c += 2;
                f = 15;
              }
              n = c + 1;
              break;
            case 47:
              if (null == d) throw new v(new ye("Expected node name", a, c));
              n = c + 1;
              f = 0;
              g = 10;
              break;
            case 63:
              f = 14;
              n = c;
              break;
            default:
              f = 3;
              n = c;
              continue;
          }
          break;
        case 3:
          if (
            !(
              (97 <= l && 122 >= l) ||
              (65 <= l && 90 >= l) ||
              (48 <= l && 57 >= l) ||
              58 == l ||
              46 == l ||
              95 == l ||
              45 == l
            )
          ) {
            if (c == n) throw new v(new ye("Expected node name", a, c));
            e = ta.createElement(Q.substr(a, n, c - n));
            d.addChild(e);
            ++k;
            f = 0;
            g = 4;
            continue;
          }
          break;
        case 4:
          switch (l) {
            case 47:
              f = 11;
              break;
            case 62:
              f = 9;
              break;
            default:
              f = 5;
              n = c;
              continue;
          }
          break;
        case 5:
          if (
            !(
              (97 <= l && 122 >= l) ||
              (65 <= l && 90 >= l) ||
              (48 <= l && 57 >= l) ||
              58 == l ||
              46 == l ||
              95 == l ||
              45 == l
            )
          ) {
            if (n == c) throw new v(new ye("Expected attribute name", a, c));
            h = Q.substr(a, n, c - n);
            if (e.exists(h))
              throw new v(new ye("Duplicate attribute [" + h + "]", a, c));
            f = 0;
            g = 6;
            continue;
          }
          break;
        case 6:
          if (61 == l) (f = 0), (g = 7);
          else throw new v(new ye("Expected =", a, c));
          break;
        case 7:
          switch (l) {
            case 34:
            case 39:
              p = new Cf();
              f = 8;
              n = c + 1;
              q = l;
              break;
            default:
              throw new v(new ye('Expected "', a, c));
          }
          break;
        case 8:
          switch (l) {
            case 38:
              r = c - n;
              p.b += null == r ? Q.substr(a, n, null) : Q.substr(a, n, r);
              f = 18;
              r = 8;
              n = c + 1;
              break;
            case 60:
            case 62:
              if (b)
                throw new v(
                  new ye(
                    "Invalid unescaped " +
                      String.fromCharCode(l) +
                      " in attribute value",
                    a,
                    c
                  )
                );
              l == q &&
                ((g = c - n),
                (p.b += null == g ? Q.substr(a, n, null) : Q.substr(a, n, g)),
                (g = p.b),
                (p = new Cf()),
                e.set(h, g),
                (f = 0),
                (g = 4));
              break;
            default:
              l == q &&
                ((g = c - n),
                (p.b += null == g ? Q.substr(a, n, null) : Q.substr(a, n, g)),
                (g = p.b),
                (p = new Cf()),
                e.set(h, g),
                (f = 0),
                (g = 4));
          }
          break;
        case 9:
          n = c = Ch.doParse(a, b, c, e);
          f = 1;
          break;
        case 10:
          if (
            !(
              (97 <= l && 122 >= l) ||
              (65 <= l && 90 >= l) ||
              (48 <= l && 57 >= l) ||
              58 == l ||
              46 == l ||
              95 == l ||
              45 == l
            )
          ) {
            if (n == c) throw new v(new ye("Expected node name", a, c));
            g = Q.substr(a, n, c - n);
            if (d.nodeType != ta.Element)
              throw new v(
                "Bad node type, expected Element but found " + d.nodeType
              );
            if (g != d.nodeName) {
              if (d.nodeType != ta.Element)
                throw new v(
                  "Bad node type, expected Element but found " + d.nodeType
                );
              throw new v(new ye("Expected </" + d.nodeName + ">", a, c));
            }
            f = 0;
            g = 12;
            continue;
          }
          break;
        case 11:
          if (62 == l) f = 1;
          else throw new v(new ye("Expected >", a, c));
          break;
        case 12:
          if (62 == l) return 0 == k && d.addChild(ta.createPCData("")), c;
          throw new v(new ye("Expected >", a, c));
        case 13:
          60 == l
            ? ((g = c - n),
              (p.b += null == g ? Q.substr(a, n, null) : Q.substr(a, n, g)),
              (g = ta.createPCData(p.b)),
              (p = new Cf()),
              d.addChild(g),
              ++k,
              (f = 0),
              (g = 2))
            : 38 == l &&
              ((r = c - n),
              (p.b += null == r ? Q.substr(a, n, null) : Q.substr(a, n, r)),
              (f = 18),
              (r = 13),
              (n = c + 1));
          break;
        case 14:
          63 == l &&
            62 == a.charCodeAt(c + 1) &&
            (++c,
            (l = Q.substr(a, n + 1, c - n - 2)),
            d.addChild(ta.createProcessingInstruction(l)),
            ++k,
            (f = 1));
          break;
        case 15:
          45 == l &&
            45 == a.charCodeAt(c + 1) &&
            62 == a.charCodeAt(c + 2) &&
            (d.addChild(ta.createComment(Q.substr(a, n, c - n))),
            ++k,
            (c += 2),
            (f = 1));
          break;
        case 16:
          91 == l
            ? ++m
            : 93 == l
            ? --m
            : 62 == l &&
              0 == m &&
              (d.addChild(ta.createDocType(Q.substr(a, n, c - n))),
              ++k,
              (f = 1));
          break;
        case 17:
          93 == l &&
            93 == a.charCodeAt(c + 1) &&
            62 == a.charCodeAt(c + 2) &&
            ((l = ta.createCData(Q.substr(a, n, c - n))),
            d.addChild(l),
            ++k,
            (c += 2),
            (f = 1));
          break;
        case 18:
          if (59 == l) {
            n = Q.substr(a, n, c - n);
            if (35 == n.charCodeAt(0))
              (n =
                120 == n.charCodeAt(1)
                  ? P.parseInt("0" + Q.substr(n, 1, n.length - 1))
                  : P.parseInt(Q.substr(n, 1, n.length - 1))),
                (p.b += String.fromCharCode(n));
            else if (
              ((l = Ch.escapes),
              null != t[n] ? l.existsReserved(n) : l.h.hasOwnProperty(n))
            )
              (l = Ch.escapes),
                (n = null != t[n] ? l.getReserved(n) : l.h[n]),
                (p.b += P.string(n));
            else {
              if (b) throw new v(new ye("Undefined entity: " + n, a, c));
              p.b += P.string("&" + n + ";");
            }
            n = c + 1;
            f = r;
          } else if (
            !(
              (97 <= l && 122 >= l) ||
              (65 <= l && 90 >= l) ||
              (48 <= l && 57 >= l) ||
              58 == l ||
              46 == l ||
              95 == l ||
              45 == l
            ) &&
            35 != l
          ) {
            if (b)
              throw new v(
                new ye(
                  "Invalid character in entity: " + String.fromCharCode(l),
                  a,
                  c
                )
              );
            p.b += "&";
            l = c - n;
            p.b += null == l ? Q.substr(a, n, null) : Q.substr(a, n, l);
            n = c--;
            f = r;
          }
      }
      l = a.charCodeAt(++c);
    }
    1 == f && ((n = c), (f = 13));
    if (13 == f) {
      if (c != n || 0 == k)
        (b = c - n),
          (p.b += null == b ? Q.substr(a, n, null) : Q.substr(a, n, b)),
          d.addChild(ta.createPCData(p.b));
      return c;
    }
    if (!b && 18 == f && 13 == r)
      return (
        (p.b += "&"),
        (b = c - n),
        (p.b += null == b ? Q.substr(a, n, null) : Q.substr(a, n, b)),
        d.addChild(ta.createPCData(p.b)),
        c
      );
    throw new v(new ye("Unexpected end", a, c));
  };
  var Hf = (p["hscript.Const"] = {
    __ename__: ["hscript", "Const"],
    __constructs__: ["CInt", "CFloat", "CString"],
  });
  Hf.CInt = function (a) {
    a = ["CInt", 0, a];
    a.__enum__ = Hf;
    a.toString = M;
    return a;
  };
  Hf.CFloat = function (a) {
    a = ["CFloat", 1, a];
    a.__enum__ = Hf;
    a.toString = M;
    return a;
  };
  Hf.CString = function (a) {
    a = ["CString", 2, a];
    a.__enum__ = Hf;
    a.toString = M;
    return a;
  };
  var ja = (p["hscript.Expr"] = {
    __ename__: ["hscript", "Expr"],
    __constructs__:
      "EConst EIdent EVar EParent EBlock EField EBinop EUnop ECall EIf EWhile EFor EBreak EContinue EFunction EReturn EArray EArrayDecl ENew EThrow ETry EObject ETernary ESwitch EDoWhile EMeta".split(
        " "
      ),
  });
  ja.EConst = function (a) {
    a = ["EConst", 0, a];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EIdent = function (a) {
    a = ["EIdent", 1, a];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EVar = function (a, b, c) {
    a = ["EVar", 2, a, b, c];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EParent = function (a) {
    a = ["EParent", 3, a];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EBlock = function (a) {
    a = ["EBlock", 4, a];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EField = function (a, b) {
    a = ["EField", 5, a, b];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EBinop = function (a, b, c) {
    a = ["EBinop", 6, a, b, c];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EUnop = function (a, b, c) {
    a = ["EUnop", 7, a, b, c];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.ECall = function (a, b) {
    a = ["ECall", 8, a, b];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EIf = function (a, b, c) {
    a = ["EIf", 9, a, b, c];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EWhile = function (a, b) {
    a = ["EWhile", 10, a, b];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EFor = function (a, b, c) {
    a = ["EFor", 11, a, b, c];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EBreak = ["EBreak", 12];
  ja.EBreak.toString = M;
  ja.EBreak.__enum__ = ja;
  ja.EContinue = ["EContinue", 13];
  ja.EContinue.toString = M;
  ja.EContinue.__enum__ = ja;
  ja.EFunction = function (a, b, c, d) {
    a = ["EFunction", 14, a, b, c, d];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EReturn = function (a) {
    a = ["EReturn", 15, a];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EArray = function (a, b) {
    a = ["EArray", 16, a, b];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EArrayDecl = function (a) {
    a = ["EArrayDecl", 17, a];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.ENew = function (a, b) {
    a = ["ENew", 18, a, b];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EThrow = function (a) {
    a = ["EThrow", 19, a];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.ETry = function (a, b, c, d) {
    a = ["ETry", 20, a, b, c, d];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EObject = function (a) {
    a = ["EObject", 21, a];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.ETernary = function (a, b, c) {
    a = ["ETernary", 22, a, b, c];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.ESwitch = function (a, b, c) {
    a = ["ESwitch", 23, a, b, c];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EDoWhile = function (a, b) {
    a = ["EDoWhile", 24, a, b];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  ja.EMeta = function (a, b, c) {
    a = ["EMeta", 25, a, b, c];
    a.__enum__ = ja;
    a.toString = M;
    return a;
  };
  var Xg = (p["hscript.CType"] = {
    __ename__: ["hscript", "CType"],
    __constructs__: ["CTPath", "CTFun", "CTAnon", "CTParent"],
  });
  Xg.CTPath = function (a, b) {
    a = ["CTPath", 0, a, b];
    a.__enum__ = Xg;
    a.toString = M;
    return a;
  };
  Xg.CTFun = function (a, b) {
    a = ["CTFun", 1, a, b];
    a.__enum__ = Xg;
    a.toString = M;
    return a;
  };
  Xg.CTAnon = function (a) {
    a = ["CTAnon", 2, a];
    a.__enum__ = Xg;
    a.toString = M;
    return a;
  };
  Xg.CTParent = function (a) {
    a = ["CTParent", 3, a];
    a.__enum__ = Xg;
    a.toString = M;
    return a;
  };
  var Dc = (p["hscript.Error"] = {
    __ename__: ["hscript", "Error"],
    __constructs__:
      "EInvalidChar EUnexpected EUnterminatedString EUnterminatedComment EUnknownVariable EInvalidIterator EInvalidOp EInvalidAccess".split(
        " "
      ),
  });
  Dc.EInvalidChar = function (a) {
    a = ["EInvalidChar", 0, a];
    a.__enum__ = Dc;
    a.toString = M;
    return a;
  };
  Dc.EUnexpected = function (a) {
    a = ["EUnexpected", 1, a];
    a.__enum__ = Dc;
    a.toString = M;
    return a;
  };
  Dc.EUnterminatedString = ["EUnterminatedString", 2];
  Dc.EUnterminatedString.toString = M;
  Dc.EUnterminatedString.__enum__ = Dc;
  Dc.EUnterminatedComment = ["EUnterminatedComment", 3];
  Dc.EUnterminatedComment.toString = M;
  Dc.EUnterminatedComment.__enum__ = Dc;
  Dc.EUnknownVariable = function (a) {
    a = ["EUnknownVariable", 4, a];
    a.__enum__ = Dc;
    a.toString = M;
    return a;
  };
  Dc.EInvalidIterator = function (a) {
    a = ["EInvalidIterator", 5, a];
    a.__enum__ = Dc;
    a.toString = M;
    return a;
  };
  Dc.EInvalidOp = function (a) {
    a = ["EInvalidOp", 6, a];
    a.__enum__ = Dc;
    a.toString = M;
    return a;
  };
  Dc.EInvalidAccess = function (a) {
    a = ["EInvalidAccess", 7, a];
    a.__enum__ = Dc;
    a.toString = M;
    return a;
  };
  var bf = (p["hscript._Interp.Stop"] = {
    __ename__: ["hscript", "_Interp", "Stop"],
    __constructs__: ["SBreak", "SContinue", "SReturn"],
  });
  bf.SBreak = ["SBreak", 0];
  bf.SBreak.toString = M;
  bf.SBreak.__enum__ = bf;
  bf.SContinue = ["SContinue", 1];
  bf.SContinue.toString = M;
  bf.SContinue.__enum__ = bf;
  bf.SReturn = function (a) {
    a = ["SReturn", 2, a];
    a.__enum__ = bf;
    a.toString = M;
    return a;
  };
  var Hp = function () {
    var a = this;
    this.variables = new la();
    this.locals = new la();
    this.declared = [];
    var b = this.variables;
    null != t["null"] ? b.setReserved("null", null) : (b.h["null"] = null);
    b = this.variables;
    null != t["true"] ? b.setReserved("true", !0) : (b.h["true"] = !0);
    b = this.variables;
    null != t["false"] ? b.setReserved("false", !1) : (b.h["false"] = !1);
    b = this.variables;
    null != t.trace
      ? b.setReserved("trace", function (b) {
          Bh.trace(P.string(b), a.posInfos());
        })
      : (b.h.trace = function (b) {
          Bh.trace(P.string(b), a.posInfos());
        });
    this.initOps();
  };
  p["hscript.Interp"] = Hp;
  Hp.__name__ = ["hscript", "Interp"];
  Hp.prototype = {
    variables: null,
    locals: null,
    binops: null,
    depth: null,
    inTry: null,
    declared: null,
    posInfos: function () {
      return { fileName: "hscript", lineNumber: 0 };
    },
    initOps: function () {
      var a = this,
        b = (this.binops = new la());
      null != t["+"]
        ? b.setReserved("+", function (b, c) {
            return a.expr(b) + a.expr(c);
          })
        : (b.h["+"] = function (b, c) {
            return a.expr(b) + a.expr(c);
          });
      b = this.binops;
      null != t["-"]
        ? b.setReserved("-", function (b, c) {
            return a.expr(b) - a.expr(c);
          })
        : (b.h["-"] = function (b, c) {
            return a.expr(b) - a.expr(c);
          });
      b = this.binops;
      null != t["*"]
        ? b.setReserved("*", function (b, c) {
            return a.expr(b) * a.expr(c);
          })
        : (b.h["*"] = function (b, c) {
            return a.expr(b) * a.expr(c);
          });
      b = this.binops;
      null != t["/"]
        ? b.setReserved("/", function (b, c) {
            return a.expr(b) / a.expr(c);
          })
        : (b.h["/"] = function (b, c) {
            return a.expr(b) / a.expr(c);
          });
      b = this.binops;
      null != t["%"]
        ? b.setReserved("%", function (b, c) {
            return a.expr(b) % a.expr(c);
          })
        : (b.h["%"] = function (b, c) {
            return a.expr(b) % a.expr(c);
          });
      b = this.binops;
      null != t["&"]
        ? b.setReserved("&", function (b, c) {
            return a.expr(b) & a.expr(c);
          })
        : (b.h["&"] = function (b, c) {
            return a.expr(b) & a.expr(c);
          });
      b = this.binops;
      null != t["|"]
        ? b.setReserved("|", function (b, c) {
            return a.expr(b) | a.expr(c);
          })
        : (b.h["|"] = function (b, c) {
            return a.expr(b) | a.expr(c);
          });
      b = this.binops;
      null != t["^"]
        ? b.setReserved("^", function (b, c) {
            return a.expr(b) ^ a.expr(c);
          })
        : (b.h["^"] = function (b, c) {
            return a.expr(b) ^ a.expr(c);
          });
      b = this.binops;
      null != t["<<"]
        ? b.setReserved("<<", function (b, c) {
            return a.expr(b) << a.expr(c);
          })
        : (b.h["<<"] = function (b, c) {
            return a.expr(b) << a.expr(c);
          });
      b = this.binops;
      null != t[">>"]
        ? b.setReserved(">>", function (b, c) {
            return a.expr(b) >> a.expr(c);
          })
        : (b.h[">>"] = function (b, c) {
            return a.expr(b) >> a.expr(c);
          });
      b = this.binops;
      null != t[">>>"]
        ? b.setReserved(">>>", function (b, c) {
            return a.expr(b) >>> a.expr(c);
          })
        : (b.h[">>>"] = function (b, c) {
            return a.expr(b) >>> a.expr(c);
          });
      b = this.binops;
      null != t["=="]
        ? b.setReserved("==", function (b, c) {
            return a.expr(b) == a.expr(c);
          })
        : (b.h["=="] = function (b, c) {
            return a.expr(b) == a.expr(c);
          });
      b = this.binops;
      null != t["!="]
        ? b.setReserved("!=", function (b, c) {
            return a.expr(b) != a.expr(c);
          })
        : (b.h["!="] = function (b, c) {
            return a.expr(b) != a.expr(c);
          });
      b = this.binops;
      null != t[">="]
        ? b.setReserved(">=", function (b, c) {
            return a.expr(b) >= a.expr(c);
          })
        : (b.h[">="] = function (b, c) {
            return a.expr(b) >= a.expr(c);
          });
      b = this.binops;
      null != t["<="]
        ? b.setReserved("<=", function (b, c) {
            return a.expr(b) <= a.expr(c);
          })
        : (b.h["<="] = function (b, c) {
            return a.expr(b) <= a.expr(c);
          });
      b = this.binops;
      null != t[">"]
        ? b.setReserved(">", function (b, c) {
            return a.expr(b) > a.expr(c);
          })
        : (b.h[">"] = function (b, c) {
            return a.expr(b) > a.expr(c);
          });
      b = this.binops;
      null != t["<"]
        ? b.setReserved("<", function (b, c) {
            return a.expr(b) < a.expr(c);
          })
        : (b.h["<"] = function (b, c) {
            return a.expr(b) < a.expr(c);
          });
      b = this.binops;
      null != t["||"]
        ? b.setReserved("||", function (b, c) {
            return 1 != a.expr(b) ? 1 == a.expr(c) : !0;
          })
        : (b.h["||"] = function (b, c) {
            return 1 != a.expr(b) ? 1 == a.expr(c) : !0;
          });
      b = this.binops;
      null != t["&&"]
        ? b.setReserved("&&", function (b, c) {
            return 1 == a.expr(b) ? 1 == a.expr(c) : !1;
          })
        : (b.h["&&"] = function (b, c) {
            return 1 == a.expr(b) ? 1 == a.expr(c) : !1;
          });
      b = this.binops;
      var c = B(this, this.assign);
      null != t["="] ? b.setReserved("=", c) : (b.h["="] = c);
      b = this.binops;
      null != t["..."]
        ? b.setReserved("...", function (b, c) {
            return new ll(a.expr(b), a.expr(c));
          })
        : (b.h["..."] = function (b, c) {
            return new ll(a.expr(b), a.expr(c));
          });
      this.assignOp("+=", function (a, b) {
        return a + b;
      });
      this.assignOp("-=", function (a, b) {
        return a - b;
      });
      this.assignOp("*=", function (a, b) {
        return a * b;
      });
      this.assignOp("/=", function (a, b) {
        return a / b;
      });
      this.assignOp("%=", function (a, b) {
        return a % b;
      });
      this.assignOp("&=", function (a, b) {
        return a & b;
      });
      this.assignOp("|=", function (a, b) {
        return a | b;
      });
      this.assignOp("^=", function (a, b) {
        return a ^ b;
      });
      this.assignOp("<<=", function (a, b) {
        return a << b;
      });
      this.assignOp(">>=", function (a, b) {
        return a >> b;
      });
      this.assignOp(">>>=", function (a, b) {
        return a >>> b;
      });
    },
    assign: function (a, b) {
      b = this.expr(b);
      switch (a[1]) {
        case 1:
          a = a[2];
          var c = this.locals.get(a);
          null == c ? this.variables.set(a, b) : (c.r = b);
          break;
        case 5:
          c = a[3];
          b = this.set(this.expr(a[2]), c, b);
          break;
        case 16:
          c = a[3];
          a = this.expr(a[2]);
          c = this.expr(c);
          u.__instanceof(a, Fd) ? u.__cast(a, Fd).set(c, b) : (a[c] = b);
          break;
        default:
          throw new v(Dc.EInvalidOp("="));
      }
      return b;
    },
    assignOp: function (a, b) {
      var c = this,
        d = this.binops;
      null != t[a]
        ? d.setReserved(a, function (d, f) {
            return c.evalAssignOp(a, b, d, f);
          })
        : (d.h[a] = function (d, f) {
            return c.evalAssignOp(a, b, d, f);
          });
    },
    evalAssignOp: function (a, b, c, d) {
      switch (c[1]) {
        case 1:
          a = c[2];
          var e = this.locals.get(a);
          b = b(this.expr(c), this.expr(d));
          null == e ? this.variables.set(a, b) : (e.r = b);
          break;
        case 5:
          a = c[3];
          c = this.expr(c[2]);
          b = b(this.get(c, a), this.expr(d));
          b = this.set(c, a, b);
          break;
        case 16:
          a = c[3];
          c = this.expr(c[2]);
          a = this.expr(a);
          u.__instanceof(c, Fd)
            ? ((b = b(u.__cast(c, Fd).get(a), this.expr(d))),
              u.__cast(c, Fd).set(a, b))
            : ((b = b(c[a], this.expr(d))), (c[a] = b));
          break;
        default:
          throw new v(Dc.EInvalidOp(a));
      }
      return b;
    },
    increment: function (a, b, c) {
      switch (a[1]) {
        case 1:
          var d = a[2];
          a = this.locals.get(d);
          var e = null == a ? this.variables.get(d) : a.r;
          b
            ? ((e += c), null == a ? this.variables.set(d, e) : (a.r = e))
            : null == a
            ? this.variables.set(d, e + c)
            : (a.r = e + c);
          return e;
        case 5:
          return (
            (d = a[3]),
            (a = this.expr(a[2])),
            (e = this.get(a, d)),
            b ? ((e += c), this.set(a, d, e)) : this.set(a, d, e + c),
            e
          );
        case 16:
          e = a[3];
          d = this.expr(a[2]);
          a = this.expr(e);
          if (u.__instanceof(d, Fd))
            return (
              (e = u.__cast(d, Fd).get(a)),
              b
                ? ((e += c), u.__cast(d, Fd).set(a, e))
                : u.__cast(d, Fd).set(a, e + c),
              e
            );
          e = d[a];
          b ? ((e += c), (d[a] = e)) : (d[a] = e + c);
          return e;
        default:
          throw new v(Dc.EInvalidOp(0 < c ? "++" : "--"));
      }
    },
    execute: function (a) {
      this.depth = 0;
      this.locals = new la();
      this.declared = [];
      return this.exprReturn(a);
    },
    exprReturn: function (a) {
      try {
        return this.expr(a);
      } catch (b) {
        if (
          ((X.lastException = b),
          b instanceof v && (b = b.val),
          u.__instanceof(b, bf))
        )
          switch (b[1]) {
            case 0:
              throw new v("Invalid break");
            case 1:
              throw new v("Invalid continue");
            case 2:
              return b[2];
          }
        else throw b;
      }
    },
    duplicate: function (a) {
      for (var b = new la(), c = a.keys(); c.hasNext(); ) {
        var d = c.next(),
          e = null != t[d] ? a.getReserved(d) : a.h[d];
        null != t[d] ? b.setReserved(d, e) : (b.h[d] = e);
      }
      return b;
    },
    restore: function (a) {
      for (; this.declared.length > a; ) {
        var b = this.declared.pop(),
          c = b.n;
        b = b.old;
        var d = this.locals;
        null != t[c] ? d.setReserved(c, b) : (d.h[c] = b);
      }
    },
    edef: function (a) {
      return a;
    },
    error: function (a) {
      throw new v(a);
    },
    resolve: function (a) {
      var b = this.locals;
      b = null != t[a] ? b.getReserved(a) : b.h[a];
      if (null != b) return b.r;
      b = this.variables;
      b = null != t[a] ? b.getReserved(a) : b.h[a];
      if (null == b) {
        var c = this.variables;
        c = !(null != t[a] ? c.existsReserved(a) : c.h.hasOwnProperty(a));
      } else c = !1;
      if (c) throw new v(Dc.EUnknownVariable(a));
      return b;
    },
    expr: function (a) {
      var b = this;
      switch (a[1]) {
        case 0:
          a = a[2];
          switch (a[1]) {
            case 0:
              return a[2];
            case 1:
              return a[2];
            case 2:
              return a[2];
          }
          break;
        case 1:
          return this.resolve(a[2]);
        case 2:
          var c = a[4];
          a = a[2];
          this.declared.push({ n: a, old: this.locals.get(a) });
          this.locals.set(a, { r: null == c ? null : this.expr(c) });
          return null;
        case 3:
          return this.expr(a[2]);
        case 4:
          a = a[2];
          c = this.declared.length;
          for (var d = null, e = 0; e < a.length; )
            (d = a[e]), ++e, (d = this.expr(d));
          this.restore(c);
          return d;
        case 5:
          return (c = a[3]), this.get(this.expr(a[2]), c);
        case 6:
          c = a[4];
          e = a[3];
          a = a[2];
          d = this.binops.get(a);
          if (null == d) throw new v(Dc.EInvalidOp(a));
          return d(e, c);
        case 7:
          switch (((c = a[4]), (e = a[3]), (a = a[2]), a)) {
            case "!":
              return 1 != this.expr(c);
            case "++":
              return this.increment(c, e, 1);
            case "-":
              return -this.expr(c);
            case "--":
              return this.increment(c, e, -1);
            case "~":
              return ~this.expr(c);
            default:
              throw new v(Dc.EInvalidOp(a));
          }
        case 8:
          c = a[3];
          e = a[2];
          a = [];
          for (d = 0; d < c.length; ) {
            var f = c[d];
            ++d;
            a.push(this.expr(f));
          }
          if (5 == e[1]) {
            c = e[3];
            e = this.expr(e[2]);
            if (null == e) throw new v(Dc.EInvalidAccess(c));
            return this.fcall(e, c, a);
          }
          return this.call(null, this.expr(e), a);
        case 9:
          return (
            (c = a[4]),
            (e = a[3]),
            1 == this.expr(a[2])
              ? this.expr(e)
              : null == c
              ? null
              : this.expr(c)
          );
        case 10:
          return this.whileLoop(a[2], a[3]), null;
        case 11:
          return this.forLoop(a[2], a[3], a[4]), null;
        case 12:
          throw new v(bf.SBreak);
        case 13:
          throw new v(bf.SContinue);
        case 14:
          var g = a[4],
            h = a[3],
            n = a[2],
            k = this.duplicate(this.locals),
            m = this,
            l = 0;
          for (a = 0; a < n.length; ) (c = n[a]), ++a, c.opt || (l += 1);
          a = V.makeVarArgs(function (a) {
            if (a.length != n.length) {
              if (a.length < l)
                throw (
                  ((a =
                    "Invalid number of parameters. Got " +
                    a.length +
                    ", required " +
                    l),
                  null != g && (a += " for function '" + g + "'"),
                  new v(a))
                );
              for (var c = [], d = a.length - l, e = 0, f = 0; f < n.length; ) {
                var p = n[f];
                ++f;
                p.opt
                  ? 0 < d
                    ? (c.push(a[e++]), --d)
                    : c.push(null)
                  : c.push(a[e++]);
              }
              a = c;
            }
            c = m.locals;
            d = m.depth;
            m.depth++;
            m.locals = m.duplicate(k);
            e = 0;
            for (f = n.length; e < f; )
              (p = e++), m.locals.set(n[p].name, { r: a[p] });
            a = null;
            if (b.inTry)
              try {
                a = m.exprReturn(h);
              } catch (Uo) {
                throw (
                  ((X.lastException = Uo),
                  Uo instanceof v && (Uo = Uo.val),
                  (m.locals = c),
                  (m.depth = d),
                  v.wrap(Uo))
                );
              }
            else a = m.exprReturn(h);
            m.locals = c;
            m.depth = d;
            return a;
          });
          null != g &&
            (0 == this.depth
              ? this.variables.set(g, a)
              : ((c = this.declared),
                (e = this.locals.get(g)),
                c.push({ n: g, old: e }),
                (c = { r: a }),
                this.locals.set(g, c),
                null != t[g] ? k.setReserved(g, c) : (k.h[g] = c)));
          return a;
        case 15:
          throw (
            ((a = a[2]), new v(bf.SReturn(null == a ? null : this.expr(a))))
          );
        case 16:
          return (
            (c = a[3]),
            (a = this.expr(a[2])),
            (c = this.expr(c)),
            u.__instanceof(a, Fd) ? u.__cast(a, Fd).get(c) : a[c]
          );
        case 17:
          a = a[2];
          0 < a.length
            ? ((c = a[0]), (c = 6 == c[1] ? ("=>" == c[2] ? !0 : !1) : !1))
            : (c = !1);
          if (c) {
            var p = (f = d = !0),
              r = !0;
            c = [];
            e = [];
            for (var q = 0; q < a.length; ) {
              var x = a[q];
              ++q;
              if (6 == x[1])
                if ("=>" == x[2]) {
                  var w = x[4];
                  x = this.expr(x[3]);
                  w = this.expr(w);
                  d = d ? "string" == typeof x : !1;
                  f = f ? ("number" == typeof x ? (x | 0) === x : !1) : !1;
                  p = p ? V.isObject(x) : !1;
                  r = r ? V.isEnumValue(x) : !1;
                  c.push(x);
                  e.push(w);
                } else throw new v("=> expected");
              else throw new v("=> expected");
            }
            if (f) a = new Ca();
            else if (d) a = new la();
            else if (r) a = new kj();
            else if (p) a = new qd();
            else throw new v("Inconsistent key types");
            d = 0;
            for (f = c.length; d < f; )
              (p = d++), u.__cast(a, Fd).set(c[p], e[p]);
            return a;
          }
          c = [];
          for (e = 0; e < a.length; ) (d = a[e]), ++e, c.push(this.expr(d));
          return c;
        case 18:
          c = a[3];
          a = a[2];
          e = [];
          for (d = 0; d < c.length; ) (f = c[d]), ++d, e.push(this.expr(f));
          return this.cnew(a, e);
        case 19:
          throw v.wrap(this.expr(a[2]));
        case 20:
          c = a[5];
          e = a[3];
          p = a[2];
          a = this.declared.length;
          d = this.inTry;
          try {
            return (
              (this.inTry = !0),
              (f = this.expr(p)),
              this.restore(a),
              (this.inTry = d),
              f
            );
          } catch (na) {
            X.lastException = na;
            na instanceof v && (na = na.val);
            if (u.__instanceof(na, bf))
              throw ((a = na), (this.inTry = d), new v(a));
            f = na;
            this.restore(a);
            this.inTry = d;
            this.declared.push({ n: e, old: this.locals.get(e) });
            this.locals.set(e, { r: f });
            c = this.expr(c);
            this.restore(a);
            return c;
          }
        case 21:
          a = a[2];
          c = {};
          for (e = 0; e < a.length; )
            (d = a[e]), ++e, this.set(c, d.name, this.expr(d.e));
          return c;
        case 22:
          return (
            (c = a[4]),
            (e = a[3]),
            1 == this.expr(a[2]) ? this.expr(e) : this.expr(c)
          );
        case 23:
          c = a[4];
          e = a[3];
          a = this.expr(a[2]);
          d = !1;
          for (f = 0; f < e.length; ) {
            p = e[f];
            ++f;
            r = 0;
            for (q = p.values; r < q.length; )
              if (((w = q[r]), ++r, this.expr(w) == a)) {
                d = !0;
                break;
              }
            if (d) {
              a = this.expr(p.expr);
              break;
            }
          }
          d || (a = null == c ? null : this.expr(c));
          return a;
        case 24:
          return this.doWhileLoop(a[2], a[3]), null;
        case 25:
          return this.expr(a[4]);
      }
    },
    doWhileLoop: function (a, b) {
      var c = this.declared.length;
      try {
        for (;;) {
          try {
            this.expr(b);
          } catch (d) {
            if (
              ((X.lastException = d),
              d instanceof v && (d = d.val),
              u.__instanceof(d, bf))
            )
              switch (d[1]) {
                case 0:
                  throw "__break__";
                case 2:
                  throw new v(d);
              }
            else throw d;
          }
          if (1 != this.expr(a)) throw "__break__";
        }
      } catch (d) {
        if ("__break__" != d) throw d;
      }
      this.restore(c);
    },
    whileLoop: function (a, b) {
      var c = this.declared.length;
      try {
        for (; 1 == this.expr(a); )
          try {
            this.expr(b);
          } catch (d) {
            if (
              ((X.lastException = d),
              d instanceof v && (d = d.val),
              u.__instanceof(d, bf))
            )
              switch (d[1]) {
                case 0:
                  throw "__break__";
                case 2:
                  throw new v(d);
              }
            else throw d;
          }
      } catch (d) {
        if ("__break__" != d) throw d;
      }
      this.restore(c);
    },
    makeIterator: function (a) {
      try {
        a = Qb(a)();
      } catch (b) {
        X.lastException = b;
      }
      if (null == a.hasNext || null == a.next)
        throw new v(Dc.EInvalidIterator(a));
      return a;
    },
    forLoop: function (a, b, c) {
      var d = this.declared.length,
        e = this.locals;
      this.declared.push({
        n: a,
        old: null != t[a] ? e.getReserved(a) : e.h[a],
      });
      b = this.makeIterator(this.expr(b));
      try {
        for (; b.hasNext(); ) {
          var f = this.locals,
            g = { r: b.next() };
          e = f;
          null != t[a] ? e.setReserved(a, g) : (e.h[a] = g);
          try {
            this.expr(c);
          } catch (h) {
            if (
              ((X.lastException = h),
              h instanceof v && (h = h.val),
              u.__instanceof(h, bf))
            )
              switch (h[1]) {
                case 0:
                  throw "__break__";
                case 2:
                  throw new v(h);
              }
            else throw h;
          }
        }
      } catch (h) {
        if ("__break__" != h) throw h;
      }
      this.restore(d);
    },
    isMap: function (a) {
      return u.__instanceof(a, Fd);
    },
    getMapValue: function (a, b) {
      return u.__cast(a, Fd).get(b);
    },
    setMapValue: function (a, b, c) {
      u.__cast(a, Fd).set(b, c);
    },
    get: function (a, b) {
      if (null == a) throw new v(Dc.EInvalidAccess(b));
      return V.getProperty(a, b);
    },
    set: function (a, b, c) {
      if (null == a) throw new v(Dc.EInvalidAccess(b));
      V.setProperty(a, b, c);
      return c;
    },
    fcall: function (a, b, c) {
      return this.call(a, this.get(a, b), c);
    },
    call: function (a, b, c) {
      return b.apply(a, c);
    },
    cnew: function (a, b) {
      var c = qa.resolveClass(a);
      null == c && (c = this.resolve(a));
      return qa.createInstance(c, b);
    },
    __class__: Hp,
  };
  var da = (p["hscript.Token"] = {
    __ename__: ["hscript", "Token"],
    __constructs__:
      "TEof TConst TId TOp TPOpen TPClose TBrOpen TBrClose TDot TComma TSemicolon TBkOpen TBkClose TQuestion TDoubleDot TMeta".split(
        " "
      ),
  });
  da.TEof = ["TEof", 0];
  da.TEof.toString = M;
  da.TEof.__enum__ = da;
  da.TConst = function (a) {
    a = ["TConst", 1, a];
    a.__enum__ = da;
    a.toString = M;
    return a;
  };
  da.TId = function (a) {
    a = ["TId", 2, a];
    a.__enum__ = da;
    a.toString = M;
    return a;
  };
  da.TOp = function (a) {
    a = ["TOp", 3, a];
    a.__enum__ = da;
    a.toString = M;
    return a;
  };
  da.TPOpen = ["TPOpen", 4];
  da.TPOpen.toString = M;
  da.TPOpen.__enum__ = da;
  da.TPClose = ["TPClose", 5];
  da.TPClose.toString = M;
  da.TPClose.__enum__ = da;
  da.TBrOpen = ["TBrOpen", 6];
  da.TBrOpen.toString = M;
  da.TBrOpen.__enum__ = da;
  da.TBrClose = ["TBrClose", 7];
  da.TBrClose.toString = M;
  da.TBrClose.__enum__ = da;
  da.TDot = ["TDot", 8];
  da.TDot.toString = M;
  da.TDot.__enum__ = da;
  da.TComma = ["TComma", 9];
  da.TComma.toString = M;
  da.TComma.__enum__ = da;
  da.TSemicolon = ["TSemicolon", 10];
  da.TSemicolon.toString = M;
  da.TSemicolon.__enum__ = da;
  da.TBkOpen = ["TBkOpen", 11];
  da.TBkOpen.toString = M;
  da.TBkOpen.__enum__ = da;
  da.TBkClose = ["TBkClose", 12];
  da.TBkClose.toString = M;
  da.TBkClose.__enum__ = da;
  da.TQuestion = ["TQuestion", 13];
  da.TQuestion.toString = M;
  da.TQuestion.__enum__ = da;
  da.TDoubleDot = ["TDoubleDot", 14];
  da.TDoubleDot.toString = M;
  da.TDoubleDot.__enum__ = da;
  da.TMeta = function (a) {
    a = ["TMeta", 15, a];
    a.__enum__ = da;
    a.toString = M;
    return a;
  };
  var Bi = function () {
    this.uid = 0;
    this.line = 1;
    this.opChars = "+*/-=!><&|^%~";
    this.identChars =
      "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_";
    var a = [
      ["%"],
      ["*", "/"],
      ["+", "-"],
      ["<<", ">>", ">>>"],
      ["|", "&", "^"],
      "== != > < >= <=".split(" "),
      ["..."],
      ["&&"],
      ["||"],
      "= += -= *= /= %= <<= >>= >>>= |= &= ^= =>".split(" "),
    ];
    this.opPriority = new la();
    this.opRightAssoc = new la();
    this.unops = new la();
    for (var b = 0, c = a.length; b < c; )
      for (var d = b++, e = 0, f = a[d]; e < f.length; ) {
        var g = f[e];
        ++e;
        var h = this.opPriority;
        null != t[g] ? h.setReserved(g, d) : (h.h[g] = d);
        9 == d &&
          ((h = this.opRightAssoc),
          null != t[g] ? h.setReserved(g, !0) : (h.h[g] = !0));
      }
    a = 0;
    for (b = ["!", "++", "--", "-", "~"]; a < b.length; )
      (c = b[a]),
        ++a,
        (d = this.unops),
        (e = "++" == c || "--" == c),
        null != t[c] ? d.setReserved(c, e) : (d.h[c] = e);
  };
  p["hscript.Parser"] = Bi;
  Bi.__name__ = ["hscript", "Parser"];
  Bi.prototype = {
    line: null,
    opChars: null,
    identChars: null,
    opPriority: null,
    opRightAssoc: null,
    unops: null,
    allowJSON: null,
    allowTypes: null,
    allowMetadata: null,
    input: null,
    char: null,
    ops: null,
    idents: null,
    uid: null,
    tokens: null,
    error: function (a, b, c) {
      throw new v(a);
    },
    invalidChar: function (a) {
      throw new v(Dc.EInvalidChar(a));
    },
    parseString: function (a, b) {
      null == b && (b = "hscript");
      this.uid = 0;
      return this.parse(new on(a), b);
    },
    parse: function (a, b) {
      this.line = 1;
      this.tokens = new Ap();
      this["char"] = -1;
      this.input = a;
      this.ops = [];
      this.idents = [];
      a = 0;
      for (b = this.opChars.length; a < b; ) {
        var c = a++;
        this.ops[Q.cca(this.opChars, c)] = !0;
      }
      a = 0;
      for (b = this.identChars.length; a < b; )
        (c = a++), (this.idents[Q.cca(this.identChars, c)] = !0);
      for (a = []; ; ) {
        b = this.token();
        if (b == da.TEof) break;
        c = this.tokens;
        c.head = new Cc(b, c.head);
        a.push(this.parseFullExpr());
      }
      return 1 == a.length ? a[0] : ja.EBlock(a);
    },
    unexpected: function (a) {
      throw new v(Dc.EUnexpected(this.tokenString(a)));
    },
    push: function (a) {
      var b = this.tokens;
      b.head = new Cc(a, b.head);
    },
    ensure: function (a) {
      var b = this.token();
      b != a && this.unexpected(b);
    },
    getIdent: function () {
      var a = this.token();
      if (2 == a[1]) return a[2];
      this.unexpected(a);
      return null;
    },
    expr: function (a) {
      return a;
    },
    pmin: function (a) {
      return 0;
    },
    pmax: function (a) {
      return 0;
    },
    mk: function (a, b, c) {
      return a;
    },
    isBlock: function (a) {
      switch (a[1]) {
        case 2:
          return (a = a[4]), null != a ? this.isBlock(a) : !1;
        case 6:
          return this.isBlock(a[4]);
        case 7:
          var b = a[4];
          return a[3] ? !1 : this.isBlock(b);
        case 9:
          return (
            (b = a[4]),
            (a = a[3]),
            null != b ? this.isBlock(b) : this.isBlock(a)
          );
        case 10:
          return this.isBlock(a[3]);
        case 11:
          return this.isBlock(a[4]);
        case 14:
          return this.isBlock(a[3]);
        case 15:
          return (a = a[2]), null != a ? this.isBlock(a) : !1;
        case 20:
          return this.isBlock(a[5]);
        case 4:
        case 21:
        case 23:
          return !0;
        case 24:
          return this.isBlock(a[3]);
        default:
          return !1;
      }
    },
    parseFullExpr: function () {
      var a = this.parseExpr(),
        b = this.token();
      if (b != da.TSemicolon && b != da.TEof)
        if (this.isBlock(a)) {
          var c = this.tokens;
          c.head = new Cc(b, c.head);
        } else this.unexpected(b);
      return a;
    },
    parseObject: function (a) {
      a = [];
      try {
        for (;;) {
          var b = this.token(),
            c = null;
          switch (b[1]) {
            case 1:
              var d = b[2];
              this.allowJSON || this.unexpected(b);
              2 == d[1] ? (c = d[2]) : this.unexpected(b);
              break;
            case 2:
              c = b[2];
              break;
            case 7:
              throw "__break__";
            default:
              this.unexpected(b);
          }
          var e = this.token();
          e != da.TDoubleDot && this.unexpected(e);
          a.push({ name: c, e: this.parseExpr() });
          b = this.token();
          switch (b[1]) {
            case 7:
              throw "__break__";
            case 9:
              break;
            default:
              this.unexpected(b);
          }
        }
      } catch (f) {
        if ("__break__" != f) throw f;
      }
      return this.parseExprNext(ja.EObject(a));
    },
    parseExpr: function () {
      var a = this.token();
      switch (a[1]) {
        case 1:
          return this.parseExprNext(ja.EConst(a[2]));
        case 2:
          a = a[2];
          var b = this.parseStructure(a);
          null == b && (b = ja.EIdent(a));
          return this.parseExprNext(b);
        case 3:
          return (
            (b = a[2]),
            this.unops.exists(b)
              ? this.makeUnop(b, this.parseExpr())
              : this.unexpected(a)
          );
        case 4:
          return (
            (a = this.parseExpr()),
            (b = this.token()),
            b != da.TPClose && this.unexpected(b),
            this.parseExprNext(ja.EParent(a))
          );
        case 6:
          a = this.token();
          switch (a[1]) {
            case 1:
              b = a[2];
              if (this.allowJSON)
                if (2 == b[1]) {
                  b = this.token();
                  var c = this.tokens;
                  c.head = new Cc(b, c.head);
                  c = this.tokens;
                  c.head = new Cc(a, c.head);
                  if (14 == b[1])
                    return this.parseExprNext(this.parseObject(0));
                } else (b = this.tokens), (b.head = new Cc(a, b.head));
              else (b = this.tokens), (b.head = new Cc(a, b.head));
              break;
            case 2:
              b = this.token();
              c = this.tokens;
              c.head = new Cc(b, c.head);
              c = this.tokens;
              c.head = new Cc(a, c.head);
              if (14 == b[1]) return this.parseExprNext(this.parseObject(0));
              break;
            case 7:
              return this.parseExprNext(ja.EObject([]));
            default:
              (b = this.tokens), (b.head = new Cc(a, b.head));
          }
          for (b = []; ; ) {
            b.push(this.parseFullExpr());
            a = this.token();
            if (a == da.TBrClose) break;
            c = this.tokens;
            c.head = new Cc(a, c.head);
          }
          return ja.EBlock(b);
        case 11:
          b = [];
          for (a = this.token(); a != da.TBkClose; )
            (c = this.tokens),
              (c.head = new Cc(a, c.head)),
              b.push(this.parseExpr()),
              (a = this.token()),
              a == da.TComma && (a = this.token());
          if (1 == b.length)
            switch (b[0][1]) {
              case 10:
              case 11:
              case 24:
                return (
                  (a = "__a_" + this.uid++),
                  (a = ja.EBlock([
                    ja.EVar(a, null, ja.EArrayDecl([])),
                    this.mapCompr(a, b[0]),
                    ja.EIdent(a),
                  ])),
                  this.parseExprNext(a)
                );
            }
          return this.parseExprNext(ja.EArrayDecl(b));
        case 15:
          return (
            (b = a[2]),
            this.allowMetadata
              ? ((a = this.parseMetaArgs()), ja.EMeta(b, a, this.parseExpr()))
              : this.unexpected(a)
          );
        default:
          return this.unexpected(a);
      }
    },
    parseMetaArgs: function () {
      var a = this.token();
      if (a != da.TPOpen) {
        var b = this.tokens;
        b.head = new Cc(a, b.head);
        return null;
      }
      b = [];
      a = this.token();
      if (a != da.TPClose) {
        var c = this.tokens;
        c.head = new Cc(a, c.head);
        try {
          for (;;) {
            b.push(this.parseExpr());
            var d = this.token();
            switch (d[1]) {
              case 5:
                throw "__break__";
              case 9:
                break;
              default:
                this.unexpected(d);
            }
          }
        } catch (e) {
          if ("__break__" != e) throw e;
        }
      }
      return b;
    },
    mapCompr: function (a, b) {
      switch (b[1]) {
        case 3:
          a = ja.EParent(this.mapCompr(a, b[2]));
          break;
        case 4:
          a =
            1 == b[2].length
              ? ja.EBlock([this.mapCompr(a, b[2][0])])
              : ja.ECall(ja.EField(ja.EIdent(a), "push"), [b]);
          break;
        case 9:
          var c = b[3],
            d = b[2];
          a =
            null == b[4]
              ? ja.EIf(d, this.mapCompr(a, c), null)
              : ja.ECall(ja.EField(ja.EIdent(a), "push"), [b]);
          break;
        case 10:
          a = ja.EWhile(b[2], this.mapCompr(a, b[3]));
          break;
        case 11:
          a = ja.EFor(b[2], b[3], this.mapCompr(a, b[4]));
          break;
        case 24:
          a = ja.EDoWhile(b[2], this.mapCompr(a, b[3]));
          break;
        default:
          a = ja.ECall(ja.EField(ja.EIdent(a), "push"), [b]);
      }
      return a;
    },
    makeUnop: function (a, b) {
      switch (b[1]) {
        case 6:
          var c = b[4];
          return ja.EBinop(b[2], this.makeUnop(a, b[3]), c);
        case 22:
          c = b[4];
          var d = b[3];
          return ja.ETernary(this.makeUnop(a, b[2]), d, c);
        default:
          return ja.EUnop(a, !0, b);
      }
    },
    makeBinop: function (a, b, c) {
      switch (c[1]) {
        case 6:
          var d = c[4],
            e = c[3],
            f = c[2];
          return this.opPriority.get(a) <= this.opPriority.get(f) &&
            !this.opRightAssoc.exists(a)
            ? ja.EBinop(f, this.makeBinop(a, b, e), d)
            : ja.EBinop(a, b, c);
        case 22:
          return (
            (d = c[4]),
            (e = c[3]),
            (f = c[2]),
            this.opRightAssoc.exists(a)
              ? ja.EBinop(a, b, c)
              : ja.ETernary(this.makeBinop(a, b, f), e, d)
          );
        default:
          return ja.EBinop(a, b, c);
      }
    },
    parseStructure: function (a) {
      switch (a) {
        case "break":
          return ja.EBreak;
        case "continue":
          return ja.EContinue;
        case "do":
          var b = this.parseExpr(),
            c = this.token();
          2 == c[1]
            ? "while" != c[2] && this.unexpected(c)
            : this.unexpected(c);
          c = this.parseExpr();
          return ja.EDoWhile(c, b);
        case "else":
          return this.unexpected(da.TId(a));
        case "for":
          b = this.token();
          b != da.TPOpen && this.unexpected(b);
          b = this.getIdent();
          c = this.token();
          qa.enumEq(c, da.TId("in")) || this.unexpected(c);
          c = this.parseExpr();
          var d = this.token();
          d != da.TPClose && this.unexpected(d);
          d = this.parseExpr();
          return ja.EFor(b, c, d);
        case "function":
          c = this.token();
          b = null;
          2 == c[1]
            ? (b = c[2])
            : ((d = this.tokens), (d.head = new Cc(c, d.head)));
          c = this.token();
          c != da.TPOpen && this.unexpected(c);
          d = [];
          c = this.token();
          if (c != da.TPClose)
            for (var e = !1; !e; ) {
              var f = null,
                g = !1;
              13 == c[1] && ((g = !0), (c = this.token()));
              2 == c[1] ? (f = c[2]) : this.unexpected(c);
              c = this.token();
              f = { name: f };
              d.push(f);
              g && (f.opt = !0);
              c == da.TDoubleDot &&
                this.allowTypes &&
                ((f.t = this.parseType()), (c = this.token()));
              switch (c[1]) {
                case 5:
                  e = !0;
                  break;
                case 9:
                  c = this.token();
                  break;
                default:
                  this.unexpected(c);
              }
            }
          e = null;
          this.allowTypes &&
            ((c = this.token()),
            c != da.TDoubleDot
              ? ((g = this.tokens), (g.head = new Cc(c, g.head)))
              : (e = this.parseType()));
          c = this.parseExpr();
          return ja.EFunction(d, c, b, e);
        case "if":
          return (
            (b = this.token()),
            b != da.TPOpen && this.unexpected(b),
            (b = this.parseExpr()),
            (c = this.token()),
            c != da.TPClose && this.unexpected(c),
            (c = this.parseExpr()),
            (d = null),
            (e = !1),
            (g = this.token()),
            g == da.TSemicolon && ((e = !0), (g = this.token())),
            qa.enumEq(g, da.TId("else"))
              ? (d = this.parseExpr())
              : ((f = this.tokens),
                (f.head = new Cc(g, f.head)),
                e &&
                  ((e = this.tokens),
                  (e.head = new Cc(da.TSemicolon, e.head)))),
            ja.EIf(b, c, d)
          );
        case "new":
          b = [];
          b.push(this.getIdent());
          for (c = !0; c; )
            switch (((d = this.token()), d[1])) {
              case 4:
                c = !1;
                break;
              case 8:
                b.push(this.getIdent());
                break;
              default:
                this.unexpected(d);
            }
          c = this.parseExprList(da.TPClose);
          return ja.ENew(b.join("."), c);
        case "return":
          return (
            (b = this.token()),
            (c = this.tokens),
            (c.head = new Cc(b, c.head)),
            (b = b == da.TSemicolon ? null : this.parseExpr()),
            ja.EReturn(b)
          );
        case "switch":
          a = this.parseExpr();
          var h = null,
            n = [],
            k = this.token();
          k != da.TBrOpen && this.unexpected(k);
          try {
            for (;;)
              switch (((b = this.token()), b[1])) {
                case 2:
                  switch (b[2]) {
                    case "case":
                      k = { values: [], expr: null };
                      n.push(k);
                      try {
                        for (;;)
                          switch (
                            ((c = this.parseExpr()),
                            k.values.push(c),
                            (b = this.token()),
                            b[1])
                          ) {
                            case 9:
                              break;
                            case 14:
                              throw "__break__";
                            default:
                              this.unexpected(b);
                          }
                      } catch (l) {
                        if ("__break__" != l) throw l;
                      }
                      var m = [];
                      try {
                        for (;;)
                          switch (
                            ((b = this.token()),
                            (d = this.tokens),
                            (d.head = new Cc(b, d.head)),
                            b[1])
                          ) {
                            case 2:
                              switch (b[2]) {
                                case "case":
                                case "default":
                                  throw "__break__";
                                default:
                                  m.push(this.parseFullExpr());
                              }
                              break;
                            case 7:
                              throw "__break__";
                            default:
                              m.push(this.parseFullExpr());
                          }
                      } catch (l) {
                        if ("__break__" != l) throw l;
                      }
                      e =
                        1 == m.length
                          ? m[0]
                          : 0 == m.length
                          ? ja.EBlock([])
                          : ja.EBlock(m);
                      k.expr = e;
                      break;
                    case "default":
                      null != h && this.unexpected(b);
                      g = this.token();
                      g != da.TDoubleDot && this.unexpected(g);
                      k = [];
                      try {
                        for (;;)
                          switch (
                            ((b = this.token()),
                            (f = this.tokens),
                            (f.head = new Cc(b, f.head)),
                            b[1])
                          ) {
                            case 2:
                              switch (b[2]) {
                                case "case":
                                case "default":
                                  throw "__break__";
                                default:
                                  k.push(this.parseFullExpr());
                              }
                              break;
                            case 7:
                              throw "__break__";
                            default:
                              k.push(this.parseFullExpr());
                          }
                      } catch (l) {
                        if ("__break__" != l) throw l;
                      }
                      h =
                        1 == k.length
                          ? k[0]
                          : 0 == k.length
                          ? ja.EBlock([])
                          : ja.EBlock(k);
                      break;
                    default:
                      this.unexpected(b);
                  }
                  break;
                case 7:
                  throw "__break__";
                default:
                  this.unexpected(b);
              }
          } catch (l) {
            if ("__break__" != l) throw l;
          }
          return ja.ESwitch(a, n, h);
        case "throw":
          return (b = this.parseExpr()), ja.EThrow(b);
        case "try":
          return (
            (b = this.parseExpr()),
            (e = this.token()),
            qa.enumEq(e, da.TId("catch")) || this.unexpected(e),
            (c = this.token()),
            c != da.TPOpen && this.unexpected(c),
            (c = this.getIdent()),
            (d = this.token()),
            d != da.TDoubleDot && this.unexpected(d),
            (d = null),
            this.allowTypes
              ? (d = this.parseType())
              : ((e = this.token()),
                qa.enumEq(e, da.TId("Dynamic")) || this.unexpected(e)),
            (e = this.token()),
            e != da.TPClose && this.unexpected(e),
            (e = this.parseExpr()),
            ja.ETry(b, c, d, e)
          );
        case "var":
          return (
            (b = this.getIdent()),
            (c = this.token()),
            (d = null),
            c == da.TDoubleDot &&
              this.allowTypes &&
              ((d = this.parseType()), (c = this.token())),
            (e = null),
            qa.enumEq(c, da.TOp("="))
              ? (e = this.parseExpr())
              : ((g = this.tokens), (g.head = new Cc(c, g.head))),
            ja.EVar(b, d, e)
          );
        case "while":
          return (
            (b = this.parseExpr()), (c = this.parseExpr()), ja.EWhile(b, c)
          );
        default:
          return null;
      }
    },
    parseExprNext: function (a) {
      var b = this.token();
      switch (b[1]) {
        case 3:
          var c = b[2];
          return this.unops.get(c)
            ? this.isBlock(a) || 3 == a[1]
              ? ((c = this.tokens), (c.head = new Cc(b, c.head)), a)
              : this.parseExprNext(ja.EUnop(c, !1, a))
            : this.makeBinop(c, a, this.parseExpr());
        case 4:
          return this.parseExprNext(
            ja.ECall(a, this.parseExprList(da.TPClose))
          );
        case 8:
          return (b = this.getIdent()), this.parseExprNext(ja.EField(a, b));
        case 11:
          return (
            (b = this.parseExpr()),
            (c = this.token()),
            c != da.TBkClose && this.unexpected(c),
            this.parseExprNext(ja.EArray(a, b))
          );
        case 13:
          return (
            (b = this.parseExpr()),
            (c = this.token()),
            c != da.TDoubleDot && this.unexpected(c),
            (c = this.parseExpr()),
            ja.ETernary(a, b, c)
          );
        default:
          return (c = this.tokens), (c.head = new Cc(b, c.head)), a;
      }
    },
    parseType: function () {
      var a = this.token();
      switch (a[1]) {
        case 2:
          for (var b = [a[2]]; ; ) {
            a = this.token();
            if (a != da.TDot) break;
            b.push(this.getIdent());
          }
          var c = null;
          if (3 == a[1])
            if ("<" == a[2]) {
              c = [];
              try {
                for (;;) {
                  c.push(this.parseType());
                  a = this.token();
                  switch (a[1]) {
                    case 3:
                      var d = a[2];
                      if (">" == d) throw "__break__";
                      if (62 == Q.cca(d, 0)) {
                        var e = this.tokens;
                        e.head = new Cc(da.TOp(Q.substr(d, 1, null)), e.head);
                        throw "__break__";
                      }
                      break;
                    case 9:
                      continue;
                  }
                  this.unexpected(a);
                }
              } catch (k) {
                if ("__break__" != k) throw k;
              }
            } else (d = this.tokens), (d.head = new Cc(a, d.head));
          else (d = this.tokens), (d.head = new Cc(a, d.head));
          return this.parseTypeNext(Xg.CTPath(b, c));
        case 4:
          return (
            (a = this.parseType()),
            (d = this.token()),
            d != da.TPClose && this.unexpected(d),
            this.parseTypeNext(Xg.CTParent(a))
          );
        case 6:
          d = [];
          e = null;
          try {
            for (;;)
              switch (((a = this.token()), a[1])) {
                case 2:
                  if ("var" == a[2]) {
                    b = this.getIdent();
                    c = this.token();
                    c != da.TDoubleDot && this.unexpected(c);
                    d.push({ name: b, t: this.parseType(), meta: e });
                    e = null;
                    var f = this.token();
                    f != da.TSemicolon && this.unexpected(f);
                  } else {
                    var g = a[2],
                      h = this.token();
                    h != da.TDoubleDot && this.unexpected(h);
                    d.push({ name: g, t: this.parseType(), meta: e });
                    a = this.token();
                    switch (a[1]) {
                      case 7:
                        throw "__break__";
                      case 9:
                        break;
                      default:
                        this.unexpected(a);
                    }
                  }
                  break;
                case 7:
                  throw "__break__";
                case 15:
                  var n = a[2];
                  null == e && (e = []);
                  e.push({ name: n, params: this.parseMetaArgs() });
                  break;
                default:
                  this.unexpected(a);
              }
          } catch (k) {
            if ("__break__" != k) throw k;
          }
          return this.parseTypeNext(Xg.CTAnon(d));
        default:
          return this.unexpected(a);
      }
    },
    parseTypeNext: function (a) {
      var b = this.token();
      if (3 == b[1]) {
        if ("->" != b[2]) {
          var c = this.tokens;
          c.head = new Cc(b, c.head);
          return a;
        }
      } else return (c = this.tokens), (c.head = new Cc(b, c.head)), a;
      b = this.parseType();
      return 1 == b[1] ? (b[2].unshift(a), b) : Xg.CTFun([a], b);
    },
    parseExprList: function (a) {
      var b = [],
        c = this.token();
      if (c == a) return b;
      var d = this.tokens;
      for (d.head = new Cc(c, d.head); ; )
        if ((b.push(this.parseExpr()), (c = this.token()), 9 != c[1])) {
          if (c == a) break;
          this.unexpected(c);
        }
      return b;
    },
    incPos: function () {},
    readChar: function () {
      try {
        return this.input.readByte();
      } catch (a) {
        return (X.lastException = a), 0;
      }
    },
    readString: function (a) {
      for (var b = 0, c = new nn(), d = !1, e = this.line, f = this.input; ; ) {
        try {
          b = f.readByte();
        } catch (G) {
          throw (
            ((X.lastException = G),
            (this.line = e),
            new v(Dc.EUnterminatedString))
          );
        }
        if (d)
          switch (((d = !1), b)) {
            case 34:
            case 39:
            case 92:
              c.writeByte(b);
              break;
            case 47:
              this.allowJSON ? c.writeByte(b) : this.invalidChar(b);
              break;
            case 110:
              c.writeByte(10);
              break;
            case 114:
              c.writeByte(13);
              break;
            case 116:
              c.writeByte(9);
              break;
            case 117:
              this.allowJSON || this.invalidChar(b);
              var g = null;
              try {
                g = f.readString(4);
              } catch (G) {
                throw (
                  ((X.lastException = G),
                  (this.line = e),
                  new v(Dc.EUnterminatedString))
                );
              }
              for (var h = 0, n = 0; 4 > n; ) {
                var k = n++;
                h <<= 4;
                k = Q.cca(g, k);
                if (null == k) this.invalidChar(k);
                else
                  switch (k) {
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                      h += k - 48;
                      break;
                    case 65:
                    case 66:
                    case 67:
                    case 68:
                    case 69:
                    case 70:
                      h += k - 55;
                      break;
                    case 97:
                    case 98:
                    case 99:
                    case 100:
                    case 101:
                    case 102:
                      h += k - 87;
                      break;
                    default:
                      this.invalidChar(k);
                  }
              }
              127 >= h
                ? c.writeByte(h)
                : (2047 >= h
                    ? c.writeByte(192 | (h >> 6))
                    : (c.writeByte(224 | (h >> 12)),
                      c.writeByte(128 | ((h >> 6) & 63))),
                  c.writeByte(128 | (h & 63)));
              break;
            default:
              this.invalidChar(b);
          }
        else if (92 == b) d = !0;
        else if (b == a) break;
        else 10 == b && this.line++, c.writeByte(b);
      }
      return c.getBytes().toString();
    },
    token: function () {
      if (null != this.tokens.head) {
        var a = this.tokens,
          b = a.head;
        if (null == b) return null;
        a.head = b.next;
        return b.elt;
      }
      0 > this["char"]
        ? (a = this.readChar())
        : ((a = this["char"]), (this["char"] = -1));
      for (;;) {
        switch (a) {
          case 0:
            return da.TEof;
          case 10:
            this.line++;
            break;
          case 9:
          case 13:
          case 32:
            break;
          case 34:
            return da.TConst(Hf.CString(this.readString(34)));
          case 39:
            return da.TConst(Hf.CString(this.readString(39)));
          case 40:
            return da.TPOpen;
          case 41:
            return da.TPClose;
          case 44:
            return da.TComma;
          case 46:
            switch (((a = this.readChar()), a)) {
              case 46:
                return (
                  (a = this.readChar()),
                  46 != a && this.invalidChar(a),
                  da.TOp("...")
                );
              case 48:
              case 49:
              case 50:
              case 51:
              case 52:
              case 53:
              case 54:
              case 55:
              case 56:
              case 57:
                b = a - 48;
                for (var c = 1; ; )
                  switch (((a = this.readChar()), (c *= 10), a)) {
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                      b = 10 * b + (a - 48);
                      break;
                    default:
                      return (this["char"] = a), da.TConst(Hf.CFloat(b / c));
                  }
              default:
                return (this["char"] = a), da.TDot;
            }
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            for (b = 1 * (a - 48), c = 0; ; )
              switch (((a = this.readChar()), (c *= 10), a)) {
                case 46:
                  if (0 < c) {
                    if (10 == c && 46 == this.readChar())
                      return (
                        (a = this.tokens),
                        (a.head = new Cc(da.TOp("..."), a.head)),
                        (a = b | 0),
                        da.TConst(a == b ? Hf.CInt(a) : Hf.CFloat(b))
                      );
                    this.invalidChar(a);
                  }
                  c = 1;
                  break;
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                  b = 10 * b + (a - 48);
                  break;
                case 120:
                  for ((0 < b || 0 < c) && this.invalidChar(a), b = 0; ; )
                    switch (((a = this.readChar()), a)) {
                      case 48:
                      case 49:
                      case 50:
                      case 51:
                      case 52:
                      case 53:
                      case 54:
                      case 55:
                      case 56:
                      case 57:
                        b = (b << 4) + a - 48;
                        break;
                      case 65:
                      case 66:
                      case 67:
                      case 68:
                      case 69:
                      case 70:
                        b = (b << 4) + (a - 55);
                        break;
                      case 97:
                      case 98:
                      case 99:
                      case 100:
                      case 101:
                      case 102:
                        b = (b << 4) + (a - 87);
                        break;
                      default:
                        return (this["char"] = a), da.TConst(Hf.CInt(b));
                    }
                default:
                  return (
                    (this["char"] = a),
                    (a = b | 0),
                    da.TConst(
                      0 < c
                        ? Hf.CFloat((10 * b) / c)
                        : a == b
                        ? Hf.CInt(a)
                        : Hf.CFloat(b)
                    )
                  );
              }
          case 58:
            return da.TDoubleDot;
          case 59:
            return da.TSemicolon;
          case 61:
            a = this.readChar();
            if (61 == a) return da.TOp("==");
            if (62 == a) return da.TOp("=>");
            this["char"] = a;
            return da.TOp("=");
          case 63:
            return da.TQuestion;
          case 64:
            a = this.readChar();
            if (this.idents[a] || 58 == a)
              for (b = String.fromCharCode(a); ; ) {
                a = this.readChar();
                if (!this.idents[a]) return (this["char"] = a), da.TMeta(b);
                b += String.fromCharCode(a);
              }
            this.invalidChar(a);
            break;
          case 91:
            return da.TBkOpen;
          case 93:
            return da.TBkClose;
          case 123:
            return da.TBrOpen;
          case 125:
            return da.TBrClose;
          default:
            if (this.ops[a])
              for (b = String.fromCharCode(a), c = -1; ; ) {
                a = this.readChar();
                if (!this.ops[a] || 61 == c) {
                  if (47 == Q.cca(b, 0)) return this.tokenComment(b, a);
                  this["char"] = a;
                  return da.TOp(b);
                }
                c = a;
                b += String.fromCharCode(a);
              }
            if (this.idents[a])
              for (b = String.fromCharCode(a); ; ) {
                a = this.readChar();
                if (!this.idents[a]) return (this["char"] = a), da.TId(b);
                b += String.fromCharCode(a);
              }
            this.invalidChar(a);
        }
        a = this.readChar();
      }
    },
    tokenComment: function (a, b) {
      var c = Q.cca(a, 1),
        d = this.input;
      if (47 == c) {
        try {
          for (; 13 != b && 10 != b; ) b = d.readByte();
          this["char"] = b;
        } catch (e) {
          X.lastException = e;
        }
        return this.token();
      }
      if (42 == c) {
        c = this.line;
        if ("/**/" == a) return (this["char"] = b), this.token();
        try {
          for (;;) {
            for (; 42 != b; ) 10 == b && this.line++, (b = d.readByte());
            b = d.readByte();
            if (47 == b) break;
          }
        } catch (e) {
          throw (
            ((X.lastException = e),
            (this.line = c),
            new v(Dc.EUnterminatedComment))
          );
        }
        return this.token();
      }
      this["char"] = b;
      return da.TOp(a);
    },
    constString: function (a) {
      switch (a[1]) {
        case 0:
          return (a = a[2]), null == a ? "null" : "" + a;
        case 1:
          return (a = a[2]), null == a ? "null" : "" + a;
        case 2:
          return a[2];
      }
    },
    tokenString: function (a) {
      switch (a[1]) {
        case 0:
          return "<eof>";
        case 1:
          return this.constString(a[2]);
        case 2:
          return a[2];
        case 3:
          return a[2];
        case 4:
          return "(";
        case 5:
          return ")";
        case 6:
          return "{";
        case 7:
          return "}";
        case 8:
          return ".";
        case 9:
          return ",";
        case 10:
          return ";";
        case 11:
          return "[";
        case 12:
          return "]";
        case 13:
          return "?";
        case 14:
          return ":";
        case 15:
          return "@" + a[2];
      }
    },
    __class__: Bi,
  };
  var v = function (a) {
    Error.call(this);
    this.val = a;
    this.message = String(a);
    Error.captureStackTrace && Error.captureStackTrace(this, v);
  };
  p["js._Boot.HaxeError"] = v;
  v.__name__ = ["js", "_Boot", "HaxeError"];
  v.wrap = function (a) {
    return a instanceof Error ? a : new v(a);
  };
  v.__super__ = Error;
  v.prototype = x(Error.prototype, { val: null, __class__: v });
  var u = function () {};
  p["js.Boot"] = u;
  u.__name__ = ["js", "Boot"];
  u.__unhtml = function (a) {
    return a
      .split("&")
      .join("&amp;")
      .split("<")
      .join("&lt;")
      .split(">")
      .join("&gt;");
  };
  u.__trace = function (a, b) {
    var c = null != b ? b.fileName + ":" + b.lineNumber + ": " : "";
    c += u.__string_rec(a, "");
    if (null != b && null != b.customParams)
      for (a = 0, b = b.customParams; a < b.length; ) {
        var d = b[a];
        ++a;
        c += "," + u.__string_rec(d, "");
      }
    if ("undefined" != typeof document) {
      var e = document.getElementById("haxe:trace");
      a = null != e;
    } else a = !1;
    a
      ? (e.innerHTML += u.__unhtml(c) + "<br/>")
      : "undefined" != typeof console && null != console.log && console.log(c);
  };
  u.getClass = function (a) {
    if (a instanceof Array && null == a.__enum__) return Array;
    var b = a.__class__;
    if (null != b) return b;
    a = u.__nativeClassName(a);
    return null != a ? u.__resolveNativeClass(a) : null;
  };
  u.__string_rec = function (a, b) {
    if (null == a) return "null";
    if (5 <= b.length) return "<...>";
    var c = typeof a;
    "function" == c && (a.__name__ || a.__ename__) && (c = "object");
    switch (c) {
      case "function":
        return "<function>";
      case "object":
        if (a instanceof Array) {
          if (a.__enum__) {
            if (2 == a.length) return a[0];
            c = a[0] + "(";
            b += "\t";
            for (var d = 2, e = a.length; d < e; ) {
              var f = d++;
              c =
                2 != f
                  ? c + ("," + u.__string_rec(a[f], b))
                  : c + u.__string_rec(a[f], b);
            }
            return c + ")";
          }
          c = a.length;
          d = "[";
          b += "\t";
          for (e = 0; e < c; )
            (f = e++), (d += (0 < f ? "," : "") + u.__string_rec(a[f], b));
          return d + "]";
        }
        try {
          d = a.toString;
        } catch (g) {
          return (X.lastException = g), "???";
        }
        if (
          null != d &&
          d != Object.toString &&
          "function" == typeof d &&
          ((c = a.toString()), "[object Object]" != c)
        )
          return c;
        c = null;
        d = "{\n";
        b += "\t";
        e = null != a.hasOwnProperty;
        for (c in a)
          (e && !a.hasOwnProperty(c)) ||
            "prototype" == c ||
            "__class__" == c ||
            "__super__" == c ||
            "__interfaces__" == c ||
            "__properties__" == c ||
            (2 != d.length && (d += ", \n"),
            (d += b + c + " : " + u.__string_rec(a[c], b)));
        b = b.substring(1);
        return d + ("\n" + b + "}");
      case "string":
        return a;
      default:
        return String(a);
    }
  };
  u.__interfLoop = function (a, b) {
    if (null == a) return !1;
    if (a == b) return !0;
    var c = a.__interfaces__;
    if (null != c)
      for (var d = 0, e = c.length; d < e; ) {
        var f = d++;
        f = c[f];
        if (f == b || u.__interfLoop(f, b)) return !0;
      }
    return u.__interfLoop(a.__super__, b);
  };
  u.__instanceof = function (a, b) {
    if (null == b) return !1;
    switch (b) {
      case Array:
        return a instanceof Array ? null == a.__enum__ : !1;
      case si:
        return "boolean" == typeof a;
      case ju:
        return !0;
      case ri:
        return "number" == typeof a;
      case og:
        return "number" == typeof a ? (a | 0) === a : !1;
      case String:
        return "string" == typeof a;
      default:
        if (null != a)
          if ("function" == typeof b) {
            if (a instanceof b || u.__interfLoop(u.getClass(a), b)) return !0;
          } else {
            if ("object" == typeof b && u.__isNativeObj(b) && a instanceof b)
              return !0;
          }
        else return !1;
        return (b == Zt && null != a.__name__) ||
          (b == $t && null != a.__ename__)
          ? !0
          : a.__enum__ == b;
    }
  };
  u.__cast = function (a, b) {
    if (u.__instanceof(a, b)) return a;
    throw new v("Cannot cast " + P.string(a) + " to " + P.string(b));
  };
  u.__nativeClassName = function (a) {
    a = u.__toStr.call(a).slice(8, -1);
    return "Object" == a || "Function" == a || "Math" == a || "JSON" == a
      ? null
      : a;
  };
  u.__isNativeObj = function (a) {
    return null != u.__nativeClassName(a);
  };
  u.__resolveNativeClass = function (a) {
    return md[a];
  };
  var nj = function () {};
  p["js.Browser"] = nj;
  nj.__name__ = ["js", "Browser"];
  nj.getLocalStorage = function () {
    try {
      var a = window.localStorage;
      a.getItem("");
      return a;
    } catch (b) {
      return (X.lastException = b), null;
    }
  };
  nj.alert = function (a) {
    window.alert(u.__string_rec(a, ""));
  };
  var Ms = function () {};
  p["js.html._CanvasElement.CanvasUtil"] = Ms;
  Ms.__name__ = ["js", "html", "_CanvasElement", "CanvasUtil"];
  Ms.getContextWebGL = function (a, b) {
    for (var c = 0, d = ["webgl", "experimental-webgl"]; c < d.length; ) {
      var e = d[c];
      ++c;
      e = a.getContext(e, b);
      if (null != e) return e;
    }
    return null;
  };
  var Ke = function (a) {
    if (a instanceof Array && null == a.__enum__)
      (this.a = a), (this.byteLength = a.length);
    else {
      this.a = [];
      for (var b = 0; b < a; ) {
        var c = b++;
        this.a[c] = 0;
      }
      this.byteLength = a;
    }
  };
  p["js.html.compat.ArrayBuffer"] = Ke;
  Ke.__name__ = ["js", "html", "compat", "ArrayBuffer"];
  Ke.sliceImpl = function (a, b) {
    a = new lb(this, a, null == b ? null : b - a);
    b = new Je(a.byteLength);
    new lb(b).set(a);
    return b;
  };
  Ke.prototype = {
    byteLength: null,
    a: null,
    slice: function (a, b) {
      return new Ke(this.a.slice(a, b));
    },
    __class__: Ke,
  };
  var Ip = function (a, b, c) {
    this.buf = a;
    this.offset = null == b ? 0 : b;
    this.length = null == c ? a.byteLength - this.offset : c;
    if (
      0 > this.offset ||
      0 > this.length ||
      this.offset + this.length > a.byteLength
    )
      throw new v(pe.OutsideBounds);
    this.byteLength = this.length;
    this.byteOffset = this.offset;
    this.buffer = this.buf;
  };
  p["js.html.compat.DataView"] = Ip;
  Ip.__name__ = ["js", "html", "compat", "DataView"];
  Ip.prototype = {
    buf: null,
    offset: null,
    length: null,
    byteLength: null,
    byteOffset: null,
    buffer: null,
    getInt8: function (a) {
      a = this.buf.a[this.offset + a];
      return 128 <= a ? a - 256 : a;
    },
    getUint8: function (a) {
      return this.buf.a[this.offset + a];
    },
    getInt16: function (a, b) {
      a = this.getUint16(a, b);
      return 32768 <= a ? a - 65536 : a;
    },
    getUint16: function (a, b) {
      return b
        ? this.buf.a[this.offset + a] | (this.buf.a[this.offset + a + 1] << 8)
        : (this.buf.a[this.offset + a] << 8) | this.buf.a[this.offset + a + 1];
    },
    getInt32: function (a, b) {
      var c = this.offset + a;
      a = this.buf.a[c++];
      var d = this.buf.a[c++],
        e = this.buf.a[c++];
      c = this.buf.a[c++];
      return b
        ? a | (d << 8) | (e << 16) | (c << 24)
        : c | (e << 8) | (d << 16) | (a << 24);
    },
    getUint32: function (a, b) {
      a = this.getInt32(a, b);
      return 0 > a ? a + 4294967296 : a;
    },
    getFloat32: function (a, b) {
      return xe.i32ToFloat(this.getInt32(a, b));
    },
    getFloat64: function (a, b) {
      var c = this.getInt32(a, b);
      a = this.getInt32(a + 4, b);
      return xe.i64ToDouble(b ? c : a, b ? a : c);
    },
    setInt8: function (a, b) {
      this.buf.a[a + this.offset] = 0 > b ? (b + 128) & 255 : b & 255;
    },
    setUint8: function (a, b) {
      this.buf.a[a + this.offset] = b & 255;
    },
    setInt16: function (a, b, c) {
      this.setUint16(a, 0 > b ? b + 65536 : b, c);
    },
    setUint16: function (a, b, c) {
      a += this.offset;
      c
        ? ((this.buf.a[a] = b & 255), (this.buf.a[a++] = (b >> 8) & 255))
        : ((this.buf.a[a++] = (b >> 8) & 255), (this.buf.a[a] = b & 255));
    },
    setInt32: function (a, b, c) {
      this.setUint32(a, b, c);
    },
    setUint32: function (a, b, c) {
      a += this.offset;
      c
        ? ((this.buf.a[a++] = b & 255),
          (this.buf.a[a++] = (b >> 8) & 255),
          (this.buf.a[a++] = (b >> 16) & 255),
          (this.buf.a[a++] = b >>> 24))
        : ((this.buf.a[a++] = b >>> 24),
          (this.buf.a[a++] = (b >> 16) & 255),
          (this.buf.a[a++] = (b >> 8) & 255),
          (this.buf.a[a++] = b & 255));
    },
    setFloat32: function (a, b, c) {
      this.setUint32(a, xe.floatToI32(b), c);
    },
    setFloat64: function (a, b, c) {
      b = xe.doubleToI64(b);
      c
        ? (this.setUint32(a, b.low), this.setUint32(a, b.high))
        : (this.setUint32(a, b.high), this.setUint32(a, b.low));
    },
    __class__: Ip,
  };
  var Uh = function () {};
  p["js.html.compat.Float32Array"] = Uh;
  Uh.__name__ = ["js", "html", "compat", "Float32Array"];
  Uh._new = function (a, b, c) {
    if ("number" == typeof a) {
      var d = [];
      for (b = 0; b < a; ) {
        var e = b++;
        d[e] = 0;
      }
      d.byteLength = d.length << 2;
      d.byteOffset = 0;
      a = [];
      b = 0;
      for (e = d.length << 2; b < e; ) b++, a.push(0);
      d.buffer = new Ke(a);
    } else if (u.__instanceof(a, Ke)) {
      null == b && (b = 0);
      null == c && (c = (a.byteLength - b) >> 2);
      d = [];
      for (e = 0; e < c; ) {
        e++;
        var f =
          a.a[b++] | (a.a[b++] << 8) | (a.a[b++] << 16) | (a.a[b++] << 24);
        d.push(xe.i32ToFloat(f));
      }
      d.byteLength = d.length << 2;
      d.byteOffset = b;
      d.buffer = a;
    } else if (a instanceof Array && null == a.__enum__) {
      d = a.slice();
      a = [];
      for (b = 0; b < d.length; )
        (e = d[b]),
          ++b,
          (e = xe.floatToI32(e)),
          a.push(e & 255),
          a.push((e >> 8) & 255),
          a.push((e >> 16) & 255),
          a.push(e >>> 24);
      d.byteLength = d.length << 2;
      d.byteOffset = 0;
      d.buffer = new Ke(a);
    } else throw new v("TODO " + P.string(a));
    d.subarray = Uh._subarray;
    d.set = Uh._set;
    return d;
  };
  Uh._set = function (a, b) {
    if (u.__instanceof(a.buffer, Ke)) {
      if (a.byteLength + b > this.byteLength)
        throw new v("set() outside of range");
      for (var c = 0, d = a.byteLength; c < d; ) {
        var e = c++;
        this[e + b] = a[e];
      }
    } else if (a instanceof Array && null == a.__enum__) {
      if (a.length + b > this.byteLength) throw new v("set() outside of range");
      c = 0;
      for (d = a.length; c < d; ) (e = c++), (this[e + b] = a[e]);
    } else throw new v("TODO");
  };
  Uh._subarray = function (a, b) {
    b = Uh._new(this.slice(a, b));
    b.byteOffset = 4 * a;
    return b;
  };
  var Vh = function () {};
  p["js.html.compat.Float64Array"] = Vh;
  Vh.__name__ = ["js", "html", "compat", "Float64Array"];
  Vh._new = function (a, b, c) {
    if ("number" == typeof a) {
      var d = [];
      for (b = 0; b < a; ) {
        var e = b++;
        d[e] = 0;
      }
      d.byteLength = d.length << 3;
      d.byteOffset = 0;
      a = [];
      b = 0;
      for (e = d.length << 3; b < e; ) b++, a.push(0);
      d.buffer = new Ke(a);
    } else if (u.__instanceof(a, Ke)) {
      null == b && (b = 0);
      null == c && (c = (a.byteLength - b) >> 3);
      d = [];
      for (e = 0; e < c; ) {
        e++;
        var f =
            a.a[b++] | (a.a[b++] << 8) | (a.a[b++] << 16) | (a.a[b++] << 24),
          g = a.a[b++] | (a.a[b++] << 8) | (a.a[b++] << 16) | (a.a[b++] << 24);
        d.push(xe.i64ToDouble(f, g));
      }
      d.byteLength = d.length << 3;
      d.byteOffset = b;
      d.buffer = a;
    } else if (a instanceof Array && null == a.__enum__) {
      d = a.slice();
      a = [];
      for (b = 0; b < d.length; )
        (e = d[b]),
          ++b,
          (e = xe.doubleToI64(e)),
          (c = e.low),
          a.push(c & 255),
          a.push((c >> 8) & 255),
          a.push((c >> 16) & 255),
          a.push(c >>> 24),
          (e = e.high),
          a.push(e & 255),
          a.push((e >> 8) & 255),
          a.push((e >> 16) & 255),
          a.push(e >>> 24);
      d.byteLength = d.length << 3;
      d.byteOffset = 0;
      d.buffer = new Ke(a);
    } else throw new v("TODO " + P.string(a));
    d.subarray = Vh._subarray;
    d.set = Vh._set;
    return d;
  };
  Vh._set = function (a, b) {
    if (u.__instanceof(a.buffer, Ke)) {
      if (a.byteLength + b > this.byteLength)
        throw new v("set() outside of range");
      for (var c = 0, d = a.byteLength; c < d; ) {
        var e = c++;
        this[e + b] = a[e];
      }
    } else if (a instanceof Array && null == a.__enum__) {
      if (a.length + b > this.byteLength) throw new v("set() outside of range");
      c = 0;
      for (d = a.length; c < d; ) (e = c++), (this[e + b] = a[e]);
    } else throw new v("TODO");
  };
  Vh._subarray = function (a, b) {
    b = Vh._new(this.slice(a, b));
    b.byteOffset = 8 * a;
    return b;
  };
  var Wh = function () {};
  p["js.html.compat.Uint8Array"] = Wh;
  Wh.__name__ = ["js", "html", "compat", "Uint8Array"];
  Wh._new = function (a, b, c) {
    if ("number" == typeof a) {
      c = [];
      for (b = 0; b < a; ) {
        var d = b++;
        c[d] = 0;
      }
      c.byteLength = c.length;
      c.byteOffset = 0;
      c.buffer = new Ke(c);
    } else if (u.__instanceof(a, Ke))
      null == b && (b = 0),
        null == c && (c = a.byteLength - b),
        (c = 0 == b ? a.a : a.a.slice(b, b + c)),
        (c.byteLength = c.length),
        (c.byteOffset = b),
        (c.buffer = a);
    else if (a instanceof Array && null == a.__enum__)
      (c = a.slice()),
        (c.byteLength = c.length),
        (c.byteOffset = 0),
        (c.buffer = new Ke(c));
    else throw new v("TODO " + P.string(a));
    c.subarray = Wh._subarray;
    c.set = Wh._set;
    return c;
  };
  Wh._set = function (a, b) {
    if (u.__instanceof(a.buffer, Ke)) {
      if (a.byteLength + b > this.byteLength)
        throw new v("set() outside of range");
      for (var c = 0, d = a.byteLength; c < d; ) {
        var e = c++;
        this[e + b] = a[e];
      }
    } else if (a instanceof Array && null == a.__enum__) {
      if (a.length + b > this.byteLength) throw new v("set() outside of range");
      c = 0;
      for (d = a.length; c < d; ) (e = c++), (this[e + b] = a[e]);
    } else throw new v("TODO");
  };
  Wh._subarray = function (a, b) {
    b = Wh._new(this.slice(a, b));
    b.byteOffset = a;
    return b;
  };
  var Kp = function (a) {
    this.gameDeviceCache = new Ca();
    this.parent = a;
    this.nextUpdate = this.lastUpdate = this.currentUpdate = 0;
    this.framePeriod = -1;
    tc.init();
    this.accelerometer = $f.registerSensor(Jp.ACCELEROMETER, 0);
  };
  p["lime._internal.backend.html5.HTML5Application"] = Kp;
  Kp.__name__ = ["lime", "_internal", "backend", "html5", "HTML5Application"];
  Kp.prototype = {
    gameDeviceCache: null,
    accelerometer: null,
    currentUpdate: null,
    deltaTime: null,
    framePeriod: null,
    lastUpdate: null,
    nextUpdate: null,
    parent: null,
    convertKeyCode: function (a) {
      if (65 <= a && 90 >= a) return a + 32;
      switch (a) {
        case 12:
          return 1073741980;
        case 16:
          return 1073742049;
        case 17:
          return 1073742048;
        case 18:
          return 1073742050;
        case 19:
          return 1073741896;
        case 20:
          return 1073741881;
        case 33:
          return 1073741899;
        case 34:
          return 1073741902;
        case 35:
          return 1073741901;
        case 36:
          return 1073741898;
        case 37:
          return 1073741904;
        case 38:
          return 1073741906;
        case 39:
          return 1073741903;
        case 40:
          return 1073741905;
        case 41:
          return 1073741943;
        case 43:
          return 1073741940;
        case 44:
          return 1073741894;
        case 45:
          return 1073741897;
        case 46:
          return 127;
        case 91:
          return 1073742051;
        case 92:
          return 1073742055;
        case 93:
          return 1073742055;
        case 95:
          return 1073742106;
        case 96:
          return 1073741922;
        case 97:
          return 1073741913;
        case 98:
          return 1073741914;
        case 99:
          return 1073741915;
        case 100:
          return 1073741916;
        case 101:
          return 1073741917;
        case 102:
          return 1073741918;
        case 103:
          return 1073741919;
        case 104:
          return 1073741920;
        case 105:
          return 1073741921;
        case 106:
          return 1073741909;
        case 107:
          return 1073741911;
        case 108:
          return 1073741923;
        case 109:
          return 1073741910;
        case 110:
          return 1073741923;
        case 111:
          return 1073741908;
        case 112:
          return 1073741882;
        case 113:
          return 1073741883;
        case 114:
          return 1073741884;
        case 115:
          return 1073741885;
        case 116:
          return 1073741886;
        case 117:
          return 1073741887;
        case 118:
          return 1073741888;
        case 119:
          return 1073741889;
        case 120:
          return 1073741890;
        case 121:
          return 1073741891;
        case 122:
          return 1073741892;
        case 123:
          return 1073741893;
        case 124:
          return 1073741928;
        case 125:
          return 1073741929;
        case 126:
          return 1073741930;
        case 127:
          return 1073741931;
        case 128:
          return 1073741932;
        case 129:
          return 1073741933;
        case 130:
          return 1073741934;
        case 131:
          return 1073741935;
        case 132:
          return 1073741936;
        case 133:
          return 1073741937;
        case 134:
          return 1073741938;
        case 135:
          return 1073741939;
        case 144:
          return 1073741907;
        case 145:
          return 1073741895;
        case 160:
          return 94;
        case 161:
          return 33;
        case 163:
          return 35;
        case 164:
          return 36;
        case 166:
          return 1073742094;
        case 167:
          return 1073742095;
        case 168:
          return 1073742097;
        case 169:
          return 41;
        case 170:
          return 42;
        case 171:
          return 96;
        case 172:
          return 1073741898;
        case 173:
          return 45;
        case 174:
          return 1073741953;
        case 175:
          return 1073741952;
        case 176:
          return 1073742082;
        case 177:
          return 1073742083;
        case 178:
          return 1073742084;
        case 179:
          return 1073742085;
        case 180:
          return 1073742089;
        case 181:
          return 1073742086;
        case 182:
          return 1073741953;
        case 183:
          return 1073741952;
        case 186:
          return 59;
        case 187:
          return 61;
        case 188:
          return 44;
        case 189:
          return 45;
        case 190:
          return 46;
        case 191:
          return 47;
        case 192:
          return 96;
        case 193:
          return 63;
        case 194:
          return 1073741923;
        case 219:
          return 91;
        case 220:
          return 92;
        case 221:
          return 93;
        case 222:
          return 39;
        case 223:
          return 96;
        case 224:
          return 1073742051;
        case 226:
          return 92;
      }
      return a;
    },
    exec: function () {
      window.addEventListener("keydown", B(this, this.handleKeyEvent), !1);
      window.addEventListener("keyup", B(this, this.handleKeyEvent), !1);
      window.addEventListener("focus", B(this, this.handleWindowEvent), !1);
      window.addEventListener("blur", B(this, this.handleWindowEvent), !1);
      window.addEventListener("resize", B(this, this.handleWindowEvent), !1);
      window.addEventListener(
        "beforeunload",
        B(this, this.handleWindowEvent),
        !1
      );
      window.addEventListener(
        "devicemotion",
        B(this, this.handleSensorEvent),
        !1
      );
      CanvasRenderingContext2D.prototype.isPointInStroke ||
        (CanvasRenderingContext2D.prototype.isPointInStroke = function (
          a,
          b,
          c
        ) {
          return !1;
        });
      CanvasRenderingContext2D.prototype.isPointInPath ||
        (CanvasRenderingContext2D.prototype.isPointInPath = function (a, b, c) {
          return !1;
        });
      0 == "performance" in window && (window.performance = {});
      if (0 == "now" in window.performance) {
        var a = Date.now();
        performance.timing &&
          performance.timing.navigationStart &&
          (a = performance.timing.navigationStart);
        window.performance.now = function () {
          return Date.now() - a;
        };
      }
      for (
        var b = 0, c = ["ms", "moz", "webkit", "o"], d = 0;
        d < c.length && !window.requestAnimationFrame;
        ++d
      )
        (window.requestAnimationFrame = window[c[d] + "RequestAnimationFrame"]),
          (window.cancelAnimationFrame =
            window[c[d] + "CancelAnimationFrame"] ||
            window[c[d] + "CancelRequestAnimationFrame"]);
      window.requestAnimationFrame ||
        (window.requestAnimationFrame = function (a, c) {
          var d = new Date().getTime(),
            e = Math.max(0, 16 - (d - b));
          c = window.setTimeout(function () {
            a(d + e);
          }, e);
          b = d + e;
          return c;
        });
      window.cancelAnimationFrame ||
        (window.cancelAnimationFrame = function (a) {
          clearTimeout(a);
        });
      window.requestAnimFrame = window.requestAnimationFrame;
      this.lastUpdate = new Date().getTime();
      this.handleApplicationEvent();
      return 0;
    },
    exit: function () {},
    handleApplicationEvent: function (a) {
      a = 0;
      for (var b = this.parent.__windows; a < b.length; ) {
        var c = b[a];
        ++a;
        c.__backend.updateSize();
      }
      this.updateGameDevices();
      this.currentUpdate = new Date().getTime();
      if (this.currentUpdate >= this.nextUpdate) {
        this.deltaTime = this.currentUpdate - this.lastUpdate;
        a = 0;
        for (b = this.parent.__windows; a < b.length; )
          (c = b[a]),
            ++a,
            this.parent.onUpdate.dispatch(this.deltaTime | 0),
            null != c.context && c.onRender.dispatch(c.context);
        this.nextUpdate =
          0 > this.framePeriod
            ? this.currentUpdate
            : this.currentUpdate -
              (this.currentUpdate % this.framePeriod) +
              this.framePeriod;
        this.lastUpdate = this.currentUpdate;
      }
      window.requestAnimationFrame(B(this, this.handleApplicationEvent));
    },
    handleKeyEvent: function (a) {
      if (null != this.parent.__window) {
        var b = this.convertKeyCode(null != a.keyCode ? a.keyCode : a.which),
          c =
            (a.shiftKey ? 3 : 0) |
            (a.ctrlKey ? 192 : 0) |
            (a.altKey ? 768 : 0) |
            (a.metaKey ? 3072 : 0);
        "keydown" == a.type
          ? (this.parent.__window.onKeyDown.dispatch(b, c),
            this.parent.__window.onKeyDown.canceled &&
              a.cancelable &&
              a.preventDefault())
          : (this.parent.__window.onKeyUp.dispatch(b, c),
            this.parent.__window.onKeyUp.canceled &&
              a.cancelable &&
              a.preventDefault());
      }
    },
    handleSensorEvent: function (a) {
      this.accelerometer.onUpdate.dispatch(
        a.accelerationIncludingGravity.x,
        a.accelerationIncludingGravity.y,
        a.accelerationIncludingGravity.z
      );
    },
    handleWindowEvent: function (a) {
      if (null != this.parent.__window)
        switch (a.type) {
          case "beforeunload":
            a.defaultPrevented ||
              (this.parent.__window.onClose.dispatch(),
              null != this.parent.__window &&
                this.parent.__window.onClose.canceled &&
                a.cancelable &&
                a.preventDefault());
            break;
          case "blur":
            this.parent.__window.onFocusOut.dispatch();
            this.parent.__window.onDeactivate.dispatch();
            break;
          case "focus":
            this.parent.__window.onFocusIn.dispatch();
            this.parent.__window.onActivate.dispatch();
            break;
          case "resize":
            this.parent.__window.__backend.handleResizeEvent(a);
        }
    },
    updateGameDevices: function () {
      var a = Xc.__getDeviceData();
      if (null != a)
        for (var b, c, d, e, f, g = 0, h = a.length; g < h; )
          if (((b = g++), (e = a[b]), null != e)) {
            if (!this.gameDeviceCache.h.hasOwnProperty(b)) {
              f = new Lp();
              f.id = b;
              f.connected = e.connected;
              c = 0;
              for (d = e.buttons.length; c < d; ) {
                var n = c++;
                f.buttons.push(e.buttons[n].value);
              }
              c = 0;
              for (d = e.axes.length; c < d; )
                (n = c++), f.axes.push(e.axes[n]);
              "standard" == e.mapping && (f.isGamepad = !0);
              this.gameDeviceCache.h[b] = f;
              e.connected && (Xc.__connect(b), f.isGamepad && Ld.__connect(b));
            }
            f = this.gameDeviceCache.h[b];
            d = Xc.devices.h[b];
            c = Ld.devices.h[b];
            if (e.connected) {
              for (var k = 0, m = e.buttons.length; k < m; ) {
                var l = k++;
                n = e.buttons[l].value;
                if (n != f.buttons[l]) {
                  if (6 == l)
                    d.onAxisMove.dispatch(e.axes.length, n),
                      null != c && c.onAxisMove.dispatch(4, n);
                  else if (7 == l)
                    d.onAxisMove.dispatch(e.axes.length + 1, n),
                      null != c && c.onAxisMove.dispatch(5, n);
                  else if (
                    (0 < n
                      ? d.onButtonDown.dispatch(l)
                      : d.onButtonUp.dispatch(l),
                    null != c)
                  ) {
                    switch (l) {
                      case 0:
                        b = 0;
                        break;
                      case 1:
                        b = 1;
                        break;
                      case 2:
                        b = 2;
                        break;
                      case 3:
                        b = 3;
                        break;
                      case 4:
                        b = 9;
                        break;
                      case 5:
                        b = 10;
                        break;
                      case 8:
                        b = 4;
                        break;
                      case 9:
                        b = 6;
                        break;
                      case 10:
                        b = 7;
                        break;
                      case 11:
                        b = 8;
                        break;
                      case 12:
                        b = 11;
                        break;
                      case 13:
                        b = 12;
                        break;
                      case 14:
                        b = 13;
                        break;
                      case 15:
                        b = 14;
                        break;
                      case 16:
                        b = 5;
                        break;
                      default:
                        continue;
                    }
                    0 < n
                      ? c.onButtonDown.dispatch(b)
                      : c.onButtonUp.dispatch(b);
                  }
                  f.buttons[l] = n;
                }
              }
              b = 0;
              for (n = e.axes.length; b < n; )
                (k = b++),
                  e.axes[k] != f.axes[k] &&
                    (d.onAxisMove.dispatch(k, e.axes[k]),
                    null != c && c.onAxisMove.dispatch(k, e.axes[k]),
                    (f.axes[k] = e.axes[k]));
            } else
              f.connected &&
                ((f.connected = !1), Xc.__disconnect(b), Ld.__disconnect(b));
          }
    },
    __class__: Kp,
  };
  var Lp = function () {
    this.connected = !0;
    this.buttons = [];
    this.axes = [];
  };
  p["lime._internal.backend.html5.GameDeviceData"] = Lp;
  Lp.__name__ = ["lime", "_internal", "backend", "html5", "GameDeviceData"];
  Lp.prototype = {
    connected: null,
    id: null,
    isGamepad: null,
    buttons: null,
    axes: null,
    __class__: Lp,
  };
  var Mp = function (a) {
    this.parent = a;
    this.id = -1;
    this.gain = 1;
    this.position = new qc();
  };
  p["lime._internal.backend.html5.HTML5AudioSource"] = Mp;
  Mp.__name__ = ["lime", "_internal", "backend", "html5", "HTML5AudioSource"];
  Mp.prototype = {
    completed: null,
    gain: null,
    id: null,
    length: null,
    loops: null,
    parent: null,
    playing: null,
    position: null,
    dispose: function () {},
    init: function () {},
    update: function () {},
    play: function () {
      if (
        !this.playing &&
        null != this.parent.buffer &&
        null != this.parent.buffer.__srcHowl
      ) {
        this.playing = !0;
        var a = this.getCurrentTime();
        this.completed = !1;
        var b = this.parent.buffer.__srcHowl._volume;
        this.parent.buffer.__srcHowl._volume = this.parent.get_gain();
        this.id = this.parent.buffer.__srcHowl.play();
        this.parent.buffer.__srcHowl._volume = b;
        this.setPosition(this.parent.get_position());
        this.parent.buffer.__srcHowl.on(
          "end",
          B(this, this.howl_onEnd),
          this.id
        );
        this.setCurrentTime(a);
      }
    },
    pause: function () {
      this.playing = !1;
      null != this.parent.buffer &&
        null != this.parent.buffer.__srcHowl &&
        this.parent.buffer.__srcHowl.pause(this.id);
    },
    stop: function () {
      this.playing = !1;
      null != this.parent.buffer &&
        null != this.parent.buffer.__srcHowl &&
        this.parent.buffer.__srcHowl.stop(this.id);
    },
    howl_onEnd: function () {
      this.playing = !1;
      0 < this.loops
        ? (this.loops--, this.stop(), this.play())
        : (null != this.parent.buffer &&
            null != this.parent.buffer.__srcHowl &&
            this.parent.buffer.__srcHowl.stop(this.id),
          (this.completed = !0),
          this.parent.onComplete.dispatch());
    },
    getCurrentTime: function () {
      if (-1 == this.id) return 0;
      if (this.completed) return this.getLength();
      if (null != this.parent.buffer && null != this.parent.buffer.__srcHowl) {
        var a =
          ((1e3 * this.parent.buffer.__srcHowl.seek(this.id)) | 0) -
          this.parent.offset;
        return 0 > a ? 0 : a;
      }
      return 0;
    },
    setCurrentTime: function (a) {
      if (null != this.parent.buffer && null != this.parent.buffer.__srcHowl) {
        var b = (a + this.parent.offset) / 1e3;
        0 > b && (b = 0);
        this.parent.buffer.__srcHowl.seek(b, this.id);
      }
      return a;
    },
    getGain: function () {
      return this.gain;
    },
    setGain: function (a) {
      null != this.parent.buffer &&
        null != this.parent.buffer.__srcHowl &&
        -1 != this.id &&
        this.parent.buffer.__srcHowl.volume(a, this.id);
      return (this.gain = a);
    },
    getLength: function () {
      return 0 != this.length
        ? this.length
        : null != this.parent.buffer && null != this.parent.buffer.__srcHowl
        ? (1e3 * this.parent.buffer.__srcHowl.duration()) | 0
        : 0;
    },
    setLength: function (a) {
      return (this.length = a);
    },
    getLoops: function () {
      return this.loops;
    },
    setLoops: function (a) {
      return (this.loops = a);
    },
    getPosition: function () {
      return this.position;
    },
    setPosition: function (a) {
      this.position.x = a.x;
      this.position.y = a.y;
      this.position.z = a.z;
      this.position.w = a.w;
      null != this.parent.buffer.__srcHowl &&
        null != ((Mb = this.parent.buffer.__srcHowl), B(Mb, Mb.pos)) &&
        this.parent.buffer.__srcHowl.pos(
          this.position.x,
          this.position.y,
          this.position.z,
          this.id
        );
      return this.position;
    },
    __class__: Mp,
  };
  var bb = function () {
    this.validStatus0 = new Ib("Tizen", "gi").match(window.navigator.userAgent);
  };
  p["lime._internal.backend.html5.HTML5HTTPRequest"] = bb;
  bb.__name__ = ["lime", "_internal", "backend", "html5", "HTML5HTTPRequest"];
  bb.loadImage = function (a) {
    var b = new Zd();
    bb.activeRequests < bb.requestLimit
      ? (bb.activeRequests++, bb.__loadImage(a, b))
      : bb.requestQueue.add({
          instance: null,
          uri: a,
          promise: b,
          type: "IMAGE",
        });
    return b.future;
  };
  bb.processQueue = function () {
    if (bb.activeRequests < bb.requestLimit && 0 < bb.requestQueue.length) {
      bb.activeRequests++;
      var a = bb.requestQueue.pop();
      switch (a.type) {
        case "BINARY":
          a.instance.__loadData(a.uri, a.promise);
          break;
        case "IMAGE":
          bb.__loadImage(a.uri, a.promise);
          break;
        case "TEXT":
          a.instance.__loadText(a.uri, a.promise);
          break;
        default:
          bb.activeRequests--;
      }
    }
  };
  bb.__fixHostname = function (a) {
    return null == a ? "" : a;
  };
  bb.__fixPort = function (a, b) {
    if (null == a || "" == a)
      switch (b) {
        case "ftp:":
          return "21";
        case "gopher:":
          return "70";
        case "http:":
          return "80";
        case "https:":
          return "443";
        case "ws:":
          return "80";
        case "wss:":
          return "443";
        default:
          return "";
      }
    return a;
  };
  bb.__fixProtocol = function (a) {
    return null == a || "" == a ? "http:" : a;
  };
  bb.__isSameOrigin = function (a) {
    null == bb.originElement &&
      ((bb.originElement = window.document.createElement("a")),
      (bb.originHostname = bb.__fixHostname(window.location.hostname)),
      (bb.originProtocol = bb.__fixProtocol(window.location.protocol)),
      (bb.originPort = bb.__fixPort(window.location.port, bb.originProtocol)));
    var b = bb.originElement;
    b.href = a;
    "" == b.hostname && (b.href = b.href);
    var c = bb.__fixHostname(b.hostname);
    a = bb.__fixProtocol(b.protocol);
    b = bb.__fixPort(b.port, a);
    c = "" == c || c == bb.originHostname;
    b = "" == b || b == bb.originPort;
    return "file:" != a && c ? b : !1;
  };
  bb.__loadImage = function (a, b) {
    var c = new Image();
    bb.__isSameOrigin(a) || (c.crossOrigin = "Anonymous");
    null == bb.supportsImageProgress &&
      (bb.supportsImageProgress = "onprogress" in c);
    if (bb.supportsImageProgress || ba.startsWith(a, "data:"))
      c.addEventListener(
        "load",
        function (a) {
          a = new ag(null, c.width, c.height);
          a.__srcImage = c;
          bb.activeRequests--;
          bb.processQueue();
          b.complete(new pb(a));
        },
        !1
      ),
        c.addEventListener(
          "progress",
          function (a) {
            b.progress(a.loaded, a.total);
          },
          !1
        ),
        c.addEventListener(
          "error",
          function (a) {
            bb.activeRequests--;
            bb.processQueue();
            b.error(a.detail);
          },
          !1
        ),
        (c.src = a);
    else {
      var d = new XMLHttpRequest();
      d.onload = function (a) {
        bb.activeRequests--;
        bb.processQueue();
        new pb().__fromBytes(Ra.ofData(d.response), function (a) {
          b.complete(a);
        });
      };
      d.onerror = function (a) {
        b.error(a.message);
      };
      d.onprogress = function (a) {
        a.lengthComputable && b.progress(a.loaded, a.total);
      };
      d.open("GET", a, !0);
      d.responseType = "arraybuffer";
      d.overrideMimeType("text/plain; charset=x-user-defined");
      d.send(null);
    }
  };
  bb.prototype = {
    binary: null,
    parent: null,
    request: null,
    validStatus0: null,
    cancel: function () {
      null != this.request && this.request.abort();
    },
    init: function (a) {
      this.parent = a;
    },
    load: function (a, b, c) {
      this.request = new XMLHttpRequest();
      "POST" == this.parent.method
        ? this.request.upload.addEventListener("progress", b, !1)
        : this.request.addEventListener("progress", b, !1);
      this.request.onreadystatechange = c;
      b = "";
      if (null == this.parent.data) {
        for (c = this.parent.formData.keys(); c.hasNext(); ) {
          var d = c.next();
          0 < b.length && (b += "&");
          var e = encodeURIComponent(d) + "=",
            f = this.parent.formData;
          d = P.string(null != t[d] ? f.getReserved(d) : f.h[d]);
          b += e + encodeURIComponent(d);
        }
        "GET" == this.parent.method &&
          "" != b &&
          ((a = -1 < a.indexOf("?") ? a + ("&" + b) : a + ("?" + b)), (b = ""));
      }
      this.request.open(P.string(this.parent.method), a, !0);
      0 < this.parent.timeout && (this.request.timeout = this.parent.timeout);
      this.binary && (this.request.responseType = "arraybuffer");
      a = null;
      c = 0;
      for (e = this.parent.headers; c < e.length; )
        (d = e[c]),
          ++c,
          "Content-Type" == d.name
            ? (a = d.value)
            : this.request.setRequestHeader(d.name, d.value);
      null != this.parent.contentType && (a = this.parent.contentType);
      null == a &&
        (null != this.parent.data
          ? (a = "application/octet-stream")
          : "" != b && (a = "application/x-www-form-urlencoded"));
      null != a && this.request.setRequestHeader("Content-Type", a);
      this.parent.withCredentials && (this.request.withCredentials = !0);
      null != this.parent.data
        ? this.request.send(this.parent.data.b.bufferValue)
        : this.request.send(b);
    },
    loadData: function (a) {
      var b = new Zd();
      bb.activeRequests < bb.requestLimit
        ? (bb.activeRequests++, this.__loadData(a, b))
        : bb.requestQueue.add({
            instance: this,
            uri: a,
            promise: b,
            type: "BINARY",
          });
      return b.future;
    },
    loadText: function (a) {
      var b = new Zd();
      bb.activeRequests < bb.requestLimit
        ? (bb.activeRequests++, this.__loadText(a, b))
        : bb.requestQueue.add({
            instance: this,
            uri: a,
            promise: b,
            type: "TEXT",
          });
      return b.future;
    },
    processResponse: function () {
      if (this.parent.enableResponseHeaders) {
        this.parent.responseHeaders = [];
        for (
          var a, b, c = 0, d = this.request.getAllResponseHeaders().split("\n");
          c < d.length;

        )
          (b = d[c]),
            ++c,
            (a = ba.trim(Q.substr(b, 0, b.indexOf(":")))),
            (b = ba.trim(Q.substr(b, b.indexOf(":") + 1, null))),
            "" != a && this.parent.responseHeaders.push(new pn(a, b));
      }
      this.parent.responseStatus = this.request.status;
    },
    __loadData: function (a, b) {
      var c = this;
      this.binary = !0;
      this.load(
        a,
        function (a) {
          b.progress(a.loaded, a.total);
        },
        function (a) {
          4 == c.request.readyState &&
            (null != c.request.status &&
            ((200 <= c.request.status && 400 > c.request.status) ||
              (c.validStatus0 && 0 == c.request.status))
              ? ((a = null),
                "" == c.request.responseType
                  ? null != c.request.responseText &&
                    (a = Ra.ofString(c.request.responseText))
                  : null != c.request.response &&
                    (a = Ra.ofData(c.request.response)),
                c.processResponse(),
                b.complete(a))
              : (c.processResponse(), b.error(c.request.status)),
            (c.request = null),
            bb.activeRequests--,
            bb.processQueue());
        }
      );
    },
    __loadText: function (a, b) {
      var c = this;
      this.binary = !1;
      this.load(
        a,
        function (a) {
          b.progress(a.loaded, a.total);
        },
        function (a) {
          4 == c.request.readyState &&
            (null != c.request.status &&
            ((200 <= c.request.status && 400 >= c.request.status) ||
              (c.validStatus0 && 0 == c.request.status))
              ? (c.processResponse(), b.complete(c.request.responseText))
              : (c.processResponse(), b.error(c.request.status)),
            (c.request = null),
            bb.activeRequests--,
            bb.processQueue());
        }
      );
    },
    __class__: bb,
  };
  var zb = function (a) {
    this.unusedTouchesPool = new yf();
    this.scale = 1;
    this.currentTouches = new Ca();
    this.parent = a;
    this.cursor = Ka.DEFAULT;
    this.cacheMouseY = this.cacheMouseX = 0;
    var b = a.__attributes;
    Object.prototype.hasOwnProperty.call(b, "context") || (b.context = {});
    this.renderType = b.context.type;
    Object.prototype.hasOwnProperty.call(b, "element") &&
      (a.element = b.element);
    var c = a.element;
    Object.prototype.hasOwnProperty.call(b, "allowHighDPI") &&
      b.allowHighDPI &&
      "dom" != this.renderType &&
      (this.scale = window.devicePixelRatio);
    a.__scale = this.scale;
    this.setWidth = Object.prototype.hasOwnProperty.call(b, "width")
      ? b.width
      : 0;
    this.setHeight = Object.prototype.hasOwnProperty.call(b, "height")
      ? b.height
      : 0;
    a.__width = this.setWidth;
    a.__height = this.setHeight;
    a.id = zb.windowID++;
    u.__instanceof(c, HTMLCanvasElement)
      ? (this.canvas = c)
      : "dom" == this.renderType
      ? (this.div = window.document.createElement("div"))
      : (this.canvas = window.document.createElement("canvas"));
    if (null != this.canvas) {
      var d = this.canvas.style;
      d.setProperty("-webkit-transform", "translateZ(0)", null);
      d.setProperty("transform", "translateZ(0)", null);
    } else
      null != this.div &&
        ((d = this.div.style),
        d.setProperty("-webkit-transform", "translate3D(0,0,0)", null),
        d.setProperty("transform", "translate3D(0,0,0)", null),
        (d.position = "relative"),
        (d.overflow = "hidden"),
        d.setProperty("-webkit-user-select", "none", null),
        d.setProperty("-moz-user-select", "none", null),
        d.setProperty("-ms-user-select", "none", null),
        d.setProperty("-o-user-select", "none", null));
    0 == a.__width &&
      0 == a.__height &&
      (null != c
        ? ((a.__width = c.clientWidth), (a.__height = c.clientHeight))
        : ((a.__width = window.innerWidth), (a.__height = window.innerHeight)),
      (this.cacheElementWidth = a.__width),
      (this.cacheElementHeight = a.__height),
      (this.resizeElement = !0));
    null != this.canvas
      ? ((this.canvas.width = Math.round(a.__width * this.scale)),
        (this.canvas.height = Math.round(a.__height * this.scale)),
        (this.canvas.style.width = a.__width + "px"),
        (this.canvas.style.height = a.__height + "px"))
      : ((this.div.style.width = a.__width + "px"),
        (this.div.style.height = a.__height + "px"));
    if (
      (Object.prototype.hasOwnProperty.call(b, "resizable") && b.resizable) ||
      (!Object.prototype.hasOwnProperty.call(b, "width") &&
        0 == this.setWidth &&
        0 == this.setHeight)
    )
      a.__resizable = !0;
    this.updateSize();
    if (null != c) {
      null != this.canvas
        ? c != this.canvas && c.appendChild(this.canvas)
        : c.appendChild(this.div);
      b = "mousedown mouseenter mouseleave mousemove mouseup wheel".split(" ");
      for (d = 0; d < b.length; ) {
        var e = b[d];
        ++d;
        c.addEventListener(e, B(this, this.handleMouseEvent), !0);
      }
      window.document.addEventListener(
        "dragstart",
        function (a) {
          return "img" == a.target.nodeName.toLowerCase() && a.cancelable
            ? (a.preventDefault(), !1)
            : !0;
        },
        !1
      );
      c.addEventListener(
        "contextmenu",
        B(this, this.handleContextMenuEvent),
        !0
      );
      c.addEventListener("touchstart", B(this, this.handleTouchEvent), !0);
      c.addEventListener("touchmove", B(this, this.handleTouchEvent), !0);
      c.addEventListener("touchend", B(this, this.handleTouchEvent), !0);
      c.addEventListener("touchcancel", B(this, this.handleTouchEvent), !0);
      c.addEventListener(
        "gamepadconnected",
        B(this, this.handleGamepadEvent),
        !0
      );
      c.addEventListener(
        "gamepaddisconnected",
        B(this, this.handleGamepadEvent),
        !0
      );
    }
    this.createContext();
    "webgl" == a.context.type &&
      (this.canvas.addEventListener(
        "webglcontextlost",
        B(this, this.handleContextEvent),
        !1
      ),
      this.canvas.addEventListener(
        "webglcontextrestored",
        B(this, this.handleContextEvent),
        !1
      ));
  };
  p["lime._internal.backend.html5.HTML5Window"] = zb;
  zb.__name__ = ["lime", "_internal", "backend", "html5", "HTML5Window"];
  zb.prototype = {
    canvas: null,
    div: null,
    cacheElementHeight: null,
    cacheElementWidth: null,
    cacheMouseX: null,
    cacheMouseY: null,
    cursor: null,
    currentTouches: null,
    isFullscreen: null,
    parent: null,
    primaryTouch: null,
    renderType: null,
    requestedFullscreen: null,
    resizeElement: null,
    scale: null,
    setHeight: null,
    setWidth: null,
    textInputEnabled: null,
    unusedTouchesPool: null,
    alert: function (a, b) {
      null != a && nj.alert(a);
    },
    close: function () {
      this.parent.application.__removeWindow(this.parent);
    },
    createContext: function () {
      var a = new Np(),
        b = this.parent.__attributes.context;
      a.window = this.parent;
      a.attributes = b;
      if (null != this.div)
        (a.dom = this.div), (a.type = "dom"), (a.version = "");
      else if (null != this.canvas) {
        var c = null,
          d = "canvas" == this.renderType,
          e =
            "opengl" == this.renderType ||
            "opengles" == this.renderType ||
            "webgl" == this.renderType,
          f =
            !Object.prototype.hasOwnProperty.call(b, "version") ||
            "1" != b.version,
          g = !1;
        if (
          e ||
          (!d &&
            (!Object.prototype.hasOwnProperty.call(b, "hardware") ||
              b.hardware))
        ) {
          d =
            Object.prototype.hasOwnProperty.call(b, "background") &&
            null == b.background;
          e = Object.prototype.hasOwnProperty.call(b, "colorDepth")
            ? b.colorDepth
            : 16;
          var h = Object.prototype.hasOwnProperty.call(b, "antialiasing");
          b = {
            alpha: d || 16 < e,
            antialias: h,
            depth: Object.prototype.hasOwnProperty.call(b, "depth")
              ? b.depth
              : !0,
            premultipliedAlpha: !0,
            stencil:
              Object.prototype.hasOwnProperty.call(b, "stencil") && b.stencil,
            preserveDrawingBuffer: !1,
          };
          d = ["webgl", "experimental-webgl"];
          f && d.unshift("webgl2");
          for (
            f = 0;
            f < d.length &&
            ((e = d[f]),
            ++f,
            (c = this.canvas.getContext(e, b)),
            null != c && "webgl2" == e && (g = !0),
            null == c);

          );
        }
        null == c
          ? ((a.canvas2D = this.canvas.getContext("2d")),
            (a.type = "canvas"),
            (a.version = ""))
          : ((a.webgl = yb.fromWebGL2RenderContext(c)),
            g && (a.webgl2 = c),
            null == q.context &&
              ((q.context = c), (q.type = "webgl"), (q.version = g ? 2 : 1)),
            (a.type = "webgl"),
            (a.version = g ? "2" : "1"));
      }
      this.parent.context = a;
    },
    focus: function () {},
    getCursor: function () {
      return this.cursor;
    },
    getDisplay: function () {
      return za.getDisplay(0);
    },
    getDisplayMode: function () {
      return za.getDisplay(0).currentMode;
    },
    getFrameRate: function () {
      return null == this.parent.application
        ? 0
        : 0 > this.parent.application.__backend.framePeriod
        ? 60
        : 1e3 == this.parent.application.__backend.framePeriod
        ? 0
        : 1e3 / this.parent.application.__backend.framePeriod;
    },
    getMouseLock: function () {
      return !1;
    },
    getTextInputEnabled: function () {
      return this.textInputEnabled;
    },
    handleContextEvent: function (a) {
      switch (a.type) {
        case "webglcontextlost":
          a.cancelable && a.preventDefault();
          this.parent.context = null;
          this.parent.onRenderContextLost.dispatch();
          break;
        case "webglcontextrestored":
          this.createContext(),
            this.parent.onRenderContextRestored.dispatch(this.parent.context);
      }
    },
    handleContextMenuEvent: function (a) {
      (this.parent.onMouseUp.canceled || this.parent.onMouseDown.canceled) &&
        a.cancelable &&
        a.preventDefault();
    },
    handleCutOrCopyEvent: function (a) {
      a.clipboardData.setData("text/plain", qe.get_text());
      a.cancelable && a.preventDefault();
    },
    handleFocusEvent: function (a) {
      var b = this;
      this.textInputEnabled &&
        (null == a.relatedTarget || this.isDescendent(a.relatedTarget)) &&
        af.delay(function () {
          b.textInputEnabled && zb.textInput.focus();
        }, 20);
    },
    handleFullscreenEvent: function (a) {
      if (
        null !=
        (document.fullscreenElement ||
          document.mozFullScreenElement ||
          document.webkitFullscreenElement ||
          document.msFullscreenElement)
      )
        (this.isFullscreen = !0),
          (this.parent.__fullscreen = !0),
          this.requestedFullscreen &&
            ((this.requestedFullscreen = !1),
            this.parent.onFullscreen.dispatch());
      else {
        this.isFullscreen = !1;
        this.parent.__fullscreen = !1;
        this.parent.onRestore.dispatch();
        a = [
          "fullscreenchange",
          "mozfullscreenchange",
          "webkitfullscreenchange",
          "MSFullscreenChange",
        ];
        for (
          var b = [
              "fullscreenerror",
              "mozfullscreenerror",
              "webkitfullscreenerror",
              "MSFullscreenError",
            ],
            c = 0,
            d = a.length;
          c < d;

        ) {
          var e = c++;
          window.document.removeEventListener(
            a[e],
            B(this, this.handleFullscreenEvent),
            !1
          );
          window.document.removeEventListener(
            b[e],
            B(this, this.handleFullscreenEvent),
            !1
          );
        }
      }
    },
    handleGamepadEvent: function (a) {
      switch (a.type) {
        case "gamepadconnected":
          Xc.__connect(a.gamepad.index);
          "standard" == a.gamepad.mapping && Ld.__connect(a.gamepad.index);
          break;
        case "gamepaddisconnected":
          Xc.__disconnect(a.gamepad.index), Ld.__disconnect(a.gamepad.index);
      }
    },
    handleInputEvent: function (a) {
      zb.textInput.value != zb.dummyCharacter &&
        ((a = ba.replace(zb.textInput.value, zb.dummyCharacter, "")),
        0 < a.length && this.parent.onTextInput.dispatch(a),
        (zb.textInput.value = zb.dummyCharacter));
    },
    handleMouseEvent: function (a) {
      if ("wheel" != a.type) {
        if (null != this.parent.element)
          if (null != this.canvas) {
            var b = this.canvas.getBoundingClientRect();
            var c = (this.parent.__width / b.width) * (a.clientX - b.left);
            b = (this.parent.__height / b.height) * (a.clientY - b.top);
          } else
            null != this.div
              ? ((b = this.div.getBoundingClientRect()),
                (c = a.clientX - b.left),
                (b = a.clientY - b.top))
              : ((b = this.parent.element.getBoundingClientRect()),
                (c = (this.parent.__width / b.width) * (a.clientX - b.left)),
                (b = (this.parent.__height / b.height) * (a.clientY - b.top)));
        else (c = a.clientX), (b = a.clientY);
        switch (a.type) {
          case "mousedown":
            a.currentTarget == this.parent.element &&
              window.addEventListener(
                "mouseup",
                B(this, this.handleMouseEvent)
              );
            this.parent.onMouseDown.dispatch(c, b, a.button);
            this.parent.onMouseDown.canceled &&
              a.cancelable &&
              a.preventDefault();
            break;
          case "mouseenter":
            a.target == this.parent.element &&
              (this.parent.onEnter.dispatch(),
              this.parent.onEnter.canceled &&
                a.cancelable &&
                a.preventDefault());
            break;
          case "mouseleave":
            a.target == this.parent.element &&
              (this.parent.onLeave.dispatch(),
              this.parent.onLeave.canceled &&
                a.cancelable &&
                a.preventDefault());
            break;
          case "mousemove":
            if (c != this.cacheMouseX || b != this.cacheMouseY)
              this.parent.onMouseMove.dispatch(c, b),
                this.parent.onMouseMoveRelative.dispatch(
                  c - this.cacheMouseX,
                  b - this.cacheMouseY
                ),
                (this.parent.onMouseMove.canceled ||
                  this.parent.onMouseMoveRelative.canceled) &&
                  a.cancelable &&
                  a.preventDefault();
            break;
          case "mouseup":
            window.removeEventListener(
              "mouseup",
              B(this, this.handleMouseEvent)
            ),
              a.currentTarget == this.parent.element && a.stopPropagation(),
              this.parent.onMouseUp.dispatch(c, b, a.button),
              this.parent.onMouseUp.canceled &&
                a.cancelable &&
                a.preventDefault();
        }
        this.cacheMouseX = c;
        this.cacheMouseY = b;
      } else {
        switch (a.deltaMode) {
          case 0:
            c = ze.PIXELS;
            break;
          case 1:
            c = ze.LINES;
            break;
          case 2:
            c = ze.PAGES;
            break;
          default:
            c = ze.UNKNOWN;
        }
        this.parent.onMouseWheel.dispatch(a.deltaX, -a.deltaY, c);
        this.parent.onMouseWheel.canceled && a.cancelable && a.preventDefault();
      }
    },
    handlePasteEvent: function (a) {
      if (-1 < a.clipboardData.types.indexOf("text/plain")) {
        var b = a.clipboardData.getData("text/plain");
        qe.set_text(b);
        this.textInputEnabled && this.parent.onTextInput.dispatch(b);
        a.cancelable && a.preventDefault();
      }
    },
    handleResizeEvent: function (a) {
      this.primaryTouch = null;
      this.updateSize();
    },
    handleTouchEvent: function (a) {
      a.cancelable && a.preventDefault();
      var b = null;
      null != this.parent.element &&
        (b =
          null != this.canvas
            ? this.canvas.getBoundingClientRect()
            : null != this.div
            ? this.div.getBoundingClientRect()
            : this.parent.element.getBoundingClientRect());
      var c = this.setWidth,
        d = this.setHeight;
      if (0 == c || 0 == d)
        null != b ? ((c = b.width), (d = b.height)) : (d = c = 1);
      for (var e, f, g, h, n, k = 0, m = a.changedTouches; k < m.length; ) {
        var l = m[k];
        ++k;
        null != b
          ? ((f = (c / b.width) * (l.clientX - b.left)),
            (g = (d / b.height) * (l.clientY - b.top)))
          : ((f = l.clientX), (g = l.clientY));
        if ("touchstart" == a.type)
          (e = this.unusedTouchesPool.pop()),
            null == e
              ? (e = new pd(
                  f / c,
                  g / d,
                  l.identifier,
                  0,
                  0,
                  l.force,
                  this.parent.id
                ))
              : ((e.x = f / c),
                (e.y = g / d),
                (e.id = l.identifier),
                (e.dx = 0),
                (e.dy = 0),
                (e.pressure = l.force),
                (e.device = this.parent.id)),
            (this.currentTouches.h[l.identifier] = e),
            pd.onStart.dispatch(e),
            null == this.primaryTouch && (this.primaryTouch = e),
            e == this.primaryTouch && this.parent.onMouseDown.dispatch(f, g, 0);
        else if (((e = this.currentTouches.h[l.identifier]), null != e))
          switch (
            ((h = e.x),
            (n = e.y),
            (e.x = f / c),
            (e.y = g / d),
            (e.dx = e.x - h),
            (e.dy = e.y - n),
            (e.pressure = l.force),
            a.type)
          ) {
            case "touchcancel":
              pd.onCancel.dispatch(e);
              this.currentTouches.remove(l.identifier);
              this.unusedTouchesPool.add(e);
              e == this.primaryTouch && (this.primaryTouch = null);
              break;
            case "touchend":
              pd.onEnd.dispatch(e);
              this.currentTouches.remove(l.identifier);
              this.unusedTouchesPool.add(e);
              e == this.primaryTouch &&
                (this.parent.onMouseUp.dispatch(f, g, 0),
                (this.primaryTouch = null));
              break;
            case "touchmove":
              pd.onMove.dispatch(e),
                e == this.primaryTouch &&
                  this.parent.onMouseMove.dispatch(f, g);
          }
      }
    },
    isDescendent: function (a) {
      if (a == this.parent.element) return !0;
      for (; null != a; ) {
        if (a.parentNode == this.parent.element) return !0;
        a = a.parentNode;
      }
      return !1;
    },
    move: function (a, b) {},
    readPixels: function (a) {
      if (null != this.canvas) {
        var b = new Td(0, 0, this.canvas.width, this.canvas.height);
        null == a ? (a = b) : a.intersection(b, a);
        if (0 < a.width && 0 < a.height)
          return (
            (b = window.document.createElement("canvas")),
            (b.width = a.width | 0),
            (b.height = a.height | 0),
            b.getContext("2d").drawImage(this.canvas, -a.x, -a.y),
            pb.fromCanvas(b)
          );
      }
      return null;
    },
    resize: function (a, b) {},
    setBorderless: function (a) {
      return a;
    },
    setClipboard: function (a) {
      var b = this.textInputEnabled;
      this.setTextInputEnabled(!0);
      var c = zb.textInput.value;
      zb.textInput.value = a;
      zb.textInput.select();
      window.document.queryCommandEnabled("copy") &&
        window.document.execCommand("copy");
      zb.textInput.value = c;
      this.setTextInputEnabled(b);
    },
    setCursor: function (a) {
      if (this.cursor != a) {
        if (null == a) this.parent.element.style.cursor = "none";
        else {
          switch (a[1]) {
            case 0:
              var b = "default";
              break;
            case 1:
              b = "crosshair";
              break;
            case 3:
              b = "move";
              break;
            case 4:
              b = "pointer";
              break;
            case 5:
              b = "nesw-resize";
              break;
            case 6:
              b = "ns-resize";
              break;
            case 7:
              b = "nwse-resize";
              break;
            case 8:
              b = "ew-resize";
              break;
            case 9:
              b = "text";
              break;
            case 10:
              b = "wait";
              break;
            case 11:
              b = "wait";
              break;
            default:
              b = "auto";
          }
          this.parent.element.style.cursor = b;
        }
        this.cursor = a;
      }
      return this.cursor;
    },
    setDisplayMode: function (a) {
      return a;
    },
    setFrameRate: function (a) {
      null != this.parent.application &&
        (60 <= a
          ? this.parent == this.parent.application.__window &&
            (this.parent.application.__backend.framePeriod = -1)
          : 0 < a
          ? this.parent == this.parent.application.__window &&
            (this.parent.application.__backend.framePeriod = 1e3 / a)
          : this.parent == this.parent.application.__window &&
            (this.parent.application.__backend.framePeriod = 1e3));
      return a;
    },
    setFullscreen: function (a) {
      a
        ? this.requestedFullscreen ||
          this.isFullscreen ||
          ((this.requestedFullscreen = !0),
          ((Mb = this.parent.element), B(Mb, Mb.requestFullscreen))
            ? (document.addEventListener(
                "fullscreenchange",
                B(this, this.handleFullscreenEvent),
                !1
              ),
              document.addEventListener(
                "fullscreenerror",
                B(this, this.handleFullscreenEvent),
                !1
              ),
              this.parent.element.requestFullscreen())
            : this.parent.element.mozRequestFullScreen
            ? (document.addEventListener(
                "mozfullscreenchange",
                B(this, this.handleFullscreenEvent),
                !1
              ),
              document.addEventListener(
                "mozfullscreenerror",
                B(this, this.handleFullscreenEvent),
                !1
              ),
              this.parent.element.mozRequestFullScreen())
            : this.parent.element.webkitRequestFullscreen
            ? (document.addEventListener(
                "webkitfullscreenchange",
                B(this, this.handleFullscreenEvent),
                !1
              ),
              document.addEventListener(
                "webkitfullscreenerror",
                B(this, this.handleFullscreenEvent),
                !1
              ),
              this.parent.element.webkitRequestFullscreen())
            : this.parent.element.msRequestFullscreen &&
              (document.addEventListener(
                "MSFullscreenChange",
                B(this, this.handleFullscreenEvent),
                !1
              ),
              document.addEventListener(
                "MSFullscreenError",
                B(this, this.handleFullscreenEvent),
                !1
              ),
              this.parent.element.msRequestFullscreen()))
        : this.isFullscreen &&
          ((this.requestedFullscreen = !1),
          document.exitFullscreen
            ? document.exitFullscreen()
            : document.mozCancelFullScreen
            ? document.mozCancelFullScreen()
            : document.webkitExitFullscreen
            ? document.webkitExitFullscreen()
            : document.msExitFullscreen && document.msExitFullscreen());
      return a;
    },
    setIcon: function (a) {
      pa.convertToCanvas(a);
      var b = window.document.querySelector("link[rel*='icon']");
      null == b && (b = window.document.createElement("link"));
      b.type = "image/x-icon";
      b.rel = "shortcut icon";
      b.href = a.buffer.get_src().toDataURL("image/x-icon");
      window.document.getElementsByTagName("head")[0].appendChild(b);
    },
    setMaximized: function (a) {
      return !1;
    },
    setMinimized: function (a) {
      return !1;
    },
    setMouseLock: function (a) {},
    setResizable: function (a) {
      return a;
    },
    setTextInputEnabled: function (a) {
      a
        ? (null == zb.textInput &&
            ((zb.textInput = window.document.createElement("input")),
            (zb.textInput.type = "text"),
            (zb.textInput.style.position = "absolute"),
            (zb.textInput.style.opacity = "0"),
            (zb.textInput.style.color = "transparent"),
            (zb.textInput.value = zb.dummyCharacter),
            (zb.textInput.autocapitalize = "off"),
            (zb.textInput.autocorrect = "off"),
            (zb.textInput.autocomplete = "off"),
            (zb.textInput.style.left = "0px"),
            (zb.textInput.style.top = "50%"),
            new Ib("(iPad|iPhone|iPod).*OS 8_", "gi").match(
              window.navigator.userAgent
            )
              ? ((zb.textInput.style.fontSize = "0px"),
                (zb.textInput.style.width = "0px"),
                (zb.textInput.style.height = "0px"))
              : ((zb.textInput.style.width = "1px"),
                (zb.textInput.style.height = "1px")),
            (zb.textInput.style.pointerEvents = "none"),
            (zb.textInput.style.zIndex = "-10000000")),
          null == zb.textInput.parentNode &&
            this.parent.element.appendChild(zb.textInput),
          this.textInputEnabled ||
            (zb.textInput.addEventListener(
              "input",
              B(this, this.handleInputEvent),
              !0
            ),
            zb.textInput.addEventListener(
              "blur",
              B(this, this.handleFocusEvent),
              !0
            ),
            zb.textInput.addEventListener(
              "cut",
              B(this, this.handleCutOrCopyEvent),
              !0
            ),
            zb.textInput.addEventListener(
              "copy",
              B(this, this.handleCutOrCopyEvent),
              !0
            ),
            zb.textInput.addEventListener(
              "paste",
              B(this, this.handlePasteEvent),
              !0
            )),
          zb.textInput.focus(),
          zb.textInput.select())
        : null != zb.textInput &&
          (zb.textInput.removeEventListener(
            "input",
            B(this, this.handleInputEvent),
            !0
          ),
          zb.textInput.removeEventListener(
            "blur",
            B(this, this.handleFocusEvent),
            !0
          ),
          zb.textInput.removeEventListener(
            "cut",
            B(this, this.handleCutOrCopyEvent),
            !0
          ),
          zb.textInput.removeEventListener(
            "copy",
            B(this, this.handleCutOrCopyEvent),
            !0
          ),
          zb.textInput.removeEventListener(
            "paste",
            B(this, this.handlePasteEvent),
            !0
          ),
          zb.textInput.blur());
      return (this.textInputEnabled = a);
    },
    setTitle: function (a) {
      null != a && (window.document.title = a);
      return a;
    },
    updateSize: function () {
      if (this.parent.__resizable) {
        if (null != this.parent.element) {
          var a = this.parent.element.clientWidth;
          var b = this.parent.element.clientHeight;
        } else (a = window.innerWidth), (b = window.innerHeight);
        if (a != this.cacheElementWidth || b != this.cacheElementHeight) {
          this.cacheElementWidth = a;
          this.cacheElementHeight = b;
          var c =
            this.resizeElement || (0 == this.setWidth && 0 == this.setHeight);
          if (
            null != this.parent.element &&
            (null == this.div || (null != this.div && c))
          )
            if (c) {
              if (this.parent.__width != a || this.parent.__height != b)
                (this.parent.__width = a),
                  (this.parent.__height = b),
                  null != this.canvas
                    ? this.parent.element != this.canvas &&
                      ((this.canvas.width = Math.round(a * this.scale)),
                      (this.canvas.height = Math.round(b * this.scale)),
                      (this.canvas.style.width = a + "px"),
                      (this.canvas.style.height = b + "px"))
                    : ((this.div.style.width = a + "px"),
                      (this.div.style.height = b + "px")),
                  this.parent.onResize.dispatch(a, b);
            } else {
              c = 0 != this.setWidth ? a / this.setWidth : 1;
              var d = 0 != this.setHeight ? b / this.setHeight : 1,
                e = a,
                f = b,
                g = 0,
                h = 0;
              c < d
                ? ((f = Math.floor(this.setHeight * c)),
                  (h = Math.floor((b - f) / 2)))
                : ((e = Math.floor(this.setWidth * d)),
                  (g = Math.floor((a - e) / 2)));
              null != this.canvas
                ? this.parent.element != this.canvas &&
                  ((this.canvas.style.width = e + "px"),
                  (this.canvas.style.height = f + "px"),
                  (this.canvas.style.marginLeft = g + "px"),
                  (this.canvas.style.marginTop = h + "px"))
                : ((this.div.style.width = e + "px"),
                  (this.div.style.height = f + "px"),
                  (this.div.style.marginLeft = g + "px"),
                  (this.div.style.marginTop = h + "px"));
            }
        }
      }
    },
    warpMouse: function (a, b) {},
    __class__: zb,
  };
  var au = function () {};
  p["lime._internal.backend.native.NativeCFFI"] = au;
  au.__name__ = ["lime", "_internal", "backend", "native", "NativeCFFI"];
  var Ns = function () {};
  p["lime._internal.format.BMP"] = Ns;
  Ns.__name__ = ["lime", "_internal", "format", "BMP"];
  Ns.encode = function (a, b) {
    if (a.get_premultiplied() || 0 != a.get_format())
      (a = a.clone()), a.set_premultiplied(!1), a.set_format(0);
    null == b && (b = of.RGB);
    var c = 14,
      d = 40,
      e = a.width * a.height * 4;
    if (null != b)
      switch (b[1]) {
        case 0:
          e = (3 * a.width + ((3 * a.width) % 4)) * a.height;
          break;
        case 1:
          d = 108;
          break;
        case 2:
          (c = 0), (e += a.width * a.height);
      }
    var f = new Ra(new Je(c + d + e)),
      g = 0;
    0 < c &&
      ((f.b[g++] = 66),
      (f.b[g++] = 77),
      f.setInt32(g, f.length),
      (g += 4),
      f.setUInt16(g, 0),
      (g += 2),
      f.setUInt16(g, 0),
      (g += 2),
      f.setInt32(g, c + d),
      (g += 4));
    f.setInt32(g, d);
    g += 4;
    f.setInt32(g, a.width);
    g += 4;
    f.setInt32(g, b == of.ICO ? 2 * a.height : a.height);
    g += 4;
    f.setUInt16(g, 1);
    g += 2;
    f.setUInt16(g, b == of.RGB ? 24 : 32);
    g += 2;
    f.setInt32(g, b == of.BITFIELD ? 3 : 0);
    g += 4;
    f.setInt32(g, e);
    g += 4;
    f.setInt32(g, 11824);
    g += 4;
    f.setInt32(g, 11824);
    g += 4;
    f.setInt32(g, 0);
    g += 4;
    f.setInt32(g, 0);
    g += 4;
    if (b == of.BITFIELD)
      for (
        f.setInt32(g, 16711680),
          g += 4,
          f.setInt32(g, 65280),
          g += 4,
          f.setInt32(g, 255),
          g += 4,
          f.setInt32(g, -16777216),
          g += 4,
          f.b[g++] = 32,
          f.b[g++] = 110,
          f.b[g++] = 105,
          f.b[g++] = 87,
          c = 0;
        48 > c;

      )
        c++, (f.b[g++] = 0);
    c = a.getPixels(new Td(0, 0, a.width, a.height), 1);
    if (null != b)
      switch (b[1]) {
        case 0:
          var h = 0;
          for (var n = a.height; h < n; ) {
            b = h++;
            b = 4 * (a.height - 1 - b) * a.width;
            for (var k = 0, m = a.width; k < m; ) {
              k++;
              b++;
              d = c.b[b++];
              e = c.b[b++];
              var l = c.b[b++];
              f.b[g++] = l & 255;
              f.b[g++] = e & 255;
              f.b[g++] = d & 255;
            }
            b = 0;
            for (d = (3 * a.width) % 4; b < d; ) b++, (f.b[g++] = 0);
          }
          break;
        case 1:
          n = 0;
          for (k = a.height; n < k; ) {
            b = n++;
            b = 4 * (a.height - 1 - b) * a.width;
            m = 0;
            for (var p = a.width; m < p; )
              m++,
                (h = c.b[b++]),
                (d = c.b[b++]),
                (e = c.b[b++]),
                (l = c.b[b++]),
                (f.b[g++] = l & 255),
                (f.b[g++] = e & 255),
                (f.b[g++] = d & 255),
                (f.b[g++] = h & 255);
          }
          break;
        case 2:
          n = new Ra(new Je(a.width * a.height));
          m = k = 0;
          for (p = a.height; m < p; ) {
            b = m++;
            b = 4 * (a.height - 1 - b) * a.width;
            for (var r = 0, q = a.width; r < q; )
              r++,
                (h = c.b[b++]),
                (d = c.b[b++]),
                (e = c.b[b++]),
                (l = c.b[b++]),
                (f.b[g++] = l & 255),
                (f.b[g++] = e & 255),
                (f.b[g++] = d & 255),
                (f.b[g++] = h & 255),
                (n.b[k++] = 0);
          }
          f.blit(g, n, 0, a.width * a.height);
      }
    return f;
  };
  var of = (p["lime._internal.format.BMPType"] = {
    __ename__: ["lime", "_internal", "format", "BMPType"],
    __constructs__: ["RGB", "BITFIELD", "ICO"],
  });
  of.RGB = ["RGB", 0];
  of.RGB.toString = M;
  of.RGB.__enum__ = of;
  of.BITFIELD = ["BITFIELD", 1];
  of.BITFIELD.toString = M;
  of.BITFIELD.__enum__ = of;
  of.ICO = ["ICO", 2];
  of.ICO.toString = M;
  of.ICO.__enum__ = of;
  var qn = function () {};
  p["lime._internal.format.Deflate"] = qn;
  qn.__name__ = ["lime", "_internal", "format", "Deflate"];
  qn.compress = function (a) {
    a = pako.deflateRaw(a.b.bufferValue);
    return Ra.ofData(a);
  };
  qn.decompress = function (a) {
    a = pako.inflateRaw(a.b.bufferValue);
    return Ra.ofData(a);
  };
  var rn = function () {};
  p["lime._internal.format.GZip"] = rn;
  rn.__name__ = ["lime", "_internal", "format", "GZip"];
  rn.compress = function (a) {
    a = pako.gzip(a.b.bufferValue);
    return Ra.ofData(a);
  };
  rn.decompress = function (a) {
    a = pako.ungzip(a.b.bufferValue);
    return Ra.ofData(a);
  };
  var sn = function () {};
  p["lime._internal.format.JPEG"] = sn;
  sn.__name__ = ["lime", "_internal", "format", "JPEG"];
  sn.decodeBytes = function (a, b) {
    return null;
  };
  sn.decodeFile = function (a, b) {
    return null;
  };
  sn.encode = function (a, b) {
    if (a.get_premultiplied() || 0 != a.get_format())
      (a = a.clone()), a.set_premultiplied(!1), a.set_format(0);
    pa.convertToCanvas(a, !1);
    if (null != a.buffer.__srcCanvas) {
      a = a.buffer.__srcCanvas.toDataURL("image/jpeg", b / 100);
      a = window.atob(a.split(";base64,")[1]);
      b = new Ra(new Je(a.length));
      for (var c = 0, d = a.length; c < d; ) {
        var e = c++,
          f = Q.cca(a, e);
        b.b[e] = f & 255;
      }
      return b;
    }
    return null;
  };
  var tn = function () {};
  p["lime._internal.format.LZMA"] = tn;
  tn.__name__ = ["lime", "_internal", "format", "LZMA"];
  tn.compress = function (a) {
    return null;
  };
  tn.decompress = function (a) {
    return null;
  };
  var yk = function () {};
  p["lime._internal.format.PNG"] = yk;
  yk.__name__ = ["lime", "_internal", "format", "PNG"];
  yk.decodeBytes = function (a, b) {
    return null;
  };
  yk.decodeFile = function (a, b) {
    return null;
  };
  yk.encode = function (a) {
    if (a.get_premultiplied() || 0 != a.get_format())
      (a = a.clone()), a.set_premultiplied(!1), a.set_format(0);
    pa.convertToCanvas(a, !1);
    if (null != a.buffer.__srcCanvas) {
      a = a.buffer.__srcCanvas.toDataURL("image/png");
      a = window.atob(a.split(";base64,")[1]);
      for (var b = new Ra(new Je(a.length)), c = 0, d = a.length; c < d; ) {
        var e = c++,
          f = Q.cca(a, e);
        b.b[e] = f & 255;
      }
      return b;
    }
    return null;
  };
  var un = function () {};
  p["lime._internal.format.Zlib"] = un;
  un.__name__ = ["lime", "_internal", "format", "Zlib"];
  un.compress = function (a) {
    a = pako.deflate(a.b.bufferValue);
    return Ra.ofData(a);
  };
  un.decompress = function (a) {
    a = pako.inflate(a.b.bufferValue);
    return Ra.ofData(a);
  };
  var pa = function () {};
  p["lime._internal.graphics.ImageCanvasUtil"] = pa;
  pa.__name__ = ["lime", "_internal", "graphics", "ImageCanvasUtil"];
  pa.colorTransform = function (a, b, c) {
    pa.convertToData(a);
    Z.colorTransform(a, b, c);
  };
  pa.convertToCanvas = function (a, b) {
    null == b && (b = !1);
    var c = a.buffer;
    null != c.__srcImage
      ? (null == c.__srcCanvas &&
          (pa.createCanvas(a, c.__srcImage.width, c.__srcImage.height),
          c.__srcContext.drawImage(c.__srcImage, 0, 0)),
        (c.__srcImage = null))
      : null == c.__srcCanvas && null != c.data
      ? (a.set_transparent(!0),
        pa.createCanvas(a, c.width, c.height),
        pa.createImageData(a),
        c.__srcContext.putImageData(c.__srcImageData, 0, 0))
      : a.type == Pc.DATA &&
        null != c.__srcImageData &&
        a.dirty &&
        (c.__srcContext.putImageData(c.__srcImageData, 0, 0), (a.dirty = !1));
    b
      ? ((c.data = null), (c.__srcImageData = null))
      : null == c.data &&
        null != c.__srcImageData &&
        (c.data = c.__srcImageData.data);
    a.type = Pc.CANVAS;
  };
  pa.convertToData = function (a, b) {
    null == b && (b = !1);
    var c = a.buffer;
    null != c.__srcImage && pa.convertToCanvas(a);
    if (null != c.__srcCanvas && null == c.data)
      pa.createImageData(a), a.type == Pc.CANVAS && (a.dirty = !1);
    else if (a.type == Pc.CANVAS && null != c.__srcCanvas && a.dirty) {
      if (null == c.__srcImageData) pa.createImageData(a);
      else {
        c.__srcImageData = c.__srcContext.getImageData(0, 0, c.width, c.height);
        var d = c.__srcImageData.data.buffer;
        d = null != d ? new lb(d) : null;
        c.data = d;
      }
      a.dirty = !1;
    }
    b && ((a.buffer.__srcCanvas = null), (a.buffer.__srcContext = null));
    a.type = Pc.DATA;
  };
  pa.copyChannel = function (a, b, c, d, e, f) {
    pa.convertToData(b);
    pa.convertToData(a);
    Z.copyChannel(a, b, c, d, e, f);
  };
  pa.copyPixels = function (a, b, c, d, e, f, g) {
    null == g && (g = !1);
    null == d ||
      d.x >= a.width ||
      d.y >= a.height ||
      null == c ||
      1 > c.width ||
      1 > c.height ||
      (null != e &&
        e.get_transparent() &&
        (null == f && (f = new xd()),
        (b = a.clone()),
        b.copyChannel(
          e,
          new Td(f.x, f.y, c.width, c.height),
          new xd(c.x, c.y),
          cd.ALPHA,
          cd.ALPHA
        )),
      pa.convertToCanvas(a, !0),
      g ||
        (a.get_transparent() &&
          b.get_transparent() &&
          a.buffer.__srcContext.clearRect(
            d.x + a.offsetX,
            d.y + a.offsetY,
            c.width + a.offsetX,
            c.height + a.offsetY
          )),
      pa.convertToCanvas(b),
      null != b.buffer.get_src() &&
        ((a.buffer.__srcContext.globalCompositeOperation = "source-over"),
        a.buffer.__srcContext.drawImage(
          b.buffer.get_src(),
          (c.x + b.offsetX) | 0,
          (c.y + b.offsetY) | 0,
          c.width | 0,
          c.height | 0,
          (d.x + a.offsetX) | 0,
          (d.y + a.offsetY) | 0,
          c.width | 0,
          c.height | 0
        )),
      (a.dirty = !0),
      a.version++);
  };
  pa.createCanvas = function (a, b, c) {
    var d = a.buffer;
    null == d.__srcCanvas &&
      ((d.__srcCanvas = window.document.createElement("canvas")),
      (d.__srcCanvas.width = b),
      (d.__srcCanvas.height = c),
      a.get_transparent()
        ? (d.__srcContext = d.__srcCanvas.getContext("2d"))
        : (a.get_transparent() ||
            d.__srcCanvas.setAttribute("moz-opaque", "true"),
          (d.__srcContext = d.__srcCanvas.getContext("2d", { alpha: !1 }))),
      (d.__srcContext.imageSmoothingEnabled = !1));
  };
  pa.createImageData = function (a) {
    a = a.buffer;
    if (null == a.__srcImageData) {
      null == a.data
        ? (a.__srcImageData = a.__srcContext.getImageData(
            0,
            0,
            a.width,
            a.height
          ))
        : ((a.__srcImageData = a.__srcContext.createImageData(
            a.width,
            a.height
          )),
          a.__srcImageData.data.set(a.data));
      var b = a.__srcImageData.data.buffer;
      b = null != b ? new lb(b) : null;
      a.data = b;
    }
  };
  pa.fillRect = function (a, b, c, d) {
    pa.convertToCanvas(a);
    if (1 == d) {
      d = (c >> 16) & 255;
      var e = (c >> 8) & 255;
      var f = c & 255;
      c = a.get_transparent() ? (c >> 24) & 255 : 255;
    } else
      (d = (c >> 24) & 255),
        (e = (c >> 16) & 255),
        (f = (c >> 8) & 255),
        (c = a.get_transparent() ? c & 255 : 255);
    0 == b.x &&
    0 == b.y &&
    b.width == a.width &&
    b.height == a.height &&
    a.get_transparent() &&
    0 == c
      ? (a.buffer.__srcCanvas.width = a.buffer.width)
      : (255 > c &&
          a.buffer.__srcContext.clearRect(
            b.x + a.offsetX,
            b.y + a.offsetY,
            b.width + a.offsetX,
            b.height + a.offsetY
          ),
        0 < c &&
          ((a.buffer.__srcContext.fillStyle =
            "rgba(" + d + ", " + e + ", " + f + ", " + c / 255 + ")"),
          a.buffer.__srcContext.fillRect(
            b.x + a.offsetX,
            b.y + a.offsetY,
            b.width + a.offsetX,
            b.height + a.offsetY
          )),
        (a.dirty = !0),
        a.version++);
  };
  pa.floodFill = function (a, b, c, d, e) {
    pa.convertToData(a);
    Z.floodFill(a, b, c, d, e);
  };
  pa.getPixel = function (a, b, c, d) {
    pa.convertToData(a);
    return Z.getPixel(a, b, c, d);
  };
  pa.getPixel32 = function (a, b, c, d) {
    pa.convertToData(a);
    return Z.getPixel32(a, b, c, d);
  };
  pa.getPixels = function (a, b, c) {
    pa.convertToData(a);
    return Z.getPixels(a, b, c);
  };
  pa.merge = function (a, b, c, d, e, f, g, h) {
    pa.convertToData(b);
    pa.convertToData(a);
    Z.merge(a, b, c, d, e, f, g, h);
  };
  pa.resize = function (a, b, c) {
    var d = a.buffer;
    if (null == d.__srcCanvas)
      pa.createCanvas(a, b, c),
        d.__srcContext.drawImage(d.get_src(), 0, 0, b, c);
    else {
      pa.convertToCanvas(a, !0);
      var e = d.__srcCanvas;
      d.__srcCanvas = null;
      pa.createCanvas(a, b, c);
      d.__srcContext.drawImage(e, 0, 0, b, c);
    }
    d.__srcImageData = null;
    d.data = null;
    a.dirty = !0;
    a.version++;
  };
  pa.scroll = function (a, b, c) {
    if (0 != b % a.width || 0 != c % a.height) {
      var d = a.clone();
      pa.convertToCanvas(a, !0);
      a.buffer.__srcContext.clearRect(b, c, a.width, a.height);
      a.buffer.__srcContext.drawImage(d.get_src(), b, c);
      a.dirty = !0;
      a.version++;
    }
  };
  pa.setPixel = function (a, b, c, d, e) {
    pa.convertToData(a);
    Z.setPixel(a, b, c, d, e);
  };
  pa.setPixel32 = function (a, b, c, d, e) {
    pa.convertToData(a);
    Z.setPixel32(a, b, c, d, e);
  };
  pa.setPixels = function (a, b, c, d, e) {
    pa.convertToData(a);
    Z.setPixels(a, b, c, d, e);
  };
  pa.sync = function (a, b) {
    null != a &&
      (a.type != Pc.CANVAS ||
      (null == a.buffer.__srcCanvas && null == a.buffer.data)
        ? a.type == Pc.DATA && pa.convertToData(a, b)
        : pa.convertToCanvas(a, b));
  };
  var Z = function () {};
  p["lime._internal.graphics.ImageDataUtil"] = Z;
  Z.__name__ = ["lime", "_internal", "graphics", "ImageDataUtil"];
  Z.displaceMap = function (a, b, c, d, e, f, g) {
    var h = a.buffer.data,
      n = b.buffer.data,
      k = c.buffer.data,
      m = a.buffer.format,
      l = b.buffer.format,
      p = c.buffer.format,
      r = a.get_premultiplied(),
      q = b.get_premultiplied(),
      t = c.get_premultiplied();
    b = new Se(b);
    c = new Se(c);
    for (var u, x, v, w, B, A, y, z, D, E, F, K, H = 0, J = b.height; H < J; ) {
      var I = H++;
      u = b.byteOffset + b.stride * I;
      for (var M = 0, N = b.width; M < N; ) {
        var L = M++;
        x = u + 4 * L;
        y = d.x | 0;
        B = d.y | 0;
        if (g) {
          w = b.byteOffset + b.stride * (I - B + 1) + 4 * (L - y);
          switch (p) {
            case 0:
              z =
                ((k[w] & 255) << 24) |
                ((k[w + 1] & 255) << 16) |
                ((k[w + 2] & 255) << 8) |
                (k[w + 3] & 255);
              break;
            case 1:
              z =
                ((k[w + 1] & 255) << 24) |
                ((k[w + 2] & 255) << 16) |
                ((k[w + 3] & 255) << 8) |
                (k[w] & 255);
              break;
            case 2:
              z =
                ((k[w + 2] & 255) << 24) |
                ((k[w + 1] & 255) << 16) |
                ((k[w] & 255) << 8) |
                (k[w + 3] & 255);
          }
          t &&
            0 != (z & 255) &&
            255 != (z & 255) &&
            ((C.unmult = 255 / (z & 255)),
            (z =
              ((C.__clamp[Math.round(((z >>> 24) & 255) * C.unmult)] & 255) <<
                24) |
              ((C.__clamp[Math.round(((z >>> 16) & 255) * C.unmult)] & 255) <<
                16) |
              ((C.__clamp[Math.round(((z >>> 8) & 255) * C.unmult)] & 255) <<
                8) |
              (z & 255)));
          w = b.byteOffset + b.stride * (I - B) + 4 * (L - y + 1);
          switch (p) {
            case 0:
              D =
                ((k[w] & 255) << 24) |
                ((k[w + 1] & 255) << 16) |
                ((k[w + 2] & 255) << 8) |
                (k[w + 3] & 255);
              break;
            case 1:
              D =
                ((k[w + 1] & 255) << 24) |
                ((k[w + 2] & 255) << 16) |
                ((k[w + 3] & 255) << 8) |
                (k[w] & 255);
              break;
            case 2:
              D =
                ((k[w + 2] & 255) << 24) |
                ((k[w + 1] & 255) << 16) |
                ((k[w] & 255) << 8) |
                (k[w + 3] & 255);
          }
          t &&
            0 != (D & 255) &&
            255 != (D & 255) &&
            ((C.unmult = 255 / (D & 255)),
            (D =
              ((C.__clamp[Math.round(((D >>> 24) & 255) * C.unmult)] & 255) <<
                24) |
              ((C.__clamp[Math.round(((D >>> 16) & 255) * C.unmult)] & 255) <<
                16) |
              ((C.__clamp[Math.round(((D >>> 8) & 255) * C.unmult)] & 255) <<
                8) |
              (D & 255)));
          w = b.byteOffset + b.stride * (I - B + 1) + 4 * (L - y + 1);
          switch (p) {
            case 0:
              E =
                ((k[w] & 255) << 24) |
                ((k[w + 1] & 255) << 16) |
                ((k[w + 2] & 255) << 8) |
                (k[w + 3] & 255);
              break;
            case 1:
              E =
                ((k[w + 1] & 255) << 24) |
                ((k[w + 2] & 255) << 16) |
                ((k[w + 3] & 255) << 8) |
                (k[w] & 255);
              break;
            case 2:
              E =
                ((k[w + 2] & 255) << 24) |
                ((k[w + 1] & 255) << 16) |
                ((k[w] & 255) << 8) |
                (k[w + 3] & 255);
          }
          t &&
            0 != (E & 255) &&
            255 != (E & 255) &&
            ((C.unmult = 255 / (E & 255)),
            (E =
              ((C.__clamp[Math.round(((E >>> 24) & 255) * C.unmult)] & 255) <<
                24) |
              ((C.__clamp[Math.round(((E >>> 16) & 255) * C.unmult)] & 255) <<
                16) |
              ((C.__clamp[Math.round(((E >>> 8) & 255) * C.unmult)] & 255) <<
                8) |
              (E & 255)));
          w = b.byteOffset + b.stride * (I - B) + 4 * (L - y);
          switch (p) {
            case 0:
              F =
                ((k[w] & 255) << 24) |
                ((k[w + 1] & 255) << 16) |
                ((k[w + 2] & 255) << 8) |
                (k[w + 3] & 255);
              break;
            case 1:
              F =
                ((k[w + 1] & 255) << 24) |
                ((k[w + 2] & 255) << 16) |
                ((k[w + 3] & 255) << 8) |
                (k[w] & 255);
              break;
            case 2:
              F =
                ((k[w + 2] & 255) << 24) |
                ((k[w + 1] & 255) << 16) |
                ((k[w] & 255) << 8) |
                (k[w + 3] & 255);
          }
          t &&
            0 != (F & 255) &&
            255 != (F & 255) &&
            ((C.unmult = 255 / (F & 255)),
            (F =
              ((C.__clamp[Math.round(((F >>> 24) & 255) * C.unmult)] & 255) <<
                24) |
              ((C.__clamp[Math.round(((F >>> 16) & 255) * C.unmult)] & 255) <<
                16) |
              ((C.__clamp[Math.round(((F >>> 8) & 255) * C.unmult)] & 255) <<
                8) |
              (F & 255)));
          w = Z.bilinear(z, D, E, F, d.x - y, d.y - B);
        } else {
          y = c.byteOffset + c.stride * (I - B) + 4 * (L - y);
          switch (p) {
            case 0:
              w =
                ((k[y] & 255) << 24) |
                ((k[y + 1] & 255) << 16) |
                ((k[y + 2] & 255) << 8) |
                (k[y + 3] & 255);
              break;
            case 1:
              w =
                ((k[y + 1] & 255) << 24) |
                ((k[y + 2] & 255) << 16) |
                ((k[y + 3] & 255) << 8) |
                (k[y] & 255);
              break;
            case 2:
              w =
                ((k[y + 2] & 255) << 24) |
                ((k[y + 1] & 255) << 16) |
                ((k[y] & 255) << 8) |
                (k[y + 3] & 255);
          }
          t &&
            0 != (w & 255) &&
            255 != (w & 255) &&
            ((C.unmult = 255 / (w & 255)),
            (w =
              ((C.__clamp[Math.round(((w >>> 24) & 255) * C.unmult)] & 255) <<
                24) |
              ((C.__clamp[Math.round(((w >>> 16) & 255) * C.unmult)] & 255) <<
                16) |
              ((C.__clamp[Math.round(((w >>> 8) & 255) * C.unmult)] & 255) <<
                8) |
              (w & 255)));
        }
        y = (w & 255) / 255;
        B = ((((w >>> 24) & 255) - 128) / 255) * y;
        A = ((((w >>> 16) & 255) - 128) / 255) * y;
        y = B * e.x + A * f.x;
        K = B * e.y + A * f.y;
        B = Math.floor(y * b.width);
        A = Math.floor(K * b.height);
        if (g) {
          v = b.byteOffset + b.stride * (I + A + 1) + 4 * (L + B);
          switch (l) {
            case 0:
              z =
                ((n[v] & 255) << 24) |
                ((n[v + 1] & 255) << 16) |
                ((n[v + 2] & 255) << 8) |
                (n[v + 3] & 255);
              break;
            case 1:
              z =
                ((n[v + 1] & 255) << 24) |
                ((n[v + 2] & 255) << 16) |
                ((n[v + 3] & 255) << 8) |
                (n[v] & 255);
              break;
            case 2:
              z =
                ((n[v + 2] & 255) << 24) |
                ((n[v + 1] & 255) << 16) |
                ((n[v] & 255) << 8) |
                (n[v + 3] & 255);
          }
          q &&
            0 != (z & 255) &&
            255 != (z & 255) &&
            ((C.unmult = 255 / (z & 255)),
            (z =
              ((C.__clamp[Math.round(((z >>> 24) & 255) * C.unmult)] & 255) <<
                24) |
              ((C.__clamp[Math.round(((z >>> 16) & 255) * C.unmult)] & 255) <<
                16) |
              ((C.__clamp[Math.round(((z >>> 8) & 255) * C.unmult)] & 255) <<
                8) |
              (z & 255)));
          v = b.byteOffset + b.stride * (I + A) + 4 * (L + B + 1);
          switch (l) {
            case 0:
              D =
                ((n[v] & 255) << 24) |
                ((n[v + 1] & 255) << 16) |
                ((n[v + 2] & 255) << 8) |
                (n[v + 3] & 255);
              break;
            case 1:
              D =
                ((n[v + 1] & 255) << 24) |
                ((n[v + 2] & 255) << 16) |
                ((n[v + 3] & 255) << 8) |
                (n[v] & 255);
              break;
            case 2:
              D =
                ((n[v + 2] & 255) << 24) |
                ((n[v + 1] & 255) << 16) |
                ((n[v] & 255) << 8) |
                (n[v + 3] & 255);
          }
          q &&
            0 != (D & 255) &&
            255 != (D & 255) &&
            ((C.unmult = 255 / (D & 255)),
            (D =
              ((C.__clamp[Math.round(((D >>> 24) & 255) * C.unmult)] & 255) <<
                24) |
              ((C.__clamp[Math.round(((D >>> 16) & 255) * C.unmult)] & 255) <<
                16) |
              ((C.__clamp[Math.round(((D >>> 8) & 255) * C.unmult)] & 255) <<
                8) |
              (D & 255)));
          v = b.byteOffset + b.stride * (I + A + 1) + 4 * (L + B + 1);
          switch (l) {
            case 0:
              E =
                ((n[v] & 255) << 24) |
                ((n[v + 1] & 255) << 16) |
                ((n[v + 2] & 255) << 8) |
                (n[v + 3] & 255);
              break;
            case 1:
              E =
                ((n[v + 1] & 255) << 24) |
                ((n[v + 2] & 255) << 16) |
                ((n[v + 3] & 255) << 8) |
                (n[v] & 255);
              break;
            case 2:
              E =
                ((n[v + 2] & 255) << 24) |
                ((n[v + 1] & 255) << 16) |
                ((n[v] & 255) << 8) |
                (n[v + 3] & 255);
          }
          q &&
            0 != (E & 255) &&
            255 != (E & 255) &&
            ((C.unmult = 255 / (E & 255)),
            (E =
              ((C.__clamp[Math.round(((E >>> 24) & 255) * C.unmult)] & 255) <<
                24) |
              ((C.__clamp[Math.round(((E >>> 16) & 255) * C.unmult)] & 255) <<
                16) |
              ((C.__clamp[Math.round(((E >>> 8) & 255) * C.unmult)] & 255) <<
                8) |
              (E & 255)));
          v = b.byteOffset + b.stride * (I + A) + 4 * (L + B);
          switch (l) {
            case 0:
              F =
                ((n[v] & 255) << 24) |
                ((n[v + 1] & 255) << 16) |
                ((n[v + 2] & 255) << 8) |
                (n[v + 3] & 255);
              break;
            case 1:
              F =
                ((n[v + 1] & 255) << 24) |
                ((n[v + 2] & 255) << 16) |
                ((n[v + 3] & 255) << 8) |
                (n[v] & 255);
              break;
            case 2:
              F =
                ((n[v + 2] & 255) << 24) |
                ((n[v + 1] & 255) << 16) |
                ((n[v] & 255) << 8) |
                (n[v + 3] & 255);
          }
          q &&
            0 != (F & 255) &&
            255 != (F & 255) &&
            ((C.unmult = 255 / (F & 255)),
            (F =
              ((C.__clamp[Math.round(((F >>> 24) & 255) * C.unmult)] & 255) <<
                24) |
              ((C.__clamp[Math.round(((F >>> 16) & 255) * C.unmult)] & 255) <<
                16) |
              ((C.__clamp[Math.round(((F >>> 8) & 255) * C.unmult)] & 255) <<
                8) |
              (F & 255)));
          v = Z.bilinear(z, D, E, F, y * b.width - B, K * b.height - A);
        } else {
          L = b.byteOffset + b.stride * (I + A) + 4 * (L + B);
          switch (l) {
            case 0:
              v =
                ((n[L] & 255) << 24) |
                ((n[L + 1] & 255) << 16) |
                ((n[L + 2] & 255) << 8) |
                (n[L + 3] & 255);
              break;
            case 1:
              v =
                ((n[L + 1] & 255) << 24) |
                ((n[L + 2] & 255) << 16) |
                ((n[L + 3] & 255) << 8) |
                (n[L] & 255);
              break;
            case 2:
              v =
                ((n[L + 2] & 255) << 24) |
                ((n[L + 1] & 255) << 16) |
                ((n[L] & 255) << 8) |
                (n[L + 3] & 255);
          }
          q &&
            0 != (v & 255) &&
            255 != (v & 255) &&
            ((C.unmult = 255 / (v & 255)),
            (v =
              ((C.__clamp[Math.round(((v >>> 24) & 255) * C.unmult)] & 255) <<
                24) |
              ((C.__clamp[Math.round(((v >>> 16) & 255) * C.unmult)] & 255) <<
                16) |
              ((C.__clamp[Math.round(((v >>> 8) & 255) * C.unmult)] & 255) <<
                8) |
              (v & 255)));
        }
        r &&
          (0 == (v & 255)
            ? 0 != v && (v = 0)
            : 255 != (v & 255) &&
              ((C.a16 = C.__alpha16[v & 255]),
              (v =
                ((((((v >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
                ((((((v >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
                ((((((v >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
                (v & 255))));
        switch (m) {
          case 0:
            h[x] = (v >>> 24) & 255;
            h[x + 1] = (v >>> 16) & 255;
            h[x + 2] = (v >>> 8) & 255;
            h[x + 3] = v & 255;
            break;
          case 1:
            h[x] = v & 255;
            h[x + 1] = (v >>> 24) & 255;
            h[x + 2] = (v >>> 16) & 255;
            h[x + 3] = (v >>> 8) & 255;
            break;
          case 2:
            (h[x] = (v >>> 8) & 255),
              (h[x + 1] = (v >>> 16) & 255),
              (h[x + 2] = (v >>> 24) & 255),
              (h[x + 3] = v & 255);
        }
      }
    }
    a.dirty = !0;
    a.version++;
  };
  Z.bilinear = function (a, b, c, d, e, f) {
    return Z.lerpRGBA(Z.lerpRGBA(d, b, e), Z.lerpRGBA(a, c, e), f);
  };
  Z.lerpRGBA = function (a, b, c) {
    var d = 0;
    d =
      ((Math.floor(Z.lerp((a >>> 24) & 255, (b >>> 24) & 255, c)) & 255) <<
        24) |
      (((d >>> 16) & 255) << 16) |
      (((d >>> 8) & 255) << 8) |
      (d & 255);
    var e = Math.floor(Z.lerp((a >>> 16) & 255, (b >>> 16) & 255, c));
    d =
      (((d >>> 24) & 255) << 24) |
      ((e & 255) << 16) |
      (((d >>> 8) & 255) << 8) |
      (d & 255);
    e = Math.floor(Z.lerp((a >>> 8) & 255, (b >>> 8) & 255, c));
    d =
      (((d >>> 24) & 255) << 24) |
      (((d >>> 16) & 255) << 16) |
      ((e & 255) << 8) |
      (d & 255);
    a = Math.floor(Z.lerp(a & 255, b & 255, c));
    return (
      (((d >>> 24) & 255) << 24) |
      (((d >>> 16) & 255) << 16) |
      (((d >>> 8) & 255) << 8) |
      (a & 255)
    );
  };
  Z.lerp4f = function (a, b, c) {
    return new qc(
      Z.lerp(a.x, b.x, c),
      Z.lerp(a.y, b.y, c),
      Z.lerp(a.z, b.z, c),
      Z.lerp(a.w, b.w, c)
    );
  };
  Z.lerp = function (a, b, c) {
    return (1 - c) * a + c * b;
  };
  Z.colorTransform = function (a, b, c) {
    var d = a.buffer.data;
    if (null != d) {
      var e = a.buffer.format,
        f = a.buffer.premultiplied;
      b = new Se(a, b);
      var g = qb.getAlphaTable(c),
        h = qb.getRedTable(c),
        n = qb.getGreenTable(c);
      c = qb.getBlueTable(c);
      for (var k, m, l, p = 0, r = b.height; p < r; ) {
        k = p++;
        k = b.byteOffset + b.stride * k;
        for (var q = 0, t = b.width; q < t; ) {
          m = q++;
          m = k + 4 * m;
          switch (e) {
            case 0:
              l =
                ((d[m] & 255) << 24) |
                ((d[m + 1] & 255) << 16) |
                ((d[m + 2] & 255) << 8) |
                (d[m + 3] & 255);
              break;
            case 1:
              l =
                ((d[m + 1] & 255) << 24) |
                ((d[m + 2] & 255) << 16) |
                ((d[m + 3] & 255) << 8) |
                (d[m] & 255);
              break;
            case 2:
              l =
                ((d[m + 2] & 255) << 24) |
                ((d[m + 1] & 255) << 16) |
                ((d[m] & 255) << 8) |
                (d[m + 3] & 255);
          }
          f &&
            0 != (l & 255) &&
            255 != (l & 255) &&
            ((C.unmult = 255 / (l & 255)),
            (l =
              ((C.__clamp[Math.round(((l >>> 24) & 255) * C.unmult)] & 255) <<
                24) |
              ((C.__clamp[Math.round(((l >>> 16) & 255) * C.unmult)] & 255) <<
                16) |
              ((C.__clamp[Math.round(((l >>> 8) & 255) * C.unmult)] & 255) <<
                8) |
              (l & 255)));
          l =
            ((h[(l >>> 24) & 255] & 255) << 24) |
            ((n[(l >>> 16) & 255] & 255) << 16) |
            ((c[(l >>> 8) & 255] & 255) << 8) |
            (g[l & 255] & 255);
          f &&
            (0 == (l & 255)
              ? 0 != l && (l = 0)
              : 255 != (l & 255) &&
                ((C.a16 = C.__alpha16[l & 255]),
                (l =
                  ((((((l >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
                  ((((((l >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
                  ((((((l >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
                  (l & 255))));
          switch (e) {
            case 0:
              d[m] = (l >>> 24) & 255;
              d[m + 1] = (l >>> 16) & 255;
              d[m + 2] = (l >>> 8) & 255;
              d[m + 3] = l & 255;
              break;
            case 1:
              d[m] = l & 255;
              d[m + 1] = (l >>> 24) & 255;
              d[m + 2] = (l >>> 16) & 255;
              d[m + 3] = (l >>> 8) & 255;
              break;
            case 2:
              (d[m] = (l >>> 8) & 255),
                (d[m + 1] = (l >>> 16) & 255),
                (d[m + 2] = (l >>> 24) & 255),
                (d[m + 3] = l & 255);
          }
        }
      }
      a.dirty = !0;
      a.version++;
    }
  };
  Z.copyChannel = function (a, b, c, d, e, f) {
    switch (f[1]) {
      case 0:
        var g = 0;
        break;
      case 1:
        g = 1;
        break;
      case 2:
        g = 2;
        break;
      case 3:
        g = 3;
    }
    switch (e[1]) {
      case 0:
        var h = 0;
        break;
      case 1:
        h = 1;
        break;
      case 2:
        h = 2;
        break;
      case 3:
        h = 3;
    }
    e = b.buffer.data;
    f = a.buffer.data;
    if (null != e && null != f) {
      c = new Se(b, c);
      d = new Se(a, new Td(d.x, d.y, c.width, c.height));
      var n = b.buffer.format,
        k = a.buffer.format;
      b = b.buffer.premultiplied;
      for (
        var m = a.buffer.premultiplied, l, p, r, q, t = 0, u = 0, v = d.height;
        u < v;

      ) {
        p = u++;
        l = c.byteOffset + c.stride * p;
        p = d.byteOffset + d.stride * p;
        for (var x = 0, w = d.width; x < w; ) {
          x++;
          switch (n) {
            case 0:
              r =
                ((e[l] & 255) << 24) |
                ((e[l + 1] & 255) << 16) |
                ((e[l + 2] & 255) << 8) |
                (e[l + 3] & 255);
              break;
            case 1:
              r =
                ((e[l + 1] & 255) << 24) |
                ((e[l + 2] & 255) << 16) |
                ((e[l + 3] & 255) << 8) |
                (e[l] & 255);
              break;
            case 2:
              r =
                ((e[l + 2] & 255) << 24) |
                ((e[l + 1] & 255) << 16) |
                ((e[l] & 255) << 8) |
                (e[l + 3] & 255);
          }
          b &&
            0 != (r & 255) &&
            255 != (r & 255) &&
            ((C.unmult = 255 / (r & 255)),
            (r =
              ((C.__clamp[Math.round(((r >>> 24) & 255) * C.unmult)] & 255) <<
                24) |
              ((C.__clamp[Math.round(((r >>> 16) & 255) * C.unmult)] & 255) <<
                16) |
              ((C.__clamp[Math.round(((r >>> 8) & 255) * C.unmult)] & 255) <<
                8) |
              (r & 255)));
          switch (k) {
            case 0:
              q =
                ((f[p] & 255) << 24) |
                ((f[p + 1] & 255) << 16) |
                ((f[p + 2] & 255) << 8) |
                (f[p + 3] & 255);
              break;
            case 1:
              q =
                ((f[p + 1] & 255) << 24) |
                ((f[p + 2] & 255) << 16) |
                ((f[p + 3] & 255) << 8) |
                (f[p] & 255);
              break;
            case 2:
              q =
                ((f[p + 2] & 255) << 24) |
                ((f[p + 1] & 255) << 16) |
                ((f[p] & 255) << 8) |
                (f[p + 3] & 255);
          }
          m &&
            0 != (q & 255) &&
            255 != (q & 255) &&
            ((C.unmult = 255 / (q & 255)),
            (q =
              ((C.__clamp[Math.round(((q >>> 24) & 255) * C.unmult)] & 255) <<
                24) |
              ((C.__clamp[Math.round(((q >>> 16) & 255) * C.unmult)] & 255) <<
                16) |
              ((C.__clamp[Math.round(((q >>> 8) & 255) * C.unmult)] & 255) <<
                8) |
              (q & 255)));
          switch (h) {
            case 0:
              t = (r >>> 24) & 255;
              break;
            case 1:
              t = (r >>> 16) & 255;
              break;
            case 2:
              t = (r >>> 8) & 255;
              break;
            case 3:
              t = r & 255;
          }
          switch (g) {
            case 0:
              q =
                ((t & 255) << 24) |
                (((q >>> 16) & 255) << 16) |
                (((q >>> 8) & 255) << 8) |
                (q & 255);
              break;
            case 1:
              q =
                (((q >>> 24) & 255) << 24) |
                ((t & 255) << 16) |
                (((q >>> 8) & 255) << 8) |
                (q & 255);
              break;
            case 2:
              q =
                (((q >>> 24) & 255) << 24) |
                (((q >>> 16) & 255) << 16) |
                ((t & 255) << 8) |
                (q & 255);
              break;
            case 3:
              q =
                (((q >>> 24) & 255) << 24) |
                (((q >>> 16) & 255) << 16) |
                (((q >>> 8) & 255) << 8) |
                (t & 255);
          }
          m &&
            (0 == (q & 255)
              ? 0 != q && (q = 0)
              : 255 != (q & 255) &&
                ((C.a16 = C.__alpha16[q & 255]),
                (q =
                  ((((((q >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
                  ((((((q >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
                  ((((((q >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
                  (q & 255))));
          switch (k) {
            case 0:
              f[p] = (q >>> 24) & 255;
              f[p + 1] = (q >>> 16) & 255;
              f[p + 2] = (q >>> 8) & 255;
              f[p + 3] = q & 255;
              break;
            case 1:
              f[p] = q & 255;
              f[p + 1] = (q >>> 24) & 255;
              f[p + 2] = (q >>> 16) & 255;
              f[p + 3] = (q >>> 8) & 255;
              break;
            case 2:
              (f[p] = (q >>> 8) & 255),
                (f[p + 1] = (q >>> 16) & 255),
                (f[p + 2] = (q >>> 24) & 255),
                (f[p + 3] = q & 255);
          }
          l += 4;
          p += 4;
        }
      }
      a.dirty = !0;
      a.version++;
    }
  };
  Z.copyPixels = function (a, b, c, d, e, f, g) {
    null == g && (g = !1);
    if (
      a.width == b.width &&
      a.height == b.height &&
      c.width == b.width &&
      c.height == b.height &&
      0 == c.x &&
      0 == c.y &&
      0 == d.x &&
      0 == d.y &&
      null == e &&
      null == f &&
      0 == g &&
      a.get_format() == b.get_format()
    )
      a.buffer.data.set(b.buffer.data);
    else {
      var h = b.buffer.data,
        n = a.buffer.data;
      if (null == h || null == n) return;
      c = new Se(b, c);
      var k = new Td(d.x, d.y, c.width, c.height);
      k = new Se(a, k);
      var m = b.buffer.format,
        l = a.buffer.format,
        p = b.buffer.premultiplied,
        r = a.buffer.premultiplied;
      var q = (b.buffer.bitsPerPixel / 8) | 0;
      b = (a.buffer.bitsPerPixel / 8) | 0;
      var t = null != e && e.get_transparent();
      var u = g || (t && !a.get_transparent());
      if (t)
        if (
          (null == f && (f = new xd()),
          (b = e.buffer.data),
          (g = e.buffer.format),
          (f = new Se(e, new Td(f.x, f.y, e.width, e.height))),
          f.offset(c.x, c.y),
          k.clip(d.x | 0, d.y | 0, f.width, f.height),
          u)
        )
          for (var v = 0, x = k.height; v < x; ) {
            u = v++;
            d = c.byteOffset + c.stride * u;
            e = k.byteOffset + k.stride * u;
            var w = f.byteOffset + f.stride * u;
            for (var B = 0, A = k.width; B < A; ) {
              B++;
              switch (m) {
                case 0:
                  var y =
                    ((h[d] & 255) << 24) |
                    ((h[d + 1] & 255) << 16) |
                    ((h[d + 2] & 255) << 8) |
                    (h[d + 3] & 255);
                  break;
                case 1:
                  y =
                    ((h[d + 1] & 255) << 24) |
                    ((h[d + 2] & 255) << 16) |
                    ((h[d + 3] & 255) << 8) |
                    (h[d] & 255);
                  break;
                case 2:
                  y =
                    ((h[d + 2] & 255) << 24) |
                    ((h[d + 1] & 255) << 16) |
                    ((h[d] & 255) << 8) |
                    (h[d + 3] & 255);
              }
              p &&
                0 != (y & 255) &&
                255 != (y & 255) &&
                ((C.unmult = 255 / (y & 255)),
                (y =
                  ((C.__clamp[Math.round(((y >>> 24) & 255) * C.unmult)] &
                    255) <<
                    24) |
                  ((C.__clamp[Math.round(((y >>> 16) & 255) * C.unmult)] &
                    255) <<
                    16) |
                  ((C.__clamp[Math.round(((y >>> 8) & 255) * C.unmult)] &
                    255) <<
                    8) |
                  (y & 255)));
              switch (l) {
                case 0:
                  var z =
                    ((n[e] & 255) << 24) |
                    ((n[e + 1] & 255) << 16) |
                    ((n[e + 2] & 255) << 8) |
                    (n[e + 3] & 255);
                  break;
                case 1:
                  z =
                    ((n[e + 1] & 255) << 24) |
                    ((n[e + 2] & 255) << 16) |
                    ((n[e + 3] & 255) << 8) |
                    (n[e] & 255);
                  break;
                case 2:
                  z =
                    ((n[e + 2] & 255) << 24) |
                    ((n[e + 1] & 255) << 16) |
                    ((n[e] & 255) << 8) |
                    (n[e + 3] & 255);
              }
              r &&
                0 != (z & 255) &&
                255 != (z & 255) &&
                ((C.unmult = 255 / (z & 255)),
                (z =
                  ((C.__clamp[Math.round(((z >>> 24) & 255) * C.unmult)] &
                    255) <<
                    24) |
                  ((C.__clamp[Math.round(((z >>> 16) & 255) * C.unmult)] &
                    255) <<
                    16) |
                  ((C.__clamp[Math.round(((z >>> 8) & 255) * C.unmult)] &
                    255) <<
                    8) |
                  (z & 255)));
              switch (g) {
                case 0:
                  var D =
                    ((b[w] & 255) << 24) |
                    ((b[w + 1] & 255) << 16) |
                    ((b[w + 2] & 255) << 8) |
                    (b[w + 3] & 255);
                  break;
                case 1:
                  D =
                    ((b[w + 1] & 255) << 24) |
                    ((b[w + 2] & 255) << 16) |
                    ((b[w + 3] & 255) << 8) |
                    (b[w] & 255);
                  break;
                case 2:
                  D =
                    ((b[w + 2] & 255) << 24) |
                    ((b[w + 1] & 255) << 16) |
                    ((b[w] & 255) << 8) |
                    (b[w + 3] & 255);
              }
              u = ((D & 255) / 255) * ((y & 255) / 255);
              if (0 < u) {
                q = (z & 255) / 255;
                t = 1 - u;
                var E = u + q * t;
                z =
                  ((C.__clamp[
                    Math.round(
                      (((y >>> 24) & 255) * u + ((z >>> 24) & 255) * q * t) / E
                    )
                  ] &
                    255) <<
                    24) |
                  (((z >>> 16) & 255) << 16) |
                  (((z >>> 8) & 255) << 8) |
                  (z & 255);
                z =
                  (((z >>> 24) & 255) << 24) |
                  ((C.__clamp[
                    Math.round(
                      (((y >>> 16) & 255) * u + ((z >>> 16) & 255) * q * t) / E
                    )
                  ] &
                    255) <<
                    16) |
                  (((z >>> 8) & 255) << 8) |
                  (z & 255);
                z =
                  (((z >>> 24) & 255) << 24) |
                  (((z >>> 16) & 255) << 16) |
                  ((C.__clamp[
                    Math.round(
                      (((y >>> 8) & 255) * u + ((z >>> 8) & 255) * q * t) / E
                    )
                  ] &
                    255) <<
                    8) |
                  (z & 255);
                z =
                  (((z >>> 24) & 255) << 24) |
                  (((z >>> 16) & 255) << 16) |
                  (((z >>> 8) & 255) << 8) |
                  (C.__clamp[Math.round(255 * E)] & 255);
                r &&
                  (0 == (z & 255)
                    ? 0 != z && (z = 0)
                    : 255 != (z & 255) &&
                      ((C.a16 = C.__alpha16[z & 255]),
                      (z =
                        ((((((z >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
                        ((((((z >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
                        ((((((z >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
                        (z & 255))));
                switch (l) {
                  case 0:
                    n[e] = (z >>> 24) & 255;
                    n[e + 1] = (z >>> 16) & 255;
                    n[e + 2] = (z >>> 8) & 255;
                    n[e + 3] = z & 255;
                    break;
                  case 1:
                    n[e] = z & 255;
                    n[e + 1] = (z >>> 24) & 255;
                    n[e + 2] = (z >>> 16) & 255;
                    n[e + 3] = (z >>> 8) & 255;
                    break;
                  case 2:
                    (n[e] = (z >>> 8) & 255),
                      (n[e + 1] = (z >>> 16) & 255),
                      (n[e + 2] = (z >>> 24) & 255),
                      (n[e + 3] = z & 255);
                }
              }
              d += 4;
              e += 4;
              w += 4;
            }
          }
        else
          for (z = 0, u = k.height; z < u; )
            for (
              q = z++,
                d = c.byteOffset + c.stride * q,
                e = k.byteOffset + k.stride * q,
                w = f.byteOffset + f.stride * q,
                q = 0,
                t = k.width;
              q < t;

            ) {
              q++;
              switch (m) {
                case 0:
                  y =
                    ((h[d] & 255) << 24) |
                    ((h[d + 1] & 255) << 16) |
                    ((h[d + 2] & 255) << 8) |
                    (h[d + 3] & 255);
                  break;
                case 1:
                  y =
                    ((h[d + 1] & 255) << 24) |
                    ((h[d + 2] & 255) << 16) |
                    ((h[d + 3] & 255) << 8) |
                    (h[d] & 255);
                  break;
                case 2:
                  y =
                    ((h[d + 2] & 255) << 24) |
                    ((h[d + 1] & 255) << 16) |
                    ((h[d] & 255) << 8) |
                    (h[d + 3] & 255);
              }
              p &&
                0 != (y & 255) &&
                255 != (y & 255) &&
                ((C.unmult = 255 / (y & 255)),
                (y =
                  ((C.__clamp[Math.round(((y >>> 24) & 255) * C.unmult)] &
                    255) <<
                    24) |
                  ((C.__clamp[Math.round(((y >>> 16) & 255) * C.unmult)] &
                    255) <<
                    16) |
                  ((C.__clamp[Math.round(((y >>> 8) & 255) * C.unmult)] &
                    255) <<
                    8) |
                  (y & 255)));
              switch (g) {
                case 0:
                  D =
                    ((b[w] & 255) << 24) |
                    ((b[w + 1] & 255) << 16) |
                    ((b[w + 2] & 255) << 8) |
                    (b[w + 3] & 255);
                  break;
                case 1:
                  D =
                    ((b[w + 1] & 255) << 24) |
                    ((b[w + 2] & 255) << 16) |
                    ((b[w + 3] & 255) << 8) |
                    (b[w] & 255);
                  break;
                case 2:
                  D =
                    ((b[w + 2] & 255) << 24) |
                    ((b[w + 1] & 255) << 16) |
                    ((b[w] & 255) << 8) |
                    (b[w + 3] & 255);
              }
              y =
                (((y >>> 24) & 255) << 24) |
                (((y >>> 16) & 255) << 16) |
                (((y >>> 8) & 255) << 8) |
                (Math.round(((D & 255) / 255) * (y & 255)) & 255);
              r &&
                (0 == (y & 255)
                  ? 0 != y && (y = 0)
                  : 255 != (y & 255) &&
                    ((C.a16 = C.__alpha16[y & 255]),
                    (y =
                      ((((((y >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
                      ((((((y >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
                      ((((((y >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
                      (y & 255))));
              switch (l) {
                case 0:
                  n[e] = (y >>> 24) & 255;
                  n[e + 1] = (y >>> 16) & 255;
                  n[e + 2] = (y >>> 8) & 255;
                  n[e + 3] = y & 255;
                  break;
                case 1:
                  n[e] = y & 255;
                  n[e + 1] = (y >>> 24) & 255;
                  n[e + 2] = (y >>> 16) & 255;
                  n[e + 3] = (y >>> 8) & 255;
                  break;
                case 2:
                  (n[e] = (y >>> 8) & 255),
                    (n[e + 1] = (y >>> 16) & 255),
                    (n[e + 2] = (y >>> 24) & 255),
                    (n[e + 3] = y & 255);
              }
              d += 4;
              e += 4;
              w += 4;
            }
      else if (u)
        for (D = 0, b = k.height; D < b; )
          for (
            e = D++,
              d = c.byteOffset + c.stride * e,
              e = k.byteOffset + k.stride * e,
              g = 0,
              f = k.width;
            g < f;

          ) {
            g++;
            switch (m) {
              case 0:
                y =
                  ((h[d] & 255) << 24) |
                  ((h[d + 1] & 255) << 16) |
                  ((h[d + 2] & 255) << 8) |
                  (h[d + 3] & 255);
                break;
              case 1:
                y =
                  ((h[d + 1] & 255) << 24) |
                  ((h[d + 2] & 255) << 16) |
                  ((h[d + 3] & 255) << 8) |
                  (h[d] & 255);
                break;
              case 2:
                y =
                  ((h[d + 2] & 255) << 24) |
                  ((h[d + 1] & 255) << 16) |
                  ((h[d] & 255) << 8) |
                  (h[d + 3] & 255);
            }
            p &&
              0 != (y & 255) &&
              255 != (y & 255) &&
              ((C.unmult = 255 / (y & 255)),
              (y =
                ((C.__clamp[Math.round(((y >>> 24) & 255) * C.unmult)] & 255) <<
                  24) |
                ((C.__clamp[Math.round(((y >>> 16) & 255) * C.unmult)] & 255) <<
                  16) |
                ((C.__clamp[Math.round(((y >>> 8) & 255) * C.unmult)] & 255) <<
                  8) |
                (y & 255)));
            switch (l) {
              case 0:
                z =
                  ((n[e] & 255) << 24) |
                  ((n[e + 1] & 255) << 16) |
                  ((n[e + 2] & 255) << 8) |
                  (n[e + 3] & 255);
                break;
              case 1:
                z =
                  ((n[e + 1] & 255) << 24) |
                  ((n[e + 2] & 255) << 16) |
                  ((n[e + 3] & 255) << 8) |
                  (n[e] & 255);
                break;
              case 2:
                z =
                  ((n[e + 2] & 255) << 24) |
                  ((n[e + 1] & 255) << 16) |
                  ((n[e] & 255) << 8) |
                  (n[e + 3] & 255);
            }
            r &&
              0 != (z & 255) &&
              255 != (z & 255) &&
              ((C.unmult = 255 / (z & 255)),
              (z =
                ((C.__clamp[Math.round(((z >>> 24) & 255) * C.unmult)] & 255) <<
                  24) |
                ((C.__clamp[Math.round(((z >>> 16) & 255) * C.unmult)] & 255) <<
                  16) |
                ((C.__clamp[Math.round(((z >>> 8) & 255) * C.unmult)] & 255) <<
                  8) |
                (z & 255)));
            u = (y & 255) / 255;
            q = (z & 255) / 255;
            t = 1 - u;
            E = u + q * t;
            0 == E
              ? (z = 0)
              : ((z =
                  ((C.__clamp[
                    Math.round(
                      (((y >>> 24) & 255) * u + ((z >>> 24) & 255) * q * t) / E
                    )
                  ] &
                    255) <<
                    24) |
                  (((z >>> 16) & 255) << 16) |
                  (((z >>> 8) & 255) << 8) |
                  (z & 255)),
                (z =
                  (((z >>> 24) & 255) << 24) |
                  ((C.__clamp[
                    Math.round(
                      (((y >>> 16) & 255) * u + ((z >>> 16) & 255) * q * t) / E
                    )
                  ] &
                    255) <<
                    16) |
                  (((z >>> 8) & 255) << 8) |
                  (z & 255)),
                (z =
                  (((z >>> 24) & 255) << 24) |
                  (((z >>> 16) & 255) << 16) |
                  ((C.__clamp[
                    Math.round(
                      (((y >>> 8) & 255) * u + ((z >>> 8) & 255) * q * t) / E
                    )
                  ] &
                    255) <<
                    8) |
                  (z & 255)),
                (z =
                  (((z >>> 24) & 255) << 24) |
                  (((z >>> 16) & 255) << 16) |
                  (((z >>> 8) & 255) << 8) |
                  (C.__clamp[Math.round(255 * E)] & 255)));
            r &&
              (0 == (z & 255)
                ? 0 != z && (z = 0)
                : 255 != (z & 255) &&
                  ((C.a16 = C.__alpha16[z & 255]),
                  (z =
                    ((((((z >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
                    ((((((z >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
                    ((((((z >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
                    (z & 255))));
            switch (l) {
              case 0:
                n[e] = (z >>> 24) & 255;
                n[e + 1] = (z >>> 16) & 255;
                n[e + 2] = (z >>> 8) & 255;
                n[e + 3] = z & 255;
                break;
              case 1:
                n[e] = z & 255;
                n[e + 1] = (z >>> 24) & 255;
                n[e + 2] = (z >>> 16) & 255;
                n[e + 3] = (z >>> 8) & 255;
                break;
              case 2:
                (n[e] = (z >>> 8) & 255),
                  (n[e + 1] = (z >>> 16) & 255),
                  (n[e + 2] = (z >>> 24) & 255),
                  (n[e + 3] = z & 255);
            }
            d += 4;
            e += 4;
          }
      else if (m == l && p == r && q == b)
        for (y = 0, m = k.height; y < m; )
          (l = y++),
            (d = c.byteOffset + c.stride * l),
            (e = k.byteOffset + k.stride * l),
            n.set(h.subarray(d, d + k.width * b), e);
      else
        for (z = 0, D = k.height; z < D; )
          for (
            e = z++,
              d = c.byteOffset + c.stride * e,
              e = k.byteOffset + k.stride * e,
              b = 0,
              g = k.width;
            b < g;

          ) {
            b++;
            switch (m) {
              case 0:
                y =
                  ((h[d] & 255) << 24) |
                  ((h[d + 1] & 255) << 16) |
                  ((h[d + 2] & 255) << 8) |
                  (h[d + 3] & 255);
                break;
              case 1:
                y =
                  ((h[d + 1] & 255) << 24) |
                  ((h[d + 2] & 255) << 16) |
                  ((h[d + 3] & 255) << 8) |
                  (h[d] & 255);
                break;
              case 2:
                y =
                  ((h[d + 2] & 255) << 24) |
                  ((h[d + 1] & 255) << 16) |
                  ((h[d] & 255) << 8) |
                  (h[d + 3] & 255);
            }
            p &&
              0 != (y & 255) &&
              255 != (y & 255) &&
              ((C.unmult = 255 / (y & 255)),
              (y =
                ((C.__clamp[Math.round(((y >>> 24) & 255) * C.unmult)] & 255) <<
                  24) |
                ((C.__clamp[Math.round(((y >>> 16) & 255) * C.unmult)] & 255) <<
                  16) |
                ((C.__clamp[Math.round(((y >>> 8) & 255) * C.unmult)] & 255) <<
                  8) |
                (y & 255)));
            r &&
              (0 == (y & 255)
                ? 0 != y && (y = 0)
                : 255 != (y & 255) &&
                  ((C.a16 = C.__alpha16[y & 255]),
                  (y =
                    ((((((y >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
                    ((((((y >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
                    ((((((y >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
                    (y & 255))));
            switch (l) {
              case 0:
                n[e] = (y >>> 24) & 255;
                n[e + 1] = (y >>> 16) & 255;
                n[e + 2] = (y >>> 8) & 255;
                n[e + 3] = y & 255;
                break;
              case 1:
                n[e] = y & 255;
                n[e + 1] = (y >>> 24) & 255;
                n[e + 2] = (y >>> 16) & 255;
                n[e + 3] = (y >>> 8) & 255;
                break;
              case 2:
                (n[e] = (y >>> 8) & 255),
                  (n[e + 1] = (y >>> 16) & 255),
                  (n[e + 2] = (y >>> 24) & 255),
                  (n[e + 3] = y & 255);
            }
            d += 4;
            e += 4;
          }
    }
    a.dirty = !0;
    a.version++;
  };
  Z.fillRect = function (a, b, c, d) {
    switch (d) {
      case 1:
        c =
          (((c >>> 16) & 255) << 24) |
          (((c >>> 8) & 255) << 16) |
          ((c & 255) << 8) |
          ((c >>> 24) & 255);
        break;
      case 2:
        c =
          (((c >>> 8) & 255) << 24) |
          (((c >>> 16) & 255) << 16) |
          (((c >>> 24) & 255) << 8) |
          (c & 255);
    }
    a.get_transparent() ||
      (c =
        (((c >>> 24) & 255) << 24) |
        (((c >>> 16) & 255) << 16) |
        (((c >>> 8) & 255) << 8) |
        255);
    d = a.buffer.data;
    if (null != d) {
      var e = a.buffer.format;
      a.buffer.premultiplied &&
        (0 == (c & 255)
          ? 0 != c && (c = 0)
          : 255 != (c & 255) &&
            ((C.a16 = C.__alpha16[c & 255]),
            (c =
              ((((((c >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
              ((((((c >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
              ((((((c >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
              (c & 255))));
      b = new Se(a, b);
      for (var f, g = 0, h = b.height; g < h; ) {
        f = g++;
        f = b.byteOffset + b.stride * f;
        for (var n = 0, k = b.width; n < k; ) {
          var m = n++;
          m = f + 4 * m;
          switch (e) {
            case 0:
              d[m] = (c >>> 24) & 255;
              d[m + 1] = (c >>> 16) & 255;
              d[m + 2] = (c >>> 8) & 255;
              d[m + 3] = c & 255;
              break;
            case 1:
              d[m] = c & 255;
              d[m + 1] = (c >>> 24) & 255;
              d[m + 2] = (c >>> 16) & 255;
              d[m + 3] = (c >>> 8) & 255;
              break;
            case 2:
              (d[m] = (c >>> 8) & 255),
                (d[m + 1] = (c >>> 16) & 255),
                (d[m + 2] = (c >>> 24) & 255),
                (d[m + 3] = c & 255);
          }
        }
      }
      a.dirty = !0;
      a.version++;
    }
  };
  Z.floodFill = function (a, b, c, d, e) {
    var f = a.buffer.data;
    if (null != f) {
      1 == e && (d = ((d & 16777215) << 8) | ((d >> 24) & 255));
      e = a.buffer.format;
      var g = a.buffer.premultiplied,
        h = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
      switch (e) {
        case 0:
          var n =
            ((f[h] & 255) << 24) |
            ((f[h + 1] & 255) << 16) |
            ((f[h + 2] & 255) << 8) |
            (f[h + 3] & 255);
          break;
        case 1:
          n =
            ((f[h + 1] & 255) << 24) |
            ((f[h + 2] & 255) << 16) |
            ((f[h + 3] & 255) << 8) |
            (f[h] & 255);
          break;
        case 2:
          n =
            ((f[h + 2] & 255) << 24) |
            ((f[h + 1] & 255) << 16) |
            ((f[h] & 255) << 8) |
            (f[h + 3] & 255);
      }
      g &&
        0 != (n & 255) &&
        255 != (n & 255) &&
        ((C.unmult = 255 / (n & 255)),
        (n =
          ((C.__clamp[Math.round(((n >>> 24) & 255) * C.unmult)] & 255) << 24) |
          ((C.__clamp[Math.round(((n >>> 16) & 255) * C.unmult)] & 255) << 16) |
          ((C.__clamp[Math.round(((n >>> 8) & 255) * C.unmult)] & 255) << 8) |
          (n & 255)));
      a.get_transparent() ||
        ((d =
          (((d >>> 24) & 255) << 24) |
          (((d >>> 16) & 255) << 16) |
          (((d >>> 8) & 255) << 8) |
          255),
        (n =
          (((n >>> 24) & 255) << 24) |
          (((n >>> 16) & 255) << 16) |
          (((n >>> 8) & 255) << 8) |
          255));
      if (d != n) {
        g &&
          (0 == (d & 255)
            ? 0 != d && (d = 0)
            : 255 != (d & 255) &&
              ((C.a16 = C.__alpha16[d & 255]),
              (d =
                ((((((d >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
                ((((((d >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
                ((((((d >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
                (d & 255))));
        h = [0, -1, 1, 0];
        var k = [-1, 0, 0, 1],
          m = -a.offsetX,
          l = -a.offsetY,
          p = m + a.width,
          r = l + a.height,
          q = [];
        q.push(b);
        q.push(c);
        for (var t, u, v, w; 0 < q.length; ) {
          c = q.pop();
          b = q.pop();
          for (var x = 0; 4 > x; )
            if (
              ((u = x++),
              (t = b + h[u]),
              (u = c + k[u]),
              !(t < m || u < l || t >= p || u >= r))
            ) {
              v = 4 * (u * a.width + t);
              switch (e) {
                case 0:
                  w =
                    ((f[v] & 255) << 24) |
                    ((f[v + 1] & 255) << 16) |
                    ((f[v + 2] & 255) << 8) |
                    (f[v + 3] & 255);
                  break;
                case 1:
                  w =
                    ((f[v + 1] & 255) << 24) |
                    ((f[v + 2] & 255) << 16) |
                    ((f[v + 3] & 255) << 8) |
                    (f[v] & 255);
                  break;
                case 2:
                  w =
                    ((f[v + 2] & 255) << 24) |
                    ((f[v + 1] & 255) << 16) |
                    ((f[v] & 255) << 8) |
                    (f[v + 3] & 255);
              }
              g &&
                0 != (w & 255) &&
                255 != (w & 255) &&
                ((C.unmult = 255 / (w & 255)),
                (w =
                  ((C.__clamp[Math.round(((w >>> 24) & 255) * C.unmult)] &
                    255) <<
                    24) |
                  ((C.__clamp[Math.round(((w >>> 16) & 255) * C.unmult)] &
                    255) <<
                    16) |
                  ((C.__clamp[Math.round(((w >>> 8) & 255) * C.unmult)] &
                    255) <<
                    8) |
                  (w & 255)));
              if (w == n) {
                switch (e) {
                  case 0:
                    f[v] = (d >>> 24) & 255;
                    f[v + 1] = (d >>> 16) & 255;
                    f[v + 2] = (d >>> 8) & 255;
                    f[v + 3] = d & 255;
                    break;
                  case 1:
                    f[v] = d & 255;
                    f[v + 1] = (d >>> 24) & 255;
                    f[v + 2] = (d >>> 16) & 255;
                    f[v + 3] = (d >>> 8) & 255;
                    break;
                  case 2:
                    (f[v] = (d >>> 8) & 255),
                      (f[v + 1] = (d >>> 16) & 255),
                      (f[v + 2] = (d >>> 24) & 255),
                      (f[v + 3] = d & 255);
                }
                q.push(t);
                q.push(u);
              }
            }
        }
        a.dirty = !0;
        a.version++;
      }
    }
  };
  Z.gaussianBlur = function (a, b, c, d, e, f, g, h, n) {
    null == h && (h = 1);
    null == g && (g = 1);
    null == f && (f = 4);
    null == e && (e = 4);
    n = a.get_premultiplied();
    var k = b.get_premultiplied();
    n && a.set_premultiplied(!1);
    k && b.set_premultiplied(!1);
    var m = a.get_data(),
      l = b.get_data(),
      p = c.width | 0;
    c = c.height | 0;
    var r = f | 0,
      q = d.x | 0,
      t = d.y | 0;
    f = 2 * g - 1;
    g = 0.125 * Math.pow(2, g);
    e = Z.__getBoxesForGaussianBlur((e | 0) * g, f);
    g = Z.__getBoxesForGaussianBlur(r * g, f);
    q = (4 * (p * t + q)) | 0;
    Z.__boxBlur(l, m, p, c, (e[0] - 1) / 2, (g[0] - 1) / 2);
    t = 1;
    r = 0;
    for (f = (f / 2) | 0; r < f; )
      r++,
        Z.__boxBlur(m, l, p, c, (e[t] - 1) / 2, (g[t] - 1) / 2),
        Z.__boxBlur(l, m, p, c, (e[t + 1] - 1) / 2, (g[t + 1] - 1) / 2),
        (t += 2);
    if (0 != q || 1 != h)
      if (0 >= q)
        for (f = 0; f < c; ) {
          for (l = 0; l < p; )
            Z.__translatePixel(m, b.get_rect(), a.get_rect(), d, l, f, h), ++l;
          ++f;
        }
      else
        for (f = c - 1; 0 <= f; ) {
          for (l = p - 1; 0 <= l; )
            Z.__translatePixel(m, b.get_rect(), a.get_rect(), d, l, f, h), --l;
          --f;
        }
    a.dirty = !0;
    a.version++;
    b.dirty = !0;
    b.version++;
    n && a.set_premultiplied(!0);
    k && b.set_premultiplied(!0);
    return m == a.get_data() ? a : b;
  };
  Z.getColorBoundsRect = function (a, b, c, d, e) {
    var f = a.width + 1,
      g = 0,
      h = a.height + 1,
      n = 0;
    switch (e) {
      case 1:
        c =
          (((c >>> 16) & 255) << 24) |
          (((c >>> 8) & 255) << 16) |
          ((c & 255) << 8) |
          ((c >>> 24) & 255);
        b =
          (((b >>> 16) & 255) << 24) |
          (((b >>> 8) & 255) << 16) |
          ((b & 255) << 8) |
          ((b >>> 24) & 255);
        break;
      case 2:
        (c =
          (((c >>> 8) & 255) << 24) |
          (((c >>> 16) & 255) << 16) |
          (((c >>> 24) & 255) << 8) |
          (c & 255)),
          (b =
            (((b >>> 8) & 255) << 24) |
            (((b >>> 16) & 255) << 16) |
            (((b >>> 24) & 255) << 8) |
            (b & 255));
    }
    a.get_transparent() ||
      ((c =
        (((c >>> 24) & 255) << 24) |
        (((c >>> 16) & 255) << 16) |
        (((c >>> 8) & 255) << 8) |
        255),
      (b =
        (((b >>> 24) & 255) << 24) |
        (((b >>> 16) & 255) << 16) |
        (((b >>> 8) & 255) << 8) |
        255));
    for (var k = 0, m = a.width; k < m; ) {
      var l = k++;
      e = !1;
      for (var p = 0, r = a.height; p < r; )
        if (
          ((e = p++),
          (e = a.getPixel32(l, e, 0)),
          (e = d ? (e & b) == c : (e & b) != c))
        ) {
          l < f && (f = l);
          break;
        }
      if (e) break;
    }
    k = 0;
    for (m = a.width; k < m; ) {
      e = k++;
      l = a.width - 1 - e;
      e = !1;
      p = 0;
      for (r = a.height; p < r; )
        if (
          ((e = p++),
          (e = a.getPixel32(l, e, 0)),
          (e = d ? (e & b) == c : (e & b) != c))
        ) {
          l > g && (g = l);
          break;
        }
      if (e) break;
    }
    k = 0;
    for (m = a.height; k < m; ) {
      l = k++;
      e = !1;
      p = 0;
      for (r = a.width; p < r; )
        if (
          ((e = p++),
          (e = a.getPixel32(e, l, 0)),
          (e = d ? (e & b) == c : (e & b) != c))
        ) {
          l < h && (h = l);
          break;
        }
      if (e) break;
    }
    k = 0;
    for (m = a.height; k < m; ) {
      e = k++;
      l = a.height - 1 - e;
      e = !1;
      p = 0;
      for (r = a.width; p < r; )
        if (
          ((e = p++),
          (e = a.getPixel32(e, l, 0)),
          (e = d ? (e & b) == c : (e & b) != c))
        ) {
          l > n && (n = l);
          break;
        }
      if (e) break;
    }
    d = g - f;
    c = n - h;
    0 < d && ++d;
    0 < c && ++c;
    0 > d && (d = 0);
    0 > c && (c = 0);
    f == g && (d = 1);
    h == n && (c = 1);
    f > a.width && (f = 0);
    h > a.height && (h = 0);
    return new Td(f, h, d, c);
  };
  Z.getPixel = function (a, b, c, d) {
    var e = a.buffer.data;
    b = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
    c = a.buffer.premultiplied;
    switch (a.buffer.format) {
      case 0:
        var f =
          ((e[b] & 255) << 24) |
          ((e[b + 1] & 255) << 16) |
          ((e[b + 2] & 255) << 8) |
          (e[b + 3] & 255);
        break;
      case 1:
        f =
          ((e[b + 1] & 255) << 24) |
          ((e[b + 2] & 255) << 16) |
          ((e[b + 3] & 255) << 8) |
          (e[b] & 255);
        break;
      case 2:
        f =
          ((e[b + 2] & 255) << 24) |
          ((e[b + 1] & 255) << 16) |
          ((e[b] & 255) << 8) |
          (e[b + 3] & 255);
    }
    c &&
      0 != (f & 255) &&
      255 != (f & 255) &&
      ((C.unmult = 255 / (f & 255)),
      (f =
        ((C.__clamp[Math.round(((f >>> 24) & 255) * C.unmult)] & 255) << 24) |
        ((C.__clamp[Math.round(((f >>> 16) & 255) * C.unmult)] & 255) << 16) |
        ((C.__clamp[Math.round(((f >>> 8) & 255) * C.unmult)] & 255) << 8) |
        (f & 255)));
    f =
      (((f >>> 24) & 255) << 24) |
      (((f >>> 16) & 255) << 16) |
      (((f >>> 8) & 255) << 8) |
      0;
    switch (d) {
      case 1:
        return (
          ((f & 255) << 24) |
          (((f >>> 24) & 255) << 16) |
          (((f >>> 16) & 255) << 8) |
          ((f >>> 8) & 255)
        );
      case 2:
        return (
          (((f >>> 8) & 255) << 24) |
          (((f >>> 16) & 255) << 16) |
          (((f >>> 24) & 255) << 8) |
          (f & 255)
        );
      default:
        return f;
    }
  };
  Z.getPixel32 = function (a, b, c, d) {
    var e = a.buffer.data;
    b = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
    c = a.buffer.premultiplied;
    switch (a.buffer.format) {
      case 0:
        var f =
          ((e[b] & 255) << 24) |
          ((e[b + 1] & 255) << 16) |
          ((e[b + 2] & 255) << 8) |
          (e[b + 3] & 255);
        break;
      case 1:
        f =
          ((e[b + 1] & 255) << 24) |
          ((e[b + 2] & 255) << 16) |
          ((e[b + 3] & 255) << 8) |
          (e[b] & 255);
        break;
      case 2:
        f =
          ((e[b + 2] & 255) << 24) |
          ((e[b + 1] & 255) << 16) |
          ((e[b] & 255) << 8) |
          (e[b + 3] & 255);
    }
    c &&
      0 != (f & 255) &&
      255 != (f & 255) &&
      ((C.unmult = 255 / (f & 255)),
      (f =
        ((C.__clamp[Math.round(((f >>> 24) & 255) * C.unmult)] & 255) << 24) |
        ((C.__clamp[Math.round(((f >>> 16) & 255) * C.unmult)] & 255) << 16) |
        ((C.__clamp[Math.round(((f >>> 8) & 255) * C.unmult)] & 255) << 8) |
        (f & 255)));
    switch (d) {
      case 1:
        return (
          ((f & 255) << 24) |
          (((f >>> 24) & 255) << 16) |
          (((f >>> 16) & 255) << 8) |
          ((f >>> 8) & 255)
        );
      case 2:
        return (
          (((f >>> 8) & 255) << 24) |
          (((f >>> 16) & 255) << 16) |
          (((f >>> 24) & 255) << 8) |
          (f & 255)
        );
      default:
        return f;
    }
  };
  Z.getPixels = function (a, b, c) {
    if (null == a.buffer.data) return null;
    var d = new Ra(new Je(4 * ((b.width * b.height) | 0))),
      e = a.buffer.data,
      f = a.buffer.format,
      g = a.buffer.premultiplied;
    a = new Se(a, b);
    for (var h, n, k = (b = 0), m = a.height; k < m; ) {
      h = k++;
      h = a.byteOffset + a.stride * h;
      for (var l = 0, p = a.width; l < p; ) {
        l++;
        switch (f) {
          case 0:
            n =
              ((e[h] & 255) << 24) |
              ((e[h + 1] & 255) << 16) |
              ((e[h + 2] & 255) << 8) |
              (e[h + 3] & 255);
            break;
          case 1:
            n =
              ((e[h + 1] & 255) << 24) |
              ((e[h + 2] & 255) << 16) |
              ((e[h + 3] & 255) << 8) |
              (e[h] & 255);
            break;
          case 2:
            n =
              ((e[h + 2] & 255) << 24) |
              ((e[h + 1] & 255) << 16) |
              ((e[h] & 255) << 8) |
              (e[h + 3] & 255);
        }
        g &&
          0 != (n & 255) &&
          255 != (n & 255) &&
          ((C.unmult = 255 / (n & 255)),
          (n =
            ((C.__clamp[Math.round(((n >>> 24) & 255) * C.unmult)] & 255) <<
              24) |
            ((C.__clamp[Math.round(((n >>> 16) & 255) * C.unmult)] & 255) <<
              16) |
            ((C.__clamp[Math.round(((n >>> 8) & 255) * C.unmult)] & 255) << 8) |
            (n & 255)));
        switch (c) {
          case 1:
            n =
              ((n & 255) << 24) |
              (((n >>> 24) & 255) << 16) |
              (((n >>> 16) & 255) << 8) |
              ((n >>> 8) & 255);
            break;
          case 2:
            n =
              (((n >>> 8) & 255) << 24) |
              (((n >>> 16) & 255) << 16) |
              (((n >>> 24) & 255) << 8) |
              (n & 255);
        }
        d.b[b++] = (n >>> 24) & 255;
        d.b[b++] = (n >>> 16) & 255;
        d.b[b++] = (n >>> 8) & 255;
        d.b[b++] = n & 255;
        h += 4;
      }
    }
    return d;
  };
  Z.merge = function (a, b, c, d, e, f, g, h) {
    if (null != a.buffer.data && null != b.buffer.data) {
      c = new Se(b, c);
      d = new Se(a, new Td(d.x, d.y, c.width, c.height));
      var n = b.buffer.data,
        k = a.buffer.data,
        m = b.buffer.format,
        l = a.buffer.format;
      b = b.buffer.premultiplied;
      for (
        var p = a.buffer.premultiplied, r, q, t, u, v = 0, w = d.height;
        v < w;

      ) {
        q = v++;
        r = c.byteOffset + c.stride * q;
        q = d.byteOffset + d.stride * q;
        for (var x = 0, y = d.width; x < y; ) {
          x++;
          switch (m) {
            case 0:
              t =
                ((n[r] & 255) << 24) |
                ((n[r + 1] & 255) << 16) |
                ((n[r + 2] & 255) << 8) |
                (n[r + 3] & 255);
              break;
            case 1:
              t =
                ((n[r + 1] & 255) << 24) |
                ((n[r + 2] & 255) << 16) |
                ((n[r + 3] & 255) << 8) |
                (n[r] & 255);
              break;
            case 2:
              t =
                ((n[r + 2] & 255) << 24) |
                ((n[r + 1] & 255) << 16) |
                ((n[r] & 255) << 8) |
                (n[r + 3] & 255);
          }
          b &&
            0 != (t & 255) &&
            255 != (t & 255) &&
            ((C.unmult = 255 / (t & 255)),
            (t =
              ((C.__clamp[Math.round(((t >>> 24) & 255) * C.unmult)] & 255) <<
                24) |
              ((C.__clamp[Math.round(((t >>> 16) & 255) * C.unmult)] & 255) <<
                16) |
              ((C.__clamp[Math.round(((t >>> 8) & 255) * C.unmult)] & 255) <<
                8) |
              (t & 255)));
          switch (l) {
            case 0:
              u =
                ((k[q] & 255) << 24) |
                ((k[q + 1] & 255) << 16) |
                ((k[q + 2] & 255) << 8) |
                (k[q + 3] & 255);
              break;
            case 1:
              u =
                ((k[q + 1] & 255) << 24) |
                ((k[q + 2] & 255) << 16) |
                ((k[q + 3] & 255) << 8) |
                (k[q] & 255);
              break;
            case 2:
              u =
                ((k[q + 2] & 255) << 24) |
                ((k[q + 1] & 255) << 16) |
                ((k[q] & 255) << 8) |
                (k[q + 3] & 255);
          }
          p &&
            0 != (u & 255) &&
            255 != (u & 255) &&
            ((C.unmult = 255 / (u & 255)),
            (u =
              ((C.__clamp[Math.round(((u >>> 24) & 255) * C.unmult)] & 255) <<
                24) |
              ((C.__clamp[Math.round(((u >>> 16) & 255) * C.unmult)] & 255) <<
                16) |
              ((C.__clamp[Math.round(((u >>> 8) & 255) * C.unmult)] & 255) <<
                8) |
              (u & 255)));
          u =
            (((((((t >>> 24) & 255) * e + ((u >>> 24) & 255) * (256 - e)) /
              256) |
              0) &
              255) <<
              24) |
            (((u >>> 16) & 255) << 16) |
            (((u >>> 8) & 255) << 8) |
            (u & 255);
          u =
            (((u >>> 24) & 255) << 24) |
            (((((((t >>> 16) & 255) * f + ((u >>> 16) & 255) * (256 - f)) /
              256) |
              0) &
              255) <<
              16) |
            (((u >>> 8) & 255) << 8) |
            (u & 255);
          u =
            (((u >>> 24) & 255) << 24) |
            (((u >>> 16) & 255) << 16) |
            (((((((t >>> 8) & 255) * g + ((u >>> 8) & 255) * (256 - g)) / 256) |
              0) &
              255) <<
              8) |
            (u & 255);
          u =
            (((u >>> 24) & 255) << 24) |
            (((u >>> 16) & 255) << 16) |
            (((u >>> 8) & 255) << 8) |
            (((((t & 255) * h + (u & 255) * (256 - h)) / 256) | 0) & 255);
          p &&
            (0 == (u & 255)
              ? 0 != u && (u = 0)
              : 255 != (u & 255) &&
                ((C.a16 = C.__alpha16[u & 255]),
                (u =
                  ((((((u >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
                  ((((((u >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
                  ((((((u >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
                  (u & 255))));
          switch (l) {
            case 0:
              k[q] = (u >>> 24) & 255;
              k[q + 1] = (u >>> 16) & 255;
              k[q + 2] = (u >>> 8) & 255;
              k[q + 3] = u & 255;
              break;
            case 1:
              k[q] = u & 255;
              k[q + 1] = (u >>> 24) & 255;
              k[q + 2] = (u >>> 16) & 255;
              k[q + 3] = (u >>> 8) & 255;
              break;
            case 2:
              (k[q] = (u >>> 8) & 255),
                (k[q + 1] = (u >>> 16) & 255),
                (k[q + 2] = (u >>> 24) & 255),
                (k[q + 3] = u & 255);
          }
          r += 4;
          q += 4;
        }
      }
      a.dirty = !0;
      a.version++;
    }
  };
  Z.multiplyAlpha = function (a) {
    var b = a.buffer.data;
    if (null != b && a.buffer.transparent) {
      for (var c = a.buffer.format, d, e = 0, f = (b.length / 4) | 0; e < f; ) {
        var g = e++,
          h = 4 * g;
        switch (c) {
          case 0:
            d =
              ((b[h] & 255) << 24) |
              ((b[h + 1] & 255) << 16) |
              ((b[h + 2] & 255) << 8) |
              (b[h + 3] & 255);
            break;
          case 1:
            d =
              ((b[h + 1] & 255) << 24) |
              ((b[h + 2] & 255) << 16) |
              ((b[h + 3] & 255) << 8) |
              (b[h] & 255);
            break;
          case 2:
            d =
              ((b[h + 2] & 255) << 24) |
              ((b[h + 1] & 255) << 16) |
              ((b[h] & 255) << 8) |
              (b[h + 3] & 255);
        }
        g *= 4;
        0 == (d & 255)
          ? 0 != d && (d = 0)
          : 255 != (d & 255) &&
            ((C.a16 = C.__alpha16[d & 255]),
            (d =
              ((((((d >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
              ((((((d >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
              ((((((d >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
              (d & 255)));
        switch (c) {
          case 0:
            b[g] = (d >>> 24) & 255;
            b[g + 1] = (d >>> 16) & 255;
            b[g + 2] = (d >>> 8) & 255;
            b[g + 3] = d & 255;
            break;
          case 1:
            b[g] = d & 255;
            b[g + 1] = (d >>> 24) & 255;
            b[g + 2] = (d >>> 16) & 255;
            b[g + 3] = (d >>> 8) & 255;
            break;
          case 2:
            (b[g] = (d >>> 8) & 255),
              (b[g + 1] = (d >>> 16) & 255),
              (b[g + 2] = (d >>> 24) & 255),
              (b[g + 3] = d & 255);
        }
      }
      a.buffer.premultiplied = !0;
      a.dirty = !0;
      a.version++;
    }
  };
  Z.resize = function (a, b, c) {
    var d = a.buffer;
    if (d.width != b || d.height != c) {
      var e = b * c * 4;
      e = null != e ? new lb(e) : null;
      e = new ag(e, b, c);
      for (
        var f = a.width,
          g = a.height,
          h = a.get_data(),
          n = e.data,
          k,
          m,
          l,
          p,
          r,
          q,
          t,
          u,
          v,
          w = 0;
        w < c;

      )
        for (var x = w++, y = 0, z = b; y < z; )
          (r = y++),
            (u = ((r + 0.5) / b) * f - 0.5),
            (v = ((x + 0.5) / c) * g - 0.5),
            (q = u | 0),
            (t = v | 0),
            (k = 4 * (t * f + q)),
            (m = q < f - 1 ? k + 4 : k),
            (l = t < g - 1 ? k + 4 * f : k),
            (p = m != k ? l + 4 : l),
            (r = 4 * (x * b + r)),
            (q = u - q),
            (t = v - t),
            (v = 1 - q),
            (u = 1 - t),
            (n[r] =
              ((Xa.toFloat(h[k]) * v + Xa.toFloat(h[m]) * q) * u +
                (Xa.toFloat(h[l]) * v + Xa.toFloat(h[p]) * q) * t) |
              0),
            (n[r + 1] =
              ((Xa.toFloat(h[k + 1]) * v + Xa.toFloat(h[m + 1]) * q) * u +
                (Xa.toFloat(h[l + 1]) * v + Xa.toFloat(h[p + 1]) * q) * t) |
              0),
            (n[r + 2] =
              ((Xa.toFloat(h[k + 2]) * v + Xa.toFloat(h[m + 2]) * q) * u +
                (Xa.toFloat(h[l + 2]) * v + Xa.toFloat(h[p + 2]) * q) * t) |
              0),
            (n[r + 3] =
              0 == h[m + 3] || 0 == h[l + 3] || 0 == h[p + 3] ? 0 : h[k + 3]);
      d.data = e.data;
      d.width = b;
      d.height = c;
      d.__srcImage = null;
      d.__srcImageData = null;
      d.__srcCanvas = null;
      d.__srcContext = null;
      a.dirty = !0;
      a.version++;
    }
  };
  Z.resizeBuffer = function (a, b, c) {
    var d = a.buffer,
      e = a.get_data(),
      f = b * c * 4;
    f = null != f ? new lb(f) : null;
    for (var g, h, n = 0, k = d.height; n < k; )
      for (var m = n++, l = 0, p = d.width; l < p; )
        (h = l++),
          (g = 4 * (m * d.width + h)),
          (h = 4 * (m * b + h)),
          (f[h] = e[g]),
          (f[h + 1] = e[g + 1]),
          (f[h + 2] = e[g + 2]),
          (f[h + 3] = e[g + 3]);
    d.data = f;
    d.width = b;
    d.height = c;
    d.__srcImage = null;
    d.__srcImageData = null;
    d.__srcCanvas = null;
    d.__srcContext = null;
    a.dirty = !0;
    a.version++;
  };
  Z.setFormat = function (a, b) {
    var c = a.buffer.data;
    if (null != c) {
      var d = (c.length / 4) | 0;
      switch (a.get_format()) {
        case 0:
          var e = 0;
          var f = 1;
          var g = 2;
          var h = 3;
          break;
        case 1:
          e = 1;
          f = 2;
          g = 3;
          h = 0;
          break;
        case 2:
          (e = 2), (f = 1), (g = 0), (h = 3);
      }
      switch (b) {
        case 0:
          var n = 0;
          var k = 1;
          var m = 2;
          var l = 3;
          break;
        case 1:
          n = 1;
          k = 2;
          m = 3;
          l = 0;
          break;
        case 2:
          (n = 2), (k = 1), (m = 0), (l = 3);
      }
      for (var p = 0; p < d; ) {
        var r = 4 * p++;
        var q = c[r + e];
        var t = c[r + f];
        var u = c[r + g];
        var v = c[r + h];
        c[r + n] = q;
        c[r + k] = t;
        c[r + m] = u;
        c[r + l] = v;
      }
      a.buffer.format = b;
      a.dirty = !0;
      a.version++;
    }
  };
  Z.setPixel = function (a, b, c, d, e) {
    switch (e) {
      case 1:
        d =
          (((d >>> 16) & 255) << 24) |
          (((d >>> 8) & 255) << 16) |
          ((d & 255) << 8) |
          ((d >>> 24) & 255);
        break;
      case 2:
        d =
          (((d >>> 8) & 255) << 24) |
          (((d >>> 16) & 255) << 16) |
          (((d >>> 24) & 255) << 8) |
          (d & 255);
    }
    e = 0;
    var f = a.buffer.data,
      g = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX),
      h = a.buffer.premultiplied;
    switch (a.buffer.format) {
      case 0:
        e =
          ((f[g] & 255) << 24) |
          ((f[g + 1] & 255) << 16) |
          ((f[g + 2] & 255) << 8) |
          (f[g + 3] & 255);
        break;
      case 1:
        e =
          ((f[g + 1] & 255) << 24) |
          ((f[g + 2] & 255) << 16) |
          ((f[g + 3] & 255) << 8) |
          (f[g] & 255);
        break;
      case 2:
        e =
          ((f[g + 2] & 255) << 24) |
          ((f[g + 1] & 255) << 16) |
          ((f[g] & 255) << 8) |
          (f[g + 3] & 255);
    }
    h &&
      0 != (e & 255) &&
      255 != (e & 255) &&
      ((C.unmult = 255 / (e & 255)),
      (e =
        ((C.__clamp[Math.round(((e >>> 24) & 255) * C.unmult)] & 255) << 24) |
        ((C.__clamp[Math.round(((e >>> 16) & 255) * C.unmult)] & 255) << 16) |
        ((C.__clamp[Math.round(((e >>> 8) & 255) * C.unmult)] & 255) << 8) |
        (e & 255)));
    d =
      (((d >>> 24) & 255) << 24) |
      (((d >>> 16) & 255) << 16) |
      (((d >>> 8) & 255) << 8) |
      (e & 255);
    e = a.buffer.data;
    b = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
    a.buffer.premultiplied &&
      (0 == (d & 255)
        ? 0 != d && (d = 0)
        : 255 != (d & 255) &&
          ((C.a16 = C.__alpha16[d & 255]),
          (d =
            ((((((d >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
            ((((((d >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
            ((((((d >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
            (d & 255))));
    switch (a.buffer.format) {
      case 0:
        e[b] = (d >>> 24) & 255;
        e[b + 1] = (d >>> 16) & 255;
        e[b + 2] = (d >>> 8) & 255;
        e[b + 3] = d & 255;
        break;
      case 1:
        e[b] = d & 255;
        e[b + 1] = (d >>> 24) & 255;
        e[b + 2] = (d >>> 16) & 255;
        e[b + 3] = (d >>> 8) & 255;
        break;
      case 2:
        (e[b] = (d >>> 8) & 255),
          (e[b + 1] = (d >>> 16) & 255),
          (e[b + 2] = (d >>> 24) & 255),
          (e[b + 3] = d & 255);
    }
    a.dirty = !0;
    a.version++;
  };
  Z.setPixel32 = function (a, b, c, d, e) {
    switch (e) {
      case 1:
        d =
          (((d >>> 16) & 255) << 24) |
          (((d >>> 8) & 255) << 16) |
          ((d & 255) << 8) |
          ((d >>> 24) & 255);
        break;
      case 2:
        d =
          (((d >>> 8) & 255) << 24) |
          (((d >>> 16) & 255) << 16) |
          (((d >>> 24) & 255) << 8) |
          (d & 255);
    }
    a.get_transparent() ||
      (d =
        (((d >>> 24) & 255) << 24) |
        (((d >>> 16) & 255) << 16) |
        (((d >>> 8) & 255) << 8) |
        255);
    e = a.buffer.data;
    b = 4 * (c + a.offsetY) * a.buffer.width + 4 * (b + a.offsetX);
    a.buffer.premultiplied &&
      (0 == (d & 255)
        ? 0 != d && (d = 0)
        : 255 != (d & 255) &&
          ((C.a16 = C.__alpha16[d & 255]),
          (d =
            ((((((d >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
            ((((((d >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
            ((((((d >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
            (d & 255))));
    switch (a.buffer.format) {
      case 0:
        e[b] = (d >>> 24) & 255;
        e[b + 1] = (d >>> 16) & 255;
        e[b + 2] = (d >>> 8) & 255;
        e[b + 3] = d & 255;
        break;
      case 1:
        e[b] = d & 255;
        e[b + 1] = (d >>> 24) & 255;
        e[b + 2] = (d >>> 16) & 255;
        e[b + 3] = (d >>> 8) & 255;
        break;
      case 2:
        (e[b] = (d >>> 8) & 255),
          (e[b + 1] = (d >>> 16) & 255),
          (e[b + 2] = (d >>> 24) & 255),
          (e[b + 3] = d & 255);
    }
    a.dirty = !0;
    a.version++;
  };
  Z.setPixels = function (a, b, c, d, e) {
    if (null != a.buffer.data) {
      var f = a.buffer.data,
        g = a.buffer.format,
        h = a.buffer.premultiplied;
      b = new Se(a, b);
      var n = a.get_transparent(),
        k = c.bytes;
      c = c.offset;
      e = e != If.BIG_ENDIAN;
      for (var m = 0, l = b.height; m < l; ) {
        var p = m++;
        p = b.byteOffset + b.stride * p;
        for (var r = 0, q = b.width; r < q; ) {
          var t = r++;
          var u = e
            ? k.getInt32(c)
            : k.b[c + 3] |
              (k.b[c + 2] << 8) |
              (k.b[c + 1] << 16) |
              (k.b[c] << 24);
          c += 4;
          switch (d) {
            case 1:
              u =
                (((u >>> 16) & 255) << 24) |
                (((u >>> 8) & 255) << 16) |
                ((u & 255) << 8) |
                ((u >>> 24) & 255);
              break;
            case 2:
              u =
                (((u >>> 8) & 255) << 24) |
                (((u >>> 16) & 255) << 16) |
                (((u >>> 24) & 255) << 8) |
                (u & 255);
          }
          n ||
            (u =
              (((u >>> 24) & 255) << 24) |
              (((u >>> 16) & 255) << 16) |
              (((u >>> 8) & 255) << 8) |
              255);
          t = p + 4 * t;
          h &&
            (0 == (u & 255)
              ? 0 != u && (u = 0)
              : 255 != (u & 255) &&
                ((C.a16 = C.__alpha16[u & 255]),
                (u =
                  ((((((u >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
                  ((((((u >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
                  ((((((u >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
                  (u & 255))));
          switch (g) {
            case 0:
              f[t] = (u >>> 24) & 255;
              f[t + 1] = (u >>> 16) & 255;
              f[t + 2] = (u >>> 8) & 255;
              f[t + 3] = u & 255;
              break;
            case 1:
              f[t] = u & 255;
              f[t + 1] = (u >>> 24) & 255;
              f[t + 2] = (u >>> 16) & 255;
              f[t + 3] = (u >>> 8) & 255;
              break;
            case 2:
              (f[t] = (u >>> 8) & 255),
                (f[t + 1] = (u >>> 16) & 255),
                (f[t + 2] = (u >>> 24) & 255),
                (f[t + 3] = u & 255);
          }
        }
      }
      a.dirty = !0;
      a.version++;
    }
  };
  Z.threshold = function (a, b, c, d, e, f, g, h, n, k) {
    switch (k) {
      case 1:
        g =
          (((g >>> 16) & 255) << 24) |
          (((g >>> 8) & 255) << 16) |
          ((g & 255) << 8) |
          ((g >>> 24) & 255);
        h =
          (((h >>> 16) & 255) << 24) |
          (((h >>> 8) & 255) << 16) |
          ((h & 255) << 8) |
          ((h >>> 24) & 255);
        f =
          (((f >>> 16) & 255) << 24) |
          (((f >>> 8) & 255) << 16) |
          ((f & 255) << 8) |
          ((f >>> 24) & 255);
        break;
      case 2:
        (g =
          (((g >>> 8) & 255) << 24) |
          (((g >>> 16) & 255) << 16) |
          (((g >>> 24) & 255) << 8) |
          (g & 255)),
          (h =
            (((h >>> 8) & 255) << 24) |
            (((h >>> 16) & 255) << 16) |
            (((h >>> 24) & 255) << 8) |
            (h & 255)),
          (f =
            (((f >>> 8) & 255) << 24) |
            (((f >>> 16) & 255) << 16) |
            (((f >>> 24) & 255) << 8) |
            (f & 255));
    }
    switch (e) {
      case "!=":
        e = 0;
        break;
      case "<":
        e = 2;
        break;
      case "<=":
        e = 3;
        break;
      case "==":
        e = 1;
        break;
      case ">":
        e = 4;
        break;
      case ">=":
        e = 5;
        break;
      default:
        e = -1;
    }
    if (-1 == e) return 0;
    k = b.buffer.data;
    var m = a.buffer.data;
    if (null == k || null == m) return 0;
    var l = 0;
    c = new Se(b, c);
    d = new Se(a, new Td(d.x, d.y, c.width, c.height));
    var p = b.buffer.format,
      r = a.buffer.format;
    b = b.buffer.premultiplied;
    for (
      var q = a.buffer.premultiplied, t, u, v, w, x = 0, y = d.height;
      x < y;

    ) {
      u = x++;
      t = c.byteOffset + c.stride * u;
      u = d.byteOffset + d.stride * u;
      for (var z = 0, B = d.width; z < B; ) {
        z++;
        switch (p) {
          case 0:
            v =
              ((k[t] & 255) << 24) |
              ((k[t + 1] & 255) << 16) |
              ((k[t + 2] & 255) << 8) |
              (k[t + 3] & 255);
            break;
          case 1:
            v =
              ((k[t + 1] & 255) << 24) |
              ((k[t + 2] & 255) << 16) |
              ((k[t + 3] & 255) << 8) |
              (k[t] & 255);
            break;
          case 2:
            v =
              ((k[t + 2] & 255) << 24) |
              ((k[t + 1] & 255) << 16) |
              ((k[t] & 255) << 8) |
              (k[t + 3] & 255);
        }
        b &&
          0 != (v & 255) &&
          255 != (v & 255) &&
          ((C.unmult = 255 / (v & 255)),
          (v =
            ((C.__clamp[Math.round(((v >>> 24) & 255) * C.unmult)] & 255) <<
              24) |
            ((C.__clamp[Math.round(((v >>> 16) & 255) * C.unmult)] & 255) <<
              16) |
            ((C.__clamp[Math.round(((v >>> 8) & 255) * C.unmult)] & 255) << 8) |
            (v & 255)));
        w = v & h;
        var A = (w >>> 24) & 255;
        var D = (f >>> 24) & 255;
        A != D
          ? (w = Xa.gt(A, D) ? 1 : -1)
          : ((A = (w >>> 16) & 255),
            (D = (f >>> 16) & 255),
            A != D
              ? (w = Xa.gt(A, D) ? 1 : -1)
              : ((A = (w >>> 8) & 255),
                (D = (f >>> 8) & 255),
                A != D
                  ? (w = Xa.gt(A, D) ? 1 : -1)
                  : ((A = w & 255),
                    (D = f & 255),
                    (w = A != D ? (Xa.gt(A, D) ? 1 : -1) : 0))));
        switch (e) {
          case 0:
            w = 0 != w;
            break;
          case 1:
            w = 0 == w;
            break;
          case 2:
            w = -1 == w;
            break;
          case 3:
            w = 0 != w ? -1 == w : !0;
            break;
          case 4:
            w = 1 == w;
            break;
          case 5:
            w = 0 != w ? 1 == w : !0;
            break;
          default:
            w = !1;
        }
        if (w) {
          q &&
            (0 == (g & 255)
              ? 0 != g && (g = 0)
              : 255 != (g & 255) &&
                ((C.a16 = C.__alpha16[g & 255]),
                (g =
                  ((((((g >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
                  ((((((g >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
                  ((((((g >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
                  (g & 255))));
          switch (r) {
            case 0:
              m[u] = (g >>> 24) & 255;
              m[u + 1] = (g >>> 16) & 255;
              m[u + 2] = (g >>> 8) & 255;
              m[u + 3] = g & 255;
              break;
            case 1:
              m[u] = g & 255;
              m[u + 1] = (g >>> 24) & 255;
              m[u + 2] = (g >>> 16) & 255;
              m[u + 3] = (g >>> 8) & 255;
              break;
            case 2:
              (m[u] = (g >>> 8) & 255),
                (m[u + 1] = (g >>> 16) & 255),
                (m[u + 2] = (g >>> 24) & 255),
                (m[u + 3] = g & 255);
          }
          ++l;
        } else if (n)
          switch (
            (q &&
              (0 == (v & 255)
                ? 0 != v && (v = 0)
                : 255 != (v & 255) &&
                  ((C.a16 = C.__alpha16[v & 255]),
                  (v =
                    ((((((v >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
                    ((((((v >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
                    ((((((v >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
                    (v & 255)))),
            r)
          ) {
            case 0:
              m[u] = (v >>> 24) & 255;
              m[u + 1] = (v >>> 16) & 255;
              m[u + 2] = (v >>> 8) & 255;
              m[u + 3] = v & 255;
              break;
            case 1:
              m[u] = v & 255;
              m[u + 1] = (v >>> 24) & 255;
              m[u + 2] = (v >>> 16) & 255;
              m[u + 3] = (v >>> 8) & 255;
              break;
            case 2:
              (m[u] = (v >>> 8) & 255),
                (m[u + 1] = (v >>> 16) & 255),
                (m[u + 2] = (v >>> 24) & 255),
                (m[u + 3] = v & 255);
          }
        t += 4;
        u += 4;
      }
    }
    0 < l && ((a.dirty = !0), a.version++);
    return l;
  };
  Z.unmultiplyAlpha = function (a) {
    var b = a.buffer.data;
    if (null != b) {
      for (var c = a.buffer.format, d, e = 0, f = (b.length / 4) | 0; e < f; ) {
        var g = e++,
          h = 4 * g;
        switch (c) {
          case 0:
            d =
              ((b[h] & 255) << 24) |
              ((b[h + 1] & 255) << 16) |
              ((b[h + 2] & 255) << 8) |
              (b[h + 3] & 255);
            break;
          case 1:
            d =
              ((b[h + 1] & 255) << 24) |
              ((b[h + 2] & 255) << 16) |
              ((b[h + 3] & 255) << 8) |
              (b[h] & 255);
            break;
          case 2:
            d =
              ((b[h + 2] & 255) << 24) |
              ((b[h + 1] & 255) << 16) |
              ((b[h] & 255) << 8) |
              (b[h + 3] & 255);
        }
        0 != (d & 255) &&
          255 != (d & 255) &&
          ((C.unmult = 255 / (d & 255)),
          (d =
            ((C.__clamp[Math.round(((d >>> 24) & 255) * C.unmult)] & 255) <<
              24) |
            ((C.__clamp[Math.round(((d >>> 16) & 255) * C.unmult)] & 255) <<
              16) |
            ((C.__clamp[Math.round(((d >>> 8) & 255) * C.unmult)] & 255) << 8) |
            (d & 255)));
        g *= 4;
        switch (c) {
          case 0:
            b[g] = (d >>> 24) & 255;
            b[g + 1] = (d >>> 16) & 255;
            b[g + 2] = (d >>> 8) & 255;
            b[g + 3] = d & 255;
            break;
          case 1:
            b[g] = d & 255;
            b[g + 1] = (d >>> 24) & 255;
            b[g + 2] = (d >>> 16) & 255;
            b[g + 3] = (d >>> 8) & 255;
            break;
          case 2:
            (b[g] = (d >>> 8) & 255),
              (b[g + 1] = (d >>> 16) & 255),
              (b[g + 2] = (d >>> 24) & 255),
              (b[g + 3] = d & 255);
        }
      }
      a.buffer.premultiplied = !1;
      a.dirty = !0;
      a.version++;
    }
  };
  Z.__boxBlur = function (a, b, c, d, e, f) {
    b.set(a);
    e |= 0;
    f |= 0;
    Z.__boxBlurH(b, a, c, d, e, 0);
    Z.__boxBlurH(b, a, c, d, e, 1);
    Z.__boxBlurH(b, a, c, d, e, 2);
    Z.__boxBlurH(b, a, c, d, e, 3);
    e = 1 / (f + f + 1);
    for (var g = 4 * c, h, n, k, m, l, p, r = 0; r < c; ) {
      n = h = 4 * r++;
      k = h + f * g;
      m = a[h];
      l = a[h + g * (d - 1)];
      p = (f + 1) * m;
      for (var q = 0, t = f; q < t; ) {
        var u = q++;
        p += a[h + u * g];
      }
      q = 0;
      for (t = f + 1; q < t; )
        q++,
          (p += a[k] - m),
          (b[h] = Math.round(Xa.toFloat(p) * e)),
          (k += g),
          (h += g);
      m = f + 1;
      for (q = d - f; m < q; )
        m++,
          (p += a[k] - a[n]),
          (b[h] = Math.round(Xa.toFloat(p) * e)),
          (n += g),
          (k += g),
          (h += g);
      k = d - f;
      for (m = d; k < m; )
        k++,
          (p += l - a[n]),
          (b[h] = Math.round(Xa.toFloat(p) * e)),
          (n += g),
          (h += g);
    }
    e = 1 / (f + f + 1);
    g = 4 * c;
    for (r = 0; r < c; ) {
      n = h = 4 * r++ + 1;
      k = h + f * g;
      m = a[h];
      l = a[h + g * (d - 1)];
      p = (f + 1) * m;
      q = 0;
      for (t = f; q < t; ) (u = q++), (p += a[h + u * g]);
      q = 0;
      for (t = f + 1; q < t; )
        q++,
          (p += a[k] - m),
          (b[h] = Math.round(Xa.toFloat(p) * e)),
          (k += g),
          (h += g);
      m = f + 1;
      for (q = d - f; m < q; )
        m++,
          (p += a[k] - a[n]),
          (b[h] = Math.round(Xa.toFloat(p) * e)),
          (n += g),
          (k += g),
          (h += g);
      k = d - f;
      for (m = d; k < m; )
        k++,
          (p += l - a[n]),
          (b[h] = Math.round(Xa.toFloat(p) * e)),
          (n += g),
          (h += g);
    }
    e = 1 / (f + f + 1);
    g = 4 * c;
    for (r = 0; r < c; ) {
      n = h = 4 * r++ + 2;
      k = h + f * g;
      m = a[h];
      l = a[h + g * (d - 1)];
      p = (f + 1) * m;
      q = 0;
      for (t = f; q < t; ) (u = q++), (p += a[h + u * g]);
      q = 0;
      for (t = f + 1; q < t; )
        q++,
          (p += a[k] - m),
          (b[h] = Math.round(Xa.toFloat(p) * e)),
          (k += g),
          (h += g);
      m = f + 1;
      for (q = d - f; m < q; )
        m++,
          (p += a[k] - a[n]),
          (b[h] = Math.round(Xa.toFloat(p) * e)),
          (n += g),
          (k += g),
          (h += g);
      k = d - f;
      for (m = d; k < m; )
        k++,
          (p += l - a[n]),
          (b[h] = Math.round(Xa.toFloat(p) * e)),
          (n += g),
          (h += g);
    }
    e = 1 / (f + f + 1);
    g = 4 * c;
    for (r = 0; r < c; ) {
      n = h = 4 * r++ + 3;
      k = h + f * g;
      m = a[h];
      l = a[h + g * (d - 1)];
      p = (f + 1) * m;
      q = 0;
      for (t = f; q < t; ) (u = q++), (p += a[h + u * g]);
      q = 0;
      for (t = f + 1; q < t; )
        q++,
          (p += a[k] - m),
          (b[h] = Math.round(Xa.toFloat(p) * e)),
          (k += g),
          (h += g);
      m = f + 1;
      for (q = d - f; m < q; )
        m++,
          (p += a[k] - a[n]),
          (b[h] = Math.round(Xa.toFloat(p) * e)),
          (n += g),
          (k += g),
          (h += g);
      k = d - f;
      for (m = d; k < m; )
        k++,
          (p += l - a[n]),
          (b[h] = Math.round(Xa.toFloat(p) * e)),
          (n += g),
          (h += g);
    }
  };
  Z.__boxBlurH = function (a, b, c, d, e, f) {
    for (var g = 1 / (e + e + 1), h, n, k, m, l, p, q = 0; q < d; ) {
      n = h = q++ * c;
      k = h + e;
      m = a[4 * h + f];
      l = a[4 * (h + c - 1) + f];
      p = (e + 1) * m;
      for (var r = 0, t = e; r < t; ) {
        var u = r++;
        p += a[4 * (h + u) + f];
      }
      r = 0;
      for (t = e + 1; r < t; )
        r++,
          (p += a[4 * k + f] - m),
          (b[4 * h + f] = Math.round(Xa.toFloat(p) * g)),
          ++k,
          ++h;
      m = e + 1;
      for (r = c - e; m < r; )
        m++,
          (p += a[4 * k + f] - a[4 * n + f]),
          (b[4 * h + f] = Math.round(Xa.toFloat(p) * g)),
          ++k,
          ++n,
          ++h;
      k = c - e;
      for (m = c; k < m; )
        k++,
          (p += l - a[4 * n + f]),
          (b[4 * h + f] = Math.round(Xa.toFloat(p) * g)),
          ++n,
          ++h;
    }
  };
  Z.__boxBlurT = function (a, b, c, d, e, f) {
    for (var g = 1 / (e + e + 1), h = 4 * c, n, k, m, l, p, q, r = 0; r < c; ) {
      k = n = 4 * r++ + f;
      m = n + e * h;
      l = a[n];
      p = a[n + h * (d - 1)];
      q = (e + 1) * l;
      for (var t = 0, u = e; t < u; ) {
        var v = t++;
        q += a[n + v * h];
      }
      t = 0;
      for (u = e + 1; t < u; )
        t++,
          (q += a[m] - l),
          (b[n] = Math.round(Xa.toFloat(q) * g)),
          (m += h),
          (n += h);
      l = e + 1;
      for (t = d - e; l < t; )
        l++,
          (q += a[m] - a[k]),
          (b[n] = Math.round(Xa.toFloat(q) * g)),
          (k += h),
          (m += h),
          (n += h);
      m = d - e;
      for (l = d; m < l; )
        m++,
          (q += p - a[k]),
          (b[n] = Math.round(Xa.toFloat(q) * g)),
          (k += h),
          (n += h);
    }
  };
  Z.__calculateSourceOffset = function (a, b, c, d) {
    c -= b.x | 0;
    b = d - (b.y | 0);
    return 0 > c || 0 > b || c >= a.width || b >= a.height
      ? -1
      : 4 * (b * (a.width | 0) + c);
  };
  Z.__getBoxesForGaussianBlur = function (a, b) {
    var c = Math.floor(Math.sqrt((12 * a * a) / b + 1));
    0 == c % 2 && --c;
    var d = c + 2;
    a = Math.round((12 * a * a - b * c * c - 4 * b * c - 3 * b) / (-4 * c - 4));
    for (var e = [], f = 0; f < b; ) {
      var g = f++;
      e.push(g < a ? c : d);
    }
    return e;
  };
  Z.__pixelCompare = function (a, b) {
    var c = (a >>> 24) & 255;
    var d = (b >>> 24) & 255;
    if (c != d) return Xa.gt(c, d) ? 1 : -1;
    c = (a >>> 16) & 255;
    d = (b >>> 16) & 255;
    if (c != d) return Xa.gt(c, d) ? 1 : -1;
    c = (a >>> 8) & 255;
    d = (b >>> 8) & 255;
    if (c != d) return Xa.gt(c, d) ? 1 : -1;
    c = a & 255;
    d = b & 255;
    return c != d ? (Xa.gt(c, d) ? 1 : -1) : 0;
  };
  Z.__translatePixel = function (a, b, c, d, e, f, g) {
    c = 4 * (f * (c.width | 0) + e);
    b = Z.__calculateSourceOffset(b, d, e, f);
    0 > b
      ? (a[c] = a[c + 1] = a[c + 2] = a[c + 3] = 0)
      : ((a[c] = a[b]),
        (a[c + 1] = a[b + 1]),
        (a[c + 2] = a[b + 2]),
        (g = (Xa.toFloat(a[b + 3]) * g) | 0),
        (a[c + 3] = 0 > g ? 0 : 255 < g ? 255 : g));
  };
  var Se = function (a, b) {
    this.image = a;
    null == b
      ? (this.rect = a.get_rect())
      : (0 > b.x && (b.x = 0),
        0 > b.y && (b.y = 0),
        b.x + b.width > a.width && (b.width = a.width - b.x),
        b.y + b.height > a.height && (b.height = a.height - b.y),
        0 > b.width && (b.width = 0),
        0 > b.height && (b.height = 0),
        (this.rect = b));
    this.stride = a.buffer.get_stride();
    this.__update();
  };
  p["lime._internal.graphics._ImageDataUtil.ImageDataView"] = Se;
  Se.__name__ = [
    "lime",
    "_internal",
    "graphics",
    "_ImageDataUtil",
    "ImageDataView",
  ];
  Se.prototype = {
    x: null,
    y: null,
    height: null,
    width: null,
    byteOffset: null,
    image: null,
    rect: null,
    stride: null,
    tempRect: null,
    clip: function (a, b, c, d) {
      null == this.tempRect && (this.tempRect = new Td());
      this.tempRect.setTo(a, b, c, d);
      this.rect.intersection(this.tempRect, this.rect);
      this.__update();
    },
    hasRow: function (a) {
      return 0 <= a ? a < this.height : !1;
    },
    offset: function (a, b) {
      0 > a
        ? ((this.rect.x += a), 0 > this.rect.x && (this.rect.x = 0))
        : ((this.rect.x += a), (this.rect.width -= a));
      0 > b
        ? ((this.rect.y += b), 0 > this.rect.y && (this.rect.y = 0))
        : ((this.rect.y += b), (this.rect.height -= b));
      this.__update();
    },
    row: function (a) {
      return this.byteOffset + this.stride * a;
    },
    __update: function () {
      this.x = Math.ceil(this.rect.x);
      this.y = Math.ceil(this.rect.y);
      this.width = Math.floor(this.rect.width);
      this.height = Math.floor(this.rect.height);
      this.byteOffset =
        this.stride * (this.y + this.image.offsetY) +
        4 * (this.x + this.image.offsetX);
    },
    __class__: Se,
  };
  var bu = function () {};
  p["lime._internal.macros.AssetsMacro"] = bu;
  bu.__name__ = ["lime", "_internal", "macros", "AssetsMacro"];
  var rh = {};
  p["lime._internal.unifill._CodePoint.CodePoint_Impl_"] = rh;
  rh.__name__ = [
    "lime",
    "_internal",
    "unifill",
    "_CodePoint",
    "CodePoint_Impl_",
  ];
  rh.fromInt = function (a) {
    if (
      !(0 <= a && 1114111 >= a) ||
      (55296 <= a && 56319 >= a) ||
      (56320 <= a && 57343 >= a)
    )
      throw new v(new Xh(a));
    return a;
  };
  rh.cons = function (a, b) {
    return (
      (65535 >= a
        ? String.fromCharCode(a)
        : String.fromCharCode((a >> 10) + 55232) +
          String.fromCharCode((a & 1023) | 56320)) + b
    );
  };
  rh.snoc = function (a, b) {
    b =
      65535 >= b
        ? String.fromCharCode(b)
        : String.fromCharCode((b >> 10) + 55232) +
          String.fromCharCode((b & 1023) | 56320);
    return a + b;
  };
  rh.addInt = function (a, b) {
    a += b;
    if (
      !(0 <= a && 1114111 >= a) ||
      (55296 <= a && 56319 >= a) ||
      (56320 <= a && 57343 >= a)
    )
      throw new v(new Xh(a));
    return a;
  };
  rh.sub = function (a, b) {
    return a - b;
  };
  rh.subInt = function (a, b) {
    a -= b;
    if (
      !(0 <= a && 1114111 >= a) ||
      (55296 <= a && 56319 >= a) ||
      (56320 <= a && 57343 >= a)
    )
      throw new v(new Xh(a));
    return a;
  };
  rh._new = function (a) {
    return a;
  };
  rh.toString = function (a) {
    return 65535 >= a
      ? String.fromCharCode(a)
      : String.fromCharCode((a >> 10) + 55232) +
          String.fromCharCode((a & 1023) | 56320);
  };
  rh.toInt = function (a) {
    return a;
  };
  var Op = function (a) {
    this.i = 0;
    this.string = a;
    this.index = 0;
    this.endIndex = a.length;
  };
  p["lime._internal.unifill.CodePointIter"] = Op;
  Op.__name__ = ["lime", "_internal", "unifill", "CodePointIter"];
  Op.prototype = {
    string: null,
    index: null,
    endIndex: null,
    hasNext: function () {
      return this.index < this.endIndex;
    },
    i: null,
    next: function () {
      var a = (this.i = this.index),
        b = this.string.charCodeAt(this.index);
      this.index = a + (55296 <= b && 56319 >= b ? 2 : 1);
      return ec.codePointAt(this.string, this.i);
    },
    __class__: Op,
  };
  var oj = function () {};
  p["lime._internal.unifill.Exception"] = oj;
  oj.__name__ = ["lime", "_internal", "unifill", "Exception"];
  oj.prototype = {
    toString: function () {
      throw new v(null);
    },
    __class__: oj,
  };
  var Xh = function (a) {
    this.code = a;
  };
  p["lime._internal.unifill.InvalidCodePoint"] = Xh;
  Xh.__name__ = ["lime", "_internal", "unifill", "InvalidCodePoint"];
  Xh.__super__ = oj;
  Xh.prototype = x(oj.prototype, {
    code: null,
    toString: function () {
      return "InvalidCodePoint(code: " + this.code + ")";
    },
    __class__: Xh,
  });
  var Yh = function (a) {
    this.index = a;
  };
  p["lime._internal.unifill.InvalidCodeUnitSequence"] = Yh;
  Yh.__name__ = ["lime", "_internal", "unifill", "InvalidCodeUnitSequence"];
  Yh.__super__ = oj;
  Yh.prototype = x(oj.prototype, {
    index: null,
    toString: function () {
      return "InvalidCodeUnitSequence(index: " + this.index + ")";
    },
    __class__: Yh,
  });
  var pf = function () {};
  p["lime._internal.unifill.InternalEncoding"] = pf;
  pf.__name__ = ["lime", "_internal", "unifill", "InternalEncoding"];
  pf.__properties__ = { get_internalEncoding: "get_internalEncoding" };
  pf.get_internalEncoding = function () {
    return "UTF-16";
  };
  pf.codeUnitAt = function (a, b) {
    return a.charCodeAt(b);
  };
  pf.codePointAt = function (a, b) {
    return ec.codePointAt(a, b);
  };
  pf.charAt = function (a, b) {
    var c = a.charCodeAt(b);
    return Q.substr(a, b, 55296 <= c && 56319 >= c ? 2 : 1);
  };
  pf.codePointCount = function (a, b, c) {
    return ec.codePointCount(a, b, c);
  };
  pf.codePointWidthAt = function (a, b) {
    a = a.charCodeAt(b);
    return 55296 <= a && 56319 >= a ? 2 : 1;
  };
  pf.codePointWidthBefore = function (a, b) {
    a = a.charCodeAt(b - 1);
    return 56320 <= a && 57343 >= a ? 2 : 1;
  };
  pf.offsetByCodePoints = function (a, b, c) {
    if (0 <= c) {
      for (var d = a.length, e = 0; e < c && b < d; ) {
        var f = a.charCodeAt(b);
        b += 55296 <= f && 56319 >= f ? 2 : 1;
        ++e;
      }
      return b;
    }
    for (d = 0; d < -c && 0 < b; )
      (e = a.charCodeAt(b - 1)), (b -= 56320 <= e && 57343 >= e ? 2 : 1), ++d;
    return b;
  };
  pf.backwardOffsetByCodePoints = function (a, b, c) {
    c = -c;
    if (0 <= c) {
      for (var d = a.length, e = 0; e < c && b < d; ) {
        var f = a.charCodeAt(b);
        b += 55296 <= f && 56319 >= f ? 2 : 1;
        ++e;
      }
      return b;
    }
    for (d = 0; d < -c && 0 < b; )
      (e = a.charCodeAt(b - 1)), (b -= 56320 <= e && 57343 >= e ? 2 : 1), ++d;
    return b;
  };
  pf.fromCodePoint = function (a) {
    return 65535 >= a
      ? String.fromCharCode(a)
      : String.fromCharCode((a >> 10) + 55232) +
          String.fromCharCode((a & 1023) | 56320);
  };
  pf.fromCodePoints = function (a) {
    var b = new Cf();
    for (a = Qb(a)(); a.hasNext(); ) {
      var c = a.next();
      65535 >= c
        ? (b.b += String.fromCharCode(c))
        : ((b.b += String.fromCharCode((c >> 10) + 55232)),
          (b.b += String.fromCharCode((c & 1023) | 56320)));
    }
    return b.b;
  };
  pf.validate = function (a) {
    ec.validate(a);
  };
  pf.isValidString = function (a) {
    try {
      return ec.validate(a), !0;
    } catch (b) {
      X.lastException = b;
      b instanceof v && (b = b.val);
      if (u.__instanceof(b, Yh)) return !1;
      throw b;
    }
  };
  pf.encodeWith = function (a, b) {
    65535 >= b ? a(b) : (a((b >> 10) + 55232), a((b & 1023) | 56320));
  };
  var Os = function (a, b, c) {
    this.i = 0;
    this.string = a;
    this.index = b;
    this.endIndex = c;
  };
  p["lime._internal.unifill.InternalEncodingIter"] = Os;
  Os.__name__ = ["lime", "_internal", "unifill", "InternalEncodingIter"];
  Os.prototype = {
    string: null,
    index: null,
    endIndex: null,
    hasNext: function () {
      return this.index < this.endIndex;
    },
    i: null,
    next: function () {
      var a = (this.i = this.index),
        b = this.string.charCodeAt(this.index);
      this.index = a + (55296 <= b && 56319 >= b ? 2 : 1);
      return this.i;
    },
    __class__: Os,
  };
  var bg = function () {};
  p["lime._internal.unifill.Unicode"] = bg;
  bg.__name__ = ["lime", "_internal", "unifill", "Unicode"];
  bg.decodeSurrogate = function (a, b) {
    return ((a - 55232) << 10) | (b & 1023);
  };
  bg.encodeHighSurrogate = function (a) {
    return (a >> 10) + 55232;
  };
  bg.encodeLowSurrogate = function (a) {
    return (a & 1023) | 56320;
  };
  bg.isScalar = function (a) {
    return 0 <= a && 1114111 >= a && !(55296 <= a && 56319 >= a)
      ? !(56320 <= a && 57343 >= a)
      : !1;
  };
  bg.isHighSurrogate = function (a) {
    return 55296 <= a ? 56319 >= a : !1;
  };
  bg.isLowSurrogate = function (a) {
    return 56320 <= a ? 57343 >= a : !1;
  };
  var Le = function () {};
  p["lime._internal.unifill.Unifill"] = Le;
  Le.__name__ = ["lime", "_internal", "unifill", "Unifill"];
  Le.uLength = function (a) {
    return ec.codePointCount(a, 0, a.length);
  };
  Le.uCharAt = function (a, b) {
    if (0 <= b)
      for (var c = 0, d = a.length, e = 0; e < b && c < d; ) {
        var f = a.charCodeAt(c);
        c += 55296 <= f && 56319 >= f ? 2 : 1;
        ++e;
      }
    else
      for (d = c = 0; d < -b && 0 < c; )
        (e = a.charCodeAt(c - 1)), (c -= 56320 <= e && 57343 >= e ? 2 : 1), ++d;
    b = c;
    c = a.charCodeAt(b);
    return Q.substr(a, b, 55296 <= c && 56319 >= c ? 2 : 1);
  };
  Le.uCharCodeAt = function (a, b) {
    if (0 <= b)
      for (var c = 0, d = a.length, e = 0; e < b && c < d; ) {
        var f = a.charCodeAt(c);
        c += 55296 <= f && 56319 >= f ? 2 : 1;
        ++e;
      }
    else
      for (d = c = 0; d < -b && 0 < c; )
        (e = a.charCodeAt(c - 1)), (c -= 56320 <= e && 57343 >= e ? 2 : 1), ++d;
    b = c;
    return ec.codePointAt(a, b);
  };
  Le.uCodePointAt = function (a, b) {
    if (0 <= b)
      for (var c = 0, d = a.length, e = 0; e < b && c < d; ) {
        var f = a.charCodeAt(c);
        c += 55296 <= f && 56319 >= f ? 2 : 1;
        ++e;
      }
    else
      for (d = c = 0; d < -b && 0 < c; )
        (e = a.charCodeAt(c - 1)), (c -= 56320 <= e && 57343 >= e ? 2 : 1), ++d;
    b = c;
    return ec.codePointAt(a, b);
  };
  Le.uIndexOf = function (a, b, c) {
    null == c && (c = 0);
    if (0 <= c)
      for (var d = 0, e = a.length, f = 0; f < c && d < e; ) {
        var g = a.charCodeAt(d);
        d += 55296 <= g && 56319 >= g ? 2 : 1;
        ++f;
      }
    else
      for (e = d = 0; e < -c && 0 < d; )
        (f = a.charCodeAt(d - 1)), (d -= 56320 <= f && 57343 >= f ? 2 : 1), ++e;
    c = d;
    b = a.indexOf(b, c);
    return 0 <= b ? ec.codePointCount(a, 0, b) : -1;
  };
  Le.uLastIndexOf = function (a, b, c) {
    null == c && (c = a.length - 1);
    if (0 <= c)
      for (var d = 0, e = a.length, f = 0; f < c && d < e; ) {
        var g = a.charCodeAt(d);
        d += 55296 <= g && 56319 >= g ? 2 : 1;
        ++f;
      }
    else
      for (e = d = 0; e < -c && 0 < d; )
        (f = a.charCodeAt(d - 1)), (d -= 56320 <= f && 57343 >= f ? 2 : 1), ++e;
    c = d;
    b = a.lastIndexOf(b, c);
    return 0 <= b ? ec.codePointCount(a, 0, b) : -1;
  };
  Le.uSplit = function (a, b) {
    if (0 == b.length) {
      b = [];
      var c;
      var d = 0;
      for (c = a.length; d < c; ) {
        var e = d;
        var f = a.charCodeAt(d);
        d += 55296 <= f && 56319 >= f ? 2 : 1;
        f = a;
        var g = f.charCodeAt(e);
        e = Q.substr(f, e, 55296 <= g && 56319 >= g ? 2 : 1);
        b.push(e);
      }
      return b;
    }
    return a.split(b);
  };
  Le.uSubstr = function (a, b, c) {
    var d = 0 <= b ? 0 : a.length;
    if (0 <= b)
      for (var e = a.length, f = 0; f < b && d < e; ) {
        var g = a.charCodeAt(d);
        d += 55296 <= g && 56319 >= g ? 2 : 1;
        ++f;
      }
    else
      for (e = 0; e < -b && 0 < d; )
        (f = a.charCodeAt(d - 1)), (d -= 56320 <= f && 57343 >= f ? 2 : 1), ++e;
    b = d;
    if (null == c) c = a.length;
    else if (0 > c) c = b;
    else {
      if (0 <= c)
        for (d = b, e = a.length, f = 0; f < c && d < e; )
          (g = a.charCodeAt(d)), (d += 55296 <= g && 56319 >= g ? 2 : 1), ++f;
      else
        for (d = b, e = 0; e < -c && 0 < d; )
          (f = a.charCodeAt(d - 1)),
            (d -= 56320 <= f && 57343 >= f ? 2 : 1),
            ++e;
      c = d;
    }
    return a.substring(b, c);
  };
  Le.uSubstring = function (a, b, c) {
    if (0 > b) b = 0;
    else {
      if (0 <= b)
        for (var d = 0, e = a.length, f = 0; f < b && d < e; ) {
          var g = a.charCodeAt(d);
          d += 55296 <= g && 56319 >= g ? 2 : 1;
          ++f;
        }
      else
        for (e = d = 0; e < -b && 0 < d; )
          (f = a.charCodeAt(d - 1)),
            (d -= 56320 <= f && 57343 >= f ? 2 : 1),
            ++e;
      b = d;
    }
    if (null == c) c = a.length;
    else if (0 > c) c = 0;
    else {
      if (0 <= c)
        for (d = 0, e = a.length, f = 0; f < c && d < e; )
          (g = a.charCodeAt(d)), (d += 55296 <= g && 56319 >= g ? 2 : 1), ++f;
      else
        for (e = d = 0; e < -c && 0 < d; )
          (f = a.charCodeAt(d - 1)),
            (d -= 56320 <= f && 57343 >= f ? 2 : 1),
            ++e;
      c = d;
    }
    return a.substring(b, c);
  };
  Le.uIterator = function (a) {
    return new Op(a);
  };
  Le.uCompare = function (a, b) {
    var c = 0;
    var d = a.length;
    var e;
    var f = 0;
    for (e = b.length; c < d && f < e; ) {
      var g = c;
      var h = a.charCodeAt(c);
      c += 55296 <= h && 56319 >= h ? 2 : 1;
      g = ec.codePointAt(a, g);
      h = f;
      var n = b.charCodeAt(f);
      f += 55296 <= n && 56319 >= n ? 2 : 1;
      h = ec.codePointAt(b, h);
      if (g < h) return -1;
      if (g > h) return 1;
    }
    return f < e ? -1 : c < d ? 1 : 0;
  };
  Le.uToString = function (a) {
    var b = new Cf();
    for (a = Qb(a)(); a.hasNext(); ) {
      var c = a.next();
      65535 >= c
        ? (b.b += String.fromCharCode(c))
        : ((b.b += String.fromCharCode((c >> 10) + 55232)),
          (b.b += String.fromCharCode((c & 1023) | 56320)));
    }
    return b.b;
  };
  Le.uAddChar = function (a, b) {
    65535 >= b
      ? (a.b += String.fromCharCode(b))
      : ((a.b += String.fromCharCode((b >> 10) + 55232)),
        (a.b += String.fromCharCode((b & 1023) | 56320)));
  };
  var ec = {};
  p["lime._internal.unifill._Utf16.Utf16_Impl_"] = ec;
  ec.__name__ = ["lime", "_internal", "unifill", "_Utf16", "Utf16_Impl_"];
  ec.__properties__ = { get_length: "get_length" };
  ec.fromCodePoint = function (a) {
    return 65535 >= a
      ? String.fromCharCode(a)
      : String.fromCharCode((a >> 10) + 55232) +
          String.fromCharCode((a & 1023) | 56320);
  };
  ec.fromCodePoints = function (a) {
    var b = new Cf();
    for (a = Qb(a)(); a.hasNext(); ) {
      var c = a.next();
      65535 >= c
        ? (b.b += String.fromCharCode(c))
        : ((b.b += String.fromCharCode((c >> 10) + 55232)),
          (b.b += String.fromCharCode((c & 1023) | 56320)));
    }
    return b.b;
  };
  ec.fromString = function (a) {
    return a;
  };
  ec.fromArray = function (a) {
    for (var b = "", c = 0; c < a.length; ) {
      var d = a[c];
      ++c;
      b += String.fromCharCode(d);
    }
    return b;
  };
  ec.encodeWith = function (a, b) {
    65535 >= b ? a(b) : (a((b >> 10) + 55232), a((b & 1023) | 56320));
  };
  ec.codeUnitAt = function (a, b) {
    return a.charCodeAt(b);
  };
  ec.codePointAt = function (a, b) {
    return pj.decode_code_point(
      a.length,
      function (b) {
        return a.charCodeAt(b);
      },
      b
    );
  };
  ec.charAt = function (a, b) {
    var c = a.charCodeAt(b);
    return Q.substr(a, b, 55296 <= c && 56319 >= c ? 2 : 1);
  };
  ec.codePointCount = function (a, b, c) {
    for (var d = 0; b < c; ) {
      var e = a.charCodeAt(b);
      b += 55296 <= e && 56319 >= e ? 2 : 1;
      ++d;
    }
    return d;
  };
  ec.codePointWidthAt = function (a, b) {
    a = a.charCodeAt(b);
    return 55296 <= a && 56319 >= a ? 2 : 1;
  };
  ec.codePointWidthBefore = function (a, b) {
    a = a.charCodeAt(b - 1);
    return 56320 <= a && 57343 >= a ? 2 : 1;
  };
  ec.offsetByCodePoints = function (a, b, c) {
    if (0 <= c) {
      for (var d = a.length, e = 0; e < c && b < d; ) {
        var f = a.charCodeAt(b);
        b += 55296 <= f && 56319 >= f ? 2 : 1;
        ++e;
      }
      return b;
    }
    for (d = 0; d < -c && 0 < b; )
      (e = a.charCodeAt(b - 1)), (b -= 56320 <= e && 57343 >= e ? 2 : 1), ++d;
    return b;
  };
  ec.substr = function (a, b, c) {
    return Q.substr(a, b, c);
  };
  ec.validate = function (a) {
    for (
      var b = a.length,
        c = function (b) {
          return a.charCodeAt(b);
        },
        d = 0;
      d < b;

    ) {
      pj.decode_code_point(b, c, d);
      var e = a.charCodeAt(d);
      d += 55296 <= e && 56319 >= e ? 2 : 1;
    }
  };
  ec.toString = function (a) {
    return a;
  };
  ec.toArray = function (a) {
    for (var b = 0, c = a.length, d = []; b < c; ) d.push(a.charCodeAt(b++));
    return d;
  };
  ec._new = function (a) {
    return a;
  };
  ec.get_length = function (a) {
    return a.length;
  };
  ec.forward_offset_by_code_points = function (a, b, c) {
    for (var d = a.length, e = 0; e < c && b < d; ) {
      var f = a.charCodeAt(b);
      b += 55296 <= f && 56319 >= f ? 2 : 1;
      ++e;
    }
    return b;
  };
  ec.backward_offset_by_code_points = function (a, b, c) {
    for (var d = 0; d < c && 0 < b; ) {
      var e = a.charCodeAt(b - 1);
      b -= 56320 <= e && 57343 >= e ? 2 : 1;
      ++d;
    }
    return b;
  };
  var pj = function () {};
  p["lime._internal.unifill._Utf16.Utf16Impl"] = pj;
  pj.__name__ = ["lime", "_internal", "unifill", "_Utf16", "Utf16Impl"];
  pj.code_point_width = function (a) {
    return 55296 <= a && 56319 >= a ? 2 : 1;
  };
  pj.find_prev_code_point = function (a, b) {
    a = a(b - 1);
    return 56320 <= a && 57343 >= a ? 2 : 1;
  };
  pj.encode_code_point = function (a, b) {
    65535 >= b ? a(b) : (a((b >> 10) + 55232), a((b & 1023) | 56320));
  };
  pj.decode_code_point = function (a, b, c) {
    if (0 > c || a <= c) throw new v(new Yh(c));
    var d = b(c);
    if (55296 <= d && 56319 >= d) {
      if (0 > c + 1 || a <= c + 1) throw new v(new Yh(c));
      a = b(c + 1);
      if (56320 <= a && 57343 >= a) return ((d - 55232) << 10) | (a & 1023);
      throw new v(new Yh(c));
    }
    if (56320 <= d && 57343 >= d) throw new v(new Yh(c));
    return d;
  };
  var Pp = {};
  p["lime._internal.unifill._Utf16.StringU16Buffer_Impl_"] = Pp;
  Pp.__name__ = [
    "lime",
    "_internal",
    "unifill",
    "_Utf16",
    "StringU16Buffer_Impl_",
  ];
  Pp._new = function () {
    return new Cf();
  };
  Pp.addUnit = function (a, b) {
    a.b += String.fromCharCode(b);
  };
  Pp.getStringU16 = function (a) {
    return a.b;
  };
  var cg = {};
  p["lime._internal.unifill._Utf16.StringU16_Impl_"] = cg;
  cg.__name__ = ["lime", "_internal", "unifill", "_Utf16", "StringU16_Impl_"];
  cg.__properties__ = { get_length: "get_length" };
  cg.fromString = function (a) {
    return a;
  };
  cg.fromCodeUnit = function (a) {
    return String.fromCharCode(a);
  };
  cg.fromTwoCodeUnits = function (a, b) {
    return String.fromCharCode(a) + String.fromCharCode(b);
  };
  cg.ofArray = function (a) {
    for (var b = "", c = 0; c < a.length; ) {
      var d = a[c];
      ++c;
      b += String.fromCharCode(d);
    }
    return b;
  };
  cg.fromArray = function (a) {
    for (var b = "", c = 0; c < a.length; ) {
      var d = a[c];
      ++c;
      b += String.fromCharCode(d);
    }
    return b;
  };
  cg.codeUnitAt = function (a, b) {
    return a.charCodeAt(b);
  };
  cg.substr = function (a, b, c) {
    return Q.substr(a, b, c);
  };
  cg.toString = function (a) {
    return a;
  };
  cg.toArray = function (a) {
    for (var b = 0, c = a.length, d = []; b < c; ) d.push(a.charCodeAt(b++));
    return d;
  };
  cg._new = function (a) {
    return a;
  };
  cg.get_length = function (a) {
    return a.length;
  };
  var vn = function () {};
  p["lime.app.IModule"] = vn;
  vn.__name__ = ["lime", "app", "IModule"];
  vn.prototype = {
    __registerLimeModule: null,
    __unregisterLimeModule: null,
    __class__: vn,
  };
  var zk = function () {
    this.onExit = new Ci();
  };
  p["lime.app.Module"] = zk;
  zk.__name__ = ["lime", "app", "Module"];
  zk.__interfaces__ = [vn];
  zk.prototype = {
    onExit: null,
    __registerLimeModule: function (a) {},
    __unregisterLimeModule: function (a) {},
    __class__: zk,
  };
  var Me = function () {
    this.onCreateWindow = new Qp();
    this.onUpdate = new Ci();
    this.onExit = new Ci();
    null == Me.current && (Me.current = this);
    this.meta = new la();
    this.modules = [];
    this.__windowByID = new Ca();
    this.__windows = [];
    this.__backend = new Kp(this);
    this.__registerLimeModule(this);
    this.__preloader = new Rp();
    this.__preloader.onProgress.add(B(this, this.onPreloadProgress));
    this.__preloader.onComplete.add(B(this, this.onPreloadComplete));
  };
  p["lime.app.Application"] = Me;
  Me.__name__ = ["lime", "app", "Application"];
  Me.__super__ = zk;
  Me.prototype = x(zk.prototype, {
    meta: null,
    modules: null,
    onUpdate: null,
    onCreateWindow: null,
    preloader: null,
    window: null,
    windows: null,
    __backend: null,
    __preloader: null,
    __window: null,
    __windowByID: null,
    __windows: null,
    addModule: function (a) {
      a.__registerLimeModule(this);
      this.modules.push(a);
    },
    createWindow: function (a) {
      a = this.__createWindow(a);
      this.__addWindow(a);
      return a;
    },
    exec: function () {
      Me.current = this;
      return this.__backend.exec();
    },
    onGamepadAxisMove: function (a, b, c) {},
    onGamepadButtonDown: function (a, b) {},
    onGamepadButtonUp: function (a, b) {},
    onGamepadConnect: function (a) {},
    onGamepadDisconnect: function (a) {},
    onJoystickAxisMove: function (a, b, c) {},
    onJoystickButtonDown: function (a, b) {},
    onJoystickButtonUp: function (a, b) {},
    onJoystickConnect: function (a) {},
    onJoystickDisconnect: function (a) {},
    onJoystickHatMove: function (a, b, c) {},
    onJoystickTrackballMove: function (a, b, c, d) {},
    onKeyDown: function (a, b) {},
    onKeyUp: function (a, b) {},
    onModuleExit: function (a) {},
    onMouseDown: function (a, b, c) {},
    onMouseMove: function (a, b) {},
    onMouseMoveRelative: function (a, b) {},
    onMouseUp: function (a, b, c) {},
    onMouseWheel: function (a, b, c) {},
    onPreloadComplete: function () {},
    onPreloadProgress: function (a, b) {},
    onRenderContextLost: function () {},
    onRenderContextRestored: function (a) {},
    onTextEdit: function (a, b, c) {},
    onTextInput: function (a) {},
    onTouchCancel: function (a) {},
    onTouchEnd: function (a) {},
    onTouchMove: function (a) {},
    onTouchStart: function (a) {},
    onWindowActivate: function () {},
    onWindowClose: function () {},
    onWindowCreate: function () {},
    onWindowDeactivate: function () {},
    onWindowDropFile: function (a) {},
    onWindowEnter: function () {},
    onWindowExpose: function () {},
    onWindowFocusIn: function () {},
    onWindowFocusOut: function () {},
    onWindowFullscreen: function () {},
    onWindowLeave: function () {},
    onWindowMove: function (a, b) {},
    onWindowMinimize: function () {},
    onWindowResize: function (a, b) {},
    onWindowRestore: function () {},
    removeModule: function (a) {
      null != a && (a.__unregisterLimeModule(this), Q.remove(this.modules, a));
    },
    render: function (a) {},
    update: function (a) {},
    __addWindow: function (a) {
      if (null != a) {
        this.__windows.push(a);
        this.__windowByID.h[a.id] = a;
        var b = B(this, this.__onWindowClose);
        a.onClose.add(
          function () {
            b(a);
          },
          !1,
          -1e4
        );
        null == this.__window &&
          ((this.__window = a),
          a.onActivate.add(B(this, this.onWindowActivate)),
          a.onRenderContextLost.add(B(this, this.onRenderContextLost)),
          a.onRenderContextRestored.add(B(this, this.onRenderContextRestored)),
          a.onDeactivate.add(B(this, this.onWindowDeactivate)),
          a.onDropFile.add(B(this, this.onWindowDropFile)),
          a.onEnter.add(B(this, this.onWindowEnter)),
          a.onExpose.add(B(this, this.onWindowExpose)),
          a.onFocusIn.add(B(this, this.onWindowFocusIn)),
          a.onFocusOut.add(B(this, this.onWindowFocusOut)),
          a.onFullscreen.add(B(this, this.onWindowFullscreen)),
          a.onKeyDown.add(B(this, this.onKeyDown)),
          a.onKeyUp.add(B(this, this.onKeyUp)),
          a.onLeave.add(B(this, this.onWindowLeave)),
          a.onMinimize.add(B(this, this.onWindowMinimize)),
          a.onMouseDown.add(B(this, this.onMouseDown)),
          a.onMouseMove.add(B(this, this.onMouseMove)),
          a.onMouseMoveRelative.add(B(this, this.onMouseMoveRelative)),
          a.onMouseUp.add(B(this, this.onMouseUp)),
          a.onMouseWheel.add(B(this, this.onMouseWheel)),
          a.onMove.add(B(this, this.onWindowMove)),
          a.onRender.add(B(this, this.render)),
          a.onResize.add(B(this, this.onWindowResize)),
          a.onRestore.add(B(this, this.onWindowRestore)),
          a.onTextEdit.add(B(this, this.onTextEdit)),
          a.onTextInput.add(B(this, this.onTextInput)),
          this.onWindowCreate());
        this.onCreateWindow.dispatch(a);
      }
    },
    __createWindow: function (a) {
      a = new qj(this, a);
      return -1 == a.id ? null : a;
    },
    __registerLimeModule: function (a) {
      a.onUpdate.add(B(this, this.update));
      a.onExit.add(B(this, this.onModuleExit), !1, 0);
      a.onExit.add(B(this, this.__onModuleExit), !1, 0);
      for (a = Ld.devices.iterator(); a.hasNext(); ) {
        var b = a.next();
        this.__onGamepadConnect(b);
      }
      Ld.onConnect.add(B(this, this.__onGamepadConnect));
      for (a = Xc.devices.iterator(); a.hasNext(); )
        (b = a.next()), this.__onJoystickConnect(b);
      Xc.onConnect.add(B(this, this.__onJoystickConnect));
      pd.onCancel.add(B(this, this.onTouchCancel));
      pd.onStart.add(B(this, this.onTouchStart));
      pd.onMove.add(B(this, this.onTouchMove));
      pd.onEnd.add(B(this, this.onTouchEnd));
    },
    __removeWindow: function (a) {
      null != a &&
        this.__windowByID.h.hasOwnProperty(a.id) &&
        (this.__window == a && (this.__window = null),
        Q.remove(this.__windows, a),
        this.__windowByID.remove(a.id),
        a.close(),
        0 == this.__windows.length && za.exit(0));
    },
    __onGamepadConnect: function (a) {
      this.onGamepadConnect(a);
      var b = B(this, this.onGamepadAxisMove);
      a.onAxisMove.add(function (c, d) {
        b(a, c, d);
      });
      var c = B(this, this.onGamepadButtonDown);
      a.onButtonDown.add(function (b) {
        c(a, b);
      });
      var d = B(this, this.onGamepadButtonUp);
      a.onButtonUp.add(function (b) {
        d(a, b);
      });
      var e = B(this, this.onGamepadDisconnect);
      a.onDisconnect.add(function () {
        e(a);
      });
    },
    __onJoystickConnect: function (a) {
      this.onJoystickConnect(a);
      var b = B(this, this.onJoystickAxisMove);
      a.onAxisMove.add(function (c, d) {
        b(a, c, d);
      });
      var c = B(this, this.onJoystickButtonDown);
      a.onButtonDown.add(function (b) {
        c(a, b);
      });
      var d = B(this, this.onJoystickButtonUp);
      a.onButtonUp.add(function (b) {
        d(a, b);
      });
      var e = B(this, this.onJoystickDisconnect);
      a.onDisconnect.add(function () {
        e(a);
      });
      var f = B(this, this.onJoystickHatMove);
      a.onHatMove.add(function (b, c) {
        f(a, b, c);
      });
      var g = B(this, this.onJoystickTrackballMove);
      a.onTrackballMove.add(function (b, c, d) {
        g(a, b, c, d);
      });
    },
    __onModuleExit: function (a) {
      this.__backend.exit();
    },
    __onWindowClose: function (a) {
      if (this.__window == a) this.onWindowClose();
      this.__removeWindow(a);
    },
    __unregisterLimeModule: function (a) {
      a.onUpdate.remove(B(this, this.update));
      a.onExit.remove(B(this, this.__onModuleExit));
      a.onExit.remove(B(this, this.onModuleExit));
      Ld.onConnect.remove(B(this, this.__onGamepadConnect));
      Xc.onConnect.remove(B(this, this.__onJoystickConnect));
      pd.onCancel.remove(B(this, this.onTouchCancel));
      pd.onStart.remove(B(this, this.onTouchStart));
      pd.onMove.remove(B(this, this.onTouchMove));
      pd.onEnd.remove(B(this, this.onTouchEnd));
      this.onModuleExit(0);
    },
    get_preloader: function () {
      return this.__preloader;
    },
    get_window: function () {
      return this.__window;
    },
    get_windows: function () {
      return this.__windows;
    },
    __class__: Me,
    __properties__: {
      get_windows: "get_windows",
      get_window: "get_window",
      get_preloader: "get_preloader",
    },
  });
  var Ps = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app.Event"] = Ps;
  Ps.__name__ = ["lime", "app", "Event"];
  Ps.prototype = {
    canceled: null,
    __listeners: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    dispatch: null,
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __class__: Ps,
  };
  var ab = function (a, b) {
    null == b && (b = !1);
    if (null != a)
      if (b)
        (b = new Zd()), (b.future = this), cf.queue({ promise: b, work: a });
      else
        try {
          (this.value = a()), (this.isComplete = !0);
        } catch (c) {
          (X.lastException = c),
            c instanceof v && (c = c.val),
            (this.error = c),
            (this.isError = !0);
        }
  };
  p["lime.app.Future"] = ab;
  ab.__name__ = ["lime", "app", "Future"];
  ab.ofEvents = function (a, b, c) {
    var d = new Zd();
    a.add(function (a) {
      d.complete(a);
    }, !0);
    null != b &&
      b.add(function (a) {
        d.error(a);
      }, !0);
    null != c &&
      c.add(function (a, b) {
        d.progress(a, b);
      }, !0);
    return d.future;
  };
  ab.withError = function (a) {
    var b = new ab();
    b.isError = !0;
    b.error = a;
    return b;
  };
  ab.withValue = function (a) {
    var b = new ab();
    b.isComplete = !0;
    b.value = a;
    return b;
  };
  ab.prototype = {
    error: null,
    isComplete: null,
    isError: null,
    value: null,
    __completeListeners: null,
    __errorListeners: null,
    __progressListeners: null,
    onComplete: function (a) {
      null != a &&
        (this.isComplete
          ? a(this.value)
          : this.isError ||
            (null == this.__completeListeners &&
              (this.__completeListeners = []),
            this.__completeListeners.push(a)));
      return this;
    },
    onError: function (a) {
      null != a &&
        (this.isError
          ? a(this.error)
          : this.isComplete ||
            (null == this.__errorListeners && (this.__errorListeners = []),
            this.__errorListeners.push(a)));
      return this;
    },
    onProgress: function (a) {
      null != a &&
        (null == this.__progressListeners && (this.__progressListeners = []),
        this.__progressListeners.push(a));
      return this;
    },
    ready: function (a) {
      this.isComplete ||
        this.isError ||
        mb.warn("Cannot block thread in JavaScript", {
          fileName: "Future.hx",
          lineNumber: 239,
          className: "lime.app.Future",
          methodName: "ready",
        });
      return this;
    },
    result: function (a) {
      null == a && (a = -1);
      this.ready(a);
      return this.isComplete ? this.value : null;
    },
    then: function (a) {
      if (this.isComplete) return a(this.value);
      if (this.isError) {
        var b = new ab();
        b.isError = !0;
        b.error = this.error;
        return b;
      }
      var c = new Zd();
      this.onError(B(c, c.error));
      this.onProgress(B(c, c.progress));
      this.onComplete(function (b) {
        b = a(b);
        b.onError(B(c, c.error));
        b.onComplete(B(c, c.complete));
      });
      return c.future;
    },
    __class__: ab,
  };
  var cf = function () {};
  p["lime.app._Future.FutureWork"] = cf;
  cf.__name__ = ["lime", "app", "_Future", "FutureWork"];
  cf.queue = function (a) {
    null == cf.threadPool &&
      ((cf.threadPool = new Sp()),
      cf.threadPool.doWork.add(cf.threadPool_doWork),
      cf.threadPool.onComplete.add(cf.threadPool_onComplete),
      cf.threadPool.onError.add(cf.threadPool_onError));
    cf.threadPool.queue(a);
  };
  cf.threadPool_doWork = function (a) {
    try {
      var b = a.work();
      cf.threadPool.sendComplete({ promise: a.promise, result: b });
    } catch (c) {
      (X.lastException = c),
        c instanceof v && (c = c.val),
        cf.threadPool.sendError({ promise: a.promise, error: c });
    }
  };
  cf.threadPool_onComplete = function (a) {
    a.promise.complete(a.result);
  };
  cf.threadPool_onError = function (a) {
    a.promise.error(a.error);
  };
  var Zd = function () {
    this.future = new ab();
  };
  p["lime.app.Promise"] = Zd;
  Zd.__name__ = ["lime", "app", "Promise"];
  Zd.prototype = {
    future: null,
    isComplete: null,
    isError: null,
    complete: function (a) {
      if (
        !this.future.isError &&
        ((this.future.isComplete = !0),
        (this.future.value = a),
        null != this.future.__completeListeners)
      ) {
        for (var b = 0, c = this.future.__completeListeners; b < c.length; ) {
          var d = c[b];
          ++b;
          d(a);
        }
        this.future.__completeListeners = null;
      }
      return this;
    },
    completeWith: function (a) {
      a.onComplete(B(this, this.complete));
      a.onError(B(this, this.error));
      a.onProgress(B(this, this.progress));
      return this;
    },
    error: function (a) {
      if (
        !this.future.isComplete &&
        ((this.future.isError = !0),
        (this.future.error = a),
        null != this.future.__errorListeners)
      ) {
        for (var b = 0, c = this.future.__errorListeners; b < c.length; ) {
          var d = c[b];
          ++b;
          d(a);
        }
        this.future.__errorListeners = null;
      }
      return this;
    },
    progress: function (a, b) {
      if (
        !this.future.isError &&
        !this.future.isComplete &&
        null != this.future.__progressListeners
      )
        for (var c = 0, d = this.future.__progressListeners; c < d.length; ) {
          var e = d[c];
          ++c;
          e(a, b);
        }
      return this;
    },
    get_isComplete: function () {
      return this.future.isComplete;
    },
    get_isError: function () {
      return this.future.isError;
    },
    __class__: Zd,
    __properties__: {
      get_isError: "get_isError",
      get_isComplete: "get_isComplete",
    },
  };
  var Qs = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_Dynamic_Void"] = Qs;
  Qs.__name__ = ["lime", "app", "_Event_Dynamic_Void"];
  Qs.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a) {
      this.canceled = !1;
      for (
        var b = this.__listeners, c = this.__repeat, d = 0;
        d < b.length &&
        (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

      );
    },
    __class__: Qs,
  };
  var Tp = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_Float_Float_Float_Void"] = Tp;
  Tp.__name__ = ["lime", "app", "_Event_Float_Float_Float_Void"];
  Tp.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a, b, c) {
      this.canceled = !1;
      for (
        var d = this.__listeners, e = this.__repeat, f = 0;
        f < d.length &&
        (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled);

      );
    },
    __class__: Tp,
  };
  var Up = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_Float_Float_Int_Void"] = Up;
  Up.__name__ = ["lime", "app", "_Event_Float_Float_Int_Void"];
  Up.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a, b, c) {
      this.canceled = !1;
      for (
        var d = this.__listeners, e = this.__repeat, f = 0;
        f < d.length &&
        (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled);

      );
    },
    __class__: Up,
  };
  var Ak = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_Float_Float_Void"] = Ak;
  Ak.__name__ = ["lime", "app", "_Event_Float_Float_Void"];
  Ak.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a, b) {
      this.canceled = !1;
      for (
        var c = this.__listeners, d = this.__repeat, e = 0;
        e < c.length &&
        (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled);

      );
    },
    __class__: Ak,
  };
  var Vp = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_Float_Float_lime_ui_MouseButton_Void"] = Vp;
  Vp.__name__ = ["lime", "app", "_Event_Float_Float_lime_ui_MouseButton_Void"];
  Vp.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a, b, c) {
      this.canceled = !1;
      for (
        var d = this.__listeners, e = this.__repeat, f = 0;
        f < d.length &&
        (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled);

      );
    },
    __class__: Vp,
  };
  var Wp = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_Float_Float_lime_ui_MouseWheelMode_Void"] = Wp;
  Wp.__name__ = [
    "lime",
    "app",
    "_Event_Float_Float_lime_ui_MouseWheelMode_Void",
  ];
  Wp.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a, b, c) {
      this.canceled = !1;
      for (
        var d = this.__listeners, e = this.__repeat, f = 0;
        f < d.length &&
        (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled);

      );
    },
    __class__: Wp,
  };
  var Xp = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_Int_Float_Float_Void"] = Xp;
  Xp.__name__ = ["lime", "app", "_Event_Int_Float_Float_Void"];
  Xp.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a, b, c) {
      this.canceled = !1;
      for (
        var d = this.__listeners, e = this.__repeat, f = 0;
        f < d.length &&
        (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled);

      );
    },
    __class__: Xp,
  };
  var Yp = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_Int_Float_Void"] = Yp;
  Yp.__name__ = ["lime", "app", "_Event_Int_Float_Void"];
  Yp.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a, b) {
      this.canceled = !1;
      for (
        var c = this.__listeners, d = this.__repeat, e = 0;
        e < c.length &&
        (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled);

      );
    },
    __class__: Yp,
  };
  var wn = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_Int_Int_Void"] = wn;
  wn.__name__ = ["lime", "app", "_Event_Int_Int_Void"];
  wn.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a, b) {
      this.canceled = !1;
      for (
        var c = this.__listeners, d = this.__repeat, e = 0;
        e < c.length &&
        (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled);

      );
    },
    __class__: wn,
  };
  var Ci = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_Int_Void"] = Ci;
  Ci.__name__ = ["lime", "app", "_Event_Int_Void"];
  Ci.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a) {
      this.canceled = !1;
      for (
        var b = this.__listeners, c = this.__repeat, d = 0;
        d < b.length &&
        (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

      );
    },
    __class__: Ci,
  };
  var Zp = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_Int_lime_ui_JoystickHatPosition_Void"] = Zp;
  Zp.__name__ = ["lime", "app", "_Event_Int_lime_ui_JoystickHatPosition_Void"];
  Zp.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a, b) {
      this.canceled = !1;
      for (
        var c = this.__listeners, d = this.__repeat, e = 0;
        e < c.length &&
        (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled);

      );
    },
    __class__: Zp,
  };
  var $p = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_String_Int_Int_Void"] = $p;
  $p.__name__ = ["lime", "app", "_Event_String_Int_Int_Void"];
  $p.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a, b, c) {
      this.canceled = !1;
      for (
        var d = this.__listeners, e = this.__repeat, f = 0;
        f < d.length &&
        (d[f](a, b, c), e[f] ? ++f : this.remove(d[f]), !this.canceled);

      );
    },
    __class__: $p,
  };
  var xn = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_String_Void"] = xn;
  xn.__name__ = ["lime", "app", "_Event_String_Void"];
  xn.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a) {
      this.canceled = !1;
      for (
        var b = this.__listeners, c = this.__repeat, d = 0;
        d < b.length &&
        (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

      );
    },
    __class__: xn,
  };
  var Md = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_Void_Void"] = Md;
  Md.__name__ = ["lime", "app", "_Event_Void_Void"];
  Md.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function () {
      this.canceled = !1;
      for (
        var a = this.__listeners, b = this.__repeat, c = 0;
        c < a.length &&
        (a[c](), b[c] ? ++c : this.remove(a[c]), !this.canceled);

      );
    },
    __class__: Md,
  };
  var Di = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_haxe_Function_Void"] = Di;
  Di.__name__ = ["lime", "app", "_Event_haxe_Function_Void"];
  Di.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a) {
      this.canceled = !1;
      for (
        var b = this.__listeners, c = this.__repeat, d = 0;
        d < b.length &&
        (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

      );
    },
    __class__: Di,
  };
  var yn = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_lime_graphics_RenderContext_Void"] = yn;
  yn.__name__ = ["lime", "app", "_Event_lime_graphics_RenderContext_Void"];
  yn.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a) {
      this.canceled = !1;
      for (
        var b = this.__listeners, c = this.__repeat, d = 0;
        d < b.length &&
        (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

      );
    },
    __class__: yn,
  };
  var aq = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_lime_ui_GamepadAxis_Float_Void"] = aq;
  aq.__name__ = ["lime", "app", "_Event_lime_ui_GamepadAxis_Float_Void"];
  aq.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a, b) {
      this.canceled = !1;
      for (
        var c = this.__listeners, d = this.__repeat, e = 0;
        e < c.length &&
        (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled);

      );
    },
    __class__: aq,
  };
  var zn = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_lime_ui_GamepadButton_Void"] = zn;
  zn.__name__ = ["lime", "app", "_Event_lime_ui_GamepadButton_Void"];
  zn.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a) {
      this.canceled = !1;
      for (
        var b = this.__listeners, c = this.__repeat, d = 0;
        d < b.length &&
        (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

      );
    },
    __class__: zn,
  };
  var bq = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_lime_ui_Gamepad_Void"] = bq;
  bq.__name__ = ["lime", "app", "_Event_lime_ui_Gamepad_Void"];
  bq.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a) {
      this.canceled = !1;
      for (
        var b = this.__listeners, c = this.__repeat, d = 0;
        d < b.length &&
        (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

      );
    },
    __class__: bq,
  };
  var cq = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_lime_ui_Joystick_Void"] = cq;
  cq.__name__ = ["lime", "app", "_Event_lime_ui_Joystick_Void"];
  cq.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a) {
      this.canceled = !1;
      for (
        var b = this.__listeners, c = this.__repeat, d = 0;
        d < b.length &&
        (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

      );
    },
    __class__: cq,
  };
  var An = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void"] = An;
  An.__name__ = [
    "lime",
    "app",
    "_Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void",
  ];
  An.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a, b) {
      this.canceled = !1;
      for (
        var c = this.__listeners, d = this.__repeat, e = 0;
        e < c.length &&
        (c[e](a, b), d[e] ? ++e : this.remove(c[e]), !this.canceled);

      );
    },
    __class__: An,
  };
  var rj = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_lime_ui_Touch_Void"] = rj;
  rj.__name__ = ["lime", "app", "_Event_lime_ui_Touch_Void"];
  rj.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a) {
      this.canceled = !1;
      for (
        var b = this.__listeners, c = this.__repeat, d = 0;
        d < b.length &&
        (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

      );
    },
    __class__: rj,
  };
  var Qp = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_lime_ui_Window_Void"] = Qp;
  Qp.__name__ = ["lime", "app", "_Event_lime_ui_Window_Void"];
  Qp.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a) {
      this.canceled = !1;
      for (
        var b = this.__listeners, c = this.__repeat, d = 0;
        d < b.length &&
        (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

      );
    },
    __class__: Qp,
  };
  var Rs = function () {
    this.canceled = !1;
    this.__listeners = [];
    this.__priorities = [];
    this.__repeat = [];
  };
  p["lime.app._Event_ofEvents_T_Void"] = Rs;
  Rs.__name__ = ["lime", "app", "_Event_ofEvents_T_Void"];
  Rs.prototype = {
    canceled: null,
    __repeat: null,
    __priorities: null,
    add: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = !1);
      for (var d = 0, e = this.__priorities.length; d < e; ) {
        var f = d++;
        if (c > this.__priorities[f]) {
          this.__listeners.splice(f, 0, a);
          this.__priorities.splice(f, 0, c);
          this.__repeat.splice(f, 0, !b);
          return;
        }
      }
      this.__listeners.push(a);
      this.__priorities.push(c);
      this.__repeat.push(!b);
    },
    cancel: function () {
      this.canceled = !0;
    },
    has: function (a) {
      for (var b = 0, c = this.__listeners; b < c.length; ) {
        var d = c[b];
        ++b;
        if (V.compareMethods(d, a)) return !0;
      }
      return !1;
    },
    remove: function (a) {
      for (var b = this.__listeners.length; 0 <= --b; )
        V.compareMethods(this.__listeners[b], a) &&
          (this.__listeners.splice(b, 1),
          this.__priorities.splice(b, 1),
          this.__repeat.splice(b, 1));
    },
    __listeners: null,
    dispatch: function (a) {
      this.canceled = !1;
      for (
        var b = this.__listeners, c = this.__repeat, d = 0;
        d < b.length &&
        (b[d](a), c[d] ? ++d : this.remove(b[d]), !this.canceled);

      );
    },
    __class__: Rs,
  };
  var wt = {};
  p["lime.graphics._CairoRenderContext.CairoRenderContext_Impl_"] = wt;
  wt.__name__ = [
    "lime",
    "graphics",
    "_CairoRenderContext",
    "CairoRenderContext_Impl_",
  ];
  wt.fromRenderContext = function (a) {
    return a.cairo;
  };
  var xt = {};
  p["lime.graphics._Canvas2DRenderContext.Canvas2DRenderContext_Impl_"] = xt;
  xt.__name__ = [
    "lime",
    "graphics",
    "_Canvas2DRenderContext",
    "Canvas2DRenderContext_Impl_",
  ];
  xt.fromRenderContext = function (a) {
    return a.canvas2D;
  };
  var yt = {};
  p["lime.graphics._DOMRenderContext.DOMRenderContext_Impl_"] = yt;
  yt.__name__ = [
    "lime",
    "graphics",
    "_DOMRenderContext",
    "DOMRenderContext_Impl_",
  ];
  yt.fromRenderContext = function (a) {
    return a.dom;
  };
  var zt = {};
  p["lime.graphics._FlashRenderContext.FlashRenderContext_Impl_"] = zt;
  zt.__name__ = [
    "lime",
    "graphics",
    "_FlashRenderContext",
    "FlashRenderContext_Impl_",
  ];
  zt.fromRenderContext = function (a) {
    return null;
  };
  var pb = function (a, b, c, d, e, f, g) {
    null == e && (e = -1);
    null == d && (d = -1);
    null == c && (c = 0);
    null == b && (b = 0);
    this.offsetX = b;
    this.offsetY = c;
    this.width = d;
    this.height = e;
    this.version = 0;
    null == g && (g = Pc.CANVAS);
    this.type = g;
    if (null == a) {
      if (0 < d && 0 < e)
        switch (this.type[1]) {
          case 0:
            this.buffer = new ag(null, d, e);
            pa.createCanvas(this, d, e);
            null != f && 0 != f && this.fillRect(new Td(0, 0, d, e), f);
            break;
          case 1:
            (a = d * e * 4),
              (a = null != a ? new lb(a) : null),
              (this.buffer = new ag(a, d, e)),
              null != f && 0 != f && this.fillRect(new Td(0, 0, d, e), f);
        }
    } else this.__fromImageBuffer(a);
  };
  p["lime.graphics.Image"] = pb;
  pb.__name__ = ["lime", "graphics", "Image"];
  pb.fromBase64 = function (a, b) {
    if (null == a) return null;
    var c = new pb();
    c.__fromBase64(a, b);
    return c;
  };
  pb.fromBitmapData = function (a) {
    return null == a ? null : a.image;
  };
  pb.fromBytes = function (a) {
    if (null == a) return null;
    var b = new pb();
    return b.__fromBytes(a) ? b : null;
  };
  pb.fromCanvas = function (a) {
    if (null == a) return null;
    var b = new ag(null, a.width, a.height);
    b.set_src(a);
    a = new pb(b);
    a.type = Pc.CANVAS;
    return a;
  };
  pb.fromFile = function (a) {
    if (null == a) return null;
    var b = new pb();
    return b.__fromFile(a) ? b : null;
  };
  pb.fromImageElement = function (a) {
    if (null == a) return null;
    var b = new ag(null, a.width, a.height);
    b.set_src(a);
    a = new pb(b);
    a.type = Pc.CANVAS;
    return a;
  };
  pb.loadFromBase64 = function (a, b) {
    return null == a || null == b
      ? ab.withValue(null)
      : bb.loadImage("data:" + b + ";base64," + a);
  };
  pb.loadFromBytes = function (a) {
    if (null == a) return ab.withValue(null);
    if (pb.__isPNG(a)) var b = "image/png";
    else if (pb.__isJPG(a)) b = "image/jpeg";
    else if (pb.__isGIF(a)) b = "image/gif";
    else if (pb.__isWebP(a)) b = "image/webp";
    else return ab.withValue(null);
    return pb.loadFromBase64(pb.__base64Encode(a), b);
  };
  pb.loadFromFile = function (a) {
    return null == a ? ab.withValue(null) : bb.loadImage(a);
  };
  pb.__base64Encode = function (a) {
    switch (a.length % 3) {
      case 1:
        var b = "==";
        break;
      case 2:
        b = "=";
        break;
      default:
        b = "";
    }
    null == pb.__base64Encoder &&
      (pb.__base64Encoder = new ti(Ra.ofString(pb.__base64Chars)));
    return pb.__base64Encoder.encodeBytes(a).toString() + b;
  };
  pb.__isGIF = function (a) {
    if (null == a || 6 > a.length) return !1;
    a = a.getString(0, 6);
    return "GIF87a" != a ? "GIF89a" == a : !0;
  };
  pb.__isJPG = function (a) {
    return null == a || 4 > a.length
      ? !1
      : 255 == a.b[0] && 216 == a.b[1] && 255 == a.b[a.length - 2]
      ? 217 == a.b[a.length - 1]
      : !1;
  };
  pb.__isPNG = function (a) {
    return null == a || 8 > a.length
      ? !1
      : 137 == a.b[0] &&
        80 == a.b[1] &&
        78 == a.b[2] &&
        71 == a.b[3] &&
        13 == a.b[4] &&
        10 == a.b[5] &&
        26 == a.b[6]
      ? 10 == a.b[7]
      : !1;
  };
  pb.__isWebP = function (a) {
    return null == a || 16 > a.length
      ? !1
      : "RIFF" == a.getString(0, 4)
      ? "WEBP" == a.getString(8, 4)
      : !1;
  };
  pb.prototype = {
    buffer: null,
    dirty: null,
    height: null,
    offsetX: null,
    offsetY: null,
    rect: null,
    type: null,
    version: null,
    width: null,
    x: null,
    y: null,
    clone: function () {
      if (null != this.buffer) {
        this.type == Pc.CANVAS
          ? pa.convertToCanvas(this)
          : pa.convertToData(this);
        var a = new pb(
          this.buffer.clone(),
          this.offsetX,
          this.offsetY,
          this.width,
          this.height,
          null,
          this.type
        );
        a.version = this.version;
        return a;
      }
      return new pb(
        null,
        this.offsetX,
        this.offsetY,
        this.width,
        this.height,
        null,
        this.type
      );
    },
    colorTransform: function (a, b) {
      a = this.__clipRect(a);
      if (null != this.buffer && null != a)
        switch (this.type[1]) {
          case 0:
            pa.colorTransform(this, a, b);
            break;
          case 1:
            pa.convertToData(this);
            Z.colorTransform(this, a, b);
            break;
          case 2:
            a.offset(this.offsetX, this.offsetY),
              this.buffer.__srcBitmapData.colorTransform(
                a.__toFlashRectangle(),
                qb.__toFlashColorTransform(b)
              );
        }
    },
    copyChannel: function (a, b, c, d, e) {
      b = this.__clipRect(b);
      if (
        null != this.buffer &&
        null != b &&
        !(
          (e == cd.ALPHA && !this.get_transparent()) ||
          0 >= b.width ||
          0 >= b.height
        )
      )
        switch (
          (b.x + b.width > a.width && (b.width = a.width - b.x),
          b.y + b.height > a.height && (b.height = a.height - b.y),
          this.type[1])
        ) {
          case 0:
            pa.copyChannel(this, a, b, c, d, e);
            break;
          case 1:
            pa.convertToData(this);
            pa.convertToData(a);
            Z.copyChannel(this, a, b, c, d, e);
            break;
          case 2:
            switch (d[1]) {
              case 0:
                var f = 1;
                break;
              case 1:
                f = 2;
                break;
              case 2:
                f = 4;
                break;
              case 3:
                f = 8;
            }
            switch (e[1]) {
              case 0:
                var g = 1;
                break;
              case 1:
                g = 2;
                break;
              case 2:
                g = 4;
                break;
              case 3:
                g = 8;
            }
            b.offset(a.offsetX, a.offsetY);
            c.offset(this.offsetX, this.offsetY);
            this.buffer.__srcBitmapData.copyChannel(
              a.buffer.get_src(),
              b.__toFlashRectangle(),
              c.__toFlashPoint(),
              f,
              g
            );
        }
    },
    copyPixels: function (a, b, c, d, e, f) {
      null == f && (f = !1);
      if (
        null != this.buffer &&
        null != a &&
        !(0 >= b.width || 0 >= b.height || 0 >= this.width || 0 >= this.height)
      )
        switch (
          (b.x + b.width > a.width && (b.width = a.width - b.x),
          b.y + b.height > a.height && (b.height = a.height - b.y),
          0 > b.x && ((b.width += b.x), (b.x = 0)),
          0 > b.y && ((b.height += b.y), (b.y = 0)),
          c.x + b.width > this.width && (b.width = this.width - c.x),
          c.y + b.height > this.height && (b.height = this.height - c.y),
          0 > c.x && ((b.width += c.x), (b.x -= c.x), (c.x = 0)),
          0 > c.y && ((b.height += c.y), (b.y -= c.y), (c.y = 0)),
          a == this &&
            c.x < b.get_right() &&
            c.y < b.get_bottom() &&
            (a = this.clone()),
          this.type[1])
        ) {
          case 0:
            null != d || a.type != Pc.CANVAS
              ? (pa.convertToData(this),
                pa.convertToData(a),
                null != d && pa.convertToData(d),
                Z.copyPixels(this, a, b, c, d, e, f))
              : (pa.convertToCanvas(this),
                pa.convertToCanvas(a),
                pa.copyPixels(this, a, b, c, d, e, f));
            break;
          case 1:
            pa.convertToData(this);
            pa.convertToData(a);
            null != d && pa.convertToData(d);
            Z.copyPixels(this, a, b, c, d, e, f);
            break;
          case 2:
            b.offset(a.offsetX, a.offsetY),
              c.offset(this.offsetX, this.offsetY),
              null != d && null != e && e.offset(d.offsetX, d.offsetY),
              this.buffer.__srcBitmapData.copyPixels(
                a.buffer.__srcBitmapData,
                b.__toFlashRectangle(),
                c.__toFlashPoint(),
                null != d ? d.buffer.get_src() : null,
                null != e ? e.__toFlashPoint() : null,
                f
              );
        }
    },
    encode: function (a, b) {
      null == b && (b = 90);
      if (null == a) return yk.encode(this);
      switch (a[1]) {
        case 0:
          return Ns.encode(this);
        case 1:
          return sn.encode(this, b);
        case 2:
          return yk.encode(this);
      }
    },
    fillRect: function (a, b, c) {
      a = this.__clipRect(a);
      if (null != this.buffer && null != a)
        switch (this.type[1]) {
          case 0:
            pa.fillRect(this, a, b, c);
            break;
          case 1:
            pa.convertToData(this);
            if (0 == this.buffer.data.length) break;
            Z.fillRect(this, a, b, c);
            break;
          case 2:
            a.offset(this.offsetX, this.offsetY);
            if (null == c)
              b =
                ((b & 255) << 24) |
                (((b >>> 24) & 255) << 16) |
                (((b >>> 16) & 255) << 8) |
                ((b >>> 8) & 255);
            else
              switch (c) {
                case 1:
                  break;
                case 2:
                  b =
                    ((b & 255) << 24) |
                    (((b >>> 8) & 255) << 16) |
                    (((b >>> 16) & 255) << 8) |
                    ((b >>> 24) & 255);
                  break;
                default:
                  b =
                    ((b & 255) << 24) |
                    (((b >>> 24) & 255) << 16) |
                    (((b >>> 16) & 255) << 8) |
                    ((b >>> 8) & 255);
              }
            this.buffer.__srcBitmapData.fillRect(a.__toFlashRectangle(), b);
        }
    },
    floodFill: function (a, b, c, d) {
      if (null != this.buffer)
        switch (this.type[1]) {
          case 0:
            pa.floodFill(this, a, b, c, d);
            break;
          case 1:
            pa.convertToData(this);
            Z.floodFill(this, a, b, c, d);
            break;
          case 2:
            if (null == d)
              c =
                ((c & 255) << 24) |
                (((c >>> 24) & 255) << 16) |
                (((c >>> 16) & 255) << 8) |
                ((c >>> 8) & 255);
            else
              switch (d) {
                case 1:
                  break;
                case 2:
                  c =
                    ((c & 255) << 24) |
                    (((c >>> 8) & 255) << 16) |
                    (((c >>> 16) & 255) << 8) |
                    ((c >>> 24) & 255);
                  break;
                default:
                  c =
                    ((c & 255) << 24) |
                    (((c >>> 24) & 255) << 16) |
                    (((c >>> 16) & 255) << 8) |
                    ((c >>> 8) & 255);
              }
            this.buffer.__srcBitmapData.floodFill(
              a + this.offsetX,
              b + this.offsetY,
              c
            );
        }
    },
    getColorBoundsRect: function (a, b, c, d) {
      null == c && (c = !0);
      if (null == this.buffer) return null;
      switch (this.type[1]) {
        case 0:
          return pa.convertToData(this), Z.getColorBoundsRect(this, a, b, c, d);
        case 1:
          return Z.getColorBoundsRect(this, a, b, c, d);
        case 2:
          return (
            (a = this.buffer.__srcBitmapData.getColorBoundsRect(a, b, c)),
            new Td(a.x, a.y, a.width, a.height)
          );
        default:
          return null;
      }
    },
    getPixel: function (a, b, c) {
      if (
        null == this.buffer ||
        0 > a ||
        0 > b ||
        a >= this.width ||
        b >= this.height
      )
        return 0;
      switch (this.type[1]) {
        case 0:
          return pa.getPixel(this, a, b, c);
        case 1:
          return pa.convertToData(this), Z.getPixel(this, a, b, c);
        case 2:
          a = this.buffer.__srcBitmapData.getPixel(
            a + this.offsetX,
            b + this.offsetY
          );
          if (null == c)
            return (
              (((a >>> 16) & 255) << 24) |
              (((a >>> 8) & 255) << 16) |
              ((a & 255) << 8) |
              ((a >>> 24) & 255)
            );
          switch (c) {
            case 1:
              return a;
            case 2:
              return (
                ((a & 255) << 24) |
                (((a >>> 8) & 255) << 16) |
                (((a >>> 16) & 255) << 8) |
                ((a >>> 24) & 255)
              );
            default:
              return (
                (((a >>> 16) & 255) << 24) |
                (((a >>> 8) & 255) << 16) |
                ((a & 255) << 8) |
                ((a >>> 24) & 255)
              );
          }
        default:
          return 0;
      }
    },
    getPixel32: function (a, b, c) {
      if (
        null == this.buffer ||
        0 > a ||
        0 > b ||
        a >= this.width ||
        b >= this.height
      )
        return 0;
      switch (this.type[1]) {
        case 0:
          return pa.getPixel32(this, a, b, c);
        case 1:
          return pa.convertToData(this), Z.getPixel32(this, a, b, c);
        case 2:
          a = this.buffer.__srcBitmapData.getPixel32(
            a + this.offsetX,
            b + this.offsetY
          );
          if (null == c)
            return (
              (((a >>> 16) & 255) << 24) |
              (((a >>> 8) & 255) << 16) |
              ((a & 255) << 8) |
              ((a >>> 24) & 255)
            );
          switch (c) {
            case 1:
              return a;
            case 2:
              return (
                ((a & 255) << 24) |
                (((a >>> 8) & 255) << 16) |
                (((a >>> 16) & 255) << 8) |
                ((a >>> 24) & 255)
              );
            default:
              return (
                (((a >>> 16) & 255) << 24) |
                (((a >>> 8) & 255) << 16) |
                ((a & 255) << 8) |
                ((a >>> 24) & 255)
              );
          }
        default:
          return 0;
      }
    },
    getPixels: function (a, b) {
      if (null == this.buffer) return null;
      switch (this.type[1]) {
        case 0:
          return pa.getPixels(this, a, b);
        case 1:
          return pa.convertToData(this), Z.getPixels(this, a, b);
        case 2:
          return null;
        default:
          return null;
      }
    },
    merge: function (a, b, c, d, e, f, g) {
      if (null != this.buffer && null != a)
        switch (this.type[1]) {
          case 0:
            pa.convertToCanvas(this);
            pa.merge(this, a, b, c, d, e, f, g);
            break;
          case 1:
            pa.convertToData(this);
            pa.convertToData(a);
            Z.merge(this, a, b, c, d, e, f, g);
            break;
          case 2:
            b.offset(this.offsetX, this.offsetY),
              this.buffer.__srcBitmapData.merge(
                a.buffer.__srcBitmapData,
                b.__toFlashRectangle(),
                c.__toFlashPoint(),
                d,
                e,
                f,
                g
              );
        }
    },
    resize: function (a, b) {
      switch (this.type[1]) {
        case 0:
          pa.resize(this, a, b);
          break;
        case 1:
          Z.resize(this, a, b);
      }
      this.buffer.width = a;
      this.buffer.height = b;
      this.offsetY = this.offsetX = 0;
      this.width = a;
      this.height = b;
    },
    scroll: function (a, b) {
      if (null != this.buffer)
        switch (this.type[1]) {
          case 0:
            pa.scroll(this, a, b);
            break;
          case 1:
            this.copyPixels(this, this.get_rect(), new xd(a, b));
            break;
          case 2:
            this.buffer.__srcBitmapData.scroll(
              a + this.offsetX,
              b + this.offsetX
            );
        }
    },
    setPixel: function (a, b, c, d) {
      if (
        !(
          null == this.buffer ||
          0 > a ||
          0 > b ||
          a >= this.width ||
          b >= this.height
        )
      )
        switch (this.type[1]) {
          case 0:
            pa.setPixel(this, a, b, c, d);
            break;
          case 1:
            pa.convertToData(this);
            Z.setPixel(this, a, b, c, d);
            break;
          case 2:
            if (null == d)
              c =
                ((c & 255) << 24) |
                (((c >>> 24) & 255) << 16) |
                (((c >>> 16) & 255) << 8) |
                ((c >>> 8) & 255);
            else
              switch (d) {
                case 1:
                  break;
                case 2:
                  c =
                    ((c & 255) << 24) |
                    (((c >>> 8) & 255) << 16) |
                    (((c >>> 16) & 255) << 8) |
                    ((c >>> 24) & 255);
                  break;
                default:
                  c =
                    ((c & 255) << 24) |
                    (((c >>> 24) & 255) << 16) |
                    (((c >>> 16) & 255) << 8) |
                    ((c >>> 8) & 255);
              }
            this.buffer.__srcBitmapData.setPixel(
              a + this.offsetX,
              b + this.offsetX,
              c
            );
        }
    },
    setPixel32: function (a, b, c, d) {
      if (
        !(
          null == this.buffer ||
          0 > a ||
          0 > b ||
          a >= this.width ||
          b >= this.height
        )
      )
        switch (this.type[1]) {
          case 0:
            pa.setPixel32(this, a, b, c, d);
            break;
          case 1:
            pa.convertToData(this);
            Z.setPixel32(this, a, b, c, d);
            break;
          case 2:
            if (null == d)
              c =
                ((c & 255) << 24) |
                (((c >>> 24) & 255) << 16) |
                (((c >>> 16) & 255) << 8) |
                ((c >>> 8) & 255);
            else
              switch (d) {
                case 1:
                  break;
                case 2:
                  c =
                    ((c & 255) << 24) |
                    (((c >>> 8) & 255) << 16) |
                    (((c >>> 16) & 255) << 8) |
                    ((c >>> 24) & 255);
                  break;
                default:
                  c =
                    ((c & 255) << 24) |
                    (((c >>> 24) & 255) << 16) |
                    (((c >>> 16) & 255) << 8) |
                    ((c >>> 8) & 255);
              }
            this.buffer.__srcBitmapData.setPixel32(
              a + this.offsetX,
              b + this.offsetY,
              c
            );
        }
    },
    setPixels: function (a, b, c, d) {
      a = this.__clipRect(a);
      if (null != this.buffer && null != a)
        switch ((null == d && (d = If.BIG_ENDIAN), this.type[1])) {
          case 0:
            pa.setPixels(this, a, b, c, d);
            break;
          case 1:
            pa.convertToData(this), Z.setPixels(this, a, b, c, d);
        }
    },
    threshold: function (a, b, c, d, e, f, g, h, n) {
      null == h && (h = !1);
      null == g && (g = -1);
      null == f && (f = 0);
      if (null == this.buffer || null == a || null == b) return 0;
      switch (this.type[1]) {
        case 0:
        case 1:
          return (
            pa.convertToData(this),
            pa.convertToData(a),
            Z.threshold(this, a, b, c, d, e, f, g, h, n)
          );
        case 2:
          if (null == n)
            f =
              ((f & 255) << 24) |
              (((f >>> 24) & 255) << 16) |
              (((f >>> 16) & 255) << 8) |
              ((f >>> 8) & 255);
          else
            switch (n) {
              case 1:
                break;
              case 2:
                f =
                  ((f & 255) << 24) |
                  (((f >>> 8) & 255) << 16) |
                  (((f >>> 16) & 255) << 8) |
                  ((f >>> 24) & 255);
                break;
              default:
                f =
                  ((f & 255) << 24) |
                  (((f >>> 24) & 255) << 16) |
                  (((f >>> 16) & 255) << 8) |
                  ((f >>> 8) & 255);
            }
          if (null == n)
            g =
              ((g & 255) << 24) |
              (((g >>> 24) & 255) << 16) |
              (((g >>> 16) & 255) << 8) |
              ((g >>> 8) & 255);
          else
            switch (n) {
              case 1:
                break;
              case 2:
                g =
                  ((g & 255) << 24) |
                  (((g >>> 8) & 255) << 16) |
                  (((g >>> 16) & 255) << 8) |
                  ((g >>> 24) & 255);
                break;
              default:
                g =
                  ((g & 255) << 24) |
                  (((g >>> 24) & 255) << 16) |
                  (((g >>> 16) & 255) << 8) |
                  ((g >>> 8) & 255);
            }
          b.offset(a.offsetX, a.offsetY);
          c.offset(this.offsetX, this.offsetY);
          return this.buffer.__srcBitmapData.threshold(
            a.buffer.get_src(),
            b.__toFlashRectangle(),
            c.__toFlashPoint(),
            d,
            e,
            f,
            g,
            h
          );
      }
      return 0;
    },
    __clipRect: function (a) {
      return null == a ||
        (0 > a.x && ((a.width -= -a.x), (a.x = 0), 0 >= a.x + a.width)) ||
        (0 > a.y && ((a.height -= -a.y), (a.y = 0), 0 >= a.y + a.height)) ||
        (a.x + a.width >= this.width &&
          ((a.width -= a.x + a.width - this.width), 0 >= a.width)) ||
        (a.y + a.height >= this.height &&
          ((a.height -= a.y + a.height - this.height), 0 >= a.height))
        ? null
        : a;
    },
    __fromBase64: function (a, b, c) {
      var d = this,
        e = new Image();
      e.addEventListener(
        "load",
        function (a) {
          d.buffer = new ag(null, e.width, e.height);
          d.buffer.__srcImage = e;
          d.offsetX = 0;
          d.offsetY = 0;
          d.width = d.buffer.width;
          d.height = d.buffer.height;
          null != c && c(d);
        },
        !1
      );
      e.src = "data:" + b + ";base64," + a;
    },
    __fromBytes: function (a, b) {
      if (pb.__isPNG(a)) var c = "image/png";
      else if (pb.__isJPG(a)) c = "image/jpeg";
      else if (pb.__isGIF(a)) c = "image/gif";
      else return !1;
      this.__fromBase64(pb.__base64Encode(a), c, b);
      return !0;
    },
    __fromFile: function (a, b, c) {
      var d = this,
        e = new Image();
      bb.__isSameOrigin(a) || (e.crossOrigin = "Anonymous");
      e.onload = function (a) {
        d.buffer = new ag(null, e.width, e.height);
        d.buffer.__srcImage = e;
        d.width = e.width;
        d.height = e.height;
        null != b && b(d);
      };
      e.onerror = function (a) {
        null != c && c();
      };
      e.src = a;
      return !0;
    },
    __fromImageBuffer: function (a) {
      this.buffer = a;
      null != a &&
        (-1 == this.width && (this.width = a.width),
        -1 == this.height && (this.height = a.height));
    },
    get_data: function () {
      null == this.buffer.data &&
        0 < this.buffer.width &&
        0 < this.buffer.height &&
        pa.convertToData(this);
      return this.buffer.data;
    },
    set_data: function (a) {
      return (this.buffer.data = a);
    },
    get_format: function () {
      return this.buffer.format;
    },
    set_format: function (a) {
      this.buffer.format != a && 1 == this.type[1] && Z.setFormat(this, a);
      return (this.buffer.format = a);
    },
    get_powerOfTwo: function () {
      return 0 != this.buffer.width &&
        (this.buffer.width & (~this.buffer.width + 1)) == this.buffer.width
        ? 0 != this.buffer.height
          ? (this.buffer.height & (~this.buffer.height + 1)) ==
            this.buffer.height
          : !1
        : !1;
    },
    set_powerOfTwo: function (a) {
      if (a != this.get_powerOfTwo()) {
        for (var b = 1, c = 1; b < this.buffer.width; ) b <<= 1;
        for (; c < this.buffer.height; ) c <<= 1;
        if (b == this.buffer.width && c == this.buffer.height) return a;
        switch (this.type[1]) {
          case 0:
            pa.convertToData(this);
            Z.resizeBuffer(this, b, c);
            break;
          case 1:
            Z.resizeBuffer(this, b, c);
        }
      }
      return a;
    },
    get_premultiplied: function () {
      return this.buffer.premultiplied;
    },
    set_premultiplied: function (a) {
      if (a && !this.buffer.premultiplied)
        switch (this.type[1]) {
          case 0:
          case 1:
            pa.convertToData(this), Z.multiplyAlpha(this);
        }
      else
        !a &&
          this.buffer.premultiplied &&
          1 == this.type[1] &&
          (pa.convertToData(this), Z.unmultiplyAlpha(this));
      return a;
    },
    get_rect: function () {
      return new Td(0, 0, this.width, this.height);
    },
    get_src: function () {
      null != this.buffer.__srcCanvas ||
        (null == this.buffer.data && this.type != Pc.DATA) ||
        pa.convertToCanvas(this);
      return this.buffer.get_src();
    },
    set_src: function (a) {
      return this.buffer.set_src(a);
    },
    get_transparent: function () {
      return null == this.buffer ? !1 : this.buffer.transparent;
    },
    set_transparent: function (a) {
      return null == this.buffer ? !1 : (this.buffer.transparent = a);
    },
    __class__: pb,
    __properties__: {
      set_transparent: "set_transparent",
      get_transparent: "get_transparent",
      set_src: "set_src",
      get_src: "get_src",
      get_rect: "get_rect",
      set_premultiplied: "set_premultiplied",
      get_premultiplied: "get_premultiplied",
      set_powerOfTwo: "set_powerOfTwo",
      get_powerOfTwo: "get_powerOfTwo",
      set_format: "set_format",
      get_format: "get_format",
      set_data: "set_data",
      get_data: "get_data",
    },
  };
  var ag = function (a, b, c, d, e) {
    null == d && (d = 32);
    null == c && (c = 0);
    null == b && (b = 0);
    this.data = a;
    this.width = b;
    this.height = c;
    this.bitsPerPixel = d;
    this.format = null == e ? 0 : e;
    this.premultiplied = !1;
    this.transparent = !0;
  };
  p["lime.graphics.ImageBuffer"] = ag;
  ag.__name__ = ["lime", "graphics", "ImageBuffer"];
  ag.prototype = {
    bitsPerPixel: null,
    data: null,
    format: null,
    height: null,
    premultiplied: null,
    transparent: null,
    width: null,
    __srcBitmapData: null,
    __srcCanvas: null,
    __srcContext: null,
    __srcCustom: null,
    __srcImage: null,
    __srcImageData: null,
    clone: function () {
      var a = new ag(this.data, this.width, this.height, this.bitsPerPixel);
      if (null != this.data) {
        var b = this.data.byteLength;
        b = null != b ? new lb(b) : null;
        a.data = b;
        b = this.data;
        b = null != b ? new lb(b) : null;
        a.data.set(b);
      } else
        null != this.__srcImageData
          ? ((a.__srcCanvas = window.document.createElement("canvas")),
            (a.__srcContext = a.__srcCanvas.getContext("2d")),
            (a.__srcCanvas.width = this.__srcImageData.width),
            (a.__srcCanvas.height = this.__srcImageData.height),
            (a.__srcImageData = a.__srcContext.createImageData(
              this.__srcImageData.width,
              this.__srcImageData.height
            )),
            (b = new Uint8ClampedArray(this.__srcImageData.data)),
            a.__srcImageData.data.set(b))
          : null != this.__srcCanvas
          ? ((a.__srcCanvas = window.document.createElement("canvas")),
            (a.__srcContext = a.__srcCanvas.getContext("2d")),
            (a.__srcCanvas.width = this.__srcCanvas.width),
            (a.__srcCanvas.height = this.__srcCanvas.height),
            a.__srcContext.drawImage(this.__srcCanvas, 0, 0))
          : (a.__srcImage = this.__srcImage);
      a.bitsPerPixel = this.bitsPerPixel;
      a.format = this.format;
      a.premultiplied = this.premultiplied;
      a.transparent = this.transparent;
      return a;
    },
    get_src: function () {
      return null != this.__srcImage ? this.__srcImage : this.__srcCanvas;
    },
    set_src: function (a) {
      u.__instanceof(a, Image)
        ? (this.__srcImage = a)
        : u.__instanceof(a, HTMLCanvasElement) &&
          ((this.__srcCanvas = a),
          (this.__srcContext = this.__srcCanvas.getContext("2d")));
      return a;
    },
    get_stride: function () {
      return 4 * this.width;
    },
    __class__: ag,
    __properties__: {
      get_stride: "get_stride",
      set_src: "set_src",
      get_src: "get_src",
    },
  };
  var cd = (p["lime.graphics.ImageChannel"] = {
    __ename__: ["lime", "graphics", "ImageChannel"],
    __constructs__: ["RED", "GREEN", "BLUE", "ALPHA"],
  });
  cd.RED = ["RED", 0];
  cd.RED.toString = M;
  cd.RED.__enum__ = cd;
  cd.GREEN = ["GREEN", 1];
  cd.GREEN.toString = M;
  cd.GREEN.__enum__ = cd;
  cd.BLUE = ["BLUE", 2];
  cd.BLUE.toString = M;
  cd.BLUE.__enum__ = cd;
  cd.ALPHA = ["ALPHA", 3];
  cd.ALPHA.toString = M;
  cd.ALPHA.__enum__ = cd;
  var dg = (p["lime.graphics.ImageFileFormat"] = {
    __ename__: ["lime", "graphics", "ImageFileFormat"],
    __constructs__: ["BMP", "JPEG", "PNG"],
  });
  dg.BMP = ["BMP", 0];
  dg.BMP.toString = M;
  dg.BMP.__enum__ = dg;
  dg.JPEG = ["JPEG", 1];
  dg.JPEG.toString = M;
  dg.JPEG.__enum__ = dg;
  dg.PNG = ["PNG", 2];
  dg.PNG.toString = M;
  dg.PNG.__enum__ = dg;
  var Pc = (p["lime.graphics.ImageType"] = {
    __ename__: ["lime", "graphics", "ImageType"],
    __constructs__: ["CANVAS", "DATA", "FLASH", "CUSTOM"],
  });
  Pc.CANVAS = ["CANVAS", 0];
  Pc.CANVAS.toString = M;
  Pc.CANVAS.__enum__ = Pc;
  Pc.DATA = ["DATA", 1];
  Pc.DATA.toString = M;
  Pc.DATA.__enum__ = Pc;
  Pc.FLASH = ["FLASH", 2];
  Pc.FLASH.toString = M;
  Pc.FLASH.__enum__ = Pc;
  Pc.CUSTOM = ["CUSTOM", 3];
  Pc.CUSTOM.toString = M;
  Pc.CUSTOM.__enum__ = Pc;
  var Bn = {};
  p["lime.graphics._OpenGLES2RenderContext.OpenGLES2RenderContext_Impl_"] = Bn;
  Bn.__name__ = [
    "lime",
    "graphics",
    "_OpenGLES2RenderContext",
    "OpenGLES2RenderContext_Impl_",
  ];
  Bn.fromGL = function (a) {
    return null;
  };
  Bn.fromOpenGLES3RenderContext = function (a) {
    return null;
  };
  Bn.fromRenderContext = function (a) {
    return null;
  };
  Bn.fromWebGLRenderContext = function (a) {
    return null;
  };
  var Bk = {};
  p["lime.graphics._OpenGLES3RenderContext.OpenGLES3RenderContext_Impl_"] = Bk;
  Bk.__name__ = [
    "lime",
    "graphics",
    "_OpenGLES3RenderContext",
    "OpenGLES3RenderContext_Impl_",
  ];
  Bk.fromRenderContext = function (a) {
    return null;
  };
  Bk.fromGL = function (a) {
    return null;
  };
  Bk.fromOpenGLES2RenderContext = function (a) {
    return null;
  };
  Bk.fromWebGLRenderContext = function (a) {
    return null;
  };
  Bk.fromWebGL2RenderContext = function (a) {
    return null;
  };
  var At = {};
  p["lime.graphics._OpenGLRenderContext.OpenGLRenderContext_Impl_"] = At;
  At.__name__ = [
    "lime",
    "graphics",
    "_OpenGLRenderContext",
    "OpenGLRenderContext_Impl_",
  ];
  At.fromRenderContext = function (a) {
    return null;
  };
  var Np = function () {};
  p["lime.graphics.RenderContext"] = Np;
  Np.__name__ = ["lime", "graphics", "RenderContext"];
  Np.prototype = {
    attributes: null,
    cairo: null,
    canvas2D: null,
    dom: null,
    flash: null,
    gl: null,
    gles2: null,
    gles3: null,
    type: null,
    version: null,
    webgl: null,
    webgl2: null,
    window: null,
    __class__: Np,
  };
  var Nd = {};
  p["lime.graphics._WebGL2RenderContext.WebGL2RenderContext_Impl_"] = Nd;
  Nd.__name__ = [
    "lime",
    "graphics",
    "_WebGL2RenderContext",
    "WebGL2RenderContext_Impl_",
  ];
  Nd.bufferData = function (a, b, c, d, e, f) {
    null != e ? a.bufferData(b, c, d, e, f) : a.bufferData(b, c, d);
  };
  Nd.bufferSubData = function (a, b, c, d, e, f) {
    null != e ? a.bufferSubData(b, c, d, e, f) : a.bufferSubData(b, c, d);
  };
  Nd.compressedTexImage2D = function (a, b, c, d, e, f, g, h, n, k) {
    null != n
      ? a.compressedTexImage2D(b, c, d, e, f, g, h, n, k)
      : a.compressedTexImage2D(b, c, d, e, f, g, h);
  };
  Nd.compressedTexSubImage2D = function (a, b, c, d, e, f, g, h, n, k, m) {
    null != k
      ? a.compressedTexSubImage2D(b, c, d, e, f, g, h, n, k, m)
      : a.compressedTexSubImage2D(b, c, d, e, f, g, h, n);
  };
  Nd.getBufferSubData = function (a, b, c, d, e, f) {
    null != e ? a.getBufferSubData(b, c, d, e, f) : a.getBufferSubData(b, c, d);
  };
  Nd.readPixels = function (a, b, c, d, e, f, g, h, n) {
    null != n
      ? a.readPixels(b, c, d, e, f, g, h, n)
      : a.readPixels(b, c, d, e, f, g, h);
  };
  Nd.texImage2D = function (a, b, c, d, e, f, g, h, n, k, m) {
    null != m
      ? a.texImage2D(b, c, d, e, f, g, h, n, k, m)
      : null != h
      ? a.texImage2D(b, c, d, e, f, g, h, n, k)
      : a.texImage2D(b, c, d, e, f, g);
  };
  Nd.texSubImage2D = function (a, b, c, d, e, f, g, h, n, k, m) {
    null != m
      ? a.texSubImage2D(b, c, d, e, f, g, h, n, k, m)
      : null != n
      ? a.texSubImage2D(b, c, d, e, f, g, h, n, k)
      : a.texSubImage2D(b, c, d, e, f, g, h);
  };
  Nd.uniform1fv = function (a, b, c, d, e) {
    null != d ? a.uniform1fv(b, c, d, e) : a.uniform1fv(b, c);
  };
  Nd.uniform1iv = function (a, b, c, d, e) {
    null != d ? a.uniform1iv(b, c, d, e) : a.uniform1iv(b, c);
  };
  Nd.uniform2fv = function (a, b, c, d, e) {
    null != d ? a.uniform2fv(b, c, d, e) : a.uniform2fv(b, c);
  };
  Nd.uniform2iv = function (a, b, c, d, e) {
    null != d ? a.uniform2iv(b, c, d, e) : a.uniform2iv(b, c);
  };
  Nd.uniform3fv = function (a, b, c, d, e) {
    null != d ? a.uniform3fv(b, c, d, e) : a.uniform3fv(b, c);
  };
  Nd.uniform3iv = function (a, b, c, d, e) {
    null != d ? a.uniform3iv(b, c, d, e) : a.uniform3iv(b, c);
  };
  Nd.uniform4fv = function (a, b, c, d, e) {
    null != d ? a.uniform4fv(b, c, d, e) : a.uniform4fv(b, c);
  };
  Nd.uniform4iv = function (a, b, c, d, e) {
    null != d ? a.uniform4iv(b, c, d, e) : a.uniform4iv(b, c);
  };
  Nd.uniformMatrix2fv = function (a, b, c, d, e, f) {
    null != e ? a.uniformMatrix2fv(b, c, d, e, f) : a.uniformMatrix2fv(b, c, d);
  };
  Nd.uniformMatrix3fv = function (a, b, c, d, e, f) {
    null != e ? a.uniformMatrix3fv(b, c, d, e, f) : a.uniformMatrix3fv(b, c, d);
  };
  Nd.uniformMatrix4fv = function (a, b, c, d, e, f) {
    null != e ? a.uniformMatrix4fv(b, c, d, e, f) : a.uniformMatrix4fv(b, c, d);
  };
  Nd.fromGL = function (a) {
    return null;
  };
  Nd.fromRenderContext = function (a) {
    return a.webgl2;
  };
  Nd.toWebGLRenderContext = function (a) {
    return a;
  };
  var yb = {};
  p["lime.graphics._WebGLRenderContext.WebGLRenderContext_Impl_"] = yb;
  yb.__name__ = [
    "lime",
    "graphics",
    "_WebGLRenderContext",
    "WebGLRenderContext_Impl_",
  ];
  yb.bufferData = function (a, b, c, d) {
    a.bufferData(b, c, d);
  };
  yb.bufferSubData = function (a, b, c, d) {
    a.bufferSubData(b, c, d);
  };
  yb.compressedTexImage2D = function (a, b, c, d, e, f, g, h) {
    a.compressedTexImage2D(b, c, d, e, f, g, h);
  };
  yb.compressedTexSubImage2D = function (a, b, c, d, e, f, g, h, n) {
    a.compressedTexSubImage2D(b, c, d, e, f, g, h, n);
  };
  yb.readPixels = function (a, b, c, d, e, f, g, h) {
    a.readPixels(b, c, d, e, f, g, h);
  };
  yb.texImage2D = function (a, b, c, d, e, f, g, h, n, k) {
    null != h
      ? a.texImage2D(b, c, d, e, f, g, h, n, k)
      : a.texImage2D(b, c, d, e, f, g);
  };
  yb.texSubImage2D = function (a, b, c, d, e, f, g, h, n, k) {
    null != n
      ? a.texSubImage2D(b, c, d, e, f, g, h, n, k)
      : a.texSubImage2D(b, c, d, e, f, g, h);
  };
  yb.uniformMatrix2fv = function (a, b, c, d) {
    a.uniformMatrix2fv(b, c, d);
  };
  yb.uniformMatrix3fv = function (a, b, c, d) {
    a.uniformMatrix3fv(b, c, d);
  };
  yb.uniformMatrix4fv = function (a, b, c, d) {
    a.uniformMatrix4fv(b, c, d);
  };
  yb.fromWebGL2RenderContext = function (a) {
    return a;
  };
  yb.fromRenderContext = function (a) {
    return a.webgl;
  };
  yb.fromGL = function (a) {
    return q.context;
  };
  var Ck = function (a) {};
  p["lime.graphics.cairo.Cairo"] = Ck;
  Ck.__name__ = ["lime", "graphics", "cairo", "Cairo"];
  Ck.__properties__ = {
    get_versionString: "get_versionString",
    get_version: "get_version",
  };
  Ck.get_version = function () {
    return 0;
  };
  Ck.get_versionString = function () {
    return "";
  };
  Ck.prototype = {
    target: null,
    userData: null,
    handle: null,
    arc: function (a, b, c, d, e) {},
    arcNegative: function (a, b, c, d, e) {},
    clip: function () {},
    clipExtents: function (a, b, c, d) {},
    clipPreserve: function () {},
    closePath: function () {},
    copyPage: function () {},
    curveTo: function (a, b, c, d, e, f) {},
    fill: function () {},
    fillExtents: function (a, b, c, d) {},
    fillPreserve: function () {},
    getOperator: function () {
      return 0;
    },
    identityMatrix: function () {},
    inClip: function (a, b) {
      return !1;
    },
    inFill: function (a, b) {
      return !1;
    },
    inStroke: function (a, b) {
      return !1;
    },
    lineTo: function (a, b) {},
    mask: function (a) {},
    maskSurface: function (a, b, c) {},
    moveTo: function (a, b) {},
    newPath: function () {},
    paint: function () {},
    paintWithAlpha: function (a) {},
    popGroup: function () {
      return null;
    },
    popGroupToSource: function () {},
    pushGroup: function () {},
    pushGroupWithContent: function (a) {},
    recreate: function (a) {},
    rectangle: function (a, b, c, d) {},
    relCurveTo: function (a, b, c, d, e, f) {},
    relLineTo: function (a, b) {},
    relMoveTo: function (a, b) {},
    resetClip: function () {},
    restore: function () {},
    rotate: function (a) {},
    save: function () {},
    scale: function (a, b) {},
    setFontSize: function (a) {},
    setOperator: function (a) {
      return a;
    },
    setSourceRGB: function (a, b, c) {},
    setSourceRGBA: function (a, b, c, d) {},
    setSourceSurface: function (a, b, c) {},
    showGlyphs: function (a) {},
    showPage: function () {},
    showText: function (a) {},
    status: function () {
      return 0;
    },
    stroke: function () {},
    strokeExtents: function (a, b, c, d) {},
    strokePreserve: function () {},
    textPath: function (a) {},
    transform: function (a) {},
    translate: function (a, b) {},
    get_antialias: function () {
      return 0;
    },
    set_antialias: function (a) {
      return a;
    },
    get_currentPoint: function () {
      return null;
    },
    get_dash: function () {
      return [];
    },
    set_dash: function (a) {
      return a;
    },
    get_dashCount: function () {
      return 0;
    },
    get_fillRule: function () {
      return 0;
    },
    set_fillRule: function (a) {
      return a;
    },
    get_fontFace: function () {
      return 0;
    },
    set_fontFace: function (a) {
      return a;
    },
    get_fontOptions: function () {
      return null;
    },
    set_fontOptions: function (a) {
      return a;
    },
    get_groupTarget: function () {
      return 0;
    },
    get_hasCurrentPoint: function () {
      return !1;
    },
    get_lineCap: function () {
      return 0;
    },
    set_lineCap: function (a) {
      return a;
    },
    get_lineJoin: function () {
      return 0;
    },
    set_lineJoin: function (a) {
      return a;
    },
    get_lineWidth: function () {
      return 0;
    },
    set_lineWidth: function (a) {
      return a;
    },
    get_matrix: function () {
      return null;
    },
    set_matrix: function (a) {
      return a;
    },
    get_miterLimit: function () {
      return 0;
    },
    set_miterLimit: function (a) {
      return a;
    },
    get_operator: function () {
      return 0;
    },
    set_operator: function (a) {
      return a;
    },
    get_source: function () {
      return 0;
    },
    set_source: function (a) {
      return a;
    },
    get_target: function () {
      return 0;
    },
    get_tolerance: function () {
      return 0;
    },
    set_tolerance: function (a) {
      return a;
    },
    __class__: Ck,
    __properties__: {
      set_tolerance: "set_tolerance",
      get_tolerance: "get_tolerance",
      get_target: "get_target",
      set_source: "set_source",
      get_source: "get_source",
      set_operator: "set_operator",
      get_operator: "get_operator",
      set_miterLimit: "set_miterLimit",
      get_miterLimit: "get_miterLimit",
      set_matrix: "set_matrix",
      get_matrix: "get_matrix",
      set_lineWidth: "set_lineWidth",
      get_lineWidth: "get_lineWidth",
      set_lineJoin: "set_lineJoin",
      get_lineJoin: "get_lineJoin",
      set_lineCap: "set_lineCap",
      get_lineCap: "get_lineCap",
      get_hasCurrentPoint: "get_hasCurrentPoint",
      get_groupTarget: "get_groupTarget",
      set_fontOptions: "set_fontOptions",
      get_fontOptions: "get_fontOptions",
      set_fontFace: "set_fontFace",
      get_fontFace: "get_fontFace",
      set_fillRule: "set_fillRule",
      get_fillRule: "get_fillRule",
      get_dashCount: "get_dashCount",
      set_dash: "set_dash",
      get_dash: "get_dash",
      get_currentPoint: "get_currentPoint",
      set_antialias: "set_antialias",
      get_antialias: "get_antialias",
    },
  };
  var dq = {};
  p["lime.graphics.cairo._CairoFTFontFace.CairoFTFontFace_Impl_"] = dq;
  dq.__name__ = [
    "lime",
    "graphics",
    "cairo",
    "_CairoFTFontFace",
    "CairoFTFontFace_Impl_",
  ];
  dq._new = function () {
    return 0;
  };
  dq.create = function (a, b) {
    return 0;
  };
  var Ss = {};
  p["lime.graphics.cairo._CairoFontFace.CairoFontFace_Impl_"] = Ss;
  Ss.__name__ = [
    "lime",
    "graphics",
    "cairo",
    "_CairoFontFace",
    "CairoFontFace_Impl_",
  ];
  Ss._new = function () {
    return null;
  };
  Ss.status = function (a) {
    return 0;
  };
  var Yg = {};
  p["lime.graphics.cairo._CairoFontOptions.CairoFontOptions_Impl_"] = Yg;
  Yg.__name__ = [
    "lime",
    "graphics",
    "cairo",
    "_CairoFontOptions",
    "CairoFontOptions_Impl_",
  ];
  Yg.__properties__ = {
    set_subpixelOrder: "set_subpixelOrder",
    get_subpixelOrder: "get_subpixelOrder",
    set_hintStyle: "set_hintStyle",
    get_hintStyle: "get_hintStyle",
    set_hintMetrics: "set_hintMetrics",
    get_hintMetrics: "get_hintMetrics",
    set_antialias: "set_antialias",
    get_antialias: "get_antialias",
  };
  Yg._new = function () {
    return null;
  };
  Yg.get_antialias = function (a) {
    return 0;
  };
  Yg.set_antialias = function (a, b) {
    return b;
  };
  Yg.get_hintMetrics = function (a) {
    return 0;
  };
  Yg.set_hintMetrics = function (a, b) {
    return b;
  };
  Yg.get_hintStyle = function (a) {
    return 0;
  };
  Yg.set_hintStyle = function (a, b) {
    return b;
  };
  Yg.get_subpixelOrder = function (a) {
    return 0;
  };
  Yg.set_subpixelOrder = function (a, b) {
    return b;
  };
  var Ts = function (a, b, c) {
    null == c && (c = 0);
    null == b && (b = 0);
    this.index = a;
    this.x = b;
    this.y = c;
  };
  p["lime.graphics.cairo.CairoGlyph"] = Ts;
  Ts.__name__ = ["lime", "graphics", "cairo", "CairoGlyph"];
  Ts.prototype = { index: null, x: null, y: null, __class__: Ts };
  var Zg = {};
  p["lime.graphics.cairo._CairoImageSurface.CairoImageSurface_Impl_"] = Zg;
  Zg.__name__ = [
    "lime",
    "graphics",
    "cairo",
    "_CairoImageSurface",
    "CairoImageSurface_Impl_",
  ];
  Zg.__properties__ = {
    get_width: "get_width",
    get_stride: "get_stride",
    get_height: "get_height",
    get_format: "get_format",
    get_data: "get_data",
  };
  Zg._new = function (a, b, c) {
    return 0;
  };
  Zg.create = function (a, b, c, d, e) {
    return 0;
  };
  Zg.fromImage = function (a) {
    return null;
  };
  Zg.get_data = function (a) {
    return tb.fromInt(0);
  };
  Zg.get_format = function (a) {
    return 0;
  };
  Zg.get_height = function (a) {
    return 0;
  };
  Zg.get_stride = function (a) {
    return 0;
  };
  Zg.get_width = function (a) {
    return 0;
  };
  var he = {};
  p["lime.graphics.cairo._CairoPattern.CairoPattern_Impl_"] = he;
  he.__name__ = [
    "lime",
    "graphics",
    "cairo",
    "_CairoPattern",
    "CairoPattern_Impl_",
  ];
  he.__properties__ = {
    set_matrix: "set_matrix",
    get_matrix: "get_matrix",
    set_filter: "set_filter",
    get_filter: "get_filter",
    set_extend: "set_extend",
    get_extend: "get_extend",
    get_colorStopCount: "get_colorStopCount",
  };
  he._new = function (a) {
    return a;
  };
  he.addColorStopRGB = function (a, b, c, d, e) {};
  he.addColorStopRGBA = function (a, b, c, d, e, f) {};
  he.createForSurface = function (a) {
    return 0;
  };
  he.createLinear = function (a, b, c, d) {
    return 0;
  };
  he.createRadial = function (a, b, c, d, e, f) {
    return 0;
  };
  he.createRGB = function (a, b, c) {
    return 0;
  };
  he.createRGBA = function (a, b, c, d) {
    return 0;
  };
  he.get_colorStopCount = function (a) {
    return 0;
  };
  he.get_extend = function (a) {
    return 0;
  };
  he.set_extend = function (a, b) {
    return b;
  };
  he.get_filter = function (a) {
    return 0;
  };
  he.set_filter = function (a, b) {
    return b;
  };
  he.get_matrix = function (a) {
    return null;
  };
  he.set_matrix = function (a, b) {
    return b;
  };
  var Us = {};
  p["lime.graphics.cairo._CairoSurface.CairoSurface_Impl_"] = Us;
  Us.__name__ = [
    "lime",
    "graphics",
    "cairo",
    "_CairoSurface",
    "CairoSurface_Impl_",
  ];
  Us.flush = function (a) {};
  var q = function () {};
  p["lime.graphics.opengl.GL"] = q;
  q.__name__ = ["lime", "graphics", "opengl", "GL"];
  q.activeTexture = function (a) {
    q.context.activeTexture(a);
  };
  q.attachShader = function (a, b) {
    q.context.attachShader(a, b);
  };
  q.beginQuery = function (a, b) {
    q.context.beginQuery(a, b);
  };
  q.beginTransformFeedback = function (a) {
    q.context.beginTransformFeedback(a);
  };
  q.bindAttribLocation = function (a, b, c) {
    q.context.bindAttribLocation(a, b, c);
  };
  q.bindBuffer = function (a, b) {
    q.context.bindBuffer(a, b);
  };
  q.bindBufferBase = function (a, b, c) {
    q.context.bindBufferBase(a, b, c);
  };
  q.bindBufferRange = function (a, b, c, d, e) {
    q.context.bindBufferRange(a, b, c, d, tb.fromInt(e));
  };
  q.bindFramebuffer = function (a, b) {
    q.context.bindFramebuffer(a, b);
  };
  q.bindRenderbuffer = function (a, b) {
    q.context.bindRenderbuffer(a, b);
  };
  q.bindSampler = function (a, b) {
    q.context.bindSampler(a, b);
  };
  q.bindTexture = function (a, b) {
    q.context.bindTexture(a, b);
  };
  q.bindTransformFeedback = function (a, b) {
    q.context.bindTransformFeedback(a, b);
  };
  q.bindVertexArray = function (a) {
    q.context.bindVertexArray(a);
  };
  q.blitFramebuffer = function (a, b, c, d, e, f, g, h, n, k) {
    q.context.blitFramebuffer(a, b, c, d, e, f, g, h, n, k);
  };
  q.blendColor = function (a, b, c, d) {
    q.context.blendColor(a, b, c, d);
  };
  q.blendEquation = function (a) {
    q.context.blendEquation(a);
  };
  q.blendEquationSeparate = function (a, b) {
    q.context.blendEquationSeparate(a, b);
  };
  q.blendFunc = function (a, b) {
    q.context.blendFunc(a, b);
  };
  q.blendFuncSeparate = function (a, b, c, d) {
    q.context.blendFuncSeparate(a, b, c, d);
  };
  q.bufferDataWEBGL = function (a, b, c, d, e) {
    var f = q.context;
    null != d ? f.bufferData(a, b, c, d, e) : f.bufferData(a, b, c);
  };
  q.bufferSubDataWEBGL = function (a, b, c, d, e) {
    var f = q.context;
    null != d ? f.bufferSubData(a, b, c, d, e) : f.bufferSubData(a, b, c);
  };
  q.checkFramebufferStatus = function (a) {
    return q.context.checkFramebufferStatus(a);
  };
  q.clear = function (a) {
    q.context.clear(a);
  };
  q.clearBufferfi = function (a, b, c, d) {
    q.context.clearBufferfi(a, b, c, d);
  };
  q.clearBufferfvWEBGL = function (a, b, c, d) {
    q.context.clearBufferfv(a, b, c, d);
  };
  q.clearBufferivWEBGL = function (a, b, c, d) {
    q.context.clearBufferiv(a, b, c, d);
  };
  q.clearBufferuivWEBGL = function (a, b, c, d) {
    q.context.clearBufferuiv(a, b, c, d);
  };
  q.clearColor = function (a, b, c, d) {
    q.context.clearColor(a, b, c, d);
  };
  q.clearDepth = function (a) {
    q.context.clearDepth(a);
  };
  q.clearStencil = function (a) {
    q.context.clearStencil(a);
  };
  q.clientWaitSync = function (a, b, c) {
    return q.context.clientWaitSync(a, b, c);
  };
  q.colorMask = function (a, b, c, d) {
    q.context.colorMask(a, b, c, d);
  };
  q.compileShader = function (a) {
    q.context.compileShader(a);
  };
  q.compressedTexImage2DWEBGL = function (a, b, c, d, e, f, g, h, n) {
    var k = q.context;
    null != h
      ? k.compressedTexImage2D(a, b, c, d, e, f, g, h, n)
      : k.compressedTexImage2D(a, b, c, d, e, f, g);
  };
  q.compressedTexImage3DWEBGL = function (a, b, c, d, e, f, g, h, n, k) {
    q.context.compressedTexImage3D(a, b, c, d, e, f, g, h, n, k);
  };
  q.compressedTexSubImage2DWEBGL = function (a, b, c, d, e, f, g, h, n, k) {
    var m = q.context;
    null != n
      ? m.compressedTexSubImage2D(a, b, c, d, e, f, g, h, n, k)
      : m.compressedTexSubImage2D(a, b, c, d, e, f, g, h);
  };
  q.compressedTexSubImage3DWEBGL = function (
    a,
    b,
    c,
    d,
    e,
    f,
    g,
    h,
    n,
    k,
    m,
    l
  ) {
    q.context.compressedTexSubImage3D(a, b, c, d, e, f, g, h, n, k, m, l);
  };
  q.copyTexImage2D = function (a, b, c, d, e, f, g, h) {
    q.context.copyTexImage2D(a, b, c, d, e, f, g, h);
  };
  q.copyTexSubImage2D = function (a, b, c, d, e, f, g, h) {
    q.context.copyTexSubImage2D(a, b, c, d, e, f, g, h);
  };
  q.copyTexSubImage3D = function (a, b, c, d, e, f, g, h, n) {
    q.context.copyTexSubImage3D(a, b, c, d, e, f, g, h, n);
  };
  q.createBuffer = function () {
    return q.context.createBuffer();
  };
  q.createFramebuffer = function () {
    return q.context.createFramebuffer();
  };
  q.createProgram = function () {
    return q.context.createProgram();
  };
  q.createQuery = function () {
    return q.context.createQuery();
  };
  q.createRenderbuffer = function () {
    return q.context.createRenderbuffer();
  };
  q.createSampler = function () {
    return q.context.createSampler();
  };
  q.createShader = function (a) {
    return q.context.createShader(a);
  };
  q.createTexture = function () {
    return q.context.createTexture();
  };
  q.createTransformFeedback = function () {
    return q.context.createTransformFeedback();
  };
  q.createVertexArray = function () {
    return q.context.createVertexArray();
  };
  q.cullFace = function (a) {
    q.context.cullFace(a);
  };
  q.deleteBuffer = function (a) {
    q.context.deleteBuffer(a);
  };
  q.deleteFramebuffer = function (a) {
    q.context.deleteFramebuffer(a);
  };
  q.deleteProgram = function (a) {
    q.context.deleteProgram(a);
  };
  q.deleteQuery = function (a) {
    q.context.deleteQuery(a);
  };
  q.deleteRenderbuffer = function (a) {
    q.context.deleteRenderbuffer(a);
  };
  q.deleteSampler = function (a) {
    q.context.deleteSampler(a);
  };
  q.deleteShader = function (a) {
    q.context.deleteShader(a);
  };
  q.deleteSync = function (a) {
    q.context.deleteSync(a);
  };
  q.deleteTexture = function (a) {
    q.context.deleteTexture(a);
  };
  q.deleteTransformFeedback = function (a) {
    q.context.deleteTransformFeedback(a);
  };
  q.deleteVertexArray = function (a) {
    q.context.deleteVertexArray(a);
  };
  q.depthFunc = function (a) {
    q.context.depthFunc(a);
  };
  q.depthMask = function (a) {
    q.context.depthMask(a);
  };
  q.depthRange = function (a, b) {
    q.context.depthRange(a, b);
  };
  q.detachShader = function (a, b) {
    q.context.detachShader(a, b);
  };
  q.disable = function (a) {
    q.context.disable(a);
  };
  q.disableVertexAttribArray = function (a) {
    q.context.disableVertexAttribArray(a);
  };
  q.drawArrays = function (a, b, c) {
    q.context.drawArrays(a, b, c);
  };
  q.drawArraysInstanced = function (a, b, c, d) {
    q.context.drawArraysInstanced(a, b, c, d);
  };
  q.drawBuffers = function (a) {
    q.context.drawBuffers(a);
  };
  q.drawElements = function (a, b, c, d) {
    q.context.drawElements(a, b, c, d);
  };
  q.drawElementsInstanced = function (a, b, c, d, e) {
    q.context.drawElementsInstanced(a, b, c, d, e);
  };
  q.drawRangeElements = function (a, b, c, d, e, f) {
    q.context.drawRangeElements(a, b, c, d, e, f);
  };
  q.enable = function (a) {
    q.context.enable(a);
  };
  q.enableVertexAttribArray = function (a) {
    q.context.enableVertexAttribArray(a);
  };
  q.endQuery = function (a) {
    q.context.endQuery(a);
  };
  q.endTransformFeedback = function () {
    q.context.endTransformFeedback();
  };
  q.fenceSync = function (a, b) {
    return q.context.fenceSync(a, b);
  };
  q.finish = function () {
    q.context.finish();
  };
  q.flush = function () {
    q.context.flush();
  };
  q.framebufferRenderbuffer = function (a, b, c, d) {
    q.context.framebufferRenderbuffer(a, b, c, d);
  };
  q.framebufferTexture2D = function (a, b, c, d, e) {
    q.context.framebufferTexture2D(a, b, c, d, e);
  };
  q.framebufferTextureLayer = function (a, b, c, d, e) {
    q.context.framebufferTextureLayer(a, b, c, d, e);
  };
  q.frontFace = function (a) {
    q.context.frontFace(a);
  };
  q.generateMipmap = function (a) {
    q.context.generateMipmap(a);
  };
  q.getActiveAttrib = function (a, b) {
    return q.context.getActiveAttrib(a, b);
  };
  q.getActiveUniform = function (a, b) {
    return q.context.getActiveUniform(a, b);
  };
  q.getActiveUniformBlockName = function (a, b) {
    return q.context.getActiveUniformBlockName(a, b);
  };
  q.getActiveUniformBlockParameter = function (a, b, c) {
    return q.context.getActiveUniformBlockParameter(a, b, c);
  };
  q.getActiveUniforms = function (a, b, c) {
    return q.context.getActiveUniforms(a, b, c);
  };
  q.getAttachedShaders = function (a) {
    return q.context.getAttachedShaders(a);
  };
  q.getAttribLocation = function (a, b) {
    return q.context.getAttribLocation(a, b);
  };
  q.getBufferParameter = function (a, b) {
    return q.context.getBufferParameter(a, b);
  };
  q.getBufferSubDataWEBGL = function (a, b, c, d, e) {
    var f = q.context;
    null != d ? f.getBufferSubData(a, b, c, d, e) : f.getBufferSubData(a, b, c);
  };
  q.getContextAttributes = function () {
    return q.context.getContextAttributes();
  };
  q.getError = function () {
    return q.context.getError();
  };
  q.getExtension = function (a) {
    return q.context.getExtension(a);
  };
  q.getFragDataLocation = function (a, b) {
    return q.context.getFragDataLocation(a, b);
  };
  q.getFramebufferAttachmentParameter = function (a, b, c) {
    return q.context.getFramebufferAttachmentParameter(a, b, c);
  };
  q.getIndexedParameter = function (a, b) {
    return q.context.getIndexedParameter(a, b);
  };
  q.getInternalformatParameter = function (a, b, c) {
    return q.context.getInternalformatParameter(a, b, c);
  };
  q.getParameter = function (a) {
    return q.context.getParameter(a);
  };
  q.getProgramInfoLog = function (a) {
    return q.context.getProgramInfoLog(a);
  };
  q.getProgramParameter = function (a, b) {
    return q.context.getProgramParameter(a, b);
  };
  q.getQuery = function (a, b) {
    return q.context.getQuery(a, b);
  };
  q.getQueryParameter = function (a, b) {
    return q.context.getQueryParameter(a, b);
  };
  q.getRenderbufferParameter = function (a, b) {
    return q.context.getRenderbufferParameter(a, b);
  };
  q.getSamplerParameter = function (a, b) {
    return q.context.getSamplerParameter(a, b);
  };
  q.getShaderInfoLog = function (a) {
    return q.context.getShaderInfoLog(a);
  };
  q.getShaderParameter = function (a, b) {
    return q.context.getShaderParameter(a, b);
  };
  q.getShaderPrecisionFormat = function (a, b) {
    return q.context.getShaderPrecisionFormat(a, b);
  };
  q.getShaderSource = function (a) {
    return q.context.getShaderSource(a);
  };
  q.getSupportedExtensions = function () {
    return q.context.getSupportedExtensions();
  };
  q.getSyncParameter = function (a, b) {
    return q.context.getSyncParameter(a, b);
  };
  q.getTexParameter = function (a, b) {
    return q.context.getTexParameter(a, b);
  };
  q.getTransformFeedbackVarying = function (a, b) {
    return q.context.getTransformFeedbackVarying(a, b);
  };
  q.getUniform = function (a, b) {
    return q.context.getUniform(a, b);
  };
  q.getUniformBlockIndex = function (a, b) {
    return q.context.getUniformBlockIndex(a, b);
  };
  q.getUniformIndices = function (a, b) {
    return q.context.getUniformIndices(a, b);
  };
  q.getUniformLocation = function (a, b) {
    return q.context.getUniformLocation(a, b);
  };
  q.getVertexAttrib = function (a, b) {
    return q.context.getVertexAttrib(a, b);
  };
  q.getVertexAttribOffset = function (a, b) {
    return tb.fromInt(q.context.getVertexAttribOffset(a, b));
  };
  q.hint = function (a, b) {
    q.context.hint(a, b);
  };
  q.invalidateFramebuffer = function (a, b) {
    q.context.invalidateFramebuffer(a, b);
  };
  q.invalidateSubFramebuffer = function (a, b, c, d, e, f) {
    q.context.invalidateSubFramebuffer(a, b, c, d, e, f);
  };
  q.isBuffer = function (a) {
    return q.context.isBuffer(a);
  };
  q.isContextLost = function () {
    return q.context.isContextLost();
  };
  q.isEnabled = function (a) {
    return q.context.isEnabled(a);
  };
  q.isFramebuffer = function (a) {
    return q.context.isFramebuffer(a);
  };
  q.isProgram = function (a) {
    return q.context.isProgram(a);
  };
  q.isQuery = function (a) {
    return q.context.isQuery(a);
  };
  q.isRenderbuffer = function (a) {
    return q.context.isRenderbuffer(a);
  };
  q.isSampler = function (a) {
    return q.context.isSampler(a);
  };
  q.isShader = function (a) {
    return q.context.isShader(a);
  };
  q.isSync = function (a) {
    return q.context.isSync(a);
  };
  q.isTexture = function (a) {
    return q.context.isTexture(a);
  };
  q.isTransformFeedback = function (a) {
    return q.context.isTransformFeedback(a);
  };
  q.isVertexArray = function (a) {
    return q.context.isVertexArray(a);
  };
  q.lineWidth = function (a) {
    q.context.lineWidth(a);
  };
  q.linkProgram = function (a) {
    q.context.linkProgram(a);
  };
  q.pauseTransformFeedback = function () {
    q.context.pauseTransformFeedback();
  };
  q.pixelStorei = function (a, b) {
    q.context.pixelStorei(a, b);
  };
  q.polygonOffset = function (a, b) {
    q.context.polygonOffset(a, b);
  };
  q.readBuffer = function (a) {
    q.context.readBuffer(a);
  };
  q.readPixelsWEBGL = function (a, b, c, d, e, f, g, h) {
    var n = q.context;
    null != h
      ? n.readPixels(a, b, c, d, e, f, g, h)
      : n.readPixels(a, b, c, d, e, f, g);
  };
  q.renderbufferStorage = function (a, b, c, d) {
    q.context.renderbufferStorage(a, b, c, d);
  };
  q.renderbufferStorageMultisample = function (a, b, c, d, e) {
    q.context.renderbufferStorageMultisample(a, b, c, d, e);
  };
  q.resumeTransformFeedback = function () {
    q.context.resumeTransformFeedback();
  };
  q.sampleCoverage = function (a, b) {
    q.context.sampleCoverage(a, b);
  };
  q.samplerParameterf = function (a, b, c) {
    q.context.samplerParameterf(a, b, c);
  };
  q.samplerParameteri = function (a, b, c) {
    q.context.samplerParameteri(a, b, c);
  };
  q.scissor = function (a, b, c, d) {
    q.context.scissor(a, b, c, d);
  };
  q.shaderSource = function (a, b) {
    q.context.shaderSource(a, b);
  };
  q.stencilFunc = function (a, b, c) {
    q.context.stencilFunc(a, b, c);
  };
  q.stencilFuncSeparate = function (a, b, c, d) {
    q.context.stencilFuncSeparate(a, b, c, d);
  };
  q.stencilMask = function (a) {
    q.context.stencilMask(a);
  };
  q.stencilMaskSeparate = function (a, b) {
    q.context.stencilMaskSeparate(a, b);
  };
  q.stencilOp = function (a, b, c) {
    q.context.stencilOp(a, b, c);
  };
  q.stencilOpSeparate = function (a, b, c, d) {
    q.context.stencilOpSeparate(a, b, c, d);
  };
  q.texImage2DWEBGL = function (a, b, c, d, e, f, g, h, n, k) {
    var m = q.context;
    null != k
      ? m.texImage2D(a, b, c, d, e, f, g, h, n, k)
      : null != g
      ? m.texImage2D(a, b, c, d, e, f, g, h, n)
      : m.texImage2D(a, b, c, d, e, f);
  };
  q.texImage3DWEBGL = function (a, b, c, d, e, f, g, h, n, k, m) {
    q.context.texImage3D(a, b, c, d, e, f, g, h, n, k, m);
  };
  q.texStorage2D = function (a, b, c, d, e) {
    q.context.texStorage2D(a, b, c, d, e);
  };
  q.texStorage3D = function (a, b, c, d, e, f) {
    q.context.texStorage3D(a, b, c, d, e, f);
  };
  q.texParameterf = function (a, b, c) {
    q.context.texParameterf(a, b, c);
  };
  q.texParameteri = function (a, b, c) {
    q.context.texParameteri(a, b, c);
  };
  q.texSubImage2DWEBGL = function (a, b, c, d, e, f, g, h, n, k) {
    var m = q.context;
    null != k
      ? m.texSubImage2D(a, b, c, d, e, f, g, h, n, k)
      : null != h
      ? m.texSubImage2D(a, b, c, d, e, f, g, h, n)
      : m.texSubImage2D(a, b, c, d, e, f, g);
  };
  q.texSubImage3DWEBGL = function (a, b, c, d, e, f, g, h, n, k, m, l) {
    q.context.texSubImage3D(a, b, c, d, e, f, g, h, n, k, m, l);
  };
  q.transformFeedbackVaryings = function (a, b, c) {
    q.context.transformFeedbackVaryings(a, b, c);
  };
  q.uniform1f = function (a, b) {
    q.context.uniform1f(a, b);
  };
  q.uniform1fvWEBGL = function (a, b, c, d) {
    var e = q.context;
    null != c ? e.uniform1fv(a, b, c, d) : e.uniform1fv(a, b);
  };
  q.uniform1i = function (a, b) {
    q.context.uniform1i(a, b);
  };
  q.uniform1ivWEBGL = function (a, b, c, d) {
    var e = q.context;
    null != c ? e.uniform1iv(a, b, c, d) : e.uniform1iv(a, b);
  };
  q.uniform1ui = function (a, b) {
    q.context.uniform1ui(a, b);
  };
  q.uniform1uivWEBGL = function (a, b, c, d) {
    q.context.uniform1uiv(a, b, c, d);
  };
  q.uniform2f = function (a, b, c) {
    q.context.uniform2f(a, b, c);
  };
  q.uniform2fvWEBGL = function (a, b, c, d) {
    Nd.uniform2fv(q.context, a, b, c, d);
  };
  q.uniform2i = function (a, b, c) {
    q.context.uniform2i(a, b, c);
  };
  q.uniform2ivWEBGL = function (a, b, c, d) {
    var e = q.context;
    null != c ? e.uniform2iv(a, b, c, d) : e.uniform2iv(a, b);
  };
  q.uniform2ui = function (a, b, c) {
    q.context.uniform2ui(a, b, c);
  };
  q.uniform2uivWEBGL = function (a, b, c, d) {
    q.context.uniform2uiv(a, b, c, d);
  };
  q.uniform3f = function (a, b, c, d) {
    q.context.uniform3f(a, b, c, d);
  };
  q.uniform3fvWEBGL = function (a, b, c, d) {
    var e = q.context;
    null != c ? e.uniform3fv(a, b, c, d) : e.uniform3fv(a, b);
  };
  q.uniform3i = function (a, b, c, d) {
    q.context.uniform3i(a, b, c, d);
  };
  q.uniform3ivWEBGL = function (a, b, c, d) {
    var e = q.context;
    null != c ? e.uniform3iv(a, b, c, d) : e.uniform3iv(a, b);
  };
  q.uniform3ui = function (a, b, c, d) {
    q.context.uniform3ui(a, b, c, d);
  };
  q.uniform3uivWEBGL = function (a, b, c, d) {
    q.context.uniform3uiv(a, b, c, d);
  };
  q.uniform4f = function (a, b, c, d, e) {
    q.context.uniform4f(a, b, c, d, e);
  };
  q.uniform4fvWEBGL = function (a, b, c, d) {
    var e = q.context;
    null != c ? e.uniform4fv(a, b, c, d) : e.uniform4fv(a, b);
  };
  q.uniform4i = function (a, b, c, d, e) {
    q.context.uniform4i(a, b, c, d, e);
  };
  q.uniform4ivWEBGL = function (a, b, c, d) {
    var e = q.context;
    null != c ? e.uniform4iv(a, b, c, d) : e.uniform4iv(a, b);
  };
  q.uniform4ui = function (a, b, c, d, e) {
    q.context.uniform4ui(a, b, c, d, e);
  };
  q.uniform4uivWEBGL = function (a, b, c, d) {
    q.context.uniform4uiv(a, b, c, d);
  };
  q.uniformBlockBinding = function (a, b, c) {
    q.context.uniformBlockBinding(a, b, c);
  };
  q.uniformMatrix2fvWEBGL = function (a, b, c, d, e) {
    var f = q.context;
    null != d ? f.uniformMatrix2fv(a, b, c, d, e) : f.uniformMatrix2fv(a, b, c);
  };
  q.uniformMatrix2x3fvWEBGL = function (a, b, c, d, e) {
    q.context.uniformMatrix2x3fv(a, b, c, d, e);
  };
  q.uniformMatrix2x4fvWEBGL = function (a, b, c, d, e) {
    q.context.uniformMatrix2x4fv(a, b, c, d, e);
  };
  q.uniformMatrix3fvWEBGL = function (a, b, c, d, e) {
    var f = q.context;
    null != d ? f.uniformMatrix3fv(a, b, c, d, e) : f.uniformMatrix3fv(a, b, c);
  };
  q.uniformMatrix3x2fvWEBGL = function (a, b, c, d, e) {
    q.context.uniformMatrix3x2fv(a, b, c, d, e);
  };
  q.uniformMatrix3x4fvWEBGL = function (a, b, c, d, e) {
    q.context.uniformMatrix3x4fv(a, b, c, d, e);
  };
  q.uniformMatrix4fvWEBGL = function (a, b, c, d, e) {
    var f = q.context;
    null != d ? f.uniformMatrix4fv(a, b, c, d, e) : f.uniformMatrix4fv(a, b, c);
  };
  q.uniformMatrix4x2fvWEBGL = function (a, b, c, d, e) {
    q.context.uniformMatrix4x2fv(a, b, c, d, e);
  };
  q.uniformMatrix4x3fvWEBGL = function (a, b, c, d, e) {
    q.context.uniformMatrix4x3fv(a, b, c, d, e);
  };
  q.useProgram = function (a) {
    q.context.useProgram(a);
  };
  q.validateProgram = function (a) {
    q.context.validateProgram(a);
  };
  q.vertexAttrib1f = function (a, b) {
    q.context.vertexAttrib1f(a, b);
  };
  q.vertexAttrib1fv = function (a, b) {
    q.context.vertexAttrib1fv(a, b);
  };
  q.vertexAttrib1fvWEBGL = function (a, b) {
    q.context.vertexAttrib1fv(a, b);
  };
  q.vertexAttrib2f = function (a, b, c) {
    q.context.vertexAttrib2f(a, b, c);
  };
  q.vertexAttrib2fv = function (a, b) {
    q.context.vertexAttrib2fv(a, b);
  };
  q.vertexAttrib2fvWEBGL = function (a, b) {
    q.context.vertexAttrib2fv(a, b);
  };
  q.vertexAttrib3f = function (a, b, c, d) {
    q.context.vertexAttrib3f(a, b, c, d);
  };
  q.vertexAttrib3fv = function (a, b) {
    q.context.vertexAttrib3fv(a, b);
  };
  q.vertexAttrib3fvWEBGL = function (a, b) {
    q.context.vertexAttrib3fv(a, b);
  };
  q.vertexAttrib4f = function (a, b, c, d, e) {
    q.context.vertexAttrib4f(a, b, c, d, e);
  };
  q.vertexAttrib4fv = function (a, b) {
    q.context.vertexAttrib4fv(a, b);
  };
  q.vertexAttrib4fvWEBGL = function (a, b) {
    q.context.vertexAttrib4fv(a, b);
  };
  q.vertexAttribDivisor = function (a, b) {
    q.context.vertexAttribDivisor(a, b);
  };
  q.vertexAttribI4i = function (a, b, c, d, e) {
    q.context.vertexAttribI4i(a, b, c, d, e);
  };
  q.vertexAttribI4iv = function (a, b) {
    q.context.vertexAttribI4iv(a, b);
  };
  q.vertexAttribI4ivWEBGL = function (a, b) {
    q.context.vertexAttribI4iv(a, b);
  };
  q.vertexAttribI4ui = function (a, b, c, d, e) {
    q.context.vertexAttribI4ui(a, b, c, d, e);
  };
  q.vertexAttribI4uiv = function (a, b) {
    q.context.vertexAttribI4uiv(a, b);
  };
  q.vertexAttribI4uivWEBGL = function (a, b) {
    q.context.vertexAttribI4uiv(a, b);
  };
  q.vertexAttribIPointer = function (a, b, c, d, e) {
    q.context.vertexAttribIPointer(a, b, c, d, e);
  };
  q.vertexAttribPointer = function (a, b, c, d, e, f) {
    q.context.vertexAttribPointer(a, b, c, d, e, f);
  };
  q.viewport = function (a, b, c, d) {
    q.context.viewport(a, b, c, d);
  };
  q.waitSync = function (a, b, c) {
    q.context.waitSync(a, b, c);
  };
  q.__getObjectID = function (a) {
    return null == a ? 0 : a.id;
  };
  var Bt = {};
  p["lime.graphics.opengl._GLProgram.GLProgram_Impl_"] = Bt;
  Bt.__name__ = ["lime", "graphics", "opengl", "_GLProgram", "GLProgram_Impl_"];
  Bt.fromSources = function (a, b, c) {
    b = eq.fromSource(a, b, a.VERTEX_SHADER);
    var d = eq.fromSource(a, c, a.FRAGMENT_SHADER);
    c = a.createProgram();
    a.attachShader(c, b);
    a.attachShader(c, d);
    a.linkProgram(c);
    0 == a.getProgramParameter(c, 35714) &&
      ((a =
        "Unable to initialize the shader program\n" +
        q.context.getProgramInfoLog(c)),
      mb.error(a, {
        fileName: "GLProgram.hx",
        lineNumber: 40,
        className: "lime.graphics.opengl._GLProgram.GLProgram_Impl_",
        methodName: "fromSources",
      }));
    return c;
  };
  var eq = {};
  p["lime.graphics.opengl._GLShader.GLShader_Impl_"] = eq;
  eq.__name__ = ["lime", "graphics", "opengl", "_GLShader", "GLShader_Impl_"];
  eq.fromSource = function (a, b, c) {
    var d = a.createShader(c);
    a.shaderSource(d, b);
    a.compileShader(d);
    0 == a.getShaderParameter(d, a.COMPILE_STATUS) &&
      ((b =
        c == a.VERTEX_SHADER
          ? "Error compiling vertex shader"
          : c == a.FRAGMENT_SHADER
          ? "Error compiling fragment shader"
          : "Error compiling unknown shader type"),
      (b += "\n" + a.getShaderInfoLog(d)),
      mb.error(b, {
        fileName: "GLShader.hx",
        lineNumber: 41,
        className: "lime.graphics.opengl._GLShader.GLShader_Impl_",
        methodName: "fromSource",
      }));
    return d;
  };
  var Vs = function () {
    this.STACK_UNDERFLOW = 1284;
    this.STACK_OVERFLOW = 1283;
    this.CONTEXT_FLAG_DEBUG_BIT = 2;
    this.DEBUG_OUTPUT = 37600;
    this.DEBUG_SEVERITY_LOW = 37192;
    this.DEBUG_SEVERITY_MEDIUM = 37191;
    this.DEBUG_SEVERITY_HIGH = 37190;
    this.DEBUG_LOGGED_MESSAGES = 37189;
    this.MAX_DEBUG_LOGGED_MESSAGES = 37188;
    this.MAX_DEBUG_MESSAGE_LENGTH = 37187;
    this.MAX_LABEL_LENGTH = 33512;
    this.SAMPLER = 33510;
    this.QUERY = 33507;
    this.PROGRAM = 33506;
    this.SHADER = 33505;
    this.BUFFER = 33504;
    this.DEBUG_GROUP_STACK_DEPTH = 33389;
    this.MAX_DEBUG_GROUP_STACK_DEPTH = 33388;
    this.DEBUG_SEVERITY_NOTIFICATION = 33387;
    this.DEBUG_TYPE_POP_GROUP = 33386;
    this.DEBUG_TYPE_PUSH_GROUP = 33385;
    this.DEBUG_TYPE_MARKER = 33384;
    this.DEBUG_TYPE_OTHER = 33361;
    this.DEBUG_TYPE_PERFORMANCE = 33360;
    this.DEBUG_TYPE_PORTABILITY = 33359;
    this.DEBUG_TYPE_UNDEFINED_BEHAVIOR = 33358;
    this.DEBUG_TYPE_DEPRECATED_BEHAVIOR = 33357;
    this.DEBUG_TYPE_ERROR = 33356;
    this.DEBUG_SOURCE_OTHER = 33355;
    this.DEBUG_SOURCE_APPLICATION = 33354;
    this.DEBUG_SOURCE_THIRD_PARTY = 33353;
    this.DEBUG_SOURCE_SHADER_COMPILER = 33352;
    this.DEBUG_SOURCE_WINDOW_SYSTEM = 33351;
    this.DEBUG_SOURCE_API = 33350;
    this.DEBUG_CALLBACK_USER_PARAM = 33349;
    this.DEBUG_CALLBACK_FUNCTION = 33348;
    this.DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 33347;
    this.DEBUG_OUTPUT_SYNCHRONOUS = 33346;
  };
  p["lime.graphics.opengl.ext.KHR_debug"] = Vs;
  Vs.__name__ = ["lime", "graphics", "opengl", "ext", "KHR_debug"];
  Vs.prototype = {
    DEBUG_OUTPUT_SYNCHRONOUS: null,
    DEBUG_NEXT_LOGGED_MESSAGE_LENGTH: null,
    DEBUG_CALLBACK_FUNCTION: null,
    DEBUG_CALLBACK_USER_PARAM: null,
    DEBUG_SOURCE_API: null,
    DEBUG_SOURCE_WINDOW_SYSTEM: null,
    DEBUG_SOURCE_SHADER_COMPILER: null,
    DEBUG_SOURCE_THIRD_PARTY: null,
    DEBUG_SOURCE_APPLICATION: null,
    DEBUG_SOURCE_OTHER: null,
    DEBUG_TYPE_ERROR: null,
    DEBUG_TYPE_DEPRECATED_BEHAVIOR: null,
    DEBUG_TYPE_UNDEFINED_BEHAVIOR: null,
    DEBUG_TYPE_PORTABILITY: null,
    DEBUG_TYPE_PERFORMANCE: null,
    DEBUG_TYPE_OTHER: null,
    DEBUG_TYPE_MARKER: null,
    DEBUG_TYPE_PUSH_GROUP: null,
    DEBUG_TYPE_POP_GROUP: null,
    DEBUG_SEVERITY_NOTIFICATION: null,
    MAX_DEBUG_GROUP_STACK_DEPTH: null,
    DEBUG_GROUP_STACK_DEPTH: null,
    BUFFER: null,
    SHADER: null,
    PROGRAM: null,
    QUERY: null,
    SAMPLER: null,
    MAX_LABEL_LENGTH: null,
    MAX_DEBUG_MESSAGE_LENGTH: null,
    MAX_DEBUG_LOGGED_MESSAGES: null,
    DEBUG_LOGGED_MESSAGES: null,
    DEBUG_SEVERITY_HIGH: null,
    DEBUG_SEVERITY_MEDIUM: null,
    DEBUG_SEVERITY_LOW: null,
    DEBUG_OUTPUT: null,
    CONTEXT_FLAG_DEBUG_BIT: null,
    STACK_OVERFLOW: null,
    STACK_UNDERFLOW: null,
    __class__: Vs,
  };
  var Dd = {};
  p["lime.math._ARGB.ARGB_Impl_"] = Dd;
  Dd.__name__ = ["lime", "math", "_ARGB", "ARGB_Impl_"];
  Dd.__properties__ = {
    set_r: "set_r",
    get_r: "get_r",
    set_g: "set_g",
    get_g: "get_g",
    set_b: "set_b",
    get_b: "get_b",
    set_a: "set_a",
    get_a: "get_a",
  };
  Dd._new = function (a) {
    null == a && (a = 0);
    return a;
  };
  Dd.create = function (a, b, c, d) {
    return ((a & 255) << 24) | ((b & 255) << 16) | ((c & 255) << 8) | (d & 255);
  };
  Dd.multiplyAlpha = function (a) {
    0 != ((a >>> 24) & 255) &&
      255 != ((a >>> 24) & 255) &&
      (Dd.a16 = C.__alpha16[(a >>> 24) & 255]);
  };
  Dd.readUInt8 = function (a, b, c, d, e) {
    null == e && (e = !1);
    null == d && (d = 0);
    switch (d) {
      case 0:
        a =
          ((b[c + 1] & 255) << 24) |
          ((b[c + 2] & 255) << 16) |
          ((b[c + 3] & 255) << 8) |
          (b[c] & 255);
        break;
      case 1:
        a =
          ((b[c + 2] & 255) << 24) |
          ((b[c + 3] & 255) << 16) |
          ((b[c] & 255) << 8) |
          (b[c + 1] & 255);
        break;
      case 2:
        a =
          ((b[c + 1] & 255) << 24) |
          ((b[c] & 255) << 16) |
          ((b[c + 3] & 255) << 8) |
          (b[c + 2] & 255);
    }
    e &&
      0 != ((a >>> 24) & 255) &&
      255 != ((a >>> 24) & 255) &&
      (Dd.unmult = 255 / ((a >>> 24) & 255));
  };
  Dd.set = function (a, b, c, d, e) {};
  Dd.unmultiplyAlpha = function (a) {
    0 != ((a >>> 24) & 255) &&
      255 != ((a >>> 24) & 255) &&
      (Dd.unmult = 255 / ((a >>> 24) & 255));
  };
  Dd.writeUInt8 = function (a, b, c, d, e) {
    null == e && (e = !1);
    null == d && (d = 0);
    e &&
      (0 == ((a >>> 24) & 255)
        ? (a = 0)
        : 255 != ((a >>> 24) & 255) &&
          ((Dd.a16 = C.__alpha16[(a >>> 24) & 255]),
          (a =
            (((a >>> 24) & 255) << 24) |
            ((((((a >>> 16) & 255) * Dd.a16) >> 16) & 255) << 16) |
            ((((((a >>> 8) & 255) * Dd.a16) >> 16) & 255) << 8) |
            ((((a & 255) * Dd.a16) >> 16) & 255))));
    switch (d) {
      case 0:
        b[c] = (a >>> 16) & 255;
        b[c + 1] = (a >>> 8) & 255;
        b[c + 2] = a & 255;
        b[c + 3] = (a >>> 24) & 255;
        break;
      case 1:
        b[c] = (a >>> 24) & 255;
        b[c + 1] = (a >>> 16) & 255;
        b[c + 2] = (a >>> 8) & 255;
        b[c + 3] = a & 255;
        break;
      case 2:
        (b[c] = a & 255),
          (b[c + 1] = (a >>> 8) & 255),
          (b[c + 2] = (a >>> 16) & 255),
          (b[c + 3] = (a >>> 24) & 255);
    }
  };
  Dd.__fromBGRA = function (a) {
    return (
      ((a & 255) << 24) |
      (((a >>> 8) & 255) << 16) |
      (((a >>> 16) & 255) << 8) |
      ((a >>> 24) & 255)
    );
  };
  Dd.__fromRGBA = function (a) {
    return (
      ((a & 255) << 24) |
      (((a >>> 24) & 255) << 16) |
      (((a >>> 16) & 255) << 8) |
      ((a >>> 8) & 255)
    );
  };
  Dd.get_a = function (a) {
    return (a >>> 24) & 255;
  };
  Dd.set_a = function (a, b) {
    return b;
  };
  Dd.get_b = function (a) {
    return a & 255;
  };
  Dd.set_b = function (a, b) {
    return b;
  };
  Dd.get_g = function (a) {
    return (a >>> 8) & 255;
  };
  Dd.set_g = function (a, b) {
    return b;
  };
  Dd.get_r = function (a) {
    return (a >>> 16) & 255;
  };
  Dd.set_r = function (a, b) {
    return b;
  };
  var Ed = {};
  p["lime.math._BGRA.BGRA_Impl_"] = Ed;
  Ed.__name__ = ["lime", "math", "_BGRA", "BGRA_Impl_"];
  Ed.__properties__ = {
    set_r: "set_r",
    get_r: "get_r",
    set_g: "set_g",
    get_g: "get_g",
    set_b: "set_b",
    get_b: "get_b",
    set_a: "set_a",
    get_a: "get_a",
  };
  Ed._new = function (a) {
    null == a && (a = 0);
    return a;
  };
  Ed.create = function (a, b, c, d) {
    return ((a & 255) << 24) | ((b & 255) << 16) | ((c & 255) << 8) | (d & 255);
  };
  Ed.multiplyAlpha = function (a) {
    0 != (a & 255) && 255 != (a & 255) && (Ed.a16 = C.__alpha16[a & 255]);
  };
  Ed.readUInt8 = function (a, b, c, d, e) {
    null == e && (e = !1);
    null == d && (d = 0);
    switch (d) {
      case 0:
        a =
          ((b[c + 2] & 255) << 24) |
          ((b[c + 1] & 255) << 16) |
          ((b[c] & 255) << 8) |
          (b[c + 3] & 255);
        break;
      case 1:
        a =
          ((b[c + 3] & 255) << 24) |
          ((b[c + 2] & 255) << 16) |
          ((b[c + 1] & 255) << 8) |
          (b[c] & 255);
        break;
      case 2:
        a =
          ((b[c] & 255) << 24) |
          ((b[c + 1] & 255) << 16) |
          ((b[c + 2] & 255) << 8) |
          (b[c + 3] & 255);
    }
    e && 0 != (a & 255) && 255 != (a & 255) && (Ed.unmult = 255 / (a & 255));
  };
  Ed.set = function (a, b, c, d, e) {};
  Ed.unmultiplyAlpha = function (a) {
    0 != (a & 255) && 255 != (a & 255) && (Ed.unmult = 255 / (a & 255));
  };
  Ed.writeUInt8 = function (a, b, c, d, e) {
    null == e && (e = !1);
    null == d && (d = 0);
    e &&
      (0 == (a & 255)
        ? (a = 0)
        : 255 != (a & 255) &&
          ((Ed.a16 = C.__alpha16[a & 255]),
          (a =
            ((((((a >>> 24) & 255) * Ed.a16) >> 16) & 255) << 24) |
            ((((((a >>> 16) & 255) * Ed.a16) >> 16) & 255) << 16) |
            ((((((a >>> 8) & 255) * Ed.a16) >> 16) & 255) << 8) |
            (a & 255))));
    switch (d) {
      case 0:
        b[c] = (a >>> 8) & 255;
        b[c + 1] = (a >>> 16) & 255;
        b[c + 2] = (a >>> 24) & 255;
        b[c + 3] = a & 255;
        break;
      case 1:
        b[c] = a & 255;
        b[c + 1] = (a >>> 8) & 255;
        b[c + 2] = (a >>> 16) & 255;
        b[c + 3] = (a >>> 24) & 255;
        break;
      case 2:
        (b[c] = (a >>> 24) & 255),
          (b[c + 1] = (a >>> 16) & 255),
          (b[c + 2] = (a >>> 8) & 255),
          (b[c + 3] = a & 255);
    }
  };
  Ed.__fromARGB = function (a) {
    return (
      ((a & 255) << 24) |
      (((a >>> 8) & 255) << 16) |
      (((a >>> 16) & 255) << 8) |
      ((a >>> 24) & 255)
    );
  };
  Ed.__fromRGBA = function (a) {
    return (
      (((a >>> 8) & 255) << 24) |
      (((a >>> 16) & 255) << 16) |
      (((a >>> 24) & 255) << 8) |
      (a & 255)
    );
  };
  Ed.get_a = function (a) {
    return a & 255;
  };
  Ed.set_a = function (a, b) {
    return b;
  };
  Ed.get_b = function (a) {
    return (a >>> 24) & 255;
  };
  Ed.set_b = function (a, b) {
    return b;
  };
  Ed.get_g = function (a) {
    return (a >>> 16) & 255;
  };
  Ed.set_g = function (a, b) {
    return b;
  };
  Ed.get_r = function (a) {
    return (a >>> 8) & 255;
  };
  Ed.set_r = function (a, b) {
    return b;
  };
  var qb = {};
  p["lime.math._ColorMatrix.ColorMatrix_Impl_"] = qb;
  qb.__name__ = ["lime", "math", "_ColorMatrix", "ColorMatrix_Impl_"];
  qb.__properties__ = {
    set_redOffset: "set_redOffset",
    get_redOffset: "get_redOffset",
    set_redMultiplier: "set_redMultiplier",
    get_redMultiplier: "get_redMultiplier",
    set_greenOffset: "set_greenOffset",
    get_greenOffset: "get_greenOffset",
    set_greenMultiplier: "set_greenMultiplier",
    get_greenMultiplier: "get_greenMultiplier",
    set_color: "set_color",
    get_color: "get_color",
    set_blueOffset: "set_blueOffset",
    get_blueOffset: "get_blueOffset",
    set_blueMultiplier: "set_blueMultiplier",
    get_blueMultiplier: "get_blueMultiplier",
    set_alphaOffset: "set_alphaOffset",
    get_alphaOffset: "get_alphaOffset",
    set_alphaMultiplier: "set_alphaMultiplier",
    get_alphaMultiplier: "get_alphaMultiplier",
  };
  qb._new = function (a) {
    if (null == a || 20 != a.length)
      (a = qb.__identity), (a = null != a ? new vc(a) : null);
    return a;
  };
  qb.clone = function (a) {
    a = null != a ? new vc(a) : null;
    return qb._new(a);
  };
  qb.concat = function (a, b) {
    a[0] += b[0];
    a[6] += b[6];
    a[12] += b[12];
    a[18] += b[18];
  };
  qb.copyFrom = function (a, b) {
    a.set(b);
  };
  qb.identity = function (a) {
    a[0] = 1;
    a[1] = 0;
    a[2] = 0;
    a[3] = 0;
    a[4] = 0;
    a[5] = 0;
    a[6] = 1;
    a[7] = 0;
    a[8] = 0;
    a[9] = 0;
    a[10] = 0;
    a[11] = 0;
    a[12] = 1;
    a[13] = 0;
    a[14] = 0;
    a[15] = 0;
    a[16] = 0;
    a[17] = 0;
    a[18] = 1;
    a[19] = 0;
  };
  qb.getAlphaTable = function (a) {
    if (null == qb.__alphaTable) {
      var b = new lb(256);
      qb.__alphaTable = b;
    }
    qb.__alphaTable[0] = 0;
    for (var c = 1; 256 > c; ) {
      var d = c++;
      b = Math.floor(d * a[18] + 255 * a[19]);
      255 < b && (b = 255);
      0 > b && (b = 0);
      qb.__alphaTable[d] = b;
    }
    return qb.__alphaTable;
  };
  qb.getBlueTable = function (a) {
    if (null == qb.__blueTable) {
      var b = new lb(256);
      qb.__blueTable = b;
    }
    for (var c = 0; 256 > c; ) {
      var d = c++;
      b = Math.floor(d * a[12] + 255 * a[14]);
      255 < b && (b = 255);
      0 > b && (b = 0);
      qb.__blueTable[d] = b;
    }
    return qb.__blueTable;
  };
  qb.getGreenTable = function (a) {
    if (null == qb.__greenTable) {
      var b = new lb(256);
      qb.__greenTable = b;
    }
    for (var c = 0; 256 > c; ) {
      var d = c++;
      b = Math.floor(d * a[6] + 255 * a[9]);
      255 < b && (b = 255);
      0 > b && (b = 0);
      qb.__greenTable[d] = b;
    }
    return qb.__greenTable;
  };
  qb.getRedTable = function (a) {
    if (null == qb.__redTable) {
      var b = new lb(256);
      qb.__redTable = b;
    }
    for (var c = 0; 256 > c; ) {
      var d = c++;
      b = Math.floor(d * a[0] + 255 * a[4]);
      255 < b && (b = 255);
      0 > b && (b = 0);
      qb.__redTable[d] = b;
    }
    return qb.__redTable;
  };
  qb.__toFlashColorTransform = function (a) {
    return null;
  };
  qb.get_alphaMultiplier = function (a) {
    return a[18];
  };
  qb.set_alphaMultiplier = function (a, b) {
    return (a[18] = b);
  };
  qb.get_alphaOffset = function (a) {
    return 255 * a[19];
  };
  qb.set_alphaOffset = function (a, b) {
    return (a[19] = b / 255);
  };
  qb.get_blueMultiplier = function (a) {
    return a[12];
  };
  qb.set_blueMultiplier = function (a, b) {
    return (a[12] = b);
  };
  qb.get_blueOffset = function (a) {
    return 255 * a[14];
  };
  qb.set_blueOffset = function (a, b) {
    return (a[14] = b / 255);
  };
  qb.get_color = function (a) {
    return (
      (((255 * a[4]) | 0) << 16) | (((255 * a[9]) | 0) << 8) | (255 * a[14]) | 0
    );
  };
  qb.set_color = function (a, b) {
    a[4] = ((b >> 16) & 255) / 255;
    a[9] = ((b >> 8) & 255) / 255;
    a[14] = (b & 255) / 255;
    a[0] = 0;
    a[6] = 0;
    a[12] = 0;
    return qb.get_color(a);
  };
  qb.get_greenMultiplier = function (a) {
    return a[6];
  };
  qb.set_greenMultiplier = function (a, b) {
    return (a[6] = b);
  };
  qb.get_greenOffset = function (a) {
    return 255 * a[9];
  };
  qb.set_greenOffset = function (a, b) {
    return (a[9] = b / 255);
  };
  qb.get_redMultiplier = function (a) {
    return a[0];
  };
  qb.set_redMultiplier = function (a, b) {
    return (a[0] = b);
  };
  qb.get_redOffset = function (a) {
    return 255 * a[4];
  };
  qb.set_redOffset = function (a, b) {
    return (a[4] = b / 255);
  };
  qb.get = function (a, b) {
    return a[b];
  };
  qb.set = function (a, b, c) {
    return (a[b] = c);
  };
  var fa = {};
  p["lime.math._Matrix4.Matrix4_Impl_"] = fa;
  fa.__name__ = ["lime", "math", "_Matrix4", "Matrix4_Impl_"];
  fa.__properties__ = {
    set_position: "set_position",
    get_position: "get_position",
    get_determinant: "get_determinant",
  };
  fa._new = function (a) {
    if (null == a || 16 != a.length)
      (a = fa.__identity), (a = null != a ? new vc(a) : null);
    return a;
  };
  fa.append = function (a, b) {
    var c = a[0],
      d = a[4],
      e = a[8],
      f = a[12],
      g = a[1],
      h = a[5],
      n = a[9],
      k = a[13],
      m = a[2],
      l = a[6],
      p = a[10],
      q = a[14],
      r = a[3],
      t = a[7],
      u = a[11],
      v = a[15],
      w = fa.get(b, 0),
      x = fa.get(b, 4),
      y = fa.get(b, 8),
      z = fa.get(b, 12),
      B = fa.get(b, 1),
      A = fa.get(b, 5),
      C = fa.get(b, 9),
      D = fa.get(b, 13),
      E = fa.get(b, 2),
      F = fa.get(b, 6),
      K = fa.get(b, 10),
      H = fa.get(b, 14),
      I = fa.get(b, 3),
      J = fa.get(b, 7),
      M = fa.get(b, 11);
    b = fa.get(b, 15);
    a[0] = c * w + g * x + m * y + r * z;
    a[1] = c * B + g * A + m * C + r * D;
    a[2] = c * E + g * F + m * K + r * H;
    a[3] = c * I + g * J + m * M + r * b;
    a[4] = d * w + h * x + l * y + t * z;
    a[5] = d * B + h * A + l * C + t * D;
    a[6] = d * E + h * F + l * K + t * H;
    a[7] = d * I + h * J + l * M + t * b;
    a[8] = e * w + n * x + p * y + u * z;
    a[9] = e * B + n * A + p * C + u * D;
    a[10] = e * E + n * F + p * K + u * H;
    a[11] = e * I + n * J + p * M + u * b;
    a[12] = f * w + k * x + q * y + v * z;
    a[13] = f * B + k * A + q * C + v * D;
    a[14] = f * E + k * F + q * K + v * H;
    a[15] = f * I + k * J + q * M + v * b;
  };
  fa.appendRotation = function (a, b, c, d) {
    b = fa.__getAxisRotation(a, c.x, c.y, c.z, b);
    null != d && fa.appendTranslation(b, d.x, d.y, d.z);
    fa.append(a, b);
  };
  fa.appendScale = function (a, b, c, d) {
    b = [b, 0, 0, 0, 0, c, 0, 0, 0, 0, d, 0, 0, 0, 0, 1];
    b = null != b ? new vc(b) : null;
    fa.append(a, fa._new(b));
  };
  fa.appendTranslation = function (a, b, c, d) {
    a[12] += b;
    a[13] += c;
    a[14] += d;
  };
  fa.clone = function (a) {
    a = null != a ? new vc(a) : null;
    return fa._new(a);
  };
  fa.copyColumnFrom = function (a, b, c) {
    switch (b) {
      case 0:
        a[0] = c.x;
        a[1] = c.y;
        a[2] = c.z;
        a[3] = c.w;
        break;
      case 1:
        a[4] = c.x;
        a[5] = c.y;
        a[6] = c.z;
        a[7] = c.w;
        break;
      case 2:
        a[8] = c.x;
        a[9] = c.y;
        a[10] = c.z;
        a[11] = c.w;
        break;
      case 3:
        a[12] = c.x;
        a[13] = c.y;
        a[14] = c.z;
        a[15] = c.w;
        break;
      default:
        mb.error("Column " + b + " out of bounds [0, ..., 3]", {
          fileName: "Matrix4.hx",
          lineNumber: 185,
          className: "lime.math._Matrix4.Matrix4_Impl_",
          methodName: "copyColumnFrom",
        });
    }
  };
  fa.copyColumnTo = function (a, b, c) {
    switch (b) {
      case 0:
        c.x = a[0];
        c.y = a[1];
        c.z = a[2];
        c.w = a[3];
        break;
      case 1:
        c.x = a[4];
        c.y = a[5];
        c.z = a[6];
        c.w = a[7];
        break;
      case 2:
        c.x = a[8];
        c.y = a[9];
        c.z = a[10];
        c.w = a[11];
        break;
      case 3:
        c.x = a[12];
        c.y = a[13];
        c.z = a[14];
        c.w = a[15];
        break;
      default:
        mb.error("Column " + b + " out of bounds [0, ..., 3]", {
          fileName: "Matrix4.hx",
          lineNumber: 231,
          className: "lime.math._Matrix4.Matrix4_Impl_",
          methodName: "copyColumnTo",
        });
    }
  };
  fa.copyFrom = function (a, b) {
    a.set(b);
  };
  fa.copyRowFrom = function (a, b, c) {
    switch (b) {
      case 0:
        a[0] = c.x;
        a[4] = c.y;
        a[8] = c.z;
        a[12] = c.w;
        break;
      case 1:
        a[1] = c.x;
        a[5] = c.y;
        a[9] = c.z;
        a[13] = c.w;
        break;
      case 2:
        a[2] = c.x;
        a[6] = c.y;
        a[10] = c.z;
        a[14] = c.w;
        break;
      case 3:
        a[3] = c.x;
        a[7] = c.y;
        a[11] = c.z;
        a[15] = c.w;
        break;
      default:
        mb.error("Row " + b + " out of bounds [0, ..., 3]", {
          fileName: "Matrix4.hx",
          lineNumber: 288,
          className: "lime.math._Matrix4.Matrix4_Impl_",
          methodName: "copyRowFrom",
        });
    }
  };
  fa.copyRowTo = function (a, b, c) {
    switch (b) {
      case 0:
        c.x = a[0];
        c.y = a[4];
        c.z = a[8];
        c.w = a[12];
        break;
      case 1:
        c.x = a[1];
        c.y = a[5];
        c.z = a[9];
        c.w = a[13];
        break;
      case 2:
        c.x = a[2];
        c.y = a[6];
        c.z = a[10];
        c.w = a[14];
        break;
      case 3:
        c.x = a[3];
        c.y = a[7];
        c.z = a[11];
        c.w = a[15];
        break;
      default:
        mb.error("Row " + b + " out of bounds [0, ..., 3]", {
          fileName: "Matrix4.hx",
          lineNumber: 334,
          className: "lime.math._Matrix4.Matrix4_Impl_",
          methodName: "copyRowTo",
        });
    }
  };
  fa.create2D = function (a, b, c, d, e, f, g) {
    null == g && (g = 0);
    null == f && (f = 0);
    a[0] = b;
    a[1] = c;
    a[2] = 0;
    a[3] = 0;
    a[4] = d;
    a[5] = e;
    a[6] = 0;
    a[7] = 0;
    a[8] = 0;
    a[9] = 0;
    a[10] = 1;
    a[11] = 0;
    a[12] = f;
    a[13] = g;
    a[14] = 0;
    a[15] = 1;
  };
  fa.createOrtho = function (a, b, c, d, e, f, g) {
    var h = 1 / (c - b),
      n = 1 / (e - d),
      k = 1 / (g - f);
    a[0] = 2 * h;
    a[1] = 0;
    a[2] = 0;
    a[3] = 0;
    a[4] = 0;
    a[5] = 2 * n;
    a[6] = 0;
    a[7] = 0;
    a[8] = 0;
    a[9] = 0;
    a[10] = -2 * k;
    a[11] = 0;
    a[12] = -(b + c) * h;
    a[13] = -(d + e) * n;
    a[14] = -(f + g) * k;
    a[15] = 1;
  };
  fa.deltaTransformVector = function (a, b, c) {
    null == c && (c = new qc());
    var d = b.x,
      e = b.y;
    b = b.z;
    c.x = d * a[0] + e * a[4] + b * a[8] + a[3];
    c.y = d * a[1] + e * a[5] + b * a[9] + a[7];
    c.z = d * a[2] + e * a[6] + b * a[10] + a[11];
    return c;
  };
  fa.fromMatrix3 = function (a) {
    var b = fa._new();
    fa.create2D(b, a.a, a.b, a.c, a.d, a.tx, a.ty);
    return b;
  };
  fa.identity = function (a) {
    a[0] = 1;
    a[1] = 0;
    a[2] = 0;
    a[3] = 0;
    a[4] = 0;
    a[5] = 1;
    a[6] = 0;
    a[7] = 0;
    a[8] = 0;
    a[9] = 0;
    a[10] = 1;
    a[11] = 0;
    a[12] = 0;
    a[13] = 0;
    a[14] = 0;
    a[15] = 1;
  };
  fa.interpolate = function (a, b, c, d) {
    null == d && (d = fa._new());
    for (var e = 0; 16 > e; ) {
      var f = e++;
      fa.set(d, f, fa.get(a, f) + (fa.get(b, f) - fa.get(a, f)) * c);
    }
    return d;
  };
  fa.interpolateTo = function (a, b, c) {
    for (var d = 0; 16 > d; ) {
      var e = d++;
      a[e] += (fa.get(b, e) - a[e]) * c;
    }
  };
  fa.invert = function (a) {
    var b = fa.get_determinant(a),
      c = 1e-11 < Math.abs(b);
    if (c) {
      b = 1 / b;
      var d = a[0],
        e = a[4],
        f = a[8],
        g = a[12],
        h = a[1],
        n = a[5],
        k = a[9],
        m = a[13],
        l = a[2],
        p = a[6],
        q = a[10],
        r = a[14],
        t = a[3],
        u = a[7],
        v = a[11],
        w = a[15];
      a[0] =
        b * (n * (q * w - r * v) - k * (p * w - r * u) + m * (p * v - q * u));
      a[1] =
        -b * (h * (q * w - r * v) - k * (l * w - r * t) + m * (l * v - q * t));
      a[2] =
        b * (h * (p * w - r * u) - n * (l * w - r * t) + m * (l * u - p * t));
      a[3] =
        -b * (h * (p * v - q * u) - n * (l * v - q * t) + k * (l * u - p * t));
      a[4] =
        -b * (e * (q * w - r * v) - f * (p * w - r * u) + g * (p * v - q * u));
      a[5] =
        b * (d * (q * w - r * v) - f * (l * w - r * t) + g * (l * v - q * t));
      a[6] =
        -b * (d * (p * w - r * u) - e * (l * w - r * t) + g * (l * u - p * t));
      a[7] =
        b * (d * (p * v - q * u) - e * (l * v - q * t) + f * (l * u - p * t));
      a[8] =
        b * (e * (k * w - m * v) - f * (n * w - m * u) + g * (n * v - k * u));
      a[9] =
        -b * (d * (k * w - m * v) - f * (h * w - m * t) + g * (h * v - k * t));
      a[10] =
        b * (d * (n * w - m * u) - e * (h * w - m * t) + g * (h * u - n * t));
      a[11] =
        -b * (d * (n * v - k * u) - e * (h * v - k * t) + f * (h * u - n * t));
      a[12] =
        -b * (e * (k * r - m * q) - f * (n * r - m * p) + g * (n * q - k * p));
      a[13] =
        b * (d * (k * r - m * q) - f * (h * r - m * l) + g * (h * q - k * l));
      a[14] =
        -b * (d * (n * r - m * p) - e * (h * r - m * l) + g * (h * p - n * l));
      a[15] =
        b * (d * (n * q - k * p) - e * (h * q - k * l) + f * (h * p - n * l));
    }
    return c;
  };
  fa.pointAt = function (a, b, c, d) {
    null == c && (c = new qc(0, 0, 1));
    null == d && (d = new qc(0, 1, 0));
    var e = null;
    null == e && (e = new qc());
    e.x = b.x - c.x;
    e.y = b.y - c.y;
    e.z = b.z - c.z;
    c = e;
    d = new qc(d.x, d.y, d.z, d.w);
    e = Math.sqrt(c.x * c.x + c.y * c.y + c.z * c.z);
    0 != e && ((c.x /= e), (c.y /= e), (c.z /= e));
    e = Math.sqrt(d.x * d.x + d.y * d.y + d.z * d.z);
    0 != e && ((d.x /= e), (d.y /= e), (d.z /= e));
    e = new qc(c.x, c.y, c.z, c.w);
    var f = d.x * c.x + d.y * c.y + d.z * c.z;
    e.x *= f;
    e.y *= f;
    e.z *= f;
    f = null;
    null == f && (f = new qc());
    f.x = d.x - e.x;
    f.y = d.y - e.y;
    f.z = d.z - e.z;
    d = f;
    0 < Math.sqrt(d.x * d.x + d.y * d.y + d.z * d.z)
      ? ((e = Math.sqrt(d.x * d.x + d.y * d.y + d.z * d.z)),
        0 != e && ((d.x /= e), (d.y /= e), (d.z /= e)))
      : (d = 0 != c.x ? new qc(-c.y, c.x, 0) : new qc(1, 0, 0));
    e = null;
    null == e && (e = new qc());
    f = d.z * c.x - d.x * c.z;
    var g = d.x * c.y - d.y * c.x;
    e.x = d.y * c.z - d.z * c.y;
    e.y = f;
    e.z = g;
    e.w = 1;
    f = Math.sqrt(e.x * e.x + e.y * e.y + e.z * e.z);
    0 != f && ((e.x /= f), (e.y /= f), (e.z /= f));
    a[0] = e.x;
    a[4] = e.y;
    a[8] = e.z;
    a[12] = 0;
    a[1] = d.x;
    a[5] = d.y;
    a[9] = d.z;
    a[13] = 0;
    a[2] = c.x;
    a[6] = c.y;
    a[10] = c.z;
    a[14] = 0;
    a[3] = b.x;
    a[7] = b.y;
    a[11] = b.z;
    a[15] = 1;
  };
  fa.prepend = function (a, b) {
    var c = fa.get(b, 0),
      d = fa.get(b, 4),
      e = fa.get(b, 8),
      f = fa.get(b, 12),
      g = fa.get(b, 1),
      h = fa.get(b, 5),
      n = fa.get(b, 9),
      k = fa.get(b, 13),
      m = fa.get(b, 2),
      l = fa.get(b, 6),
      p = fa.get(b, 10),
      q = fa.get(b, 14),
      r = fa.get(b, 3),
      t = fa.get(b, 7),
      u = fa.get(b, 11);
    b = fa.get(b, 15);
    var v = a[0],
      w = a[4],
      x = a[8],
      y = a[12],
      z = a[1],
      B = a[5],
      A = a[9],
      C = a[13],
      D = a[2],
      E = a[6],
      F = a[10],
      K = a[14],
      H = a[3],
      I = a[7],
      J = a[11],
      M = a[15];
    a[0] = c * v + g * w + m * x + r * y;
    a[1] = c * z + g * B + m * A + r * C;
    a[2] = c * D + g * E + m * F + r * K;
    a[3] = c * H + g * I + m * J + r * M;
    a[4] = d * v + h * w + l * x + t * y;
    a[5] = d * z + h * B + l * A + t * C;
    a[6] = d * D + h * E + l * F + t * K;
    a[7] = d * H + h * I + l * J + t * M;
    a[8] = e * v + n * w + p * x + u * y;
    a[9] = e * z + n * B + p * A + u * C;
    a[10] = e * D + n * E + p * F + u * K;
    a[11] = e * H + n * I + p * J + u * M;
    a[12] = f * v + k * w + q * x + b * y;
    a[13] = f * z + k * B + q * A + b * C;
    a[14] = f * D + k * E + q * F + b * K;
    a[15] = f * H + k * I + q * J + b * M;
  };
  fa.prependRotation = function (a, b, c, d) {
    b = fa.__getAxisRotation(a, c.x, c.y, c.z, b);
    null != d && fa.appendTranslation(b, d.x, d.y, d.z);
    fa.prepend(a, b);
  };
  fa.prependScale = function (a, b, c, d) {
    b = [b, 0, 0, 0, 0, c, 0, 0, 0, 0, d, 0, 0, 0, 0, 1];
    b = null != b ? new vc(b) : null;
    fa.prepend(a, fa._new(b));
  };
  fa.prependTranslation = function (a, b, c, d) {
    var e = fa._new();
    fa.set_position(e, new qc(b, c, d));
    fa.prepend(a, e);
  };
  fa.transformVector = function (a, b, c) {
    null == c && (c = new qc());
    var d = b.x,
      e = b.y;
    b = b.z;
    c.x = d * a[0] + e * a[4] + b * a[8] + a[12];
    c.y = d * a[1] + e * a[5] + b * a[9] + a[13];
    c.z = d * a[2] + e * a[6] + b * a[10] + a[14];
    c.w = d * a[3] + e * a[7] + b * a[11] + a[15];
    return c;
  };
  fa.transformVectors = function (a, b, c) {
    for (var d = 0, e, f, g; d + 3 <= b.length; )
      (e = b[d]),
        (f = b[d + 1]),
        (g = b[d + 2]),
        (c[d] = e * a[0] + f * a[4] + g * a[8] + a[12]),
        (c[d + 1] = e * a[1] + f * a[5] + g * a[9] + a[13]),
        (c[d + 2] = e * a[2] + f * a[6] + g * a[10] + a[14]),
        (d += 3);
  };
  fa.transpose = function (a) {
    var b = a[1];
    a[1] = a[4];
    a[4] = b;
    b = a[2];
    a[2] = a[8];
    a[8] = b;
    b = a[3];
    a[3] = a[12];
    a[12] = b;
    b = a[6];
    a[6] = a[9];
    a[9] = b;
    b = a[7];
    a[7] = a[13];
    a[13] = b;
    b = a[11];
    a[11] = a[14];
    a[14] = b;
  };
  fa.__getAxisRotation = function (a, b, c, d, e) {
    a = fa._new();
    b = new qc(b, c, d);
    e = (Math.PI / 180) * -e;
    d = Math.cos(e);
    e = Math.sin(e);
    c = 1 - d;
    fa.set(a, 0, d + b.x * b.x * c);
    fa.set(a, 5, d + b.y * b.y * c);
    fa.set(a, 10, d + b.z * b.z * c);
    d = b.x * b.y * c;
    var f = b.z * e;
    fa.set(a, 4, d + f);
    fa.set(a, 1, d - f);
    d = b.x * b.z * c;
    f = b.y * e;
    fa.set(a, 8, d - f);
    fa.set(a, 2, d + f);
    d = b.y * b.z * c;
    f = b.x * e;
    fa.set(a, 9, d + f);
    fa.set(a, 6, d - f);
    return a;
  };
  fa.__swap = function (a, b, c) {
    var d = a[b];
    a[b] = a[c];
    a[c] = d;
  };
  fa.get_determinant = function (a) {
    return (
      (a[0] * a[5] - a[4] * a[1]) * (a[10] * a[15] - a[14] * a[11]) -
      (a[0] * a[9] - a[8] * a[1]) * (a[6] * a[15] - a[14] * a[7]) +
      (a[0] * a[13] - a[12] * a[1]) * (a[6] * a[11] - a[10] * a[7]) +
      (a[4] * a[9] - a[8] * a[5]) * (a[2] * a[15] - a[14] * a[3]) -
      (a[4] * a[13] - a[12] * a[5]) * (a[2] * a[11] - a[10] * a[3]) +
      (a[8] * a[13] - a[12] * a[9]) * (a[2] * a[7] - a[6] * a[3])
    );
  };
  fa.get_position = function (a) {
    return new qc(a[12], a[13], a[14]);
  };
  fa.set_position = function (a, b) {
    a[12] = b.x;
    a[13] = b.y;
    a[14] = b.z;
    return b;
  };
  fa.get = function (a, b) {
    return a[b];
  };
  fa.set = function (a, b, c) {
    return (a[b] = c);
  };
  var C = {};
  p["lime.math._RGBA.RGBA_Impl_"] = C;
  C.__name__ = ["lime", "math", "_RGBA", "RGBA_Impl_"];
  C.__properties__ = {
    set_r: "set_r",
    get_r: "get_r",
    set_g: "set_g",
    get_g: "get_g",
    set_b: "set_b",
    get_b: "get_b",
    set_a: "set_a",
    get_a: "get_a",
  };
  C._new = function (a) {
    null == a && (a = 0);
    return a;
  };
  C.create = function (a, b, c, d) {
    return ((a & 255) << 24) | ((b & 255) << 16) | ((c & 255) << 8) | (d & 255);
  };
  C.multiplyAlpha = function (a) {
    0 != (a & 255) && 255 != (a & 255) && (C.a16 = C.__alpha16[a & 255]);
  };
  C.readUInt8 = function (a, b, c, d, e) {
    null == e && (e = !1);
    null == d && (d = 0);
    switch (d) {
      case 0:
        a =
          ((b[c] & 255) << 24) |
          ((b[c + 1] & 255) << 16) |
          ((b[c + 2] & 255) << 8) |
          (b[c + 3] & 255);
        break;
      case 1:
        a =
          ((b[c + 1] & 255) << 24) |
          ((b[c + 2] & 255) << 16) |
          ((b[c + 3] & 255) << 8) |
          (b[c] & 255);
        break;
      case 2:
        a =
          ((b[c + 2] & 255) << 24) |
          ((b[c + 1] & 255) << 16) |
          ((b[c] & 255) << 8) |
          (b[c + 3] & 255);
    }
    e && 0 != (a & 255) && 255 != (a & 255) && (C.unmult = 255 / (a & 255));
  };
  C.set = function (a, b, c, d, e) {};
  C.unmultiplyAlpha = function (a) {
    0 != (a & 255) && 255 != (a & 255) && (C.unmult = 255 / (a & 255));
  };
  C.writeUInt8 = function (a, b, c, d, e) {
    null == e && (e = !1);
    null == d && (d = 0);
    e &&
      (0 == (a & 255)
        ? 0 != a && (a = 0)
        : 255 != (a & 255) &&
          ((C.a16 = C.__alpha16[a & 255]),
          (a =
            ((((((a >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
            ((((((a >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
            ((((((a >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
            (a & 255))));
    switch (d) {
      case 0:
        b[c] = (a >>> 24) & 255;
        b[c + 1] = (a >>> 16) & 255;
        b[c + 2] = (a >>> 8) & 255;
        b[c + 3] = a & 255;
        break;
      case 1:
        b[c] = a & 255;
        b[c + 1] = (a >>> 24) & 255;
        b[c + 2] = (a >>> 16) & 255;
        b[c + 3] = (a >>> 8) & 255;
        break;
      case 2:
        (b[c] = (a >>> 8) & 255),
          (b[c + 1] = (a >>> 16) & 255),
          (b[c + 2] = (a >>> 24) & 255),
          (b[c + 3] = a & 255);
    }
  };
  C.__fromARGB = function (a) {
    return (
      (((a >>> 16) & 255) << 24) |
      (((a >>> 8) & 255) << 16) |
      ((a & 255) << 8) |
      ((a >>> 24) & 255)
    );
  };
  C.__fromBGRA = function (a) {
    return (
      (((a >>> 8) & 255) << 24) |
      (((a >>> 16) & 255) << 16) |
      (((a >>> 24) & 255) << 8) |
      (a & 255)
    );
  };
  C.get_a = function (a) {
    return a & 255;
  };
  C.set_a = function (a, b) {
    return b;
  };
  C.get_b = function (a) {
    return (a >>> 8) & 255;
  };
  C.set_b = function (a, b) {
    return b;
  };
  C.get_g = function (a) {
    return (a >>> 16) & 255;
  };
  C.set_g = function (a, b) {
    return b;
  };
  C.get_r = function (a) {
    return (a >>> 24) & 255;
  };
  C.set_r = function (a, b) {
    return b;
  };
  var Td = function (a, b, c, d) {
    null == d && (d = 0);
    null == c && (c = 0);
    null == b && (b = 0);
    null == a && (a = 0);
    this.x = a;
    this.y = b;
    this.width = c;
    this.height = d;
  };
  p["lime.math.Rectangle"] = Td;
  Td.__name__ = ["lime", "math", "Rectangle"];
  Td.prototype = {
    height: null,
    width: null,
    x: null,
    y: null,
    clone: function () {
      return new Td(this.x, this.y, this.width, this.height);
    },
    contains: function (a, b) {
      return a >= this.x && b >= this.y && a < this.get_right()
        ? b < this.get_bottom()
        : !1;
    },
    containsPoint: function (a) {
      return this.containsVector(a);
    },
    containsRect: function (a) {
      return 0 >= a.width || 0 >= a.height
        ? a.x > this.x && a.y > this.y && a.get_right() < this.get_right()
          ? a.get_bottom() < this.get_bottom()
          : !1
        : a.x >= this.x && a.y >= this.y && a.get_right() <= this.get_right()
        ? a.get_bottom() <= this.get_bottom()
        : !1;
    },
    containsVector: function (a) {
      return this.contains(a.x, a.y);
    },
    copyFrom: function (a) {
      this.x = a.x;
      this.y = a.y;
      this.width = a.width;
      this.height = a.height;
    },
    equals: function (a) {
      return null != a &&
        this.x == a.x &&
        this.y == a.y &&
        this.width == a.width
        ? this.height == a.height
        : !1;
    },
    inflate: function (a, b) {
      this.x -= a;
      this.width += 2 * a;
      this.y -= b;
      this.height += 2 * b;
    },
    inflateVector: function (a) {
      this.inflate(a.x, a.y);
    },
    intersection: function (a, b) {
      null == b && (b = new Td());
      var c = this.x < a.x ? a.x : this.x,
        d = this.get_right() > a.get_right() ? a.get_right() : this.get_right();
      if (d <= c) return b.setEmpty(), b;
      var e = this.y < a.y ? a.y : this.y;
      a =
        this.get_bottom() > a.get_bottom() ? a.get_bottom() : this.get_bottom();
      if (a <= e) return b.setEmpty(), b;
      b.x = c;
      b.y = e;
      b.width = d - c;
      b.height = a - e;
      return b;
    },
    intersects: function (a) {
      var b = this.x < a.x ? a.x : this.x;
      if (
        (this.get_right() > a.get_right() ? a.get_right() : this.get_right()) <=
        b
      )
        return !1;
      b = this.y < a.y ? a.y : this.y;
      return (
        (this.get_bottom() > a.get_bottom()
          ? a.get_bottom()
          : this.get_bottom()) > b
      );
    },
    isEmpty: function () {
      return 0 >= this.width ? !0 : 0 >= this.height;
    },
    offset: function (a, b) {
      this.x += a;
      this.y += b;
    },
    offsetVector: function (a) {
      this.x += a.x;
      this.y += a.y;
    },
    setEmpty: function () {
      this.x = this.y = this.width = this.height = 0;
    },
    setTo: function (a, b, c, d) {
      this.x = a;
      this.y = b;
      this.width = c;
      this.height = d;
    },
    union: function (a, b) {
      null == b && (b = new Td());
      if (0 == this.width || 0 == this.height) b.copyFrom(a);
      else if (0 == a.width || 0 == a.height) b.copyFrom(this);
      else {
        var c = this.x > a.x ? a.x : this.x,
          d =
            this.get_right() < a.get_right() ? a.get_right() : this.get_right(),
          e = this.y > a.y ? a.y : this.y;
        a =
          this.get_bottom() < a.get_bottom()
            ? a.get_bottom()
            : this.get_bottom();
        b.setTo(c, e, d - c, a - e);
      }
      return b;
    },
    __toFlashRectangle: function () {
      return null;
    },
    get_bottom: function () {
      return this.y + this.height;
    },
    set_bottom: function (a) {
      this.height = a - this.y;
      return a;
    },
    get_bottomRight: function () {
      return new xd(this.x + this.width, this.y + this.height);
    },
    set_bottomRight: function (a) {
      this.width = a.x - this.x;
      this.height = a.y - this.y;
      return a.clone();
    },
    get_left: function () {
      return this.x;
    },
    set_left: function (a) {
      this.width -= a - this.x;
      return (this.x = a);
    },
    get_right: function () {
      return this.x + this.width;
    },
    set_right: function (a) {
      this.width = a - this.x;
      return a;
    },
    get_size: function () {
      return new xd(this.width, this.height);
    },
    set_size: function (a) {
      this.width = a.x;
      this.height = a.y;
      return a.clone();
    },
    get_top: function () {
      return this.y;
    },
    set_top: function (a) {
      this.height -= a - this.y;
      return (this.y = a);
    },
    get_topLeft: function () {
      return new xd(this.x, this.y);
    },
    set_topLeft: function (a) {
      this.x = a.x;
      this.y = a.y;
      return a.clone();
    },
    __class__: Td,
    __properties__: {
      set_topLeft: "set_topLeft",
      get_topLeft: "get_topLeft",
      set_top: "set_top",
      get_top: "get_top",
      set_size: "set_size",
      get_size: "get_size",
      set_right: "set_right",
      get_right: "get_right",
      set_left: "set_left",
      get_left: "get_left",
      set_bottomRight: "set_bottomRight",
      get_bottomRight: "get_bottomRight",
      set_bottom: "set_bottom",
      get_bottom: "get_bottom",
    },
  };
  var xd = function (a, b) {
    null == b && (b = 0);
    null == a && (a = 0);
    this.x = a;
    this.y = b;
  };
  p["lime.math.Vector2"] = xd;
  xd.__name__ = ["lime", "math", "Vector2"];
  xd.distance = function (a, b) {
    var c = a.x - b.x;
    a = a.y - b.y;
    return Math.sqrt(c * c + a * a);
  };
  xd.interpolate = function (a, b, c, d) {
    null == d && (d = new xd());
    d.x = b.x + c * (a.x - b.x);
    d.y = b.y + c * (a.y - b.y);
    return d;
  };
  xd.polar = function (a, b, c) {
    null == c && (c = new xd());
    var d = a * Math.sin(b);
    c.x = a * Math.cos(b);
    c.y = d;
    return c;
  };
  xd.prototype = {
    x: null,
    y: null,
    add: function (a, b) {
      null == b && (b = new xd());
      b.x = a.x + this.x;
      b.y = a.y + this.y;
      return b;
    },
    clone: function () {
      return new xd(this.x, this.y);
    },
    equals: function (a) {
      return null != a && a.x == this.x ? a.y == this.y : !1;
    },
    normalize: function (a) {
      if (0 != this.x || 0 != this.y)
        (a /= Math.sqrt(this.x * this.x + this.y * this.y)),
          (this.x *= a),
          (this.y *= a);
    },
    offset: function (a, b) {
      this.x += a;
      this.y += b;
    },
    setTo: function (a, b) {
      this.x = a;
      this.y = b;
    },
    subtract: function (a, b) {
      null == b && (b = new xd());
      b.x = this.x - a.x;
      b.y = this.y - a.y;
      return b;
    },
    __toFlashPoint: function () {
      return null;
    },
    get_length: function () {
      return Math.sqrt(this.x * this.x + this.y * this.y);
    },
    get_lengthSquared: function () {
      return this.x * this.x + this.y * this.y;
    },
    __class__: xd,
    __properties__: {
      get_lengthSquared: "get_lengthSquared",
      get_length: "get_length",
    },
  };
  var qc = function (a, b, c, d) {
    null == d && (d = 0);
    null == c && (c = 0);
    null == b && (b = 0);
    null == a && (a = 0);
    this.w = d;
    this.x = a;
    this.y = b;
    this.z = c;
  };
  p["lime.math.Vector4"] = qc;
  qc.__name__ = ["lime", "math", "Vector4"];
  qc.__properties__ = {
    get_Z_AXIS: "get_Z_AXIS",
    get_Y_AXIS: "get_Y_AXIS",
    get_X_AXIS: "get_X_AXIS",
  };
  qc.angleBetween = function (a, b) {
    a = new qc(a.x, a.y, a.z, a.w);
    var c = Math.sqrt(a.x * a.x + a.y * a.y + a.z * a.z);
    0 != c && ((a.x /= c), (a.y /= c), (a.z /= c));
    b = new qc(b.x, b.y, b.z, b.w);
    c = Math.sqrt(b.x * b.x + b.y * b.y + b.z * b.z);
    0 != c && ((b.x /= c), (b.y /= c), (b.z /= c));
    return Math.acos(a.x * b.x + a.y * b.y + a.z * b.z);
  };
  qc.distance = function (a, b) {
    var c = b.x - a.x,
      d = b.y - a.y;
    a = b.z - a.z;
    return Math.sqrt(c * c + d * d + a * a);
  };
  qc.distanceSquared = function (a, b) {
    var c = b.x - a.x,
      d = b.y - a.y;
    a = b.z - a.z;
    return c * c + d * d + a * a;
  };
  qc.get_X_AXIS = function () {
    return new qc(1, 0, 0);
  };
  qc.get_Y_AXIS = function () {
    return new qc(0, 1, 0);
  };
  qc.get_Z_AXIS = function () {
    return new qc(0, 0, 1);
  };
  qc.prototype = {
    w: null,
    x: null,
    y: null,
    z: null,
    add: function (a, b) {
      null == b && (b = new qc());
      b.x = this.x + a.x;
      b.y = this.y + a.y;
      b.z = this.z + a.z;
      return b;
    },
    clone: function () {
      return new qc(this.x, this.y, this.z, this.w);
    },
    copyFrom: function (a) {
      this.x = a.x;
      this.y = a.y;
      this.z = a.z;
    },
    crossProduct: function (a, b) {
      null == b && (b = new qc());
      var c = this.z * a.x - this.x * a.z,
        d = this.x * a.y - this.y * a.x;
      b.x = this.y * a.z - this.z * a.y;
      b.y = c;
      b.z = d;
      b.w = 1;
      return b;
    },
    decrementBy: function (a) {
      this.x -= a.x;
      this.y -= a.y;
      this.z -= a.z;
    },
    dotProduct: function (a) {
      return this.x * a.x + this.y * a.y + this.z * a.z;
    },
    equals: function (a, b) {
      null == b && (b = !1);
      return this.x == a.x && this.y == a.y && this.z == a.z
        ? b
          ? this.w == a.w
          : !0
        : !1;
    },
    incrementBy: function (a) {
      this.x += a.x;
      this.y += a.y;
      this.z += a.z;
    },
    nearEquals: function (a, b, c) {
      null == c && (c = !1);
      return Math.abs(this.x - a.x) < b &&
        Math.abs(this.y - a.y) < b &&
        Math.abs(this.z - a.z) < b
        ? c
          ? Math.abs(this.w - a.w) < b
          : !0
        : !1;
    },
    negate: function () {
      this.x *= -1;
      this.y *= -1;
      this.z *= -1;
    },
    normalize: function () {
      var a = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
      0 != a && ((this.x /= a), (this.y /= a), (this.z /= a));
      return a;
    },
    project: function () {
      this.x /= this.w;
      this.y /= this.w;
      this.z /= this.w;
    },
    scaleBy: function (a) {
      this.x *= a;
      this.y *= a;
      this.z *= a;
    },
    setTo: function (a, b, c) {
      this.x = a;
      this.y = b;
      this.z = c;
    },
    subtract: function (a, b) {
      null == b && (b = new qc());
      b.x = this.x - a.x;
      b.y = this.y - a.y;
      b.z = this.z - a.z;
      return b;
    },
    toString: function () {
      return "Vector4(" + this.x + ", " + this.y + ", " + this.z + ")";
    },
    get_length: function () {
      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
    },
    get_lengthSquared: function () {
      return this.x * this.x + this.y * this.y + this.z * this.z;
    },
    __class__: qc,
    __properties__: {
      get_lengthSquared: "get_lengthSquared",
      get_length: "get_length",
    },
  };
  var Qc = function () {};
  p["lime.media.AudioBuffer"] = Qc;
  Qc.__name__ = ["lime", "media", "AudioBuffer"];
  Qc.fromBase64 = function (a) {
    if (null == a) return null;
    -1 == a.indexOf(",") &&
      (a = "data:" + Qc.__getCodec(ug.decode(a)) + ";base64," + a);
    var b = new Qc();
    b.set_src(new Howl({ src: [a], html5: !0, preload: !1 }));
    return b;
  };
  Qc.fromBytes = function (a) {
    if (null == a) return null;
    var b = new Qc();
    b.set_src(
      new Howl({
        src: ["data:" + Qc.__getCodec(a) + ";base64," + ug.encode(a)],
        html5: !0,
        preload: !1,
      })
    );
    return b;
  };
  Qc.fromFile = function (a) {
    if (null == a) return null;
    var b = new Qc();
    b.__srcHowl = new Howl({ src: [a], preload: !1 });
    return b;
  };
  Qc.fromFiles = function (a) {
    var b = new Qc();
    b.__srcHowl = new Howl({ src: a, preload: !1 });
    return b;
  };
  Qc.fromVorbisFile = function (a) {
    return null;
  };
  Qc.loadFromFile = function (a) {
    var b = new Zd(),
      c = Qc.fromFile(a);
    null != c
      ? null != c &&
        (c.__srcHowl.on("load", function () {
          b.complete(c);
        }),
        c.__srcHowl.on("loaderror", function (a, c) {
          b.error(c);
        }),
        c.__srcHowl.load())
      : b.error(null);
    return b.future;
  };
  Qc.loadFromFiles = function (a) {
    var b = new Zd(),
      c = Qc.fromFiles(a);
    null != c
      ? (c.__srcHowl.on("load", function () {
          b.complete(c);
        }),
        c.__srcHowl.on("loaderror", function () {
          b.error(null);
        }),
        c.__srcHowl.load())
      : b.error(null);
    return b.future;
  };
  Qc.__getCodec = function (a) {
    switch (a.getString(0, 4)) {
      case "OggS":
        return "audio/ogg";
      case "RIFF":
        if ("WAVE" == a.getString(8, 4)) return "audio/wav";
        var b = a.b[2],
          c = a.b[1];
        switch (a.b[0]) {
          case 73:
            if (68 == c && 51 == b) return "audio/mp3";
            break;
          case 255:
            switch (c) {
              case 243:
              case 250:
              case 251:
                return "audio/mp3";
            }
        }
        break;
      case "fLaC":
        return "audio/flac";
      default:
        switch (((b = a.b[2]), (c = a.b[1]), a.b[0])) {
          case 73:
            if (68 == c && 51 == b) return "audio/mp3";
            break;
          case 255:
            switch (c) {
              case 243:
              case 250:
              case 251:
                return "audio/mp3";
            }
        }
    }
    mb.error("Unsupported sound format", {
      fileName: "AudioBuffer.hx",
      lineNumber: 443,
      className: "lime.media.AudioBuffer",
      methodName: "__getCodec",
    });
    return null;
  };
  Qc.prototype = {
    bitsPerSample: null,
    channels: null,
    data: null,
    sampleRate: null,
    __srcAudio: null,
    __srcBuffer: null,
    __srcCustom: null,
    __srcHowl: null,
    __srcSound: null,
    __srcVorbisFile: null,
    dispose: function () {
      this.__srcHowl.unload();
    },
    get_src: function () {
      return this.__srcHowl;
    },
    set_src: function (a) {
      return (this.__srcHowl = a);
    },
    __class__: Qc,
    __properties__: { set_src: "set_src", get_src: "get_src" },
  };
  var gq = function (a) {
    if ("custom" != a) {
      if (null == a || "web" == a)
        try {
          (window.AudioContext =
            window.AudioContext || window.webkitAudioContext),
            (this.web = new window.AudioContext()),
            (this.type = "web");
        } catch (b) {
          X.lastException = b;
        }
      null == this.web &&
        "web" != a &&
        ((this.html5 = new fq()), (this.type = "html5"));
    } else this.type = "custom";
  };
  p["lime.media.AudioContext"] = gq;
  gq.__name__ = ["lime", "media", "AudioContext"];
  gq.prototype = {
    custom: null,
    flash: null,
    html5: null,
    openal: null,
    type: null,
    web: null,
    __class__: gq,
  };
  var tc = function () {};
  p["lime.media.AudioManager"] = tc;
  tc.__name__ = ["lime", "media", "AudioManager"];
  tc.init = function (a) {
    if (null == tc.context) {
      if (
        null == a &&
        ((tc.context = new gq()), (a = tc.context), "openal" == a.type)
      ) {
        var b = a.openal,
          c = b.openDevice();
        c = b.createContext(c);
        b.makeContextCurrent(c);
        b.processContext(c);
      }
      tc.context = a;
    }
  };
  tc.resume = function () {
    if (null != tc.context && "openal" == tc.context.type) {
      var a = tc.context.openal,
        b = a.getCurrentContext();
      if (null != b) {
        var c = a.getContextsDevice(b);
        a.resumeDevice(c);
        a.processContext(b);
      }
    }
  };
  tc.addAudioSource = function (a) {
    -1 == tc.audioSources.indexOf(a) && tc.audioSources.push(a);
  };
  tc.removeAudioSource = function (a) {
    0 <= tc.audioSources.indexOf(a) && tc.sourcesToRemove.push(a);
  };
  tc.update = function () {
    for (var a = 0, b = tc.audioSources; a < b.length; ) {
      var c = b[a];
      ++a;
      c.update();
    }
    for (; 0 < tc.sourcesToRemove.length; )
      (a = tc.sourcesToRemove.pop()),
        -1 != tc.audioSources.indexOf(a) && Q.remove(tc.audioSources, a);
  };
  tc.shutdown = function () {
    if (null != tc.context && "openal" == tc.context.type) {
      var a = tc.context.openal,
        b = a.getCurrentContext();
      if (null != b) {
        var c = a.getContextsDevice(b);
        a.makeContextCurrent(null);
        a.destroyContext(b);
        null != c && a.closeDevice(c);
      }
    }
    tc.context = null;
  };
  tc.suspend = function () {
    if (null != tc.context && "openal" == tc.context.type) {
      var a = tc.context.openal,
        b = a.getCurrentContext();
      null != b &&
        (a.suspendContext(b), (b = a.getContextsDevice(b)), a.pauseDevice(b));
    }
  };
  var Dk = function (a, b, c, d) {
    null == d && (d = 0);
    null == b && (b = 0);
    this.id = Dk.ID++;
    this.onComplete = new Md();
    this.buffer = a;
    this.offset = b;
    this.__backend = new Mp(this);
    null != c && 0 != c && this.set_length(c);
    this.set_loops(d);
    null != a && this.init();
  };
  p["lime.media.AudioSource"] = Dk;
  Dk.__name__ = ["lime", "media", "AudioSource"];
  Dk.prototype = {
    onComplete: null,
    id: null,
    buffer: null,
    offset: null,
    __backend: null,
    dispose: function () {
      this.__backend.dispose();
      tc.removeAudioSource(this);
    },
    init: function () {
      this.__backend.init();
      tc.addAudioSource(this);
    },
    update: function () {
      this.__backend.update();
    },
    play: function () {
      this.__backend.play();
    },
    pause: function () {
      this.__backend.pause();
    },
    stop: function () {
      this.__backend.stop();
    },
    get_currentTime: function () {
      return this.__backend.getCurrentTime();
    },
    set_currentTime: function (a) {
      return this.__backend.setCurrentTime(a);
    },
    get_gain: function () {
      return this.__backend.getGain();
    },
    set_gain: function (a) {
      return this.__backend.setGain(a);
    },
    get_length: function () {
      return this.__backend.getLength();
    },
    set_length: function (a) {
      return this.__backend.setLength(a);
    },
    get_loops: function () {
      return this.__backend.getLoops();
    },
    set_loops: function (a) {
      return this.__backend.setLoops(a);
    },
    get_position: function () {
      return this.__backend.getPosition();
    },
    set_position: function (a) {
      return this.__backend.setPosition(a);
    },
    __class__: Dk,
    __properties__: {
      set_position: "set_position",
      get_position: "get_position",
      set_loops: "set_loops",
      get_loops: "get_loops",
      set_length: "set_length",
      get_length: "get_length",
      set_gain: "set_gain",
      get_gain: "get_gain",
      set_currentTime: "set_currentTime",
      get_currentTime: "get_currentTime",
    },
  };
  var Ws = function () {};
  p["lime.media.FlashAudioContext"] = Ws;
  Ws.__name__ = ["lime", "media", "FlashAudioContext"];
  Ws.prototype = {
    createBuffer: function (a, b) {
      return null;
    },
    getBytesLoaded: function (a) {
      return 0;
    },
    getBytesTotal: function (a) {
      return 0;
    },
    getID3: function (a) {
      return null;
    },
    getIsBuffering: function (a) {
      return !1;
    },
    getIsURLInaccessible: function (a) {
      return !1;
    },
    getLength: function (a) {
      return 0;
    },
    getURL: function (a) {
      return null;
    },
    close: function (a) {},
    extract: function (a, b, c, d) {
      return 0;
    },
    load: function (a, b, c) {},
    loadCompressedDataFromByteArray: function (a, b, c) {},
    loadPCMFromByteArray: function (a, b, c, d, e, f) {},
    play: function (a, b, c, d) {
      return null;
    },
    __class__: Ws,
  };
  var fq = function () {
    this.NETWORK_NO_SOURCE = 3;
    this.NETWORK_LOADING = 2;
    this.NETWORK_IDLE = 1;
    this.HAVE_NOTHING = this.NETWORK_EMPTY = 0;
    this.HAVE_METADATA = 1;
    this.HAVE_FUTURE_DATA = 3;
    this.HAVE_ENOUGH_DATA = 4;
    this.HAVE_CURRENT_DATA = 2;
  };
  p["lime.media.HTML5AudioContext"] = fq;
  fq.__name__ = ["lime", "media", "HTML5AudioContext"];
  fq.prototype = {
    HAVE_CURRENT_DATA: null,
    HAVE_ENOUGH_DATA: null,
    HAVE_FUTURE_DATA: null,
    HAVE_METADATA: null,
    HAVE_NOTHING: null,
    NETWORK_EMPTY: null,
    NETWORK_IDLE: null,
    NETWORK_LOADING: null,
    NETWORK_NO_SOURCE: null,
    canPlayType: function (a, b) {
      return null != a.__srcAudio ? a.__srcAudio.canPlayType(b) : null;
    },
    createBuffer: function (a) {
      var b = new Qc();
      b.__srcAudio = new Audio();
      b.__srcAudio.src = a;
      return b;
    },
    getAutoplay: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.autoplay : !1;
    },
    getBuffered: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.buffered : null;
    },
    getCurrentSrc: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.currentSrc : null;
    },
    getCurrentTime: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.currentTime : 0;
    },
    getDefaultPlaybackRate: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.defaultPlaybackRate : 1;
    },
    getDuration: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.duration : 0;
    },
    getEnded: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.ended : !1;
    },
    getError: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.error : null;
    },
    getLoop: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.loop : !1;
    },
    getMuted: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.muted : !1;
    },
    getNetworkState: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.networkState : 0;
    },
    getPaused: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.paused : !1;
    },
    getPlaybackRate: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.playbackRate : 1;
    },
    getPlayed: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.played : null;
    },
    getPreload: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.preload : null;
    },
    getReadyState: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.readyState : 0;
    },
    getSeekable: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.seekable : null;
    },
    getSeeking: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.seeking : !1;
    },
    getSrc: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.src : null;
    },
    getStartTime: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.playbackRate : 0;
    },
    getVolume: function (a) {
      return null != a.__srcAudio ? a.__srcAudio.volume : 1;
    },
    load: function (a) {
      null != a.__srcAudio && a.__srcAudio.load();
    },
    pause: function (a) {
      null != a.__srcAudio && a.__srcAudio.pause();
    },
    play: function (a) {
      null != a.__srcAudio && a.__srcAudio.play();
    },
    setAutoplay: function (a, b) {
      null != a.__srcAudio && (a.__srcAudio.autoplay = b);
    },
    setCurrentTime: function (a, b) {
      null != a.__srcAudio && (a.__srcAudio.currentTime = b);
    },
    setDefaultPlaybackRate: function (a, b) {
      null != a.__srcAudio && (a.__srcAudio.defaultPlaybackRate = b);
    },
    setLoop: function (a, b) {
      null != a.__srcAudio && (a.__srcAudio.loop = b);
    },
    setMuted: function (a, b) {
      null != a.__srcAudio && (a.__srcAudio.muted = b);
    },
    setPlaybackRate: function (a, b) {
      null != a.__srcAudio && (a.__srcAudio.playbackRate = b);
    },
    setPreload: function (a, b) {
      null != a.__srcAudio && (a.__srcAudio.preload = b);
    },
    setSrc: function (a, b) {
      null != a.__srcAudio && (a.__srcAudio.src = b);
    },
    setVolume: function (a, b) {
      null != a.__srcAudio && (a.__srcAudio.volume = b);
    },
    __class__: fq,
  };
  var Xs = function () {
    this.ALL_DEVICES_SPECIFIER = 4115;
    this.DEFAULT_ALL_DEVICES_SPECIFIER = 4114;
    this.ENUMERATE_ALL_EXT = 1;
    this.DEVICE_SPECIFIER = 4101;
    this.DEFAULT_DEVICE_SPECIFIER = 4100;
    this.ALL_ATTRIBUTES = 4099;
    this.ATTRIBUTES_SIZE = 4098;
    this.INVALID_CONTEXT = 40962;
    this.INVALID_DEVICE = 40961;
    this.STEREO_SOURCES = 4113;
    this.MONO_SOURCES = 4112;
    this.SYNC = 4105;
    this.REFRESH = 4104;
    this.EXPONENT_DISTANCE_CLAMPED = 53254;
    this.EXPONENT_DISTANCE = 53253;
    this.LINEAR_DISTANCE_CLAMPED = 53252;
    this.LINEAR_DISTANCE = 53251;
    this.INVERSE_DISTANCE_CLAMPED = 53250;
    this.INVERSE_DISTANCE = 53249;
    this.DISTANCE_MODEL = 53248;
    this.DOPPLER_VELOCITY = 49153;
    this.SPEED_OF_SOUND = 49155;
    this.DOPPLER_FACTOR = 49152;
    this.EXTENSIONS = 45060;
    this.RENDERER = 45059;
    this.VERSION = 45058;
    this.VENDOR = 45057;
    this.OUT_OF_MEMORY = 40965;
    this.INVALID_OPERATION = 40964;
    this.INVALID_VALUE = 40963;
    this.INVALID_ENUM = 40962;
    this.INVALID_NAME = 40961;
    this.NO_ERROR = 0;
    this.SIZE = 8196;
    this.CHANNELS = 8195;
    this.BITS = 8194;
    this.FREQUENCY = 8193;
    this.FORMAT_STEREO16 = 4355;
    this.FORMAT_STEREO8 = 4354;
    this.FORMAT_MONO16 = 4353;
    this.FORMAT_MONO8 = 4352;
    this.UNDETERMINED = 4144;
    this.STREAMING = 4137;
    this.STATIC = 4136;
    this.SOURCE_TYPE = 4135;
    this.BYTE_OFFSET = 4134;
    this.SAMPLE_OFFSET = 4133;
    this.SEC_OFFSET = 4132;
    this.MAX_DISTANCE = 4131;
    this.CONE_OUTER_GAIN = 4130;
    this.ROLLOFF_FACTOR = 4129;
    this.REFERENCE_DISTANCE = 4128;
    this.BUFFERS_PROCESSED = 4118;
    this.BUFFERS_QUEUED = 4117;
    this.STOPPED = 4116;
    this.PAUSED = 4115;
    this.PLAYING = 4114;
    this.INITIAL = 4113;
    this.SOURCE_STATE = 4112;
    this.ORIENTATION = 4111;
    this.MAX_GAIN = 4110;
    this.MIN_GAIN = 4109;
    this.GAIN = 4106;
    this.BUFFER = 4105;
    this.LOOPING = 4103;
    this.VELOCITY = 4102;
    this.DIRECTION = 4101;
    this.POSITION = 4100;
    this.PITCH = 4099;
    this.CONE_OUTER_ANGLE = 4098;
    this.CONE_INNER_ANGLE = 4097;
    this.SOURCE_RELATIVE = 514;
    this.TRUE = 1;
    this.NONE = this.FALSE = 0;
  };
  p["lime.media.OpenALAudioContext"] = Xs;
  Xs.__name__ = ["lime", "media", "OpenALAudioContext"];
  Xs.prototype = {
    NONE: null,
    FALSE: null,
    TRUE: null,
    SOURCE_RELATIVE: null,
    CONE_INNER_ANGLE: null,
    CONE_OUTER_ANGLE: null,
    PITCH: null,
    POSITION: null,
    DIRECTION: null,
    VELOCITY: null,
    LOOPING: null,
    BUFFER: null,
    GAIN: null,
    MIN_GAIN: null,
    MAX_GAIN: null,
    ORIENTATION: null,
    SOURCE_STATE: null,
    INITIAL: null,
    PLAYING: null,
    PAUSED: null,
    STOPPED: null,
    BUFFERS_QUEUED: null,
    BUFFERS_PROCESSED: null,
    REFERENCE_DISTANCE: null,
    ROLLOFF_FACTOR: null,
    CONE_OUTER_GAIN: null,
    MAX_DISTANCE: null,
    SEC_OFFSET: null,
    SAMPLE_OFFSET: null,
    BYTE_OFFSET: null,
    SOURCE_TYPE: null,
    STATIC: null,
    STREAMING: null,
    UNDETERMINED: null,
    FORMAT_MONO8: null,
    FORMAT_MONO16: null,
    FORMAT_STEREO8: null,
    FORMAT_STEREO16: null,
    FREQUENCY: null,
    BITS: null,
    CHANNELS: null,
    SIZE: null,
    NO_ERROR: null,
    INVALID_NAME: null,
    INVALID_ENUM: null,
    INVALID_VALUE: null,
    INVALID_OPERATION: null,
    OUT_OF_MEMORY: null,
    VENDOR: null,
    VERSION: null,
    RENDERER: null,
    EXTENSIONS: null,
    DOPPLER_FACTOR: null,
    SPEED_OF_SOUND: null,
    DOPPLER_VELOCITY: null,
    DISTANCE_MODEL: null,
    INVERSE_DISTANCE: null,
    INVERSE_DISTANCE_CLAMPED: null,
    LINEAR_DISTANCE: null,
    LINEAR_DISTANCE_CLAMPED: null,
    EXPONENT_DISTANCE: null,
    EXPONENT_DISTANCE_CLAMPED: null,
    REFRESH: null,
    SYNC: null,
    MONO_SOURCES: null,
    STEREO_SOURCES: null,
    INVALID_DEVICE: null,
    INVALID_CONTEXT: null,
    ATTRIBUTES_SIZE: null,
    ALL_ATTRIBUTES: null,
    DEFAULT_DEVICE_SPECIFIER: null,
    DEVICE_SPECIFIER: null,
    ENUMERATE_ALL_EXT: null,
    DEFAULT_ALL_DEVICES_SPECIFIER: null,
    ALL_DEVICES_SPECIFIER: null,
    bufferData: function (a, b, c, d, e) {
      A.bufferData(a, b, c, d, e);
    },
    buffer3f: function (a, b, c, d, e) {
      A.buffer3f(a, b, c, d, e);
    },
    buffer3i: function (a, b, c, d, e) {
      A.buffer3i(a, b, c, d, e);
    },
    bufferf: function (a, b, c) {
      A.bufferf(a, b, c);
    },
    bufferfv: function (a, b, c) {
      A.bufferfv(a, b, c);
    },
    bufferi: function (a, b, c) {
      A.bufferi(a, b, c);
    },
    bufferiv: function (a, b, c) {
      A.bufferiv(a, b, c);
    },
    closeDevice: function (a) {
      return Cb.closeDevice(a);
    },
    createContext: function (a, b) {
      return Cb.createContext(a, b);
    },
    createBuffer: function () {
      return A.createBuffer();
    },
    createSource: function () {
      return A.createSource();
    },
    deleteBuffer: function (a) {
      A.deleteBuffer(a);
    },
    deleteBuffers: function (a) {
      A.deleteBuffers(a);
    },
    deleteSource: function (a) {
      A.deleteSource(a);
    },
    deleteSources: function (a) {
      A.deleteSources(a);
    },
    destroyContext: function (a) {
      null != a && Cb.destroyContext(a);
    },
    disable: function (a) {
      A.disable(a);
    },
    distanceModel: function (a) {
      A.distanceModel(a);
    },
    dopplerFactor: function (a) {
      A.dopplerFactor(a);
    },
    dopplerVelocity: function (a) {
      A.dopplerVelocity(a);
    },
    enable: function (a) {
      A.enable(a);
    },
    genSource: function () {
      return this.createSource();
    },
    genSources: function (a) {
      return A.genSources(a);
    },
    genBuffer: function () {
      return this.createBuffer();
    },
    genBuffers: function (a) {
      return A.genBuffers(a);
    },
    getBoolean: function (a) {
      return A.getBoolean(a);
    },
    getBooleanv: function (a, b) {
      null == b && (b = 1);
      return A.getBooleanv(a, b);
    },
    getBuffer3f: function (a, b) {
      return A.getBuffer3f(a, b);
    },
    getBuffer3i: function (a, b) {
      return A.getBuffer3i(a, b);
    },
    getBufferf: function (a, b) {
      return A.getBufferf(a, b);
    },
    getBufferfv: function (a, b, c) {
      null == c && (c = 1);
      return A.getBufferfv(a, b, c);
    },
    getBufferi: function (a, b) {
      return A.getBufferi(a, b);
    },
    getBufferiv: function (a, b, c) {
      null == c && (c = 1);
      return A.getBufferiv(a, b, c);
    },
    getContextsDevice: function (a) {
      return null == a ? null : Cb.getContextsDevice(a);
    },
    getCurrentContext: function () {
      return Cb.getCurrentContext();
    },
    getDouble: function (a) {
      return A.getDouble(a);
    },
    getDoublev: function (a, b) {
      null == b && (b = 1);
      return A.getDoublev(a, b);
    },
    getEnumValue: function (a) {
      return A.getEnumValue(a);
    },
    getError: function (a) {
      return null == a ? A.getError() : Cb.getError(a);
    },
    getErrorString: function (a) {
      return null == a ? A.getErrorString() : Cb.getErrorString(a);
    },
    getFloat: function (a) {
      return A.getFloat(a);
    },
    getFloatv: function (a, b) {
      null == b && (b = 1);
      return A.getFloatv(a, b);
    },
    getInteger: function (a) {
      return A.getInteger(a);
    },
    getIntegerv: function (a, b, c) {
      null == b && (b = 1);
      return null == c ? A.getIntegerv(a, b) : Cb.getIntegerv(c, a, b);
    },
    getListener3f: function (a) {
      return A.getListener3f(a);
    },
    getListener3i: function (a) {
      return A.getListener3i(a);
    },
    getListenerf: function (a) {
      return A.getListenerf(a);
    },
    getListenerfv: function (a, b) {
      null == b && (b = 1);
      return A.getListenerfv(a, b);
    },
    getListeneri: function (a) {
      return A.getListeneri(a);
    },
    getListeneriv: function (a, b) {
      null == b && (b = 1);
      return A.getListeneriv(a, b);
    },
    getProcAddress: function (a) {
      return A.getProcAddress(a);
    },
    getSource3f: function (a, b) {
      return A.getSource3f(a, b);
    },
    getSourcef: function (a, b) {
      return A.getSourcef(a, b);
    },
    getSource3i: function (a, b) {
      return A.getSource3i(a, b);
    },
    getSourcefv: function (a, b, c) {
      return A.getSourcefv(a, b);
    },
    getSourcei: function (a, b) {
      return A.getSourcei(a, b);
    },
    getSourceiv: function (a, b, c) {
      null == c && (c = 1);
      return A.getSourceiv(a, b, c);
    },
    getString: function (a, b) {
      return null == b ? A.getString(a) : Cb.getString(b, a);
    },
    isBuffer: function (a) {
      return A.isBuffer(a);
    },
    isEnabled: function (a) {
      return A.isEnabled(a);
    },
    isExtensionPresent: function (a) {
      return A.isExtensionPresent(a);
    },
    isSource: function (a) {
      return A.isSource(a);
    },
    listener3f: function (a, b, c, d) {
      A.listener3f(a, b, c, d);
    },
    listener3i: function (a, b, c, d) {
      A.listener3i(a, b, c, d);
    },
    listenerf: function (a, b) {
      A.listenerf(a, b);
    },
    listenerfv: function (a, b) {
      A.listenerfv(a, b);
    },
    listeneri: function (a, b) {
      A.listeneri(a, b);
    },
    listeneriv: function (a, b) {
      A.listeneriv(a, b);
    },
    makeContextCurrent: function (a) {
      return Cb.makeContextCurrent(a);
    },
    openDevice: function (a) {
      return Cb.openDevice(a);
    },
    pauseDevice: function (a) {
      Cb.pauseDevice(a);
    },
    processContext: function (a) {
      Cb.processContext(a);
    },
    resumeDevice: function (a) {
      Cb.resumeDevice(a);
    },
    source3f: function (a, b, c, d, e) {
      A.source3f(a, b, c, d, e);
    },
    source3i: function (a, b, c, d, e) {
      A.source3i(a, b, c, d, e);
    },
    sourcef: function (a, b, c) {
      A.sourcef(a, b, c);
    },
    sourcefv: function (a, b, c) {
      A.sourcefv(a, b, c);
    },
    sourcei: function (a, b, c) {
      A.sourcei(a, b, c);
    },
    sourceiv: function (a, b, c) {
      A.sourceiv(a, b, c);
    },
    sourcePlay: function (a) {
      A.sourcePlay(a);
    },
    sourcePlayv: function (a) {
      A.sourcePlayv(a);
    },
    sourceStop: function (a) {
      A.sourceStop(a);
    },
    sourceStopv: function (a) {
      A.sourceStopv(a);
    },
    sourceRewind: function (a) {
      A.sourceRewind(a);
    },
    sourceRewindv: function (a) {
      A.sourceRewindv(a);
    },
    sourcePause: function (a) {
      A.sourcePause(a);
    },
    sourcePausev: function (a) {
      A.sourcePausev(a);
    },
    sourceQueueBuffer: function (a, b) {
      A.sourceQueueBuffer(a, b);
    },
    sourceQueueBuffers: function (a, b, c) {
      A.sourceQueueBuffers(a, b, c);
    },
    sourceUnqueueBuffer: function (a) {
      return A.sourceUnqueueBuffer(a);
    },
    sourceUnqueueBuffers: function (a, b) {
      return A.sourceUnqueueBuffers(a, b);
    },
    speedOfSound: function (a) {
      A.speedOfSound(a);
    },
    suspendContext: function (a) {
      Cb.suspendContext(a);
    },
    __class__: Xs,
  };
  var A = function () {};
  p["lime.media.openal.AL"] = A;
  A.__name__ = ["lime", "media", "openal", "AL"];
  A.removeDirectFilter = function (a) {};
  A.removeSend = function (a, b) {};
  A.auxf = function (a, b, c) {};
  A.auxfv = function (a, b, c) {};
  A.auxi = function (a, b, c) {};
  A.auxiv = function (a, b, c) {};
  A.bufferData = function (a, b, c, d, e) {};
  A.buffer3f = function (a, b, c, d, e) {};
  A.buffer3i = function (a, b, c, d, e) {};
  A.bufferf = function (a, b, c) {};
  A.bufferfv = function (a, b, c) {};
  A.bufferi = function (a, b, c) {};
  A.bufferiv = function (a, b, c) {};
  A.createAux = function () {
    return null;
  };
  A.createBuffer = function () {
    return null;
  };
  A.createEffect = function () {
    return null;
  };
  A.createFilter = function () {
    return null;
  };
  A.createSource = function () {
    return null;
  };
  A.deleteBuffer = function (a) {};
  A.deleteBuffers = function (a) {};
  A.deleteSource = function (a) {};
  A.deleteSources = function (a) {};
  A.disable = function (a) {};
  A.distanceModel = function (a) {};
  A.dopplerFactor = function (a) {};
  A.dopplerVelocity = function (a) {};
  A.effectf = function (a, b, c) {};
  A.effectfv = function (a, b, c) {};
  A.effecti = function (a, b, c) {};
  A.effectiv = function (a, b, c) {};
  A.enable = function (a) {};
  A.genSource = function () {
    return null;
  };
  A.genSources = function (a) {
    return null;
  };
  A.genBuffer = function () {
    return null;
  };
  A.genBuffers = function (a) {
    return null;
  };
  A.getBoolean = function (a) {
    return !1;
  };
  A.getBooleanv = function (a, b) {
    return null;
  };
  A.getBuffer3f = function (a, b) {
    return null;
  };
  A.getBuffer3i = function (a, b) {
    return null;
  };
  A.getBufferf = function (a, b) {
    return 0;
  };
  A.getBufferfv = function (a, b, c) {
    return null;
  };
  A.getBufferi = function (a, b) {
    return 0;
  };
  A.getBufferiv = function (a, b, c) {
    return null;
  };
  A.getDouble = function (a) {
    return 0;
  };
  A.getDoublev = function (a, b) {
    return null;
  };
  A.getEnumValue = function (a) {
    return 0;
  };
  A.getError = function () {
    return 0;
  };
  A.getErrorString = function () {
    switch (A.getError()) {
      case 40961:
        return "INVALID_NAME: Invalid parameter name";
      case 40962:
        return "INVALID_ENUM: Invalid enum value";
      case 40963:
        return "INVALID_VALUE: Invalid parameter value";
      case 40964:
        return "INVALID_OPERATION: Illegal operation or call";
      case 40965:
        return "OUT_OF_MEMORY: OpenAL has run out of memory";
      default:
        return "";
    }
  };
  A.getFilteri = function (a, b) {
    return 0;
  };
  A.getFloat = function (a) {
    return 0;
  };
  A.getFloatv = function (a, b) {
    return null;
  };
  A.getInteger = function (a) {
    return 0;
  };
  A.getIntegerv = function (a, b) {
    return null;
  };
  A.getListener3f = function (a) {
    return null;
  };
  A.getListener3i = function (a) {
    return null;
  };
  A.getListenerf = function (a) {
    return 0;
  };
  A.getListenerfv = function (a, b) {
    return null;
  };
  A.getListeneri = function (a) {
    return 0;
  };
  A.getListeneriv = function (a, b) {
    return null;
  };
  A.getParameter = function (a) {
    return null;
  };
  A.getProcAddress = function (a) {
    return null;
  };
  A.getSource3f = function (a, b) {
    return null;
  };
  A.getSourcef = function (a, b) {
    return 0;
  };
  A.getSource3i = function (a, b) {
    return null;
  };
  A.getSourcefv = function (a, b, c) {
    return null;
  };
  A.getSourcei = function (a, b) {
    return 0;
  };
  A.getSourceiv = function (a, b, c) {
    return null;
  };
  A.getString = function (a) {
    return null;
  };
  A.isBuffer = function (a) {
    return !1;
  };
  A.isEnabled = function (a) {
    return !1;
  };
  A.isExtensionPresent = function (a) {
    return !1;
  };
  A.isAux = function (a) {
    return !1;
  };
  A.isEffect = function (a) {
    return !1;
  };
  A.isFilter = function (a) {
    return !1;
  };
  A.isSource = function (a) {
    return !1;
  };
  A.listener3f = function (a, b, c, d) {};
  A.listener3i = function (a, b, c, d) {};
  A.listenerf = function (a, b) {};
  A.listenerfv = function (a, b) {};
  A.listeneri = function (a, b) {};
  A.listeneriv = function (a, b) {};
  A.source3f = function (a, b, c, d, e) {};
  A.source3i = function (a, b, c, d, e) {};
  A.sourcef = function (a, b, c) {};
  A.sourcefv = function (a, b, c) {};
  A.sourcei = function (a, b, c) {};
  A.filteri = function (a, b, c) {};
  A.filterf = function (a, b, c) {};
  A.sourceiv = function (a, b, c) {};
  A.sourcePlay = function (a) {};
  A.sourcePlayv = function (a) {};
  A.sourceStop = function (a) {};
  A.sourceStopv = function (a) {};
  A.sourceRewind = function (a) {};
  A.sourceRewindv = function (a) {};
  A.sourcePause = function (a) {};
  A.sourcePausev = function (a) {};
  A.sourceQueueBuffer = function (a, b) {};
  A.sourceQueueBuffers = function (a, b, c) {};
  A.sourceUnqueueBuffer = function (a) {
    return 0;
  };
  A.sourceUnqueueBuffers = function (a, b) {
    return null;
  };
  A.speedOfSound = function (a) {};
  var Ct = {};
  p["lime.media.openal._ALAuxiliaryEffectSlot.ALAuxiliaryEffectSlot_Impl_"] =
    Ct;
  Ct.__name__ = [
    "lime",
    "media",
    "openal",
    "_ALAuxiliaryEffectSlot",
    "ALAuxiliaryEffectSlot_Impl_",
  ];
  Ct._new = function (a) {
    return a;
  };
  var Dt = {};
  p["lime.media.openal._ALBuffer.ALBuffer_Impl_"] = Dt;
  Dt.__name__ = ["lime", "media", "openal", "_ALBuffer", "ALBuffer_Impl_"];
  Dt._new = function (a) {
    return a;
  };
  var Cb = function () {};
  p["lime.media.openal.ALC"] = Cb;
  Cb.__name__ = ["lime", "media", "openal", "ALC"];
  Cb.closeDevice = function (a) {
    return !1;
  };
  Cb.createContext = function (a, b) {
    return null;
  };
  Cb.destroyContext = function (a) {};
  Cb.getContextsDevice = function (a) {
    return null;
  };
  Cb.getCurrentContext = function () {
    return null;
  };
  Cb.getError = function (a) {
    return 0;
  };
  Cb.getErrorString = function (a) {
    switch (Cb.getError(a)) {
      case 40961:
        return "INVALID_DEVICE: Invalid device (or no device?)";
      case 40962:
        return "INVALID_CONTEXT: Invalid context (or no context?)";
      case 40963:
        return "INVALID_ENUM: Invalid enum value";
      case 40964:
        return "INVALID_VALUE: Invalid param value";
      case 40965:
        return "OUT_OF_MEMORY: OpenAL has run out of memory";
      default:
        return "";
    }
  };
  Cb.getIntegerv = function (a, b, c) {
    return null;
  };
  Cb.getString = function (a, b) {
    return null;
  };
  Cb.makeContextCurrent = function (a) {
    return !1;
  };
  Cb.openDevice = function (a) {
    return null;
  };
  Cb.pauseDevice = function (a) {};
  Cb.processContext = function (a) {};
  Cb.resumeDevice = function (a) {};
  Cb.suspendContext = function (a) {};
  var Et = {};
  p["lime.media.openal._ALContext.ALContext_Impl_"] = Et;
  Et.__name__ = ["lime", "media", "openal", "_ALContext", "ALContext_Impl_"];
  Et._new = function (a) {
    return a;
  };
  var Ft = {};
  p["lime.media.openal._ALDevice.ALDevice_Impl_"] = Ft;
  Ft.__name__ = ["lime", "media", "openal", "_ALDevice", "ALDevice_Impl_"];
  Ft._new = function (a) {
    return a;
  };
  var Gt = {};
  p["lime.media.openal._ALEffect.ALEffect_Impl_"] = Gt;
  Gt.__name__ = ["lime", "media", "openal", "_ALEffect", "ALEffect_Impl_"];
  Gt._new = function (a) {
    return a;
  };
  var Ht = {};
  p["lime.media.openal._ALFilter.ALFilter_Impl_"] = Ht;
  Ht.__name__ = ["lime", "media", "openal", "_ALFilter", "ALFilter_Impl_"];
  Ht._new = function (a) {
    return a;
  };
  var It = {};
  p["lime.media.openal._ALSource.ALSource_Impl_"] = It;
  It.__name__ = ["lime", "media", "openal", "_ALSource", "ALSource_Impl_"];
  It._new = function (a) {
    return a;
  };
  var Ys = function () {};
  p["lime.media.vorbis.VorbisComment"] = Ys;
  Ys.__name__ = ["lime", "media", "vorbis", "VorbisComment"];
  Ys.prototype = { userComments: null, vendor: null, __class__: Ys };
  var Cn = function (a) {
    this.handle = a;
  };
  p["lime.media.vorbis.VorbisFile"] = Cn;
  Cn.__name__ = ["lime", "media", "vorbis", "VorbisFile"];
  Cn.fromBytes = function (a) {
    return null;
  };
  Cn.fromFile = function (a) {
    return null;
  };
  Cn.prototype = {
    bitstream: null,
    handle: null,
    bitrate: function (a) {
      return 0;
    },
    bitrateInstant: function () {
      return 0;
    },
    clear: function () {},
    comment: function (a) {
      return null;
    },
    crosslap: function (a) {
      return 0;
    },
    info: function (a) {
      return null;
    },
    pcmSeek: function (a) {
      return 0;
    },
    pcmSeekLap: function (a) {
      return 0;
    },
    pcmSeekPage: function (a) {
      return 0;
    },
    pcmSeekPageLap: function (a) {
      return 0;
    },
    pcmTell: function () {
      return new Fa(0, 0);
    },
    pcmTotal: function (a) {
      return new Fa(0, 0);
    },
    rawSeek: function (a) {
      return 0;
    },
    rawSeekLap: function (a) {
      return 0;
    },
    rawTell: function () {
      return new Fa(0, 0);
    },
    rawTotal: function (a) {
      return new Fa(0, 0);
    },
    read: function (a, b, c, d, e, f) {
      return 0;
    },
    readFloat: function (a, b) {
      return 0;
    },
    seekable: function () {
      return !1;
    },
    serialNumber: function (a) {
      return 0;
    },
    streams: function () {
      return 0;
    },
    timeSeek: function (a) {
      return 0;
    },
    timeSeekLap: function (a) {
      return 0;
    },
    timeSeekPage: function (a) {
      return 0;
    },
    timeSeekPageLap: function (a) {
      return 0;
    },
    timeTell: function () {
      return 0;
    },
    timeTotal: function (a) {
      return 0;
    },
    __class__: Cn,
  };
  var Zs = function () {};
  p["lime.media.vorbis.VorbisInfo"] = Zs;
  Zs.__name__ = ["lime", "media", "vorbis", "VorbisInfo"];
  Zs.prototype = {
    bitrateLower: null,
    bitrateNominal: null,
    bitrateUpper: null,
    channels: null,
    rate: null,
    version: null,
    __class__: Zs,
  };
  var hq = function () {};
  p["lime.net._IHTTPRequest"] = hq;
  hq.__name__ = ["lime", "net", "_IHTTPRequest"];
  hq.prototype = {
    contentType: null,
    data: null,
    enableResponseHeaders: null,
    followRedirects: null,
    formData: null,
    headers: null,
    method: null,
    responseHeaders: null,
    responseStatus: null,
    timeout: null,
    uri: null,
    userAgent: null,
    withCredentials: null,
    cancel: null,
    __class__: hq,
  };
  var qf = function (a) {
    this.uri = a;
    this.contentType = "application/x-www-form-urlencoded";
    this.followRedirects = !0;
    this.enableResponseHeaders = !1;
    this.formData = new la();
    this.headers = [];
    this.method = "GET";
    this.timeout = 3e4;
    this.withCredentials = !1;
    this.__backend = new bb();
    this.__backend.init(this);
  };
  p["lime.net._HTTPRequest.AbstractHTTPRequest"] = qf;
  qf.__name__ = ["lime", "net", "_HTTPRequest", "AbstractHTTPRequest"];
  qf.__interfaces__ = [hq];
  qf.prototype = {
    contentType: null,
    data: null,
    enableResponseHeaders: null,
    followRedirects: null,
    formData: null,
    headers: null,
    method: null,
    responseData: null,
    responseHeaders: null,
    responseStatus: null,
    timeout: null,
    uri: null,
    userAgent: null,
    withCredentials: null,
    __backend: null,
    cancel: function () {
      this.__backend.cancel();
    },
    load: function (a) {
      return null;
    },
    __class__: qf,
  };
  var iq = function (a) {
    qf.call(this, a);
  };
  p["lime.net.HTTPRequest"] = iq;
  iq.__name__ = ["lime", "net", "HTTPRequest"];
  iq.__super__ = qf;
  iq.prototype = x(qf.prototype, { __class__: iq });
  var sh = function (a) {
    qf.call(this, a);
  };
  p["lime.net._HTTPRequest_Bytes"] = sh;
  sh.__name__ = ["lime", "net", "_HTTPRequest_Bytes"];
  sh.__super__ = qf;
  sh.prototype = x(qf.prototype, {
    fromBytes: function (a) {
      return a;
    },
    load: function (a) {
      var b = this;
      null != a && (this.uri = a);
      var c = new Zd();
      a = this.__backend.loadData(this.uri);
      a.onProgress(B(c, c.progress));
      a.onError(B(c, c.error));
      a.onComplete(function (a) {
        b.responseData = b.fromBytes(a);
        c.complete(b.responseData);
      });
      return c.future;
    },
    __class__: sh,
  });
  var Ek = function (a) {
    qf.call(this, a);
  };
  p["lime.net._HTTPRequest_String"] = Ek;
  Ek.__name__ = ["lime", "net", "_HTTPRequest_String"];
  Ek.__super__ = qf;
  Ek.prototype = x(qf.prototype, {
    load: function (a) {
      var b = this;
      null != a && (this.uri = a);
      var c = new Zd();
      a = this.__backend.loadText(this.uri);
      a.onProgress(B(c, c.progress));
      a.onError(B(c, c.error));
      a.onComplete(function (a) {
        b.responseData = a;
        c.complete(b.responseData);
      });
      return c.future;
    },
    __class__: Ek,
  });
  var pn = function (a, b) {
    null == b && (b = "");
    this.name = a;
    this.value = b;
  };
  p["lime.net.HTTPRequestHeader"] = pn;
  pn.__name__ = ["lime", "net", "HTTPRequestHeader"];
  pn.prototype = { name: null, value: null, __class__: pn };
  var Dn = function (a) {
    qf.call(this, a);
  };
  p["lime.net._HTTPRequest_lime_text_Font"] = Dn;
  Dn.__name__ = ["lime", "net", "_HTTPRequest_lime_text_Font"];
  Dn.__super__ = sh;
  Dn.prototype = x(sh.prototype, {
    fromBytes: function (a) {
      return Od.fromBytes(a);
    },
    __class__: Dn,
  });
  var En = function (a) {
    qf.call(this, a);
  };
  p["lime.net._HTTPRequest_lime_utils_Bytes"] = En;
  En.__name__ = ["lime", "net", "_HTTPRequest_lime_utils_Bytes"];
  En.__super__ = sh;
  En.prototype = x(sh.prototype, {
    fromBytes: function (a) {
      return Hc.fromBytes(a);
    },
    __class__: En,
  });
  var Fn = function (a) {
    qf.call(this, a);
  };
  p["lime.net._HTTPRequest_openfl_utils_ByteArray"] = Fn;
  Fn.__name__ = ["lime", "net", "_HTTPRequest_openfl_utils_ByteArray"];
  Fn.__super__ = sh;
  Fn.prototype = x(sh.prototype, {
    fromBytes: function (a) {
      return Na.fromBytes(a);
    },
    __class__: Fn,
  });
  var th = function () {};
  p["lime.system.CFFI"] = th;
  th.__name__ = ["lime", "system", "CFFI"];
  th.load = function (a, b, c, d) {
    null == d && (d = !1);
    null == c && (c = 0);
    return th.enabled
      ? null
      : V.makeVarArgs(function (a) {
          return {};
        });
  };
  th.__findHaxelib = function (a) {
    return "";
  };
  th.__loaderTrace = function (a) {};
  th.__sysName = function () {
    return null;
  };
  th.__tryLoad = function (a, b, c, d) {
    return null;
  };
  var cc = {};
  p["lime.system._CFFIPointer.CFFIPointer_Impl_"] = cc;
  cc.__name__ = ["lime", "system", "_CFFIPointer", "CFFIPointer_Impl_"];
  cc._new = function (a) {
    return a;
  };
  cc.get = function (a) {
    return 0;
  };
  cc.equals = function (a, b) {
    return cc.get(a) == b;
  };
  cc.equalsPointer = function (a, b) {
    return cc.get(a) == cc.get(b);
  };
  cc.greaterThan = function (a, b) {
    return cc.get(a) > b;
  };
  cc.greaterThanPointer = function (a, b) {
    return cc.get(a) > cc.get(b);
  };
  cc.greaterThanOrEqual = function (a, b) {
    return cc.get(a) >= b;
  };
  cc.greaterThanOrEqualPointer = function (a, b) {
    return cc.get(a) >= cc.get(b);
  };
  cc.lessThan = function (a, b) {
    return cc.get(a) < b;
  };
  cc.lessThanPointer = function (a, b) {
    return cc.get(a) < cc.get(b);
  };
  cc.lessThanOrEqual = function (a, b) {
    return cc.get(a) <= b;
  };
  cc.lessThanOrEqualPointer = function (a, b) {
    return cc.get(a) <= cc.get(b);
  };
  cc.notEquals = function (a, b) {
    return cc.get(a) != b;
  };
  cc.notEqualsPointer = function (a, b) {
    return cc.get(a) != cc.get(b);
  };
  var qe = function () {};
  p["lime.system.Clipboard"] = qe;
  qe.__name__ = ["lime", "system", "Clipboard"];
  qe.__properties__ = { set_text: "set_text", get_text: "get_text" };
  qe.__update = function () {
    qe._text != qe._text && qe.onUpdate.dispatch();
  };
  qe.get_text = function () {
    qe.__update();
    return qe._text;
  };
  qe.set_text = function (a) {
    var b = qe._text;
    qe._text = a;
    var c = Me.current.__window;
    null != c && c.__backend.setClipboard(a);
    qe._text != b && qe.onUpdate.dispatch();
    return a;
  };
  var jq = function () {};
  p["lime.system.Display"] = jq;
  jq.__name__ = ["lime", "system", "Display"];
  jq.prototype = {
    bounds: null,
    currentMode: null,
    id: null,
    dpi: null,
    name: null,
    supportedModes: null,
    __class__: jq,
  };
  var kq = function (a, b, c, d) {
    this.width = a;
    this.height = b;
    this.refreshRate = c;
    this.pixelFormat = d;
  };
  p["lime.system.DisplayMode"] = kq;
  kq.__name__ = ["lime", "system", "DisplayMode"];
  kq.prototype = {
    height: null,
    pixelFormat: null,
    refreshRate: null,
    width: null,
    __class__: kq,
  };
  var If = (p["lime.system.Endian"] = {
    __ename__: ["lime", "system", "Endian"],
    __constructs__: ["LITTLE_ENDIAN", "BIG_ENDIAN"],
  });
  If.LITTLE_ENDIAN = ["LITTLE_ENDIAN", 0];
  If.LITTLE_ENDIAN.toString = M;
  If.LITTLE_ENDIAN.__enum__ = If;
  If.BIG_ENDIAN = ["BIG_ENDIAN", 1];
  If.BIG_ENDIAN.toString = M;
  If.BIG_ENDIAN.__enum__ = If;
  var Ae = function () {};
  p["lime.system.JNI"] = Ae;
  Ae.__name__ = ["lime", "system", "JNI"];
  Ae.callMember = function (a, b, c) {
    switch (c.length) {
      case 0:
        return a(b);
      case 1:
        return a(b, c[0]);
      case 2:
        return a(b, c[0], c[1]);
      case 3:
        return a(b, c[0], c[1], c[2]);
      case 4:
        return a(b, c[0], c[1], c[2], c[3]);
      case 5:
        return a(b, c[0], c[1], c[2], c[3], c[4]);
      case 6:
        return a(b, c[0], c[1], c[2], c[3], c[4], c[5]);
      case 7:
        return a(b, c[0], c[1], c[2], c[3], c[4], c[5], c[6]);
      default:
        return null;
    }
  };
  Ae.callStatic = function (a, b) {
    switch (b.length) {
      case 0:
        return a();
      case 1:
        return a(b[0]);
      case 2:
        return a(b[0], b[1]);
      case 3:
        return a(b[0], b[1], b[2]);
      case 4:
        return a(b[0], b[1], b[2], b[3]);
      case 5:
        return a(b[0], b[1], b[2], b[3], b[4]);
      case 6:
        return a(b[0], b[1], b[2], b[3], b[4], b[5]);
      case 7:
        return a(b[0], b[1], b[2], b[3], b[4], b[5], b[6]);
      default:
        return null;
    }
  };
  Ae.createMemberField = function (a, b, c) {
    Ae.init();
    return null;
  };
  Ae.createMemberMethod = function (a, b, c, d, e) {
    Ae.init();
    return null;
  };
  Ae.createStaticField = function (a, b, c) {
    Ae.init();
    return null;
  };
  Ae.createStaticMethod = function (a, b, c, d, e) {
    Ae.init();
    return null;
  };
  Ae.getEnv = function () {
    Ae.init();
    return null;
  };
  Ae.init = function () {
    Ae.initialized || (Ae.initialized = !0);
  };
  Ae.onCallback = function (a, b, c) {
    b = V.field(a, b);
    return null != b ? (null == c && (c = []), b.apply(a, c)) : null;
  };
  Ae.postUICallback = function (a) {
    a();
  };
  var $s = function (a) {
    this.field = a;
  };
  p["lime.system.JNIMemberField"] = $s;
  $s.__name__ = ["lime", "system", "JNIMemberField"];
  $s.prototype = {
    field: null,
    get: function (a) {
      return null;
    },
    set: function (a, b) {
      return b;
    },
    __class__: $s,
  };
  var at = function (a) {
    this.field = a;
  };
  p["lime.system.JNIStaticField"] = at;
  at.__name__ = ["lime", "system", "JNIStaticField"];
  at.prototype = {
    field: null,
    get: function () {
      return null;
    },
    set: function (a) {
      return a;
    },
    __class__: at,
  };
  var bt = function (a) {
    this.method = a;
  };
  p["lime.system.JNIMethod"] = bt;
  bt.__name__ = ["lime", "system", "JNIMethod"];
  bt.prototype = {
    method: null,
    callMember: function (a) {
      return null;
    },
    callStatic: function (a) {
      return null;
    },
    getMemberMethod: function (a) {
      return a
        ? B(this, this.callMember)
        : V.makeVarArgs(B(this, this.callMember));
    },
    getStaticMethod: function (a) {
      return a
        ? B(this, this.callStatic)
        : V.makeVarArgs(B(this, this.callStatic));
    },
    __class__: bt,
  };
  var dd = {};
  p["lime.system._Locale.Locale_Impl_"] = dd;
  dd.__name__ = ["lime", "system", "_Locale", "Locale_Impl_"];
  dd.__properties__ = {
    get_region: "get_region",
    get_language: "get_language",
    get_systemLocale: "get_systemLocale",
    set_currentLocale: "set_currentLocale",
    get_currentLocale: "get_currentLocale",
  };
  dd._new = function (a) {
    return a;
  };
  dd.equals = function (a, b) {
    var c = dd.get_language(a);
    a = dd.get_region(a);
    var d = dd.get_language(b);
    b = dd.get_region(b);
    var e = c == d,
      f = a == b;
    e || null == c || null == d || (e = c.toLowerCase() == d.toLowerCase());
    f || null == a || null == b || (f = a.toLowerCase() == b.toLowerCase());
    return e ? f : !1;
  };
  dd.__init = function () {
    if (null == dd.__systemLocale) {
      var a = navigator.language;
      dd.__systemLocale = null != a ? a : "en-US";
      dd.set_currentLocale(dd.__systemLocale);
    }
  };
  dd.get_language = function (a) {
    if (null != a) {
      var b = a.indexOf("_");
      if (-1 < b) {
        var c = a.indexOf("-");
        -1 < c && c < b && (b = c);
        return a.substring(0, b);
      }
      b = a.indexOf("-");
      if (-1 < b) return a.substring(0, b);
    }
    return a;
  };
  dd.get_region = function (a) {
    if (null != a) {
      var b = a.indexOf("_"),
        c = a.indexOf("."),
        d = a.indexOf("-");
      if (-1 < b) return -1 < c ? a.substring(b + 1, c) : a.substring(b + 1);
      if (-1 < d) return -1 < c ? a.substring(d + 1, c) : a.substring(d + 1);
    }
    return null;
  };
  dd.get_currentLocale = function () {
    dd.__init();
    return dd.currentLocale;
  };
  dd.set_currentLocale = function (a) {
    dd.__init();
    return (dd.currentLocale = a);
  };
  dd.get_systemLocale = function () {
    dd.__init();
    return dd.__systemLocale;
  };
  var $f = function (a, b) {
    this.onUpdate = new Tp();
    this.type = a;
    this.id = b;
  };
  p["lime.system.Sensor"] = $f;
  $f.__name__ = ["lime", "system", "Sensor"];
  $f.getSensors = function (a) {
    if (null == a) return $f.sensors.slice();
    for (var b = [], c = 0, d = $f.sensors; c < d.length; ) {
      var e = d[c];
      ++c;
      e.type == a && b.push(e);
    }
    return b;
  };
  $f.registerSensor = function (a, b) {
    a = new $f(a, b);
    $f.sensors.push(a);
    return ($f.sensorByID.h[b] = a);
  };
  $f.prototype = { id: null, onUpdate: null, type: null, __class__: $f };
  var Jp = (p["lime.system.SensorType"] = {
    __ename__: ["lime", "system", "SensorType"],
    __constructs__: ["ACCELEROMETER"],
  });
  Jp.ACCELEROMETER = ["ACCELEROMETER", 0];
  Jp.ACCELEROMETER.toString = M;
  Jp.ACCELEROMETER.__enum__ = Jp;
  var za = function () {};
  p["lime.system.System"] = za;
  za.__name__ = ["lime", "system", "System"];
  za.__properties__ = {
    get_userDirectory: "get_userDirectory",
    get_platformVersion: "get_platformVersion",
    get_platformName: "get_platformName",
    get_platformLabel: "get_platformLabel",
    get_numDisplays: "get_numDisplays",
    get_fontsDirectory: "get_fontsDirectory",
    get_endianness: "get_endianness",
    get_documentsDirectory: "get_documentsDirectory",
    get_deviceVendor: "get_deviceVendor",
    get_deviceModel: "get_deviceModel",
    get_desktopDirectory: "get_desktopDirectory",
    get_applicationStorageDirectory: "get_applicationStorageDirectory",
    get_applicationDirectory: "get_applicationDirectory",
    set_allowScreenTimeout: "set_allowScreenTimeout",
    get_allowScreenTimeout: "get_allowScreenTimeout",
  };
  za.embed = va.lime.embed = function (a, b, c, d, e) {
    if (null != za.__applicationEntryPoint) {
      var f = za.__applicationEntryPoint;
      if (null != t[a] ? f.existsReserved(a) : f.h.hasOwnProperty(a))
        (f =
          "string" == typeof b
            ? window.document.getElementById(b)
            : null == b
            ? window.document.createElement("div")
            : b),
          null == f
            ? window.console.log(
                "[lime.embed] ERROR: Cannot find target element: " + P.string(b)
              )
            : (null == c && (c = 0),
              null == d && (d = 0),
              null == e && (e = {}),
              Object.prototype.hasOwnProperty.call(e, "background") &&
                "string" == typeof e.background &&
                ((b = ba.replace(P.string(e.background), "#", "")),
                -1 < b.indexOf("0x")
                  ? (e.background = P.parseInt(b))
                  : (e.background = P.parseInt("0x" + b))),
              (e.element = f),
              (e.width = c),
              (e.height = d),
              (c = za.__applicationEntryPoint),
              (null != t[a] ? c.getReserved(a) : c.h[a])(e));
    }
  };
  za.exit = function (a) {};
  za.getDisplay = function (a) {
    return 0 == a
      ? ((a = new jq()),
        (a.id = 0),
        (a.name = "Generic Display"),
        (a.dpi = 96 * window.devicePixelRatio),
        (a.currentMode = new kq(
          window.screen.width,
          window.screen.height,
          60,
          1
        )),
        (a.supportedModes = [a.currentMode]),
        (a.bounds = new Td(0, 0, a.currentMode.width, a.currentMode.height)),
        a)
      : null;
  };
  za.getTimer = function () {
    return window.performance.now() | 0;
  };
  za.load = function (a, b, c, d) {
    null == d && (d = !1);
    null == c && (c = 0);
    return th.load(a, b, c, d);
  };
  za.openFile = function (a) {
    null != a && window.open(a, "_blank");
  };
  za.openURL = function (a, b) {
    null == b && (b = "_blank");
    null != a && window.open(a, b);
  };
  za.__copyMissingFields = function (a, b) {
    if (null != b && null != a)
      for (var c = 0, d = V.fields(b); c < d.length; ) {
        var e = d[c];
        ++c;
        Object.prototype.hasOwnProperty.call(a, e) || (a[e] = V.field(b, e));
      }
  };
  za.__getDirectory = function (a) {
    return null;
  };
  za.__parseBool = function (a) {
    return "true" == a;
  };
  za.__registerEntryPoint = function (a, b) {
    null == za.__applicationEntryPoint &&
      (za.__applicationEntryPoint = new la());
    var c = za.__applicationEntryPoint;
    null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
  };
  za.__runProcess = function (a, b) {
    return null;
  };
  za.get_allowScreenTimeout = function () {
    return !0;
  };
  za.set_allowScreenTimeout = function (a) {
    return !0;
  };
  za.get_applicationDirectory = function () {
    null == za.__applicationDirectory &&
      (za.__applicationDirectory = za.__getDirectory(0));
    return za.__applicationDirectory;
  };
  za.get_applicationStorageDirectory = function () {
    null == za.__applicationStorageDirectory &&
      (za.__applicationStorageDirectory = za.__getDirectory(1));
    return za.__applicationStorageDirectory;
  };
  za.get_deviceModel = function () {
    return za.__deviceModel;
  };
  za.get_deviceVendor = function () {
    return za.__deviceVendor;
  };
  za.get_desktopDirectory = function () {
    null == za.__desktopDirectory &&
      (za.__desktopDirectory = za.__getDirectory(2));
    return za.__desktopDirectory;
  };
  za.get_documentsDirectory = function () {
    null == za.__documentsDirectory &&
      (za.__documentsDirectory = za.__getDirectory(3));
    return za.__documentsDirectory;
  };
  za.get_endianness = function () {
    if (null == za.__endianness) {
      var a = new Je(2),
        b = null != a ? new lb(a, 0) : null;
      a = null != a ? new Uint16Array(a, 0) : null;
      b[0] = 170;
      b[1] = 187;
      za.__endianness = 43707 == a[0] ? If.BIG_ENDIAN : If.LITTLE_ENDIAN;
    }
    return za.__endianness;
  };
  za.get_fontsDirectory = function () {
    null == za.__fontsDirectory && (za.__fontsDirectory = za.__getDirectory(4));
    return za.__fontsDirectory;
  };
  za.get_numDisplays = function () {
    return 1;
  };
  za.get_platformLabel = function () {
    if (null == za.__platformLabel) {
      var a = za.get_platformName(),
        b = za.get_platformVersion();
      null != a && null != b
        ? (za.__platformLabel = a + " " + b)
        : null != a && (za.__platformLabel = a);
    }
    return za.__platformLabel;
  };
  za.get_platformName = function () {
    null == za.__platformName && (za.__platformName = "HTML5");
    return za.__platformName;
  };
  za.get_platformVersion = function () {
    return za.__platformVersion;
  };
  za.get_userDirectory = function () {
    null == za.__userDirectory && (za.__userDirectory = za.__getDirectory(5));
    return za.__userDirectory;
  };
  var Sp = function (a, b) {
    null == b && (b = 1);
    null == a && (a = 0);
    this.onRun = new Di();
    this.onProgress = new Di();
    this.onError = new Di();
    this.onComplete = new Di();
    this.doWork = new Di();
    this.minThreads = a;
    this.maxThreads = b;
    this.currentThreads = 0;
  };
  p["lime.system.ThreadPool"] = Sp;
  Sp.__name__ = ["lime", "system", "ThreadPool"];
  Sp.prototype = {
    currentThreads: null,
    doWork: null,
    maxThreads: null,
    minThreads: null,
    onComplete: null,
    onError: null,
    onProgress: null,
    onRun: null,
    queue: function (a) {
      this.runWork(a);
    },
    sendComplete: function (a) {
      this.onComplete.dispatch(a);
    },
    sendError: function (a) {
      this.onError.dispatch(a);
    },
    sendProgress: function (a) {
      this.onProgress.dispatch(a);
    },
    runWork: function (a) {
      this.onRun.dispatch(a);
      this.doWork.dispatch(a);
    },
    __class__: Sp,
  };
  var Ne = (p["lime.system._ThreadPool.ThreadPoolMessageType"] = {
    __ename__: ["lime", "system", "_ThreadPool", "ThreadPoolMessageType"],
    __constructs__: ["COMPLETE", "ERROR", "EXIT", "PROGRESS", "WORK"],
  });
  Ne.COMPLETE = ["COMPLETE", 0];
  Ne.COMPLETE.toString = M;
  Ne.COMPLETE.__enum__ = Ne;
  Ne.ERROR = ["ERROR", 1];
  Ne.ERROR.toString = M;
  Ne.ERROR.__enum__ = Ne;
  Ne.EXIT = ["EXIT", 2];
  Ne.EXIT.toString = M;
  Ne.EXIT.__enum__ = Ne;
  Ne.PROGRESS = ["PROGRESS", 3];
  Ne.PROGRESS.toString = M;
  Ne.PROGRESS.__enum__ = Ne;
  Ne.WORK = ["WORK", 4];
  Ne.WORK.toString = M;
  Ne.WORK.__enum__ = Ne;
  var ct = function (a, b) {
    this.type = a;
    this.state = b;
  };
  p["lime.system._ThreadPool.ThreadPoolMessage"] = ct;
  ct.__name__ = ["lime", "system", "_ThreadPool", "ThreadPoolMessage"];
  ct.prototype = { state: null, type: null, __class__: ct };
  var Od = function (a) {
    null != a && (this.name = a);
    this.__init ||
      (void 0 == this.ascender && (this.ascender = 0),
      void 0 == this.descender && (this.descender = 0),
      void 0 == this.height && (this.height = 0),
      void 0 == this.numGlyphs && (this.numGlyphs = 0),
      void 0 == this.underlinePosition && (this.underlinePosition = 0),
      void 0 == this.underlineThickness && (this.underlineThickness = 0),
      void 0 == this.unitsPerEM && (this.unitsPerEM = 0),
      null != this.__fontID
        ? ka.isLocal(this.__fontID) &&
          this.__fromBytes(ka.getBytes(this.__fontID))
        : null != this.__fontPath && this.__fromFile(this.__fontPath));
  };
  p["lime.text.Font"] = Od;
  Od.__name__ = ["lime", "text", "Font"];
  Od.fromBytes = function (a) {
    if (null == a) return null;
    var b = new Od();
    b.__fromBytes(a);
    return b;
  };
  Od.fromFile = function (a) {
    if (null == a) return null;
    var b = new Od();
    b.__fromFile(a);
    return b;
  };
  Od.loadFromBytes = function (a) {
    return ab.withValue(Od.fromBytes(a));
  };
  Od.loadFromFile = function (a) {
    return new Dn().load(a).then(function (a) {
      return null != a ? ab.withValue(a) : ab.withError("");
    });
  };
  Od.loadFromName = function (a) {
    return new Od().__loadFromName(a);
  };
  Od.__measureFontNode = function (a) {
    var b = window.document.createElement("span");
    b.setAttribute("aria-hidden", "true");
    var c = window.document.createTextNode("BESbswy");
    b.appendChild(c);
    c = b.style;
    c.display = "block";
    c.position = "absolute";
    c.top = "-9999px";
    c.left = "-9999px";
    c.fontSize = "300px";
    c.width = "auto";
    c.height = "auto";
    c.lineHeight = "normal";
    c.margin = "0";
    c.padding = "0";
    c.fontVariant = "normal";
    c.whiteSpace = "nowrap";
    c.fontFamily = a;
    window.document.body.appendChild(b);
    return b;
  };
  Od.prototype = {
    ascender: null,
    descender: null,
    height: null,
    name: null,
    numGlyphs: null,
    src: null,
    underlinePosition: null,
    underlineThickness: null,
    unitsPerEM: null,
    __fontID: null,
    __fontPath: null,
    __init: null,
    decompose: function () {
      return null;
    },
    getGlyph: function (a) {
      return -1;
    },
    getGlyphs: function (a) {
      return null;
    },
    getGlyphMetrics: function (a) {
      return null;
    },
    renderGlyph: function (a, b) {
      return null;
    },
    renderGlyphs: function (a, b) {
      return null;
    },
    __copyFrom: function (a) {
      null != a &&
        ((this.ascender = a.ascender),
        (this.descender = a.descender),
        (this.height = a.height),
        (this.name = a.name),
        (this.numGlyphs = a.numGlyphs),
        (this.src = a.src),
        (this.underlinePosition = a.underlinePosition),
        (this.underlineThickness = a.underlineThickness),
        (this.unitsPerEM = a.unitsPerEM),
        (this.__fontID = a.__fontID),
        (this.__fontPath = a.__fontPath),
        (this.__init = !0));
    },
    __fromBytes: function (a) {
      this.__fontPath = null;
    },
    __fromFile: function (a) {
      this.__fontPath = a;
    },
    __initializeSource: function () {
      this.__init = !0;
    },
    __loadFromName: function (a) {
      var b = this,
        c = new Zd();
      this.name = a;
      var d = window.navigator.userAgent.toLowerCase(),
        e = 0 <= d.indexOf(" safari/") && 0 > d.indexOf(" chrome/");
      d = new Ib("(iPhone|iPod|iPad).*AppleWebKit(?!.*Version)", "i").match(d);
      if (
        !e &&
        !d &&
        window.document.fonts &&
        ((Mb = window.document.fonts), B(Mb, Mb.load))
      )
        window.document.fonts.load("1em '" + a + "'").then(
          function (a) {
            c.complete(b);
          },
          function (d) {
            mb.warn('Could not load web font "' + a + '"', {
              fileName: "Font.hx",
              lineNumber: 549,
              className: "lime.text.Font",
              methodName: "__loadFromName",
            });
            c.complete(b);
          }
        );
      else {
        var f = Od.__measureFontNode("'" + a + "', sans-serif"),
          g = Od.__measureFontNode("'" + a + "', serif"),
          h = f.offsetWidth,
          n = g.offsetWidth,
          k = -1,
          m = 0,
          l,
          p;
        k = window.setInterval(function () {
          m += 1;
          l = f.offsetWidth == h ? g.offsetWidth != n : !0;
          p = 3e3 <= 50 * m;
          if (l || p)
            window.clearInterval(k),
              f.parentNode.removeChild(f),
              g.parentNode.removeChild(g),
              (g = f = null),
              p &&
                mb.warn('Could not load web font "' + a + '"', {
                  fileName: "Font.hx",
                  lineNumber: 585,
                  className: "lime.text.Font",
                  methodName: "__loadFromName",
                }),
              c.complete(b);
        }, 50);
      }
      return c.future;
    },
    __setSize: function (a) {},
    __class__: Od,
  };
  var Jt = {};
  p["lime.text._Glyph.Glyph_Impl_"] = Jt;
  Jt.__name__ = ["lime", "text", "_Glyph", "Glyph_Impl_"];
  Jt._new = function (a) {
    return a;
  };
  var dt = function () {};
  p["lime.text.GlyphMetrics"] = dt;
  dt.__name__ = ["lime", "text", "GlyphMetrics"];
  dt.prototype = {
    advance: null,
    height: null,
    horizontalBearing: null,
    verticalBearing: null,
    __class__: dt,
  };
  var ha = {};
  p["lime.text._UTF8String.UTF8String_Impl_"] = ha;
  ha.__name__ = ["lime", "text", "_UTF8String", "UTF8String_Impl_"];
  ha.__properties__ = { get_length: "get_length" };
  ha._new = function (a) {
    return new String(a);
  };
  ha.charAt = function (a, b) {
    if (0 <= b)
      for (var c = 0, d = a.length, e = 0; e < b && c < d; ) {
        var f = a.charCodeAt(c);
        c += 55296 <= f && 56319 >= f ? 2 : 1;
        ++e;
      }
    else
      for (d = c = 0; d < -b && 0 < c; )
        (e = a.charCodeAt(c - 1)), (c -= 56320 <= e && 57343 >= e ? 2 : 1), ++d;
    b = c;
    c = a.charCodeAt(b);
    return Q.substr(a, b, 55296 <= c && 56319 >= c ? 2 : 1);
  };
  ha.charCodeAt = function (a, b) {
    if (0 <= b ? b >= ec.codePointCount(a, 0, a.length) : 1) return null;
    if (0 <= b)
      for (var c = 0, d = a.length, e = 0; e < b && c < d; ) {
        var f = a.charCodeAt(c);
        c += 55296 <= f && 56319 >= f ? 2 : 1;
        ++e;
      }
    else
      for (d = c = 0; d < -b && 0 < c; )
        (e = a.charCodeAt(c - 1)), (c -= 56320 <= e && 57343 >= e ? 2 : 1), ++d;
    b = c;
    return ec.codePointAt(a, b);
  };
  ha.fromCharCode = function (a) {
    if (
      !(0 <= a && 1114111 >= a) ||
      (55296 <= a && 56319 >= a) ||
      (56320 <= a && 57343 >= a)
    )
      throw new v(new Xh(a));
    return 65535 >= a
      ? String.fromCharCode(a)
      : String.fromCharCode((a >> 10) + 55232) +
          String.fromCharCode((a & 1023) | 56320);
  };
  ha.fromCharCodes = function (a) {
    for (var b = "", c = 0; c < a.length; ) {
      var d = a[c];
      ++c;
      if (
        !(0 <= d && 1114111 >= d) ||
        (55296 <= d && 56319 >= d) ||
        (56320 <= d && 57343 >= d)
      )
        throw new v(new Xh(d));
      d =
        65535 >= d
          ? String.fromCharCode(d)
          : String.fromCharCode((d >> 10) + 55232) +
            String.fromCharCode((d & 1023) | 56320);
      b += d;
    }
    return b;
  };
  ha.indexOf = function (a, b, c) {
    null == c && (c = 0);
    if (0 <= c)
      for (var d = 0, e = a.length, f = 0; f < c && d < e; ) {
        var g = a.charCodeAt(d);
        d += 55296 <= g && 56319 >= g ? 2 : 1;
        ++f;
      }
    else
      for (e = d = 0; e < -c && 0 < d; )
        (f = a.charCodeAt(d - 1)), (d -= 56320 <= f && 57343 >= f ? 2 : 1), ++e;
    c = d;
    b = a.indexOf(b, c);
    return 0 <= b ? ec.codePointCount(a, 0, b) : -1;
  };
  ha.lastIndexOf = function (a, b, c) {
    null == c && (c = a.length - 1);
    if (0 <= c)
      for (var d = 0, e = a.length, f = 0; f < c && d < e; ) {
        var g = a.charCodeAt(d);
        d += 55296 <= g && 56319 >= g ? 2 : 1;
        ++f;
      }
    else
      for (e = d = 0; e < -c && 0 < d; )
        (f = a.charCodeAt(d - 1)), (d -= 56320 <= f && 57343 >= f ? 2 : 1), ++e;
    c = d;
    b = a.lastIndexOf(b, c);
    return 0 <= b ? ec.codePointCount(a, 0, b) : -1;
  };
  ha.split = function (a, b) {
    if (0 == b.length) {
      b = [];
      var c;
      var d = 0;
      for (c = a.length; d < c; ) {
        var e = d;
        var f = a.charCodeAt(d);
        d += 55296 <= f && 56319 >= f ? 2 : 1;
        f = a;
        var g = f.charCodeAt(e);
        e = Q.substr(f, e, 55296 <= g && 56319 >= g ? 2 : 1);
        b.push(e);
      }
      return b;
    }
    return a.split(b);
  };
  ha.substr = function (a, b, c) {
    null == c && (c = ha.get_length(a) - b);
    return Q.substr(a, b, c);
  };
  ha.substring = function (a, b, c) {
    if (0 > b) b = 0;
    else {
      if (0 <= b)
        for (var d = 0, e = a.length, f = 0; f < b && d < e; ) {
          var g = a.charCodeAt(d);
          d += 55296 <= g && 56319 >= g ? 2 : 1;
          ++f;
        }
      else
        for (e = d = 0; e < -b && 0 < d; )
          (f = a.charCodeAt(d - 1)),
            (d -= 56320 <= f && 57343 >= f ? 2 : 1),
            ++e;
      b = d;
    }
    if (null == c) c = a.length;
    else if (0 > c) c = 0;
    else {
      if (0 <= c)
        for (d = 0, e = a.length, f = 0; f < c && d < e; )
          (g = a.charCodeAt(d)), (d += 55296 <= g && 56319 >= g ? 2 : 1), ++f;
      else
        for (e = d = 0; e < -c && 0 < d; )
          (f = a.charCodeAt(d - 1)),
            (d -= 56320 <= f && 57343 >= f ? 2 : 1),
            ++e;
      c = d;
    }
    return a.substring(b, c);
  };
  ha.toLowerCase = function (a, b) {
    return a.toLowerCase();
  };
  ha.toLowerCaseLocaleFixes = function (a, b) {
    return "tr" == dd.get_language(b) ? (50352 == a ? 105 : a) : a;
  };
  ha.toString = function (a) {
    return a;
  };
  ha.toUpperCase = function (a, b) {
    return a.toUpperCase();
  };
  ha.toUpperCaseLocaleFixes = function (a, b) {
    return "tr" == dd.get_language(b) ? (105 == a ? 50352 : a) : a;
  };
  ha.equals = function (a, b) {
    return null == a || null == b ? a == b : 0 == Le.uCompare(a, b);
  };
  ha.lt = function (a, b) {
    return null == b ? !1 : null == a ? !0 : -1 == Le.uCompare(a, b);
  };
  ha.gt = function (a, b) {
    return null == a ? !1 : null == b ? !0 : 1 == Le.uCompare(a, b);
  };
  ha.lteq = function (a, b) {
    return null == b ? null == a : null == a ? !0 : 1 != Le.uCompare(a, b);
  };
  ha.gteq = function (a, b) {
    return null == a ? null == b : null == b ? !0 : -1 != Le.uCompare(a, b);
  };
  ha.plus = function (a, b) {
    if (null == a && null == b) return null;
    if (null == a) return b;
    if (null == b) return a;
    a = "" + P.string(ha.toString(a));
    return (a += P.string(ha.toString(b)));
  };
  ha.fromDynamic = function (a) {
    return P.string(a);
  };
  ha.get_length = function (a) {
    return null == a ? 0 : ec.codePointCount(a, 0, a.length);
  };
  var et = function () {};
  p["lime.text._UTF8String.Utf8Ext"] = et;
  et.__name__ = ["lime", "text", "_UTF8String", "Utf8Ext"];
  et.fillUpperToLowerMap = function (a) {
    for (var b = 0, c = 0; 26 > c; ) {
      var d = c++;
      a.h[65 + d] = 97 + d;
    }
    for (c = 0; 23 > c; ) (d = c++), (a.h[192 + d] = 224 + d);
    for (c = 0; 7 > c; ) (d = c++), (a.h[216 + d] = 248 + d);
    for (; 48 > b; ) (a.h[256 + b] = 257 + b), (b += 2);
    b = 0;
    for (a.h[304] = 105; 6 > b; ) (a.h[306 + b] = 307 + b), (b += 2);
    for (b = 0; 16 > b; ) (a.h[313 + b] = 314 + b), (b += 2);
    for (b = 0; 46 > b; ) (a.h[330 + b] = 331 + b), (b += 2);
    b = 0;
    for (a.h[376] = 255; 6 > b; ) (a.h[377 + b] = 378 + b), (b += 2);
    b = 0;
    for (a.h[385] = 595; 4 > b; ) (a.h[386 + b] = 387 + b), (b += 2);
    b = 0;
    a.h[390] = 596;
    a.h[391] = 392;
    for (c = 0; 2 > c; ) (d = c++), (a.h[393 + d] = 598 + d);
    a.h[395] = 396;
    a.h[398] = 477;
    a.h[399] = 601;
    a.h[400] = 603;
    a.h[401] = 402;
    a.h[403] = 608;
    a.h[404] = 611;
    a.h[406] = 617;
    a.h[407] = 616;
    a.h[408] = 409;
    a.h[412] = 623;
    a.h[413] = 626;
    for (a.h[415] = 629; 6 > b; ) (a.h[416 + b] = 417 + b), (b += 2);
    b = 0;
    a.h[422] = 640;
    a.h[423] = 424;
    a.h[425] = 643;
    a.h[428] = 429;
    a.h[430] = 648;
    a.h[431] = 432;
    for (c = 0; 2 > c; ) (d = c++), (a.h[433 + d] = 650 + d);
    for (; 4 > b; ) (a.h[435 + b] = 436 + b), (b += 2);
    b = 0;
    a.h[439] = 658;
    a.h[440] = 441;
    a.h[444] = 445;
    a.h[452] = 454;
    a.h[455] = 457;
    for (a.h[458] = 460; 16 > b; ) (a.h[461 + b] = 462 + b), (b += 2);
    for (b = 0; 18 > b; ) (a.h[478 + b] = 479 + b), (b += 2);
    b = 0;
    a.h[497] = 499;
    a.h[500] = 501;
    a.h[502] = 405;
    for (a.h[503] = 447; 40 > b; ) (a.h[504 + b] = 505 + b), (b += 2);
    b = 0;
    for (a.h[544] = 414; 18 > b; ) (a.h[546 + b] = 547 + b), (b += 2);
    b = 0;
    a.h[570] = 11365;
    a.h[571] = 572;
    a.h[573] = 410;
    a.h[574] = 11366;
    a.h[577] = 578;
    a.h[579] = 384;
    a.h[580] = 649;
    for (a.h[581] = 652; 10 > b; ) (a.h[582 + b] = 583 + b), (b += 2);
    for (b = 0; 4 > b; ) (a.h[880 + b] = 881 + b), (b += 2);
    b = 0;
    a.h[886] = 887;
    a.h[895] = 1011;
    a.h[902] = 940;
    for (c = 0; 3 > c; ) (d = c++), (a.h[904 + d] = 941 + d);
    a.h[908] = 972;
    for (c = 0; 2 > c; ) (d = c++), (a.h[910 + d] = 973 + d);
    for (c = 0; 17 > c; ) (d = c++), (a.h[913 + d] = 945 + d);
    for (c = 0; 9 > c; ) (d = c++), (a.h[931 + d] = 963 + d);
    for (a.h[975] = 983; 24 > b; ) (a.h[984 + b] = 985 + b), (b += 2);
    b = 0;
    a.h[1012] = 952;
    a.h[1015] = 1016;
    a.h[1017] = 1010;
    a.h[1018] = 1019;
    for (c = 0; 3 > c; ) (d = c++), (a.h[1021 + d] = 891 + d);
    for (c = 0; 16 > c; ) (d = c++), (a.h[1024 + d] = 1104 + d);
    for (c = 0; 32 > c; ) (d = c++), (a.h[1040 + d] = 1072 + d);
    for (; 34 > b; ) (a.h[1120 + b] = 1121 + b), (b += 2);
    for (b = 0; 54 > b; ) (a.h[1162 + b] = 1163 + b), (b += 2);
    b = 0;
    for (a.h[1216] = 1231; 14 > b; ) (a.h[1217 + b] = 1218 + b), (b += 2);
    for (b = 0; 96 > b; ) (a.h[1232 + b] = 1233 + b), (b += 2);
    for (c = b = 0; 38 > c; ) (d = c++), (a.h[1329 + d] = 1377 + d);
    for (c = 0; 38 > c; ) (d = c++), (a.h[4256 + d] = 11520 + d);
    a.h[4295] = 11559;
    a.h[4301] = 11565;
    for (c = 0; 80 > c; ) (d = c++), (a.h[5024 + d] = 43888 + d);
    for (c = 0; 6 > c; ) (d = c++), (a.h[5104 + d] = 5112 + d);
    for (; 150 > b; ) (a.h[7680 + b] = 7681 + b), (b += 2);
    b = 0;
    for (a.h[7838] = 223; 96 > b; ) (a.h[7840 + b] = 7841 + b), (b += 2);
    for (c = b = 0; 8 > c; ) (d = c++), (a.h[7944 + d] = 7936 + d);
    for (c = 0; 6 > c; ) (d = c++), (a.h[7960 + d] = 7952 + d);
    for (c = 0; 8 > c; ) (d = c++), (a.h[7976 + d] = 7968 + d);
    for (c = 0; 8 > c; ) (d = c++), (a.h[7992 + d] = 7984 + d);
    for (c = 0; 6 > c; ) (d = c++), (a.h[8008 + d] = 8e3 + d);
    for (; 8 > b; ) (a.h[8025 + b] = 8017 + b), (b += 2);
    for (c = b = 0; 8 > c; ) (d = c++), (a.h[8040 + d] = 8032 + d);
    for (c = 0; 2 > c; ) (d = c++), (a.h[8120 + d] = 8112 + d);
    for (c = 0; 2 > c; ) (d = c++), (a.h[8122 + d] = 8048 + d);
    for (c = 0; 4 > c; ) (d = c++), (a.h[8136 + d] = 8050 + d);
    for (c = 0; 2 > c; ) (d = c++), (a.h[8152 + d] = 8144 + d);
    for (c = 0; 2 > c; ) (d = c++), (a.h[8154 + d] = 8054 + d);
    for (c = 0; 2 > c; ) (d = c++), (a.h[8168 + d] = 8160 + d);
    for (c = 0; 2 > c; ) (d = c++), (a.h[8170 + d] = 8058 + d);
    a.h[8172] = 8165;
    for (c = 0; 2 > c; ) (d = c++), (a.h[8184 + d] = 8056 + d);
    for (c = 0; 2 > c; ) (d = c++), (a.h[8186 + d] = 8060 + d);
    a.h[8486] = 969;
    a.h[8490] = 107;
    a.h[8491] = 229;
    a.h[8498] = 8526;
    a.h[8579] = 8580;
    for (c = 0; 47 > c; ) (d = c++), (a.h[11264 + d] = 11312 + d);
    a.h[11360] = 11361;
    a.h[11362] = 619;
    a.h[11363] = 7549;
    for (a.h[11364] = 637; 6 > b; ) (a.h[11367 + b] = 11368 + b), (b += 2);
    b = 0;
    a.h[11373] = 593;
    a.h[11374] = 625;
    a.h[11375] = 592;
    a.h[11376] = 594;
    a.h[11378] = 11379;
    a.h[11381] = 11382;
    for (c = 0; 2 > c; ) (d = c++), (a.h[11390 + d] = 575 + d);
    for (; 100 > b; ) (a.h[11392 + b] = 11393 + b), (b += 2);
    for (b = 0; 4 > b; ) (a.h[11499 + b] = 11500 + b), (b += 2);
    b = 0;
    for (a.h[11506] = 11507; 46 > b; ) (a.h[42560 + b] = 42561 + b), (b += 2);
    for (b = 0; 28 > b; ) (a.h[42624 + b] = 42625 + b), (b += 2);
    for (b = 0; 14 > b; ) (a.h[42786 + b] = 42787 + b), (b += 2);
    for (b = 0; 62 > b; ) (a.h[42802 + b] = 42803 + b), (b += 2);
    for (b = 0; 4 > b; ) (a.h[42873 + b] = 42874 + b), (b += 2);
    b = 0;
    for (a.h[42877] = 7545; 10 > b; ) (a.h[42878 + b] = 42879 + b), (b += 2);
    b = 0;
    a.h[42891] = 42892;
    for (a.h[42893] = 613; 4 > b; ) (a.h[42896 + b] = 42897 + b), (b += 2);
    for (b = 0; 20 > b; ) (a.h[42902 + b] = 42903 + b), (b += 2);
    b = 0;
    a.h[42922] = 614;
    a.h[42923] = 604;
    a.h[42924] = 609;
    a.h[42925] = 620;
    a.h[42926] = 618;
    a.h[42928] = 670;
    a.h[42929] = 647;
    a.h[42930] = 669;
    for (a.h[42931] = 43859; 4 > b; ) (a.h[42932 + b] = 42933 + b), (b += 2);
    for (b = 0; 26 > b; ) (c = b++), (a.h[65313 + c] = 65345 + c);
    for (b = 0; 40 > b; ) (c = b++), (a.h[66560 + c] = 66600 + c);
    for (b = 0; 36 > b; ) (c = b++), (a.h[66736 + c] = 66776 + c);
    for (b = 0; 51 > b; ) (c = b++), (a.h[68736 + c] = 68800 + c);
    for (b = 0; 32 > b; ) (c = b++), (a.h[71840 + c] = 71872 + c);
    for (b = 0; 34 > b; ) (c = b++), (a.h[125184 + c] = 125218 + c);
  };
  et.fillLowerToUpperMap = function (a) {
    for (var b = 0, c = 0; 26 > c; ) {
      var d = c++;
      a.h[97 + d] = 65 + d;
    }
    a.h[181] = 924;
    for (c = 0; 23 > c; ) (d = c++), (a.h[224 + d] = 192 + d);
    for (c = 0; 7 > c; ) (d = c++), (a.h[248 + d] = 216 + d);
    for (a.h[255] = 376; 48 > b; ) (a.h[257 + b] = 256 + b), (b += 2);
    b = 0;
    for (a.h[305] = 73; 6 > b; ) (a.h[307 + b] = 306 + b), (b += 2);
    for (b = 0; 16 > b; ) (a.h[314 + b] = 313 + b), (b += 2);
    for (b = 0; 46 > b; ) (a.h[331 + b] = 330 + b), (b += 2);
    for (b = 0; 6 > b; ) (a.h[378 + b] = 377 + b), (b += 2);
    b = 0;
    a.h[383] = 83;
    for (a.h[384] = 579; 4 > b; ) (a.h[387 + b] = 386 + b), (b += 2);
    b = 0;
    a.h[392] = 391;
    a.h[396] = 395;
    a.h[402] = 401;
    a.h[405] = 502;
    a.h[409] = 408;
    a.h[410] = 573;
    for (a.h[414] = 544; 6 > b; ) (a.h[417 + b] = 416 + b), (b += 2);
    b = 0;
    a.h[424] = 423;
    a.h[429] = 428;
    for (a.h[432] = 431; 4 > b; ) (a.h[436 + b] = 435 + b), (b += 2);
    b = 0;
    a.h[441] = 440;
    a.h[445] = 444;
    a.h[447] = 503;
    a.h[454] = 452;
    a.h[457] = 455;
    for (a.h[460] = 458; 16 > b; ) (a.h[462 + b] = 461 + b), (b += 2);
    b = 0;
    for (a.h[477] = 398; 18 > b; ) (a.h[479 + b] = 478 + b), (b += 2);
    b = 0;
    a.h[496] = 74;
    a.h[499] = 497;
    for (a.h[501] = 500; 40 > b; ) (a.h[505 + b] = 504 + b), (b += 2);
    for (b = 0; 18 > b; ) (a.h[547 + b] = 546 + b), (b += 2);
    b = 0;
    a.h[572] = 571;
    for (c = 0; 2 > c; ) (d = c++), (a.h[575 + d] = 11390 + d);
    for (a.h[578] = 577; 10 > b; ) (a.h[583 + b] = 582 + b), (b += 2);
    b = 0;
    a.h[592] = 11375;
    a.h[593] = 11373;
    a.h[594] = 11376;
    a.h[595] = 385;
    a.h[596] = 390;
    for (c = 0; 2 > c; ) (d = c++), (a.h[598 + d] = 393 + d);
    a.h[601] = 399;
    a.h[603] = 400;
    a.h[604] = 42923;
    a.h[608] = 403;
    a.h[609] = 42924;
    a.h[611] = 404;
    a.h[613] = 42893;
    a.h[614] = 42922;
    a.h[616] = 407;
    a.h[617] = 406;
    a.h[618] = 42926;
    a.h[619] = 11362;
    a.h[620] = 42925;
    a.h[623] = 412;
    a.h[625] = 11374;
    a.h[626] = 413;
    a.h[629] = 415;
    a.h[637] = 11364;
    a.h[640] = 422;
    a.h[643] = 425;
    a.h[647] = 42929;
    a.h[648] = 430;
    a.h[649] = 580;
    for (c = 0; 2 > c; ) (d = c++), (a.h[650 + d] = 433 + d);
    a.h[652] = 581;
    a.h[658] = 439;
    a.h[669] = 42930;
    for (a.h[670] = 42928; 4 > b; ) (a.h[881 + b] = 880 + b), (b += 2);
    b = 0;
    a.h[887] = 886;
    for (c = 0; 3 > c; ) (d = c++), (a.h[891 + d] = 1021 + d);
    a.h[912] = 938;
    a.h[940] = 902;
    for (c = 0; 3 > c; ) (d = c++), (a.h[941 + d] = 904 + d);
    a.h[944] = 939;
    for (c = 0; 17 > c; ) (d = c++), (a.h[945 + d] = 913 + d);
    a.h[962] = 931;
    for (c = 0; 9 > c; ) (d = c++), (a.h[963 + d] = 931 + d);
    a.h[972] = 908;
    for (c = 0; 2 > c; ) (d = c++), (a.h[973 + d] = 910 + d);
    a.h[976] = 914;
    a.h[977] = 920;
    a.h[981] = 934;
    a.h[982] = 928;
    for (a.h[983] = 975; 24 > b; ) (a.h[985 + b] = 984 + b), (b += 2);
    b = 0;
    a.h[1008] = 922;
    a.h[1009] = 929;
    a.h[1010] = 1017;
    a.h[1011] = 895;
    a.h[1013] = 917;
    a.h[1016] = 1015;
    a.h[1019] = 1018;
    for (c = 0; 32 > c; ) (d = c++), (a.h[1072 + d] = 1040 + d);
    for (c = 0; 16 > c; ) (d = c++), (a.h[1104 + d] = 1024 + d);
    for (; 34 > b; ) (a.h[1121 + b] = 1120 + b), (b += 2);
    for (b = 0; 54 > b; ) (a.h[1163 + b] = 1162 + b), (b += 2);
    for (b = 0; 14 > b; ) (a.h[1218 + b] = 1217 + b), (b += 2);
    b = 0;
    for (a.h[1231] = 1216; 96 > b; ) (a.h[1233 + b] = 1232 + b), (b += 2);
    for (c = b = 0; 38 > c; ) (d = c++), (a.h[1377 + d] = 1329 + d);
    for (c = 0; 6 > c; ) (d = c++), (a.h[5112 + d] = 5104 + d);
    a.h[7296] = 1042;
    a.h[7297] = 1044;
    a.h[7298] = 1054;
    for (c = 0; 2 > c; ) (d = c++), (a.h[7299 + d] = 1057 + d);
    a.h[7301] = 1058;
    a.h[7302] = 1066;
    a.h[7303] = 1122;
    a.h[7304] = 42570;
    a.h[7545] = 42877;
    for (a.h[7549] = 11363; 150 > b; ) (a.h[7681 + b] = 7680 + b), (b += 2);
    b = 0;
    a.h[7830] = 72;
    a.h[7831] = 84;
    a.h[7832] = 87;
    a.h[7833] = 89;
    for (a.h[7835] = 7776; 96 > b; ) (a.h[7841 + b] = 7840 + b), (b += 2);
    for (c = b = 0; 8 > c; ) (d = c++), (a.h[7936 + d] = 7944 + d);
    for (c = 0; 6 > c; ) (d = c++), (a.h[7952 + d] = 7960 + d);
    for (c = 0; 8 > c; ) (d = c++), (a.h[7968 + d] = 7976 + d);
    for (c = 0; 8 > c; ) (d = c++), (a.h[7984 + d] = 7992 + d);
    for (c = 0; 6 > c; ) (d = c++), (a.h[8e3 + d] = 8008 + d);
    a.h[8016] = 933;
    a.h[8017] = 8025;
    a.h[8018] = 933;
    a.h[8019] = 8027;
    a.h[8020] = 933;
    a.h[8021] = 8029;
    a.h[8022] = 933;
    a.h[8023] = 8031;
    for (c = 0; 8 > c; ) (d = c++), (a.h[8032 + d] = 8040 + d);
    for (c = 0; 2 > c; ) (d = c++), (a.h[8048 + d] = 8122 + d);
    for (c = 0; 4 > c; ) (d = c++), (a.h[8050 + d] = 8136 + d);
    for (c = 0; 2 > c; ) (d = c++), (a.h[8054 + d] = 8154 + d);
    for (c = 0; 2 > c; ) (d = c++), (a.h[8056 + d] = 8184 + d);
    for (c = 0; 2 > c; ) (d = c++), (a.h[8058 + d] = 8170 + d);
    for (c = 0; 2 > c; ) (d = c++), (a.h[8060 + d] = 8186 + d);
    for (c = 0; 8 > c; ) (d = c++), (a.h[8064 + d] = 8072 + d);
    for (c = 0; 8 > c; ) (d = c++), (a.h[8080 + d] = 8088 + d);
    for (c = 0; 8 > c; ) (d = c++), (a.h[8096 + d] = 8104 + d);
    for (c = 0; 3 > c; ) (d = c++), (a.h[8112 + d] = 8120 + d);
    a.h[8115] = 8124;
    a.h[8116] = 902;
    a.h[8118] = 913;
    a.h[8119] = 913;
    a.h[8126] = 921;
    a.h[8130] = 8138;
    a.h[8131] = 8140;
    a.h[8132] = 905;
    a.h[8134] = 919;
    a.h[8135] = 919;
    for (c = 0; 2 > c; ) (d = c++), (a.h[8144 + d] = 8152 + d);
    a.h[8146] = 938;
    a.h[8147] = 938;
    a.h[8150] = 921;
    a.h[8151] = 938;
    for (c = 0; 2 > c; ) (d = c++), (a.h[8160 + d] = 8168 + d);
    a.h[8162] = 939;
    a.h[8163] = 939;
    a.h[8164] = 929;
    a.h[8165] = 8172;
    a.h[8166] = 933;
    a.h[8167] = 939;
    a.h[8178] = 8186;
    a.h[8179] = 8188;
    a.h[8180] = 911;
    a.h[8182] = 937;
    a.h[8183] = 937;
    a.h[8526] = 8498;
    a.h[8580] = 8579;
    for (c = 0; 47 > c; ) (d = c++), (a.h[11312 + d] = 11264 + d);
    a.h[11361] = 11360;
    a.h[11365] = 570;
    for (a.h[11366] = 574; 6 > b; ) (a.h[11368 + b] = 11367 + b), (b += 2);
    b = 0;
    a.h[11379] = 11378;
    for (a.h[11382] = 11381; 100 > b; ) (a.h[11393 + b] = 11392 + b), (b += 2);
    for (b = 0; 4 > b; ) (a.h[11500 + b] = 11499 + b), (b += 2);
    b = 0;
    a.h[11507] = 11506;
    for (c = 0; 38 > c; ) (d = c++), (a.h[11520 + d] = 4256 + d);
    a.h[11559] = 4295;
    for (a.h[11565] = 4301; 46 > b; ) (a.h[42561 + b] = 42560 + b), (b += 2);
    for (b = 0; 28 > b; ) (a.h[42625 + b] = 42624 + b), (b += 2);
    for (b = 0; 14 > b; ) (a.h[42787 + b] = 42786 + b), (b += 2);
    for (b = 0; 62 > b; ) (a.h[42803 + b] = 42802 + b), (b += 2);
    for (b = 0; 4 > b; ) (a.h[42874 + b] = 42873 + b), (b += 2);
    for (b = 0; 10 > b; ) (a.h[42879 + b] = 42878 + b), (b += 2);
    b = 0;
    for (a.h[42892] = 42891; 4 > b; ) (a.h[42897 + b] = 42896 + b), (b += 2);
    for (b = 0; 20 > b; ) (a.h[42903 + b] = 42902 + b), (b += 2);
    for (b = 0; 4 > b; ) (a.h[42933 + b] = 42932 + b), (b += 2);
    a.h[43859] = 42931;
    for (b = 0; 80 > b; ) (c = b++), (a.h[43888 + c] = 5024 + c);
    for (b = 0; 26 > b; ) (c = b++), (a.h[65345 + c] = 65313 + c);
    for (b = 0; 40 > b; ) (c = b++), (a.h[66600 + c] = 66560 + c);
    for (b = 0; 36 > b; ) (c = b++), (a.h[66776 + c] = 66736 + c);
    for (b = 0; 51 > b; ) (c = b++), (a.h[68800 + c] = 68736 + c);
    for (b = 0; 32 > b; ) (c = b++), (a.h[71872 + c] = 71840 + c);
    for (b = 0; 34 > b; ) (c = b++), (a.h[125218 + c] = 125184 + c);
  };
  var Kt = function () {};
  p["lime.text.harfbuzz.HB"] = Kt;
  Kt.__name__ = ["lime", "text", "harfbuzz", "HB"];
  Kt.shape = function (a, b, c) {};
  var uh = {};
  p["lime.text.harfbuzz._HBBlob.HBBlob_Impl_"] = uh;
  uh.__name__ = ["lime", "text", "harfbuzz", "_HBBlob", "HBBlob_Impl_"];
  uh.__properties__ = {
    get_length: "get_length",
    get_immutable: "get_immutable",
    get_dataWritable: "get_dataWritable",
    get_data: "get_data",
    get_empty: "get_empty",
  };
  uh._new = function (a, b, c) {
    return null;
  };
  uh.createSubBlob = function (a, b, c) {
    return null;
  };
  uh.makeImmutable = function (a) {};
  uh.get_data = function (a) {
    return 0;
  };
  uh.get_dataWritable = function (a) {
    return 0;
  };
  uh.get_empty = function () {
    return null;
  };
  uh.get_immutable = function (a) {
    return !1;
  };
  uh.get_length = function (a) {
    return 0;
  };
  var hc = {};
  p["lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_"] = hc;
  hc.__name__ = ["lime", "text", "harfbuzz", "_HBBuffer", "HBBuffer_Impl_"];
  hc.__properties__ = {
    set_segmentProperties: "set_segmentProperties",
    get_segmentProperties: "get_segmentProperties",
    set_script: "set_script",
    get_script: "get_script",
    set_replacementCodepoint: "set_replacementCodepoint",
    get_replacementCodepoint: "get_replacementCodepoint",
    set_length: "set_length",
    get_length: "get_length",
    set_language: "set_language",
    get_language: "get_language",
    set_flags: "set_flags",
    get_flags: "get_flags",
    set_direction: "set_direction",
    get_direction: "get_direction",
    set_contentType: "set_contentType",
    get_contentType: "get_contentType",
    set_clusterLevel: "set_clusterLevel",
    get_clusterLevel: "get_clusterLevel",
    get_allocationSuccessful: "get_allocationSuccessful",
  };
  hc._new = function () {
    return null;
  };
  hc.add = function (a, b, c) {};
  hc.addCodepoints = function (a, b, c, d, e) {};
  hc.addUTF8 = function (a, b, c, d) {};
  hc.addUTF16 = function (a, b, c, d, e) {};
  hc.addUTF32 = function (a, b, c, d, e) {};
  hc.clearContents = function (a) {};
  hc.getGlyphInfo = function (a) {
    return null;
  };
  hc.getGlyphPositions = function (a) {
    return null;
  };
  hc.guessSegmentProperties = function (a) {};
  hc.normalizeGlyphs = function (a) {};
  hc.preallocate = function (a, b) {
    return !1;
  };
  hc.reset = function (a) {};
  hc.reverse = function (a) {};
  hc.reverseClusters = function (a) {};
  hc.get_allocationSuccessful = function (a) {
    return !1;
  };
  hc.get_clusterLevel = function (a) {
    return 0;
  };
  hc.set_clusterLevel = function (a, b) {
    return b;
  };
  hc.get_contentType = function (a) {
    return 0;
  };
  hc.set_contentType = function (a, b) {
    return b;
  };
  hc.get_direction = function (a) {
    return 0;
  };
  hc.set_direction = function (a, b) {
    return b;
  };
  hc.get_empty = function () {
    return null;
  };
  hc.get_flags = function (a) {
    return 0;
  };
  hc.set_flags = function (a, b) {
    return b;
  };
  hc.get_language = function (a) {
    return null;
  };
  hc.set_language = function (a, b) {
    return b;
  };
  hc.get_length = function (a) {
    return 0;
  };
  hc.set_length = function (a, b) {
    return b;
  };
  hc.get_replacementCodepoint = function (a) {
    return 0;
  };
  hc.set_replacementCodepoint = function (a, b) {
    return b;
  };
  hc.get_script = function (a) {
    return 0;
  };
  hc.set_script = function (a, b) {
    return b;
  };
  hc.get_segmentProperties = function (a) {
    return null;
  };
  hc.set_segmentProperties = function (a, b) {
    return b;
  };
  var Gn = {};
  p["lime.text.harfbuzz._HBFTFont.HBFTFont_Impl_"] = Gn;
  Gn.__name__ = ["lime", "text", "harfbuzz", "_HBFTFont", "HBFTFont_Impl_"];
  Gn.__properties__ = {
    set_loadFlags: "set_loadFlags",
    get_loadFlags: "get_loadFlags",
  };
  Gn._new = function (a) {
    return null;
  };
  Gn.get_loadFlags = function (a) {
    return 0;
  };
  Gn.set_loadFlags = function (a, b) {
    return b;
  };
  var $g = {};
  p["lime.text.harfbuzz._HBFace.HBFace_Impl_"] = $g;
  $g.__name__ = ["lime", "text", "harfbuzz", "_HBFace", "HBFace_Impl_"];
  $g.__properties__ = {
    set_upem: "set_upem",
    get_upem: "get_upem",
    set_index: "set_index",
    get_index: "get_index",
    get_immutable: "get_immutable",
    set_glyphCount: "set_glyphCount",
    get_glyphCount: "get_glyphCount",
    get_empty: "get_empty",
  };
  $g._new = function (a, b) {
    return null;
  };
  $g.get_empty = function () {
    return null;
  };
  $g.get_glyphCount = function (a) {
    return 0;
  };
  $g.set_glyphCount = function (a, b) {
    return b;
  };
  $g.get_immutable = function (a) {
    return !1;
  };
  $g.get_index = function (a) {
    return 0;
  };
  $g.set_index = function (a, b) {
    return b;
  };
  $g.get_upem = function (a) {
    return 0;
  };
  $g.set_upem = function (a, b) {
    return b;
  };
  var ft = function () {};
  p["lime.text.harfbuzz.HBFeature"] = ft;
  ft.__name__ = ["lime", "text", "harfbuzz", "HBFeature"];
  ft.prototype = { __class__: ft };
  var Be = {};
  p["lime.text.harfbuzz._HBFont.HBFont_Impl_"] = Be;
  Be.__name__ = ["lime", "text", "harfbuzz", "_HBFont", "HBFont_Impl_"];
  Be.__properties__ = {
    set_scale: "set_scale",
    get_scale: "get_scale",
    set_ppem: "set_ppem",
    get_ppem: "get_ppem",
    get_parent: "get_parent",
    get_immutable: "get_immutable",
    get_face: "get_face",
    get_empty: "get_empty",
  };
  Be._new = function (a) {
    return null;
  };
  Be.addGlyphOriginForDirection = function (a, b, c, d, e) {};
  Be.createSubFont = function (a) {
    return null;
  };
  Be.getGlyphAdvanceForDirection = function (a, b, c) {
    return null;
  };
  Be.getGlyphKerningForDirection = function (a, b, c, d, e) {
    return null;
  };
  Be.getGlyphOriginForDirection = function (a, b, c) {
    return null;
  };
  Be.glyphFromString = function (a, b) {
    return 0;
  };
  Be.glyphToString = function (a, b) {
    return null;
  };
  Be.makeImmutable = function (a) {};
  Be.subtractGlyphOriginForDirection = function (a, b, c, d, e) {};
  Be.get_empty = function () {
    return null;
  };
  Be.get_face = function (a) {
    return null;
  };
  Be.get_immutable = function (a) {
    return !1;
  };
  Be.get_parent = function (a) {
    return null;
  };
  Be.get_ppem = function (a) {
    return null;
  };
  Be.set_ppem = function (a, b) {
    return b;
  };
  Be.get_scale = function (a) {
    return null;
  };
  Be.set_scale = function (a, b) {
    return b;
  };
  var gt = function () {};
  p["lime.text.harfbuzz.HBGlyphInfo"] = gt;
  gt.__name__ = ["lime", "text", "harfbuzz", "HBGlyphInfo"];
  gt.prototype = { codepoint: null, mask: null, cluster: null, __class__: gt };
  var ht = function () {};
  p["lime.text.harfbuzz.HBGlyphPosition"] = ht;
  ht.__name__ = ["lime", "text", "harfbuzz", "HBGlyphPosition"];
  ht.prototype = {
    xAdvance: null,
    xOffset: null,
    yAdvance: null,
    yOffset: null,
    __class__: ht,
  };
  var Fk = {};
  p["lime.text.harfbuzz._HBLanguage.HBLanguage_Impl_"] = Fk;
  Fk.__name__ = ["lime", "text", "harfbuzz", "_HBLanguage", "HBLanguage_Impl_"];
  Fk._new = function (a) {
    return null;
  };
  Fk.toString = function (a) {
    return null;
  };
  Fk.fromString = function (a) {
    return Fk._new(a);
  };
  var it = function () {};
  p["lime.text.harfbuzz.HBSegmentProperties"] = it;
  it.__name__ = ["lime", "text", "harfbuzz", "HBSegmentProperties"];
  it.prototype = { __class__: it };
  var Ld = function (a) {
    this.onDisconnect = new Md();
    this.onButtonUp = new zn();
    this.onButtonDown = new zn();
    this.onAxisMove = new aq();
    this.id = a;
    this.connected = !0;
  };
  p["lime.ui.Gamepad"] = Ld;
  Ld.__name__ = ["lime", "ui", "Gamepad"];
  Ld.addMappings = function (a) {};
  Ld.__connect = function (a) {
    if (!Ld.devices.h.hasOwnProperty(a)) {
      var b = new Ld(a);
      Ld.devices.h[a] = b;
      Ld.onConnect.dispatch(b);
    }
  };
  Ld.__disconnect = function (a) {
    var b = Ld.devices.h[a];
    null != b && (b.connected = !1);
    Ld.devices.remove(a);
    null != b && b.onDisconnect.dispatch();
  };
  Ld.prototype = {
    connected: null,
    id: null,
    onAxisMove: null,
    onButtonDown: null,
    onButtonUp: null,
    onDisconnect: null,
    get_guid: function () {
      return Xc.__getDeviceData()[this.id].id;
    },
    get_name: function () {
      return Xc.__getDeviceData()[this.id].id;
    },
    __class__: Ld,
    __properties__: { get_name: "get_name", get_guid: "get_guid" },
  };
  var Ei = {};
  p["lime.ui._GamepadAxis.GamepadAxis_Impl_"] = Ei;
  Ei.__name__ = ["lime", "ui", "_GamepadAxis", "GamepadAxis_Impl_"];
  Ei.toString = function (a) {
    switch (a) {
      case 0:
        return "LEFT_X";
      case 1:
        return "LEFT_Y";
      case 2:
        return "RIGHT_X";
      case 3:
        return "RIGHT_Y";
      case 4:
        return "TRIGGER_LEFT";
      case 5:
        return "TRIGGER_RIGHT";
      default:
        return "UNKNOWN (" + a + ")";
    }
  };
  var df = {};
  p["lime.ui._GamepadButton.GamepadButton_Impl_"] = df;
  df.__name__ = ["lime", "ui", "_GamepadButton", "GamepadButton_Impl_"];
  df.toString = function (a) {
    switch (a) {
      case 0:
        return "A";
      case 1:
        return "B";
      case 2:
        return "X";
      case 3:
        return "Y";
      case 4:
        return "BACK";
      case 5:
        return "GUIDE";
      case 6:
        return "START";
      case 7:
        return "LEFT_STICK";
      case 8:
        return "RIGHT_STICK";
      case 9:
        return "LEFT_SHOULDER";
      case 10:
        return "RIGHT_SHOULDER";
      case 11:
        return "DPAD_UP";
      case 12:
        return "DPAD_DOWN";
      case 13:
        return "DPAD_LEFT";
      case 14:
        return "DPAD_RIGHT";
      default:
        return "UNKNOWN (" + a + ")";
    }
  };
  var Xc = function (a) {
    this.onTrackballMove = new Xp();
    this.onHatMove = new Zp();
    this.onDisconnect = new Md();
    this.onButtonUp = new Ci();
    this.onButtonDown = new Ci();
    this.onAxisMove = new Yp();
    this.id = a;
    this.connected = !0;
  };
  p["lime.ui.Joystick"] = Xc;
  Xc.__name__ = ["lime", "ui", "Joystick"];
  Xc.__connect = function (a) {
    if (!Xc.devices.h.hasOwnProperty(a)) {
      var b = new Xc(a);
      Xc.devices.h[a] = b;
      Xc.onConnect.dispatch(b);
    }
  };
  Xc.__disconnect = function (a) {
    var b = Xc.devices.h[a];
    null != b && (b.connected = !1);
    Xc.devices.remove(a);
    null != b && b.onDisconnect.dispatch();
  };
  Xc.__getDeviceData = function () {
    return navigator.getGamepads
      ? navigator.getGamepads()
      : navigator.webkitGetGamepads
      ? navigator.webkitGetGamepads()
      : null;
  };
  Xc.prototype = {
    connected: null,
    id: null,
    onAxisMove: null,
    onButtonDown: null,
    onButtonUp: null,
    onDisconnect: null,
    onHatMove: null,
    onTrackballMove: null,
    get_guid: function () {
      return Xc.__getDeviceData()[this.id].id;
    },
    get_name: function () {
      return Xc.__getDeviceData()[this.id].id;
    },
    get_numAxes: function () {
      return Xc.__getDeviceData()[this.id].axes.length;
    },
    get_numButtons: function () {
      return Xc.__getDeviceData()[this.id].buttons.length;
    },
    get_numHats: function () {
      return 0;
    },
    get_numTrackballs: function () {
      return 0;
    },
    __class__: Xc,
    __properties__: {
      get_numTrackballs: "get_numTrackballs",
      get_numHats: "get_numHats",
      get_numButtons: "get_numButtons",
      get_numAxes: "get_numAxes",
      get_name: "get_name",
      get_guid: "get_guid",
    },
  };
  var ie = {};
  p["lime.ui._JoystickHatPosition.JoystickHatPosition_Impl_"] = ie;
  ie.__name__ = [
    "lime",
    "ui",
    "_JoystickHatPosition",
    "JoystickHatPosition_Impl_",
  ];
  ie.__properties__ = {
    set_up: "set_up",
    get_up: "get_up",
    set_right: "set_right",
    get_right: "get_right",
    set_left: "set_left",
    get_left: "get_left",
    set_down: "set_down",
    get_down: "get_down",
    set_center: "set_center",
    get_center: "get_center",
  };
  ie._new = function (a) {
    return a;
  };
  ie.get_center = function (a) {
    return 0 == a;
  };
  ie.set_center = function (a, b) {
    return b;
  };
  ie.get_down = function (a) {
    return 0 < (a & 4);
  };
  ie.set_down = function (a, b) {
    return b;
  };
  ie.get_left = function (a) {
    return 0 < (a & 8);
  };
  ie.set_left = function (a, b) {
    return b;
  };
  ie.get_right = function (a) {
    return 0 < (a & 2);
  };
  ie.set_right = function (a, b) {
    return b;
  };
  ie.get_up = function (a) {
    return 0 < (a & 1);
  };
  ie.set_up = function (a, b) {
    return b;
  };
  var I = {};
  p["lime.ui._KeyCode.KeyCode_Impl_"] = I;
  I.__name__ = ["lime", "ui", "_KeyCode", "KeyCode_Impl_"];
  I.fromScanCode = function (a) {
    return 0;
  };
  I.toScanCode = function (a) {
    return 0;
  };
  I.gt = function (a, b) {
    return a > b;
  };
  I.gte = function (a, b) {
    return a >= b;
  };
  I.lt = function (a, b) {
    return a < b;
  };
  I.lte = function (a, b) {
    return a <= b;
  };
  I.plus = function (a, b) {
    return a + b;
  };
  var Za = {};
  p["lime.ui._KeyModifier.KeyModifier_Impl_"] = Za;
  Za.__name__ = ["lime", "ui", "_KeyModifier", "KeyModifier_Impl_"];
  Za.__properties__ = {
    set_shiftKey: "set_shiftKey",
    get_shiftKey: "get_shiftKey",
    set_numLock: "set_numLock",
    get_numLock: "get_numLock",
    set_metaKey: "set_metaKey",
    get_metaKey: "get_metaKey",
    set_ctrlKey: "set_ctrlKey",
    get_ctrlKey: "get_ctrlKey",
    set_capsLock: "set_capsLock",
    get_capsLock: "get_capsLock",
    set_altKey: "set_altKey",
    get_altKey: "get_altKey",
  };
  Za.get_altKey = function (a) {
    return 0 >= (a & 256) ? 0 < (a & 512) : !0;
  };
  Za.set_altKey = function (a, b) {
    return b;
  };
  Za.get_capsLock = function (a) {
    return 0 >= (a & 8192) ? 0 < (a & 8192) : !0;
  };
  Za.set_capsLock = function (a, b) {
    return b;
  };
  Za.get_ctrlKey = function (a) {
    return 0 >= (a & 64) ? 0 < (a & 128) : !0;
  };
  Za.set_ctrlKey = function (a, b) {
    return b;
  };
  Za.get_metaKey = function (a) {
    return 0 >= (a & 1024) ? 0 < (a & 2048) : !0;
  };
  Za.set_metaKey = function (a, b) {
    return b;
  };
  Za.get_numLock = function (a) {
    return 0 >= (a & 4096) ? 0 < (a & 4096) : !0;
  };
  Za.set_numLock = function (a, b) {
    return b;
  };
  Za.get_shiftKey = function (a) {
    return 0 >= (a & 1) ? 0 < (a & 2) : !0;
  };
  Za.set_shiftKey = function (a, b) {
    return b;
  };
  var Ka = (p["lime.ui.MouseCursor"] = {
    __ename__: ["lime", "ui", "MouseCursor"],
    __constructs__:
      "ARROW CROSSHAIR DEFAULT MOVE POINTER RESIZE_NESW RESIZE_NS RESIZE_NWSE RESIZE_WE TEXT WAIT WAIT_ARROW CUSTOM".split(
        " "
      ),
  });
  Ka.ARROW = ["ARROW", 0];
  Ka.ARROW.toString = M;
  Ka.ARROW.__enum__ = Ka;
  Ka.CROSSHAIR = ["CROSSHAIR", 1];
  Ka.CROSSHAIR.toString = M;
  Ka.CROSSHAIR.__enum__ = Ka;
  Ka.DEFAULT = ["DEFAULT", 2];
  Ka.DEFAULT.toString = M;
  Ka.DEFAULT.__enum__ = Ka;
  Ka.MOVE = ["MOVE", 3];
  Ka.MOVE.toString = M;
  Ka.MOVE.__enum__ = Ka;
  Ka.POINTER = ["POINTER", 4];
  Ka.POINTER.toString = M;
  Ka.POINTER.__enum__ = Ka;
  Ka.RESIZE_NESW = ["RESIZE_NESW", 5];
  Ka.RESIZE_NESW.toString = M;
  Ka.RESIZE_NESW.__enum__ = Ka;
  Ka.RESIZE_NS = ["RESIZE_NS", 6];
  Ka.RESIZE_NS.toString = M;
  Ka.RESIZE_NS.__enum__ = Ka;
  Ka.RESIZE_NWSE = ["RESIZE_NWSE", 7];
  Ka.RESIZE_NWSE.toString = M;
  Ka.RESIZE_NWSE.__enum__ = Ka;
  Ka.RESIZE_WE = ["RESIZE_WE", 8];
  Ka.RESIZE_WE.toString = M;
  Ka.RESIZE_WE.__enum__ = Ka;
  Ka.TEXT = ["TEXT", 9];
  Ka.TEXT.toString = M;
  Ka.TEXT.__enum__ = Ka;
  Ka.WAIT = ["WAIT", 10];
  Ka.WAIT.toString = M;
  Ka.WAIT.__enum__ = Ka;
  Ka.WAIT_ARROW = ["WAIT_ARROW", 11];
  Ka.WAIT_ARROW.toString = M;
  Ka.WAIT_ARROW.__enum__ = Ka;
  Ka.CUSTOM = ["CUSTOM", 12];
  Ka.CUSTOM.toString = M;
  Ka.CUSTOM.__enum__ = Ka;
  var ze = (p["lime.ui.MouseWheelMode"] = {
    __ename__: ["lime", "ui", "MouseWheelMode"],
    __constructs__: ["PIXELS", "LINES", "PAGES", "UNKNOWN"],
  });
  ze.PIXELS = ["PIXELS", 0];
  ze.PIXELS.toString = M;
  ze.PIXELS.__enum__ = ze;
  ze.LINES = ["LINES", 1];
  ze.LINES.toString = M;
  ze.LINES.__enum__ = ze;
  ze.PAGES = ["PAGES", 2];
  ze.PAGES.toString = M;
  ze.PAGES.__enum__ = ze;
  ze.UNKNOWN = ["UNKNOWN", 3];
  ze.UNKNOWN.toString = M;
  ze.UNKNOWN.__enum__ = ze;
  var N = {};
  p["lime.ui._ScanCode.ScanCode_Impl_"] = N;
  N.__name__ = ["lime", "ui", "_ScanCode", "ScanCode_Impl_"];
  N.fromKeyCode = function (a) {
    return I.toScanCode(a);
  };
  N.toKeyCode = function (a) {
    return I.fromScanCode(a);
  };
  N.gt = function (a, b) {
    return a > b;
  };
  N.gte = function (a, b) {
    return a >= b;
  };
  N.lt = function (a, b) {
    return a < b;
  };
  N.lte = function (a, b) {
    return a <= b;
  };
  N.plus = function (a, b) {
    return a + b;
  };
  var pd = function (a, b, c, d, e, f, g) {
    this.x = a;
    this.y = b;
    this.id = c;
    this.dx = d;
    this.dy = e;
    this.pressure = f;
    this.device = g;
  };
  p["lime.ui.Touch"] = pd;
  pd.__name__ = ["lime", "ui", "Touch"];
  pd.prototype = {
    device: null,
    dx: null,
    dy: null,
    id: null,
    pressure: null,
    x: null,
    y: null,
    __class__: pd,
  };
  var qj = function (a, b) {
    this.onTextInput = new xn();
    this.onTextEdit = new $p();
    this.onRestore = new Md();
    this.onResize = new wn();
    this.onRenderContextRestored = new yn();
    this.onRenderContextLost = new Md();
    this.onRender = new yn();
    this.onMove = new Ak();
    this.onMouseWheel = new Wp();
    this.onMouseUp = new Up();
    this.onMouseMoveRelative = new Ak();
    this.onMouseMove = new Ak();
    this.onMouseDown = new Vp();
    this.onMinimize = new Md();
    this.onMaximize = new Md();
    this.onLeave = new Md();
    this.onKeyUp = new An();
    this.onKeyDown = new An();
    this.onFullscreen = new Md();
    this.onFocusOut = new Md();
    this.onFocusIn = new Md();
    this.onExpose = new Md();
    this.onEnter = new Md();
    this.onDropFile = new xn();
    this.onDeactivate = new Md();
    this.onClose = new Md();
    this.onActivate = new Md();
    this.application = a;
    this.__attributes = null != b ? b : {};
    Object.prototype.hasOwnProperty.call(this.__attributes, "parameters") &&
      (this.parameters = this.__attributes.parameters);
    this.__height = this.__width = 0;
    this.__fullscreen = !1;
    this.__scale = 1;
    this.__y = this.__x = 0;
    this.__title = "";
    this.id = -1;
    this.__backend = new zb(this);
  };
  p["lime.ui.Window"] = qj;
  qj.__name__ = ["lime", "ui", "Window"];
  qj.prototype = {
    application: null,
    context: null,
    display: null,
    element: null,
    hidden: null,
    id: null,
    onActivate: null,
    onClose: null,
    onDeactivate: null,
    onDropFile: null,
    onEnter: null,
    onExpose: null,
    onFocusIn: null,
    onFocusOut: null,
    onFullscreen: null,
    onKeyDown: null,
    onKeyUp: null,
    onLeave: null,
    onMaximize: null,
    onMinimize: null,
    onMouseDown: null,
    onMouseMove: null,
    onMouseMoveRelative: null,
    onMouseUp: null,
    onMouseWheel: null,
    onMove: null,
    onRender: null,
    onRenderContextLost: null,
    onRenderContextRestored: null,
    onResize: null,
    onRestore: null,
    onTextEdit: null,
    onTextInput: null,
    parameters: null,
    scale: null,
    stage: null,
    __attributes: null,
    __backend: null,
    __borderless: null,
    __fullscreen: null,
    __height: null,
    __hidden: null,
    __maximized: null,
    __minimized: null,
    __resizable: null,
    __scale: null,
    __title: null,
    __width: null,
    __x: null,
    __y: null,
    alert: function (a, b) {
      this.__backend.alert(a, b);
    },
    close: function () {
      this.__backend.close();
    },
    focus: function () {
      this.__backend.focus();
    },
    move: function (a, b) {
      this.__backend.move(a, b);
      this.__x = a;
      this.__y = b;
    },
    readPixels: function (a) {
      return this.__backend.readPixels(a);
    },
    resize: function (a, b) {
      this.__backend.resize(a, b);
      this.__width = a;
      this.__height = b;
    },
    setIcon: function (a) {
      null != a && this.__backend.setIcon(a);
    },
    toString: function () {
      return "[object Window]";
    },
    warpMouse: function (a, b) {
      this.__backend.warpMouse(a, b);
    },
    get_cursor: function () {
      return this.__backend.getCursor();
    },
    set_cursor: function (a) {
      return this.__backend.setCursor(a);
    },
    get_display: function () {
      return this.__backend.getDisplay();
    },
    get_displayMode: function () {
      return this.__backend.getDisplayMode();
    },
    set_displayMode: function (a) {
      return this.__backend.setDisplayMode(a);
    },
    get_borderless: function () {
      return this.__borderless;
    },
    set_borderless: function (a) {
      return (this.__borderless = this.__backend.setBorderless(a));
    },
    get_frameRate: function () {
      return this.__backend.getFrameRate();
    },
    set_frameRate: function (a) {
      return this.__backend.setFrameRate(a);
    },
    get_fullscreen: function () {
      return this.__fullscreen;
    },
    set_fullscreen: function (a) {
      return (this.__fullscreen = this.__backend.setFullscreen(a));
    },
    get_height: function () {
      return this.__height;
    },
    set_height: function (a) {
      this.resize(this.__width, a);
      return this.__height;
    },
    get_hidden: function () {
      return this.__hidden;
    },
    get_maximized: function () {
      return this.__maximized;
    },
    set_maximized: function (a) {
      this.__minimized = !1;
      return (this.__maximized = this.__backend.setMaximized(a));
    },
    get_minimized: function () {
      return this.__minimized;
    },
    set_minimized: function (a) {
      this.__maximized = !1;
      return (this.__minimized = this.__backend.setMinimized(a));
    },
    get_mouseLock: function () {
      return this.__backend.getMouseLock();
    },
    set_mouseLock: function (a) {
      this.__backend.setMouseLock(a);
      return a;
    },
    get_resizable: function () {
      return this.__resizable;
    },
    set_resizable: function (a) {
      return (this.__resizable = this.__backend.setResizable(a));
    },
    get_scale: function () {
      return this.__scale;
    },
    get_textInputEnabled: function () {
      return this.__backend.getTextInputEnabled();
    },
    set_textInputEnabled: function (a) {
      return this.__backend.setTextInputEnabled(a);
    },
    get_title: function () {
      return this.__title;
    },
    set_title: function (a) {
      return (this.__title = this.__backend.setTitle(a));
    },
    get_width: function () {
      return this.__width;
    },
    set_width: function (a) {
      this.resize(a, this.__height);
      return this.__width;
    },
    get_x: function () {
      return this.__x;
    },
    set_x: function (a) {
      this.move(a, this.__y);
      return this.__x;
    },
    get_y: function () {
      return this.__y;
    },
    set_y: function (a) {
      this.move(this.__x, a);
      return this.__y;
    },
    __class__: qj,
    __properties__: {
      set_y: "set_y",
      get_y: "get_y",
      set_x: "set_x",
      get_x: "get_x",
      set_width: "set_width",
      get_width: "get_width",
      set_title: "set_title",
      get_title: "get_title",
      set_textInputEnabled: "set_textInputEnabled",
      get_textInputEnabled: "get_textInputEnabled",
      get_scale: "get_scale",
      set_resizable: "set_resizable",
      get_resizable: "get_resizable",
      set_mouseLock: "set_mouseLock",
      get_mouseLock: "get_mouseLock",
      set_minimized: "set_minimized",
      get_minimized: "get_minimized",
      set_maximized: "set_maximized",
      get_maximized: "get_maximized",
      get_hidden: "get_hidden",
      set_height: "set_height",
      get_height: "get_height",
      set_fullscreen: "set_fullscreen",
      get_fullscreen: "get_fullscreen",
      set_frameRate: "set_frameRate",
      get_frameRate: "get_frameRate",
      set_displayMode: "set_displayMode",
      get_displayMode: "get_displayMode",
      get_display: "get_display",
      set_cursor: "set_cursor",
      get_cursor: "get_cursor",
      set_borderless: "set_borderless",
      get_borderless: "get_borderless",
    },
  };
  var jt = (p["lime.utils.TAError"] = {
    __ename__: ["lime", "utils", "TAError"],
    __constructs__: ["RangeError"],
  });
  jt.RangeError = ["RangeError", 0];
  jt.RangeError.toString = M;
  jt.RangeError.__enum__ = jt;
  var lq = function () {
    this.enabled = !0;
    this.audio = new la();
    this.font = new la();
    this.image = new la();
    this.version = 313361;
  };
  p["lime.utils.AssetCache"] = lq;
  lq.__name__ = ["lime", "utils", "AssetCache"];
  lq.prototype = {
    audio: null,
    enabled: null,
    image: null,
    font: null,
    version: null,
    exists: function (a, b) {
      if ("IMAGE" == b || null == b) {
        var c = this.image;
        if (null != t[a] ? c.existsReserved(a) : c.h.hasOwnProperty(a))
          return !0;
      }
      if ("FONT" == b || null == b)
        if (
          ((c = this.font),
          null != t[a] ? c.existsReserved(a) : c.h.hasOwnProperty(a))
        )
          return !0;
      if ("SOUND" == b || "MUSIC" == b || null == b)
        if (
          ((b = this.audio),
          null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        )
          return !0;
      return !1;
    },
    set: function (a, b, c) {
      switch (b) {
        case "FONT":
          this.font.set(a, c);
          break;
        case "IMAGE":
          if (!u.__instanceof(c, pb))
            throw new v(
              "Cannot cache non-Image asset: " + P.string(c) + " as Image"
            );
          this.image.set(a, c);
          break;
        case "MUSIC":
        case "SOUND":
          if (!u.__instanceof(c, Qc))
            throw new v(
              "Cannot cache non-AudioBuffer asset: " +
                P.string(c) +
                " as AudioBuffer"
            );
          this.audio.set(a, c);
          break;
        default:
          throw new v(b + " assets are not cachable");
      }
    },
    clear: function (a) {
      if (null == a)
        (this.audio = new la()),
          (this.font = new la()),
          (this.image = new la());
      else {
        for (var b = this.audio.keys(); b.hasNext(); ) {
          var c = b.next();
          ba.startsWith(c, a) && this.audio.remove(c);
        }
        for (b = this.font.keys(); b.hasNext(); )
          (c = b.next()), ba.startsWith(c, a) && this.font.remove(c);
        for (b = this.image.keys(); b.hasNext(); )
          (c = b.next()), ba.startsWith(c, a) && this.image.remove(c);
      }
    },
    __class__: lq,
  };
  var ac = function () {
    this.types = new la();
    this.sizes = new la();
    this.preload = new la();
    this.paths = new la();
    this.pathGroups = new la();
    this.classTypes = new la();
    this.cachedText = new la();
    this.cachedImages = new la();
    this.cachedFonts = new la();
    this.cachedBytes = new la();
    this.cachedAudioBuffers = new la();
    this.onChange = new Md();
    this.bytesTotal = this.bytesLoaded = 0;
  };
  p["lime.utils.AssetLibrary"] = ac;
  ac.__name__ = ["lime", "utils", "AssetLibrary"];
  ac.fromBytes = function (a, b) {
    return ac.fromManifest(Zc.fromBytes(a, b));
  };
  ac.fromFile = function (a, b) {
    return ac.fromManifest(Zc.fromFile(a, b));
  };
  ac.fromManifest = function (a) {
    if (null == a) return null;
    if (null == a.libraryType) var b = new ac();
    else if (((b = qa.resolveClass(a.libraryType)), null != b))
      b = qa.createInstance(b, a.libraryArgs);
    else
      return (
        mb.warn("Could not find library type: " + a.libraryType, {
          fileName: "AssetLibrary.hx",
          lineNumber: 141,
          className: "lime.utils.AssetLibrary",
          methodName: "fromManifest",
        }),
        null
      );
    b.__fromManifest(a);
    return b;
  };
  ac.loadFromBytes = function (a, b) {
    return Zc.loadFromBytes(a, b).then(function (a) {
      return ac.loadFromManifest(a);
    });
  };
  ac.loadFromFile = function (a, b) {
    return Zc.loadFromFile(a, b).then(function (a) {
      return ac.loadFromManifest(a);
    });
  };
  ac.loadFromManifest = function (a) {
    a = ac.fromManifest(a);
    return null != a ? a.load() : ab.withError("Could not load asset manifest");
  };
  ac.prototype = {
    onChange: null,
    assetsLoaded: null,
    assetsTotal: null,
    bytesLoaded: null,
    bytesLoadedCache: null,
    bytesTotal: null,
    cachedAudioBuffers: null,
    cachedBytes: null,
    cachedFonts: null,
    cachedImages: null,
    cachedText: null,
    classTypes: null,
    loaded: null,
    pathGroups: null,
    paths: null,
    preload: null,
    promise: null,
    sizes: null,
    types: null,
    exists: function (a, b) {
      b = null != b ? u.__cast(b, String) : null;
      var c = this.types;
      a = null != t[a] ? c.getReserved(a) : c.h[a];
      return null == a ||
        (a != b &&
          (("SOUND" != b && "MUSIC" != b) || ("MUSIC" != a && "SOUND" != a)) &&
          "BINARY" != b &&
          null != b &&
          ("BINARY" != a || "TEXT" != b))
        ? !1
        : !0;
    },
    getAsset: function (a, b) {
      switch (b) {
        case "BINARY":
          return this.getBytes(a);
        case "FONT":
          return this.getFont(a);
        case "IMAGE":
          return this.getImage(a);
        case "MUSIC":
        case "SOUND":
          return this.getAudioBuffer(a);
        case "TEMPLATE":
          throw new v("Not sure how to get template: " + a);
        case "TEXT":
          return this.getText(a);
        default:
          throw new v("Unknown asset type: " + b);
      }
    },
    getAudioBuffer: function (a) {
      var b = this.cachedAudioBuffers;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (
          (b = this.cachedAudioBuffers),
          null != t[a] ? b.getReserved(a) : b.h[a]
        );
      b = this.classTypes;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (
          (b = this.classTypes),
          Qc.fromBytes(
            u.__cast(
              qa.createInstance(null != t[a] ? b.getReserved(a) : b.h[a], []),
              Ra
            )
          )
        );
      b = this.paths;
      return Qc.fromFile(null != t[a] ? b.getReserved(a) : b.h[a]);
    },
    getBytes: function (a) {
      var b = this.cachedBytes;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (b = this.cachedBytes), null != t[a] ? b.getReserved(a) : b.h[a];
      b = this.cachedText;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a)) {
        b = this.cachedText;
        b = Hc.ofString(null != t[a] ? b.getReserved(a) : b.h[a]);
        var c = this.cachedBytes;
        null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
        return b;
      }
      b = this.classTypes;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (
          (b = this.classTypes),
          u.__cast(
            qa.createInstance(null != t[a] ? b.getReserved(a) : b.h[a], []),
            Ra
          )
        );
      b = this.paths;
      return Hc.fromFile(null != t[a] ? b.getReserved(a) : b.h[a]);
    },
    getFont: function (a) {
      var b = this.cachedFonts;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (b = this.cachedFonts), null != t[a] ? b.getReserved(a) : b.h[a];
      b = this.classTypes;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (
          (b = this.classTypes),
          u.__cast(
            qa.createInstance(null != t[a] ? b.getReserved(a) : b.h[a], []),
            Od
          )
        );
      b = this.paths;
      return Od.fromFile(null != t[a] ? b.getReserved(a) : b.h[a]);
    },
    getImage: function (a) {
      var b = this.cachedImages;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (
          (b = this.cachedImages), null != t[a] ? b.getReserved(a) : b.h[a]
        );
      b = this.classTypes;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (
          (b = this.classTypes),
          u.__cast(
            qa.createInstance(null != t[a] ? b.getReserved(a) : b.h[a], []),
            pb
          )
        );
      b = this.paths;
      return pb.fromFile(null != t[a] ? b.getReserved(a) : b.h[a]);
    },
    getPath: function (a) {
      var b = this.paths;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (b = this.paths), null != t[a] ? b.getReserved(a) : b.h[a];
      b = this.pathGroups;
      return (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        ? ((b = this.pathGroups), (null != t[a] ? b.getReserved(a) : b.h[a])[0])
        : null;
    },
    getText: function (a) {
      var b = this.cachedText;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (b = this.cachedText), null != t[a] ? b.getReserved(a) : b.h[a];
      a = this.getBytes(a);
      return null == a ? null : a.getString(0, a.length);
    },
    isLocal: function (a, b) {
      var c = this.classTypes;
      if (null != t[a] ? c.existsReserved(a) : c.h.hasOwnProperty(a)) return !0;
      switch (null != b ? u.__cast(b, String) : null) {
        case "FONT":
          return this.cachedFonts.exists(a);
        case "IMAGE":
          return this.cachedImages.exists(a);
        case "MUSIC":
        case "SOUND":
          return this.cachedAudioBuffers.exists(a);
        default:
          return this.cachedBytes.exists(a) ? !0 : this.cachedText.exists(a);
      }
    },
    list: function (a) {
      for (
        var b = null != a ? u.__cast(a, String) : null,
          c = [],
          d = this.types.keys();
        d.hasNext();

      ) {
        var e = d.next();
        (null == b || this.exists(e, a)) && c.push(e);
      }
      return c;
    },
    loadAsset: function (a, b) {
      switch (b) {
        case "BINARY":
          return this.loadBytes(a);
        case "FONT":
          return this.loadFont(a);
        case "IMAGE":
          return this.loadImage(a);
        case "MUSIC":
        case "SOUND":
          return this.loadAudioBuffer(a);
        case "TEMPLATE":
          throw new v("Not sure how to load template: " + a);
        case "TEXT":
          return this.loadText(a);
        default:
          throw new v("Unknown asset type: " + b);
      }
    },
    load: function () {
      if (this.loaded) return ab.withValue(this);
      if (null == this.promise) {
        this.promise = new Zd();
        this.bytesLoadedCache = new la();
        this.assetsLoaded = 0;
        this.assetsTotal = 1;
        for (var a = this.preload.keys(); a.hasNext(); ) {
          var b = a.next(),
            c = this.preload;
          if (null != t[b] ? c.getReserved(b) : c.h[b])
            if (
              ((c = this.types),
              mb.verbose(
                "Preloading asset: " +
                  b +
                  " [" +
                  (null != t[b] ? c.getReserved(b) : c.h[b]) +
                  "]",
                {
                  fileName: "AssetLibrary.hx",
                  lineNumber: 453,
                  className: "lime.utils.AssetLibrary",
                  methodName: "load",
                }
              ),
              (c = this.types.get(b)),
              null != c)
            )
              switch (c) {
                case "BINARY":
                  this.assetsTotal++;
                  c = this.loadBytes(b);
                  c.onProgress(
                    (function (a, b) {
                      return function (c, d) {
                        b[0](a[0], c, d);
                      };
                    })([b], [B(this, this.load_onProgress)])
                  );
                  c.onError(
                    (function (a, b) {
                      return function (c) {
                        b[0](a[0], c);
                      };
                    })([b], [B(this, this.load_onError)])
                  );
                  c.onComplete(
                    (function (a, b) {
                      return function (c) {
                        b[0](a[0], c);
                      };
                    })([b], [B(this, this.loadBytes_onComplete)])
                  );
                  break;
                case "FONT":
                  this.assetsTotal++;
                  c = this.loadFont(b);
                  c.onProgress(
                    (function (a, b) {
                      return function (c, d) {
                        b[0](a[0], c, d);
                      };
                    })([b], [B(this, this.load_onProgress)])
                  );
                  c.onError(
                    (function (a, b) {
                      return function (c) {
                        b[0](a[0], c);
                      };
                    })([b], [B(this, this.load_onError)])
                  );
                  c.onComplete(
                    (function (a, b) {
                      return function (c) {
                        b[0](a[0], c);
                      };
                    })([b], [B(this, this.loadFont_onComplete)])
                  );
                  break;
                case "IMAGE":
                  this.assetsTotal++;
                  c = this.loadImage(b);
                  c.onProgress(
                    (function (a, b) {
                      return function (c, d) {
                        b[0](a[0], c, d);
                      };
                    })([b], [B(this, this.load_onProgress)])
                  );
                  c.onError(
                    (function (a, b) {
                      return function (c) {
                        b[0](a[0], c);
                      };
                    })([b], [B(this, this.load_onError)])
                  );
                  c.onComplete(
                    (function (a, b) {
                      return function (c) {
                        b[0](a[0], c);
                      };
                    })([b], [B(this, this.loadImage_onComplete)])
                  );
                  break;
                case "MUSIC":
                case "SOUND":
                  this.assetsTotal++;
                  c = this.loadAudioBuffer(b);
                  c.onProgress(
                    (function (a, b) {
                      return function (c, d) {
                        b[0](a[0], c, d);
                      };
                    })([b], [B(this, this.load_onProgress)])
                  );
                  c.onError(
                    (function (a, b) {
                      return function (c) {
                        b[0](a[0], c);
                      };
                    })([b], [B(this, this.loadAudioBuffer_onError)])
                  );
                  c.onComplete(
                    (function (a, b) {
                      return function (c) {
                        b[0](a[0], c);
                      };
                    })([b], [B(this, this.loadAudioBuffer_onComplete)])
                  );
                  break;
                case "TEXT":
                  this.assetsTotal++,
                    (c = this.loadText(b)),
                    c.onProgress(
                      (function (a, b) {
                        return function (c, d) {
                          b[0](a[0], c, d);
                        };
                      })([b], [B(this, this.load_onProgress)])
                    ),
                    c.onError(
                      (function (a, b) {
                        return function (c) {
                          b[0](a[0], c);
                        };
                      })([b], [B(this, this.load_onError)])
                    ),
                    c.onComplete(
                      (function (a, b) {
                        return function (c) {
                          b[0](a[0], c);
                        };
                      })([b], [B(this, this.loadText_onComplete)])
                    );
              }
        }
        this.__assetLoaded(null);
      }
      return this.promise.future;
    },
    loadAudioBuffer: function (a) {
      var b = this.cachedAudioBuffers;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (
          (b = this.cachedAudioBuffers),
          ab.withValue(null != t[a] ? b.getReserved(a) : b.h[a])
        );
      b = this.classTypes;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (
          (b = this.classTypes),
          ab.withValue(
            qa.createInstance(null != t[a] ? b.getReserved(a) : b.h[a], [])
          )
        );
      b = this.pathGroups;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (
          (b = this.pathGroups),
          Qc.loadFromFiles(null != t[a] ? b.getReserved(a) : b.h[a])
        );
      b = this.paths;
      return Qc.loadFromFile(null != t[a] ? b.getReserved(a) : b.h[a]);
    },
    loadBytes: function (a) {
      var b = this.cachedBytes;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (
          (b = this.cachedBytes),
          ab.withValue(null != t[a] ? b.getReserved(a) : b.h[a])
        );
      b = this.classTypes;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (
          (b = this.classTypes),
          ab.withValue(
            qa.createInstance(null != t[a] ? b.getReserved(a) : b.h[a], [])
          )
        );
      b = this.paths;
      return Hc.loadFromFile(null != t[a] ? b.getReserved(a) : b.h[a]);
    },
    loadFont: function (a) {
      var b = this.cachedFonts;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (
          (b = this.cachedFonts),
          ab.withValue(null != t[a] ? b.getReserved(a) : b.h[a])
        );
      b = this.classTypes;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (
          (b = this.classTypes),
          (a = qa.createInstance(null != t[a] ? b.getReserved(a) : b.h[a], [])),
          a.__loadFromName(a.name)
        );
      b = this.paths;
      return Od.loadFromName(null != t[a] ? b.getReserved(a) : b.h[a]);
    },
    loadImage: function (a) {
      var b = this.cachedImages;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (
          (b = this.cachedImages),
          ab.withValue(null != t[a] ? b.getReserved(a) : b.h[a])
        );
      b = this.classTypes;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (
          (b = this.classTypes),
          ab.withValue(
            qa.createInstance(null != t[a] ? b.getReserved(a) : b.h[a], [])
          )
        );
      b = this.paths;
      return pb.loadFromFile(null != t[a] ? b.getReserved(a) : b.h[a]);
    },
    loadText: function (a) {
      var b = this.cachedText;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        return (
          (b = this.cachedText),
          ab.withValue(null != t[a] ? b.getReserved(a) : b.h[a])
        );
      b = this.cachedBytes;
      (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        ? (b = !0)
        : ((b = this.classTypes),
          (b = null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a)));
      if (b) {
        b = this.getBytes(a);
        if (null == b) return ab.withValue(null);
        b = b.getString(0, b.length);
        var c = this.cachedText;
        null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
        return ab.withValue(b);
      }
      b = new Ek();
      c = this.paths;
      return b.load(null != t[a] ? c.getReserved(a) : c.h[a]);
    },
    unload: function () {},
    __assetLoaded: function (a) {
      this.assetsLoaded++;
      if (null != a) {
        var b = this.types;
        mb.verbose(
          "Loaded asset: " +
            a +
            " [" +
            (null != t[a] ? b.getReserved(a) : b.h[a]) +
            "] (" +
            (this.assetsLoaded - 1) +
            "/" +
            (this.assetsTotal - 1) +
            ")",
          {
            fileName: "AssetLibrary.hx",
            lineNumber: 699,
            className: "lime.utils.AssetLibrary",
            methodName: "__assetLoaded",
          }
        );
      }
      if (null != a) {
        b = this.sizes;
        b = null != t[a] ? b.getReserved(a) : b.h[a];
        var c = this.bytesLoadedCache;
        (null != t[a] ? c.existsReserved(a) : c.h.hasOwnProperty(a))
          ? ((c = this.bytesLoadedCache),
            (c = null != t[a] ? c.getReserved(a) : c.h[a]),
            c < b && (this.bytesLoaded += b - c))
          : (this.bytesLoaded += b);
        c = this.bytesLoadedCache;
        null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
      }
      this.assetsLoaded < this.assetsTotal
        ? this.promise.progress(this.bytesLoaded, this.bytesTotal)
        : ((this.loaded = !0),
          this.promise.progress(this.bytesTotal, this.bytesTotal),
          this.promise.complete(this));
    },
    __cacheBreak: function (a) {
      return ka.__cacheBreak(a);
    },
    __fromManifest: function (a) {
      var b = 2 <= a.version,
        c = a.rootPath;
      null == c && (c = "");
      "" != c && (c += "/");
      for (var d = 0, e = a.assets; d < e.length; ) {
        var f = e[d];
        ++d;
        var g =
          b && Object.prototype.hasOwnProperty.call(f, "size") ? f.size : 100;
        var h = f.id;
        if (Object.prototype.hasOwnProperty.call(f, "path")) {
          var n = this.paths;
          var k = this.__cacheBreak(c + P.string(V.field(f, "path")));
          null != t[h] ? n.setReserved(h, k) : (n.h[h] = k);
        }
        if (Object.prototype.hasOwnProperty.call(f, "pathGroup")) {
          k = V.field(f, "pathGroup");
          n = 0;
          for (var m = k.length; n < m; ) {
            var l = n++;
            k[l] = this.__cacheBreak(c + k[l]);
          }
          n = this.pathGroups;
          null != t[h] ? n.setReserved(h, k) : (n.h[h] = k);
        }
        k = this.sizes;
        null != t[h] ? k.setReserved(h, g) : (k.h[h] = g);
        g = f.type;
        k = this.types;
        null != t[h] ? k.setReserved(h, g) : (k.h[h] = g);
        Object.prototype.hasOwnProperty.call(f, "preload") &&
          ((k = this.preload),
          (g = V.field(f, "preload")),
          null != t[h] ? k.setReserved(h, g) : (k.h[h] = g));
        Object.prototype.hasOwnProperty.call(f, "className") &&
          ((f = qa.resolveClass(V.field(f, "className"))),
          (g = this.classTypes),
          null != t[h] ? g.setReserved(h, f) : (g.h[h] = f));
      }
      b = this.bytesTotal = 0;
      for (a = a.assets; b < a.length; )
        (h = a[b]),
          ++b,
          (h = h.id),
          (c = this.preload),
          (null != t[h] ? c.existsReserved(h) : c.h.hasOwnProperty(h))
            ? ((c = this.preload),
              (c = null != t[h] ? c.getReserved(h) : c.h[h]))
            : (c = !1),
          c &&
            ((c = this.sizes),
            (this.bytesTotal += null != t[h] ? c.getReserved(h) : c.h[h]));
    },
    loadAudioBuffer_onComplete: function (a, b) {
      var c = this.cachedAudioBuffers;
      null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
      c = this.pathGroups;
      if (null != t[a] ? c.existsReserved(a) : c.h.hasOwnProperty(a)) {
        c = this.pathGroups;
        c = null != t[a] ? c.getReserved(a) : c.h[a];
        for (var d = this.pathGroups.keys(); d.hasNext(); ) {
          var e = d.next();
          if (e != a)
            for (var f = 0; f < c.length; ) {
              var g = c[f];
              ++f;
              var h = this.pathGroups;
              if (-1 < (null != t[e] ? h.getReserved(e) : h.h[e]).indexOf(g)) {
                f = this.cachedAudioBuffers;
                null != t[e] ? f.setReserved(e, b) : (f.h[e] = b);
                break;
              }
            }
        }
      }
      this.__assetLoaded(a);
    },
    loadAudioBuffer_onError: function (a, b) {
      null != b && "" != b
        ? mb.warn('Could not load "' + a + '": ' + P.string(b), {
            fileName: "AssetLibrary.hx",
            lineNumber: 872,
            className: "lime.utils.AssetLibrary",
            methodName: "loadAudioBuffer_onError",
          })
        : mb.warn('Could not load "' + a + '"', {
            fileName: "AssetLibrary.hx",
            lineNumber: 876,
            className: "lime.utils.AssetLibrary",
            methodName: "loadAudioBuffer_onError",
          });
      this.loadAudioBuffer_onComplete(a, new Qc());
    },
    loadBytes_onComplete: function (a, b) {
      var c = this.cachedBytes;
      null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
      this.__assetLoaded(a);
    },
    loadFont_onComplete: function (a, b) {
      var c = this.cachedFonts;
      null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
      this.__assetLoaded(a);
    },
    loadImage_onComplete: function (a, b) {
      var c = this.cachedImages;
      null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
      this.__assetLoaded(a);
    },
    loadText_onComplete: function (a, b) {
      var c = this.cachedText;
      null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
      this.__assetLoaded(a);
    },
    load_onError: function (a, b) {
      null != b && "" != b
        ? this.promise.error('Error loading asset "' + a + '": ' + P.string(b))
        : this.promise.error('Error loading asset "' + a + '"');
    },
    load_onProgress: function (a, b, c) {
      if (0 < b) {
        var d = this.sizes;
        d = null != t[a] ? d.getReserved(a) : d.h[a];
        0 < c
          ? ((b /= c), 1 < b && (b = 1), (b = Math.floor(b * d)))
          : b > d && (b = d);
        c = this.bytesLoadedCache;
        (null != t[a] ? c.existsReserved(a) : c.h.hasOwnProperty(a))
          ? ((c = this.bytesLoadedCache),
            (c = null != t[a] ? c.getReserved(a) : c.h[a]),
            b != c && (this.bytesLoaded += b - c))
          : (this.bytesLoaded += b);
        c = this.bytesLoadedCache;
        null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
        this.promise.progress(this.bytesLoaded, this.bytesTotal);
      }
    },
    __class__: ac,
  };
  var Zc = function () {
    this.assets = [];
    this.libraryArgs = [];
    this.version = 2;
  };
  p["lime.utils.AssetManifest"] = Zc;
  Zc.__name__ = ["lime", "utils", "AssetManifest"];
  Zc.fromBytes = function (a, b) {
    return null != a ? Zc.parse(a.getString(0, a.length), b) : null;
  };
  Zc.fromFile = function (a, b) {
    a = Zc.__resolvePath(a);
    b = Zc.__resolveRootPath(b, a);
    return null == a ? null : Zc.fromBytes(Hc.fromFile(a), b);
  };
  Zc.loadFromBytes = function (a, b) {
    return ab.withValue(Zc.fromBytes(a, b));
  };
  Zc.loadFromFile = function (a, b) {
    a = Zc.__resolvePath(a);
    b = Zc.__resolveRootPath(b, a);
    return null == a
      ? null
      : Hc.loadFromFile(a).then(function (a) {
          return ab.withValue(Zc.fromBytes(a, b));
        });
  };
  Zc.parse = function (a, b) {
    if (null == a || "" == a) return null;
    a = JSON.parse(a);
    var c = new Zc();
    c.name = a.name;
    c.libraryType = a.libraryType;
    c.libraryArgs = a.libraryArgs;
    c.assets = Ie.run(a.assets);
    Object.prototype.hasOwnProperty.call(a, "rootPath") &&
      (c.rootPath = a.rootPath);
    null != b &&
      "" != b &&
      (c.rootPath =
        null == c.rootPath || "" == c.rootPath ? b : b + "/" + c.rootPath);
    return c;
  };
  Zc.__resolvePath = function (a) {
    if (null == a) return null;
    var b = a.indexOf("?");
    var c = -1 < b ? Q.substr(a, 0, b) : a;
    for (ba.replace(c, "\\", "/"); ba.endsWith(c, "/"); )
      c = Q.substr(c, 0, c.length - 1);
    return ba.endsWith(c, ".bundle")
      ? -1 < b
        ? c + "/library.json" + Q.substr(a, b, null)
        : c + "/library.json"
      : a;
  };
  Zc.__resolveRootPath = function (a, b) {
    if (null != a) return a;
    a = b.indexOf("?");
    a = -1 < a ? Q.substr(b, 0, a) : b;
    for (ba.replace(a, "\\", "/"); ba.endsWith(a, "/"); ) {
      if ("/" == a) return a;
      a = Q.substr(a, 0, a.length - 1);
    }
    return ba.endsWith(a, ".bundle") ? a : mj.directory(a);
  };
  Zc.prototype = {
    assets: null,
    libraryArgs: null,
    libraryType: null,
    name: null,
    rootPath: null,
    version: null,
    serialize: function () {
      var a = {};
      a.version = this.version;
      a.libraryType = this.libraryType;
      a.libraryArgs = this.libraryArgs;
      a.name = this.name;
      a.assets = we.run(this.assets);
      a.rootPath = this.rootPath;
      return JSON.stringify(a);
    },
    __class__: Zc,
  };
  var ka = function () {};
  p["lime.utils.Assets"] = ka;
  ka.__name__ = ["lime", "utils", "Assets"];
  ka.exists = function (a, b) {
    null == b && (b = "BINARY");
    var c = a.indexOf(":");
    var d = a.substring(0, c);
    a = a.substring(c + 1);
    d = ka.getLibrary(d);
    return null != d ? d.exists(a, b) : !1;
  };
  ka.getAsset = function (a, b, c) {
    if (c && ka.cache.enabled)
      switch (b) {
        case "BINARY":
        case "TEXT":
          c = !1;
          break;
        case "FONT":
          var d = ka.cache.font.get(a);
          if (null != d) return d;
          break;
        case "IMAGE":
          d = ka.cache.image.get(a);
          if (ka.isValidImage(d)) return d;
          break;
        case "MUSIC":
        case "SOUND":
          d = ka.cache.audio.get(a);
          if (ka.isValidAudio(d)) return d;
          break;
        case "TEMPLATE":
          throw new v("Not sure how to get template: " + a);
        default:
          return null;
      }
    var e = a.indexOf(":");
    d = a.substring(0, e);
    e = a.substring(e + 1);
    var f = ka.getLibrary(d);
    if (null != f)
      if (f.exists(e, b)) {
        if (f.isLocal(e, b))
          return (
            (d = f.getAsset(e, b)),
            c && ka.cache.enabled && ka.cache.set(a, b, d),
            d
          );
        mb.error(b + ' asset "' + a + '" exists, but only asynchronously', {
          fileName: "Assets.hx",
          lineNumber: 160,
          className: "lime.utils.Assets",
          methodName: "getAsset",
        });
      } else
        mb.error("There is no " + b + ' asset with an ID of "' + a + '"', {
          fileName: "Assets.hx",
          lineNumber: 166,
          className: "lime.utils.Assets",
          methodName: "getAsset",
        });
    else
      mb.error(ka.__libraryNotFound(d), {
        fileName: "Assets.hx",
        lineNumber: 172,
        className: "lime.utils.Assets",
        methodName: "getAsset",
      });
    return null;
  };
  ka.getAudioBuffer = function (a, b) {
    null == b && (b = !0);
    return ka.getAsset(a, "SOUND", b);
  };
  ka.getBytes = function (a) {
    return ka.getAsset(a, "BINARY", !1);
  };
  ka.getFont = function (a, b) {
    null == b && (b = !0);
    return ka.getAsset(a, "FONT", b);
  };
  ka.getImage = function (a, b) {
    null == b && (b = !0);
    return ka.getAsset(a, "IMAGE", b);
  };
  ka.getLibrary = function (a) {
    if (null == a || "" == a) a = "default";
    var b = ka.libraries;
    return null != t[a] ? b.getReserved(a) : b.h[a];
  };
  ka.getPath = function (a) {
    var b = a.indexOf(":");
    var c = a.substring(0, b);
    b = a.substring(b + 1);
    var d = ka.getLibrary(c);
    if (null != d) {
      if (d.exists(b, null)) return d.getPath(b);
      mb.error('There is no asset with an ID of "' + a + '"', {
        fileName: "Assets.hx",
        lineNumber: 269,
        className: "lime.utils.Assets",
        methodName: "getPath",
      });
    } else
      mb.error(ka.__libraryNotFound(c), {
        fileName: "Assets.hx",
        lineNumber: 275,
        className: "lime.utils.Assets",
        methodName: "getPath",
      });
    return null;
  };
  ka.getText = function (a) {
    return ka.getAsset(a, "TEXT", !1);
  };
  ka.hasLibrary = function (a) {
    if (null == a || "" == a) a = "default";
    var b = ka.libraries;
    return null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a);
  };
  ka.isLocal = function (a, b, c) {
    null == c && (c = !0);
    if (c && ka.cache.enabled && ka.cache.exists(a, b)) return !0;
    var d = a.indexOf(":");
    c = a.substring(0, d);
    a = a.substring(d + 1);
    c = ka.getLibrary(c);
    return null != c ? c.isLocal(a, b) : !1;
  };
  ka.isValidAudio = function (a) {
    return null != a;
  };
  ka.isValidImage = function (a) {
    return null != a ? null != a.buffer : !1;
  };
  ka.list = function (a) {
    var b = [],
      c = ka.libraries;
    for (c = new Oe(c, c.arrayKeys()); c.hasNext(); ) {
      var d = c.next().list(a);
      null != d && (b = b.concat(d));
    }
    return b;
  };
  ka.loadAsset = function (a, b, c) {
    if (c && ka.cache.enabled)
      switch (b) {
        case "BINARY":
        case "TEXT":
          c = !1;
          break;
        case "FONT":
          var d = ka.cache.font.get(a);
          if (null != d) return ab.withValue(d);
          break;
        case "IMAGE":
          d = ka.cache.image.get(a);
          if (ka.isValidImage(d)) return ab.withValue(d);
          break;
        case "MUSIC":
        case "SOUND":
          d = ka.cache.audio.get(a);
          if (ka.isValidAudio(d)) return ab.withValue(d);
          break;
        case "TEMPLATE":
          throw new v("Not sure how to get template: " + a);
        default:
          return null;
      }
    var e = a.indexOf(":");
    d = a.substring(0, e);
    e = a.substring(e + 1);
    var f = ka.getLibrary(d);
    if (null != f) {
      if (f.exists(e, b)) {
        d = f.loadAsset(e, b);
        if (c && ka.cache.enabled)
          d.onComplete(function (c) {
            ka.cache.set(a, b, c);
          });
        return d;
      }
      return ab.withError(
        "There is no " + b + ' asset with an ID of "' + a + '"'
      );
    }
    return ab.withError(ka.__libraryNotFound(d));
  };
  ka.loadAudioBuffer = function (a, b) {
    null == b && (b = !0);
    return ka.loadAsset(a, "SOUND", b);
  };
  ka.loadBytes = function (a) {
    return ka.loadAsset(a, "BINARY", !1);
  };
  ka.loadFont = function (a, b) {
    null == b && (b = !0);
    return ka.loadAsset(a, "FONT", b);
  };
  ka.loadImage = function (a, b) {
    null == b && (b = !0);
    return ka.loadAsset(a, "IMAGE", b);
  };
  ka.loadLibrary = function (a) {
    var b = new Zd(),
      c = ka.getLibrary(a);
    if (null != c) return c.load();
    c = a;
    var d = null,
      e = ka.libraryPaths;
    (null != t[a] ? e.existsReserved(a) : e.h.hasOwnProperty(a))
      ? ((c = ka.libraryPaths),
        (c = null != t[a] ? c.getReserved(a) : c.h[a]),
        (d = ka.defaultRootPath))
      : (ba.endsWith(c, ".bundle") && (c += "/library.json"),
        (c = ka.__cacheBreak(c)));
    Zc.loadFromFile(c, d)
      .onComplete(function (c) {
        if (null == c)
          b.error('Cannot parse asset manifest for library "' + a + '"');
        else if (((c = ac.fromManifest(c)), null == c))
          b.error('Cannot open library "' + a + '"');
        else {
          var d = ka.libraries;
          null != t[a] ? d.setReserved(a, c) : (d.h[a] = c);
          c.onChange.add(((Mb = ka.onChange), B(Mb, Mb.dispatch)));
          c = c.load();
          b.completeWith(c);
        }
      })
      .onError(function (c) {
        b.error('There is no asset library with an ID of "' + a + '"');
      });
    return b.future;
  };
  ka.loadText = function (a) {
    return ka.loadAsset(a, "TEXT", !1);
  };
  ka.registerLibrary = function (a, b) {
    var c = ka.libraries;
    if (null != t[a] ? c.existsReserved(a) : c.h.hasOwnProperty(a)) {
      c = ka.libraries;
      if ((null != t[a] ? c.getReserved(a) : c.h[a]) == b) return;
      ka.unloadLibrary(a);
    }
    null != b && b.onChange.add(ka.library_onChange);
    c = ka.libraries;
    null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
  };
  ka.unloadLibrary = function (a) {
    var b = ka.libraries;
    b = null != t[a] ? b.getReserved(a) : b.h[a];
    null != b &&
      (ka.cache.clear(a + ":"),
      b.onChange.remove(ka.library_onChange),
      b.unload());
    ka.libraries.remove(a);
  };
  ka.__cacheBreak = function (a) {
    return (a =
      -1 < a.indexOf("?")
        ? a + ("&" + ka.cache.version)
        : a + ("?" + ka.cache.version));
  };
  ka.__libraryNotFound = function (a) {
    if (null == a || "" == a) a = "default";
    return null == Me.current ||
      null == Me.current.__preloader ||
      Me.current.__preloader.complete
      ? 'There is no asset library named "' + a + '"'
      : 'There is no asset library named "' +
          a +
          '", or it is not yet preloaded';
  };
  ka.library_onChange = function () {
    ka.cache.clear();
    ka.onChange.dispatch();
  };
  var kt = function (a) {
    var b = a.indexOf(":");
    this.libraryName = a.substring(0, b);
    this.symbolName = a.substring(b + 1);
    this.library = ka.getLibrary(this.libraryName);
  };
  p["lime.utils._Assets.LibrarySymbol"] = kt;
  kt.__name__ = ["lime", "utils", "_Assets", "LibrarySymbol"];
  kt.prototype = {
    library: null,
    libraryName: null,
    symbolName: null,
    isLocal: function (a) {
      return this.library.isLocal(this.symbolName, a);
    },
    exists: function (a) {
      return this.library.exists(this.symbolName, a);
    },
    __class__: kt,
  };
  var re = {};
  p["lime.utils._BytePointer.BytePointer_Impl_"] = re;
  re.__name__ = ["lime", "utils", "_BytePointer", "BytePointer_Impl_"];
  re._new = function (a, b) {
    null == b && (b = 0);
    return new eg(a, b);
  };
  re.set = function (a, b, c, d, e) {
    null != d && (b = Ra.ofData(d));
    null != b || null == c
      ? ((a.bytes = b), (a.offset = null != e ? e : 0))
      : ((a.bytes = Ra.ofData(c.buffer)),
        (a.offset = null != e ? c.byteOffset + e : c.byteOffset));
  };
  re.__arrayGet = function (a, b) {
    return null != a.bytes ? a.bytes.b[b + a.offset] : 0;
  };
  re.__arraySet = function (a, b, c) {
    null == a.bytes && (a.bytes.b[b + a.offset] = c & 255);
    return c;
  };
  re.fromArrayBufferView = function (a) {
    return null == a ? null : new eg(Ra.ofData(a.buffer), a.byteOffset);
  };
  re.fromArrayBuffer = function (a) {
    return null == a ? null : new eg(Ra.ofData(a), 0);
  };
  re.fromBytes = function (a) {
    return new eg(a, 0);
  };
  re.fromBytesData = function (a) {
    return null == a ? new eg(null, 0) : new eg(Ra.ofData(a), 0);
  };
  re.fromFile = function (a) {
    return new eg(Hc.fromFile(a), 0);
  };
  re.fromLimeBytes = function (a) {
    return new eg(a, 0);
  };
  re.toUInt8Array = function (a) {
    var b = a.bytes.b.bufferValue;
    a = (a.offset / 8) | 0;
    return null != b ? new lb(b, a) : null;
  };
  re.toUInt8ClampedArray = function (a) {
    if (null == a || null == a.bytes) return null;
    var b = a.bytes.b.bufferValue;
    a = (a.offset / 8) | 0;
    return null != b ? new Uint8ClampedArray(b, a) : null;
  };
  re.toInt8Array = function (a) {
    if (null == a || null == a.bytes) return null;
    var b = a.bytes.b.bufferValue;
    a = (a.offset / 8) | 0;
    return null != b ? new Int8Array(b, a) : null;
  };
  re.toUInt16Array = function (a) {
    if (null == a || null == a.bytes) return null;
    var b = a.bytes.b.bufferValue;
    a = (a.offset / 16) | 0;
    return null != b ? new Uint16Array(b, a) : null;
  };
  re.toInt16Array = function (a) {
    if (null == a || null == a.bytes) return null;
    var b = a.bytes.b.bufferValue;
    a = (a.offset / 16) | 0;
    return null != b ? new Int16Array(b, a) : null;
  };
  re.toUInt32Array = function (a) {
    if (null == a || null == a.bytes) return null;
    var b = a.bytes.b.bufferValue;
    a = (a.offset / 32) | 0;
    return null != b ? new Uint32Array(b, a) : null;
  };
  re.toInt32Array = function (a) {
    if (null == a || null == a.bytes) return null;
    var b = a.bytes.b.bufferValue;
    a = (a.offset / 32) | 0;
    return null != b ? new Int32Array(b, a) : null;
  };
  re.toFloat32Array = function (a) {
    if (null == a || null == a.bytes) return null;
    var b = a.bytes.b.bufferValue;
    a = (a.offset / 32) | 0;
    return null != b ? new vc(b, a) : null;
  };
  re.toFloat64Array = function (a) {
    if (null == a || null == a.bytes) return null;
    var b = a.bytes.b.bufferValue;
    a = (a.offset / 64) | 0;
    return null != b ? new lt(b, a) : null;
  };
  var eg = function (a, b) {
    this.bytes = a;
    this.offset = b;
  };
  p["lime.utils.BytePointerData"] = eg;
  eg.__name__ = ["lime", "utils", "BytePointerData"];
  eg.prototype = { bytes: null, offset: null, __class__: eg };
  var Hc = {};
  p["lime.utils._Bytes.Bytes_Impl_"] = Hc;
  Hc.__name__ = ["lime", "utils", "_Bytes", "Bytes_Impl_"];
  Hc._new = function (a, b) {
    return new Ra(b);
  };
  Hc.alloc = function (a) {
    return new Ra(new Je(a));
  };
  Hc.compress = function (a, b) {
    switch (b[1]) {
      case 0:
        return qn.compress(a);
      case 1:
        return rn.compress(a);
      case 2:
        return tn.compress(a);
      case 3:
        return un.compress(a);
    }
  };
  Hc.decompress = function (a, b) {
    switch (b[1]) {
      case 0:
        return qn.decompress(a);
      case 1:
        return rn.decompress(a);
      case 2:
        return tn.decompress(a);
      case 3:
        return un.decompress(a);
    }
  };
  Hc.fastGet = function (a, b) {
    return a.bytes[b];
  };
  Hc.fromBytes = function (a) {
    return null == a ? null : Hc._new(a.length, a.b.bufferValue);
  };
  Hc.fromFile = function (a) {
    return null;
  };
  Hc.loadFromBytes = function (a) {
    return ab.withValue(Hc.fromBytes(a));
  };
  Hc.loadFromFile = function (a) {
    return new En().load(a);
  };
  Hc.ofData = function (a) {
    a = Ra.ofData(a);
    return Hc._new(a.length, a.b.bufferValue);
  };
  Hc.ofString = function (a) {
    a = Ra.ofString(a);
    return Hc._new(a.length, a.b.bufferValue);
  };
  var se = (p["lime.utils.CompressionAlgorithm"] = {
    __ename__: ["lime", "utils", "CompressionAlgorithm"],
    __constructs__: ["DEFLATE", "GZIP", "LZMA", "ZLIB"],
  });
  se.DEFLATE = ["DEFLATE", 0];
  se.DEFLATE.toString = M;
  se.DEFLATE.__enum__ = se;
  se.GZIP = ["GZIP", 1];
  se.GZIP.toString = M;
  se.GZIP.__enum__ = se;
  se.LZMA = ["LZMA", 2];
  se.LZMA.toString = M;
  se.LZMA.__enum__ = se;
  se.ZLIB = ["ZLIB", 3];
  se.ZLIB.toString = M;
  se.ZLIB.__enum__ = se;
  var tb = {};
  p["lime.utils._DataPointer.DataPointer_Impl_"] = tb;
  tb.__name__ = ["lime", "utils", "_DataPointer", "DataPointer_Impl_"];
  tb._new = function (a) {
    return a;
  };
  tb.fromInt = function (a) {
    return tb._new(new Fi(null, null, a));
  };
  tb.fromFloat = function (a) {
    return tb._new(new Fi(null, null, a | 0));
  };
  tb.fromBytesPointer = function (a) {
    return tb._new(new Fi(null, a.bytes.b.bufferValue, a.offset));
  };
  tb.fromArrayBufferView = function (a) {
    return tb._new(new Fi(a));
  };
  tb.fromArrayBuffer = function (a) {
    return tb._new(new Fi(null, a));
  };
  tb.fromBytes = function (a) {
    return tb.fromArrayBuffer(a.b.bufferValue);
  };
  tb.fromBytesData = function (a) {
    return tb.fromArrayBuffer(a);
  };
  tb.fromLimeBytes = function (a) {
    return tb.fromBytes(a);
  };
  tb.fromCFFIPointer = function (a) {
    return null;
  };
  tb.fromFile = function (a) {
    return null;
  };
  tb.toBufferOrBufferView = function (a, b) {
    if (!a) return null;
    switch (a.type[1]) {
      case 0:
        null == b && (b = a.buffer.byteLength);
        if (0 == a.offset && b == a.buffer.byteLength) return a.buffer;
        var c = a.buffer;
        a = a.offset;
        return null != c ? (null == b ? new lb(c, a) : new lb(c, a, b)) : null;
      case 1:
        null == b && (b = a.bufferView.byteLength);
        if (0 == a.offset && b == a.bufferView.byteLength) return a.bufferView;
        c = a.bufferView.buffer;
        a = a.bufferView.byteOffset + a.offset;
        return null != c ? (null == b ? new lb(c, a) : new lb(c, a, b)) : null;
      default:
        return null;
    }
  };
  tb.toBufferView = function (a, b) {
    if (!a) return null;
    switch (a.type[1]) {
      case 0:
        null == b && (b = a.buffer.byteLength);
        var c = a.buffer;
        a = a.offset;
        return null != c ? (null == b ? new lb(c, a) : new lb(c, a, b)) : null;
      case 1:
        null == b && (b = a.bufferView.byteLength);
        if (0 == a.offset && b == a.bufferView.byteLength) return a.bufferView;
        c = a.bufferView.buffer;
        a = a.bufferView.byteOffset + a.offset;
        return null != c ? (null == b ? new lb(c, a) : new lb(c, a, b)) : null;
      default:
        return null;
    }
  };
  tb.toFloat32Array = function (a, b) {
    if (!a) return null;
    switch (a.type[1]) {
      case 0:
        null == b && (b = a.buffer.byteLength);
        var c = a.buffer;
        a = a.offset;
        b = (b / 4) | 0;
        return null != c ? (null == b ? new vc(c, a) : new vc(c, a, b)) : null;
      case 1:
        null == b && (b = a.bufferView.byteLength);
        if (
          0 == a.offset &&
          b == a.bufferView.byteLength &&
          a.bufferView.constructor == vc
        )
          return a.bufferView;
        b > a.bufferView.byteLength && (b = a.bufferView.byteLength);
        c = a.bufferView.buffer;
        a = a.bufferView.byteOffset + a.offset;
        b = (b / 4) | 0;
        return null != c ? (null == b ? new vc(c, a) : new vc(c, a, b)) : null;
      default:
        return null;
    }
  };
  tb.toInt32Array = function (a, b) {
    if (!a) return null;
    switch (a.type[1]) {
      case 0:
        null == b && (b = a.buffer.byteLength);
        var c = a.buffer;
        a = a.offset;
        b = (b / 4) | 0;
        return null != c
          ? null == b
            ? new Int32Array(c, a)
            : new Int32Array(c, a, b)
          : null;
      case 1:
        null == b && (b = a.bufferView.byteLength);
        if (
          0 == a.offset &&
          b == a.bufferView.byteLength &&
          a.bufferView.constructor == Int32Array
        )
          return a.bufferView;
        c = a.bufferView.buffer;
        a = a.bufferView.byteOffset + a.offset;
        b = (b / 4) | 0;
        return null != c
          ? null == b
            ? new Int32Array(c, a)
            : new Int32Array(c, a, b)
          : null;
      default:
        return null;
    }
  };
  tb.toUInt8Array = function (a, b) {
    if (!a) return null;
    switch (a.type[1]) {
      case 0:
        null == b && (b = a.buffer.byteLength);
        var c = a.buffer;
        a = a.offset;
        return null != c ? (null == b ? new lb(c, a) : new lb(c, a, b)) : null;
      case 1:
        null == b && (b = a.bufferView.byteLength);
        if (
          0 == a.offset &&
          b == a.bufferView.byteLength &&
          a.bufferView.constructor == lb
        )
          return a.bufferView;
        c = a.bufferView.buffer;
        a = a.bufferView.byteOffset + a.offset;
        return null != c ? (null == b ? new lb(c, a) : new lb(c, a, b)) : null;
      default:
        return null;
    }
  };
  tb.toUInt32Array = function (a, b) {
    if (!a) return null;
    switch (a.type[1]) {
      case 0:
        null == b && (b = a.buffer.byteLength);
        var c = a.buffer;
        a = a.offset;
        b = (b / 4) | 0;
        return null != c
          ? null == b
            ? new Uint32Array(c, a)
            : new Uint32Array(c, a, b)
          : null;
      case 1:
        null == b && (b = a.bufferView.byteLength);
        if (
          0 == a.offset &&
          b == a.bufferView.byteLength &&
          a.bufferView.constructor == Uint32Array
        )
          return a.bufferView;
        c = a.bufferView.buffer;
        a = a.bufferView.byteOffset + a.offset;
        b = (b / 4) | 0;
        return null != c
          ? null == b
            ? new Uint32Array(c, a)
            : new Uint32Array(c, a, b)
          : null;
      default:
        return null;
    }
  };
  tb.toValue = function (a) {
    return a ? ("number" === typeof a ? a : 2 == a.type[1] ? a.offset : 0) : 0;
  };
  tb.__withOffset = function (a, b) {
    return null;
  };
  tb.equals = function (a, b) {
    return a == b;
  };
  tb.equalsPointer = function (a, b) {
    return a == b;
  };
  tb.greaterThan = function (a, b) {
    return a > b;
  };
  tb.greaterThanPointer = function (a, b) {
    return cc.get(a) > cc.get(b);
  };
  tb.greaterThanOrEqual = function (a, b) {
    return a >= b;
  };
  tb.greaterThanOrEqualPointer = function (a, b) {
    return cc.get(a) >= cc.get(b);
  };
  tb.lessThan = function (a, b) {
    return a < b;
  };
  tb.lessThanPointer = function (a, b) {
    return cc.get(a) < cc.get(b);
  };
  tb.lessThanOrEqual = function (a, b) {
    return a <= b;
  };
  tb.lessThanOrEqualPointer = function (a, b) {
    return cc.get(a) <= cc.get(b);
  };
  tb.notEquals = function (a, b) {
    return a != b;
  };
  tb.notEqualsPointer = function (a, b) {
    return a != b;
  };
  tb.plus = function (a, b) {
    return tb.__withOffset(a, b);
  };
  tb.plusPointer = function (a, b) {
    return tb.__withOffset(a, b | 0);
  };
  tb.minus = function (a, b) {
    return tb.__withOffset(a, -b);
  };
  tb.minusPointer = function (a, b) {
    return tb.__withOffset(a, -(b | 0));
  };
  var Fi = function (a, b, c) {
    null == c && (c = 0);
    null != a
      ? ((this.bufferView = a), (this.type = Jf.BUFFER_VIEW))
      : null != b
      ? ((this.buffer = b), (this.type = Jf.BUFFER))
      : (this.type = Jf.VALUE);
    this.offset = c;
  };
  p["lime.utils.DataPointerObject"] = Fi;
  Fi.__name__ = ["lime", "utils", "DataPointerObject"];
  Fi.prototype = {
    buffer: null,
    bufferView: null,
    offset: null,
    type: null,
    __class__: Fi,
  };
  var Jf = (p["lime.utils.DataPointerObjectType"] = {
    __ename__: ["lime", "utils", "DataPointerObjectType"],
    __constructs__: ["BUFFER", "BUFFER_VIEW", "VALUE"],
  });
  Jf.BUFFER = ["BUFFER", 0];
  Jf.BUFFER.toString = M;
  Jf.BUFFER.__enum__ = Jf;
  Jf.BUFFER_VIEW = ["BUFFER_VIEW", 1];
  Jf.BUFFER_VIEW.toString = M;
  Jf.BUFFER_VIEW.__enum__ = Jf;
  Jf.VALUE = ["VALUE", 2];
  Jf.VALUE.toString = M;
  Jf.VALUE.__enum__ = Jf;
  var Hn = {};
  p["lime.utils._Float32Array.Float32Array_Impl_"] = Hn;
  Hn.__name__ = ["lime", "utils", "_Float32Array", "Float32Array_Impl_"];
  Hn.fromBytes = function (a, b, c) {
    null == b && (b = 0);
    return null == b
      ? new vc(a.b.bufferValue)
      : null == c
      ? new vc(a.b.bufferValue, b)
      : new vc(a.b.bufferValue, b, c);
  };
  Hn.toBytes = function (a) {
    return new Ra(new lb(a.buffer));
  };
  Hn.toString = function (a) {
    return null != a
      ? "Float32Array [byteLength:" +
          a.byteLength +
          ", length:" +
          a.length +
          "]"
      : null;
  };
  var In = {};
  p["lime.utils._Float64Array.Float64Array_Impl_"] = In;
  In.__name__ = ["lime", "utils", "_Float64Array", "Float64Array_Impl_"];
  In.fromBytes = function (a, b, c) {
    null == b && (b = 0);
    return null == b
      ? new lt(a.b.bufferValue)
      : null == c
      ? new lt(a.b.bufferValue, b)
      : new lt(a.b.bufferValue, b, c);
  };
  In.toBytes = function (a) {
    return new Ra(new lb(a.buffer));
  };
  In.toString = function (a) {
    return null != a
      ? "Float64Array [byteLength:" +
          a.byteLength +
          ", length:" +
          a.length +
          "]"
      : null;
  };
  var Jn = {};
  p["lime.utils._Int16Array.Int16Array_Impl_"] = Jn;
  Jn.__name__ = ["lime", "utils", "_Int16Array", "Int16Array_Impl_"];
  Jn.fromBytes = function (a, b, c) {
    null == b && (b = 0);
    return null == b
      ? new Int16Array(a.b.bufferValue)
      : null == c
      ? new Int16Array(a.b.bufferValue, b)
      : new Int16Array(a.b.bufferValue, b, c);
  };
  Jn.toBytes = function (a) {
    return new Ra(new lb(a.buffer));
  };
  Jn.toString = function (a) {
    return null != a
      ? "Int16Array [byteLength:" + a.byteLength + ", length:" + a.length + "]"
      : null;
  };
  var Kn = {};
  p["lime.utils._Int32Array.Int32Array_Impl_"] = Kn;
  Kn.__name__ = ["lime", "utils", "_Int32Array", "Int32Array_Impl_"];
  Kn.fromBytes = function (a, b, c) {
    null == b && (b = 0);
    return null == b
      ? new Int32Array(a.b.bufferValue)
      : null == c
      ? new Int32Array(a.b.bufferValue, b)
      : new Int32Array(a.b.bufferValue, b, c);
  };
  Kn.toBytes = function (a) {
    return new Ra(new lb(a.buffer));
  };
  Kn.toString = function (a) {
    return null != a
      ? "Int32Array [byteLength:" + a.byteLength + ", length:" + a.length + "]"
      : null;
  };
  var Ln = {};
  p["lime.utils._Int8Array.Int8Array_Impl_"] = Ln;
  Ln.__name__ = ["lime", "utils", "_Int8Array", "Int8Array_Impl_"];
  Ln.fromBytes = function (a, b, c) {
    null == b && (b = 0);
    return new Int8Array(a.b.bufferValue, b, c);
  };
  Ln.toBytes = function (a) {
    return new Ra(new lb(a.buffer));
  };
  Ln.toString = function (a) {
    return null != a
      ? "Int8Array [byteLength:" + a.byteLength + ", length:" + a.length + "]"
      : null;
  };
  var mb = function () {};
  p["lime.utils.Log"] = mb;
  mb.__name__ = ["lime", "utils", "Log"];
  mb.debug = function (a, b) {
    4 <= mb.level && console.debug("[" + b.className + "] " + P.string(a));
  };
  mb.error = function (a, b) {
    if (1 <= mb.level) {
      a = "[" + b.className + "] ERROR: " + P.string(a);
      if (mb.throwErrors) throw new v(a);
      console.error(a);
    }
  };
  mb.info = function (a, b) {
    3 <= mb.level && console.info("[" + b.className + "] " + P.string(a));
  };
  mb.print = function (a) {
    console.log(a);
  };
  mb.println = function (a) {
    console.log(a);
  };
  mb.verbose = function (a, b) {
    5 <= mb.level && console.log("[" + b.className + "] " + P.string(a));
  };
  mb.warn = function (a, b) {
    2 <= mb.level &&
      console.warn("[" + b.className + "] WARNING: " + P.string(a));
  };
  var ah = {};
  p["lime.utils._LogLevel.LogLevel_Impl_"] = ah;
  ah.__name__ = ["lime", "utils", "_LogLevel", "LogLevel_Impl_"];
  ah.gt = function (a, b) {
    return a > b;
  };
  ah.gte = function (a, b) {
    return a >= b;
  };
  ah.lt = function (a, b) {
    return a < b;
  };
  ah.lte = function (a, b) {
    return a <= b;
  };
  var Rp = function () {
    this.bytesTotalCache = new la();
    this.bytesLoadedCache2 = new la();
    this.bytesLoadedCache = new qd();
    this.onProgress = new wn();
    this.onComplete = new Md();
    this.bytesTotal = this.bytesLoaded = 0;
    this.libraries = [];
    this.libraryNames = [];
    this.onProgress.add(B(this, this.update));
  };
  p["lime.utils.Preloader"] = Rp;
  Rp.__name__ = ["lime", "utils", "Preloader"];
  Rp.prototype = {
    complete: null,
    onComplete: null,
    onProgress: null,
    bytesLoaded: null,
    bytesLoadedCache: null,
    bytesLoadedCache2: null,
    bytesTotal: null,
    bytesTotalCache: null,
    initLibraryNames: null,
    libraries: null,
    libraryNames: null,
    loadedLibraries: null,
    loadedStage: null,
    preloadComplete: null,
    preloadStarted: null,
    simulateProgress: null,
    addLibrary: function (a) {
      this.libraries.push(a);
    },
    addLibraryName: function (a) {
      -1 == this.libraryNames.indexOf(a) && this.libraryNames.push(a);
    },
    load: function () {
      for (var a = this, b = 0, c = this.libraries; b < c.length; ) {
        var d = c[b];
        ++b;
        this.bytesTotal += d.bytesTotal;
      }
      this.loadedLibraries = -1;
      this.preloadStarted = !1;
      b = 0;
      for (c = this.libraries; b < c.length; )
        (d = [c[b]]),
          ++b,
          mb.verbose("Preloading asset library", {
            fileName: "Preloader.hx",
            lineNumber: 150,
            className: "lime.utils.Preloader",
            methodName: "load",
          }),
          d[0]
            .load()
            .onProgress(
              (function (b) {
                return function (c, d) {
                  a.bytesLoaded =
                    null == a.bytesLoadedCache.h.__keys__[b[0].__id__]
                      ? a.bytesLoaded + c
                      : a.bytesLoaded + (c - a.bytesLoadedCache.h[b[0].__id__]);
                  a.bytesLoadedCache.set(b[0], c);
                  a.simulateProgress ||
                    a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal);
                };
              })(d)
            )
            .onComplete(
              (function (b) {
                return function (c) {
                  a.bytesLoaded =
                    null == a.bytesLoadedCache.h.__keys__[b[0].__id__]
                      ? a.bytesLoaded + b[0].bytesTotal
                      : a.bytesLoaded +
                        (b[0].bytesTotal - a.bytesLoadedCache.h[b[0].__id__]);
                  a.loadedAssetLibrary();
                };
              })(d)
            )
            .onError(
              (function () {
                return function (a) {
                  mb.error(a, {
                    fileName: "Preloader.hx",
                    lineNumber: 188,
                    className: "lime.utils.Preloader",
                    methodName: "load",
                  });
                };
              })()
            );
      b = 0;
      for (c = this.libraryNames; b < c.length; ) ++b, (this.bytesTotal += 200);
      this.loadedLibraries++;
      this.preloadStarted = !0;
      this.updateProgress();
    },
    loadedAssetLibrary: function (a) {
      this.loadedLibraries++;
      var b = this.loadedLibraries;
      this.preloadStarted || ++b;
      var c = this.libraries.length + this.libraryNames.length;
      null != a
        ? mb.verbose("Loaded asset library: " + a + " [" + b + "/" + c + "]", {
            fileName: "Preloader.hx",
            lineNumber: 220,
            className: "lime.utils.Preloader",
            methodName: "loadedAssetLibrary",
          })
        : mb.verbose("Loaded asset library [" + b + "/" + c + "]", {
            fileName: "Preloader.hx",
            lineNumber: 224,
            className: "lime.utils.Preloader",
            methodName: "loadedAssetLibrary",
          });
      this.updateProgress();
    },
    start: function () {
      this.complete ||
        this.simulateProgress ||
        !this.preloadComplete ||
        ((this.complete = !0), this.onComplete.dispatch());
    },
    update: function (a, b) {},
    updateProgress: function () {
      var a = this;
      this.simulateProgress ||
        this.onProgress.dispatch(this.bytesLoaded, this.bytesTotal);
      if (
        this.loadedLibraries == this.libraries.length &&
        !this.initLibraryNames
      ) {
        this.initLibraryNames = !0;
        for (var b = 0, c = this.libraryNames; b < c.length; ) {
          var d = [c[b]];
          ++b;
          mb.verbose("Preloading asset library: " + d[0], {
            fileName: "Preloader.hx",
            lineNumber: 273,
            className: "lime.utils.Preloader",
            methodName: "updateProgress",
          });
          ka.loadLibrary(d[0])
            .onProgress(
              (function (b) {
                return function (c, d) {
                  if (0 < d) {
                    var e = a.bytesTotalCache;
                    (null != t[b[0]]
                      ? e.existsReserved(b[0])
                      : e.h.hasOwnProperty(b[0])) ||
                      ((e = a.bytesTotalCache),
                      null != t[b[0]]
                        ? e.setReserved(b[0], d)
                        : (e.h[b[0]] = d),
                      (a.bytesTotal += d - 200));
                    c > d && (c = d);
                    d = a.bytesLoadedCache2;
                    (
                      null != t[b[0]]
                        ? d.existsReserved(b[0])
                        : d.h.hasOwnProperty(b[0])
                    )
                      ? ((d = a.bytesLoadedCache2),
                        (a.bytesLoaded +=
                          c -
                          (null != t[b[0]] ? d.getReserved(b[0]) : d.h[b[0]])))
                      : (a.bytesLoaded += c);
                    d = a.bytesLoadedCache2;
                    null != t[b[0]] ? d.setReserved(b[0], c) : (d.h[b[0]] = c);
                    a.simulateProgress ||
                      a.onProgress.dispatch(a.bytesLoaded, a.bytesTotal);
                  }
                };
              })(d)
            )
            .onComplete(
              (function (b) {
                return function (c) {
                  c = 200;
                  var d = a.bytesTotalCache;
                  if (
                    null != t[b[0]]
                      ? d.existsReserved(b[0])
                      : d.h.hasOwnProperty(b[0])
                  )
                    (c = a.bytesTotalCache),
                      (c = null != t[b[0]] ? c.getReserved(b[0]) : c.h[b[0]]);
                  d = a.bytesLoadedCache2;
                  (
                    null != t[b[0]]
                      ? d.existsReserved(b[0])
                      : d.h.hasOwnProperty(b[0])
                  )
                    ? ((d = a.bytesLoadedCache2),
                      (a.bytesLoaded +=
                        c -
                        (null != t[b[0]] ? d.getReserved(b[0]) : d.h[b[0]])))
                    : (a.bytesLoaded += c);
                  a.loadedAssetLibrary(b[0]);
                };
              })(d)
            )
            .onError(
              (function () {
                return function (a) {
                  mb.error(a, {
                    fileName: "Preloader.hx",
                    lineNumber: 332,
                    className: "lime.utils.Preloader",
                    methodName: "updateProgress",
                  });
                };
              })()
            );
        }
      }
      this.simulateProgress ||
        this.loadedLibraries !=
          this.libraries.length + this.libraryNames.length ||
        (this.preloadComplete ||
          ((this.preloadComplete = !0),
          mb.verbose("Preload complete", {
            fileName: "Preloader.hx",
            lineNumber: 346,
            className: "lime.utils.Preloader",
            methodName: "updateProgress",
          })),
        this.start());
    },
    __class__: Rp,
  };
  var Mn = {};
  p["lime.utils._UInt16Array.UInt16Array_Impl_"] = Mn;
  Mn.__name__ = ["lime", "utils", "_UInt16Array", "UInt16Array_Impl_"];
  Mn.fromBytes = function (a, b, c) {
    null == b && (b = 0);
    return null == b
      ? new Uint16Array(a.b.bufferValue)
      : null == c
      ? new Uint16Array(a.b.bufferValue, b)
      : new Uint16Array(a.b.bufferValue, b, c);
  };
  Mn.toBytes = function (a) {
    return new Ra(new lb(a.buffer));
  };
  Mn.toString = function (a) {
    return null != a
      ? "UInt16Array [byteLength:" + a.byteLength + ", length:" + a.length + "]"
      : null;
  };
  var Nn = {};
  p["lime.utils._UInt32Array.UInt32Array_Impl_"] = Nn;
  Nn.__name__ = ["lime", "utils", "_UInt32Array", "UInt32Array_Impl_"];
  Nn.fromBytes = function (a, b, c) {
    null == b && (b = 0);
    return null == b
      ? new Uint32Array(a.b.bufferValue)
      : null == c
      ? new Uint32Array(a.b.bufferValue, b)
      : new Uint32Array(a.b.bufferValue, b, c);
  };
  Nn.toBytes = function (a) {
    return new Ra(new lb(a.buffer));
  };
  Nn.toString = function (a) {
    return null != a
      ? "UInt32Array [byteLength:" + a.byteLength + ", length:" + a.length + "]"
      : null;
  };
  var On = {};
  p["lime.utils._UInt8Array.UInt8Array_Impl_"] = On;
  On.__name__ = ["lime", "utils", "_UInt8Array", "UInt8Array_Impl_"];
  On.fromBytes = function (a, b, c) {
    return null == b
      ? new lb(a.b.bufferValue)
      : null == c
      ? new lb(a.b.bufferValue, b)
      : new lb(a.b.bufferValue, b, c);
  };
  On.toBytes = function (a) {
    return new Ra(new lb(a.buffer));
  };
  On.toString = function (a) {
    return null != a
      ? "UInt8Array [byteLength:" + a.byteLength + ", length:" + a.length + "]"
      : null;
  };
  var Gk = {};
  p["lime.utils._UInt8ClampedArray.UInt8ClampedArray_Impl_"] = Gk;
  Gk.__name__ = [
    "lime",
    "utils",
    "_UInt8ClampedArray",
    "UInt8ClampedArray_Impl_",
  ];
  Gk.fromBytes = function (a, b, c) {
    null == b && (b = 0);
    return null == b
      ? new Uint8ClampedArray(a.b.bufferValue)
      : null == c
      ? new Uint8ClampedArray(a.b.bufferValue, b)
      : new Uint8ClampedArray(a.b.bufferValue, b, c);
  };
  Gk.toBytes = function (a) {
    return new Ra(new lb(a.buffer));
  };
  Gk.toString = function (a) {
    return null != a
      ? "UInt8ClampedArray [byteLength:" +
          a.byteLength +
          ", length:" +
          a.length +
          "]"
      : null;
  };
  Gk._clamp = function (a) {
    a |= 0;
    255 < a && (a = 255);
    return 0 > a ? 0 : a;
  };
  var bj = function (a, b, c) {
    this.name = a;
    this.type = b;
    this.address = c;
  };
  p["mbs.core.MbsField"] = bj;
  bj.__name__ = ["mbs", "core", "MbsField"];
  bj.prototype = {
    name: null,
    type: null,
    address: null,
    getName: function () {
      return this.name;
    },
    getType: function () {
      return this.type;
    },
    getAddress: function () {
      return this.address;
    },
    __class__: bj,
  };
  var Pn = function (a, b, c) {
    bj.call(this, a, null, c);
    this.typeName = b;
  };
  p["mbs.core.reflect.SubstituteField"] = Pn;
  Pn.__name__ = ["mbs", "core", "reflect", "SubstituteField"];
  Pn.__super__ = bj;
  Pn.prototype = x(bj.prototype, {
    typeName: null,
    toString: function () {
      return (
        "MbsField [name=" +
        this.getName() +
        ", typeName=" +
        this.typeName +
        ", address=" +
        this.address +
        "]"
      );
    },
    __class__: Pn,
  });
  var sj = function (a, b, c, d) {
    kb.call(this, a);
    this.parentName = b;
    this.fields = c.slice(0);
    this.size = d;
  };
  p["mbs.core.reflect.SubstituteType"] = sj;
  sj.__name__ = ["mbs", "core", "reflect", "SubstituteType"];
  sj.__super__ = kb;
  sj.prototype = x(kb.prototype, {
    parentName: null,
    mapTypes: function (a) {
      var b = this.parentName;
      this.parent = null != t[b] ? a.getReserved(b) : a.h[b];
      if (null != this.fields) {
        b = 0;
        for (var c = this.fields.length; b < c; ) {
          var d = b++;
          d = this.fields[d];
          var e = d.typeName;
          d.type = null != t[e] ? a.getReserved(e) : a.h[e];
        }
      }
    },
    __class__: sj,
  });
  var be = function () {};
  p["mbs.io.MbsDynamicHelper"] = be;
  be.__name__ = ["mbs", "io", "MbsDynamicHelper"];
  be.writeDynamic = function (a, b, c) {
    "boolean" == typeof c
      ? (a.writeTypecode(b, z.BOOLEAN), a.writeBool(b + z.INTEGER.getSize(), c))
      : "number" == typeof c
      ? (a.writeTypecode(b, z.FLOAT), a.writeFloat(b + z.INTEGER.getSize(), c))
      : "number" == typeof c && (c | 0) === c
      ? (a.writeTypecode(b, z.INTEGER), a.writeInt(b + z.INTEGER.getSize(), c))
      : "string" == typeof c
      ? (a.writeTypecode(b, z.STRING),
        a.writeString(b + z.INTEGER.getSize(), c))
      : (a.writeTypecode(b, c.getMbsType()),
        a.writeInt(b + z.INTEGER.getSize(), c.getAddress()));
  };
  be.readDynamic = function (a, b) {
    var c = a.readTypecode(b);
    if (c == z.BOOLEAN) return a.readBool(b + z.INTEGER.getSize());
    if (c == z.FLOAT) return a.readFloat(b + z.INTEGER.getSize());
    if (c == z.INTEGER) return a.readInt(b + z.INTEGER.getSize());
    if (c == z.STRING) return a.readString(b + z.INTEGER.getSize());
    if (c == z.LIST)
      return (
        (b = a.readInt(b + z.INTEGER.getSize())),
        0 != b
          ? ((c = a.readTypecode(b + z.INTEGER.getSize())),
            (a =
              c == z.BOOLEAN
                ? new Hk(a)
                : c == z.FLOAT
                ? new Ik(a)
                : c == z.INTEGER
                ? new Wf(a)
                : c == z.STRING
                ? new Jk(a)
                : c == z.DYNAMIC
                ? new Qh(a)
                : new Ja(a, c, c.createInstance(a))),
            a.setAddress(b),
            a)
          : null
      );
    c = c.createInstance(a);
    c.setAddress(a.readInt(b + z.INTEGER.getSize()));
    return c;
  };
  be.createObjectPool = function (a) {
    return new qd();
  };
  be.readDynamicUsingPool = function (a, b, c) {
    var d = a.readTypecode(b);
    if (d == z.BOOLEAN) return a.readBool(b + z.INTEGER.getSize());
    if (d == z.FLOAT) return a.readFloat(b + z.INTEGER.getSize());
    if (d == z.INTEGER) return a.readInt(b + z.INTEGER.getSize());
    if (d == z.STRING) return a.readString(b + z.INTEGER.getSize());
    if (d == z.LIST)
      return (
        (b = a.readInt(b + z.INTEGER.getSize())),
        0 != b
          ? ((d = a.readTypecode(b + z.INTEGER.getSize())),
            (a =
              d == z.BOOLEAN
                ? new Hk(a)
                : d == z.FLOAT
                ? new Ik(a)
                : d == z.INTEGER
                ? new Wf(a)
                : d == z.STRING
                ? new Jk(a)
                : d == z.DYNAMIC
                ? new Qh(a)
                : new Ja(a, d, d.createInstance(a))),
            a.setAddress(b),
            a)
          : null
      );
    var e = c.h[d.__id__];
    null == e && ((e = d.createInstance(a)), c.set(d, e));
    e.setAddress(a.readInt(b + z.INTEGER.getSize()));
    return e;
  };
  var mq = function () {};
  p["mbs.io.MbsIO"] = mq;
  mq.__name__ = ["mbs", "io", "MbsIO"];
  mq.prototype = {
    readBool: null,
    readFloat: null,
    readInt: null,
    readString: null,
    writeInt: null,
    writeBool: null,
    writeFloat: null,
    writeString: null,
    isReader: null,
    isWriter: null,
    allocate: null,
    writeTypecode: null,
    readTypecode: null,
    __class__: mq,
  };
  var je = function (a, b) {
    this.data = a;
    null != b && ((this.type = b), (this.elementSize = b.getSize()));
  };
  p["mbs.io.MbsListBase"] = je;
  je.__name__ = ["mbs", "io", "MbsListBase"];
  je.__super__ = Ta;
  je.prototype = x(Ta.prototype, {
    type: null,
    elementAddress: null,
    elementSize: null,
    _length: null,
    setAddress: function (a) {
      Ta.prototype.setAddress.call(this, a);
      this.data.isReader() &&
        (0 != a
          ? ((this._length = this.data.readInt(a)),
            (this.type = this.data.readTypecode(a + z.INTEGER.getSize())),
            (this.elementSize = this.type.getSize()),
            (this.elementAddress = a + 2 * z.INTEGER.getSize()))
          : ((this.type = null),
            (this.elementAddress = this.elementSize = this._length = 0)));
    },
    allocateNew: function (a) {
      if (this.data.isWriter())
        return (
          (this._length = a),
          (this.address = this.data.allocate(
            2 * z.INTEGER.getSize() + this.elementSize * a
          )),
          this.data.writeInt(this.address, a),
          this.data.writeTypecode(
            this.address + z.INTEGER.getSize(),
            this.type
          ),
          (this.elementAddress = this.address + 2 * z.INTEGER.getSize()),
          this.address
        );
      throw new v("Can't allocate new objects when reading");
    },
    length: function () {
      return this._length;
    },
    __class__: je,
  });
  var Ja = function (a, b, c) {
    je.call(this, a, b);
    this.obj = c;
  };
  p["mbs.io.MbsList"] = Ja;
  Ja.__name__ = ["mbs", "io", "MbsList"];
  Ja.__super__ = je;
  Ja.prototype = x(je.prototype, {
    obj: null,
    getNextObject: function () {
      this.obj.setAddress(this.elementAddress);
      this.elementAddress += this.elementSize;
      return this.obj;
    },
    __class__: Ja,
  });
  var Hk = function (a) {
    je.call(this, a, z.BOOLEAN);
  };
  p["mbs.io.MbsBoolList"] = Hk;
  Hk.__name__ = ["mbs", "io", "MbsBoolList"];
  Hk.__super__ = je;
  Hk.prototype = x(je.prototype, {
    readBool: function () {
      var a = this.data.readBool(this.elementAddress);
      this.elementAddress += this.elementSize;
      return a;
    },
    writeBool: function (a) {
      this.data.writeBool(this.elementAddress, a);
      this.elementAddress += this.elementSize;
    },
    __class__: Hk,
  });
  var Ik = function (a) {
    je.call(this, a, z.FLOAT);
  };
  p["mbs.io.MbsFloatList"] = Ik;
  Ik.__name__ = ["mbs", "io", "MbsFloatList"];
  Ik.__super__ = je;
  Ik.prototype = x(je.prototype, {
    readFloat: function () {
      var a = this.data.readFloat(this.elementAddress);
      this.elementAddress += this.elementSize;
      return a;
    },
    writeFloat: function (a) {
      this.data.writeFloat(this.elementAddress, a);
      this.elementAddress += this.elementSize;
    },
    __class__: Ik,
  });
  var Wf = function (a) {
    je.call(this, a, z.INTEGER);
  };
  p["mbs.io.MbsIntList"] = Wf;
  Wf.__name__ = ["mbs", "io", "MbsIntList"];
  Wf.__super__ = je;
  Wf.prototype = x(je.prototype, {
    readInt: function () {
      var a = this.data.readInt(this.elementAddress);
      this.elementAddress += this.elementSize;
      return a;
    },
    writeInt: function (a) {
      this.data.writeInt(this.elementAddress, a);
      this.elementAddress += this.elementSize;
    },
    __class__: Wf,
  });
  var Jk = function (a) {
    je.call(this, a, z.STRING);
  };
  p["mbs.io.MbsStringList"] = Jk;
  Jk.__name__ = ["mbs", "io", "MbsStringList"];
  Jk.__super__ = je;
  Jk.prototype = x(je.prototype, {
    readString: function () {
      var a = this.data.readString(this.elementAddress);
      this.elementAddress += this.elementSize;
      return a;
    },
    writeString: function (a) {
      this.data.writeString(this.elementAddress, a);
      this.elementAddress += this.elementSize;
    },
    __class__: Jk,
  });
  var Qh = function (a) {
    je.call(this, a, z.DYNAMIC);
  };
  p["mbs.io.MbsDynamicList"] = Qh;
  Qh.__name__ = ["mbs", "io", "MbsDynamicList"];
  Qh.__super__ = je;
  Qh.prototype = x(je.prototype, {
    readObject: function () {
      var a = be.readDynamic(this.data, this.elementAddress);
      this.elementAddress += this.elementSize;
      return a;
    },
    readObjectUsingPool: function (a) {
      a = be.readDynamicUsingPool(this.data, this.elementAddress, a);
      this.elementAddress += this.elementSize;
      return a;
    },
    writeObject: function (a) {
      be.writeDynamic(this.data, this.elementAddress, a);
      this.elementAddress += this.elementSize;
    },
    __class__: Qh,
  });
  var Mh = function (a, b, c) {
    this.typedefSet = a;
    this.readStoredTypeInformation = b;
    this.initStringList = c;
    this.header = new jc(this);
    this.header.setAddress(0);
  };
  p["mbs.io.MbsReader"] = Mh;
  Mh.__name__ = ["mbs", "io", "MbsReader"];
  Mh.__interfaces__ = [mq];
  Mh.prototype = {
    data: null,
    stringTable: null,
    typeTable: null,
    rootAddress: null,
    subTypeMap: null,
    initStringList: null,
    stringTableAddress: null,
    readStoredTypeInformation: null,
    typedefSet: null,
    header: null,
    canRead: function (a) {
      var b = null;
      if (null == a || a.length < this.header.getMbsType().getSize())
        b = "Missing header";
      this.data = a;
      1 != this.header.getVersion() &&
        (b = "Mismatched version -- " + this.header.getVersion());
      this.header.getTypeTableHash() != this.typedefSet.getHash() &&
        (b = "Mismatched typetable");
      this.readStoredTypeInformation &&
        0 == this.header.getTypeTablePointer() &&
        (b = "Missing required type information");
      this.data = null;
      return b;
    },
    readData: function (a) {
      this.data = a;
      if (1 != this.header.getVersion())
        throw new v("Can't read mbs. Wrong version.");
      if (this.header.getTypeTableHash() != this.typedefSet.getHash())
        throw new v("Can't read mbs. Wrong typedef info.");
      var b = z.INTEGER.getSize();
      this.stringTableAddress = this.header.getStringTablePointer();
      var c = this.readInt(this.stringTableAddress);
      this.stringTable = Array(c);
      if (this.initStringList) {
        c = this.stringTableAddress + b;
        for (var d = 0, e = this.stringTable.length; d < e; ) {
          var f = d++,
            g = this.readInt(c),
            h = this.readInt(g);
          this.stringTable[f] = a.getString(g + 4, h);
          c += b;
        }
      }
      if (this.readStoredTypeInformation) {
        a = new Gc(this);
        c = this.header.getTypeTablePointer();
        d = this.readInt(c);
        this.typeTable = Array(d);
        c += b;
        this.subTypeMap = new la();
        d = new la();
        e = 0;
        for (
          f = [z.BOOLEAN, z.INTEGER, z.FLOAT, z.STRING, z.DYNAMIC, z.LIST];
          e < f.length;

        )
          (g = f[e]),
            ++e,
            (h = g.getName()),
            null != t[h] ? d.setReserved(h, g) : (d.h[h] = g);
        e = 0;
        for (f = this.typeTable.length; e < f; ) {
          h = e++;
          a.setAddress(this.readInt(c));
          c += b;
          g = a.getName();
          var n = a.getParent(),
            k = a.getSize(),
            m = null,
            l = a.getFieldsPointer();
          if (0 != l) {
            var p = this.readInt(l);
            l += b;
            m = Array(p);
            for (var q = new $c(this), r = 0; r < p; ) {
              var w = r++;
              q.setAddress(l);
              l += $c.MBS_FIELD_INFO.getSize();
              var x = q.getName(),
                y = q.getType(),
                B = q.getFieldAddress();
              m[w] = new Pn(x, y, B);
            }
          }
          (null != t[g] ? d.existsReserved(g) : d.h.hasOwnProperty(g))
            ? (this.typeTable[h] = null != t[g] ? d.getReserved(g) : d.h[g])
            : (this.typeTable[h] = new sj(g, n, m, k));
          h = this.typeTable[h];
          n = this.subTypeMap;
          null != t[g] ? n.setReserved(g, h) : (n.h[g] = h);
        }
        b = 0;
        for (c = this.typeTable.length; b < c; )
          (a = b++),
            u.__instanceof(this.typeTable[a], sj) &&
              u.__cast(this.typeTable[a], sj).mapTypes(this.subTypeMap);
      } else
        for (
          b = this.typedefSet.getTypes().length,
            this.typeTable = Array(b),
            b = 0,
            c = this.typedefSet.getTypes();
          b < c.length;

        )
          (a = c[b]), ++b, (this.typeTable[this.typedefSet.getTypecode(a)] = a);
    },
    reconfigureComposition: function (a) {
      var b = this.subTypeMap,
        c = a.getName();
      if (null != t[c] ? b.existsReserved(c) : b.h.hasOwnProperty(c)) {
        b = this.subTypeMap;
        c = a.getName();
        var d = null != t[c] ? b.getReserved(c) : b.h[c];
        b = new la();
        c = 0;
        for (d = d.getFields(); c < d.length; ) {
          var e = d[c];
          ++c;
          var f = e.getName();
          null != t[f] ? b.setReserved(f, e) : (b.h[f] = e);
        }
        c = 0;
        for (a = a.getFields(); c < a.length; )
          (d = a[c]),
            ++c,
            (e = d.getName()),
            (d.address = (null != t[e] ? b.getReserved(e) : b.h[e]).address);
      }
    },
    getRoot: function () {
      return this.header.getRoot();
    },
    readInt: function (a) {
      return (
        (this.data.b[a] << 24) |
        (this.data.b[a + 1] << 16) |
        (this.data.b[a + 2] << 8) |
        this.data.b[a + 3]
      );
    },
    readBool: function (a) {
      return 0 != this.data.b[a];
    },
    readFloat: function (a) {
      return xe.i32ToFloat(this.readInt(a));
    },
    readString: function (a) {
      if (this.initStringList) return this.stringTable[this.readInt(a)];
      a = this.readInt(a);
      if (null == this.stringTable[a]) {
        var b = this.readInt(
            this.stringTableAddress + z.INTEGER.getSize() * (a + 1)
          ),
          c = this.readInt(b);
        this.stringTable[a] = this.data.getString(b + 4, c);
      }
      return this.stringTable[a];
    },
    readTypecode: function (a) {
      return this.typeTable[this.readInt(a)];
    },
    getTypeTable: function () {
      return this.typeTable;
    },
    writeInt: function (a, b) {
      throw new v("Can't write on an MBS reader");
    },
    writeBool: function (a, b) {
      throw new v("Can't write on an MBS reader");
    },
    writeFloat: function (a, b) {
      throw new v("Can't write on an MBS reader");
    },
    writeString: function (a, b) {
      throw new v("Can't write on an MBS reader");
    },
    isReader: function () {
      return !0;
    },
    isWriter: function () {
      return !1;
    },
    allocate: function (a) {
      throw new v("Can't allocate on an MBS reader");
    },
    writeTypecode: function (a, b) {
      throw new v("Can't write on an MBS reader");
    },
    __class__: Mh,
  };
  var wa = function () {};
  p["openfl.Lib"] = wa;
  wa.__name__ = ["openfl", "Lib"];
  wa.__properties__ = {
    get_current: "get_current",
    get_application: "get_application",
  };
  wa.as = function (a, b) {
    return u.__instanceof(a, b) ? a : null;
  };
  wa.attach = function (a) {
    return new ef();
  };
  wa.clearInterval = function (a) {
    wa.__timers.h.hasOwnProperty(a) &&
      (wa.__timers.h[a].stop(), wa.__timers.remove(a));
  };
  wa.clearTimeout = function (a) {
    wa.__timers.h.hasOwnProperty(a) &&
      (wa.__timers.h[a].stop(), wa.__timers.remove(a));
  };
  wa.getDefinitionByName = function (a) {
    return qa.resolveClass(a);
  };
  wa.getQualifiedClassName = function (a) {
    return qa.getClassName(null == a ? null : u.getClass(a));
  };
  wa.getQualifiedSuperclassName = function (a) {
    a = qa.getSuperClass(null == a ? null : u.getClass(a));
    return null != a ? qa.getClassName(a) : null;
  };
  wa.getTimer = function () {
    return za.getTimer();
  };
  wa.getURL = function (a, b) {
    wa.navigateToURL(a, b);
  };
  wa.navigateToURL = function (a, b) {
    null == b && (b = "_blank");
    var c = a.url;
    if (qa["typeof"](a.data) == Nb.TObject) {
      for (var d = "", e = V.fields(a.data), f = 0; f < e.length; ) {
        var g = e[f];
        ++f;
        0 < d.length && (d += "&");
        var h = encodeURIComponent(g) + "=";
        g = P.string(V.field(a.data, g));
        d += h + encodeURIComponent(g);
      }
      c = -1 < c.indexOf("?") ? c + ("&" + d) : c + ("?" + d);
    }
    za.openURL(c, b);
  };
  wa.notImplemented = function (a) {
    var b = a.className + "." + a.methodName,
      c = wa.__sentWarnings;
    (null != t[b] ? c.existsReserved(b) : c.h.hasOwnProperty(b)) ||
      ((c = wa.__sentWarnings),
      null != t[b] ? c.setReserved(b, !0) : (c.h[b] = !0),
      mb.warn(a.methodName + " is not implemented", a));
  };
  wa.preventDefaultTouchMove = function () {
    window.document.addEventListener(
      "touchmove",
      function (a) {
        a.preventDefault();
      },
      !1
    );
  };
  wa.sendToURL = function (a) {
    new ph().load(a);
  };
  wa.setInterval = function (a, b, c) {
    var d = ++wa.__lastTimerID;
    b = new af(b);
    wa.__timers.h[d] = b;
    b.run = function () {
      a.apply(a, null == c ? [] : c);
    };
    return d;
  };
  wa.setTimeout = function (a, b, c) {
    var d = ++wa.__lastTimerID,
      e = wa.__timers;
    b = af.delay(function () {
      a.apply(a, null == c ? [] : c);
    }, b);
    e.h[d] = b;
    return d;
  };
  wa.trace = function (a) {
    Bh.trace(a, {
      fileName: "Lib.hx",
      lineNumber: 289,
      className: "openfl.Lib",
      methodName: "trace",
    });
  };
  wa.get_application = function () {
    return Ec.application;
  };
  wa.get_current = function () {
    null == Ec.current && (Ec.current = new ef());
    return Ec.current;
  };
  var Gi = function () {};
  p["openfl._Vector.IVector"] = Gi;
  Gi.__name__ = ["openfl", "_Vector", "IVector"];
  Gi.prototype = {
    set_length: null,
    get_length: null,
    fixed: null,
    concat: null,
    copy: null,
    get: null,
    indexOf: null,
    insertAt: null,
    iterator: null,
    join: null,
    lastIndexOf: null,
    pop: null,
    push: null,
    removeAt: null,
    reverse: null,
    set: null,
    shift: null,
    slice: null,
    sort: null,
    splice: null,
    toString: null,
    unshift: null,
    __class__: Gi,
    __properties__: { set_length: "set_length", get_length: "get_length" },
  };
  var Bg = function (a, b, c) {
    null == c && (c = []);
    this.__array = c;
    null != a && 0 < a && this.set_length(a);
    this.fixed = 1 == b;
  };
  p["openfl._Vector.BoolVector"] = Bg;
  Bg.__name__ = ["openfl", "_Vector", "BoolVector"];
  Bg.__interfaces__ = [Gi];
  Bg.prototype = {
    fixed: null,
    __array: null,
    concat: function (a) {
      return null == a
        ? new Bg(null, null, this.__array.slice())
        : 0 < a.__array.length
        ? new Bg(null, null, this.__array.concat(a.__array))
        : new Bg(null, null, this.__array.slice());
    },
    copy: function () {
      return new Bg(null, this.fixed, this.__array.slice());
    },
    get: function (a) {
      return a >= this.__array.length ? !1 : this.__array[a];
    },
    indexOf: function (a, b) {
      null == b && (b = 0);
      for (var c = this.__array.length; b < c; ) {
        var d = b++;
        if (this.__array[d] == a) return d;
      }
      return -1;
    },
    insertAt: function (a, b) {
      (!this.fixed || a < this.__array.length) && this.__array.splice(a, 0, b);
    },
    iterator: function () {
      return Q.iter(this.__array);
    },
    join: function (a) {
      null == a && (a = ",");
      return this.__array.join(a);
    },
    lastIndexOf: function (a, b) {
      for (
        b = null == b || b >= this.__array.length ? this.__array.length - 1 : b;
        0 <= b;

      ) {
        if (this.__array[b] == a) return b;
        --b;
      }
      return -1;
    },
    pop: function () {
      return this.fixed ? null : this.__array.pop();
    },
    push: function (a) {
      return this.fixed ? this.__array.length : this.__array.push(a);
    },
    removeAt: function (a) {
      return !this.fixed || a < this.__array.length
        ? this.__array.splice(a, 1)[0]
        : !1;
    },
    reverse: function () {
      this.__array.reverse();
      return this;
    },
    set: function (a, b) {
      return !this.fixed || a < this.__array.length ? (this.__array[a] = b) : b;
    },
    shift: function () {
      return this.fixed ? null : this.__array.shift();
    },
    slice: function (a, b) {
      null == b && (b = 16777215);
      null == a && (a = 0);
      return new Bg(null, null, this.__array.slice(a, b));
    },
    sort: function (a) {
      this.__array.sort(a);
    },
    splice: function (a, b) {
      return new Bg(null, null, this.__array.splice(a, b));
    },
    toJSON: function () {
      return this.__array;
    },
    toString: function () {
      return null != this.__array ? this.__array.toString() : null;
    },
    unshift: function (a) {
      this.fixed || this.__array.unshift(a);
    },
    get_length: function () {
      return this.__array.length;
    },
    set_length: function (a) {
      if (!this.fixed) {
        var b = this.__array.length;
        0 > a && (a = 0);
        if (a > b)
          for (; b < a; ) {
            var c = b++;
            this.__array[c] = !1;
          }
        else for (; this.__array.length > a; ) this.__array.pop();
      }
      return this.__array.length;
    },
    __class__: Bg,
    __properties__: { set_length: "set_length", get_length: "get_length" },
  };
  var Dg = function (a, b, c, d) {
    null == d && (d = !1);
    if (d) {
      if (((this.__array = []), null != c)) {
        d = 0;
        for (var e = c.length; d < e; ) {
          var f = d++;
          this.__array[f] = c[f];
        }
      }
    } else null == c && (c = []), (this.__array = c);
    null != a && 0 < a && this.set_length(a);
    this.fixed = 1 == b;
  };
  p["openfl._Vector.FloatVector"] = Dg;
  Dg.__name__ = ["openfl", "_Vector", "FloatVector"];
  Dg.__interfaces__ = [Gi];
  Dg.prototype = {
    fixed: null,
    __array: null,
    concat: function (a) {
      return null == a
        ? new Dg(null, null, this.__array.slice())
        : 0 < a.__array.length
        ? new Dg(null, null, this.__array.concat(a.__array))
        : new Dg(null, null, this.__array.slice());
    },
    copy: function () {
      return new Dg(null, this.fixed, this.__array.slice());
    },
    get: function (a) {
      return this.__array[a];
    },
    indexOf: function (a, b) {
      null == b && (b = 0);
      for (var c = this.__array.length; b < c; ) {
        var d = b++;
        if (this.__array[d] == a) return d;
      }
      return -1;
    },
    insertAt: function (a, b) {
      (!this.fixed || a < this.__array.length) && this.__array.splice(a, 0, b);
    },
    iterator: function () {
      return Q.iter(this.__array);
    },
    join: function (a) {
      null == a && (a = ",");
      return this.__array.join(a);
    },
    lastIndexOf: function (a, b) {
      for (
        b = null == b || b >= this.__array.length ? this.__array.length - 1 : b;
        0 <= b;

      ) {
        if (this.__array[b] == a) return b;
        --b;
      }
      return -1;
    },
    pop: function () {
      return this.fixed ? null : this.__array.pop();
    },
    push: function (a) {
      return this.fixed ? this.__array.length : this.__array.push(a);
    },
    removeAt: function (a) {
      return !this.fixed || a < this.__array.length
        ? this.__array.splice(a, 1)[0]
        : 0;
    },
    reverse: function () {
      this.__array.reverse();
      return this;
    },
    set: function (a, b) {
      return !this.fixed || a < this.__array.length ? (this.__array[a] = b) : b;
    },
    shift: function () {
      return this.fixed ? null : this.__array.shift();
    },
    slice: function (a, b) {
      null == b && (b = 16777215);
      null == a && (a = 0);
      return new Dg(null, null, this.__array.slice(a, b));
    },
    sort: function (a) {
      this.__array.sort(a);
    },
    splice: function (a, b) {
      return new Dg(null, null, this.__array.splice(a, b));
    },
    toJSON: function () {
      return this.__array;
    },
    toString: function () {
      return null != this.__array ? this.__array.toString() : null;
    },
    unshift: function (a) {
      this.fixed || this.__array.unshift(a);
    },
    get_length: function () {
      return this.__array.length;
    },
    set_length: function (a) {
      if (a != this.__array.length && !this.fixed) {
        var b = this.__array.length;
        0 > a && (a = 0);
        if (a > b)
          for (; b < a; ) {
            var c = b++;
            this.__array[c] = 0;
          }
        else for (; this.__array.length > a; ) this.__array.pop();
      }
      return this.__array.length;
    },
    __class__: Dg,
    __properties__: { set_length: "set_length", get_length: "get_length" },
  };
  var Eg = function (a, b, c) {
    null == c && (c = []);
    this.__array = c;
    null != a && 0 < a && this.set_length(a);
    this.fixed = 1 == b;
  };
  p["openfl._Vector.FunctionVector"] = Eg;
  Eg.__name__ = ["openfl", "_Vector", "FunctionVector"];
  Eg.__interfaces__ = [Gi];
  Eg.prototype = {
    fixed: null,
    __array: null,
    concat: function (a) {
      return null == a
        ? new Eg(null, null, this.__array.slice())
        : 0 < a.__array.length
        ? new Eg(null, null, this.__array.concat(a.__array))
        : new Eg(null, null, this.__array.slice());
    },
    copy: function () {
      return new Eg(null, this.fixed, this.__array.slice());
    },
    get: function (a) {
      return a >= this.__array.length ? null : this.__array[a];
    },
    indexOf: function (a, b) {
      null == b && (b = 0);
      for (var c = this.__array.length; b < c; ) {
        var d = b++;
        if (V.compareMethods(this.__array[d], a)) return d;
      }
      return -1;
    },
    insertAt: function (a, b) {
      (!this.fixed || a < this.__array.length) && this.__array.splice(a, 0, b);
    },
    iterator: function () {
      return Q.iter(this.__array);
    },
    join: function (a) {
      null == a && (a = ",");
      return this.__array.join(a);
    },
    lastIndexOf: function (a, b) {
      for (
        b = null == b || b >= this.__array.length ? this.__array.length - 1 : b;
        0 <= b;

      ) {
        if (V.compareMethods(this.__array[b], a)) return b;
        --b;
      }
      return -1;
    },
    pop: function () {
      return this.fixed ? null : this.__array.pop();
    },
    push: function (a) {
      return this.fixed ? this.__array.length : this.__array.push(a);
    },
    removeAt: function (a) {
      return !this.fixed || a < this.__array.length
        ? this.__array.splice(a, 1)[0]
        : null;
    },
    reverse: function () {
      this.__array.reverse();
      return this;
    },
    set: function (a, b) {
      return !this.fixed || a < this.__array.length ? (this.__array[a] = b) : b;
    },
    shift: function () {
      return this.fixed ? null : this.__array.shift();
    },
    slice: function (a, b) {
      null == b && (b = 16777215);
      null == a && (a = 0);
      return new Eg(null, null, this.__array.slice(a, b));
    },
    sort: function (a) {
      this.__array.sort(a);
    },
    splice: function (a, b) {
      return new Eg(null, null, this.__array.splice(a, b));
    },
    toJSON: function () {
      return this.__array;
    },
    toString: function () {
      return null != this.__array ? this.__array.toString() : null;
    },
    unshift: function (a) {
      this.fixed || this.__array.unshift(a);
    },
    get_length: function () {
      return this.__array.length;
    },
    set_length: function (a) {
      if (!this.fixed) {
        var b = this.__array.length;
        0 > a && (a = 0);
        if (a > b)
          for (; b < a; ) {
            var c = b++;
            this.__array[c] = null;
          }
        else for (; this.__array.length > a; ) this.__array.pop();
      }
      return this.__array.length;
    },
    __class__: Eg,
    __properties__: { set_length: "set_length", get_length: "get_length" },
  };
  var Cg = function (a, b, c) {
    null == c && (c = []);
    this.__array = c;
    null != a && 0 < a && this.set_length(a);
    this.fixed = 1 == b;
  };
  p["openfl._Vector.IntVector"] = Cg;
  Cg.__name__ = ["openfl", "_Vector", "IntVector"];
  Cg.__interfaces__ = [Gi];
  Cg.prototype = {
    fixed: null,
    __array: null,
    concat: function (a) {
      return null == a
        ? new Cg(null, null, this.__array.slice())
        : 0 < a.__array.length
        ? new Cg(null, null, this.__array.concat(a.__array))
        : new Cg(null, null, this.__array.slice());
    },
    copy: function () {
      return new Cg(null, this.fixed, this.__array.slice());
    },
    get: function (a) {
      return this.__array[a];
    },
    indexOf: function (a, b) {
      null == b && (b = 0);
      for (var c = this.__array.length; b < c; ) {
        var d = b++;
        if (this.__array[d] == a) return d;
      }
      return -1;
    },
    insertAt: function (a, b) {
      (!this.fixed || a < this.__array.length) && this.__array.splice(a, 0, b);
    },
    iterator: function () {
      return Q.iter(this.__array);
    },
    join: function (a) {
      null == a && (a = ",");
      return this.__array.join(a);
    },
    lastIndexOf: function (a, b) {
      for (
        b = null == b || b >= this.__array.length ? this.__array.length - 1 : b;
        0 <= b;

      ) {
        if (this.__array[b] == a) return b;
        --b;
      }
      return -1;
    },
    pop: function () {
      return this.fixed ? null : this.__array.pop();
    },
    push: function (a) {
      return this.fixed ? this.__array.length : this.__array.push(a);
    },
    removeAt: function (a) {
      return !this.fixed || a < this.__array.length
        ? this.__array.splice(a, 1)[0]
        : 0;
    },
    reverse: function () {
      this.__array.reverse();
      return this;
    },
    set: function (a, b) {
      return !this.fixed || a < this.__array.length ? (this.__array[a] = b) : b;
    },
    shift: function () {
      return this.fixed ? null : this.__array.shift();
    },
    slice: function (a, b) {
      null == b && (b = 16777215);
      null == a && (a = 0);
      return new Cg(null, null, this.__array.slice(a, b));
    },
    sort: function (a) {
      this.__array.sort(a);
    },
    splice: function (a, b) {
      return new Cg(null, null, this.__array.splice(a, b));
    },
    toJSON: function () {
      return this.__array;
    },
    toString: function () {
      return null != this.__array ? this.__array.toString() : null;
    },
    unshift: function (a) {
      this.fixed || this.__array.unshift(a);
    },
    get_length: function () {
      return this.__array.length;
    },
    set_length: function (a) {
      if (!this.fixed) {
        var b = this.__array.length;
        0 > a && (a = 0);
        if (a > b)
          for (; b < a; ) {
            var c = b++;
            this.__array[c] = 0;
          }
        else for (; this.__array.length > a; ) this.__array.pop();
      }
      return this.__array.length;
    },
    __class__: Cg,
    __properties__: { set_length: "set_length", get_length: "get_length" },
  };
  var kg = function (a, b, c, d) {
    null == d && (d = !1);
    if (d) {
      if (((this.__array = []), null != c)) {
        d = 0;
        for (var e = c.length; d < e; ) {
          var f = d++;
          this.__array[f] = c[f];
        }
      }
    } else null == c && (c = []), (this.__array = c);
    null != a && 0 < a && this.set_length(a);
    this.fixed = 1 == b;
  };
  p["openfl._Vector.ObjectVector"] = kg;
  kg.__name__ = ["openfl", "_Vector", "ObjectVector"];
  kg.__interfaces__ = [Gi];
  kg.prototype = {
    fixed: null,
    __array: null,
    concat: function (a) {
      return null == a
        ? new kg(null, null, this.__array.slice())
        : 0 < a.__array.length
        ? new kg(null, null, this.__array.concat(a.__array))
        : new kg(null, null, this.__array.slice());
    },
    copy: function () {
      return new kg(null, null, this.__array.slice());
    },
    get: function (a) {
      return this.__array[a];
    },
    indexOf: function (a, b) {
      null == b && (b = 0);
      for (var c = this.__array.length; b < c; ) {
        var d = b++;
        if (this.__array[d] == a) return d;
      }
      return -1;
    },
    insertAt: function (a, b) {
      (!this.fixed || a < this.__array.length) && this.__array.splice(a, 0, b);
    },
    iterator: function () {
      return Q.iter(this.__array);
    },
    join: function (a) {
      null == a && (a = ",");
      return this.__array.join(a);
    },
    lastIndexOf: function (a, b) {
      for (
        b = null == b || b >= this.__array.length ? this.__array.length - 1 : b;
        0 <= b;

      ) {
        if (this.__array[b] == a) return b;
        --b;
      }
      return -1;
    },
    pop: function () {
      return this.fixed ? null : this.__array.pop();
    },
    push: function (a) {
      return this.fixed ? this.__array.length : this.__array.push(a);
    },
    removeAt: function (a) {
      return !this.fixed || a < this.__array.length
        ? this.__array.splice(a, 1)[0]
        : null;
    },
    reverse: function () {
      this.__array.reverse();
      return this;
    },
    set: function (a, b) {
      return !this.fixed || a < this.__array.length ? (this.__array[a] = b) : b;
    },
    shift: function () {
      return this.fixed ? null : this.__array.shift();
    },
    slice: function (a, b) {
      null == b && (b = 16777215);
      null == a && (a = 0);
      return new kg(null, null, this.__array.slice(a, b));
    },
    sort: function (a) {
      this.__array.sort(a);
    },
    splice: function (a, b) {
      return new kg(null, null, this.__array.splice(a, b));
    },
    toJSON: function () {
      return this.__array;
    },
    toString: function () {
      return null != this.__array ? this.__array.toString() : null;
    },
    unshift: function (a) {
      this.fixed || this.__array.unshift(a);
    },
    get_length: function () {
      return this.__array.length;
    },
    set_length: function (a) {
      if (!this.fixed) {
        var b = this.__array.length;
        0 > a && (a = 0);
        if (a > b) for (; b < a; ) b++, this.__array.push(null);
        else for (; this.__array.length > a; ) this.__array.pop();
      }
      return this.__array.length;
    },
    __class__: kg,
    __properties__: { set_length: "set_length", get_length: "get_length" },
  };
  var Ec = function () {};
  p["openfl._internal.Lib"] = Ec;
  Ec.__name__ = ["openfl", "_internal", "Lib"];
  Ec.notImplemented = function (a) {
    var b = a.className + "." + a.methodName,
      c = Ec.__sentWarnings;
    (null != t[b] ? c.existsReserved(b) : c.h.hasOwnProperty(b)) ||
      ((c = Ec.__sentWarnings),
      null != t[b] ? c.setReserved(b, !0) : (c.h[b] = !0),
      mb.warn(a.methodName + " is not implemented", a));
  };
  var Te = function () {};
  p["openfl._internal.formats.agal.AGALConverter"] = Te;
  Te.__name__ = ["openfl", "_internal", "formats", "agal", "AGALConverter"];
  Te.prefixFromType = function (a, b) {
    switch (a) {
      case 0:
        return "va";
      case 1:
        return b == rf.VERTEX ? "vc" : "fc";
      case 2:
        return b == rf.VERTEX ? "vt" : "ft";
      case 3:
        return "output_";
      case 4:
        return "v";
      case 5:
        return "sampler";
      default:
        throw new v(new ld("Invalid data!"));
    }
  };
  Te.readUInt64 = function (a) {
    var b = a.readInt();
    a = a.readInt();
    return new Fa(a, b);
  };
  Te.convertToGLSL = function (a, b) {
    a.position = 0;
    a.__endian = 1;
    var c = a.readByte() & 255;
    if (176 == c) return a.readUTF();
    if (160 != c)
      throw new v(new ld("Magic value must be 0xA0, may not be AGAL"));
    if (1 != a.readInt()) throw new v(new ld("Version must be 1"));
    if (161 != (a.readByte() & 255))
      throw new v(new ld("Shader type ID must be 0xA1"));
    c = 0 == (a.readByte() & 255) ? rf.VERTEX : rf.FRAGMENT;
    for (var d = new nq(), e = ""; a.position < Na.get_length(a); ) {
      var f = a.readInt(),
        g = a.readUnsignedInt(),
        h = Te.readUInt64(a),
        n = Te.readUInt64(a);
      g = Kk.parse(g, c);
      h = tj.parse(h, c, g.mask);
      var k = tj.parse(n, c, g.mask);
      e += "\t";
      switch (f) {
        case 0:
          e += P.string(g.toGLSL() + " = " + h.toGLSL() + "; // mov");
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          break;
        case 1:
          e += P.string(
            g.toGLSL() + " = " + h.toGLSL() + " + " + k.toGLSL() + "; // add"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          d.addSR(k, T.VECTOR_4);
          break;
        case 2:
          e += P.string(
            g.toGLSL() + " = " + h.toGLSL() + " - " + k.toGLSL() + "; // sub"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          d.addSR(k, T.VECTOR_4);
          break;
        case 3:
          e += P.string(
            g.toGLSL() + " = " + h.toGLSL() + " * " + k.toGLSL() + "; // mul"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          d.addSR(k, T.VECTOR_4);
          break;
        case 4:
          e += P.string(
            g.toGLSL() + " = " + h.toGLSL() + " / " + k.toGLSL() + "; // div"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          d.addSR(k, T.VECTOR_4);
          break;
        case 5:
          e =
            -1 < h.toGLSL().indexOf(".")
              ? e + P.string(g.toGLSL() + " = 1.0 / " + h.toGLSL() + "; // rcp")
              : e +
                P.string(
                  g.toGLSL() + " = vec4(1) / " + h.toGLSL() + "; // rcp"
                );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          break;
        case 6:
          e += P.string(
            g.toGLSL() +
              " = min(" +
              h.toGLSL() +
              ", " +
              k.toGLSL() +
              "); // min"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          d.addSR(k, T.VECTOR_4);
          break;
        case 7:
          e += P.string(
            g.toGLSL() +
              " = max(" +
              h.toGLSL() +
              ", " +
              k.toGLSL() +
              "); // max"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          d.addSR(k, T.VECTOR_4);
          break;
        case 8:
          e += P.string(g.toGLSL() + " = fract(" + h.toGLSL() + "); // frc");
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          break;
        case 9:
          e += P.string(g.toGLSL() + " = sqrt(" + h.toGLSL() + "); // sqrt");
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          break;
        case 10:
          e += P.string(
            g.toGLSL() + " = inversesqrt(" + h.toGLSL() + "); // rsq"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          break;
        case 11:
          e += P.string(
            g.toGLSL() +
              " = pow(" +
              h.toGLSL() +
              ", " +
              k.toGLSL() +
              "); // pow"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          d.addSR(k, T.VECTOR_4);
          break;
        case 12:
          e += P.string(g.toGLSL() + " = log2(" + h.toGLSL() + "); // log");
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          break;
        case 13:
          e += P.string(g.toGLSL() + " = exp2(" + h.toGLSL() + "); // exp");
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          break;
        case 14:
          e += P.string(
            g.toGLSL() + " = normalize(" + h.toGLSL() + "); // normalize"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          break;
        case 15:
          e += P.string(g.toGLSL() + " = sin(" + h.toGLSL() + "); // sin");
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          break;
        case 16:
          e += P.string(g.toGLSL() + " = cos(" + h.toGLSL() + "); // cos");
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          break;
        case 17:
          h.sourceMask = k.sourceMask = 7;
          e += P.string(
            g.toGLSL() +
              " = cross(vec3(" +
              h.toGLSL() +
              "), vec3(" +
              k.toGLSL() +
              ")); // crs"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          d.addSR(k, T.VECTOR_4);
          break;
        case 18:
          h.sourceMask = k.sourceMask = 7;
          e += P.string(
            g.toGLSL() +
              " = vec4(dot(vec3(" +
              h.toGLSL() +
              "), vec3(" +
              k.toGLSL() +
              ")))" +
              g.getWriteMask() +
              "; // dp3"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          d.addSR(k, T.VECTOR_4);
          break;
        case 19:
          h.sourceMask = k.sourceMask = 15;
          e += P.string(
            g.toGLSL() +
              " = vec4(dot(vec4(" +
              h.toGLSL() +
              "), vec4(" +
              k.toGLSL() +
              ")))" +
              g.getWriteMask() +
              "; // dp4"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          d.addSR(k, T.VECTOR_4);
          break;
        case 20:
          e += P.string(g.toGLSL() + " = abs(" + h.toGLSL() + "); // abs");
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          break;
        case 21:
          e += P.string(g.toGLSL() + " = -" + h.toGLSL() + "; // neg");
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          break;
        case 22:
          e += P.string(
            g.toGLSL() + " = clamp(" + h.toGLSL() + ", 0.0, 1.0); // saturate"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          break;
        case 23:
          f = d.getRegisterUsage(k);
          f != T.VECTOR_4 && f != T.VECTOR_4_ARRAY
            ? ((e += P.string(
                g.toGLSL() +
                  " = " +
                  h.toGLSL() +
                  " * mat3(" +
                  k.toGLSL(!1) +
                  "); // m33"
              )),
              d.addDR(g, T.VECTOR_4),
              d.addSR(h, T.VECTOR_4),
              d.addSR(k, T.MATRIX_4_4))
            : ((h.sourceMask = k.sourceMask = 7),
              (e += P.string(
                g.toGLSL() +
                  " = vec3(dot(" +
                  h.toGLSL(!0) +
                  "," +
                  k.toGLSL(!0, 0) +
                  "), dot(" +
                  h.toGLSL(!0) +
                  "," +
                  k.toGLSL(!0, 1) +
                  "),dot(" +
                  h.toGLSL(!0) +
                  "," +
                  k.toGLSL(!0, 2) +
                  ")); // m33"
              )),
              d.addDR(g, T.VECTOR_4),
              d.addSR(h, T.VECTOR_4),
              d.addSR(k, T.VECTOR_4, 0),
              d.addSR(k, T.VECTOR_4, 1),
              d.addSR(k, T.VECTOR_4, 2));
          break;
        case 24:
          f = d.getRegisterUsage(k);
          f != T.VECTOR_4 && f != T.VECTOR_4_ARRAY
            ? ((e += P.string(
                g.toGLSL() +
                  " = " +
                  h.toGLSL() +
                  " * " +
                  k.toGLSL(!1) +
                  "; // m44"
              )),
              d.addDR(g, T.VECTOR_4),
              d.addSR(h, T.VECTOR_4),
              d.addSR(k, T.MATRIX_4_4))
            : ((h.sourceMask = k.sourceMask = 15),
              (e += P.string(
                g.toGLSL() +
                  " = vec4(dot(" +
                  h.toGLSL(!0) +
                  "," +
                  k.toGLSL(!0, 0) +
                  "), dot(" +
                  h.toGLSL(!0) +
                  "," +
                  k.toGLSL(!0, 1) +
                  "), dot(" +
                  h.toGLSL(!0) +
                  "," +
                  k.toGLSL(!0, 2) +
                  "), dot(" +
                  h.toGLSL(!0) +
                  "," +
                  k.toGLSL(!0, 3) +
                  ")); // m44"
              )),
              d.addDR(g, T.VECTOR_4),
              d.addSR(h, T.VECTOR_4),
              d.addSR(k, T.VECTOR_4, 0),
              d.addSR(k, T.VECTOR_4, 1),
              d.addSR(k, T.VECTOR_4, 2),
              d.addSR(k, T.VECTOR_4, 3));
          break;
        case 25:
          g.mask &= 7;
          f = d.getRegisterUsage(k);
          f != T.VECTOR_4 && f != T.VECTOR_4_ARRAY
            ? ((e += P.string(
                g.toGLSL() +
                  " = " +
                  h.toGLSL() +
                  " * " +
                  k.toGLSL(!1) +
                  "; // m34"
              )),
              d.addDR(g, T.VECTOR_4),
              d.addSR(h, T.VECTOR_4),
              d.addSR(k, T.MATRIX_4_4))
            : ((h.sourceMask = k.sourceMask = 15),
              (e += P.string(
                g.toGLSL() +
                  " = vec3(dot(" +
                  h.toGLSL(!0) +
                  "," +
                  k.toGLSL(!0, 0) +
                  "), dot(" +
                  h.toGLSL(!0) +
                  "," +
                  k.toGLSL(!0, 1) +
                  "),dot(" +
                  h.toGLSL(!0) +
                  "," +
                  k.toGLSL(!0, 2) +
                  ")); // m34"
              )),
              d.addDR(g, T.VECTOR_4),
              d.addSR(h, T.VECTOR_4),
              d.addSR(k, T.VECTOR_4, 0),
              d.addSR(k, T.VECTOR_4, 1),
              d.addSR(k, T.VECTOR_4, 2));
          break;
        case 39:
          h.sourceMask = 15;
          e += P.string(
            "if (any(lessThan(" + h.toGLSL() + ", vec4(0)))) discard;"
          );
          d.addSR(h, T.VECTOR_4);
          break;
        case 40:
          k = Lk.parse(n, c);
          switch (k.d) {
            case 0:
              2 == k.t
                ? ((h.sourceMask = 3),
                  d.addSaR(k, T.SAMPLER_2D_ALPHA),
                  (e += P.string("if (" + k.toGLSL() + "_alphaEnabled) {\n")),
                  (e += P.string(
                    "\t\t" +
                      g.toGLSL() +
                      " = vec4(texture2D(" +
                      k.toGLSL() +
                      ", " +
                      h.toGLSL() +
                      ").xyz, texture2D(" +
                      k.toGLSL() +
                      "_alpha, " +
                      h.toGLSL() +
                      ").x); // tex + alpha\n"
                  )),
                  (e += "\t} else {\n"),
                  (e += P.string(
                    "\t\t" +
                      g.toGLSL() +
                      " = texture2D(" +
                      k.toGLSL() +
                      ", " +
                      h.toGLSL() +
                      "); // tex\n"
                  )),
                  (e += "\t}"))
                : ((h.sourceMask = 3),
                  d.addSaR(k, T.SAMPLER_2D),
                  (e += P.string(
                    g.toGLSL() +
                      " = texture2D(" +
                      k.toGLSL() +
                      ", " +
                      h.toGLSL() +
                      "); // tex"
                  )));
              break;
            case 1:
              2 == k.t
                ? ((h.sourceMask = 7),
                  d.addSaR(k, T.SAMPLER_CUBE_ALPHA),
                  (e += P.string("if (" + k.toGLSL() + "_alphaEnabled) {\n")),
                  (e += P.string(
                    "\t\t" +
                      g.toGLSL() +
                      " = vec4(textureCube(" +
                      k.toGLSL() +
                      ", " +
                      h.toGLSL() +
                      ").xyz, textureCube(" +
                      k.toGLSL() +
                      "_alpha, " +
                      h.toGLSL() +
                      ").x); // tex + alpha\n"
                  )),
                  (e += "\t} else {\n"),
                  (e += P.string(
                    "\t\t" +
                      g.toGLSL() +
                      " = textureCube(" +
                      k.toGLSL() +
                      ", " +
                      h.toGLSL() +
                      "); // tex"
                  )),
                  (e += "\t}"))
                : ((h.sourceMask = 7),
                  (e += P.string(
                    g.toGLSL() +
                      " = textureCube(" +
                      k.toGLSL() +
                      ", " +
                      h.toGLSL() +
                      "); // tex"
                  )),
                  d.addSaR(k, T.SAMPLER_CUBE));
          }
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          null != b && (b[k.n] = k.toSamplerState());
          break;
        case 41:
          h.sourceMask = k.sourceMask = 15;
          e += P.string(
            g.toGLSL() +
              " = vec4(greaterThanEqual(" +
              h.toGLSL() +
              ", " +
              k.toGLSL() +
              "))" +
              g.getWriteMask() +
              "; // ste"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          d.addSR(k, T.VECTOR_4);
          break;
        case 42:
          h.sourceMask = k.sourceMask = 15;
          e += P.string(
            g.toGLSL() +
              " = vec4(lessThan(" +
              h.toGLSL() +
              ", " +
              k.toGLSL() +
              "))" +
              g.getWriteMask() +
              "; // slt"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          d.addSR(k, T.VECTOR_4);
          break;
        case 44:
          h.sourceMask = k.sourceMask = 15;
          e += P.string(
            g.toGLSL() +
              " = vec4(equal(" +
              h.toGLSL() +
              ", " +
              k.toGLSL() +
              "))" +
              g.getWriteMask() +
              "; // seq"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          d.addSR(k, T.VECTOR_4);
          break;
        case 45:
          h.sourceMask = k.sourceMask = 15;
          e += P.string(
            g.toGLSL() +
              " = vec4(notEqual(" +
              h.toGLSL() +
              ", " +
              k.toGLSL() +
              "))" +
              g.getWriteMask() +
              "; // sne"
          );
          d.addDR(g, T.VECTOR_4);
          d.addSR(h, T.VECTOR_4);
          d.addSR(k, T.VECTOR_4);
          break;
        default:
          throw new v(new ld("Opcode " + f));
      }
      e += "\n";
    }
    null == Te.limitedProfile &&
      ((a = q.context.getParameter(7938)),
      (Te.limitedProfile =
        -1 < a.indexOf("OpenGL ES") || -1 < a.indexOf("WebGL")));
    a =
      "" +
      P.string(
        "// AGAL " + (c == rf.VERTEX ? "vertex" : "fragment") + " shader\n"
      );
    a = Te.limitedProfile
      ? a + "#version 100\nprecision highp float;\n"
      : a + "#version 120\n";
    a += P.string(d.toGLSL(!1));
    c == rf.VERTEX && (a += "uniform vec4 vcPositionScale;\n");
    a = a + "void main() {\n" + P.string(d.toGLSL(!0));
    a += P.string(e);
    c == rf.VERTEX && (a += "\tgl_Position *= vcPositionScale;\n");
    return a + "}\n";
  };
  var Kk = function () {};
  p["openfl._internal.formats.agal._AGALConverter.DestRegister"] = Kk;
  Kk.__name__ =
    "openfl _internal formats agal _AGALConverter DestRegister".split(" ");
  Kk.parse = function (a, b) {
    var c = new Kk();
    c.programType = b;
    c.type = (a >>> 24) & 15;
    c.mask = (a >>> 16) & 15;
    c.n = a & 65535;
    return c;
  };
  Kk.prototype = {
    mask: null,
    n: null,
    programType: null,
    type: null,
    getWriteMask: function () {
      var a = ".";
      0 != (this.mask & 1) && (a += "x");
      0 != (this.mask & 2) && (a += "y");
      0 != (this.mask & 4) && (a += "z");
      0 != (this.mask & 8) && (a += "w");
      return a;
    },
    toGLSL: function (a) {
      null == a && (a = !0);
      var b =
        3 == this.type
          ? this.programType == rf.VERTEX
            ? "gl_Position"
            : "gl_FragColor"
          : Te.prefixFromType(this.type, this.programType) + this.n;
      a && 15 != this.mask && (b += this.getWriteMask());
      return b;
    },
    __class__: Kk,
  };
  var rf = (p["openfl._internal.formats.agal._AGALConverter.ProgramType"] = {
    __ename__: "openfl _internal formats agal _AGALConverter ProgramType".split(
      " "
    ),
    __constructs__: ["VERTEX", "FRAGMENT"],
  });
  rf.VERTEX = ["VERTEX", 0];
  rf.VERTEX.toString = M;
  rf.VERTEX.__enum__ = rf;
  rf.FRAGMENT = ["FRAGMENT", 1];
  rf.FRAGMENT.toString = M;
  rf.FRAGMENT.__enum__ = rf;
  var nq = function () {
    this.mEntries = [];
  };
  p["openfl._internal.formats.agal.RegisterMap"] = nq;
  nq.__name__ = ["openfl", "_internal", "formats", "agal", "RegisterMap"];
  nq.prototype = {
    mEntries: null,
    add: function (a, b, c, d) {
      for (var e = 0, f = this.mEntries; e < f.length; ) {
        var g = f[e];
        ++e;
        if (g.type == a && g.name == b && g.number == c) {
          if (g.usage != d)
            throw new v(
              new ld("Cannot use register in multiple ways yet (mat4/vec4)")
            );
          return;
        }
      }
      e = new oq();
      e.type = a;
      e.name = b;
      e.number = c;
      e.usage = d;
      this.mEntries.push(e);
    },
    addDR: function (a, b) {
      this.add(a.type, a.toGLSL(!1), a.n, b);
    },
    addSaR: function (a, b) {
      this.add(a.type, a.toGLSL(), a.n, b);
    },
    addSR: function (a, b, c) {
      null == c && (c = 0);
      0 != a.d
        ? (this.add(
            a.itype,
            Te.prefixFromType(a.itype, a.programType) + a.n,
            a.n,
            T.VECTOR_4
          ),
          this.add(
            a.type,
            Te.prefixFromType(a.type, a.programType) + a.o,
            a.o,
            T.VECTOR_4_ARRAY
          ))
        : this.add(a.type, a.toGLSL(!1, c), a.n + c, b);
    },
    getRegisterUsage: function (a) {
      return 0 != a.d
        ? T.VECTOR_4_ARRAY
        : this.getUsage(a.type, a.toGLSL(!1), a.n);
    },
    getUsage: function (a, b, c) {
      for (var d = 0, e = this.mEntries; d < e.length; ) {
        var f = e[d];
        ++d;
        if (f.type == a && f.name == b && f.number == c) return f.usage;
      }
      return T.UNUSED;
    },
    toGLSL: function (a) {
      this.mEntries.sort(function (a, b) {
        return a.number - b.number;
      });
      this.mEntries.sort(function (a, b) {
        return u.__cast(a.type, og) - u.__cast(b.type, og);
      });
      for (var b = "", c = 0, d = this.mEntries.length; c < d; ) {
        var e = c++;
        e = this.mEntries[e];
        if (!((a && 2 != e.type) || (!a && 2 == e.type)) && 3 != e.type) {
          switch (e.type) {
            case 0:
              b += "attribute ";
              break;
            case 1:
              b += "uniform ";
              break;
            case 2:
              b += "\t";
              break;
            case 3:
              break;
            case 4:
              b += "varying ";
              break;
            case 5:
              b += "uniform ";
              break;
            default:
              throw new v(new ld());
          }
          switch (e.usage[1]) {
            case 1:
              b += "vec4 ";
              break;
            case 2:
              b += "mat4 ";
              break;
            case 3:
              b += "sampler2D ";
              break;
            case 5:
              b += "samplerCube ";
              break;
            case 7:
              b += "vec4 ";
          }
          e.usage == T.SAMPLER_2D_ALPHA
            ? ((b += "sampler2D "),
              (b += P.string(e.name)),
              (b += ";\n"),
              (b += "uniform "),
              (b += "sampler2D "),
              (b += P.string(e.name + "_alpha")),
              (b += ";\n"),
              (b += "uniform "),
              (b += "bool "),
              (b += P.string(e.name + "_alphaEnabled")))
            : e.usage == T.SAMPLER_CUBE_ALPHA
            ? ((b += "samplerCube "),
              (b += P.string(e.name)),
              (b += ";\n"),
              (b += "uniform "),
              (b += "samplerCube "),
              (b += P.string(e.name + "_alpha")),
              (b += ";\n"),
              (b += "uniform "),
              (b += "bool "),
              (b += P.string(e.name + "_alphaEnabled")))
            : (b =
                e.usage == T.VECTOR_4_ARRAY
                  ? b + P.string(e.name + "[128]")
                  : b + P.string(e.name));
          b += ";\n";
        }
      }
      return b;
    },
    __class__: nq,
  };
  var oq = function () {};
  p["openfl._internal.formats.agal._AGALConverter.RegisterMapEntry"] = oq;
  oq.__name__ =
    "openfl _internal formats agal _AGALConverter RegisterMapEntry".split(" ");
  oq.prototype = {
    name: null,
    number: null,
    type: null,
    usage: null,
    __class__: oq,
  };
  var T = (p["openfl._internal.formats.agal._AGALConverter.RegisterUsage"] = {
    __ename__:
      "openfl _internal formats agal _AGALConverter RegisterUsage".split(" "),
    __constructs__:
      "UNUSED VECTOR_4 MATRIX_4_4 SAMPLER_2D SAMPLER_2D_ALPHA SAMPLER_CUBE SAMPLER_CUBE_ALPHA VECTOR_4_ARRAY".split(
        " "
      ),
  });
  T.UNUSED = ["UNUSED", 0];
  T.UNUSED.toString = M;
  T.UNUSED.__enum__ = T;
  T.VECTOR_4 = ["VECTOR_4", 1];
  T.VECTOR_4.toString = M;
  T.VECTOR_4.__enum__ = T;
  T.MATRIX_4_4 = ["MATRIX_4_4", 2];
  T.MATRIX_4_4.toString = M;
  T.MATRIX_4_4.__enum__ = T;
  T.SAMPLER_2D = ["SAMPLER_2D", 3];
  T.SAMPLER_2D.toString = M;
  T.SAMPLER_2D.__enum__ = T;
  T.SAMPLER_2D_ALPHA = ["SAMPLER_2D_ALPHA", 4];
  T.SAMPLER_2D_ALPHA.toString = M;
  T.SAMPLER_2D_ALPHA.__enum__ = T;
  T.SAMPLER_CUBE = ["SAMPLER_CUBE", 5];
  T.SAMPLER_CUBE.toString = M;
  T.SAMPLER_CUBE.__enum__ = T;
  T.SAMPLER_CUBE_ALPHA = ["SAMPLER_CUBE_ALPHA", 6];
  T.SAMPLER_CUBE_ALPHA.toString = M;
  T.SAMPLER_CUBE_ALPHA.__enum__ = T;
  T.VECTOR_4_ARRAY = ["VECTOR_4_ARRAY", 7];
  T.VECTOR_4_ARRAY.toString = M;
  T.VECTOR_4_ARRAY.__enum__ = T;
  var Lk = function () {};
  p["openfl._internal.formats.agal._AGALConverter.SamplerRegister"] = Lk;
  Lk.__name__ =
    "openfl _internal formats agal _AGALConverter SamplerRegister".split(" ");
  Lk.parse = function (a, b) {
    var c = new Lk();
    c.programType = b;
    b = new Fa(a.high >> 31, a.high >> 28);
    var d = new Fa(0, 15);
    b = new Fa(b.high & d.high, b.low & d.low);
    c.f = b.low;
    b = new Fa(a.high >> 31, a.high >> 24);
    d = new Fa(0, 15);
    b = new Fa(b.high & d.high, b.low & d.low);
    c.m = b.low;
    b = new Fa(a.high >> 31, a.high >> 20);
    d = new Fa(0, 15);
    b = new Fa(b.high & d.high, b.low & d.low);
    c.w = b.low;
    b = new Fa(a.high >> 31, a.high >> 16);
    d = new Fa(0, 15);
    b = new Fa(b.high & d.high, b.low & d.low);
    c.s = b.low;
    b = new Fa(a.high >> 31, a.high >> 12);
    d = new Fa(0, 15);
    b = new Fa(b.high & d.high, b.low & d.low);
    c.d = b.low;
    b = new Fa(a.high >> 31, a.high >> 8);
    d = new Fa(0, 15);
    b = new Fa(b.high & d.high, b.low & d.low);
    c.t = b.low;
    b = new Fa(a.high >> 31, a.high >> 0);
    d = new Fa(0, 15);
    b = new Fa(b.high & d.high, b.low & d.low);
    c.type = b.low;
    b = new Fa(a.high >> 16, (a.high << 16) | (a.low >>> 16));
    d = new Fa(0, 255);
    b = new Fa(b.high & d.high, b.low & d.low);
    c.b = b.low;
    b = new Fa(0, 65535);
    a = new Fa(a.high & b.high, a.low & b.low);
    c.n = a.low;
    return c;
  };
  Lk.prototype = {
    b: null,
    d: null,
    f: null,
    m: null,
    n: null,
    programType: null,
    s: null,
    t: null,
    type: null,
    w: null,
    toGLSL: function () {
      return Te.prefixFromType(this.type, this.programType) + this.n;
    },
    toSamplerState: function () {
      switch (this.f) {
        case 0:
          var a = 5;
          break;
        case 1:
          a = 4;
          break;
        default:
          throw new v(new ld());
      }
      switch (this.m) {
        case 0:
          var b = 2;
          break;
        case 1:
          b = 1;
          break;
        case 2:
          b = 0;
          break;
        default:
          throw new v(new ld());
      }
      switch (this.w) {
        case 0:
          var c = 0;
          break;
        case 1:
          c = 2;
          break;
        default:
          throw new v(new ld());
      }
      return new Oh(
        c,
        a,
        b,
        ((this.b << 24) >> 24) / 8,
        4 == (this.s & 4),
        1 == (this.s & 1),
        2 == this.t
      );
    },
    __class__: Lk,
  };
  var tj = function () {};
  p["openfl._internal.formats.agal._AGALConverter.SourceRegister"] = tj;
  tj.__name__ =
    "openfl _internal formats agal _AGALConverter SourceRegister".split(" ");
  tj.parse = function (a, b, c) {
    var d = new tj();
    d.programType = b;
    b = new Fa(a.high >> 31, a.high >> 31);
    var e = new Fa(0, 1);
    b = new Fa(b.high & e.high, b.low & e.low);
    d.d = b.low;
    b = new Fa(a.high >> 31, a.high >> 16);
    e = new Fa(0, 3);
    b = new Fa(b.high & e.high, b.low & e.low);
    d.q = b.low;
    b = new Fa(a.high >> 31, a.high >> 8);
    e = new Fa(0, 15);
    b = new Fa(b.high & e.high, b.low & e.low);
    d.itype = b.low;
    b = new Fa(a.high >> 31, a.high >> 0);
    e = new Fa(0, 15);
    b = new Fa(b.high & e.high, b.low & e.low);
    d.type = b.low;
    b = new Fa(a.high >> 24, (a.high << 8) | (a.low >>> 24));
    e = new Fa(0, 255);
    b = new Fa(b.high & e.high, b.low & e.low);
    d.s = b.low;
    b = new Fa(a.high >> 16, (a.high << 16) | (a.low >>> 16));
    e = new Fa(0, 255);
    b = new Fa(b.high & e.high, b.low & e.low);
    d.o = b.low;
    b = new Fa(0, 65535);
    a = new Fa(a.high & b.high, a.low & b.low);
    d.n = a.low;
    d.sourceMask = c;
    return d;
  };
  tj.prototype = {
    d: null,
    itype: null,
    n: null,
    o: null,
    programType: null,
    q: null,
    s: null,
    sourceMask: null,
    type: null,
    toGLSL: function (a, b) {
      null == b && (b = 0);
      null == a && (a = !0);
      if (3 == this.type)
        return this.programType == rf.VERTEX ? "gl_Position" : "gl_FragColor";
      var c = 228 == this.s && 15 == this.sourceMask,
        d = "";
      if (5 != this.type && !c)
        for (c = 0; 4 > c; ) {
          var e = c++;
          if (0 != (this.sourceMask & (1 << e)))
            switch ((this.s >> (2 * e)) & 3) {
              case 0:
                d += "x";
                break;
              case 1:
                d += "y";
                break;
              case 2:
                d += "z";
                break;
              case 3:
                d += "w";
            }
        }
      c = Te.prefixFromType(this.type, this.programType);
      0 == this.d
        ? (c += this.n + b)
        : ((c += this.o),
          (e = String.fromCharCode(Q.cca("x", 0) + this.q)),
          (e =
            Te.prefixFromType(this.itype, this.programType) + this.n + "." + e),
          (c += "[ int(" + e + ") +" + b + "]"));
      a && "" != d && (c += "." + d);
      return c;
    },
    __class__: tj,
  };
  var Qn = function (a, b) {
    this.version = 0;
    a.position = b;
    var c = a.readUTFBytes(3);
    a.position = b;
    if ("ATF" != c) throw new v(new ld("ATF signature not found"));
    255 == a.b[b + 6]
      ? ((this.version = a.b[b + 7]),
        (a.position = b + 8),
        (c = this.__readUInt32(a)))
      : ((this.version = 0), (a.position = b + 3), (c = this.__readUInt24(a)));
    if (u.__cast(b + c, og) > Na.get_length(a))
      throw new v(new ld("ATF length exceeds byte array length"));
    this.data = a;
  };
  p["openfl._internal.formats.atf.ATFReader"] = Qn;
  Qn.__name__ = ["openfl", "_internal", "formats", "atf", "ATFReader"];
  Qn.prototype = {
    atfFormat: null,
    cubeMap: null,
    data: null,
    height: null,
    mipCount: null,
    version: null,
    width: null,
    readHeader: function (a, b, c) {
      var d = this.data.readUnsignedByte(),
        e = d >> 7;
      if (!c && 0 != e) throw new v(new ld("ATF Cube map not expected"));
      if (c && 1 != e) throw new v(new ld("ATF Cube map expected"));
      this.cubeMap = c;
      this.atfFormat = d & 127;
      3 != this.atfFormat &&
        5 != this.atfFormat &&
        mb.warn(
          "Only ATF block compressed textures without JPEG-XR+LZMA are supported",
          {
            fileName: "ATFReader.hx",
            lineNumber: 107,
            className: "openfl._internal.formats.atf.ATFReader",
            methodName: "readHeader",
          }
        );
      this.width = 1 << this.data.readUnsignedByte();
      this.height = 1 << this.data.readUnsignedByte();
      if (this.width != a || this.height != b)
        throw new v(new ld("ATF width and height dont match"));
      this.mipCount = this.data.readUnsignedByte();
      return 5 == this.atfFormat;
    },
    readTextures: function (a) {
      for (
        var b = 3 > this.version ? 3 : 4, c = 0, d = this.cubeMap ? 6 : 1;
        c < d;

      )
        for (var e = c++, f = 0, g = this.mipCount; f < g; )
          for (var h = f++, n = 0, k = b; n < k; ) {
            var m = n++,
              l =
                0 == this.version
                  ? this.__readUInt24(this.data)
                  : this.__readUInt32(this.data);
            if (Xa.gt(this.data.position + l, Na.get_length(this.data)))
              throw new v(new ld("Block length exceeds ATF file length"));
            if (Xa.gt(l, 0)) {
              var p = new Ra(new Je(l));
              this.data.readBytes(Na.fromBytes(p), 0, l);
              a(e, h, m, this.width >> h, this.height >> h, l, p);
            }
          }
    },
    __readUInt24: function (a) {
      var b = a.readUnsignedByte() << 16;
      b |= a.readUnsignedByte() << 8;
      return (b |= a.readUnsignedByte());
    },
    __readUInt32: function (a) {
      var b = a.readUnsignedByte() << 24;
      b |= a.readUnsignedByte() << 16;
      b |= a.readUnsignedByte() << 8;
      return (b |= a.readUnsignedByte());
    },
    __class__: Qn,
  };
  var fb = function () {};
  p["openfl._internal.formats.html.HTMLParser"] = fb;
  fb.__name__ = ["openfl", "_internal", "formats", "html", "HTMLParser"];
  fb.parse = function (a, b, c) {
    a = a.replace(fb.__regexBreakTag.r, "\n");
    a = a.replace(fb.__regexEntities[0].r, '"');
    a = a.replace(fb.__regexEntities[1].r, "'");
    a = a.replace(fb.__regexEntities[2].r, "&");
    a = a.replace(fb.__regexEntities[5].r, " ");
    var d = a.split("<");
    if (1 == d.length)
      (a = a.replace(fb.__regexHTMLTag.r, "")),
        1 < c.get_length() && c.splice(1, c.get_length() - 1),
        (a = a.replace(fb.__regexEntities[3].r, "<")),
        (a = a.replace(fb.__regexEntities[4].r, ">")),
        (c = c.get(0)),
        (c.format = b),
        (c.start = 0),
        (c.end = a.length);
    else {
      c.splice(0, c.get_length());
      a = "";
      for (var e, f = 0, g = d.length; f < g; ) {
        var h = f++;
        e = d[h];
        e = e.replace(fb.__regexEntities[3].r, "<");
        e = e.replace(fb.__regexEntities[4].r, ">");
        d[h] = e;
      }
      e = [b.clone()];
      f = [];
      h = !1;
      for (g = 0; g < d.length; ) {
        var n = d[g];
        ++g;
        if ("" != n) {
          var k = "/" == Q.substr(n, 0, 1),
            m = n.indexOf(">"),
            l = m + 1,
            p = n.indexOf(" ");
          p = n.substring(k ? 1 : 0, -1 < p && p < m ? p : m);
          if (k)
            p.toLowerCase() == f[f.length - 1].toLowerCase() &&
              (f.pop(),
              e.pop(),
              (k = e[e.length - 1].clone()),
              "p" == p.toLowerCase() &&
                0 < c.get_length() &&
                ((a += "\n"), (h = !0)),
              l < n.length &&
                ((h = Q.substr(n, l, null)),
                c.push(new vh(k, a.length, a.length + h.length)),
                (a += h),
                (h = !1)));
          else if (((k = e[e.length - 1].clone()), -1 < m)) {
            switch (p.toLowerCase()) {
              case "a":
                fb.__regexHref.match(n) &&
                  (k.url = fb.__getAttributeMatch(fb.__regexHref));
                break;
              case "b":
                k.bold = !0;
                break;
              case "em":
              case "i":
                k.italic = !0;
                break;
              case "font":
                fb.__regexFace.match(n) &&
                  (k.font = fb.__getAttributeMatch(fb.__regexFace));
                fb.__regexColor.match(n) &&
                  (k.color = P.parseInt(
                    "0x" + fb.__getAttributeMatch(fb.__regexColor)
                  ));
                if (fb.__regexSize.match(n)) {
                  m = fb.__getAttributeMatch(fb.__regexSize);
                  var q = Q.cca(m, 0);
                  k.size =
                    43 == q || 45 == q
                      ? (2 <= e.length ? e[e.length - 2] : b).size +
                        P.parseInt(m)
                      : P.parseInt(m);
                }
                break;
              case "p":
                0 < c.get_length() && !h && (a += "\n");
                fb.__regexAlign.match(n) &&
                  ((m = fb.__getAttributeMatch(fb.__regexAlign).toLowerCase()),
                  (k.align = wh.fromString(m)));
                break;
              case "textformat":
                fb.__regexBlockIndent.match(n) &&
                  (k.blockIndent = P.parseInt(
                    fb.__getAttributeMatch(fb.__regexBlockIndent)
                  ));
                fb.__regexIndent.match(n) &&
                  (k.indent = P.parseInt(
                    fb.__getAttributeMatch(fb.__regexIndent)
                  ));
                fb.__regexLeading.match(n) &&
                  (k.leading = P.parseInt(
                    fb.__getAttributeMatch(fb.__regexLeading)
                  ));
                fb.__regexLeftMargin.match(n) &&
                  (k.leftMargin = P.parseInt(
                    fb.__getAttributeMatch(fb.__regexLeftMargin)
                  ));
                fb.__regexRightMargin.match(n) &&
                  (k.rightMargin = P.parseInt(
                    fb.__getAttributeMatch(fb.__regexRightMargin)
                  ));
                if (fb.__regexTabStops.match(n)) {
                  m = fb.__getAttributeMatch(fb.__regexTabStops).split(" ");
                  q = [];
                  for (var r = 0; r < m.length; ) {
                    var t = m[r];
                    ++r;
                    q.push(P.parseInt(t));
                  }
                  k.tabStops = q;
                }
                break;
              case "u":
                k.underline = !0;
            }
            e.push(k);
            f.push(p);
            l < n.length &&
              ((h = n.substring(l)),
              c.push(new vh(k, a.length, a.length + h.length)),
              (a += h),
              (h = !1));
          } else
            c.push(new vh(k, a.length, a.length + n.length)),
              (a += n),
              (h = !1);
        }
      }
      0 == c.get_length() && c.push(new vh(e[0], 0, 0));
    }
    return a;
  };
  fb.__getAttributeMatch = function (a) {
    return null != a.matched(2) ? a.matched(2) : a.matched(3);
  };
  var uj = (p["openfl._internal.formats.swf.FilterType"] = {
    __ename__: ["openfl", "_internal", "formats", "swf", "FilterType"],
    __constructs__: [
      "BlurFilter",
      "ColorMatrixFilter",
      "DropShadowFilter",
      "GlowFilter",
    ],
  });
  uj.BlurFilter = function (a, b, c) {
    a = ["BlurFilter", 0, a, b, c];
    a.__enum__ = uj;
    a.toString = M;
    return a;
  };
  uj.ColorMatrixFilter = function (a) {
    a = ["ColorMatrixFilter", 1, a];
    a.__enum__ = uj;
    a.toString = M;
    return a;
  };
  uj.DropShadowFilter = function (a, b, c, d, e, f, g, h, n, k, m) {
    a = ["DropShadowFilter", 2, a, b, c, d, e, f, g, h, n, k, m];
    a.__enum__ = uj;
    a.toString = M;
    return a;
  };
  uj.GlowFilter = function (a, b, c, d, e, f, g, h) {
    a = ["GlowFilter", 3, a, b, c, d, e, f, g, h];
    a.__enum__ = uj;
    a.toString = M;
    return a;
  };
  var Kf = function () {
    this.symbols = new Ca();
  };
  p["openfl._internal.formats.swf.SWFLite"] = Kf;
  Kf.__name__ = ["openfl", "_internal", "formats", "swf", "SWFLite"];
  Kf.resolveClass = function (a) {
    var b = qa.resolveClass(a);
    null == b &&
      (b = qa.resolveClass(ba.replace(a, "openfl._legacy", "openfl")));
    null == b && (b = qa.resolveClass(ba.replace(a, "openfl._v2", "openfl")));
    return b;
  };
  Kf.resolveEnum = function (a) {
    var b = qa.resolveEnum(a);
    null == b &&
      (b = qa.resolveEnum(ba.replace(a, "openfl._legacy", "openfl")));
    null == b && (b = qa.resolveEnum(ba.replace(a, "openfl._v2", "openfl")));
    return b;
  };
  Kf.unserialize = function (a) {
    if (null == a) return null;
    a = new Ie(a);
    a.setResolver({
      resolveClass: Kf.resolveClass,
      resolveEnum: Kf.resolveEnum,
    });
    return a.unserialize();
  };
  Kf.prototype = {
    frameRate: null,
    library: null,
    root: null,
    symbols: null,
    createButton: function (a) {
      return null;
    },
    createMovieClip: function (a) {
      null == a && (a = "");
      if ("" == a) return this.root.__createObject(this);
      for (var b = this.symbols.iterator(); b.hasNext(); ) {
        var c = b.next();
        if (c.className == a && u.__instanceof(c, Mk))
          return u.__cast(c, Mk).__createObject(this);
      }
      return null;
    },
    getBitmapData: function (a) {
      for (var b = this.symbols.iterator(); b.hasNext(); ) {
        var c = b.next();
        if (c.className == a && u.__instanceof(c, bh))
          return oa.getBitmapData(c.path);
      }
      return null;
    },
    hasSymbol: function (a) {
      for (var b = this.symbols.iterator(); b.hasNext(); )
        if (b.next().className == a) return !0;
      return !1;
    },
    serialize: function () {
      var a = new we();
      a.serialize(this);
      return a.toString();
    },
    __class__: Kf,
  };
  var Yc = function () {
    ac.call(this);
  };
  p["openfl.utils.AssetLibrary"] = Yc;
  Yc.__name__ = ["openfl", "utils", "AssetLibrary"];
  Yc.fromBytes = function (a, b) {
    return Yc.fromManifest(Zc.fromBytes(Na.toBytes(a), b));
  };
  Yc.fromFile = function (a, b) {
    return Yc.fromManifest(Zc.fromFile(a, b));
  };
  Yc.fromManifest = function (a) {
    a = ac.fromManifest(a);
    if (null != a) {
      if (u.__instanceof(a, Yc)) return a;
      var b = new Yc();
      b.__proxy = a;
      return b;
    }
    return null;
  };
  Yc.loadFromBytes = function (a, b) {
    return Zc.loadFromBytes(Na.toBytes(a), b).then(function (a) {
      return Yc.loadFromManifest(a);
    });
  };
  Yc.loadFromFile = function (a, b) {
    return Zc.loadFromFile(a, b).then(function (a) {
      return Yc.loadFromManifest(a);
    });
  };
  Yc.loadFromManifest = function (a) {
    a = Yc.fromManifest(a);
    return null != a
      ? a.load().then(function (a) {
          return ab.withValue(a);
        })
      : ab.withError("Could not load asset manifest");
  };
  Yc.__super__ = ac;
  Yc.prototype = x(ac.prototype, {
    __proxy: null,
    exists: function (a, b) {
      return null != this.__proxy
        ? this.__proxy.exists(a, b)
        : ac.prototype.exists.call(this, a, b);
    },
    getAsset: function (a, b) {
      return null != this.__proxy
        ? this.__proxy.getAsset(a, b)
        : ac.prototype.getAsset.call(this, a, b);
    },
    getAudioBuffer: function (a) {
      return null != this.__proxy
        ? this.__proxy.getAudioBuffer(a)
        : ac.prototype.getAudioBuffer.call(this, a);
    },
    getBytes: function (a) {
      return null != this.__proxy
        ? this.__proxy.getBytes(a)
        : ac.prototype.getBytes.call(this, a);
    },
    getFont: function (a) {
      return null != this.__proxy
        ? this.__proxy.getFont(a)
        : ac.prototype.getFont.call(this, a);
    },
    getImage: function (a) {
      return null != this.__proxy
        ? this.__proxy.getImage(a)
        : ac.prototype.getImage.call(this, a);
    },
    getMovieClip: function (a) {
      return null;
    },
    getPath: function (a) {
      return null != this.__proxy
        ? this.__proxy.getPath(a)
        : ac.prototype.getPath.call(this, a);
    },
    getText: function (a) {
      return null != this.__proxy
        ? this.__proxy.getText(a)
        : ac.prototype.getText.call(this, a);
    },
    isLocal: function (a, b) {
      return null != this.__proxy
        ? this.__proxy.isLocal(a, b)
        : ac.prototype.isLocal.call(this, a, b);
    },
    list: function (a) {
      return null != this.__proxy
        ? this.__proxy.list(a)
        : ac.prototype.list.call(this, a);
    },
    loadAsset: function (a, b) {
      return null != this.__proxy
        ? this.__proxy.loadAsset(a, b)
        : ac.prototype.loadAsset.call(this, a, b);
    },
    load: function () {
      return null != this.__proxy
        ? this.__proxy.load()
        : ac.prototype.load.call(this);
    },
    loadAudioBuffer: function (a) {
      return null != this.__proxy
        ? this.__proxy.loadAudioBuffer(a)
        : ac.prototype.loadAudioBuffer.call(this, a);
    },
    loadBytes: function (a) {
      return null != this.__proxy
        ? this.__proxy.loadBytes(a)
        : ac.prototype.loadBytes.call(this, a);
    },
    loadFont: function (a) {
      return null != this.__proxy
        ? this.__proxy.loadFont(a)
        : ac.prototype.loadFont.call(this, a);
    },
    loadImage: function (a) {
      return null != this.__proxy
        ? this.__proxy.loadImage(a)
        : ac.prototype.loadImage.call(this, a);
    },
    loadMovieClip: function (a) {
      return ab.withValue(this.getMovieClip(a));
    },
    loadText: function (a) {
      return null != this.__proxy
        ? this.__proxy.loadText(a)
        : ac.prototype.loadText.call(this, a);
    },
    unload: function () {
      null != this.__proxy
        ? this.__proxy.unload()
        : ac.prototype.unload.call(this);
    },
    __class__: Yc,
  });
  var pq = function (a, b) {
    ac.call(this);
    this.id = a;
    this.instanceID = null != b ? b : a;
    this.alphaCheck = new la();
    this.imageClassNames = new la();
    this.rootPath = "";
  };
  p["openfl._internal.formats.swf.SWFLiteLibrary"] = pq;
  pq.__name__ = ["openfl", "_internal", "formats", "swf", "SWFLiteLibrary"];
  pq.__super__ = Yc;
  pq.prototype = x(Yc.prototype, {
    alphaCheck: null,
    id: null,
    imageClassNames: null,
    instanceID: null,
    preloading: null,
    rootPath: null,
    swf: null,
    exists: function (a, b) {
      return null == this.swf
        ? !1
        : "" == a && "MOVIE_CLIP" == b
        ? !0
        : ("IMAGE" != b && "MOVIE_CLIP" != b) || null == this.swf
        ? !1
        : this.swf.hasSymbol(a);
    },
    getImage: function (a) {
      var b = this.imageClassNames;
      if (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
        (b = this.imageClassNames),
          (a = null != t[a] ? b.getReserved(a) : b.h[a]);
      b = this.alphaCheck;
      if (null != t[a] ? !b.existsReserved(a) : !b.h.hasOwnProperty(a))
        for (var c = this.swf.symbols.iterator(); c.hasNext(); )
          if (
            ((b = c.next()),
            u.__instanceof(b, bh) &&
              u.__cast(b, bh).path == a &&
              null != b.alpha)
          ) {
            c = Yc.prototype.getImage.call(this, a);
            var d = Yc.prototype.getImage.call(this, b.alpha);
            this.__copyChannel(c, d);
            d = this.cachedImages;
            null != t[a] ? d.setReserved(a, c) : (d.h[a] = c);
            this.cachedImages.remove(b.alpha);
            b = this.alphaCheck;
            null != t[a] ? b.setReserved(a, !0) : (b.h[a] = !0);
            return c;
          }
      return Yc.prototype.getImage.call(this, a);
    },
    getMovieClip: function (a) {
      return null != this.swf ? this.swf.createMovieClip(a) : null;
    },
    isLocal: function (a, b) {
      return !0;
    },
    load: function () {
      var a = this;
      if (null != this.id) {
        var b = this.id,
          c = this.preload;
        null != t[b] ? c.setReserved(b, !0) : (c.h[b] = !0);
      }
      var d = new Zd();
      this.preloading = !0;
      var e = function (b) {
        var c = a.id,
          e = a.cachedText;
        null != t[c] ? e.setReserved(c, b) : (e.h[c] = b);
        a.swf = Kf.unserialize(b);
        a.swf.library = a;
        for (b = a.swf.symbols.iterator(); b.hasNext(); )
          if (
            ((c = b.next()),
            u.__instanceof(c, bh) && ((e = c), null != e.className))
          ) {
            c = e.className;
            e = e.path;
            var f = a.imageClassNames;
            null != t[c] ? f.setReserved(c, e) : (f.h[c] = e);
          }
        b = a.instanceID;
        c = a.swf;
        e = Kf.instances;
        null != t[b] ? e.setReserved(b, c) : (e.h[b] = c);
        a.__load()
          .onProgress(B(d, d.progress))
          .onError(B(d, d.error))
          .onComplete(function (b) {
            a.preloading = !1;
            d.complete(a);
          });
      };
      if (oa.exists(this.id)) {
        for (b = this.paths.keys(); b.hasNext(); ) {
          c = b.next();
          var f = this.preload;
          null != t[c] ? f.setReserved(c, !0) : (f.h[c] = !0);
        }
        this.loadText(this.id).onError(B(d, d.error)).onComplete(e);
      } else {
        for (b = this.paths.keys(); b.hasNext(); )
          (c = b.next()),
            (f = this.preload),
            null != t[c] ? f.setReserved(c, !0) : (f.h[c] = !0);
        b = null;
        b = this.id;
        c = this.paths;
        (null != t[b] ? c.existsReserved(b) : c.h.hasOwnProperty(b))
          ? ((b = this.id),
            (c = this.paths),
            (b = null != t[b] ? c.getReserved(b) : c.h[b]))
          : (b =
              null != this.rootPath && "" != this.rootPath
                ? this.rootPath + "/" + this.id
                : this.id);
        var g = new ph();
        g.addEventListener("complete", function (a) {
          e(g.data);
        });
        g.addEventListener("ioError", function (a) {
          d.error(a);
        });
        g.load(new Qg(b));
      }
      return d.future;
    },
    loadImage: function (a) {
      var b = this,
        c = this.imageClassNames;
      if (null != t[a] ? c.existsReserved(a) : c.h.hasOwnProperty(a))
        (c = this.imageClassNames),
          (a = null != t[a] ? c.getReserved(a) : c.h[a]);
      this.preloading
        ? (c = !1)
        : ((c = this.alphaCheck),
          (c = !(null != t[a] ? c.existsReserved(a) : c.h.hasOwnProperty(a))));
      if (c)
        for (c = this.swf.symbols.iterator(); c.hasNext(); ) {
          var d = c.next();
          if (
            u.__instanceof(d, bh) &&
            u.__cast(d, bh).path == a &&
            ((d = [d]), null != d[0].alpha)
          )
            return (
              (c = [new Zd()]),
              this.__loadImage(a)
                .onError(((Mb = c[0]), B(Mb, Mb.error)))
                .onComplete(
                  (function (c, d) {
                    return function (e) {
                      b.__loadImage(d[0].alpha)
                        .onError(((Mb = c[0]), B(Mb, Mb.error)))
                        .onComplete(
                          (function (c, d) {
                            return function (f) {
                              b.__copyChannel(e, f);
                              f = b.cachedImages;
                              null != t[a] ? f.setReserved(a, e) : (f.h[a] = e);
                              b.cachedImages.remove(d[0].alpha);
                              f = b.alphaCheck;
                              null != t[a]
                                ? f.setReserved(a, !0)
                                : (f.h[a] = !0);
                              c[0].complete(e);
                            };
                          })(c, d)
                        );
                    };
                  })(c, d)
                ),
              c[0].future
            );
        }
      return Yc.prototype.loadImage.call(this, a);
    },
    unload: function () {
      if (null != this.swf) {
        var a = this.instanceID;
        var b = Kf.instances;
        (null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a))
          ? ((a = this.instanceID),
            (b = Kf.instances),
            (a = (null != t[a] ? b.getReserved(a) : b.h[a]) == this.swf))
          : (a = !1);
        a && Kf.instances.remove(this.instanceID);
        for (a = this.swf.symbols.iterator(); a.hasNext(); )
          (b = a.next()),
            u.__instanceof(b, bh) && oa.cache.removeBitmapData(b.path);
      }
    },
    __copyChannel: function (a, b) {
      null != b && a.copyChannel(b, b.get_rect(), new xd(), cd.RED, cd.ALPHA);
      a.buffer.premultiplied = !0;
      a.set_premultiplied(!1);
    },
    __fromManifest: function (a) {
      this.rootPath = a.rootPath;
      Yc.prototype.__fromManifest.call(this, a);
      this.bytesTotal = 0;
      for (a = this.paths.keys(); a.hasNext(); ) {
        var b = a.next(),
          c = this.sizes;
        this.bytesTotal += null != t[b] ? c.getReserved(b) : c.h[b];
      }
    },
    __load: function () {
      return Yc.prototype.load.call(this);
    },
    __loadImage: function (a) {
      return Yc.prototype.loadImage.call(this, a);
    },
    __class__: pq,
  });
  var ff = (p["openfl._internal.formats.swf.ShapeCommand"] = {
    __ename__: ["openfl", "_internal", "formats", "swf", "ShapeCommand"],
    __constructs__:
      "BeginBitmapFill BeginFill BeginGradientFill CurveTo EndFill LineStyle LineTo MoveTo".split(
        " "
      ),
  });
  ff.BeginBitmapFill = function (a, b, c, d) {
    a = ["BeginBitmapFill", 0, a, b, c, d];
    a.__enum__ = ff;
    a.toString = M;
    return a;
  };
  ff.BeginFill = function (a, b) {
    a = ["BeginFill", 1, a, b];
    a.__enum__ = ff;
    a.toString = M;
    return a;
  };
  ff.BeginGradientFill = function (a, b, c, d, e, f, g, h) {
    a = ["BeginGradientFill", 2, a, b, c, d, e, f, g, h];
    a.__enum__ = ff;
    a.toString = M;
    return a;
  };
  ff.CurveTo = function (a, b, c, d) {
    a = ["CurveTo", 3, a, b, c, d];
    a.__enum__ = ff;
    a.toString = M;
    return a;
  };
  ff.EndFill = ["EndFill", 4];
  ff.EndFill.toString = M;
  ff.EndFill.__enum__ = ff;
  ff.LineStyle = function (a, b, c, d, e, f, g, h) {
    a = ["LineStyle", 5, a, b, c, d, e, f, g, h];
    a.__enum__ = ff;
    a.toString = M;
    return a;
  };
  ff.LineTo = function (a, b) {
    a = ["LineTo", 6, a, b];
    a.__enum__ = ff;
    a.toString = M;
    return a;
  };
  ff.MoveTo = function (a, b) {
    a = ["MoveTo", 7, a, b];
    a.__enum__ = ff;
    a.toString = M;
    return a;
  };
  var Ue = function () {
    this.__dirty = !0;
    this.t_i =
      this.b_i =
      this.f_i =
      this.ff_i =
      this.i_i =
      this.ii_i =
      this.o_i =
      this.__lastLength =
        0;
    null == Ue.empty
      ? ((this.types = []),
        (this.b = []),
        (this.i = []),
        (this.f = []),
        (this.o = []),
        (this.ff = []),
        (this.ii = []),
        (this.objVersions = []),
        (this.copyOnWrite = !0))
      : this.__initFromEmpty();
  };
  p["openfl._internal.renderer.DrawCommandBuffer"] = Ue;
  Ue.__name__ = ["openfl", "_internal", "renderer", "DrawCommandBuffer"];
  Ue.prototype = {
    __replace_openfl_display_TriangleCulling: function (a, b, c) {
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    __replace_openfl_Vector_Int: function (a, b, c) {
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    __replace_openfl_Vector_Float: function (a, b, c) {
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    __replace_openfl__internal_renderer_ShaderBuffer: function (a, b, c) {
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    __replace_openfl_display_JointStyle: function (a, b, c) {
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    __replace_openfl_display_CapsStyle: function (a, b, c) {
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    __replace_openfl_display_LineScaleMode: function (a, b, c) {
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    __replace_Int: function (a, b, c) {
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    __replace_Bool: function (a, b, c) {
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    __replace_openfl_display_InterpolationMethod: function (a, b, c) {
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    __replace_openfl_display_SpreadMethod: function (a, b, c) {
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    __replace_Array_Float: function (a, b, c) {
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    __replace_Array_Int: function (a, b, c) {
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    __replace_openfl_display_GradientType: function (a, b, c) {
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    __replace_Float: function (a, b, c) {
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    __replace_openfl__internal_renderer_DrawCommandType: function (a, b, c) {
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    dirty: null,
    types: null,
    b: null,
    copyOnWrite: null,
    f: null,
    ff: null,
    i: null,
    ii: null,
    o: null,
    t_i: null,
    b_i: null,
    f_i: null,
    ff_i: null,
    i_i: null,
    ii_i: null,
    o_i: null,
    objVersions: null,
    __lastLength: null,
    __dirty: null,
    append: function (a) {
      if (0 == this.get_length())
        return (
          (this.types = a.types),
          (this.b = a.b),
          (this.i = a.i),
          (this.f = a.f),
          (this.o = a.o),
          (this.ff = a.ff),
          (this.ii = a.ii),
          (this.t_i = a.t_i),
          (this.b_i = a.b_i),
          (this.f_i = a.f_i),
          (this.ff_i = a.ff_i),
          (this.i_i = a.i_i),
          (this.ii_i = a.ii_i),
          (this.o_i = a.o_i),
          (this.objVersions = a.objVersions),
          (this.copyOnWrite = a.copyOnWrite = !0),
          a
        );
      for (var b = new vg(a), c = 0, d = a.types; c < d.length; ) {
        var e = d[c];
        ++c;
        switch (e[1]) {
          case 0:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.BEGIN_BITMAP_FILL;
            e = b;
            this.beginBitmapFill(
              e.buffer.o[e.oPos],
              e.buffer.o[e.oPos + 1],
              e.buffer.b[e.bPos],
              e.buffer.b[e.bPos + 1]
            );
            break;
          case 1:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.BEGIN_FILL;
            e = b;
            this.beginFill(e.buffer.i[e.iPos], e.buffer.f[e.fPos]);
            break;
          case 2:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.BEGIN_GRADIENT_FILL;
            e = b;
            this.beginGradientFill(
              e.buffer.o[e.oPos],
              e.buffer.ii[e.iiPos],
              e.buffer.ff[e.ffPos],
              e.buffer.ii[e.iiPos + 1],
              e.buffer.o[e.oPos + 1],
              e.buffer.o[e.oPos + 2],
              e.buffer.o[e.oPos + 3],
              e.buffer.f[e.fPos]
            );
            break;
          case 3:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.BEGIN_SHADER_FILL;
            e = b;
            this.beginShaderFill(e.buffer.o[e.oPos]);
            break;
          case 4:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.CUBIC_CURVE_TO;
            e = b;
            this.cubicCurveTo(
              e.buffer.f[e.fPos],
              e.buffer.f[e.fPos + 1],
              e.buffer.f[e.fPos + 2],
              e.buffer.f[e.fPos + 3],
              e.buffer.f[e.fPos + 4],
              e.buffer.f[e.fPos + 5]
            );
            break;
          case 5:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.CURVE_TO;
            e = b;
            this.curveTo(
              e.buffer.f[e.fPos],
              e.buffer.f[e.fPos + 1],
              e.buffer.f[e.fPos + 2],
              e.buffer.f[e.fPos + 3]
            );
            break;
          case 6:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.DRAW_CIRCLE;
            e = b;
            this.drawCircle(
              e.buffer.f[e.fPos],
              e.buffer.f[e.fPos + 1],
              e.buffer.f[e.fPos + 2]
            );
            break;
          case 7:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.DRAW_ELLIPSE;
            e = b;
            this.drawEllipse(
              e.buffer.f[e.fPos],
              e.buffer.f[e.fPos + 1],
              e.buffer.f[e.fPos + 2],
              e.buffer.f[e.fPos + 3]
            );
            break;
          case 8:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.DRAW_QUADS;
            e = b;
            this.drawQuads(
              e.buffer.o[e.oPos],
              e.buffer.o[e.oPos + 1],
              e.buffer.o[e.oPos + 2]
            );
            break;
          case 9:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.DRAW_RECT;
            e = b;
            this.drawRect(
              e.buffer.f[e.fPos],
              e.buffer.f[e.fPos + 1],
              e.buffer.f[e.fPos + 2],
              e.buffer.f[e.fPos + 3]
            );
            break;
          case 10:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.DRAW_ROUND_RECT;
            e = b;
            this.drawRoundRect(
              e.buffer.f[e.fPos],
              e.buffer.f[e.fPos + 1],
              e.buffer.f[e.fPos + 2],
              e.buffer.f[e.fPos + 3],
              e.buffer.f[e.fPos + 4],
              e.buffer.o[e.oPos]
            );
            break;
          case 12:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.DRAW_TRIANGLES;
            e = b;
            this.drawTriangles(
              e.buffer.o[e.oPos],
              e.buffer.o[e.oPos + 1],
              e.buffer.o[e.oPos + 2],
              e.buffer.o[e.oPos + 3]
            );
            break;
          case 13:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.END_FILL;
            this.endFill();
            break;
          case 14:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.LINE_BITMAP_STYLE;
            e = b;
            this.lineBitmapStyle(
              e.buffer.o[e.oPos],
              e.buffer.o[e.oPos + 1],
              e.buffer.b[e.bPos],
              e.buffer.b[e.bPos + 1]
            );
            break;
          case 15:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.LINE_GRADIENT_STYLE;
            e = b;
            this.lineGradientStyle(
              e.buffer.o[e.oPos],
              e.buffer.ii[e.iiPos],
              e.buffer.ff[e.ffPos],
              e.buffer.ii[e.iiPos + 1],
              e.buffer.o[e.oPos + 1],
              e.buffer.o[e.oPos + 2],
              e.buffer.o[e.oPos + 3],
              e.buffer.f[e.fPos]
            );
            break;
          case 16:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.LINE_STYLE;
            e = b;
            this.lineStyle(
              e.buffer.o[e.oPos],
              e.buffer.i[e.iPos],
              e.buffer.f[e.fPos],
              e.buffer.b[e.bPos],
              e.buffer.o[e.oPos + 1],
              e.buffer.o[e.oPos + 2],
              e.buffer.o[e.oPos + 3],
              e.buffer.f[e.fPos + 1]
            );
            break;
          case 17:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.LINE_TO;
            e = b;
            this.lineTo(e.buffer.f[e.fPos], e.buffer.f[e.fPos + 1]);
            break;
          case 18:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.MOVE_TO;
            e = b;
            this.moveTo(e.buffer.f[e.fPos], e.buffer.f[e.fPos + 1]);
            break;
          case 20:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.OVERRIDE_MATRIX;
            e = b;
            this.overrideMatrix(e.buffer.o[e.oPos]);
            break;
          case 21:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.WINDING_EVEN_ODD;
            this.windingEvenOdd();
            break;
          case 22:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.WINDING_NON_ZERO;
            this.windingNonZero();
        }
      }
      b.destroy();
      return a;
    },
    beginBitmapFill: function (a, b, c, d) {
      this.prepareWrite();
      var e = this.types,
        f = this.t_i++,
        g = K.BEGIN_BITMAP_FILL;
      !this.__dirty && (f >= e.length || e[f] != g) && (this.__dirty = !0);
      e[f] = g;
      e = this.o;
      f = this.o_i++;
      !this.__dirty &&
        (f >= e.length ||
          a != e[f] ||
          a.image.version != this.objVersions[f]) &&
        (this.__dirty = !0);
      for (e[f] = a; this.objVersions.length < f; ) this.objVersions.push(0);
      this.objVersions[f] = a.image.version;
      a = this.o;
      e = this.o_i++;
      this.__dirty ||
        (!(e >= a.length) && b.equals(a[e])) ||
        (this.__dirty = !0);
      a[e] = b;
      b = this.b;
      a = this.b_i++;
      !this.__dirty && (a >= b.length || b[a] != c) && (this.__dirty = !0);
      b[a] = c;
      c = this.b;
      b = this.b_i++;
      !this.__dirty && (b >= c.length || c[b] != d) && (this.__dirty = !0);
      c[b] = d;
    },
    beginFill: function (a, b) {
      this.prepareWrite();
      var c = this.types,
        d = this.t_i++,
        e = K.BEGIN_FILL;
      !this.__dirty && (d >= c.length || c[d] != e) && (this.__dirty = !0);
      c[d] = e;
      c = this.i;
      d = this.i_i++;
      !this.__dirty && (d >= c.length || c[d] != a) && (this.__dirty = !0);
      c[d] = a;
      a = this.f;
      c = this.f_i++;
      !this.__dirty && (c >= a.length || a[c] != b) && (this.__dirty = !0);
      a[c] = b;
    },
    beginGradientFill: function (a, b, c, d, e, f, g, h) {
      this.prepareWrite();
      var n = this.types,
        k = this.t_i++,
        m = K.BEGIN_GRADIENT_FILL;
      !this.__dirty && (k >= n.length || n[k] != m) && (this.__dirty = !0);
      n[k] = m;
      n = this.o;
      k = this.o_i++;
      !this.__dirty && (k >= n.length || n[k] != a) && (this.__dirty = !0);
      n[k] = a;
      a = this.ii;
      n = this.ii_i++;
      !this.__dirty && (n >= a.length || a[n] != b) && (this.__dirty = !0);
      a[n] = b;
      b = this.ff;
      a = this.ff_i++;
      !this.__dirty && (a >= b.length || b[a] != c) && (this.__dirty = !0);
      b[a] = c;
      c = this.ii;
      b = this.ii_i++;
      !this.__dirty && (b >= c.length || c[b] != d) && (this.__dirty = !0);
      c[b] = d;
      d = this.o;
      c = this.o_i++;
      this.__dirty ||
        (!(c >= d.length) && e.equals(d[c])) ||
        (this.__dirty = !0);
      d[c] = e;
      e = this.o;
      d = this.o_i++;
      !this.__dirty && (d >= e.length || e[d] != f) && (this.__dirty = !0);
      e[d] = f;
      f = this.o;
      e = this.o_i++;
      !this.__dirty && (e >= f.length || f[e] != g) && (this.__dirty = !0);
      f[e] = g;
      g = this.f;
      f = this.f_i++;
      !this.__dirty && (f >= g.length || g[f] != h) && (this.__dirty = !0);
      g[f] = h;
    },
    beginShaderFill: function (a) {
      this.prepareWrite();
      var b = this.types,
        c = this.t_i++,
        d = K.BEGIN_SHADER_FILL;
      !this.__dirty && (c >= b.length || b[c] != d) && (this.__dirty = !0);
      b[c] = d;
      b = this.o;
      c = this.o_i++;
      !this.__dirty && (c >= b.length || b[c] != a) && (this.__dirty = !0);
      b[c] = a;
    },
    clear: function () {
      this.o_i =
        this.ii_i =
        this.i_i =
        this.ff_i =
        this.f_i =
        this.b_i =
        this.t_i =
          0;
    },
    copy: function () {
      var a = new Ue();
      a.append(this);
      return a;
    },
    cubicCurveTo: function (a, b, c, d, e, f) {
      this.prepareWrite();
      var g = this.types,
        h = this.t_i++,
        n = K.CUBIC_CURVE_TO;
      !this.__dirty && (h >= g.length || g[h] != n) && (this.__dirty = !0);
      g[h] = n;
      g = this.f;
      h = this.f_i++;
      !this.__dirty && (h >= g.length || g[h] != a) && (this.__dirty = !0);
      g[h] = a;
      a = this.f;
      g = this.f_i++;
      !this.__dirty && (g >= a.length || a[g] != b) && (this.__dirty = !0);
      a[g] = b;
      b = this.f;
      a = this.f_i++;
      !this.__dirty && (a >= b.length || b[a] != c) && (this.__dirty = !0);
      b[a] = c;
      c = this.f;
      b = this.f_i++;
      !this.__dirty && (b >= c.length || c[b] != d) && (this.__dirty = !0);
      c[b] = d;
      d = this.f;
      c = this.f_i++;
      !this.__dirty && (c >= d.length || d[c] != e) && (this.__dirty = !0);
      d[c] = e;
      e = this.f;
      d = this.f_i++;
      !this.__dirty && (d >= e.length || e[d] != f) && (this.__dirty = !0);
      e[d] = f;
    },
    curveTo: function (a, b, c, d) {
      this.prepareWrite();
      var e = this.types,
        f = this.t_i++,
        g = K.CURVE_TO;
      !this.__dirty && (f >= e.length || e[f] != g) && (this.__dirty = !0);
      e[f] = g;
      e = this.f;
      f = this.f_i++;
      !this.__dirty && (f >= e.length || e[f] != a) && (this.__dirty = !0);
      e[f] = a;
      a = this.f;
      e = this.f_i++;
      !this.__dirty && (e >= a.length || a[e] != b) && (this.__dirty = !0);
      a[e] = b;
      b = this.f;
      a = this.f_i++;
      !this.__dirty && (a >= b.length || b[a] != c) && (this.__dirty = !0);
      b[a] = c;
      c = this.f;
      b = this.f_i++;
      !this.__dirty && (b >= c.length || c[b] != d) && (this.__dirty = !0);
      c[b] = d;
    },
    destroy: function () {
      this.ii = this.ff = this.o = this.f = this.i = this.b = this.types = null;
    },
    drawCircle: function (a, b, c) {
      this.prepareWrite();
      var d = this.types,
        e = this.t_i++,
        f = K.DRAW_CIRCLE;
      !this.__dirty && (e >= d.length || d[e] != f) && (this.__dirty = !0);
      d[e] = f;
      d = this.f;
      e = this.f_i++;
      !this.__dirty && (e >= d.length || d[e] != a) && (this.__dirty = !0);
      d[e] = a;
      a = this.f;
      d = this.f_i++;
      !this.__dirty && (d >= a.length || a[d] != b) && (this.__dirty = !0);
      a[d] = b;
      b = this.f;
      a = this.f_i++;
      !this.__dirty && (a >= b.length || b[a] != c) && (this.__dirty = !0);
      b[a] = c;
    },
    drawEllipse: function (a, b, c, d) {
      this.prepareWrite();
      var e = this.types,
        f = this.t_i++,
        g = K.DRAW_ELLIPSE;
      !this.__dirty && (f >= e.length || e[f] != g) && (this.__dirty = !0);
      e[f] = g;
      e = this.f;
      f = this.f_i++;
      !this.__dirty && (f >= e.length || e[f] != a) && (this.__dirty = !0);
      e[f] = a;
      a = this.f;
      e = this.f_i++;
      !this.__dirty && (e >= a.length || a[e] != b) && (this.__dirty = !0);
      a[e] = b;
      b = this.f;
      a = this.f_i++;
      !this.__dirty && (a >= b.length || b[a] != c) && (this.__dirty = !0);
      b[a] = c;
      c = this.f;
      b = this.f_i++;
      !this.__dirty && (b >= c.length || c[b] != d) && (this.__dirty = !0);
      c[b] = d;
    },
    drawQuads: function (a, b, c) {
      this.prepareWrite();
      var d = this.types,
        e = this.t_i++,
        f = K.DRAW_QUADS;
      !this.__dirty && (e >= d.length || d[e] != f) && (this.__dirty = !0);
      d[e] = f;
      d = this.o;
      e = this.o_i++;
      !this.__dirty && (e >= d.length || d[e] != a) && (this.__dirty = !0);
      d[e] = a;
      a = this.o;
      d = this.o_i++;
      !this.__dirty && (d >= a.length || a[d] != b) && (this.__dirty = !0);
      a[d] = b;
      b = this.o;
      a = this.o_i++;
      !this.__dirty && (a >= b.length || b[a] != c) && (this.__dirty = !0);
      b[a] = c;
    },
    drawRect: function (a, b, c, d) {
      this.prepareWrite();
      var e = this.types,
        f = this.t_i++,
        g = K.DRAW_RECT;
      !this.__dirty && (f >= e.length || e[f] != g) && (this.__dirty = !0);
      e[f] = g;
      e = this.f;
      f = this.f_i++;
      !this.__dirty && (f >= e.length || e[f] != a) && (this.__dirty = !0);
      e[f] = a;
      a = this.f;
      e = this.f_i++;
      !this.__dirty && (e >= a.length || a[e] != b) && (this.__dirty = !0);
      a[e] = b;
      b = this.f;
      a = this.f_i++;
      !this.__dirty && (a >= b.length || b[a] != c) && (this.__dirty = !0);
      b[a] = c;
      c = this.f;
      b = this.f_i++;
      !this.__dirty && (b >= c.length || c[b] != d) && (this.__dirty = !0);
      c[b] = d;
    },
    drawRoundRect: function (a, b, c, d, e, f) {
      this.prepareWrite();
      var g = this.types,
        h = this.t_i++,
        n = K.DRAW_ROUND_RECT;
      !this.__dirty && (h >= g.length || g[h] != n) && (this.__dirty = !0);
      g[h] = n;
      g = this.f;
      h = this.f_i++;
      !this.__dirty && (h >= g.length || g[h] != a) && (this.__dirty = !0);
      g[h] = a;
      a = this.f;
      g = this.f_i++;
      !this.__dirty && (g >= a.length || a[g] != b) && (this.__dirty = !0);
      a[g] = b;
      b = this.f;
      a = this.f_i++;
      !this.__dirty && (a >= b.length || b[a] != c) && (this.__dirty = !0);
      b[a] = c;
      c = this.f;
      b = this.f_i++;
      !this.__dirty && (b >= c.length || c[b] != d) && (this.__dirty = !0);
      c[b] = d;
      d = this.f;
      c = this.f_i++;
      !this.__dirty && (c >= d.length || d[c] != e) && (this.__dirty = !0);
      d[c] = e;
      !this.__dirty &&
        (this.o_i >= this.o.length || this.o[this.o_i] != f) &&
        (this.__dirty = !0);
      this.o[this.o_i++] = f;
    },
    drawTriangles: function (a, b, c, d) {
      this.prepareWrite();
      var e = this.types,
        f = this.t_i++,
        g = K.DRAW_TRIANGLES;
      !this.__dirty && (f >= e.length || e[f] != g) && (this.__dirty = !0);
      e[f] = g;
      e = this.o;
      f = this.o_i++;
      !this.__dirty && (f >= e.length || e[f] != a) && (this.__dirty = !0);
      e[f] = a;
      a = this.o;
      e = this.o_i++;
      !this.__dirty && (e >= a.length || a[e] != b) && (this.__dirty = !0);
      a[e] = b;
      b = this.o;
      a = this.o_i++;
      !this.__dirty && (a >= b.length || b[a] != c) && (this.__dirty = !0);
      b[a] = c;
      c = this.o;
      b = this.o_i++;
      !this.__dirty && (b >= c.length || c[b] != d) && (this.__dirty = !0);
      c[b] = d;
    },
    endFill: function () {
      this.prepareWrite();
      var a = this.types,
        b = this.t_i++,
        c = K.END_FILL;
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    lineBitmapStyle: function (a, b, c, d) {
      this.prepareWrite();
      var e = this.types,
        f = this.t_i++,
        g = K.LINE_BITMAP_STYLE;
      !this.__dirty && (f >= e.length || e[f] != g) && (this.__dirty = !0);
      e[f] = g;
      e = this.o;
      f = this.o_i++;
      !this.__dirty &&
        (f >= e.length ||
          a != e[f] ||
          a.image.version != this.objVersions[f]) &&
        (this.__dirty = !0);
      for (e[f] = a; this.objVersions.length < f; ) this.objVersions.push(0);
      this.objVersions[f] = a.image.version;
      a = this.o;
      e = this.o_i++;
      this.__dirty ||
        (!(e >= a.length) && b.equals(a[e])) ||
        (this.__dirty = !0);
      a[e] = b;
      b = this.b;
      a = this.b_i++;
      !this.__dirty && (a >= b.length || b[a] != c) && (this.__dirty = !0);
      b[a] = c;
      c = this.b;
      b = this.b_i++;
      !this.__dirty && (b >= c.length || c[b] != d) && (this.__dirty = !0);
      c[b] = d;
    },
    lineGradientStyle: function (a, b, c, d, e, f, g, h) {
      this.prepareWrite();
      var n = this.types,
        k = this.t_i++,
        m = K.LINE_GRADIENT_STYLE;
      !this.__dirty && (k >= n.length || n[k] != m) && (this.__dirty = !0);
      n[k] = m;
      n = this.o;
      k = this.o_i++;
      !this.__dirty && (k >= n.length || n[k] != a) && (this.__dirty = !0);
      n[k] = a;
      a = this.ii;
      n = this.ii_i++;
      !this.__dirty && (n >= a.length || a[n] != b) && (this.__dirty = !0);
      a[n] = b;
      b = this.ff;
      a = this.ff_i++;
      !this.__dirty && (a >= b.length || b[a] != c) && (this.__dirty = !0);
      b[a] = c;
      c = this.ii;
      b = this.ii_i++;
      !this.__dirty && (b >= c.length || c[b] != d) && (this.__dirty = !0);
      c[b] = d;
      d = this.o;
      c = this.o_i++;
      this.__dirty ||
        (!(c >= d.length) && e.equals(d[c])) ||
        (this.__dirty = !0);
      d[c] = e;
      e = this.o;
      d = this.o_i++;
      !this.__dirty && (d >= e.length || e[d] != f) && (this.__dirty = !0);
      e[d] = f;
      f = this.o;
      e = this.o_i++;
      !this.__dirty && (e >= f.length || f[e] != g) && (this.__dirty = !0);
      f[e] = g;
      g = this.f;
      f = this.f_i++;
      !this.__dirty && (f >= g.length || g[f] != h) && (this.__dirty = !0);
      g[f] = h;
    },
    lineStyle: function (a, b, c, d, e, f, g, h) {
      this.prepareWrite();
      var n = this.types,
        k = this.t_i++,
        m = K.LINE_STYLE;
      !this.__dirty && (k >= n.length || n[k] != m) && (this.__dirty = !0);
      n[k] = m;
      !this.__dirty &&
        (this.o_i >= this.o.length || this.o[this.o_i] != a) &&
        (this.__dirty = !0);
      this.o[this.o_i++] = a;
      a = this.i;
      n = this.i_i++;
      !this.__dirty && (n >= a.length || a[n] != b) && (this.__dirty = !0);
      a[n] = b;
      b = this.f;
      a = this.f_i++;
      !this.__dirty && (a >= b.length || b[a] != c) && (this.__dirty = !0);
      b[a] = c;
      c = this.b;
      b = this.b_i++;
      !this.__dirty && (b >= c.length || c[b] != d) && (this.__dirty = !0);
      c[b] = d;
      d = this.o;
      c = this.o_i++;
      !this.__dirty && (c >= d.length || d[c] != e) && (this.__dirty = !0);
      d[c] = e;
      e = this.o;
      d = this.o_i++;
      !this.__dirty && (d >= e.length || e[d] != f) && (this.__dirty = !0);
      e[d] = f;
      f = this.o;
      e = this.o_i++;
      !this.__dirty && (e >= f.length || f[e] != g) && (this.__dirty = !0);
      f[e] = g;
      g = this.f;
      f = this.f_i++;
      !this.__dirty && (f >= g.length || g[f] != h) && (this.__dirty = !0);
      g[f] = h;
    },
    lineTo: function (a, b) {
      this.prepareWrite();
      var c = this.types,
        d = this.t_i++,
        e = K.LINE_TO;
      !this.__dirty && (d >= c.length || c[d] != e) && (this.__dirty = !0);
      c[d] = e;
      c = this.f;
      d = this.f_i++;
      !this.__dirty && (d >= c.length || c[d] != a) && (this.__dirty = !0);
      c[d] = a;
      a = this.f;
      c = this.f_i++;
      !this.__dirty && (c >= a.length || a[c] != b) && (this.__dirty = !0);
      a[c] = b;
    },
    markAsClean: function () {
      this.__dirty = !1;
    },
    moveTo: function (a, b) {
      this.prepareWrite();
      var c = this.types,
        d = this.t_i++,
        e = K.MOVE_TO;
      !this.__dirty && (d >= c.length || c[d] != e) && (this.__dirty = !0);
      c[d] = e;
      c = this.f;
      d = this.f_i++;
      !this.__dirty && (d >= c.length || c[d] != a) && (this.__dirty = !0);
      c[d] = a;
      a = this.f;
      c = this.f_i++;
      !this.__dirty && (c >= a.length || a[c] != b) && (this.__dirty = !0);
      a[c] = b;
    },
    prepareWrite: function () {
      this.copyOnWrite &&
        ((this.types = this.types.slice()),
        (this.b = this.b.slice()),
        (this.i = this.i.slice()),
        (this.f = this.f.slice()),
        (this.o = this.o.slice()),
        (this.ff = this.ff.slice()),
        (this.ii = this.ii.slice()),
        (this.objVersions = this.objVersions.slice()),
        (this.copyOnWrite = !1));
    },
    overrideBlendMode: function (a) {
      this.prepareWrite();
      this.types.push(K.OVERRIDE_BLEND_MODE);
      this.o.push(a);
    },
    overrideMatrix: function (a) {
      this.prepareWrite();
      var b = this.types,
        c = this.t_i++,
        d = K.OVERRIDE_MATRIX;
      !this.__dirty && (c >= b.length || b[c] != d) && (this.__dirty = !0);
      b[c] = d;
      b = this.o;
      c = this.o_i++;
      this.__dirty ||
        (!(c >= b.length) && a.equals(b[c])) ||
        (this.__dirty = !0);
      b[c] = a;
    },
    windingEvenOdd: function () {
      this.prepareWrite();
      var a = this.types,
        b = this.t_i++,
        c = K.WINDING_EVEN_ODD;
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    windingNonZero: function () {
      this.prepareWrite();
      var a = this.types,
        b = this.t_i++,
        c = K.WINDING_NON_ZERO;
      !this.__dirty && (b >= a.length || a[b] != c) && (this.__dirty = !0);
      a[b] = c;
    },
    get_dirty: function () {
      return this.__dirty;
    },
    get_length: function () {
      return this.t_i;
    },
    __initFromEmpty: function () {
      this.types = Ue.empty.types;
      this.b = Ue.empty.b;
      this.i = Ue.empty.i;
      this.f = Ue.empty.f;
      this.o = Ue.empty.o;
      this.ff = Ue.empty.ff;
      this.ii = Ue.empty.ii;
      this.objVersions = Ue.empty.objVersions;
      this.copyOnWrite = !0;
    },
    __endBuffer: function () {
      this.__lastLength != this.t_i && (this.__dirty = !0);
      this.__lastLength = this.t_i;
    },
    __replaceMtx: function (a, b, c) {
      this.__dirty ||
        (!(b >= a.length) && c.equals(a[b])) ||
        (this.__dirty = !0);
      a[b] = c;
    },
    __replaceBmp: function (a, b, c) {
      !this.__dirty &&
        (b >= a.length ||
          c != a[b] ||
          c.image.version != this.objVersions[b]) &&
        (this.__dirty = !0);
      for (a[b] = c; this.objVersions.length < b; ) this.objVersions.push(0);
      this.objVersions[b] = c.image.version;
    },
    __class__: Ue,
    __properties__: { get_length: "get_length", get_dirty: "get_dirty" },
  };
  var vg = function (a) {
    this.buffer = a;
    this.bPos =
      this.iPos =
      this.fPos =
      this.oPos =
      this.ffPos =
      this.iiPos =
      this.tsPos =
        0;
    this.prev = K.UNKNOWN;
  };
  p["openfl._internal.renderer.DrawCommandReader"] = vg;
  vg.__name__ = ["openfl", "_internal", "renderer", "DrawCommandReader"];
  vg.prototype = {
    buffer: null,
    bPos: null,
    iiPos: null,
    iPos: null,
    ffPos: null,
    fPos: null,
    oPos: null,
    prev: null,
    tsPos: null,
    advance: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
    },
    bool: function (a) {
      return this.buffer.b[this.bPos + a];
    },
    destroy: function () {
      this.buffer = null;
      this.reset();
    },
    fArr: function (a) {
      return this.buffer.ff[this.ffPos + a];
    },
    float: function (a) {
      return this.buffer.f[this.fPos + a];
    },
    iArr: function (a) {
      return this.buffer.ii[this.iiPos + a];
    },
    int: function (a) {
      return this.buffer.i[this.iPos + a];
    },
    obj: function (a) {
      return this.buffer.o[this.oPos + a];
    },
    readBeginBitmapFill: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.BEGIN_BITMAP_FILL;
      return this;
    },
    readBeginFill: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.BEGIN_FILL;
      return this;
    },
    readBeginGradientFill: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.BEGIN_GRADIENT_FILL;
      return this;
    },
    readBeginShaderFill: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.BEGIN_SHADER_FILL;
      return this;
    },
    readCubicCurveTo: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.CUBIC_CURVE_TO;
      return this;
    },
    readCurveTo: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.CURVE_TO;
      return this;
    },
    readDrawCircle: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.DRAW_CIRCLE;
      return this;
    },
    readDrawEllipse: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.DRAW_ELLIPSE;
      return this;
    },
    readDrawQuads: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.DRAW_QUADS;
      return this;
    },
    readDrawRect: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.DRAW_RECT;
      return this;
    },
    readDrawRoundRect: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.DRAW_ROUND_RECT;
      return this;
    },
    readDrawTriangles: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.DRAW_TRIANGLES;
      return this;
    },
    readEndFill: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.END_FILL;
      return this;
    },
    readLineBitmapStyle: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.LINE_BITMAP_STYLE;
      return this;
    },
    readLineGradientStyle: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.LINE_GRADIENT_STYLE;
      return this;
    },
    readLineStyle: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.LINE_STYLE;
      return this;
    },
    readLineTo: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.LINE_TO;
      return this;
    },
    readMoveTo: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.MOVE_TO;
      return this;
    },
    readOverrideBlendMode: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.OVERRIDE_BLEND_MODE;
      return this;
    },
    readOverrideMatrix: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.OVERRIDE_MATRIX;
      return this;
    },
    readWindingEvenOdd: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.WINDING_EVEN_ODD;
      return this;
    },
    readWindingNonZero: function () {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = K.WINDING_NON_ZERO;
      return this;
    },
    reset: function () {
      this.bPos =
        this.iPos =
        this.fPos =
        this.oPos =
        this.ffPos =
        this.iiPos =
        this.tsPos =
          0;
    },
    skip: function (a) {
      switch (this.prev[1]) {
        case 0:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 1:
          this.iPos += 1;
          this.fPos += 1;
          break;
        case 2:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 3:
          this.oPos += 1;
          break;
        case 4:
          this.fPos += 6;
          break;
        case 5:
          this.fPos += 4;
          break;
        case 6:
          this.fPos += 3;
          break;
        case 7:
          this.fPos += 4;
          break;
        case 8:
          this.oPos += 3;
          break;
        case 9:
          this.fPos += 4;
          break;
        case 10:
          this.fPos += 5;
          this.oPos += 1;
          break;
        case 12:
          this.oPos += 4;
          break;
        case 14:
          this.oPos += 2;
          this.bPos += 2;
          break;
        case 15:
          this.oPos += 4;
          this.iiPos += 2;
          this.ffPos += 1;
          this.fPos += 1;
          break;
        case 16:
          this.oPos += 4;
          this.iPos += 1;
          this.fPos += 2;
          this.bPos += 1;
          break;
        case 17:
          this.fPos += 2;
          break;
        case 18:
          this.fPos += 2;
          break;
        case 19:
          this.oPos += 1;
          break;
        case 20:
          this.oPos += 1;
      }
      this.prev = a;
    },
    __class__: vg,
  };
  var vj = {};
  p["openfl._internal.renderer._DrawCommandReader.BeginBitmapFillView_Impl_"] =
    vj;
  vj.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "BeginBitmapFillView_Impl_",
  ];
  vj.__properties__ = {
    get_smooth: "get_smooth",
    get_repeat: "get_repeat",
    get_matrix: "get_matrix",
    get_bitmap: "get_bitmap",
  };
  vj._new = function (a) {
    return a;
  };
  vj.get_bitmap = function (a) {
    return a.buffer.o[a.oPos];
  };
  vj.get_matrix = function (a) {
    return a.buffer.o[a.oPos + 1];
  };
  vj.get_repeat = function (a) {
    return a.buffer.b[a.bPos];
  };
  vj.get_smooth = function (a) {
    return a.buffer.b[a.bPos + 1];
  };
  var Rn = {};
  p["openfl._internal.renderer._DrawCommandReader.BeginFillView_Impl_"] = Rn;
  Rn.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "BeginFillView_Impl_",
  ];
  Rn.__properties__ = { get_alpha: "get_alpha", get_color: "get_color" };
  Rn._new = function (a) {
    return a;
  };
  Rn.get_color = function (a) {
    return a.buffer.i[a.iPos];
  };
  Rn.get_alpha = function (a) {
    return a.buffer.f[a.fPos];
  };
  var ch = {};
  p[
    "openfl._internal.renderer._DrawCommandReader.BeginGradientFillView_Impl_"
  ] = ch;
  ch.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "BeginGradientFillView_Impl_",
  ];
  ch.__properties__ = {
    get_focalPointRatio: "get_focalPointRatio",
    get_interpolationMethod: "get_interpolationMethod",
    get_spreadMethod: "get_spreadMethod",
    get_matrix: "get_matrix",
    get_ratios: "get_ratios",
    get_alphas: "get_alphas",
    get_colors: "get_colors",
    get_type: "get_type",
  };
  ch._new = function (a) {
    return a;
  };
  ch.get_type = function (a) {
    return a.buffer.o[a.oPos];
  };
  ch.get_colors = function (a) {
    return a.buffer.ii[a.iiPos];
  };
  ch.get_alphas = function (a) {
    return a.buffer.ff[a.ffPos];
  };
  ch.get_ratios = function (a) {
    return a.buffer.ii[a.iiPos + 1];
  };
  ch.get_matrix = function (a) {
    return a.buffer.o[a.oPos + 1];
  };
  ch.get_spreadMethod = function (a) {
    return a.buffer.o[a.oPos + 2];
  };
  ch.get_interpolationMethod = function (a) {
    return a.buffer.o[a.oPos + 3];
  };
  ch.get_focalPointRatio = function (a) {
    return a.buffer.f[a.fPos];
  };
  var qq = {};
  p["openfl._internal.renderer._DrawCommandReader.BeginShaderFillView_Impl_"] =
    qq;
  qq.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "BeginShaderFillView_Impl_",
  ];
  qq.__properties__ = { get_shaderBuffer: "get_shaderBuffer" };
  qq._new = function (a) {
    return a;
  };
  qq.get_shaderBuffer = function (a) {
    return a.buffer.o[a.oPos];
  };
  var Zh = {};
  p["openfl._internal.renderer._DrawCommandReader.CubicCurveToView_Impl_"] = Zh;
  Zh.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "CubicCurveToView_Impl_",
  ];
  Zh.__properties__ = {
    get_anchorY: "get_anchorY",
    get_anchorX: "get_anchorX",
    get_controlY2: "get_controlY2",
    get_controlX2: "get_controlX2",
    get_controlY1: "get_controlY1",
    get_controlX1: "get_controlX1",
  };
  Zh._new = function (a) {
    return a;
  };
  Zh.get_controlX1 = function (a) {
    return a.buffer.f[a.fPos];
  };
  Zh.get_controlY1 = function (a) {
    return a.buffer.f[a.fPos + 1];
  };
  Zh.get_controlX2 = function (a) {
    return a.buffer.f[a.fPos + 2];
  };
  Zh.get_controlY2 = function (a) {
    return a.buffer.f[a.fPos + 3];
  };
  Zh.get_anchorX = function (a) {
    return a.buffer.f[a.fPos + 4];
  };
  Zh.get_anchorY = function (a) {
    return a.buffer.f[a.fPos + 5];
  };
  var wj = {};
  p["openfl._internal.renderer._DrawCommandReader.CurveToView_Impl_"] = wj;
  wj.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "CurveToView_Impl_",
  ];
  wj.__properties__ = {
    get_anchorY: "get_anchorY",
    get_anchorX: "get_anchorX",
    get_controlY: "get_controlY",
    get_controlX: "get_controlX",
  };
  wj._new = function (a) {
    return a;
  };
  wj.get_controlX = function (a) {
    return a.buffer.f[a.fPos];
  };
  wj.get_controlY = function (a) {
    return a.buffer.f[a.fPos + 1];
  };
  wj.get_anchorX = function (a) {
    return a.buffer.f[a.fPos + 2];
  };
  wj.get_anchorY = function (a) {
    return a.buffer.f[a.fPos + 3];
  };
  var Nk = {};
  p["openfl._internal.renderer._DrawCommandReader.DrawCircleView_Impl_"] = Nk;
  Nk.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "DrawCircleView_Impl_",
  ];
  Nk.__properties__ = {
    get_radius: "get_radius",
    get_y: "get_y",
    get_x: "get_x",
  };
  Nk._new = function (a) {
    return a;
  };
  Nk.get_x = function (a) {
    return a.buffer.f[a.fPos];
  };
  Nk.get_y = function (a) {
    return a.buffer.f[a.fPos + 1];
  };
  Nk.get_radius = function (a) {
    return a.buffer.f[a.fPos + 2];
  };
  var xj = {};
  p["openfl._internal.renderer._DrawCommandReader.DrawEllipseView_Impl_"] = xj;
  xj.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "DrawEllipseView_Impl_",
  ];
  xj.__properties__ = {
    get_height: "get_height",
    get_width: "get_width",
    get_y: "get_y",
    get_x: "get_x",
  };
  xj._new = function (a) {
    return a;
  };
  xj.get_x = function (a) {
    return a.buffer.f[a.fPos];
  };
  xj.get_y = function (a) {
    return a.buffer.f[a.fPos + 1];
  };
  xj.get_width = function (a) {
    return a.buffer.f[a.fPos + 2];
  };
  xj.get_height = function (a) {
    return a.buffer.f[a.fPos + 3];
  };
  var Ok = {};
  p["openfl._internal.renderer._DrawCommandReader.DrawQuadsView_Impl_"] = Ok;
  Ok.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "DrawQuadsView_Impl_",
  ];
  Ok.__properties__ = {
    get_transforms: "get_transforms",
    get_indices: "get_indices",
    get_rects: "get_rects",
  };
  Ok._new = function (a) {
    return a;
  };
  Ok.get_rects = function (a) {
    return a.buffer.o[a.oPos];
  };
  Ok.get_indices = function (a) {
    return a.buffer.o[a.oPos + 1];
  };
  Ok.get_transforms = function (a) {
    return a.buffer.o[a.oPos + 2];
  };
  var yj = {};
  p["openfl._internal.renderer._DrawCommandReader.DrawRectView_Impl_"] = yj;
  yj.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "DrawRectView_Impl_",
  ];
  yj.__properties__ = {
    get_height: "get_height",
    get_width: "get_width",
    get_y: "get_y",
    get_x: "get_x",
  };
  yj._new = function (a) {
    return a;
  };
  yj.get_x = function (a) {
    return a.buffer.f[a.fPos];
  };
  yj.get_y = function (a) {
    return a.buffer.f[a.fPos + 1];
  };
  yj.get_width = function (a) {
    return a.buffer.f[a.fPos + 2];
  };
  yj.get_height = function (a) {
    return a.buffer.f[a.fPos + 3];
  };
  var $h = {};
  p["openfl._internal.renderer._DrawCommandReader.DrawRoundRectView_Impl_"] =
    $h;
  $h.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "DrawRoundRectView_Impl_",
  ];
  $h.__properties__ = {
    get_ellipseHeight: "get_ellipseHeight",
    get_ellipseWidth: "get_ellipseWidth",
    get_height: "get_height",
    get_width: "get_width",
    get_y: "get_y",
    get_x: "get_x",
  };
  $h._new = function (a) {
    return a;
  };
  $h.get_x = function (a) {
    return a.buffer.f[a.fPos];
  };
  $h.get_y = function (a) {
    return a.buffer.f[a.fPos + 1];
  };
  $h.get_width = function (a) {
    return a.buffer.f[a.fPos + 2];
  };
  $h.get_height = function (a) {
    return a.buffer.f[a.fPos + 3];
  };
  $h.get_ellipseWidth = function (a) {
    return a.buffer.f[a.fPos + 4];
  };
  $h.get_ellipseHeight = function (a) {
    return a.buffer.o[a.oPos];
  };
  var zj = {};
  p["openfl._internal.renderer._DrawCommandReader.DrawTrianglesView_Impl_"] =
    zj;
  zj.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "DrawTrianglesView_Impl_",
  ];
  zj.__properties__ = {
    get_culling: "get_culling",
    get_uvtData: "get_uvtData",
    get_indices: "get_indices",
    get_vertices: "get_vertices",
  };
  zj._new = function (a) {
    return a;
  };
  zj.get_vertices = function (a) {
    return a.buffer.o[a.oPos];
  };
  zj.get_indices = function (a) {
    return a.buffer.o[a.oPos + 1];
  };
  zj.get_uvtData = function (a) {
    return a.buffer.o[a.oPos + 2];
  };
  zj.get_culling = function (a) {
    return a.buffer.o[a.oPos + 3];
  };
  var Lt = {};
  p["openfl._internal.renderer._DrawCommandReader.EndFillView_Impl_"] = Lt;
  Lt.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "EndFillView_Impl_",
  ];
  Lt._new = function (a) {
    return a;
  };
  var Aj = {};
  p["openfl._internal.renderer._DrawCommandReader.LineBitmapStyleView_Impl_"] =
    Aj;
  Aj.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "LineBitmapStyleView_Impl_",
  ];
  Aj.__properties__ = {
    get_smooth: "get_smooth",
    get_repeat: "get_repeat",
    get_matrix: "get_matrix",
    get_bitmap: "get_bitmap",
  };
  Aj._new = function (a) {
    return a;
  };
  Aj.get_bitmap = function (a) {
    return a.buffer.o[a.oPos];
  };
  Aj.get_matrix = function (a) {
    return a.buffer.o[a.oPos + 1];
  };
  Aj.get_repeat = function (a) {
    return a.buffer.b[a.bPos];
  };
  Aj.get_smooth = function (a) {
    return a.buffer.b[a.bPos + 1];
  };
  var dh = {};
  p[
    "openfl._internal.renderer._DrawCommandReader.LineGradientStyleView_Impl_"
  ] = dh;
  dh.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "LineGradientStyleView_Impl_",
  ];
  dh.__properties__ = {
    get_focalPointRatio: "get_focalPointRatio",
    get_interpolationMethod: "get_interpolationMethod",
    get_spreadMethod: "get_spreadMethod",
    get_matrix: "get_matrix",
    get_ratios: "get_ratios",
    get_alphas: "get_alphas",
    get_colors: "get_colors",
    get_type: "get_type",
  };
  dh._new = function (a) {
    return a;
  };
  dh.get_type = function (a) {
    return a.buffer.o[a.oPos];
  };
  dh.get_colors = function (a) {
    return a.buffer.ii[a.iiPos];
  };
  dh.get_alphas = function (a) {
    return a.buffer.ff[a.ffPos];
  };
  dh.get_ratios = function (a) {
    return a.buffer.ii[a.iiPos + 1];
  };
  dh.get_matrix = function (a) {
    return a.buffer.o[a.oPos + 1];
  };
  dh.get_spreadMethod = function (a) {
    return a.buffer.o[a.oPos + 2];
  };
  dh.get_interpolationMethod = function (a) {
    return a.buffer.o[a.oPos + 3];
  };
  dh.get_focalPointRatio = function (a) {
    return a.buffer.f[a.fPos];
  };
  var eh = {};
  p["openfl._internal.renderer._DrawCommandReader.LineStyleView_Impl_"] = eh;
  eh.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "LineStyleView_Impl_",
  ];
  eh.__properties__ = {
    get_miterLimit: "get_miterLimit",
    get_joints: "get_joints",
    get_caps: "get_caps",
    get_scaleMode: "get_scaleMode",
    get_pixelHinting: "get_pixelHinting",
    get_alpha: "get_alpha",
    get_color: "get_color",
    get_thickness: "get_thickness",
  };
  eh._new = function (a) {
    return a;
  };
  eh.get_thickness = function (a) {
    return a.buffer.o[a.oPos];
  };
  eh.get_color = function (a) {
    return a.buffer.i[a.iPos];
  };
  eh.get_alpha = function (a) {
    return a.buffer.f[a.fPos];
  };
  eh.get_pixelHinting = function (a) {
    return a.buffer.b[a.bPos];
  };
  eh.get_scaleMode = function (a) {
    return a.buffer.o[a.oPos + 1];
  };
  eh.get_caps = function (a) {
    return a.buffer.o[a.oPos + 2];
  };
  eh.get_joints = function (a) {
    return a.buffer.o[a.oPos + 3];
  };
  eh.get_miterLimit = function (a) {
    return a.buffer.f[a.fPos + 1];
  };
  var Sn = {};
  p["openfl._internal.renderer._DrawCommandReader.LineToView_Impl_"] = Sn;
  Sn.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "LineToView_Impl_",
  ];
  Sn.__properties__ = { get_y: "get_y", get_x: "get_x" };
  Sn._new = function (a) {
    return a;
  };
  Sn.get_x = function (a) {
    return a.buffer.f[a.fPos];
  };
  Sn.get_y = function (a) {
    return a.buffer.f[a.fPos + 1];
  };
  var Tn = {};
  p["openfl._internal.renderer._DrawCommandReader.MoveToView_Impl_"] = Tn;
  Tn.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "MoveToView_Impl_",
  ];
  Tn.__properties__ = { get_y: "get_y", get_x: "get_x" };
  Tn._new = function (a) {
    return a;
  };
  Tn.get_x = function (a) {
    return a.buffer.f[a.fPos];
  };
  Tn.get_y = function (a) {
    return a.buffer.f[a.fPos + 1];
  };
  var rq = {};
  p[
    "openfl._internal.renderer._DrawCommandReader.OverrideBlendModeView_Impl_"
  ] = rq;
  rq.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "OverrideBlendModeView_Impl_",
  ];
  rq.__properties__ = { get_blendMode: "get_blendMode" };
  rq._new = function (a) {
    return a;
  };
  rq.get_blendMode = function (a) {
    return a.buffer.o[a.oPos];
  };
  var sq = {};
  p["openfl._internal.renderer._DrawCommandReader.OverrideMatrixView_Impl_"] =
    sq;
  sq.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "OverrideMatrixView_Impl_",
  ];
  sq.__properties__ = { get_matrix: "get_matrix" };
  sq._new = function (a) {
    return a;
  };
  sq.get_matrix = function (a) {
    return a.buffer.o[a.oPos];
  };
  var Mt = {};
  p["openfl._internal.renderer._DrawCommandReader.WindingEvenOddView_Impl_"] =
    Mt;
  Mt.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "WindingEvenOddView_Impl_",
  ];
  Mt._new = function (a) {
    return a;
  };
  var Nt = {};
  p["openfl._internal.renderer._DrawCommandReader.WindingNonZeroView_Impl_"] =
    Nt;
  Nt.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "_DrawCommandReader",
    "WindingNonZeroView_Impl_",
  ];
  Nt._new = function (a) {
    return a;
  };
  var K = (p["openfl._internal.renderer.DrawCommandType"] = {
    __ename__: ["openfl", "_internal", "renderer", "DrawCommandType"],
    __constructs__:
      "BEGIN_BITMAP_FILL BEGIN_FILL BEGIN_GRADIENT_FILL BEGIN_SHADER_FILL CUBIC_CURVE_TO CURVE_TO DRAW_CIRCLE DRAW_ELLIPSE DRAW_QUADS DRAW_RECT DRAW_ROUND_RECT DRAW_TILES DRAW_TRIANGLES END_FILL LINE_BITMAP_STYLE LINE_GRADIENT_STYLE LINE_STYLE LINE_TO MOVE_TO OVERRIDE_BLEND_MODE OVERRIDE_MATRIX WINDING_EVEN_ODD WINDING_NON_ZERO UNKNOWN".split(
        " "
      ),
  });
  K.BEGIN_BITMAP_FILL = ["BEGIN_BITMAP_FILL", 0];
  K.BEGIN_BITMAP_FILL.toString = M;
  K.BEGIN_BITMAP_FILL.__enum__ = K;
  K.BEGIN_FILL = ["BEGIN_FILL", 1];
  K.BEGIN_FILL.toString = M;
  K.BEGIN_FILL.__enum__ = K;
  K.BEGIN_GRADIENT_FILL = ["BEGIN_GRADIENT_FILL", 2];
  K.BEGIN_GRADIENT_FILL.toString = M;
  K.BEGIN_GRADIENT_FILL.__enum__ = K;
  K.BEGIN_SHADER_FILL = ["BEGIN_SHADER_FILL", 3];
  K.BEGIN_SHADER_FILL.toString = M;
  K.BEGIN_SHADER_FILL.__enum__ = K;
  K.CUBIC_CURVE_TO = ["CUBIC_CURVE_TO", 4];
  K.CUBIC_CURVE_TO.toString = M;
  K.CUBIC_CURVE_TO.__enum__ = K;
  K.CURVE_TO = ["CURVE_TO", 5];
  K.CURVE_TO.toString = M;
  K.CURVE_TO.__enum__ = K;
  K.DRAW_CIRCLE = ["DRAW_CIRCLE", 6];
  K.DRAW_CIRCLE.toString = M;
  K.DRAW_CIRCLE.__enum__ = K;
  K.DRAW_ELLIPSE = ["DRAW_ELLIPSE", 7];
  K.DRAW_ELLIPSE.toString = M;
  K.DRAW_ELLIPSE.__enum__ = K;
  K.DRAW_QUADS = ["DRAW_QUADS", 8];
  K.DRAW_QUADS.toString = M;
  K.DRAW_QUADS.__enum__ = K;
  K.DRAW_RECT = ["DRAW_RECT", 9];
  K.DRAW_RECT.toString = M;
  K.DRAW_RECT.__enum__ = K;
  K.DRAW_ROUND_RECT = ["DRAW_ROUND_RECT", 10];
  K.DRAW_ROUND_RECT.toString = M;
  K.DRAW_ROUND_RECT.__enum__ = K;
  K.DRAW_TILES = ["DRAW_TILES", 11];
  K.DRAW_TILES.toString = M;
  K.DRAW_TILES.__enum__ = K;
  K.DRAW_TRIANGLES = ["DRAW_TRIANGLES", 12];
  K.DRAW_TRIANGLES.toString = M;
  K.DRAW_TRIANGLES.__enum__ = K;
  K.END_FILL = ["END_FILL", 13];
  K.END_FILL.toString = M;
  K.END_FILL.__enum__ = K;
  K.LINE_BITMAP_STYLE = ["LINE_BITMAP_STYLE", 14];
  K.LINE_BITMAP_STYLE.toString = M;
  K.LINE_BITMAP_STYLE.__enum__ = K;
  K.LINE_GRADIENT_STYLE = ["LINE_GRADIENT_STYLE", 15];
  K.LINE_GRADIENT_STYLE.toString = M;
  K.LINE_GRADIENT_STYLE.__enum__ = K;
  K.LINE_STYLE = ["LINE_STYLE", 16];
  K.LINE_STYLE.toString = M;
  K.LINE_STYLE.__enum__ = K;
  K.LINE_TO = ["LINE_TO", 17];
  K.LINE_TO.toString = M;
  K.LINE_TO.__enum__ = K;
  K.MOVE_TO = ["MOVE_TO", 18];
  K.MOVE_TO.toString = M;
  K.MOVE_TO.__enum__ = K;
  K.OVERRIDE_BLEND_MODE = ["OVERRIDE_BLEND_MODE", 19];
  K.OVERRIDE_BLEND_MODE.toString = M;
  K.OVERRIDE_BLEND_MODE.__enum__ = K;
  K.OVERRIDE_MATRIX = ["OVERRIDE_MATRIX", 20];
  K.OVERRIDE_MATRIX.toString = M;
  K.OVERRIDE_MATRIX.__enum__ = K;
  K.WINDING_EVEN_ODD = ["WINDING_EVEN_ODD", 21];
  K.WINDING_EVEN_ODD.toString = M;
  K.WINDING_EVEN_ODD.__enum__ = K;
  K.WINDING_NON_ZERO = ["WINDING_NON_ZERO", 22];
  K.WINDING_NON_ZERO.toString = M;
  K.WINDING_NON_ZERO.__enum__ = K;
  K.UNKNOWN = ["UNKNOWN", 23];
  K.UNKNOWN.toString = M;
  K.UNKNOWN.__enum__ = K;
  var Oh = function (a, b, c, d, e, f, g) {
    null == g && (g = !1);
    null == f && (f = !1);
    null == e && (e = !1);
    null == d && (d = 0);
    null == c && (c = 2);
    null == b && (b = 5);
    null == a && (a = 0);
    this.wrap = a;
    this.filter = b;
    this.mipfilter = c;
    this.lodBias = d;
    this.ignoreSampler = e;
    this.centroid = f;
    this.textureAlpha = g;
  };
  p["openfl._internal.renderer.SamplerState"] = Oh;
  Oh.__name__ = ["openfl", "_internal", "renderer", "SamplerState"];
  Oh.prototype = {
    centroid: null,
    filter: null,
    ignoreSampler: null,
    lodBias: null,
    mipfilter: null,
    mipmapGenerated: null,
    textureAlpha: null,
    wrap: null,
    clone: function () {
      var a = new Oh(
        this.wrap,
        this.filter,
        this.mipfilter,
        this.lodBias,
        this.ignoreSampler,
        this.centroid,
        this.textureAlpha
      );
      a.mipmapGenerated = this.mipmapGenerated;
      return a;
    },
    copyFrom: function (a) {
      null == a ||
        a.ignoreSampler ||
        ((this.wrap = a.wrap),
        (this.filter = a.filter),
        (this.mipfilter = a.mipfilter),
        (this.lodBias = a.lodBias),
        (this.centroid = a.centroid),
        (this.textureAlpha = a.textureAlpha));
    },
    equals: function (a) {
      return null == a
        ? !1
        : this.wrap == a.wrap &&
          this.filter == a.filter &&
          this.mipfilter == a.mipfilter &&
          this.lodBias == a.lodBias
        ? this.textureAlpha == a.textureAlpha
        : !1;
    },
    __class__: Oh,
  };
  var tq = function () {
    this.inputRefs = [];
    this.inputFilter = [];
    this.inputMipFilter = [];
    this.inputs = [];
    this.inputWrap = [];
    this.overrideIntNames = [];
    this.overrideIntValues = [];
    this.overrideFloatNames = [];
    this.overrideFloatValues = [];
    this.overrideBoolNames = [];
    this.overrideBoolValues = [];
    this.paramLengths = [];
    this.paramPositions = [];
    this.paramRefs_Bool = [];
    this.paramRefs_Float = [];
    this.paramRefs_Int = [];
    this.paramTypes = [];
  };
  p["openfl._internal.renderer.ShaderBuffer"] = tq;
  tq.__name__ = ["openfl", "_internal", "renderer", "ShaderBuffer"];
  tq.prototype = {
    inputCount: null,
    inputRefs: null,
    inputFilter: null,
    inputMipFilter: null,
    inputs: null,
    inputWrap: null,
    overrideBoolCount: null,
    overrideBoolNames: null,
    overrideBoolValues: null,
    overrideFloatCount: null,
    overrideFloatNames: null,
    overrideFloatValues: null,
    overrideIntCount: null,
    overrideIntNames: null,
    overrideIntValues: null,
    paramBoolCount: null,
    paramCount: null,
    paramData: null,
    paramDataBuffer: null,
    paramDataLength: null,
    paramFloatCount: null,
    paramIntCount: null,
    paramLengths: null,
    paramPositions: null,
    paramRefs_Bool: null,
    paramRefs_Float: null,
    paramRefs_Int: null,
    paramTypes: null,
    shader: null,
    addBoolOverride: function (a, b) {
      this.overrideBoolNames[this.overrideBoolCount] = a;
      this.overrideBoolValues[this.overrideBoolCount] = b;
      this.overrideBoolCount++;
    },
    addFloatOverride: function (a, b) {
      this.overrideFloatNames[this.overrideFloatCount] = a;
      this.overrideFloatValues[this.overrideFloatCount] = b;
      this.overrideFloatCount++;
    },
    addIntOverride: function (a, b) {
      this.overrideIntNames[this.overrideIntCount] = a;
      this.overrideIntValues[this.overrideIntCount] = b;
      this.overrideIntCount++;
    },
    clearOverride: function () {
      this.overrideBoolCount =
        this.overrideFloatCount =
        this.overrideIntCount =
          0;
    },
    update: function (a) {
      this.paramIntCount =
        this.paramFloatCount =
        this.paramDataLength =
        this.paramCount =
        this.paramBoolCount =
        this.overrideBoolCount =
        this.overrideFloatCount =
        this.overrideIntCount =
        this.inputCount =
          0;
      this.shader = null;
      if (null != a) {
        a.__init();
        this.inputCount = a.__inputBitmapData.length;
        for (var b, c = 0, d = this.inputCount; c < d; ) {
          var e = c++;
          b = a.__inputBitmapData[e];
          this.inputs[e] = b.input;
          this.inputFilter[e] = b.filter;
          this.inputMipFilter[e] = b.mipFilter;
          this.inputRefs[e] = b;
          this.inputWrap[e] = b.wrap;
        }
        b = a.__paramBool.length;
        c = a.__paramFloat.length;
        d = a.__paramInt.length;
        this.paramCount = b + c + d;
        this.paramBoolCount = b;
        this.paramFloatCount = c;
        this.paramIntCount = d;
        for (var f = 0, g, h = 0; h < b; ) {
          var n = h++;
          g = a.__paramBool[n];
          this.paramPositions[f] = this.paramDataLength;
          e = null != g.value ? g.value.length : 0;
          this.paramLengths[f] = e;
          this.paramDataLength += e;
          this.paramTypes[f] = 0;
          this.paramRefs_Bool[n] = g;
          ++f;
        }
        for (h = 0; h < c; )
          (n = h++),
            (g = a.__paramFloat[n]),
            (this.paramPositions[f] = this.paramDataLength),
            (e = null != g.value ? g.value.length : 0),
            (this.paramLengths[f] = e),
            (this.paramDataLength += e),
            (this.paramTypes[f] = 1),
            (this.paramRefs_Float[n] = g),
            ++f;
        for (h = 0; h < d; )
          (n = h++),
            (g = a.__paramInt[n]),
            (this.paramPositions[f] = this.paramDataLength),
            (e = null != g.value ? g.value.length : 0),
            (this.paramLengths[f] = e),
            (this.paramDataLength += e),
            (this.paramTypes[f] = 2),
            (this.paramRefs_Int[n] = g),
            ++f;
        0 < this.paramDataLength &&
          (null == this.paramData
            ? ((d = this.paramDataLength),
              (this.paramData = null != d ? new vc(d) : null))
            : this.paramDataLength > this.paramData.length &&
              ((d = this.paramDataLength),
              (d = null != d ? new vc(d) : null),
              d.set(this.paramData),
              (this.paramData = d)));
        g = f = e = d = 0;
        h = 0;
        for (n = this.paramCount; h < n; ) {
          var k = h++;
          var m = this.paramLengths[k];
          if (k < b) {
            k = this.paramRefs_Bool[d];
            ++d;
            for (var l = 0; l < m; ) {
              var p = l++;
              this.paramData[g] = k.value[p] ? 1 : 0;
              ++g;
            }
          } else
            for (
              k < b + c
                ? ((k = this.paramRefs_Float[e]), ++e)
                : ((k = this.paramRefs_Int[f]), ++f),
                l = 0;
              l < m;

            )
              (p = l++), (this.paramData[g] = k.value[p]), ++g;
        }
        this.shader = a;
      }
    },
    __class__: tq,
  };
  var Ot = function () {};
  p["openfl._internal.renderer.cairo.CairoBitmap"] = Ot;
  Ot.__name__ = ["openfl", "_internal", "renderer", "cairo", "CairoBitmap"];
  Ot.render = function (a, b) {
    if (a.__renderable) {
      var c = b.__getAlpha(a.__worldAlpha);
      if (0 < c && null != a.__bitmapData && a.__bitmapData.__isValid) {
        var d = b.cairo;
        b.__setBlendMode(a.__worldBlendMode);
        b.__pushMaskObject(a);
        b.applyMatrix(a.__renderTransform, d);
        var e = a.__bitmapData.getSurface();
        null != e &&
          ((e = he.createForSurface(e)),
          he.set_filter(e, b.__allowSmoothing && a.smoothing ? 1 : 3),
          d.set_source(e),
          1 == c ? d.paint() : d.paintWithAlpha(c));
        b.__popMaskObject(a);
      }
    }
  };
  var Pt = function () {};
  p["openfl._internal.renderer.cairo.CairoDisplayObject"] = Pt;
  Pt.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "cairo",
    "CairoDisplayObject",
  ];
  Pt.render = function (a, b) {};
  var uq = function () {};
  p["openfl._internal.renderer.cairo.CairoGraphics"] = uq;
  uq.__name__ = ["openfl", "_internal", "renderer", "cairo", "CairoGraphics"];
  uq.hitTest = function (a, b, c) {
    return !1;
  };
  uq.render = function (a, b) {};
  uq.renderMask = function (a, b) {};
  var Qt = function () {};
  p["openfl._internal.renderer.cairo.CairoTextField"] = Qt;
  Qt.__name__ = ["openfl", "_internal", "renderer", "cairo", "CairoTextField"];
  Qt.render = function (a, b, c) {};
  var Un = function () {};
  p["openfl._internal.renderer.cairo.CairoTilemap"] = Un;
  Un.__name__ = ["openfl", "_internal", "renderer", "cairo", "CairoTilemap"];
  Un.render = function (a, b) {
    if (a.__renderable && 0 != a.__group.__tiles.length) {
      var c = b.__getAlpha(a.__worldAlpha);
      if (!(0 >= c)) {
        b.__setBlendMode(a.__worldBlendMode);
        b.__pushMaskObject(a);
        var d = W.__pool.get();
        d.setTo(0, 0, a.__width, a.__height);
        b.__pushMaskRect(d, a.__renderTransform);
        Un.renderTileContainer(
          a.__group,
          b,
          a.__renderTransform,
          a.__tileset,
          b.__allowSmoothing && a.smoothing,
          a.tileAlphaEnabled,
          c,
          a.tileBlendModeEnabled,
          a.__worldBlendMode,
          null,
          null,
          null,
          d,
          new xi()
        );
        b.__popMaskRect();
        b.__popMaskObject(a);
        W.__pool.release(d);
      }
    }
  };
  Un.renderTileContainer = function (a, b, c, d, e, f, g, h, n, k, m, l, p, q) {
    var r = b.cairo,
      t = ya.__pool.get();
    a = a.__tiles;
    for (var u, v, w, G = null, x, y = 0; y < a.length; )
      if (
        ((x = a[y]),
        ++y,
        t.setTo(1, 0, 0, 1, -x.get_originX(), -x.get_originY()),
        t.concat(x.get_matrix()),
        t.concat(c),
        (u = null != x.get_tileset() ? x.get_tileset() : d),
        (v = x.get_alpha() * g),
        (w = x.get_visible()) && !(0 >= v))
      )
        if (
          (f || (v = 1),
          h && (G = null != x.__blendMode ? x.__blendMode : n),
          0 < x.__length)
        )
          Un.renderTileContainer(x, b, t, u, e, f, v, h, G, k, m, l, p, q);
        else if (null != u) {
          w = x.get_id();
          if (-1 == w) {
            if (((x = x.__rect), null == x || 0 >= x.width || 0 >= x.height))
              continue;
          } else {
            x = u.__data[w];
            if (null == x) continue;
            p.setTo(x.x, x.y, x.width, x.height);
            x = p;
          }
          u = u.__bitmapData;
          null != u &&
            (u != k &&
              ((m = u.getSurface()),
              (l = he.createForSurface(m)),
              he.set_filter(l, e ? 1 : 3),
              r.set_source(l),
              (k = u)),
            h && b.__setBlendMode(G),
            b.applyMatrix(t, r),
            (q.tx = x.x),
            (q.ty = x.y),
            he.set_matrix(l, q),
            r.set_source(l),
            r.save(),
            r.newPath(),
            r.rectangle(0, 0, x.width, x.height),
            r.clip(),
            1 == v ? r.paint() : r.paintWithAlpha(v),
            r.restore());
        }
    ya.__pool.release(t);
  };
  var Rt = function () {};
  p["openfl._internal.renderer.canvas.CanvasBitmap"] = Rt;
  Rt.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasBitmap"];
  Rt.render = function (a, b) {
    if (a.__renderable) {
      var c = b.__getAlpha(a.__worldAlpha);
      if (
        0 < c &&
        null != a.__bitmapData &&
        a.__bitmapData.__isValid &&
        a.__bitmapData.readable
      ) {
        var d = b.context;
        b.__setBlendMode(a.__worldBlendMode);
        b.__pushMaskObject(a, !1);
        pa.convertToCanvas(a.__bitmapData.image);
        d.globalAlpha = c;
        c = a.__scrollRect;
        b.setTransform(a.__renderTransform, d);
        (b.__allowSmoothing && a.smoothing) || (d.imageSmoothingEnabled = !1);
        null == c
          ? d.drawImage(
              a.__bitmapData.image.get_src(),
              0,
              0,
              a.__bitmapData.image.width,
              a.__bitmapData.image.height
            )
          : d.drawImage(
              a.__bitmapData.image.get_src(),
              c.x,
              c.y,
              c.width,
              c.height
            );
        (b.__allowSmoothing && a.smoothing) || (d.imageSmoothingEnabled = !0);
        b.__popMaskObject(a, !1);
      }
    }
  };
  var St = function () {};
  p["openfl._internal.renderer.canvas.CanvasDisplayObject"] = St;
  St.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "canvas",
    "CanvasDisplayObject",
  ];
  St.render = function (a, b) {
    if (
      !(
        (null == a.opaqueBackground && null == a.__graphics) ||
        !a.__renderable ||
        0 >= b.__getAlpha(a.__worldAlpha)
      )
    ) {
      if (
        null != a.opaqueBackground &&
        !a.__isCacheBitmapRender &&
        0 < a.get_width() &&
        0 < a.get_height()
      ) {
        b.__setBlendMode(a.__worldBlendMode);
        b.__pushMaskObject(a);
        var c = b.context;
        b.setTransform(a.__renderTransform, c);
        var d = a.opaqueBackground;
        c.fillStyle =
          "rgb(" +
          ((d >>> 16) & 255) +
          "," +
          ((d >>> 8) & 255) +
          "," +
          (d & 255) +
          ")";
        c.fillRect(0, 0, a.get_width(), a.get_height());
        b.__popMaskObject(a);
      }
      if (null != a.__graphics && a.__renderable) {
        var e = b.__getAlpha(a.__worldAlpha);
        if (!(0 >= e) && ((c = a.__graphics), null != c)) {
          w.render(c, b);
          d = c.__width;
          var f = c.__height;
          if (null != c.__canvas) {
            var g = b.context,
              h = a.__scrollRect;
            0 < d &&
              0 < f &&
              (null == h || (0 < h.width && 0 < h.height)) &&
              (b.__setBlendMode(a.__worldBlendMode),
              b.__pushMaskObject(a),
              (g.globalAlpha = e),
              b.setTransform(c.__worldTransform, g),
              b.__isDOM && ((e = 1 / b.pixelRatio), g.scale(e, e)),
              g.drawImage(c.__canvas, 0, 0, d, f),
              b.__popMaskObject(a));
          }
        }
      }
    }
  };
  var w = function () {};
  p["openfl._internal.renderer.canvas.CanvasGraphics"] = w;
  w.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasGraphics"];
  w.closePath = function (a) {
    null == a && (a = !1);
    null != w.context.strokeStyle &&
      (a || w.context.closePath(),
      w.context.stroke(),
      a && w.context.closePath(),
      w.context.beginPath());
  };
  w.createBitmapFill = function (a, b, c) {
    pa.convertToCanvas(a.image);
    w.setSmoothing(c);
    return w.context.createPattern(
      a.image.get_src(),
      b ? "repeat" : "no-repeat"
    );
  };
  w.createGradientPattern = function (a, b, c, d, e, f, g, h) {
    var n = null;
    h = f = null;
    g = !1;
    null == e && ((e = ya.__pool.get()), (g = !0));
    switch (a) {
      case 0:
        f = Y.__pool.get();
        f.setTo(-819.2, 0);
        h = f.x;
        n = f.y;
        f.x = h * e.a + n * e.c + e.tx;
        f.y = h * e.b + n * e.d + e.ty;
        h = Y.__pool.get();
        h.setTo(819.2, 0);
        n = h.x;
        a = h.y;
        h.x = n * e.a + a * e.c + e.tx;
        h.y = n * e.b + a * e.d + e.ty;
        n = w.context.createLinearGradient(f.x, f.y, h.x, h.y);
        break;
      case 1:
        (f = Y.__pool.get()),
          f.setTo(1638.4, 0),
          (n = f.x),
          (a = f.y),
          (f.x = n * e.a + a * e.c + e.tx),
          (f.y = n * e.b + a * e.d + e.ty),
          (n = w.context.createRadialGradient(
            e.tx,
            e.ty,
            0,
            e.tx,
            e.ty,
            Math.abs((f.x - e.tx) / 2)
          ));
    }
    for (var k, m, l, p, q = 0, r = b.length; q < r; )
      (p = q++),
        (k = b[p]),
        (a = c[p]),
        (m = (k & 16711680) >>> 16),
        (l = (k & 65280) >>> 8),
        (k &= 255),
        (p = d[p] / 255),
        0 > p && (p = 0),
        1 < p && (p = 1),
        n.addColorStop(p, "rgba(" + m + ", " + l + ", " + k + ", " + a + ")");
    null != f && Y.__pool.release(f);
    null != h && Y.__pool.release(h);
    g && ya.__pool.release(e);
    return n;
  };
  w.createTempPatternCanvas = function (a, b, c, d) {
    var e = window.document.createElement("canvas"),
      f = e.getContext("2d");
    e.width = c;
    e.height = d;
    a = a.image.get_src();
    f.fillStyle = f.createPattern(a, b ? "repeat" : "no-repeat");
    f.beginPath();
    f.moveTo(0, 0);
    f.lineTo(0, d);
    f.lineTo(c, d);
    f.lineTo(c, 0);
    f.lineTo(0, 0);
    f.closePath();
    w.hitTesting || f.fill(w.windingRule);
    return e;
  };
  w.drawRoundRect = function (a, b, c, d, e, f) {
    null == f && (f = e);
    e *= 0.5;
    f *= 0.5;
    e > c / 2 && (e = c / 2);
    f > d / 2 && (f = d / 2);
    c = a + c;
    d = b + d;
    var g = -e + e * w.SIN45,
      h = -e + e * w.TAN22,
      n = -f + f * w.SIN45,
      k = -f + f * w.TAN22;
    w.context.moveTo(c, d - f);
    w.context.quadraticCurveTo(c, d + k, c + g, d + n);
    w.context.quadraticCurveTo(c + h, d, c - e, d);
    w.context.lineTo(a + e, d);
    w.context.quadraticCurveTo(a - h, d, a - g, d + n);
    w.context.quadraticCurveTo(a, d + k, a, d - f);
    w.context.lineTo(a, b + f);
    w.context.quadraticCurveTo(a, b - k, a - g, b - n);
    w.context.quadraticCurveTo(a - h, b, a + e, b);
    w.context.lineTo(c - e, b);
    w.context.quadraticCurveTo(c + h, b, c + g, b - n);
    w.context.quadraticCurveTo(c, b - k, c, b + f);
    w.context.lineTo(c, d - f);
  };
  w.endFill = function () {
    w.context.beginPath();
    w.playCommands(w.fillCommands, !1);
    w.fillCommands.clear();
  };
  w.endStroke = function () {
    w.context.beginPath();
    w.playCommands(w.strokeCommands, !0);
    w.context.closePath();
    w.strokeCommands.clear();
  };
  w.hitTest = function (a, b, c) {
    w.bounds = a.__bounds;
    w.graphics = a;
    if (
      0 == a.__commands.get_length() ||
      null == w.bounds ||
      0 >= w.bounds.width ||
      0 >= w.bounds.height
    )
      return !1;
    w.hitTesting = !0;
    var d = a.__renderTransform,
      e = b * d.b + c * d.d + d.ty;
    b = b * d.a + c * d.c + d.tx - (w.bounds.x * d.a + w.bounds.y * d.c + d.tx);
    c = e - (w.bounds.x * d.b + w.bounds.y * d.d + d.ty);
    e = a.__canvas;
    var f = a.__context;
    a.__canvas = w.hitTestCanvas;
    a.__context = w.hitTestContext;
    w.context = a.__context;
    w.context.setTransform(d.a, d.b, d.c, d.d, d.tx, d.ty);
    w.fillCommands.clear();
    w.strokeCommands.clear();
    w.hasFill = !1;
    w.hasStroke = !1;
    w.bitmapFill = null;
    w.bitmapRepeat = !1;
    w.windingRule = "evenodd";
    d = new vg(a.__commands);
    for (
      var g = a.__commands.types, h = 0, n = a.__commands.get_length();
      h < n;

    ) {
      var k = h++;
      k = g[k];
      switch (k[1]) {
        case 0:
        case 1:
        case 2:
        case 3:
          w.endFill();
          if (w.hasFill && w.context.isPointInPath(b, c, w.windingRule))
            return d.destroy(), (a.__canvas = e), (a.__context = f), !0;
          w.endStroke();
          if (w.hasStroke && w.context.isPointInStroke(b, c))
            return d.destroy(), (a.__canvas = e), (a.__context = f), !0;
          if (k == K.BEGIN_BITMAP_FILL) {
            switch (d.prev[1]) {
              case 0:
                d.oPos += 2;
                d.bPos += 2;
                break;
              case 1:
                d.iPos += 1;
                d.fPos += 1;
                break;
              case 2:
                d.oPos += 4;
                d.iiPos += 2;
                d.ffPos += 1;
                d.fPos += 1;
                break;
              case 3:
                d.oPos += 1;
                break;
              case 4:
                d.fPos += 6;
                break;
              case 5:
                d.fPos += 4;
                break;
              case 6:
                d.fPos += 3;
                break;
              case 7:
                d.fPos += 4;
                break;
              case 8:
                d.oPos += 3;
                break;
              case 9:
                d.fPos += 4;
                break;
              case 10:
                d.fPos += 5;
                d.oPos += 1;
                break;
              case 12:
                d.oPos += 4;
                break;
              case 14:
                d.oPos += 2;
                d.bPos += 2;
                break;
              case 15:
                d.oPos += 4;
                d.iiPos += 2;
                d.ffPos += 1;
                d.fPos += 1;
                break;
              case 16:
                d.oPos += 4;
                d.iPos += 1;
                d.fPos += 2;
                d.bPos += 1;
                break;
              case 17:
                d.fPos += 2;
                break;
              case 18:
                d.fPos += 2;
                break;
              case 19:
                d.oPos += 1;
                break;
              case 20:
                d.oPos += 1;
            }
            d.prev = K.BEGIN_BITMAP_FILL;
            k = d;
            w.fillCommands.beginBitmapFill(
              k.buffer.o[k.oPos],
              k.buffer.o[k.oPos + 1],
              k.buffer.b[k.bPos],
              k.buffer.b[k.bPos + 1]
            );
            w.strokeCommands.beginBitmapFill(
              k.buffer.o[k.oPos],
              k.buffer.o[k.oPos + 1],
              k.buffer.b[k.bPos],
              k.buffer.b[k.bPos + 1]
            );
          } else if (k == K.BEGIN_GRADIENT_FILL) {
            switch (d.prev[1]) {
              case 0:
                d.oPos += 2;
                d.bPos += 2;
                break;
              case 1:
                d.iPos += 1;
                d.fPos += 1;
                break;
              case 2:
                d.oPos += 4;
                d.iiPos += 2;
                d.ffPos += 1;
                d.fPos += 1;
                break;
              case 3:
                d.oPos += 1;
                break;
              case 4:
                d.fPos += 6;
                break;
              case 5:
                d.fPos += 4;
                break;
              case 6:
                d.fPos += 3;
                break;
              case 7:
                d.fPos += 4;
                break;
              case 8:
                d.oPos += 3;
                break;
              case 9:
                d.fPos += 4;
                break;
              case 10:
                d.fPos += 5;
                d.oPos += 1;
                break;
              case 12:
                d.oPos += 4;
                break;
              case 14:
                d.oPos += 2;
                d.bPos += 2;
                break;
              case 15:
                d.oPos += 4;
                d.iiPos += 2;
                d.ffPos += 1;
                d.fPos += 1;
                break;
              case 16:
                d.oPos += 4;
                d.iPos += 1;
                d.fPos += 2;
                d.bPos += 1;
                break;
              case 17:
                d.fPos += 2;
                break;
              case 18:
                d.fPos += 2;
                break;
              case 19:
                d.oPos += 1;
                break;
              case 20:
                d.oPos += 1;
            }
            d.prev = K.BEGIN_GRADIENT_FILL;
            k = d;
            w.fillCommands.beginGradientFill(
              k.buffer.o[k.oPos],
              k.buffer.ii[k.iiPos],
              k.buffer.ff[k.ffPos],
              k.buffer.ii[k.iiPos + 1],
              k.buffer.o[k.oPos + 1],
              k.buffer.o[k.oPos + 2],
              k.buffer.o[k.oPos + 3],
              k.buffer.f[k.fPos]
            );
            w.strokeCommands.beginGradientFill(
              k.buffer.o[k.oPos],
              k.buffer.ii[k.iiPos],
              k.buffer.ff[k.ffPos],
              k.buffer.ii[k.iiPos + 1],
              k.buffer.o[k.oPos + 1],
              k.buffer.o[k.oPos + 2],
              k.buffer.o[k.oPos + 3],
              k.buffer.f[k.fPos]
            );
          } else if (k == K.BEGIN_SHADER_FILL) {
            switch (d.prev[1]) {
              case 0:
                d.oPos += 2;
                d.bPos += 2;
                break;
              case 1:
                d.iPos += 1;
                d.fPos += 1;
                break;
              case 2:
                d.oPos += 4;
                d.iiPos += 2;
                d.ffPos += 1;
                d.fPos += 1;
                break;
              case 3:
                d.oPos += 1;
                break;
              case 4:
                d.fPos += 6;
                break;
              case 5:
                d.fPos += 4;
                break;
              case 6:
                d.fPos += 3;
                break;
              case 7:
                d.fPos += 4;
                break;
              case 8:
                d.oPos += 3;
                break;
              case 9:
                d.fPos += 4;
                break;
              case 10:
                d.fPos += 5;
                d.oPos += 1;
                break;
              case 12:
                d.oPos += 4;
                break;
              case 14:
                d.oPos += 2;
                d.bPos += 2;
                break;
              case 15:
                d.oPos += 4;
                d.iiPos += 2;
                d.ffPos += 1;
                d.fPos += 1;
                break;
              case 16:
                d.oPos += 4;
                d.iPos += 1;
                d.fPos += 2;
                d.bPos += 1;
                break;
              case 17:
                d.fPos += 2;
                break;
              case 18:
                d.fPos += 2;
                break;
              case 19:
                d.oPos += 1;
                break;
              case 20:
                d.oPos += 1;
            }
            d.prev = K.BEGIN_SHADER_FILL;
            k = d;
            w.fillCommands.beginShaderFill(k.buffer.o[k.oPos]);
            w.strokeCommands.beginShaderFill(k.buffer.o[k.oPos]);
          } else {
            switch (d.prev[1]) {
              case 0:
                d.oPos += 2;
                d.bPos += 2;
                break;
              case 1:
                d.iPos += 1;
                d.fPos += 1;
                break;
              case 2:
                d.oPos += 4;
                d.iiPos += 2;
                d.ffPos += 1;
                d.fPos += 1;
                break;
              case 3:
                d.oPos += 1;
                break;
              case 4:
                d.fPos += 6;
                break;
              case 5:
                d.fPos += 4;
                break;
              case 6:
                d.fPos += 3;
                break;
              case 7:
                d.fPos += 4;
                break;
              case 8:
                d.oPos += 3;
                break;
              case 9:
                d.fPos += 4;
                break;
              case 10:
                d.fPos += 5;
                d.oPos += 1;
                break;
              case 12:
                d.oPos += 4;
                break;
              case 14:
                d.oPos += 2;
                d.bPos += 2;
                break;
              case 15:
                d.oPos += 4;
                d.iiPos += 2;
                d.ffPos += 1;
                d.fPos += 1;
                break;
              case 16:
                d.oPos += 4;
                d.iPos += 1;
                d.fPos += 2;
                d.bPos += 1;
                break;
              case 17:
                d.fPos += 2;
                break;
              case 18:
                d.fPos += 2;
                break;
              case 19:
                d.oPos += 1;
                break;
              case 20:
                d.oPos += 1;
            }
            d.prev = K.BEGIN_FILL;
            k = d;
            w.fillCommands.beginFill(k.buffer.i[k.iPos], 1);
            w.strokeCommands.beginFill(k.buffer.i[k.iPos], 1);
          }
          break;
        case 4:
          switch (d.prev[1]) {
            case 0:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 1:
              d.iPos += 1;
              d.fPos += 1;
              break;
            case 2:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 3:
              d.oPos += 1;
              break;
            case 4:
              d.fPos += 6;
              break;
            case 5:
              d.fPos += 4;
              break;
            case 6:
              d.fPos += 3;
              break;
            case 7:
              d.fPos += 4;
              break;
            case 8:
              d.oPos += 3;
              break;
            case 9:
              d.fPos += 4;
              break;
            case 10:
              d.fPos += 5;
              d.oPos += 1;
              break;
            case 12:
              d.oPos += 4;
              break;
            case 14:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 15:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 16:
              d.oPos += 4;
              d.iPos += 1;
              d.fPos += 2;
              d.bPos += 1;
              break;
            case 17:
              d.fPos += 2;
              break;
            case 18:
              d.fPos += 2;
              break;
            case 19:
              d.oPos += 1;
              break;
            case 20:
              d.oPos += 1;
          }
          d.prev = K.CUBIC_CURVE_TO;
          k = d;
          w.fillCommands.cubicCurveTo(
            k.buffer.f[k.fPos],
            k.buffer.f[k.fPos + 1],
            k.buffer.f[k.fPos + 2],
            k.buffer.f[k.fPos + 3],
            k.buffer.f[k.fPos + 4],
            k.buffer.f[k.fPos + 5]
          );
          w.strokeCommands.cubicCurveTo(
            k.buffer.f[k.fPos],
            k.buffer.f[k.fPos + 1],
            k.buffer.f[k.fPos + 2],
            k.buffer.f[k.fPos + 3],
            k.buffer.f[k.fPos + 4],
            k.buffer.f[k.fPos + 5]
          );
          break;
        case 5:
          switch (d.prev[1]) {
            case 0:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 1:
              d.iPos += 1;
              d.fPos += 1;
              break;
            case 2:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 3:
              d.oPos += 1;
              break;
            case 4:
              d.fPos += 6;
              break;
            case 5:
              d.fPos += 4;
              break;
            case 6:
              d.fPos += 3;
              break;
            case 7:
              d.fPos += 4;
              break;
            case 8:
              d.oPos += 3;
              break;
            case 9:
              d.fPos += 4;
              break;
            case 10:
              d.fPos += 5;
              d.oPos += 1;
              break;
            case 12:
              d.oPos += 4;
              break;
            case 14:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 15:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 16:
              d.oPos += 4;
              d.iPos += 1;
              d.fPos += 2;
              d.bPos += 1;
              break;
            case 17:
              d.fPos += 2;
              break;
            case 18:
              d.fPos += 2;
              break;
            case 19:
              d.oPos += 1;
              break;
            case 20:
              d.oPos += 1;
          }
          d.prev = K.CURVE_TO;
          k = d;
          w.fillCommands.curveTo(
            k.buffer.f[k.fPos],
            k.buffer.f[k.fPos + 1],
            k.buffer.f[k.fPos + 2],
            k.buffer.f[k.fPos + 3]
          );
          w.strokeCommands.curveTo(
            k.buffer.f[k.fPos],
            k.buffer.f[k.fPos + 1],
            k.buffer.f[k.fPos + 2],
            k.buffer.f[k.fPos + 3]
          );
          break;
        case 6:
          switch (d.prev[1]) {
            case 0:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 1:
              d.iPos += 1;
              d.fPos += 1;
              break;
            case 2:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 3:
              d.oPos += 1;
              break;
            case 4:
              d.fPos += 6;
              break;
            case 5:
              d.fPos += 4;
              break;
            case 6:
              d.fPos += 3;
              break;
            case 7:
              d.fPos += 4;
              break;
            case 8:
              d.oPos += 3;
              break;
            case 9:
              d.fPos += 4;
              break;
            case 10:
              d.fPos += 5;
              d.oPos += 1;
              break;
            case 12:
              d.oPos += 4;
              break;
            case 14:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 15:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 16:
              d.oPos += 4;
              d.iPos += 1;
              d.fPos += 2;
              d.bPos += 1;
              break;
            case 17:
              d.fPos += 2;
              break;
            case 18:
              d.fPos += 2;
              break;
            case 19:
              d.oPos += 1;
              break;
            case 20:
              d.oPos += 1;
          }
          d.prev = K.DRAW_CIRCLE;
          k = d;
          w.fillCommands.drawCircle(
            k.buffer.f[k.fPos],
            k.buffer.f[k.fPos + 1],
            k.buffer.f[k.fPos + 2]
          );
          w.strokeCommands.drawCircle(
            k.buffer.f[k.fPos],
            k.buffer.f[k.fPos + 1],
            k.buffer.f[k.fPos + 2]
          );
          break;
        case 7:
          switch (d.prev[1]) {
            case 0:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 1:
              d.iPos += 1;
              d.fPos += 1;
              break;
            case 2:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 3:
              d.oPos += 1;
              break;
            case 4:
              d.fPos += 6;
              break;
            case 5:
              d.fPos += 4;
              break;
            case 6:
              d.fPos += 3;
              break;
            case 7:
              d.fPos += 4;
              break;
            case 8:
              d.oPos += 3;
              break;
            case 9:
              d.fPos += 4;
              break;
            case 10:
              d.fPos += 5;
              d.oPos += 1;
              break;
            case 12:
              d.oPos += 4;
              break;
            case 14:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 15:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 16:
              d.oPos += 4;
              d.iPos += 1;
              d.fPos += 2;
              d.bPos += 1;
              break;
            case 17:
              d.fPos += 2;
              break;
            case 18:
              d.fPos += 2;
              break;
            case 19:
              d.oPos += 1;
              break;
            case 20:
              d.oPos += 1;
          }
          d.prev = K.DRAW_ELLIPSE;
          k = d;
          w.fillCommands.drawEllipse(
            k.buffer.f[k.fPos],
            k.buffer.f[k.fPos + 1],
            k.buffer.f[k.fPos + 2],
            k.buffer.f[k.fPos + 3]
          );
          w.strokeCommands.drawEllipse(
            k.buffer.f[k.fPos],
            k.buffer.f[k.fPos + 1],
            k.buffer.f[k.fPos + 2],
            k.buffer.f[k.fPos + 3]
          );
          break;
        case 9:
          switch (d.prev[1]) {
            case 0:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 1:
              d.iPos += 1;
              d.fPos += 1;
              break;
            case 2:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 3:
              d.oPos += 1;
              break;
            case 4:
              d.fPos += 6;
              break;
            case 5:
              d.fPos += 4;
              break;
            case 6:
              d.fPos += 3;
              break;
            case 7:
              d.fPos += 4;
              break;
            case 8:
              d.oPos += 3;
              break;
            case 9:
              d.fPos += 4;
              break;
            case 10:
              d.fPos += 5;
              d.oPos += 1;
              break;
            case 12:
              d.oPos += 4;
              break;
            case 14:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 15:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 16:
              d.oPos += 4;
              d.iPos += 1;
              d.fPos += 2;
              d.bPos += 1;
              break;
            case 17:
              d.fPos += 2;
              break;
            case 18:
              d.fPos += 2;
              break;
            case 19:
              d.oPos += 1;
              break;
            case 20:
              d.oPos += 1;
          }
          d.prev = K.DRAW_RECT;
          k = d;
          w.fillCommands.drawRect(
            k.buffer.f[k.fPos],
            k.buffer.f[k.fPos + 1],
            k.buffer.f[k.fPos + 2],
            k.buffer.f[k.fPos + 3]
          );
          w.strokeCommands.drawRect(
            k.buffer.f[k.fPos],
            k.buffer.f[k.fPos + 1],
            k.buffer.f[k.fPos + 2],
            k.buffer.f[k.fPos + 3]
          );
          break;
        case 10:
          switch (d.prev[1]) {
            case 0:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 1:
              d.iPos += 1;
              d.fPos += 1;
              break;
            case 2:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 3:
              d.oPos += 1;
              break;
            case 4:
              d.fPos += 6;
              break;
            case 5:
              d.fPos += 4;
              break;
            case 6:
              d.fPos += 3;
              break;
            case 7:
              d.fPos += 4;
              break;
            case 8:
              d.oPos += 3;
              break;
            case 9:
              d.fPos += 4;
              break;
            case 10:
              d.fPos += 5;
              d.oPos += 1;
              break;
            case 12:
              d.oPos += 4;
              break;
            case 14:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 15:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 16:
              d.oPos += 4;
              d.iPos += 1;
              d.fPos += 2;
              d.bPos += 1;
              break;
            case 17:
              d.fPos += 2;
              break;
            case 18:
              d.fPos += 2;
              break;
            case 19:
              d.oPos += 1;
              break;
            case 20:
              d.oPos += 1;
          }
          d.prev = K.DRAW_ROUND_RECT;
          k = d;
          w.fillCommands.drawRoundRect(
            k.buffer.f[k.fPos],
            k.buffer.f[k.fPos + 1],
            k.buffer.f[k.fPos + 2],
            k.buffer.f[k.fPos + 3],
            k.buffer.f[k.fPos + 4],
            k.buffer.o[k.oPos]
          );
          w.strokeCommands.drawRoundRect(
            k.buffer.f[k.fPos],
            k.buffer.f[k.fPos + 1],
            k.buffer.f[k.fPos + 2],
            k.buffer.f[k.fPos + 3],
            k.buffer.f[k.fPos + 4],
            k.buffer.o[k.oPos]
          );
          break;
        case 13:
          switch (d.prev[1]) {
            case 0:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 1:
              d.iPos += 1;
              d.fPos += 1;
              break;
            case 2:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 3:
              d.oPos += 1;
              break;
            case 4:
              d.fPos += 6;
              break;
            case 5:
              d.fPos += 4;
              break;
            case 6:
              d.fPos += 3;
              break;
            case 7:
              d.fPos += 4;
              break;
            case 8:
              d.oPos += 3;
              break;
            case 9:
              d.fPos += 4;
              break;
            case 10:
              d.fPos += 5;
              d.oPos += 1;
              break;
            case 12:
              d.oPos += 4;
              break;
            case 14:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 15:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 16:
              d.oPos += 4;
              d.iPos += 1;
              d.fPos += 2;
              d.bPos += 1;
              break;
            case 17:
              d.fPos += 2;
              break;
            case 18:
              d.fPos += 2;
              break;
            case 19:
              d.oPos += 1;
              break;
            case 20:
              d.oPos += 1;
          }
          d.prev = K.END_FILL;
          w.endFill();
          if (w.hasFill && w.context.isPointInPath(b, c, w.windingRule))
            return d.destroy(), (a.__canvas = e), (a.__context = f), !0;
          w.endStroke();
          if (w.hasStroke && w.context.isPointInStroke(b, c))
            return d.destroy(), (a.__canvas = e), (a.__context = f), !0;
          w.hasFill = !1;
          w.bitmapFill = null;
          break;
        case 14:
          switch (d.prev[1]) {
            case 0:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 1:
              d.iPos += 1;
              d.fPos += 1;
              break;
            case 2:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 3:
              d.oPos += 1;
              break;
            case 4:
              d.fPos += 6;
              break;
            case 5:
              d.fPos += 4;
              break;
            case 6:
              d.fPos += 3;
              break;
            case 7:
              d.fPos += 4;
              break;
            case 8:
              d.oPos += 3;
              break;
            case 9:
              d.fPos += 4;
              break;
            case 10:
              d.fPos += 5;
              d.oPos += 1;
              break;
            case 12:
              d.oPos += 4;
              break;
            case 14:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 15:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 16:
              d.oPos += 4;
              d.iPos += 1;
              d.fPos += 2;
              d.bPos += 1;
              break;
            case 17:
              d.fPos += 2;
              break;
            case 18:
              d.fPos += 2;
              break;
            case 19:
              d.oPos += 1;
              break;
            case 20:
              d.oPos += 1;
          }
          d.prev = K.LINE_BITMAP_STYLE;
          k = d;
          w.strokeCommands.lineBitmapStyle(
            k.buffer.o[k.oPos],
            k.buffer.o[k.oPos + 1],
            k.buffer.b[k.bPos],
            k.buffer.b[k.bPos + 1]
          );
          break;
        case 15:
          switch (d.prev[1]) {
            case 0:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 1:
              d.iPos += 1;
              d.fPos += 1;
              break;
            case 2:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 3:
              d.oPos += 1;
              break;
            case 4:
              d.fPos += 6;
              break;
            case 5:
              d.fPos += 4;
              break;
            case 6:
              d.fPos += 3;
              break;
            case 7:
              d.fPos += 4;
              break;
            case 8:
              d.oPos += 3;
              break;
            case 9:
              d.fPos += 4;
              break;
            case 10:
              d.fPos += 5;
              d.oPos += 1;
              break;
            case 12:
              d.oPos += 4;
              break;
            case 14:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 15:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 16:
              d.oPos += 4;
              d.iPos += 1;
              d.fPos += 2;
              d.bPos += 1;
              break;
            case 17:
              d.fPos += 2;
              break;
            case 18:
              d.fPos += 2;
              break;
            case 19:
              d.oPos += 1;
              break;
            case 20:
              d.oPos += 1;
          }
          d.prev = K.LINE_GRADIENT_STYLE;
          k = d;
          w.strokeCommands.lineGradientStyle(
            k.buffer.o[k.oPos],
            k.buffer.ii[k.iiPos],
            k.buffer.ff[k.ffPos],
            k.buffer.ii[k.iiPos + 1],
            k.buffer.o[k.oPos + 1],
            k.buffer.o[k.oPos + 2],
            k.buffer.o[k.oPos + 3],
            k.buffer.f[k.fPos]
          );
          break;
        case 16:
          switch (d.prev[1]) {
            case 0:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 1:
              d.iPos += 1;
              d.fPos += 1;
              break;
            case 2:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 3:
              d.oPos += 1;
              break;
            case 4:
              d.fPos += 6;
              break;
            case 5:
              d.fPos += 4;
              break;
            case 6:
              d.fPos += 3;
              break;
            case 7:
              d.fPos += 4;
              break;
            case 8:
              d.oPos += 3;
              break;
            case 9:
              d.fPos += 4;
              break;
            case 10:
              d.fPos += 5;
              d.oPos += 1;
              break;
            case 12:
              d.oPos += 4;
              break;
            case 14:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 15:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 16:
              d.oPos += 4;
              d.iPos += 1;
              d.fPos += 2;
              d.bPos += 1;
              break;
            case 17:
              d.fPos += 2;
              break;
            case 18:
              d.fPos += 2;
              break;
            case 19:
              d.oPos += 1;
              break;
            case 20:
              d.oPos += 1;
          }
          d.prev = K.LINE_STYLE;
          k = d;
          w.strokeCommands.lineStyle(
            k.buffer.o[k.oPos],
            k.buffer.i[k.iPos],
            1,
            k.buffer.b[k.bPos],
            k.buffer.o[k.oPos + 1],
            k.buffer.o[k.oPos + 2],
            k.buffer.o[k.oPos + 3],
            k.buffer.f[k.fPos + 1]
          );
          break;
        case 17:
          switch (d.prev[1]) {
            case 0:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 1:
              d.iPos += 1;
              d.fPos += 1;
              break;
            case 2:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 3:
              d.oPos += 1;
              break;
            case 4:
              d.fPos += 6;
              break;
            case 5:
              d.fPos += 4;
              break;
            case 6:
              d.fPos += 3;
              break;
            case 7:
              d.fPos += 4;
              break;
            case 8:
              d.oPos += 3;
              break;
            case 9:
              d.fPos += 4;
              break;
            case 10:
              d.fPos += 5;
              d.oPos += 1;
              break;
            case 12:
              d.oPos += 4;
              break;
            case 14:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 15:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 16:
              d.oPos += 4;
              d.iPos += 1;
              d.fPos += 2;
              d.bPos += 1;
              break;
            case 17:
              d.fPos += 2;
              break;
            case 18:
              d.fPos += 2;
              break;
            case 19:
              d.oPos += 1;
              break;
            case 20:
              d.oPos += 1;
          }
          d.prev = K.LINE_TO;
          k = d;
          w.fillCommands.lineTo(k.buffer.f[k.fPos], k.buffer.f[k.fPos + 1]);
          w.strokeCommands.lineTo(k.buffer.f[k.fPos], k.buffer.f[k.fPos + 1]);
          break;
        case 18:
          switch (d.prev[1]) {
            case 0:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 1:
              d.iPos += 1;
              d.fPos += 1;
              break;
            case 2:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 3:
              d.oPos += 1;
              break;
            case 4:
              d.fPos += 6;
              break;
            case 5:
              d.fPos += 4;
              break;
            case 6:
              d.fPos += 3;
              break;
            case 7:
              d.fPos += 4;
              break;
            case 8:
              d.oPos += 3;
              break;
            case 9:
              d.fPos += 4;
              break;
            case 10:
              d.fPos += 5;
              d.oPos += 1;
              break;
            case 12:
              d.oPos += 4;
              break;
            case 14:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 15:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 16:
              d.oPos += 4;
              d.iPos += 1;
              d.fPos += 2;
              d.bPos += 1;
              break;
            case 17:
              d.fPos += 2;
              break;
            case 18:
              d.fPos += 2;
              break;
            case 19:
              d.oPos += 1;
              break;
            case 20:
              d.oPos += 1;
          }
          d.prev = K.MOVE_TO;
          k = d;
          w.fillCommands.moveTo(k.buffer.f[k.fPos], k.buffer.f[k.fPos + 1]);
          w.strokeCommands.moveTo(k.buffer.f[k.fPos], k.buffer.f[k.fPos + 1]);
          break;
        case 21:
          w.windingRule = "evenodd";
          break;
        case 22:
          w.windingRule = "nonzero";
          break;
        default:
          switch (d.prev[1]) {
            case 0:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 1:
              d.iPos += 1;
              d.fPos += 1;
              break;
            case 2:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 3:
              d.oPos += 1;
              break;
            case 4:
              d.fPos += 6;
              break;
            case 5:
              d.fPos += 4;
              break;
            case 6:
              d.fPos += 3;
              break;
            case 7:
              d.fPos += 4;
              break;
            case 8:
              d.oPos += 3;
              break;
            case 9:
              d.fPos += 4;
              break;
            case 10:
              d.fPos += 5;
              d.oPos += 1;
              break;
            case 12:
              d.oPos += 4;
              break;
            case 14:
              d.oPos += 2;
              d.bPos += 2;
              break;
            case 15:
              d.oPos += 4;
              d.iiPos += 2;
              d.ffPos += 1;
              d.fPos += 1;
              break;
            case 16:
              d.oPos += 4;
              d.iPos += 1;
              d.fPos += 2;
              d.bPos += 1;
              break;
            case 17:
              d.fPos += 2;
              break;
            case 18:
              d.fPos += 2;
              break;
            case 19:
              d.oPos += 1;
              break;
            case 20:
              d.oPos += 1;
          }
          d.prev = k;
      }
    }
    g = !1;
    0 < w.fillCommands.get_length() && w.endFill();
    w.hasFill && w.context.isPointInPath(b, c, w.windingRule) && (g = !0);
    0 < w.strokeCommands.get_length() && w.endStroke();
    w.hasStroke && w.context.isPointInStroke(b, c) && (g = !0);
    d.destroy();
    a.__canvas = e;
    a.__context = f;
    return g;
  };
  w.isCCW = function (a, b, c, d, e, f) {
    return 0 > (c - a) * (f - b) - (d - b) * (e - a);
  };
  w.normalizeUVT = function (a, b) {
    null == b && (b = !1);
    for (var c = -Infinity, d, e = a.get_length(), f = 1, g = e + 1; f < g; )
      (d = f++), (b && 0 == d % 3) || ((d = a.get(d - 1)), c < d && (c = d));
    if (!b) return { max: c, uvt: a };
    f = Oa.toFloatVector(null);
    g = 1;
    for (e += 1; g < e; ) (d = g++), (b && 0 == d % 3) || f.push(a.get(d - 1));
    return { max: c, uvt: f };
  };
  w.playCommands = function (a, b) {
    null == b && (b = !1);
    w.bounds = w.graphics.__bounds;
    var c = w.bounds.x,
      d = w.bounds.y,
      e = 0,
      f = 0,
      g = !1,
      h = 0,
      n = 0,
      k = !1;
    w.windingRule = "evenodd";
    w.setSmoothing(!0);
    var m = !1,
      l = new vg(a),
      p,
      q,
      r,
      t = null,
      u = null,
      v = a.types,
      x = 0,
      y = a.get_length();
    try {
      for (; x < y; ) {
        var z = x++,
          B = v[z];
        switch (B[1]) {
          case 0:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.BEGIN_BITMAP_FILL;
            var A = l;
            w.bitmapFill = A.buffer.o[A.oPos];
            w.context.fillStyle = w.createBitmapFill(
              A.buffer.o[A.oPos],
              A.buffer.b[A.bPos],
              A.buffer.b[A.bPos + 1]
            );
            w.hasFill = !0;
            null != A.buffer.o[A.oPos + 1]
              ? ((w.pendingMatrix = A.buffer.o[A.oPos + 1]),
                (w.inversePendingMatrix = A.buffer.o[A.oPos + 1].clone()),
                w.inversePendingMatrix.invert())
              : ((w.pendingMatrix = null), (w.inversePendingMatrix = null));
            break;
          case 1:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.BEGIN_FILL;
            var C = l;
            if (0.005 > C.buffer.f[C.fPos]) w.hasFill = !1;
            else {
              if (1 == C.buffer.f[C.fPos]) {
                var D = ba.hex(C.buffer.i[C.iPos] & 16777215, 6);
                w.context.fillStyle = "#" + D;
              } else {
                var E = (C.buffer.i[C.iPos] & 16711680) >>> 16;
                var F = (C.buffer.i[C.iPos] & 65280) >>> 8;
                var H = C.buffer.i[C.iPos] & 255;
                w.context.fillStyle =
                  "rgba(" +
                  E +
                  ", " +
                  F +
                  ", " +
                  H +
                  ", " +
                  C.buffer.f[C.fPos] +
                  ")";
              }
              w.bitmapFill = null;
              w.setSmoothing(!0);
              w.hasFill = !0;
            }
            break;
          case 2:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.BEGIN_GRADIENT_FILL;
            var I = l;
            w.context.fillStyle = w.createGradientPattern(
              I.buffer.o[I.oPos],
              I.buffer.ii[I.iiPos],
              I.buffer.ff[I.ffPos],
              I.buffer.ii[I.iiPos + 1],
              I.buffer.o[I.oPos + 1],
              I.buffer.o[I.oPos + 2],
              I.buffer.o[I.oPos + 3],
              I.buffer.f[I.fPos]
            );
            w.bitmapFill = null;
            w.setSmoothing(!0);
            w.hasFill = !0;
            break;
          case 3:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.BEGIN_SHADER_FILL;
            var J = l,
              M = J.buffer.o[J.oPos];
            0 < M.inputCount &&
              ((w.bitmapFill = M.inputs[0]),
              (w.context.fillStyle = w.createBitmapFill(
                w.bitmapFill,
                0 != M.inputWrap[0],
                5 != M.inputFilter[0]
              )),
              (w.hasFill = !0),
              (w.pendingMatrix = null),
              (w.inversePendingMatrix = null));
            break;
          case 4:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.CUBIC_CURVE_TO;
            var L = l;
            m = !0;
            w.context.bezierCurveTo(
              L.buffer.f[L.fPos] - c,
              L.buffer.f[L.fPos + 1] - d,
              L.buffer.f[L.fPos + 2] - c,
              L.buffer.f[L.fPos + 3] - d,
              L.buffer.f[L.fPos + 4] - c,
              L.buffer.f[L.fPos + 5] - d
            );
            break;
          case 5:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.CURVE_TO;
            var N = l;
            m = !0;
            w.context.quadraticCurveTo(
              N.buffer.f[N.fPos] - c,
              N.buffer.f[N.fPos + 1] - d,
              N.buffer.f[N.fPos + 2] - c,
              N.buffer.f[N.fPos + 3] - d
            );
            break;
          case 6:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.DRAW_CIRCLE;
            var O = l;
            m = !0;
            w.context.moveTo(
              O.buffer.f[O.fPos] - c + O.buffer.f[O.fPos + 2],
              O.buffer.f[O.fPos + 1] - d
            );
            w.context.arc(
              O.buffer.f[O.fPos] - c,
              O.buffer.f[O.fPos + 1] - d,
              O.buffer.f[O.fPos + 2],
              0,
              2 * Math.PI,
              !0
            );
            break;
          case 7:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.DRAW_ELLIPSE;
            var P = l;
            m = !0;
            var Q = P.buffer.f[P.fPos];
            var R = P.buffer.f[P.fPos + 1];
            var S = P.buffer.f[P.fPos + 2];
            var T = P.buffer.f[P.fPos + 3];
            Q -= c;
            R -= d;
            var U = (S / 2) * 0.5522848;
            var V = (T / 2) * 0.5522848;
            var aa = Q + S;
            var ea = R + T;
            var ca = Q + S / 2;
            var da = R + T / 2;
            w.context.moveTo(Q, da);
            w.context.bezierCurveTo(Q, da - V, ca - U, R, ca, R);
            w.context.bezierCurveTo(ca + U, R, aa, da - V, aa, da);
            w.context.bezierCurveTo(aa, da + V, ca + U, ea, ca, ea);
            w.context.bezierCurveTo(ca - U, ea, Q, da + V, Q, da);
            break;
          case 8:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.DRAW_QUADS;
            var fa = l,
              ha = fa.buffer.o[fa.oPos],
              ka = fa.buffer.o[fa.oPos + 1],
              X = fa.buffer.o[fa.oPos + 2],
              ma = null != ka,
              la = !1,
              oa = !1,
              pa = ma ? ka.get_length() : Math.floor(ha.get_length() / 4);
            if (0 == pa) return;
            null != X &&
              (X.get_length() >= 6 * pa
                ? (oa = la = !0)
                : X.get_length() >= 4 * pa
                ? (la = !0)
                : X.get_length() >= 2 * pa && (oa = !0));
            var ja = W.__pool.get(),
              ia = ya.__pool.get(),
              ta = w.graphics.__renderTransform;
            w.context.save();
            for (var ra = 0, ua = pa; ra < ua; ) {
              var sa = ra++;
              var va = ma ? 4 * ka.get(sa) : 4 * sa;
              if (
                !(
                  0 > va ||
                  (ja.setTo(
                    ha.get(va),
                    ha.get(va + 1),
                    ha.get(va + 2),
                    ha.get(va + 3)
                  ),
                  0 >= ja.width || 0 >= ja.height)
                )
              ) {
                if (la && oa) {
                  var qa = 6 * sa;
                  ia.setTo(
                    X.get(qa),
                    X.get(qa + 1),
                    X.get(qa + 2),
                    X.get(qa + 3),
                    X.get(qa + 4),
                    X.get(qa + 5)
                  );
                } else
                  la
                    ? ((qa = 4 * sa),
                      ia.setTo(
                        X.get(qa),
                        X.get(qa + 1),
                        X.get(qa + 2),
                        X.get(qa + 3),
                        ja.x,
                        ja.y
                      ))
                    : oa
                    ? ((qa = 2 * sa),
                      (ia.tx = X.get(qa)),
                      (ia.ty = X.get(qa + 1)))
                    : ((ia.tx = ja.x), (ia.ty = ja.y));
                ia.tx += e - c;
                ia.ty += f - d;
                ia.concat(ta);
                w.context.setTransform(ia.a, ia.b, ia.c, ia.d, ia.tx, ia.ty);
                null != w.bitmapFill
                  ? w.context.drawImage(
                      w.bitmapFill.image.get_src(),
                      ja.x,
                      ja.y,
                      ja.width,
                      ja.height,
                      0,
                      0,
                      ja.width,
                      ja.height
                    )
                  : w.context.fillRect(0, 0, ja.width, ja.height);
              }
            }
            W.__pool.release(ja);
            ya.__pool.release(ia);
            w.context.restore();
            break;
          case 9:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.DRAW_RECT;
            var Z = l;
            var Aa = !1;
            if (null != w.bitmapFill && !w.hitTesting) {
              var xa = (r = q = p = 0);
              var Ca = !0;
              if (null != w.pendingMatrix)
                if (0 != w.pendingMatrix.b || 0 != w.pendingMatrix.c) Ca = !1;
                else {
                  null == t && (t = Y.__pool.get());
                  null == u && (u = Y.__pool.get());
                  t.setTo(Z.buffer.f[Z.fPos], Z.buffer.f[Z.fPos + 1]);
                  var wa = w.inversePendingMatrix,
                    Da = t.x,
                    Ea = t.y;
                  t.x = Da * wa.a + Ea * wa.c + wa.tx;
                  t.y = Da * wa.b + Ea * wa.d + wa.ty;
                  u.setTo(
                    Z.buffer.f[Z.fPos] + Z.buffer.f[Z.fPos + 2],
                    Z.buffer.f[Z.fPos + 1] + Z.buffer.f[Z.fPos + 3]
                  );
                  var Ba = w.inversePendingMatrix,
                    Ha = u.x,
                    Ia = u.y;
                  u.x = Ha * Ba.a + Ia * Ba.c + Ba.tx;
                  u.y = Ha * Ba.b + Ia * Ba.d + Ba.ty;
                  p = t.y;
                  xa = t.x;
                  r = u.y;
                  q = u.x;
                }
              else
                (p = Z.buffer.f[Z.fPos + 1]),
                  (xa = Z.buffer.f[Z.fPos]),
                  (r = Z.buffer.f[Z.fPos + 1] + Z.buffer.f[Z.fPos + 3]),
                  (q = Z.buffer.f[Z.fPos] + Z.buffer.f[Z.fPos + 2]);
              Ca &&
                0 <= p &&
                0 <= xa &&
                q <= w.bitmapFill.width &&
                r <= w.bitmapFill.height &&
                ((Aa = !0),
                w.hitTesting ||
                  w.context.drawImage(
                    w.bitmapFill.image.get_src(),
                    xa,
                    p,
                    q - xa,
                    r - p,
                    Z.buffer.f[Z.fPos] - c,
                    Z.buffer.f[Z.fPos + 1] - d,
                    Z.buffer.f[Z.fPos + 2],
                    Z.buffer.f[Z.fPos + 3]
                  ));
            }
            Aa ||
              ((m = !0),
              w.context.rect(
                Z.buffer.f[Z.fPos] - c,
                Z.buffer.f[Z.fPos + 1] - d,
                Z.buffer.f[Z.fPos + 2],
                Z.buffer.f[Z.fPos + 3]
              ));
            break;
          case 10:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.DRAW_ROUND_RECT;
            var za = l;
            m = !0;
            w.drawRoundRect(
              za.buffer.f[za.fPos] - c,
              za.buffer.f[za.fPos + 1] - d,
              za.buffer.f[za.fPos + 2],
              za.buffer.f[za.fPos + 3],
              za.buffer.f[za.fPos + 4],
              za.buffer.o[za.oPos]
            );
            break;
          case 12:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.DRAW_TRIANGLES;
            var Fa = l,
              Ja = Fa.buffer.o[Fa.oPos],
              Ka = Fa.buffer.o[Fa.oPos + 1],
              Ga = Fa.buffer.o[Fa.oPos + 2],
              La = null,
              Na = null == w.bitmapFill;
            if (Na && null != Ga) throw "__break__";
            if (!Na) {
              if (null == Ga) {
                Ga = Oa.toFloatVector(null);
                for (var Pa = 0, Ra = (Ja.get_length() / 2) | 0; Pa < Ra; ) {
                  var Sa = Pa++;
                  Ga.push(Ja.get(2 * Sa) - c / w.bitmapFill.width);
                  Ga.push(Ja.get(2 * Sa + 1) - d / w.bitmapFill.height);
                }
              }
              var Ta = Ga.get_length() != Ja.get_length(),
                Ua = w.normalizeUVT(Ga, Ta),
                Va = Ua.max;
              Ga = Ua.uvt;
              La =
                1 < Va
                  ? w.createTempPatternCanvas(
                      w.bitmapFill,
                      w.bitmapRepeat,
                      w.bounds.width | 0,
                      w.bounds.height | 0
                    )
                  : w.createTempPatternCanvas(
                      w.bitmapFill,
                      w.bitmapRepeat,
                      w.bitmapFill.width,
                      w.bitmapFill.height
                    );
            }
            for (
              var Qa = 0,
                eb = Ka.get_length(),
                bb,
                fb,
                gb,
                hb,
                lb,
                mb,
                nb,
                ob,
                pb,
                Wa,
                Ya,
                Xa,
                Za,
                $a,
                ab,
                qb,
                sb,
                db,
                ib,
                jb,
                kb,
                rb,
                wb,
                xb,
                yb,
                zb,
                Ab,
                Bb;
              Qa < eb;

            ) {
              bb = Qa;
              fb = Qa + 1;
              gb = Qa + 2;
              hb = 2 * Ka.get(bb);
              lb = 2 * Ka.get(bb) + 1;
              mb = 2 * Ka.get(fb);
              nb = 2 * Ka.get(fb) + 1;
              ob = 2 * Ka.get(gb);
              pb = 2 * Ka.get(gb) + 1;
              Wa = Ja.get(hb) - c;
              Ya = Ja.get(lb) - d;
              Xa = Ja.get(mb) - c;
              Za = Ja.get(nb) - d;
              $a = Ja.get(ob) - c;
              ab = Ja.get(pb) - d;
              switch (Fa.buffer.o[Fa.oPos + 3]) {
                case 0:
                  if (0 > (Xa - Wa) * (ab - Ya) - (Za - Ya) * ($a - Wa)) {
                    Qa += 3;
                    continue;
                  }
                  break;
                case 2:
                  if (!(0 > (Xa - Wa) * (ab - Ya) - (Za - Ya) * ($a - Wa))) {
                    Qa += 3;
                    continue;
                  }
              }
              Na
                ? (w.context.beginPath(),
                  w.context.moveTo(Wa, Ya),
                  w.context.lineTo(Xa, Za),
                  w.context.lineTo($a, ab),
                  w.context.closePath(),
                  w.hitTesting || w.context.fill(w.windingRule),
                  (Qa += 3))
                : ((qb = Ga.get(hb) * La.width),
                  (db = Ga.get(mb) * La.width),
                  (jb = Ga.get(ob) * La.width),
                  (sb = Ga.get(lb) * La.height),
                  (ib = Ga.get(nb) * La.height),
                  (kb = Ga.get(pb) * La.height),
                  (rb = qb * (kb - ib) - db * kb + jb * ib + (db - jb) * sb),
                  0 == rb
                    ? ((Qa += 3), w.context.restore())
                    : (w.context.save(),
                      w.context.beginPath(),
                      w.context.moveTo(Wa, Ya),
                      w.context.lineTo(Xa, Za),
                      w.context.lineTo($a, ab),
                      w.context.closePath(),
                      w.context.clip(),
                      (wb =
                        -(sb * ($a - Xa) - ib * $a + kb * Xa + (ib - kb) * Wa) /
                        rb),
                      (xb =
                        (ib * ab + sb * (Za - ab) - kb * Za + (kb - ib) * Ya) /
                        rb),
                      (yb =
                        (qb * ($a - Xa) - db * $a + jb * Xa + (db - jb) * Wa) /
                        rb),
                      (zb =
                        -(db * ab + qb * (Za - ab) - jb * Za + (jb - db) * Ya) /
                        rb),
                      (Ab =
                        (qb * (kb * Xa - ib * $a) +
                          sb * (db * $a - jb * Xa) +
                          (jb * ib - db * kb) * Wa) /
                        rb),
                      (Bb =
                        (qb * (kb * Za - ib * ab) +
                          sb * (db * ab - jb * Za) +
                          (jb * ib - db * kb) * Ya) /
                        rb),
                      w.context.transform(wb, xb, yb, zb, Ab, Bb),
                      w.context.drawImage(La, 0, 0, La.width, La.height),
                      w.context.restore(),
                      (Qa += 3)));
            }
            break;
          case 14:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.LINE_BITMAP_STYLE;
            var ub = l;
            b && w.hasStroke && w.closePath();
            w.context.moveTo(e - c, f - d);
            w.context.strokeStyle = w.createBitmapFill(
              ub.buffer.o[ub.oPos],
              ub.buffer.b[ub.bPos],
              ub.buffer.b[ub.bPos + 1]
            );
            w.hasStroke = !0;
            break;
          case 15:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.LINE_GRADIENT_STYLE;
            var cb = l;
            b && w.hasStroke && w.closePath();
            w.context.moveTo(e - c, f - d);
            w.context.strokeStyle = w.createGradientPattern(
              cb.buffer.o[cb.oPos],
              cb.buffer.ii[cb.iiPos],
              cb.buffer.ff[cb.ffPos],
              cb.buffer.ii[cb.iiPos + 1],
              cb.buffer.o[cb.oPos + 1],
              cb.buffer.o[cb.oPos + 2],
              cb.buffer.o[cb.oPos + 3],
              cb.buffer.f[cb.fPos]
            );
            w.setSmoothing(!0);
            w.hasStroke = !0;
            break;
          case 16:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.LINE_STYLE;
            var Ma = l;
            b && w.hasStroke && w.closePath(!0);
            w.context.moveTo(e - c, f - d);
            if (null == Ma.buffer.o[Ma.oPos]) w.hasStroke = !1;
            else {
              w.context.lineWidth =
                0 < Ma.buffer.o[Ma.oPos] ? Ma.buffer.o[Ma.oPos] : 1;
              var Cb =
                null == Ma.buffer.o[Ma.oPos + 3]
                  ? "round"
                  : ai.toString(Ma.buffer.o[Ma.oPos + 3]).toLowerCase();
              w.context.lineJoin = Cb;
              var Db =
                null == Ma.buffer.o[Ma.oPos + 2]
                  ? "round"
                  : 0 == Ma.buffer.o[Ma.oPos + 2]
                  ? "butt"
                  : bi.toString(Ma.buffer.o[Ma.oPos + 2]).toLowerCase();
              w.context.lineCap = Db;
              w.context.miterLimit = Ma.buffer.f[Ma.fPos + 1];
              if (1 == Ma.buffer.f[Ma.fPos]) {
                var Eb = ba.hex(Ma.buffer.i[Ma.iPos] & 16777215, 6);
                w.context.strokeStyle = "#" + Eb;
              } else
                (E = (Ma.buffer.i[Ma.iPos] & 16711680) >>> 16),
                  (F = (Ma.buffer.i[Ma.iPos] & 65280) >>> 8),
                  (H = Ma.buffer.i[Ma.iPos] & 255),
                  (w.context.strokeStyle =
                    "rgba(" +
                    E +
                    ", " +
                    F +
                    ", " +
                    H +
                    ", " +
                    Ma.buffer.f[Ma.fPos] +
                    ")");
              w.setSmoothing(!0);
              w.hasStroke = !0;
            }
            break;
          case 17:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.LINE_TO;
            var vb = l;
            m = !0;
            w.context.lineTo(
              vb.buffer.f[vb.fPos] - c,
              vb.buffer.f[vb.fPos + 1] - d
            );
            e = vb.buffer.f[vb.fPos];
            f = vb.buffer.f[vb.fPos + 1];
            e == h && f == n && (g = !0);
            break;
          case 18:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = K.MOVE_TO;
            var tb = l;
            w.context.moveTo(
              tb.buffer.f[tb.fPos] - c,
              tb.buffer.f[tb.fPos + 1] - d
            );
            e = tb.buffer.f[tb.fPos];
            f = tb.buffer.f[tb.fPos + 1];
            k && (g = !0);
            h = tb.buffer.f[tb.fPos];
            n = tb.buffer.f[tb.fPos + 1];
            k = !0;
            break;
          case 21:
            w.windingRule = "evenodd";
            break;
          case 22:
            w.windingRule = "nonzero";
            break;
          default:
            switch (l.prev[1]) {
              case 0:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 1:
                l.iPos += 1;
                l.fPos += 1;
                break;
              case 2:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 3:
                l.oPos += 1;
                break;
              case 4:
                l.fPos += 6;
                break;
              case 5:
                l.fPos += 4;
                break;
              case 6:
                l.fPos += 3;
                break;
              case 7:
                l.fPos += 4;
                break;
              case 8:
                l.oPos += 3;
                break;
              case 9:
                l.fPos += 4;
                break;
              case 10:
                l.fPos += 5;
                l.oPos += 1;
                break;
              case 12:
                l.oPos += 4;
                break;
              case 14:
                l.oPos += 2;
                l.bPos += 2;
                break;
              case 15:
                l.oPos += 4;
                l.iiPos += 2;
                l.ffPos += 1;
                l.fPos += 1;
                break;
              case 16:
                l.oPos += 4;
                l.iPos += 1;
                l.fPos += 2;
                l.bPos += 1;
                break;
              case 17:
                l.fPos += 2;
                break;
              case 18:
                l.fPos += 2;
                break;
              case 19:
                l.oPos += 1;
                break;
              case 20:
                l.oPos += 1;
            }
            l.prev = B;
        }
      }
    } catch (Wt) {
      if ("__break__" != Wt) throw Wt;
    }
    null != t && Y.__pool.release(t);
    null != u && Y.__pool.release(u);
    l.destroy();
    m &&
      (b &&
        w.hasStroke &&
        (w.hasFill && g
          ? (w.context.lineTo(h - c, n - d), w.closePath(!1))
          : g && e == h && f == n && w.closePath(!1),
        w.hitTesting || w.context.stroke()),
      b ||
        (!w.hasFill && null == w.bitmapFill) ||
        (w.context.translate(-w.bounds.x, -w.bounds.y),
        null != w.pendingMatrix
          ? (w.context.transform(
              w.pendingMatrix.a,
              w.pendingMatrix.b,
              w.pendingMatrix.c,
              w.pendingMatrix.d,
              w.pendingMatrix.tx,
              w.pendingMatrix.ty
            ),
            w.hitTesting || w.context.fill(w.windingRule),
            w.context.transform(
              w.inversePendingMatrix.a,
              w.inversePendingMatrix.b,
              w.inversePendingMatrix.c,
              w.inversePendingMatrix.d,
              w.inversePendingMatrix.tx,
              w.inversePendingMatrix.ty
            ))
          : w.hitTesting || w.context.fill(w.windingRule),
        w.context.translate(w.bounds.x, w.bounds.y),
        w.context.closePath()));
  };
  w.render = function (a, b) {
    a.__update(b.__worldTransform);
    a.__commands.__endBuffer();
    if (a.__dirty && a.__commands.get_dirty()) {
      w.hitTesting = !1;
      w.graphics = a;
      w.allowSmoothing = b.__allowSmoothing;
      w.worldAlpha = b.__getAlpha(a.__owner.__worldAlpha);
      w.bounds = a.__bounds;
      var c = a.__width,
        d = a.__height;
      if (
        !a.__visible ||
        0 == a.__commands.get_length() ||
        null == w.bounds ||
        1 > c ||
        1 > d
      )
        (a.__canvas = null), (a.__context = null), (a.__bitmap = null);
      else {
        null == a.__canvas &&
          ((a.__canvas = window.document.createElement("canvas")),
          (a.__context = a.__canvas.getContext("2d")));
        w.context = a.__context;
        var e = a.__renderTransform,
          f = a.__canvas,
          g = b.pixelRatio,
          h = (c * g) | 0,
          n = (d * g) | 0;
        b.__setBlendModeContext(w.context, 10);
        b.__isDOM
          ? (f.width == h && f.height == n
              ? w.context.clearRect(0, 0, h, n)
              : ((f.width = h),
                (f.height = n),
                (f.style.width = c + "px"),
                (f.style.height = d + "px")),
            (c = a.__renderTransform),
            w.context.setTransform(
              c.a * g,
              c.b * g,
              c.c * g,
              c.d * g,
              c.tx * g,
              c.ty * g
            ))
          : (f.width == h && f.height == n
              ? (w.context.closePath(),
                w.context.setTransform(1, 0, 0, 1, 0, 0),
                w.context.clearRect(0, 0, h, n))
              : ((f.width = c), (f.height = d)),
            w.context.setTransform(e.a, e.b, e.c, e.d, e.tx, e.ty));
        w.fillCommands.clear();
        w.strokeCommands.clear();
        w.hasFill = !1;
        w.hasStroke = !1;
        w.bitmapFill = null;
        g = w.bitmapRepeat = !1;
        d = c = 0;
        w.windingRule = "evenodd";
        e = new vg(a.__commands);
        f = a.__commands.types;
        h = 0;
        for (n = a.__commands.get_length(); h < n; ) {
          var k = h++;
          k = f[k];
          switch (k[1]) {
            case 0:
            case 1:
            case 2:
            case 3:
              w.endFill();
              w.endStroke();
              if (k == K.BEGIN_BITMAP_FILL) {
                switch (e.prev[1]) {
                  case 0:
                    e.oPos += 2;
                    e.bPos += 2;
                    break;
                  case 1:
                    e.iPos += 1;
                    e.fPos += 1;
                    break;
                  case 2:
                    e.oPos += 4;
                    e.iiPos += 2;
                    e.ffPos += 1;
                    e.fPos += 1;
                    break;
                  case 3:
                    e.oPos += 1;
                    break;
                  case 4:
                    e.fPos += 6;
                    break;
                  case 5:
                    e.fPos += 4;
                    break;
                  case 6:
                    e.fPos += 3;
                    break;
                  case 7:
                    e.fPos += 4;
                    break;
                  case 8:
                    e.oPos += 3;
                    break;
                  case 9:
                    e.fPos += 4;
                    break;
                  case 10:
                    e.fPos += 5;
                    e.oPos += 1;
                    break;
                  case 12:
                    e.oPos += 4;
                    break;
                  case 14:
                    e.oPos += 2;
                    e.bPos += 2;
                    break;
                  case 15:
                    e.oPos += 4;
                    e.iiPos += 2;
                    e.ffPos += 1;
                    e.fPos += 1;
                    break;
                  case 16:
                    e.oPos += 4;
                    e.iPos += 1;
                    e.fPos += 2;
                    e.bPos += 1;
                    break;
                  case 17:
                    e.fPos += 2;
                    break;
                  case 18:
                    e.fPos += 2;
                    break;
                  case 19:
                    e.oPos += 1;
                    break;
                  case 20:
                    e.oPos += 1;
                }
                e.prev = K.BEGIN_BITMAP_FILL;
                k = e;
                w.fillCommands.beginBitmapFill(
                  k.buffer.o[k.oPos],
                  k.buffer.o[k.oPos + 1],
                  k.buffer.b[k.bPos],
                  k.buffer.b[k.bPos + 1]
                );
                w.strokeCommands.beginBitmapFill(
                  k.buffer.o[k.oPos],
                  k.buffer.o[k.oPos + 1],
                  k.buffer.b[k.bPos],
                  k.buffer.b[k.bPos + 1]
                );
              } else if (k == K.BEGIN_GRADIENT_FILL) {
                switch (e.prev[1]) {
                  case 0:
                    e.oPos += 2;
                    e.bPos += 2;
                    break;
                  case 1:
                    e.iPos += 1;
                    e.fPos += 1;
                    break;
                  case 2:
                    e.oPos += 4;
                    e.iiPos += 2;
                    e.ffPos += 1;
                    e.fPos += 1;
                    break;
                  case 3:
                    e.oPos += 1;
                    break;
                  case 4:
                    e.fPos += 6;
                    break;
                  case 5:
                    e.fPos += 4;
                    break;
                  case 6:
                    e.fPos += 3;
                    break;
                  case 7:
                    e.fPos += 4;
                    break;
                  case 8:
                    e.oPos += 3;
                    break;
                  case 9:
                    e.fPos += 4;
                    break;
                  case 10:
                    e.fPos += 5;
                    e.oPos += 1;
                    break;
                  case 12:
                    e.oPos += 4;
                    break;
                  case 14:
                    e.oPos += 2;
                    e.bPos += 2;
                    break;
                  case 15:
                    e.oPos += 4;
                    e.iiPos += 2;
                    e.ffPos += 1;
                    e.fPos += 1;
                    break;
                  case 16:
                    e.oPos += 4;
                    e.iPos += 1;
                    e.fPos += 2;
                    e.bPos += 1;
                    break;
                  case 17:
                    e.fPos += 2;
                    break;
                  case 18:
                    e.fPos += 2;
                    break;
                  case 19:
                    e.oPos += 1;
                    break;
                  case 20:
                    e.oPos += 1;
                }
                e.prev = K.BEGIN_GRADIENT_FILL;
                k = e;
                w.fillCommands.beginGradientFill(
                  k.buffer.o[k.oPos],
                  k.buffer.ii[k.iiPos],
                  k.buffer.ff[k.ffPos],
                  k.buffer.ii[k.iiPos + 1],
                  k.buffer.o[k.oPos + 1],
                  k.buffer.o[k.oPos + 2],
                  k.buffer.o[k.oPos + 3],
                  k.buffer.f[k.fPos]
                );
                w.strokeCommands.beginGradientFill(
                  k.buffer.o[k.oPos],
                  k.buffer.ii[k.iiPos],
                  k.buffer.ff[k.ffPos],
                  k.buffer.ii[k.iiPos + 1],
                  k.buffer.o[k.oPos + 1],
                  k.buffer.o[k.oPos + 2],
                  k.buffer.o[k.oPos + 3],
                  k.buffer.f[k.fPos]
                );
              } else if (k == K.BEGIN_SHADER_FILL) {
                switch (e.prev[1]) {
                  case 0:
                    e.oPos += 2;
                    e.bPos += 2;
                    break;
                  case 1:
                    e.iPos += 1;
                    e.fPos += 1;
                    break;
                  case 2:
                    e.oPos += 4;
                    e.iiPos += 2;
                    e.ffPos += 1;
                    e.fPos += 1;
                    break;
                  case 3:
                    e.oPos += 1;
                    break;
                  case 4:
                    e.fPos += 6;
                    break;
                  case 5:
                    e.fPos += 4;
                    break;
                  case 6:
                    e.fPos += 3;
                    break;
                  case 7:
                    e.fPos += 4;
                    break;
                  case 8:
                    e.oPos += 3;
                    break;
                  case 9:
                    e.fPos += 4;
                    break;
                  case 10:
                    e.fPos += 5;
                    e.oPos += 1;
                    break;
                  case 12:
                    e.oPos += 4;
                    break;
                  case 14:
                    e.oPos += 2;
                    e.bPos += 2;
                    break;
                  case 15:
                    e.oPos += 4;
                    e.iiPos += 2;
                    e.ffPos += 1;
                    e.fPos += 1;
                    break;
                  case 16:
                    e.oPos += 4;
                    e.iPos += 1;
                    e.fPos += 2;
                    e.bPos += 1;
                    break;
                  case 17:
                    e.fPos += 2;
                    break;
                  case 18:
                    e.fPos += 2;
                    break;
                  case 19:
                    e.oPos += 1;
                    break;
                  case 20:
                    e.oPos += 1;
                }
                e.prev = K.BEGIN_SHADER_FILL;
                k = e;
                w.fillCommands.beginShaderFill(k.buffer.o[k.oPos]);
                w.strokeCommands.beginShaderFill(k.buffer.o[k.oPos]);
              } else {
                switch (e.prev[1]) {
                  case 0:
                    e.oPos += 2;
                    e.bPos += 2;
                    break;
                  case 1:
                    e.iPos += 1;
                    e.fPos += 1;
                    break;
                  case 2:
                    e.oPos += 4;
                    e.iiPos += 2;
                    e.ffPos += 1;
                    e.fPos += 1;
                    break;
                  case 3:
                    e.oPos += 1;
                    break;
                  case 4:
                    e.fPos += 6;
                    break;
                  case 5:
                    e.fPos += 4;
                    break;
                  case 6:
                    e.fPos += 3;
                    break;
                  case 7:
                    e.fPos += 4;
                    break;
                  case 8:
                    e.oPos += 3;
                    break;
                  case 9:
                    e.fPos += 4;
                    break;
                  case 10:
                    e.fPos += 5;
                    e.oPos += 1;
                    break;
                  case 12:
                    e.oPos += 4;
                    break;
                  case 14:
                    e.oPos += 2;
                    e.bPos += 2;
                    break;
                  case 15:
                    e.oPos += 4;
                    e.iiPos += 2;
                    e.ffPos += 1;
                    e.fPos += 1;
                    break;
                  case 16:
                    e.oPos += 4;
                    e.iPos += 1;
                    e.fPos += 2;
                    e.bPos += 1;
                    break;
                  case 17:
                    e.fPos += 2;
                    break;
                  case 18:
                    e.fPos += 2;
                    break;
                  case 19:
                    e.oPos += 1;
                    break;
                  case 20:
                    e.oPos += 1;
                }
                e.prev = K.BEGIN_FILL;
                k = e;
                w.fillCommands.beginFill(
                  k.buffer.i[k.iPos],
                  k.buffer.f[k.fPos]
                );
                w.strokeCommands.beginFill(
                  k.buffer.i[k.iPos],
                  k.buffer.f[k.fPos]
                );
              }
              break;
            case 4:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.CUBIC_CURVE_TO;
              k = e;
              w.fillCommands.cubicCurveTo(
                k.buffer.f[k.fPos],
                k.buffer.f[k.fPos + 1],
                k.buffer.f[k.fPos + 2],
                k.buffer.f[k.fPos + 3],
                k.buffer.f[k.fPos + 4],
                k.buffer.f[k.fPos + 5]
              );
              g
                ? w.strokeCommands.cubicCurveTo(
                    k.buffer.f[k.fPos],
                    k.buffer.f[k.fPos + 1],
                    k.buffer.f[k.fPos + 2],
                    k.buffer.f[k.fPos + 3],
                    k.buffer.f[k.fPos + 4],
                    k.buffer.f[k.fPos + 5]
                  )
                : ((c = k.buffer.f[k.fPos + 4]), (d = k.buffer.f[k.fPos + 5]));
              break;
            case 5:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.CURVE_TO;
              k = e;
              w.fillCommands.curveTo(
                k.buffer.f[k.fPos],
                k.buffer.f[k.fPos + 1],
                k.buffer.f[k.fPos + 2],
                k.buffer.f[k.fPos + 3]
              );
              g
                ? w.strokeCommands.curveTo(
                    k.buffer.f[k.fPos],
                    k.buffer.f[k.fPos + 1],
                    k.buffer.f[k.fPos + 2],
                    k.buffer.f[k.fPos + 3]
                  )
                : ((c = k.buffer.f[k.fPos + 2]), (d = k.buffer.f[k.fPos + 3]));
              break;
            case 6:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.DRAW_CIRCLE;
              k = e;
              w.fillCommands.drawCircle(
                k.buffer.f[k.fPos],
                k.buffer.f[k.fPos + 1],
                k.buffer.f[k.fPos + 2]
              );
              g &&
                w.strokeCommands.drawCircle(
                  k.buffer.f[k.fPos],
                  k.buffer.f[k.fPos + 1],
                  k.buffer.f[k.fPos + 2]
                );
              break;
            case 7:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.DRAW_ELLIPSE;
              k = e;
              w.fillCommands.drawEllipse(
                k.buffer.f[k.fPos],
                k.buffer.f[k.fPos + 1],
                k.buffer.f[k.fPos + 2],
                k.buffer.f[k.fPos + 3]
              );
              g &&
                w.strokeCommands.drawEllipse(
                  k.buffer.f[k.fPos],
                  k.buffer.f[k.fPos + 1],
                  k.buffer.f[k.fPos + 2],
                  k.buffer.f[k.fPos + 3]
                );
              break;
            case 8:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.DRAW_QUADS;
              k = e;
              w.fillCommands.drawQuads(
                k.buffer.o[k.oPos],
                k.buffer.o[k.oPos + 1],
                k.buffer.o[k.oPos + 2]
              );
              break;
            case 9:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.DRAW_RECT;
              k = e;
              w.fillCommands.drawRect(
                k.buffer.f[k.fPos],
                k.buffer.f[k.fPos + 1],
                k.buffer.f[k.fPos + 2],
                k.buffer.f[k.fPos + 3]
              );
              g &&
                w.strokeCommands.drawRect(
                  k.buffer.f[k.fPos],
                  k.buffer.f[k.fPos + 1],
                  k.buffer.f[k.fPos + 2],
                  k.buffer.f[k.fPos + 3]
                );
              break;
            case 10:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.DRAW_ROUND_RECT;
              k = e;
              w.fillCommands.drawRoundRect(
                k.buffer.f[k.fPos],
                k.buffer.f[k.fPos + 1],
                k.buffer.f[k.fPos + 2],
                k.buffer.f[k.fPos + 3],
                k.buffer.f[k.fPos + 4],
                k.buffer.o[k.oPos]
              );
              g &&
                w.strokeCommands.drawRoundRect(
                  k.buffer.f[k.fPos],
                  k.buffer.f[k.fPos + 1],
                  k.buffer.f[k.fPos + 2],
                  k.buffer.f[k.fPos + 3],
                  k.buffer.f[k.fPos + 4],
                  k.buffer.o[k.oPos]
                );
              break;
            case 12:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.DRAW_TRIANGLES;
              k = e;
              w.fillCommands.drawTriangles(
                k.buffer.o[k.oPos],
                k.buffer.o[k.oPos + 1],
                k.buffer.o[k.oPos + 2],
                k.buffer.o[k.oPos + 3]
              );
              break;
            case 13:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.END_FILL;
              w.endFill();
              w.endStroke();
              g = w.hasFill = !1;
              w.bitmapFill = null;
              d = c = 0;
              break;
            case 14:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.LINE_BITMAP_STYLE;
              k = e;
              g ||
                (0 == c && 0 == d) ||
                (w.strokeCommands.moveTo(c, d), (d = c = 0));
              g = !0;
              w.strokeCommands.lineBitmapStyle(
                k.buffer.o[k.oPos],
                k.buffer.o[k.oPos + 1],
                k.buffer.b[k.bPos],
                k.buffer.b[k.bPos + 1]
              );
              break;
            case 15:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.LINE_GRADIENT_STYLE;
              k = e;
              g ||
                (0 == c && 0 == d) ||
                (w.strokeCommands.moveTo(c, d), (d = c = 0));
              g = !0;
              w.strokeCommands.lineGradientStyle(
                k.buffer.o[k.oPos],
                k.buffer.ii[k.iiPos],
                k.buffer.ff[k.ffPos],
                k.buffer.ii[k.iiPos + 1],
                k.buffer.o[k.oPos + 1],
                k.buffer.o[k.oPos + 2],
                k.buffer.o[k.oPos + 3],
                k.buffer.f[k.fPos]
              );
              break;
            case 16:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.LINE_STYLE;
              k = e;
              g ||
                null == k.buffer.o[k.oPos] ||
                (0 == c && 0 == d) ||
                (w.strokeCommands.moveTo(c, d), (d = c = 0));
              g = null != k.buffer.o[k.oPos];
              w.strokeCommands.lineStyle(
                k.buffer.o[k.oPos],
                k.buffer.i[k.iPos],
                k.buffer.f[k.fPos],
                k.buffer.b[k.bPos],
                k.buffer.o[k.oPos + 1],
                k.buffer.o[k.oPos + 2],
                k.buffer.o[k.oPos + 3],
                k.buffer.f[k.fPos + 1]
              );
              break;
            case 17:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.LINE_TO;
              k = e;
              w.fillCommands.lineTo(k.buffer.f[k.fPos], k.buffer.f[k.fPos + 1]);
              g
                ? w.strokeCommands.lineTo(
                    k.buffer.f[k.fPos],
                    k.buffer.f[k.fPos + 1]
                  )
                : ((c = k.buffer.f[k.fPos]), (d = k.buffer.f[k.fPos + 1]));
              break;
            case 18:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.MOVE_TO;
              k = e;
              w.fillCommands.moveTo(k.buffer.f[k.fPos], k.buffer.f[k.fPos + 1]);
              g
                ? w.strokeCommands.moveTo(
                    k.buffer.f[k.fPos],
                    k.buffer.f[k.fPos + 1]
                  )
                : ((c = k.buffer.f[k.fPos]), (d = k.buffer.f[k.fPos + 1]));
              break;
            case 19:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.OVERRIDE_BLEND_MODE;
              k = e;
              b.__setBlendModeContext(w.context, k.buffer.o[k.oPos]);
              break;
            case 21:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.WINDING_EVEN_ODD;
              w.fillCommands.windingEvenOdd();
              w.windingRule = "evenodd";
              break;
            case 22:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = K.WINDING_NON_ZERO;
              w.fillCommands.windingNonZero();
              w.windingRule = "nonzero";
              break;
            default:
              switch (e.prev[1]) {
                case 0:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 1:
                  e.iPos += 1;
                  e.fPos += 1;
                  break;
                case 2:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 3:
                  e.oPos += 1;
                  break;
                case 4:
                  e.fPos += 6;
                  break;
                case 5:
                  e.fPos += 4;
                  break;
                case 6:
                  e.fPos += 3;
                  break;
                case 7:
                  e.fPos += 4;
                  break;
                case 8:
                  e.oPos += 3;
                  break;
                case 9:
                  e.fPos += 4;
                  break;
                case 10:
                  e.fPos += 5;
                  e.oPos += 1;
                  break;
                case 12:
                  e.oPos += 4;
                  break;
                case 14:
                  e.oPos += 2;
                  e.bPos += 2;
                  break;
                case 15:
                  e.oPos += 4;
                  e.iiPos += 2;
                  e.ffPos += 1;
                  e.fPos += 1;
                  break;
                case 16:
                  e.oPos += 4;
                  e.iPos += 1;
                  e.fPos += 2;
                  e.bPos += 1;
                  break;
                case 17:
                  e.fPos += 2;
                  break;
                case 18:
                  e.fPos += 2;
                  break;
                case 19:
                  e.oPos += 1;
                  break;
                case 20:
                  e.oPos += 1;
              }
              e.prev = k;
          }
        }
        0 < w.fillCommands.get_length() && w.endFill();
        0 < w.strokeCommands.get_length() && w.endStroke();
        e.destroy();
        a.__bitmap = sa.fromCanvas(a.__canvas);
      }
      a.set___dirty(!1);
    }
  };
  w.renderMask = function (a, b) {
    if (0 != a.__commands.get_length()) {
      w.context = b.context;
      b = new vg(a.__commands);
      var c = a.__commands.types,
        d = 0;
      for (a = a.__commands.get_length(); d < a; ) {
        var e = d++;
        e = c[e];
        switch (e[1]) {
          case 4:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.CUBIC_CURVE_TO;
            e = b;
            w.context.bezierCurveTo(
              e.buffer.f[e.fPos] - 0,
              e.buffer.f[e.fPos + 1] - 0,
              e.buffer.f[e.fPos + 2] - 0,
              e.buffer.f[e.fPos + 3] - 0,
              e.buffer.f[e.fPos + 4] - 0,
              e.buffer.f[e.fPos + 5] - 0
            );
            break;
          case 5:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.CURVE_TO;
            e = b;
            w.context.quadraticCurveTo(
              e.buffer.f[e.fPos] - 0,
              e.buffer.f[e.fPos + 1] - 0,
              e.buffer.f[e.fPos + 2] - 0,
              e.buffer.f[e.fPos + 3] - 0
            );
            break;
          case 6:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.DRAW_CIRCLE;
            e = b;
            w.context.arc(
              e.buffer.f[e.fPos] - 0,
              e.buffer.f[e.fPos + 1] - 0,
              e.buffer.f[e.fPos + 2],
              0,
              2 * Math.PI,
              !0
            );
            break;
          case 7:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.DRAW_ELLIPSE;
            var f = b;
            e = f.buffer.f[f.fPos];
            var g = f.buffer.f[f.fPos + 1];
            var h = f.buffer.f[f.fPos + 2];
            var n = f.buffer.f[f.fPos + 3];
            e -= 0;
            g -= 0;
            f = (h / 2) * 0.5522848;
            var k = (n / 2) * 0.5522848;
            var m = e + h;
            var l = g + n;
            h = e + h / 2;
            n = g + n / 2;
            w.context.moveTo(e, n);
            w.context.bezierCurveTo(e, n - k, h - f, g, h, g);
            w.context.bezierCurveTo(h + f, g, m, n - k, m, n);
            w.context.bezierCurveTo(m, n + k, h + f, l, h, l);
            w.context.bezierCurveTo(h - f, l, e, n + k, e, n);
            break;
          case 9:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.DRAW_RECT;
            e = b;
            w.context.beginPath();
            w.context.rect(
              e.buffer.f[e.fPos] - 0,
              e.buffer.f[e.fPos + 1] - 0,
              e.buffer.f[e.fPos + 2],
              e.buffer.f[e.fPos + 3]
            );
            w.context.closePath();
            break;
          case 10:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.DRAW_ROUND_RECT;
            e = b;
            w.drawRoundRect(
              e.buffer.f[e.fPos] - 0,
              e.buffer.f[e.fPos + 1] - 0,
              e.buffer.f[e.fPos + 2],
              e.buffer.f[e.fPos + 3],
              e.buffer.f[e.fPos + 4],
              e.buffer.o[e.oPos]
            );
            break;
          case 17:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.LINE_TO;
            e = b;
            w.context.lineTo(
              e.buffer.f[e.fPos] - 0,
              e.buffer.f[e.fPos + 1] - 0
            );
            break;
          case 18:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.MOVE_TO;
            e = b;
            w.context.moveTo(
              e.buffer.f[e.fPos] - 0,
              e.buffer.f[e.fPos + 1] - 0
            );
            break;
          default:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = e;
        }
      }
      b.destroy();
    }
  };
  w.setSmoothing = function (a) {
    w.allowSmoothing || (a = !1);
    w.context.imageSmoothingEnabled != a &&
      (w.context.imageSmoothingEnabled = a);
  };
  var Tt = function () {};
  p["openfl._internal.renderer.canvas.CanvasShape"] = Tt;
  Tt.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasShape"];
  Tt.render = function (a, b) {
    if (a.__renderable) {
      var c = b.__getAlpha(a.__worldAlpha);
      if (!(0 >= c)) {
        var d = a.__graphics;
        if (null != d) {
          w.render(d, b);
          var e = d.__width,
            f = d.__height;
          if (null != d.__canvas) {
            var g = b.context,
              h = a.__scrollRect;
            0 < e &&
              0 < f &&
              (null == h || (0 < h.width && 0 < h.height)) &&
              (b.__setBlendMode(a.__worldBlendMode),
              b.__pushMaskObject(a),
              (g.globalAlpha = c),
              b.setTransform(d.__worldTransform, g),
              b.__isDOM && ((c = 1 / b.pixelRatio), g.scale(c, c)),
              g.drawImage(d.__canvas, 0, 0, e, f),
              b.__popMaskObject(a));
          }
        }
      }
    }
  };
  var O = function () {};
  p["openfl._internal.renderer.canvas.CanvasTextField"] = O;
  O.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasTextField"];
  O.render = function (a, b, c) {
    var d = a.__textEngine,
      e = d.background || d.border ? d.bounds : d.textBounds;
    c = a.__graphics;
    a.__dirty &&
      (a.__updateLayout(),
      null == c.__bounds && (c.__bounds = new W()),
      c.__bounds.copyFrom(e));
    c.__update(b.__worldTransform);
    if (a.__dirty || c.__dirty) {
      var f = c.__width,
        g = c.__height;
      if (
        !(
          (null != d.text && !ha.equals(d.text, "")) ||
          d.background ||
          d.border ||
          d.__hasFocus ||
          (1 == d.type && d.selectable)
        ) ||
        ((0 >= d.width || 0 >= d.height) && 2 != d.autoSize)
      )
        (a.__graphics.__canvas = null),
          (a.__graphics.__context = null),
          (a.__graphics.__bitmap = null),
          a.__graphics.set___dirty(!1),
          (a.__dirty = !1);
      else {
        null == a.__graphics.__canvas &&
          ((a.__graphics.__canvas = window.document.createElement("canvas")),
          (a.__graphics.__context = a.__graphics.__canvas.getContext("2d")));
        O.context = c.__context;
        var h = c.__renderTransform;
        if (b.__isDOM) {
          var n = b.pixelRatio;
          c.__canvas.width = (f * n) | 0;
          c.__canvas.height = (g * n) | 0;
          c.__canvas.style.width = f + "px";
          c.__canvas.style.height = g + "px";
          f = ya.__pool.get();
          f.copyFrom(h);
          f.scale(n, n);
          b.setTransform(f, O.context);
          ya.__pool.release(f);
        } else
          (c.__canvas.width = f),
            (c.__canvas.height = g),
            O.context.setTransform(h.a, h.b, h.c, h.d, h.tx, h.ty);
        null == O.clearRect &&
          (O.clearRect =
            "undefined" !== typeof navigator &&
            "undefined" !== typeof navigator.isCocoonJS);
        O.clearRect &&
          O.context.clearRect(0, 0, c.__canvas.width, c.__canvas.height);
        if ((null != d.text && "" != d.text) || d.__hasFocus) {
          h = d.text;
          c.__context.imageSmoothingEnabled =
            !b.__allowSmoothing || (0 == d.antiAliasType && 400 == d.sharpness)
              ? !1
              : !0;
          if (d.border || d.background)
            O.context.rect(0.5, 0.5, e.width - 1, e.height - 1),
              d.background &&
                ((b = ba.hex(d.backgroundColor & 16777215, 6)),
                (O.context.fillStyle = "#" + b),
                O.context.fill()),
              d.border &&
                ((O.context.lineWidth = 1),
                (b = ba.hex(d.borderColor & 16777215, 6)),
                (O.context.strokeStyle = "#" + b),
                O.context.stroke());
          O.context.textBaseline = "alphabetic";
          O.context.textAlign = "start";
          b = -a.get_scrollH();
          f = n = 0;
          for (g = a.get_scrollV() - 1; f < g; ) {
            var k = f++;
            n -= d.lineHeights.get(k);
          }
          var m;
          f = 0;
          for (g = d.layoutGroups; f < g.get_length(); )
            if (((k = g.get(f)), ++f, !(k.lineIndex < a.get_scrollV() - 1))) {
              if (k.lineIndex > a.get_scrollV() + d.bottomScrollV - 2) break;
              var l = "#" + ba.hex(k.format.color & 16777215, 6);
              O.context.font = Lb.getFont(k.format);
              O.context.fillStyle = l;
              O.context.fillText(
                ha.substring(h, k.startIndex, k.endIndex),
                k.offsetX + b - e.x,
                k.offsetY + k.ascent + n - e.y
              );
              if (-1 < a.__caretIndex && d.selectable)
                if (a.__selectionIndex == a.__caretIndex) {
                  if (
                    a.__showCursor &&
                    k.startIndex <= a.__caretIndex &&
                    k.endIndex >= a.__caretIndex
                  ) {
                    for (
                      var p = (m = 0), q = a.__caretIndex - k.startIndex;
                      p < q;

                    ) {
                      var r = p++;
                      if (k.positions.length <= r) break;
                      m += k.positions[r];
                    }
                    p = 0;
                    q = a.get_scrollV();
                    for (r = k.lineIndex + 1; q < r; ) {
                      var t = q++;
                      p += d.lineHeights.get(t - 1);
                    }
                    O.context.beginPath();
                    q = ba.hex(k.format.color & 16777215, 6);
                    O.context.strokeStyle = "#" + q;
                    O.context.moveTo(
                      k.offsetX + m - a.get_scrollH() - e.x,
                      p + 2 - e.y
                    );
                    O.context.lineWidth = 1;
                    O.context.lineTo(
                      k.offsetX + m - a.get_scrollH() - e.x,
                      p +
                        Lb.getFormatHeight(a.get_defaultTextFormat()) -
                        1 -
                        e.y
                    );
                    O.context.stroke();
                    O.context.closePath();
                  }
                } else if (
                  (k.startIndex <= a.__caretIndex &&
                    k.endIndex >= a.__caretIndex) ||
                  (k.startIndex <= a.__selectionIndex &&
                    k.endIndex >= a.__selectionIndex) ||
                  (k.startIndex > a.__caretIndex &&
                    k.endIndex < a.__selectionIndex) ||
                  (k.startIndex > a.__selectionIndex &&
                    k.endIndex < a.__caretIndex)
                )
                  (m = Math.min(a.__selectionIndex, a.__caretIndex) | 0),
                    (p = Math.max(a.__selectionIndex, a.__caretIndex) | 0),
                    k.startIndex > m && (m = k.startIndex),
                    k.endIndex < p && (p = k.endIndex),
                    (q = a.getCharBoundaries(m)),
                    p >= ha.get_length(d.text)
                      ? ((r = a.getCharBoundaries(ha.get_length(d.text) - 1)),
                        (r.x += r.width + 2))
                      : (r = a.getCharBoundaries(p)),
                    null != q &&
                      null != r &&
                      ((O.context.fillStyle = "#000000"),
                      O.context.fillRect(q.x + b, q.y + n, r.x - q.x, k.height),
                      (O.context.fillStyle = "#FFFFFF"),
                      O.context.fillText(
                        ha.substring(h, m, p),
                        b + q.x,
                        k.offsetY + k.ascent + n
                      ));
              k.format.underline &&
                (O.context.beginPath(),
                (O.context.strokeStyle = l),
                (O.context.lineWidth = 1),
                (l = k.offsetX + b - e.x),
                (m = Math.floor(k.offsetY + n + k.ascent - e.y) + 0.5),
                O.context.moveTo(l, m),
                O.context.lineTo(l + k.width, m),
                O.context.stroke(),
                O.context.closePath());
            }
        } else {
          if (d.border || d.background)
            d.border
              ? O.context.rect(0.5, 0.5, e.width - 1, e.height - 1)
              : O.context.rect(0, 0, e.width, e.height),
              d.background &&
                ((e = ba.hex(d.backgroundColor & 16777215, 6)),
                (O.context.fillStyle = "#" + e),
                O.context.fill()),
              d.border &&
                ((O.context.lineWidth = 1),
                (O.context.lineCap = "square"),
                (e = ba.hex(d.borderColor & 16777215, 6)),
                (O.context.strokeStyle = "#" + e),
                O.context.stroke());
          if (-1 < a.__caretIndex && d.selectable && a.__showCursor) {
            e = -a.get_scrollH();
            b = h = 0;
            for (n = a.get_scrollV() - 1; b < n; )
              (f = b++), (h += d.lineHeights.get(f));
            O.context.beginPath();
            d = ba.hex(a.get_defaultTextFormat().color & 16777215, 6);
            O.context.strokeStyle = "#" + d;
            O.context.moveTo(e + 2.5, h + 2.5);
            O.context.lineWidth = 1;
            O.context.lineTo(
              e + 2.5,
              h + Lb.getFormatHeight(a.get_defaultTextFormat()) - 1
            );
            O.context.stroke();
            O.context.closePath();
          }
        }
        c.__bitmap = sa.fromCanvas(a.__graphics.__canvas);
        c.__visible = !0;
        a.__dirty = !1;
        c.set___dirty(!1);
      }
    }
  };
  var Hi = function () {};
  p["openfl._internal.renderer.canvas.CanvasTilemap"] = Hi;
  Hi.__name__ = ["openfl", "_internal", "renderer", "canvas", "CanvasTilemap"];
  Hi.render = function (a, b) {
    if (a.__renderable && 0 != a.__group.__tiles.length) {
      var c = b.__getAlpha(a.__worldAlpha);
      if (!(0 >= c)) {
        var d = b.context;
        b.__setBlendMode(a.__worldBlendMode);
        b.__pushMaskObject(a);
        var e = W.__pool.get();
        e.setTo(0, 0, a.__width, a.__height);
        b.__pushMaskRect(e, a.__renderTransform);
        (b.__allowSmoothing && a.smoothing) || (d.imageSmoothingEnabled = !1);
        Hi.renderTileContainer(
          a.__group,
          b,
          a.__renderTransform,
          a.__tileset,
          b.__allowSmoothing && a.smoothing,
          a.tileAlphaEnabled,
          c,
          a.tileBlendModeEnabled,
          a.__worldBlendMode,
          null,
          null,
          e
        );
        (b.__allowSmoothing && a.smoothing) || (d.imageSmoothingEnabled = !0);
        b.__popMaskRect();
        b.__popMaskObject(a);
        W.__pool.release(e);
      }
    }
  };
  Hi.renderTileContainer = function (a, b, c, d, e, f, g, h, n, k, m, l) {
    var p = b.context,
      q = b.__roundPixels,
      r = ya.__pool.get(),
      t = a.__tiles,
      u,
      v = null,
      w = 0;
    for (a = a.__length; w < a; ) {
      var x = w++;
      var G = t[x];
      r.setTo(1, 0, 0, 1, -G.get_originX(), -G.get_originY());
      r.concat(G.get_matrix());
      r.concat(c);
      q && ((r.tx = Math.round(r.tx)), (r.ty = Math.round(r.ty)));
      var y = null != G.get_tileset() ? G.get_tileset() : d;
      x = G.get_alpha() * g;
      if ((u = G.get_visible()) && !(0 >= x))
        if (
          (f || (x = 1),
          h && (v = null != G.__blendMode ? G.__blendMode : n),
          0 < G.__length)
        )
          Hi.renderTileContainer(G, b, r, y, e, f, x, h, v, k, m, l);
        else if (null != y) {
          u = G.get_id();
          if (-1 == u) {
            if (((G = G.__rect), null == G || 0 >= G.width || 0 >= G.height))
              continue;
          } else {
            G = y.__data[u];
            if (null == G) continue;
            l.setTo(G.x, G.y, G.width, G.height);
            G = l;
          }
          y = y.__bitmapData;
          null != y &&
            (y != k &&
              (null == y.image.buffer.__srcImage && pa.convertToCanvas(y.image),
              (m = y.image.get_src()),
              (k = y)),
            (p.globalAlpha = x),
            h && b.__setBlendMode(v),
            b.setTransform(r, p),
            p.drawImage(
              m,
              G.x,
              G.y,
              G.width,
              G.height,
              0,
              0,
              G.width,
              G.height
            ));
        }
    }
    ya.__pool.release(r);
  };
  var Ah = function () {};
  p["openfl._internal.renderer.context3D.Context3DBitmap"] = Ah;
  Ah.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "context3D",
    "Context3DBitmap",
  ];
  Ah.render = function (a, b) {
    if (
      a.__renderable &&
      !(0 >= a.__worldAlpha) &&
      null != a.__bitmapData &&
      a.__bitmapData.__isValid
    ) {
      var c = b.__context3D;
      b.__setBlendMode(a.__worldBlendMode);
      b.__pushMaskObject(a);
      var d = b.__initDisplayShader(a.__worldShader);
      b.setShader(d);
      b.applyBitmapData(
        a.__bitmapData,
        b.__allowSmoothing && (a.smoothing || b.__upscaled)
      );
      b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
      b.applyAlpha(a.__worldAlpha);
      b.applyColorTransform(a.__worldColorTransform);
      b.updateShader();
      var e = a.__bitmapData.getVertexBuffer(c);
      null != d.__position && c.setVertexBufferAt(d.__position.index, e, 0, 3);
      null != d.__textureCoord &&
        c.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
      d = a.__bitmapData.getIndexBuffer(c);
      c.drawTriangles(d);
      b.__clearShader();
      b.__popMaskObject(a);
    }
  };
  Ah.renderMask = function (a, b) {
    if (null != a.__bitmapData && a.__bitmapData.__isValid) {
      var c = b.__context3D,
        d = b.__maskShader;
      b.setShader(d);
      b.applyBitmapData(Bj.opaqueBitmapData, !0);
      b.applyMatrix(b.__getMatrix(a.__renderTransform, a.pixelSnapping));
      b.updateShader();
      var e = a.__bitmapData.getVertexBuffer(c);
      null != d.__position && c.setVertexBufferAt(d.__position.index, e, 0, 3);
      null != d.__textureCoord &&
        c.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
      a = a.__bitmapData.getIndexBuffer(c);
      c.drawTriangles(a);
      b.__clearShader();
    }
  };
  var Ii = function (a, b, c, d) {
    this.context3D = a;
    this.elementType = b;
    this.dataPerVertex = d;
    this.vertexCount = this.indexCount = 0;
    this.resize(c);
  };
  p["openfl._internal.renderer.context3D.Context3DBuffer"] = Ii;
  Ii.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "context3D",
    "Context3DBuffer",
  ];
  Ii.prototype = {
    dataPerVertex: null,
    elementCount: null,
    elementType: null,
    indexBufferData: null,
    indexBuffers: null,
    indexCount: null,
    vertexBuffer: null,
    vertexBufferData: null,
    vertexCount: null,
    context3D: null,
    drawElements: function (a, b) {
      null == b && (b = -1);
      if (
        0 != this.indexCount &&
        0 != this.vertexCount &&
        0 == this.elementType[1]
      )
        if (
          (-1 == b && (b = 2 * this.elementCount), 10922 > a && 10922 > b - a)
        )
          this.context3D.drawTriangles(this.indexBuffers[0], 2 * a, 2 * b);
        else
          for (var c = a + b; a < c; ) {
            var d = Math.floor(a / 10922);
            b = Math.min(c - a, 10922) | 0;
            if (0 >= b) break;
            this.context3D.drawTriangles(
              this.indexBuffers[d],
              6 * (a - 10922 * d),
              2 * b
            );
            a += b;
          }
    },
    flushVertexBufferData: function () {
      this.vertexBufferData.length > this.vertexCount &&
        ((this.vertexCount = this.vertexBufferData.length),
        (this.vertexBuffer = this.context3D.createVertexBuffer(
          this.vertexCount,
          this.dataPerVertex,
          0
        )));
      this.vertexBuffer.uploadFromTypedArray(this.vertexBufferData);
    },
    resize: function (a, b) {
      null == b && (b = -1);
      this.elementCount = a;
      -1 == b && (b = this.dataPerVertex);
      b != this.dataPerVertex &&
        ((this.vertexBuffer = null),
        (this.vertexCount = 0),
        (this.dataPerVertex = b));
      var c = 0;
      switch (this.elementType[1]) {
        case 0:
          c = 4 * a;
          break;
        case 1:
          c = 3 * a;
          break;
        case 2:
          c = 3 * a;
      }
      a = c * b;
      null == this.vertexBufferData
        ? (this.vertexBufferData = null != a ? new vc(a) : null)
        : a > this.vertexBufferData.length &&
          ((b = this.vertexBufferData),
          (this.vertexBufferData = null != a ? new vc(a) : null),
          this.vertexBufferData.set(b));
    },
    __class__: Ii,
  };
  var fg = (p["openfl._internal.renderer.context3D.Context3DElementType"] = {
    __ename__: [
      "openfl",
      "_internal",
      "renderer",
      "context3D",
      "Context3DElementType",
    ],
    __constructs__: ["QUADS", "TRIANGLES", "TRIANGLE_INDICES"],
  });
  fg.QUADS = ["QUADS", 0];
  fg.QUADS.toString = M;
  fg.QUADS.__enum__ = fg;
  fg.TRIANGLES = ["TRIANGLES", 1];
  fg.TRIANGLES.toString = M;
  fg.TRIANGLES.__enum__ = fg;
  fg.TRIANGLE_INDICES = ["TRIANGLE_INDICES", 2];
  fg.TRIANGLE_INDICES.toString = M;
  fg.TRIANGLE_INDICES.__enum__ = fg;
  var mt = function () {};
  p["openfl._internal.renderer.context3D.Context3DDisplayObject"] = mt;
  mt.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "context3D",
    "Context3DDisplayObject",
  ];
  mt.render = function (a, b) {
    if (
      !(
        (null == a.opaqueBackground && null == a.__graphics) ||
        !a.__renderable ||
        0 >= a.__worldAlpha
      )
    ) {
      if (
        null != a.opaqueBackground &&
        !a.__isCacheBitmapRender &&
        0 < a.get_width() &&
        0 < a.get_height()
      ) {
        b.__setBlendMode(a.__worldBlendMode);
        b.__pushMaskObject(a);
        var c = b.__context3D,
          d = W.__pool.get();
        d.setTo(0, 0, a.get_width(), a.get_height());
        b.__pushMaskRect(d, a.__renderTransform);
        var e = a.opaqueBackground;
        c.clear(
          ((e >>> 16) & 255) / 255,
          ((e >>> 8) & 255) / 255,
          (e & 255) / 255,
          1,
          0,
          0,
          1
        );
        b.__popMaskRect();
        b.__popMaskObject(a);
        W.__pool.release(d);
      }
      null != a.__graphics && lg.render(a, b);
    }
  };
  mt.renderMask = function (a, b) {
    if (null != a.opaqueBackground || null != a.__graphics)
      null != a.opaqueBackground &&
        !a.__isCacheBitmapRender &&
        0 < a.get_width() &&
        a.get_height(),
        null != a.__graphics && lg.renderMask(a, b);
  };
  var sa = function (a, b, c, d) {
    null == d && (d = -1);
    null == c && (c = !0);
    this.transparent = c;
    null == a && (a = 0);
    null == b && (b = 0);
    0 > a && (a = 0);
    0 > b && (b = 0);
    this.width = a;
    this.height = b;
    this.rect = new W(0, 0, a, b);
    this.__textureWidth = a;
    this.__textureHeight = b;
    0 < a &&
      0 < b &&
      (c ? 0 == (d & -16777216) && (d = 0) : (d = -16777216 | (d & 16777215)),
      (this.image = new pb(null, 0, 0, a, b, (d << 8) | ((d >>> 24) & 255))),
      this.image.set_transparent(c),
      (this.readable = this.__isValid = !0));
    this.__renderTransform = new ya();
    this.__worldAlpha = 1;
    this.__worldTransform = new ya();
    this.__worldColorTransform = new sc();
    this.__renderable = !0;
  };
  p["openfl.display.BitmapData"] = sa;
  sa.__name__ = ["openfl", "display", "BitmapData"];
  sa.__interfaces__ = [pl];
  sa.fromBase64 = function (a, b) {
    return null;
  };
  sa.fromBytes = function (a, b) {
    return null;
  };
  sa.fromCanvas = function (a, b) {
    null == b && (b = !0);
    if (null == a) return null;
    var c = new sa(0, 0, b, 0);
    c.__fromImage(pb.fromCanvas(a));
    c.image.set_transparent(b);
    return c;
  };
  sa.fromFile = function (a) {
    return null;
  };
  sa.fromImage = function (a, b) {
    null == b && (b = !0);
    if (null == a || null == a.buffer) return null;
    var c = new sa(0, 0, b, 0);
    c.__fromImage(a);
    c.image.set_transparent(b);
    return null != c.image ? c : null;
  };
  sa.fromTexture = function (a) {
    if (null == a) return null;
    var b = new sa(a.__width, a.__height, !0, 0);
    b.readable = !1;
    b.__texture = a;
    b.__textureContext = a.__textureContext;
    b.image = null;
    return b;
  };
  sa.loadFromBase64 = function (a, b) {
    return pb.loadFromBase64(a, b).then(function (a) {
      return ab.withValue(sa.fromImage(a));
    });
  };
  sa.loadFromBytes = function (a, b) {
    return pb.loadFromBytes(Na.toBytes(a)).then(function (a) {
      a = sa.fromImage(a);
      null != b && a.__applyAlpha(b);
      return ab.withValue(a);
    });
  };
  sa.loadFromFile = function (a) {
    return pb.loadFromFile(a).then(function (a) {
      return ab.withValue(sa.fromImage(a));
    });
  };
  sa.prototype = {
    height: null,
    image: null,
    readable: null,
    rect: null,
    transparent: null,
    width: null,
    __blendMode: null,
    __framebuffer: null,
    __framebufferContext: null,
    __indexBuffer: null,
    __indexBufferContext: null,
    __indexBufferData: null,
    __isMask: null,
    __isValid: null,
    __mask: null,
    __renderable: null,
    __renderTransform: null,
    __scrollRect: null,
    __stencilBuffer: null,
    __surface: null,
    __symbol: null,
    __texture: null,
    __textureContext: null,
    __textureHeight: null,
    __textureVersion: null,
    __textureWidth: null,
    __transform: null,
    __uvRect: null,
    __vertexBuffer: null,
    __vertexBufferContext: null,
    __vertexBufferData: null,
    __worldAlpha: null,
    __worldColorTransform: null,
    __worldTransform: null,
    applyFilter: function (a, b, c, d) {
      if (this.readable && null != a && a.readable) {
        a = d.__needSecondBitmapData;
        var e = d.__preserveObject,
          f = null;
        var g = a ? new sa(this.width, this.height, !0, 0) : this;
        e && (f = new sa(this.width, this.height, !0, 0));
        d.__preserveObject && f.copyPixels(this, this.rect, c);
        b = d.__applyFilter(g, this, b, c);
        d.__preserveObject && b.draw(f, null, null);
        a &&
          b == g &&
          ((g.image.version = this.image.version), (this.image = g.image));
        this.image.dirty = !0;
        this.image.version++;
      }
    },
    clone: function () {
      if (this.__isValid)
        if (this.readable || null != this.image)
          var a = sa.fromImage(this.image.clone(), this.transparent);
        else
          (a = new sa(0, 0, this.transparent, 0)),
            (a.width = this.width),
            (a.height = this.height),
            (a.__textureWidth = this.__textureWidth),
            (a.__textureHeight = this.__textureHeight),
            a.rect.copyFrom(this.rect),
            (a.__framebuffer = this.__framebuffer),
            (a.__framebufferContext = this.__framebufferContext),
            (a.__texture = this.__texture),
            (a.__textureContext = this.__textureContext),
            (a.__isValid = !0);
      else a = new sa(this.width, this.height, this.transparent, 0);
      a.__worldTransform.copyFrom(this.__worldTransform);
      a.__renderTransform.copyFrom(this.__renderTransform);
      return a;
    },
    colorTransform: function (a, b) {
      this.readable &&
        this.image.colorTransform(
          a.__toLimeRectangle(),
          b.__toLimeColorMatrix()
        );
    },
    compare: function (a) {
      if (a == this) return 0;
      if (null == a) return -1;
      if (0 == this.readable || 0 == a.readable) return -2;
      if (this.width != a.width) return -3;
      if (this.height != a.height) return -4;
      if (
        null != this.image &&
        null != a.image &&
        this.image.get_format() == a.image.get_format()
      ) {
        for (
          var b = this.image.get_data(),
            c = a.image.get_data(),
            d = !0,
            e = 0,
            f = b.length;
          e < f;

        ) {
          var g = e++;
          if (b[g] != c[g]) {
            d = !1;
            break;
          }
        }
        if (d) return 0;
      }
      b = null;
      e = 0;
      for (f = this.height; e < f; ) {
        g = e++;
        for (var h = 0, n = this.width; h < n; ) {
          var k = h++;
          c = !1;
          var m = this.getPixel32(k, g);
          var l = a.getPixel32(k, g);
          d = 0;
          if (m != l) {
            var p = ((m >>> 16) & 255) - ((l >>> 16) & 255);
            var q = ((m >>> 8) & 255) - ((l >>> 8) & 255);
            var r = (m & 255) - (l & 255);
            0 > p && (p *= -1);
            0 > q && (q *= -1);
            0 > r && (r *= -1);
            0 == p && 0 == q && 0 == r
              ? ((m = ((m >>> 24) & 255) - ((l >>> 24) & 255)),
                0 != m &&
                  ((d =
                    (((d >>> 24) & 255) << 24) |
                    16711680 |
                    (((d >>> 8) & 255) << 8) |
                    (d & 255)),
                  (d =
                    (((d >>> 24) & 255) << 24) |
                    (((d >>> 16) & 255) << 16) |
                    65280 |
                    (d & 255)),
                  (d =
                    (((d >>> 24) & 255) << 24) |
                    (((d >>> 16) & 255) << 16) |
                    (((d >>> 8) & 255) << 8) |
                    255),
                  (d =
                    ((m & 255) << 24) |
                    (((d >>> 16) & 255) << 16) |
                    (((d >>> 8) & 255) << 8) |
                    (d & 255)),
                  (c = !0)))
              : ((d =
                  (((d >>> 24) & 255) << 24) |
                  ((p & 255) << 16) |
                  (((d >>> 8) & 255) << 8) |
                  (d & 255)),
                (d =
                  (((d >>> 24) & 255) << 24) |
                  (((d >>> 16) & 255) << 16) |
                  ((q & 255) << 8) |
                  (d & 255)),
                (d =
                  (((d >>> 24) & 255) << 24) |
                  (((d >>> 16) & 255) << 16) |
                  (((d >>> 8) & 255) << 8) |
                  (r & 255)),
                (d =
                  -16777216 |
                  (((d >>> 16) & 255) << 16) |
                  (((d >>> 8) & 255) << 8) |
                  (d & 255)),
                (c = !0));
          }
          c &&
            (null == b &&
              (b = new sa(
                this.width,
                this.height,
                this.transparent || a.transparent,
                0
              )),
            b.setPixel32(k, g, d));
        }
      }
      return null == b ? 0 : b;
    },
    copyChannel: function (a, b, c, d, e) {
      if (this.readable) {
        switch (d) {
          case 1:
            d = cd.RED;
            break;
          case 2:
            d = cd.GREEN;
            break;
          case 4:
            d = cd.BLUE;
            break;
          case 8:
            d = cd.ALPHA;
            break;
          default:
            return;
        }
        switch (e) {
          case 1:
            e = cd.RED;
            break;
          case 2:
            e = cd.GREEN;
            break;
          case 4:
            e = cd.BLUE;
            break;
          case 8:
            e = cd.ALPHA;
            break;
          default:
            return;
        }
        this.image.copyChannel(
          a.image,
          b.__toLimeRectangle(),
          c.__toLimeVector2(),
          d,
          e
        );
      }
    },
    copyPixels: function (a, b, c, d, e, f) {
      null == f && (f = !1);
      this.readable &&
        null != a &&
        (null != e && ((sa.__tempVector.x = e.x), (sa.__tempVector.y = e.y)),
        this.image.copyPixels(
          a.image,
          b.__toLimeRectangle(),
          c.__toLimeVector2(),
          null != d ? d.image : null,
          null != e ? sa.__tempVector : null,
          f
        ));
    },
    dispose: function () {
      this.image = null;
      this.height = this.width = 0;
      this.rect = null;
      this.readable = this.__isValid = !1;
      this.__textureContext =
        this.__texture =
        this.__framebufferContext =
        this.__framebuffer =
        this.__vertexBuffer =
        this.__surface =
          null;
    },
    disposeImage: function () {
      this.readable = !1;
    },
    draw: function (a, b, c, d, e, f) {
      null == f && (f = !1);
      if (null != a) {
        a.__update(!1, !0);
        var g = ya.__pool.get();
        g.copyFrom(a.__renderTransform);
        g.invert();
        null != b && g.concat(b);
        b = null;
        null != e && ((b = ya.__pool.get()), b.copyFrom(g), b.invert());
        var h = new sc();
        h.__copyFrom(a.__worldColorTransform);
        h.__invert();
        if (this.readable || null == wa.get_current().stage.context3D) {
          if (null != c) {
            var n = W.__pool.get(),
              k = ya.__pool.get();
            a.__getBounds(n, k);
            var m = Math.ceil(n.width),
              l = Math.ceil(n.height);
            k.tx = -n.x;
            k.ty = -n.y;
            m = new sa(m, l, !0, 0);
            m.draw(a, k);
            m.colorTransform(m.rect, c);
            m.__renderTransform.identity();
            m.__renderTransform.tx = n.x;
            m.__renderTransform.ty = n.y;
            m.__renderTransform.concat(a.__renderTransform);
            m.__worldAlpha = a.__worldAlpha;
            m.__worldColorTransform.__copyFrom(a.__worldColorTransform);
            a = m;
            W.__pool.release(n);
            ya.__pool.release(k);
          }
          pa.convertToCanvas(this.image);
          c = new mh(this.image.buffer.__srcContext);
          c.__allowSmoothing = f;
          c.__overrideBlendMode = d;
          c.__worldTransform = g;
          c.__worldAlpha = 1 / a.__worldAlpha;
          c.__worldColorTransform = h;
          null != e && c.__pushMaskRect(e, b);
          this.__drawCanvas(a, c);
        } else
          null == this.__textureContext &&
            (this.__textureContext = Me.current.__window.context),
            null != c && h.__combine(c),
            (c = new Ab(wa.get_current().stage.context3D, this)),
            (c.__allowSmoothing = f),
            (c.__overrideBlendMode = d),
            (c.__worldTransform = g),
            (c.__worldAlpha = 1 / a.__worldAlpha),
            (c.__worldColorTransform = h),
            c.__resize(this.width, this.height),
            null != e && c.__pushMaskRect(e, b),
            this.__drawGL(a, c);
        null != e && (c.__popMaskRect(), ya.__pool.release(b));
        ya.__pool.release(g);
      }
    },
    drawWithQuality: function (a, b, c, d, e, f, g) {
      null == f && (f = !1);
      this.draw(a, b, c, d, e, 2 != g && f);
    },
    encode: function (a, b, c) {
      if (!this.readable || null == a) return null;
      null == c && (c = new ce(0));
      var d = this.image;
      if (!a.equals(this.rect)) {
        var e = ya.__pool.get();
        e.tx = Math.round(-a.x);
        e.ty = Math.round(-a.y);
        a = new sa(Math.ceil(a.width), Math.ceil(a.height), !0, 0);
        a.draw(this, e);
        d = a.image;
        ya.__pool.release(e);
      }
      return u.__instanceof(b, vq)
        ? (c.writeBytes(Na.fromBytes(d.encode(dg.PNG))), c)
        : u.__instanceof(b, Vn)
        ? (c.writeBytes(
            Na.fromBytes(d.encode(dg.JPEG, u.__cast(b, Vn).quality))
          ),
          c)
        : null;
    },
    fillRect: function (a, b) {
      this.__fillRect(a, b, !0);
    },
    floodFill: function (a, b, c) {
      this.readable && this.image.floodFill(a, b, c, 1);
    },
    generateFilterRect: function (a, b) {
      return a.clone();
    },
    getIndexBuffer: function (a) {
      if (
        null == this.__indexBuffer ||
        this.__indexBufferContext != a.__context
      )
        (this.__indexBufferData = new Uint16Array(6)),
          (this.__indexBufferData[0] = 0),
          (this.__indexBufferData[1] = 1),
          (this.__indexBufferData[2] = 2),
          (this.__indexBufferData[3] = 2),
          (this.__indexBufferData[4] = 1),
          (this.__indexBufferData[5] = 3),
          (this.__indexBufferContext = a.__context),
          (this.__indexBuffer = a.createIndexBuffer(6)),
          this.__indexBuffer.uploadFromTypedArray(this.__indexBufferData);
      return this.__indexBuffer;
    },
    getVertexBuffer: function (a) {
      if (
        null == this.__vertexBuffer ||
        this.__vertexBufferContext != a.__context
      )
        (this.__uvRect = new W(0, 0, this.width, this.height)),
          (this.__vertexBufferData = new vc(56)),
          (this.__vertexBufferData[0] = this.width),
          (this.__vertexBufferData[1] = this.height),
          (this.__vertexBufferData[3] = 1),
          (this.__vertexBufferData[4] = 1),
          (this.__vertexBufferData[15] = this.height),
          (this.__vertexBufferData[18] = 1),
          (this.__vertexBufferData[28] = this.width),
          (this.__vertexBufferData[31] = 1),
          (this.__vertexBufferContext = a.__context),
          (this.__vertexBuffer = a.createVertexBuffer(3, 14)),
          this.__vertexBuffer.uploadFromTypedArray(this.__vertexBufferData);
      return this.__vertexBuffer;
    },
    getColorBoundsRect: function (a, b, c) {
      null == c && (c = !0);
      if (!this.readable) return new W(0, 0, this.width, this.height);
      a = this.image.getColorBoundsRect(a, b, c, 1);
      return new W(a.x, a.y, a.width, a.height);
    },
    getPixel: function (a, b) {
      return this.readable ? this.image.getPixel(a, b, 1) : 0;
    },
    getPixel32: function (a, b) {
      return this.readable ? this.image.getPixel32(a, b, 1) : 0;
    },
    getPixels: function (a) {
      if (!this.readable) return null;
      null == a && (a = this.rect);
      a = Na.fromBytes(this.image.getPixels(a.__toLimeRectangle(), 1));
      a.__endian = 0;
      return a;
    },
    getSurface: function () {
      if (!this.readable) return null;
      null == this.__surface && (this.__surface = Zg.fromImage(this.image));
      return this.__surface;
    },
    getTexture: function (a) {
      if (!this.__isValid) return null;
      if (null == this.__texture || this.__textureContext != a.__context)
        (this.__textureContext = a.__context),
          (this.__texture = a.createRectangleTexture(
            this.width,
            this.height,
            1,
            !1
          )),
          (this.__textureVersion = -1);
      pa.sync(this.image, !1);
      null != this.image &&
        this.image.version > this.__textureVersion &&
        (null != this.__surface && Us.flush(this.__surface),
        (a = this.image),
        dc.__supportsBGRA ||
          0 == a.get_format() ||
          ((a = a.clone()), a.set_format(0)),
        this.__texture.__uploadFromImage(a),
        (this.__textureVersion = this.image.version),
        (this.__textureWidth = a.buffer.width),
        (this.__textureHeight = a.buffer.height));
      this.readable ||
        null == this.image ||
        (this.image = this.__surface = null);
      return this.__texture;
    },
    getVector: function (a) {
      a = this.getPixels(a);
      for (
        var b = (Na.get_length(a) / 4) | 0,
          c = Oa.toIntVector(null, b, !0),
          d = 0;
        d < b;

      ) {
        var e = d++;
        c.set(e, a.readUnsignedInt());
      }
      return c;
    },
    histogram: function (a) {
      a = null != a ? a : new W(0, 0, this.width, this.height);
      a = this.getPixels(a);
      for (var b = [], c = 0; 4 > c; ) {
        c++;
        for (var d = [], e = 0; 256 > e; ) e++, d.push(0);
        b.push(d);
      }
      c = 0;
      for (d = Na.get_length(a); c < d; )
        (e = c++), ++b[e % 4][a.readUnsignedByte()];
      return b;
    },
    hitTest: function (a, b, c, d, e) {
      null == e && (e = 1);
      if (!this.readable) return !1;
      u.__instanceof(c, ic) && (c = u.__cast(c, ic).__bitmapData);
      if (u.__instanceof(c, Y)) {
        if (
          ((d = c),
          (e = (d.x - a.x) | 0),
          (a = (d.y - a.y) | 0),
          this.rect.contains(e, a) && ((this.getPixel32(e, a) >> 24) & 255) > b)
        )
          return !0;
      } else if (u.__instanceof(c, sa)) {
        var f;
        if (null == d) var g = (f = 0);
        else (f = Math.round(d.x - a.x)), (g = Math.round(d.y - a.y));
        a = W.__pool.get();
        a.setTo(f, g, c.width, c.height);
        if (this.rect.intersects(a)) {
          0 > f
            ? ((a.x = 0), (a.width = Math.min(c.width + f, this.width)))
            : (a.width = Math.min(c.width, this.width - f));
          0 > g
            ? ((a.y = 0), (a.height = Math.min(c.height + g, this.height)))
            : (a.height = Math.min(c.height, this.height - g));
          d = this.getPixels(a);
          a.x = 0 > f ? -f : 0;
          a.y = 0 > g ? -g : 0;
          c = c.getPixels(a);
          for (var h = 0, n = (a.width * a.height) | 0; h < n; )
            if (
              (h++,
              (f = d.readUnsignedInt()),
              (g = c.readUnsignedInt()),
              ((f >> 24) & 255) > b && ((g >> 24) & 255) > e)
            )
              return W.__pool.release(a), !0;
        }
        W.__pool.release(a);
      } else if (u.__instanceof(c, W)) {
        e = W.__pool.get();
        e.copyFrom(c);
        e.offset(-a.x, -a.y);
        e.__contract(0, 0, this.width, this.height);
        if (0 < e.width && 0 < e.height)
          for (
            a = this.getPixels(e), c = 0, f = (Na.get_length(a) / 4) | 0;
            c < f;

          )
            if ((c++, (d = a.readUnsignedInt()), ((d >> 24) & 255) > b))
              return W.__pool.release(e), !0;
        W.__pool.release(e);
      }
      return !1;
    },
    lock: function () {},
    merge: function (a, b, c, d, e, f, g) {
      this.readable &&
        null != a &&
        a.readable &&
        null != b &&
        null != c &&
        this.image.merge(
          a.image,
          b.__toLimeRectangle(),
          c.__toLimeVector2(),
          d,
          e,
          f,
          g
        );
    },
    noise: function (a, b, c, d, e) {
      null == e && (e = !1);
      null == d && (d = 7);
      null == c && (c = 255);
      null == b && (b = 0);
      if (this.readable) {
        var f = function () {
          a = 1103515245 * a + 12345;
          return (Math.abs(a / 65536) | 0) % 32768;
        };
        f();
        c -= b;
        new ce(0);
        var g = 1 == (d & 1),
          h = 1 == (d & 2) >> 1,
          n = 1 == (d & 4) >> 2;
        d = 1 == (d & 8) >> 3;
        for (var k = 0, m = this.height; k < m; )
          for (var l = k++, p = 0, q = this.width; p < q; ) {
            var r = p++,
              t = 0,
              u = 0,
              v = 0,
              w = 255;
            e
              ? ((t = v = u = b + (f() % c)), (w = 255))
              : (g && (t = b + (f() % c)),
                h && (v = b + (f() % c)),
                n && (u = b + (f() % c)),
                d && (w = b + (f() % c)));
            w = (w << 8) + t;
            w = (w << 8) + v;
            w = (w << 8) + u;
            this.setPixel32(r, l, w);
          }
      }
    },
    paletteMap: function (a, b, c, d, e, f, g) {
      var h = b.width | 0,
        n = b.height | 0;
      a = a.getPixels(b);
      b = 0;
      for (var k = n * h; b < k; ) {
        var m = b++;
        var l = a.readUnsignedInt();
        var p = null == g ? l & -16777216 : g[(l >> 24) & 255];
        var q = null == d ? l & 16711680 : d[(l >> 16) & 255];
        var r = null == e ? l & 65280 : e[(l >> 8) & 255];
        l = null == f ? l & 255 : f[l & 255];
        q = p + q + r + l;
        a.position = 4 * m;
        a.writeUnsignedInt(q);
      }
      a.position = 0;
      d = W.__pool.get();
      d.setTo(c.x, c.y, h, n);
      this.setPixels(d, a);
      W.__pool.release(d);
    },
    perlinNoise: function (a, b, c, d, e, f, g, h, n) {
      null == h && (h = !1);
      null == g && (g = 7);
      this.readable && new Cj(d, c, g, h, 0.5, e, 0.15).fill(this, a, b, 0);
    },
    scroll: function (a, b) {
      this.readable && this.image.scroll(a, b);
    },
    setPixel: function (a, b, c) {
      this.readable && this.image.setPixel(a, b, c, 1);
    },
    setPixel32: function (a, b, c) {
      this.readable && this.image.setPixel32(a, b, c, 1);
    },
    setPixels: function (a, b) {
      if (this.readable && null != a) {
        var c = a.width * a.height * 4;
        if (Xa.toFloat(b.length - b.position) < c)
          throw new v(new ud("End of file was encountered.", 2030));
        this.image.setPixels(
          a.__toLimeRectangle(),
          Na.toBytePointer(b),
          1,
          Ji.toLimeEndian(b.__endian)
        );
      }
    },
    setVector: function (a, b) {
      var c = new ce(0);
      Na.set_length(c, 4 * b.get_length());
      for (var d = 0; d < b.get_length(); ) {
        var e = b.get(d);
        ++d;
        c.writeUnsignedInt(e);
      }
      c.position = 0;
      this.setPixels(a, c);
    },
    threshold: function (a, b, c, d, e, f, g, h) {
      null == h && (h = !1);
      null == g && (g = -1);
      null == f && (f = 0);
      return null == a ||
        null == b ||
        null == c ||
        b.x > a.width ||
        b.y > a.height ||
        c.x > this.width ||
        c.y > this.height
        ? 0
        : this.image.threshold(
            a.image,
            b.__toLimeRectangle(),
            c.__toLimeVector2(),
            d,
            e,
            f,
            g,
            h,
            1
          );
    },
    unlock: function (a) {},
    __applyAlpha: function (a) {
      pa.convertToCanvas(this.image);
      pa.createImageData(this.image);
      for (
        var b = this.image.buffer.data, c = 0, d = Na.get_length(a);
        c < d;

      ) {
        var e = c++;
        b[4 * e + 3] = a.readUnsignedByte();
      }
      this.image.version++;
    },
    __drawCairo: function (a, b) {},
    __drawCanvas: function (a, b) {
      var c = this.image.buffer;
      b.__allowSmoothing || b.applySmoothing(c.__srcContext, !1);
      b.__render(a);
      b.__allowSmoothing || b.applySmoothing(c.__srcContext, !0);
      c.__srcContext.setTransform(1, 0, 0, 1, 0, 0);
      c.__srcImageData = null;
      c.data = null;
      this.image.dirty = !0;
      this.image.version++;
    },
    __drawGL: function (a, b) {
      var c = b.__context3D,
        d = c.__state.renderToTexture,
        e = c.__state.renderToTextureDepthStencil,
        f = c.__state.renderToTextureAntiAlias,
        g = c.__state.renderToTextureSurfaceSelector;
      c.setRenderToTexture(this.getTexture(c), !0);
      b.__render(a);
      null != d ? c.setRenderToTexture(d, e, f, g) : c.setRenderToBackBuffer();
    },
    __fillRect: function (a, b, c) {
      if (null != a)
        if (
          (this.transparent && 0 == (b & -16777216) && (b = 0),
          c &&
            null != this.__texture &&
            null != this.__texture.__glFramebuffer &&
            "opengl" == wa.get_current().stage.__renderer.__type)
        ) {
          c = wa.get_current().stage.__renderer.__context3D;
          var d = !this.rect.equals(a),
            e = c.__state.renderToTexture,
            f = c.__state.renderToTextureDepthStencil,
            g = c.__state.renderToTextureAntiAlias,
            h = c.__state.renderToTextureSurfaceSelector;
          c.setRenderToTexture(this.__texture);
          d && c.setScissorRectangle(a);
          c.clear(
            ((b >>> 16) & 255) / 255,
            ((b >>> 8) & 255) / 255,
            (b & 255) / 255,
            this.transparent ? ((b >>> 24) & 255) / 255 : 1,
            0,
            0,
            1
          );
          d && c.setScissorRectangle(null);
          null != e
            ? c.setRenderToTexture(e, f, g, h)
            : c.setRenderToBackBuffer();
        } else
          this.readable && this.image.fillRect(a.__toLimeRectangle(), b, 1);
    },
    __fromBase64: function (a, b) {
      a = pb.fromBase64(a, b);
      this.__fromImage(a);
    },
    __fromBytes: function (a, b) {
      a = pb.fromBytes(Na.toBytes(a));
      this.__fromImage(a);
      null != b && this.__applyAlpha(b);
    },
    __fromFile: function (a) {
      a = pb.fromFile(a);
      this.__fromImage(a);
    },
    __fromImage: function (a) {
      null != a &&
        null != a.buffer &&
        ((this.image = a),
        (this.width = a.width),
        (this.height = a.height),
        (this.rect = new W(0, 0, a.width, a.height)),
        (this.__textureWidth = this.width),
        (this.__textureHeight = this.height),
        (this.__isValid = this.readable = !0));
    },
    __fromSymbol: function (a, b) {
      var c = this;
      this.__symbol = b;
      pb.loadFromFile(b.path).onComplete(function (a) {
        if (null != b.alpha)
          pb.loadFromFile(b.alpha).onComplete(function (b) {
            if (null != a && null != b) {
              var d = b.get_rect();
              a.copyChannel(b, d, new xd(), cd.RED, cd.ALPHA);
              a.buffer.premultiplied = !0;
              a.set_premultiplied(!1);
            }
            c.__fromImage(a);
          });
        else c.__fromImage(a);
      });
    },
    __getBounds: function (a, b) {
      var c = W.__pool.get();
      this.rect.__transform(c, b);
      a.__expand(c.x, c.y, c.width, c.height);
      W.__pool.release(c);
    },
    __loadFromBase64: function (a, b) {
      var c = this;
      return pb.loadFromBase64(a, b).then(function (a) {
        c.__fromImage(a);
        return ab.withValue(c);
      });
    },
    __loadFromBytes: function (a, b) {
      var c = this;
      return pb.loadFromBytes(Na.toBytes(a)).then(function (a) {
        c.__fromImage(a);
        null != b && c.__applyAlpha(b);
        return ab.withValue(c);
      });
    },
    __loadFromFile: function (a) {
      var b = this;
      return pb.loadFromFile(a).then(function (a) {
        b.__fromImage(a);
        return ab.withValue(b);
      });
    },
    __renderCairo: function (a) {},
    __renderCairoMask: function (a) {},
    __renderCanvas: function (a) {
      if (this.readable) {
        this.image.type == Pc.DATA && pa.convertToCanvas(this.image);
        var b = a.context;
        b.globalAlpha = 1;
        a.setTransform(this.__renderTransform, b);
        b.drawImage(
          this.image.get_src(),
          0,
          0,
          this.image.width,
          this.image.height
        );
      }
    },
    __renderCanvasMask: function (a) {},
    __renderDOM: function (a) {},
    __renderGL: function (a) {
      var b = a.__context3D;
      a.__setBlendMode(10);
      var c = a.__defaultDisplayShader;
      a.setShader(c);
      a.applyBitmapData(this, a.__allowSmoothing && a.__upscaled);
      a.applyMatrix(a.__getMatrix(this.__worldTransform, 1));
      a.applyAlpha(this.__worldAlpha);
      a.applyColorTransform(this.__worldColorTransform);
      a.updateShader();
      var d = this.getVertexBuffer(b);
      null != c.__position && b.setVertexBufferAt(c.__position.index, d, 0, 3);
      null != c.__textureCoord &&
        b.setVertexBufferAt(c.__textureCoord.index, d, 3, 2);
      c = this.getIndexBuffer(b);
      b.drawTriangles(c);
      a.__clearShader();
    },
    __renderGLMask: function (a) {
      var b = a.__context3D,
        c = a.__maskShader;
      a.setShader(c);
      a.applyBitmapData(this, a.__allowSmoothing && a.__upscaled);
      a.applyMatrix(a.__getMatrix(this.__worldTransform, 1));
      a.updateShader();
      var d = this.getVertexBuffer(b);
      null != c.__position && b.setVertexBufferAt(c.__position.index, d, 0, 3);
      null != c.__textureCoord &&
        b.setVertexBufferAt(c.__textureCoord.index, d, 3, 2);
      c = this.getIndexBuffer(b);
      b.drawTriangles(c);
      a.__clearShader();
    },
    __resize: function (a, b) {
      this.width = a;
      this.height = b;
      this.rect.width = a;
      this.rect.height = b;
      this.__textureWidth = a;
      this.__textureHeight = b;
    },
    __setUVRect: function (a, b, c, d, e) {
      if (
        null != this.getVertexBuffer(a) &&
        (d != this.__uvRect.width ||
          e != this.__uvRect.height ||
          b != this.__uvRect.x ||
          c != this.__uvRect.y)
      ) {
        null == this.__uvRect && (this.__uvRect = new W());
        this.__uvRect.setTo(b, c, d, e);
        a = 0 < this.__textureWidth ? b / this.__textureWidth : 0;
        c = 0 < this.__textureHeight ? c / this.__textureHeight : 0;
        b = 0 < this.__textureWidth ? d / this.__textureWidth : 0;
        var f = 0 < this.__textureHeight ? e / this.__textureHeight : 0;
        this.__vertexBufferData[0] = d;
        this.__vertexBufferData[1] = e;
        this.__vertexBufferData[3] = a + b;
        this.__vertexBufferData[4] = c + f;
        this.__vertexBufferData[15] = e;
        this.__vertexBufferData[17] = a;
        this.__vertexBufferData[18] = c + f;
        this.__vertexBufferData[28] = d;
        this.__vertexBufferData[31] = a + b;
        this.__vertexBufferData[32] = c;
        this.__vertexBufferData[45] = a;
        this.__vertexBufferData[46] = c;
        this.__vertexBuffer.uploadFromTypedArray(this.__vertexBufferData);
      }
    },
    __sync: function () {
      pa.sync(this.image, !1);
    },
    __update: function (a, b) {
      this.__updateTransforms();
    },
    __updateTransforms: function (a) {
      null == a
        ? this.__worldTransform.identity()
        : this.__worldTransform.copyFrom(a);
      this.__renderTransform.copyFrom(this.__worldTransform);
    },
    __class__: sa,
  };
  var Ic = function () {};
  p["openfl._internal.renderer.context3D.Context3DGraphics"] = Ic;
  Ic.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "context3D",
    "Context3DGraphics",
  ];
  Ic.buildBuffer = function (a, b) {
    var c = 0,
      d = 0,
      e = 0,
      f = new vg(a.__commands);
    b = b.__context3D;
    for (
      var g = W.__pool.get(),
        h = ya.__pool.get(),
        n = null,
        k = 0,
        m = a.__commands.types;
      k < m.length;

    ) {
      var l = m[k];
      ++k;
      switch (l[1]) {
        case 0:
          switch (f.prev[1]) {
            case 0:
              f.oPos += 2;
              f.bPos += 2;
              break;
            case 1:
              f.iPos += 1;
              f.fPos += 1;
              break;
            case 2:
              f.oPos += 4;
              f.iiPos += 2;
              f.ffPos += 1;
              f.fPos += 1;
              break;
            case 3:
              f.oPos += 1;
              break;
            case 4:
              f.fPos += 6;
              break;
            case 5:
              f.fPos += 4;
              break;
            case 6:
              f.fPos += 3;
              break;
            case 7:
              f.fPos += 4;
              break;
            case 8:
              f.oPos += 3;
              break;
            case 9:
              f.fPos += 4;
              break;
            case 10:
              f.fPos += 5;
              f.oPos += 1;
              break;
            case 12:
              f.oPos += 4;
              break;
            case 14:
              f.oPos += 2;
              f.bPos += 2;
              break;
            case 15:
              f.oPos += 4;
              f.iiPos += 2;
              f.ffPos += 1;
              f.fPos += 1;
              break;
            case 16:
              f.oPos += 4;
              f.iPos += 1;
              f.fPos += 2;
              f.bPos += 1;
              break;
            case 17:
              f.fPos += 2;
              break;
            case 18:
              f.fPos += 2;
              break;
            case 19:
              f.oPos += 1;
              break;
            case 20:
              f.oPos += 1;
          }
          f.prev = K.BEGIN_BITMAP_FILL;
          n = f;
          n = n.buffer.o[n.oPos];
          break;
        case 1:
          n = null;
          switch (f.prev[1]) {
            case 0:
              f.oPos += 2;
              f.bPos += 2;
              break;
            case 1:
              f.iPos += 1;
              f.fPos += 1;
              break;
            case 2:
              f.oPos += 4;
              f.iiPos += 2;
              f.ffPos += 1;
              f.fPos += 1;
              break;
            case 3:
              f.oPos += 1;
              break;
            case 4:
              f.fPos += 6;
              break;
            case 5:
              f.fPos += 4;
              break;
            case 6:
              f.fPos += 3;
              break;
            case 7:
              f.fPos += 4;
              break;
            case 8:
              f.oPos += 3;
              break;
            case 9:
              f.fPos += 4;
              break;
            case 10:
              f.fPos += 5;
              f.oPos += 1;
              break;
            case 12:
              f.oPos += 4;
              break;
            case 14:
              f.oPos += 2;
              f.bPos += 2;
              break;
            case 15:
              f.oPos += 4;
              f.iiPos += 2;
              f.ffPos += 1;
              f.fPos += 1;
              break;
            case 16:
              f.oPos += 4;
              f.iPos += 1;
              f.fPos += 2;
              f.bPos += 1;
              break;
            case 17:
              f.fPos += 2;
              break;
            case 18:
              f.fPos += 2;
              break;
            case 19:
              f.oPos += 1;
              break;
            case 20:
              f.oPos += 1;
          }
          f.prev = l;
          break;
        case 3:
          switch (f.prev[1]) {
            case 0:
              f.oPos += 2;
              f.bPos += 2;
              break;
            case 1:
              f.iPos += 1;
              f.fPos += 1;
              break;
            case 2:
              f.oPos += 4;
              f.iiPos += 2;
              f.ffPos += 1;
              f.fPos += 1;
              break;
            case 3:
              f.oPos += 1;
              break;
            case 4:
              f.fPos += 6;
              break;
            case 5:
              f.fPos += 4;
              break;
            case 6:
              f.fPos += 3;
              break;
            case 7:
              f.fPos += 4;
              break;
            case 8:
              f.oPos += 3;
              break;
            case 9:
              f.fPos += 4;
              break;
            case 10:
              f.fPos += 5;
              f.oPos += 1;
              break;
            case 12:
              f.oPos += 4;
              break;
            case 14:
              f.oPos += 2;
              f.bPos += 2;
              break;
            case 15:
              f.oPos += 4;
              f.iiPos += 2;
              f.ffPos += 1;
              f.fPos += 1;
              break;
            case 16:
              f.oPos += 4;
              f.iPos += 1;
              f.fPos += 2;
              f.bPos += 1;
              break;
            case 17:
              f.fPos += 2;
              break;
            case 18:
              f.fPos += 2;
              break;
            case 19:
              f.oPos += 1;
              break;
            case 20:
              f.oPos += 1;
          }
          f.prev = K.BEGIN_SHADER_FILL;
          n = f;
          l = n.buffer.o[n.oPos];
          n =
            null == l || null == l.shader || null == l.shader.__bitmap
              ? null
              : n.buffer.o[n.oPos].shader.__bitmap.input;
          break;
        case 8:
          if (null != n) {
            switch (f.prev[1]) {
              case 0:
                f.oPos += 2;
                f.bPos += 2;
                break;
              case 1:
                f.iPos += 1;
                f.fPos += 1;
                break;
              case 2:
                f.oPos += 4;
                f.iiPos += 2;
                f.ffPos += 1;
                f.fPos += 1;
                break;
              case 3:
                f.oPos += 1;
                break;
              case 4:
                f.fPos += 6;
                break;
              case 5:
                f.fPos += 4;
                break;
              case 6:
                f.fPos += 3;
                break;
              case 7:
                f.fPos += 4;
                break;
              case 8:
                f.oPos += 3;
                break;
              case 9:
                f.fPos += 4;
                break;
              case 10:
                f.fPos += 5;
                f.oPos += 1;
                break;
              case 12:
                f.oPos += 4;
                break;
              case 14:
                f.oPos += 2;
                f.bPos += 2;
                break;
              case 15:
                f.oPos += 4;
                f.iiPos += 2;
                f.ffPos += 1;
                f.fPos += 1;
                break;
              case 16:
                f.oPos += 4;
                f.iPos += 1;
                f.fPos += 2;
                f.bPos += 1;
                break;
              case 17:
                f.fPos += 2;
                break;
              case 18:
                f.fPos += 2;
                break;
              case 19:
                f.oPos += 1;
                break;
              case 20:
                f.oPos += 1;
            }
            f.prev = K.DRAW_QUADS;
            var p = f;
            l = p.buffer.o[p.oPos];
            var q = p.buffer.o[p.oPos + 1];
            p = p.buffer.o[p.oPos + 2];
            var r = null != q,
              t = !1,
              u = !1,
              v = r ? q.get_length() : Math.floor(l.get_length() / 4);
            if (0 == v) return;
            null != p &&
              (p.get_length() >= 6 * v
                ? (u = t = !0)
                : p.get_length() >= 4 * v
                ? (t = !0)
                : p.get_length() >= 2 * v && (u = !0));
            null == a.__quadBuffer
              ? (a.__quadBuffer = new Ii(b, fg.QUADS, v, 4))
              : a.__quadBuffer.resize(c + v, 4);
            var w = a.__quadBuffer.vertexBufferData;
            var x = n.width;
            var y = n.height;
            for (var z = 0, B = v; z < B; ) {
              var A = z++;
              var C = 16 * (c + A);
              var D = r ? 4 * q.get(A) : 4 * A;
              if (!(0 > D)) {
                g.setTo(l.get(D), l.get(D + 1), l.get(D + 2), l.get(D + 3));
                D = g.width;
                var E = g.height;
                if (!(0 >= D || 0 >= E)) {
                  t && u
                    ? ((A *= 6),
                      h.setTo(
                        p.get(A),
                        p.get(A + 1),
                        p.get(A + 2),
                        p.get(A + 3),
                        p.get(A + 4),
                        p.get(A + 5)
                      ))
                    : t
                    ? ((A *= 4),
                      h.setTo(
                        p.get(A),
                        p.get(A + 1),
                        p.get(A + 2),
                        p.get(A + 3),
                        g.x,
                        g.y
                      ))
                    : u
                    ? ((A *= 2), (h.tx = p.get(A)), (h.ty = p.get(A + 1)))
                    : ((h.tx = g.x), (h.ty = g.y));
                  A = g.x / x;
                  var F = g.y / y;
                  var I = g.get_right() / x;
                  var H = g.get_bottom() / y;
                  var J = 0 * h.a + 0 * h.c + h.tx;
                  var M = 0 * h.b + 0 * h.d + h.ty;
                  var L = D * h.a + 0 * h.c + h.tx;
                  var N = D * h.b + 0 * h.d + h.ty;
                  var O = 0 * h.a + E * h.c + h.tx;
                  var P = 0 * h.b + E * h.d + h.ty;
                  var Q = D * h.a + E * h.c + h.tx;
                  D = D * h.b + E * h.d + h.ty;
                  w[C] = J;
                  w[C + 1] = M;
                  w[C + 2] = A;
                  w[C + 3] = F;
                  w[C + 4] = L;
                  w[C + 4 + 1] = N;
                  w[C + 4 + 2] = I;
                  w[C + 4 + 3] = F;
                  w[C + 8] = O;
                  w[C + 8 + 1] = P;
                  w[C + 8 + 2] = A;
                  w[C + 8 + 3] = H;
                  w[C + 12] = Q;
                  w[C + 12 + 1] = D;
                  w[C + 12 + 2] = I;
                  w[C + 12 + 3] = H;
                }
              }
            }
            c += v;
          }
          break;
        case 12:
          switch (f.prev[1]) {
            case 0:
              f.oPos += 2;
              f.bPos += 2;
              break;
            case 1:
              f.iPos += 1;
              f.fPos += 1;
              break;
            case 2:
              f.oPos += 4;
              f.iiPos += 2;
              f.ffPos += 1;
              f.fPos += 1;
              break;
            case 3:
              f.oPos += 1;
              break;
            case 4:
              f.fPos += 6;
              break;
            case 5:
              f.fPos += 4;
              break;
            case 6:
              f.fPos += 3;
              break;
            case 7:
              f.fPos += 4;
              break;
            case 8:
              f.oPos += 3;
              break;
            case 9:
              f.fPos += 4;
              break;
            case 10:
              f.fPos += 5;
              f.oPos += 1;
              break;
            case 12:
              f.oPos += 4;
              break;
            case 14:
              f.oPos += 2;
              f.bPos += 2;
              break;
            case 15:
              f.oPos += 4;
              f.iiPos += 2;
              f.ffPos += 1;
              f.fPos += 1;
              break;
            case 16:
              f.oPos += 4;
              f.iPos += 1;
              f.fPos += 2;
              f.bPos += 1;
              break;
            case 17:
              f.fPos += 2;
              break;
            case 18:
              f.fPos += 2;
              break;
            case 19:
              f.oPos += 1;
              break;
            case 20:
              f.oPos += 1;
          }
          f.prev = K.DRAW_TRIANGLES;
          p = f;
          l = p.buffer.o[p.oPos];
          q = p.buffer.o[p.oPos + 1];
          p = p.buffer.o[p.oPos + 2];
          r = null != q;
          v = Math.floor(l.get_length() / 2);
          t = r ? q.get_length() : v;
          C = (v = (u = null != p) && p.get_length() >= 3 * v) ? 4 : 2;
          x = v ? 3 : 2;
          y = C + 2;
          w = v ? e : d;
          Ic.resizeVertexBuffer(a, v, w + t * y);
          z = v ? a.__vertexBufferDataUVT : a.__vertexBufferData;
          E = 0;
          for (A = t; E < A; )
            (F = E++),
              (B = w + F * y),
              (D = r ? 2 * q.get(F) : 2 * F),
              (F = r ? q.get(F) * x : F * x),
              v
                ? ((I = p.get(F + 2)),
                  (z[B] = l.get(D) / I),
                  (z[B + 1] = l.get(D + 1) / I),
                  (z[B + 2] = 0),
                  (z[B + 3] = 1 / I))
                : ((z[B] = l.get(D)), (z[B + 1] = l.get(D + 1))),
              (z[B + C] = u ? p.get(F) : 0),
              (z[B + C + 1] = u ? p.get(F + 1) : 0);
          v ? (e += t * y) : (d += t * y);
          break;
        case 13:
          n = null;
          break;
        default:
          switch (f.prev[1]) {
            case 0:
              f.oPos += 2;
              f.bPos += 2;
              break;
            case 1:
              f.iPos += 1;
              f.fPos += 1;
              break;
            case 2:
              f.oPos += 4;
              f.iiPos += 2;
              f.ffPos += 1;
              f.fPos += 1;
              break;
            case 3:
              f.oPos += 1;
              break;
            case 4:
              f.fPos += 6;
              break;
            case 5:
              f.fPos += 4;
              break;
            case 6:
              f.fPos += 3;
              break;
            case 7:
              f.fPos += 4;
              break;
            case 8:
              f.oPos += 3;
              break;
            case 9:
              f.fPos += 4;
              break;
            case 10:
              f.fPos += 5;
              f.oPos += 1;
              break;
            case 12:
              f.oPos += 4;
              break;
            case 14:
              f.oPos += 2;
              f.bPos += 2;
              break;
            case 15:
              f.oPos += 4;
              f.iiPos += 2;
              f.ffPos += 1;
              f.fPos += 1;
              break;
            case 16:
              f.oPos += 4;
              f.iPos += 1;
              f.fPos += 2;
              f.bPos += 1;
              break;
            case 17:
              f.fPos += 2;
              break;
            case 18:
              f.fPos += 2;
              break;
            case 19:
              f.oPos += 1;
              break;
            case 20:
              f.oPos += 1;
          }
          f.prev = l;
      }
    }
    0 < c && a.__quadBuffer.flushVertexBufferData();
    if (0 < d) {
      c = a.__vertexBuffer;
      if (null == c || d > a.__vertexBufferCount)
        (c = b.createVertexBuffer(d, 4, 0)),
          (a.__vertexBuffer = c),
          (a.__vertexBufferCount = d);
      c.uploadFromTypedArray(a.__vertexBufferData);
    }
    if (0 < e) {
      d = a.__vertexBufferUVT;
      if (null == d || e > a.__vertexBufferCountUVT)
        (d = b.createVertexBuffer(e, 6, 0)),
          (a.__vertexBufferUVT = d),
          (a.__vertexBufferCountUVT = e);
      d.uploadFromTypedArray(a.__vertexBufferDataUVT);
    }
    W.__pool.release(g);
    ya.__pool.release(h);
  };
  Ic.isCompatible = function (a) {
    var b = new vg(a.__commands),
      c = !1,
      d = !1,
      e = !1,
      f = 0;
    for (a = a.__commands.types; f < a.length; ) {
      var g = a[f];
      ++f;
      switch (g[1]) {
        case 0:
          d = !0;
          e = c = !1;
          switch (b.prev[1]) {
            case 0:
              b.oPos += 2;
              b.bPos += 2;
              break;
            case 1:
              b.iPos += 1;
              b.fPos += 1;
              break;
            case 2:
              b.oPos += 4;
              b.iiPos += 2;
              b.ffPos += 1;
              b.fPos += 1;
              break;
            case 3:
              b.oPos += 1;
              break;
            case 4:
              b.fPos += 6;
              break;
            case 5:
              b.fPos += 4;
              break;
            case 6:
              b.fPos += 3;
              break;
            case 7:
              b.fPos += 4;
              break;
            case 8:
              b.oPos += 3;
              break;
            case 9:
              b.fPos += 4;
              break;
            case 10:
              b.fPos += 5;
              b.oPos += 1;
              break;
            case 12:
              b.oPos += 4;
              break;
            case 14:
              b.oPos += 2;
              b.bPos += 2;
              break;
            case 15:
              b.oPos += 4;
              b.iiPos += 2;
              b.ffPos += 1;
              b.fPos += 1;
              break;
            case 16:
              b.oPos += 4;
              b.iPos += 1;
              b.fPos += 2;
              b.bPos += 1;
              break;
            case 17:
              b.fPos += 2;
              break;
            case 18:
              b.fPos += 2;
              break;
            case 19:
              b.oPos += 1;
              break;
            case 20:
              b.oPos += 1;
          }
          b.prev = g;
          break;
        case 1:
          d = !1;
          c = !0;
          e = !1;
          switch (b.prev[1]) {
            case 0:
              b.oPos += 2;
              b.bPos += 2;
              break;
            case 1:
              b.iPos += 1;
              b.fPos += 1;
              break;
            case 2:
              b.oPos += 4;
              b.iiPos += 2;
              b.ffPos += 1;
              b.fPos += 1;
              break;
            case 3:
              b.oPos += 1;
              break;
            case 4:
              b.fPos += 6;
              break;
            case 5:
              b.fPos += 4;
              break;
            case 6:
              b.fPos += 3;
              break;
            case 7:
              b.fPos += 4;
              break;
            case 8:
              b.oPos += 3;
              break;
            case 9:
              b.fPos += 4;
              break;
            case 10:
              b.fPos += 5;
              b.oPos += 1;
              break;
            case 12:
              b.oPos += 4;
              break;
            case 14:
              b.oPos += 2;
              b.bPos += 2;
              break;
            case 15:
              b.oPos += 4;
              b.iiPos += 2;
              b.ffPos += 1;
              b.fPos += 1;
              break;
            case 16:
              b.oPos += 4;
              b.iPos += 1;
              b.fPos += 2;
              b.bPos += 1;
              break;
            case 17:
              b.fPos += 2;
              break;
            case 18:
              b.fPos += 2;
              break;
            case 19:
              b.oPos += 1;
              break;
            case 20:
              b.oPos += 1;
          }
          b.prev = g;
          break;
        case 3:
          c = d = !1;
          e = !0;
          switch (b.prev[1]) {
            case 0:
              b.oPos += 2;
              b.bPos += 2;
              break;
            case 1:
              b.iPos += 1;
              b.fPos += 1;
              break;
            case 2:
              b.oPos += 4;
              b.iiPos += 2;
              b.ffPos += 1;
              b.fPos += 1;
              break;
            case 3:
              b.oPos += 1;
              break;
            case 4:
              b.fPos += 6;
              break;
            case 5:
              b.fPos += 4;
              break;
            case 6:
              b.fPos += 3;
              break;
            case 7:
              b.fPos += 4;
              break;
            case 8:
              b.oPos += 3;
              break;
            case 9:
              b.fPos += 4;
              break;
            case 10:
              b.fPos += 5;
              b.oPos += 1;
              break;
            case 12:
              b.oPos += 4;
              break;
            case 14:
              b.oPos += 2;
              b.bPos += 2;
              break;
            case 15:
              b.oPos += 4;
              b.iiPos += 2;
              b.ffPos += 1;
              b.fPos += 1;
              break;
            case 16:
              b.oPos += 4;
              b.iPos += 1;
              b.fPos += 2;
              b.bPos += 1;
              break;
            case 17:
              b.fPos += 2;
              break;
            case 18:
              b.fPos += 2;
              break;
            case 19:
              b.oPos += 1;
              break;
            case 20:
              b.oPos += 1;
          }
          b.prev = g;
          break;
        case 8:
          if (d || e) {
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = g;
          } else return b.destroy(), !1;
          break;
        case 9:
          if (c) {
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = g;
          } else return b.destroy(), !1;
          break;
        case 12:
          if (d || e) {
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = g;
          } else return b.destroy(), !1;
          break;
        case 13:
          e = c = d = !1;
          switch (b.prev[1]) {
            case 0:
              b.oPos += 2;
              b.bPos += 2;
              break;
            case 1:
              b.iPos += 1;
              b.fPos += 1;
              break;
            case 2:
              b.oPos += 4;
              b.iiPos += 2;
              b.ffPos += 1;
              b.fPos += 1;
              break;
            case 3:
              b.oPos += 1;
              break;
            case 4:
              b.fPos += 6;
              break;
            case 5:
              b.fPos += 4;
              break;
            case 6:
              b.fPos += 3;
              break;
            case 7:
              b.fPos += 4;
              break;
            case 8:
              b.oPos += 3;
              break;
            case 9:
              b.fPos += 4;
              break;
            case 10:
              b.fPos += 5;
              b.oPos += 1;
              break;
            case 12:
              b.oPos += 4;
              break;
            case 14:
              b.oPos += 2;
              b.bPos += 2;
              break;
            case 15:
              b.oPos += 4;
              b.iiPos += 2;
              b.ffPos += 1;
              b.fPos += 1;
              break;
            case 16:
              b.oPos += 4;
              b.iPos += 1;
              b.fPos += 2;
              b.bPos += 1;
              break;
            case 17:
              b.fPos += 2;
              break;
            case 18:
              b.fPos += 2;
              break;
            case 19:
              b.oPos += 1;
              break;
            case 20:
              b.oPos += 1;
          }
          b.prev = g;
          break;
        case 18:
          switch (b.prev[1]) {
            case 0:
              b.oPos += 2;
              b.bPos += 2;
              break;
            case 1:
              b.iPos += 1;
              b.fPos += 1;
              break;
            case 2:
              b.oPos += 4;
              b.iiPos += 2;
              b.ffPos += 1;
              b.fPos += 1;
              break;
            case 3:
              b.oPos += 1;
              break;
            case 4:
              b.fPos += 6;
              break;
            case 5:
              b.fPos += 4;
              break;
            case 6:
              b.fPos += 3;
              break;
            case 7:
              b.fPos += 4;
              break;
            case 8:
              b.oPos += 3;
              break;
            case 9:
              b.fPos += 4;
              break;
            case 10:
              b.fPos += 5;
              b.oPos += 1;
              break;
            case 12:
              b.oPos += 4;
              break;
            case 14:
              b.oPos += 2;
              b.bPos += 2;
              break;
            case 15:
              b.oPos += 4;
              b.iiPos += 2;
              b.ffPos += 1;
              b.fPos += 1;
              break;
            case 16:
              b.oPos += 4;
              b.iPos += 1;
              b.fPos += 2;
              b.bPos += 1;
              break;
            case 17:
              b.fPos += 2;
              break;
            case 18:
              b.fPos += 2;
              break;
            case 19:
              b.oPos += 1;
              break;
            case 20:
              b.oPos += 1;
          }
          b.prev = g;
          break;
        case 19:
          switch (b.prev[1]) {
            case 0:
              b.oPos += 2;
              b.bPos += 2;
              break;
            case 1:
              b.iPos += 1;
              b.fPos += 1;
              break;
            case 2:
              b.oPos += 4;
              b.iiPos += 2;
              b.ffPos += 1;
              b.fPos += 1;
              break;
            case 3:
              b.oPos += 1;
              break;
            case 4:
              b.fPos += 6;
              break;
            case 5:
              b.fPos += 4;
              break;
            case 6:
              b.fPos += 3;
              break;
            case 7:
              b.fPos += 4;
              break;
            case 8:
              b.oPos += 3;
              break;
            case 9:
              b.fPos += 4;
              break;
            case 10:
              b.fPos += 5;
              b.oPos += 1;
              break;
            case 12:
              b.oPos += 4;
              break;
            case 14:
              b.oPos += 2;
              b.bPos += 2;
              break;
            case 15:
              b.oPos += 4;
              b.iiPos += 2;
              b.ffPos += 1;
              b.fPos += 1;
              break;
            case 16:
              b.oPos += 4;
              b.iPos += 1;
              b.fPos += 2;
              b.bPos += 1;
              break;
            case 17:
              b.fPos += 2;
              break;
            case 18:
              b.fPos += 2;
              break;
            case 19:
              b.oPos += 1;
              break;
            case 20:
              b.oPos += 1;
          }
          b.prev = g;
          break;
        default:
          return b.destroy(), !1;
      }
    }
    b.destroy();
    return !0;
  };
  Ic.render = function (a, b) {
    if (a.__visible && 0 != a.__commands.get_length())
      if ((null != a.__bitmap && !a.__dirty) || !Ic.isCompatible(a)) {
        var c = b.__softwareRenderer.__worldTransform;
        b.__softwareRenderer.__worldTransform = b.__worldTransform;
        w.render(a, b.__softwareRenderer);
        b.__softwareRenderer.__worldTransform = c;
      } else {
        a.__bitmap = null;
        a.__update(b.__worldTransform);
        c = a.__width;
        var d = a.__height;
        if (null != a.__bounds && 1 <= c && 1 <= d) {
          (a.__dirty ||
            (null == a.__quadBuffer &&
              null == a.__vertexBuffer &&
              null == a.__vertexBufferUVT)) &&
            Ic.buildBuffer(a, b);
          c = new vg(a.__commands);
          d = b.__context3D;
          for (
            var e = ya.__pool.get(),
              f = null,
              g = null,
              h = !1,
              n = !1,
              k = null,
              m = 0,
              l = 0,
              p = 0,
              q = 0,
              r = 0,
              t = a.__commands.types;
            r < t.length;

          ) {
            var u = t[r];
            ++r;
            switch (u[1]) {
              case 0:
                switch (c.prev[1]) {
                  case 0:
                    c.oPos += 2;
                    c.bPos += 2;
                    break;
                  case 1:
                    c.iPos += 1;
                    c.fPos += 1;
                    break;
                  case 2:
                    c.oPos += 4;
                    c.iiPos += 2;
                    c.ffPos += 1;
                    c.fPos += 1;
                    break;
                  case 3:
                    c.oPos += 1;
                    break;
                  case 4:
                    c.fPos += 6;
                    break;
                  case 5:
                    c.fPos += 4;
                    break;
                  case 6:
                    c.fPos += 3;
                    break;
                  case 7:
                    c.fPos += 4;
                    break;
                  case 8:
                    c.oPos += 3;
                    break;
                  case 9:
                    c.fPos += 4;
                    break;
                  case 10:
                    c.fPos += 5;
                    c.oPos += 1;
                    break;
                  case 12:
                    c.oPos += 4;
                    break;
                  case 14:
                    c.oPos += 2;
                    c.bPos += 2;
                    break;
                  case 15:
                    c.oPos += 4;
                    c.iiPos += 2;
                    c.ffPos += 1;
                    c.fPos += 1;
                    break;
                  case 16:
                    c.oPos += 4;
                    c.iPos += 1;
                    c.fPos += 2;
                    c.bPos += 1;
                    break;
                  case 17:
                    c.fPos += 2;
                    break;
                  case 18:
                    c.fPos += 2;
                    break;
                  case 19:
                    c.oPos += 1;
                    break;
                  case 20:
                    c.oPos += 1;
                }
                c.prev = K.BEGIN_BITMAP_FILL;
                n = c;
                g = n.buffer.o[n.oPos];
                h = n.buffer.b[n.bPos];
                n = n.buffer.b[n.bPos + 1];
                k = f = null;
                break;
              case 1:
                switch (c.prev[1]) {
                  case 0:
                    c.oPos += 2;
                    c.bPos += 2;
                    break;
                  case 1:
                    c.iPos += 1;
                    c.fPos += 1;
                    break;
                  case 2:
                    c.oPos += 4;
                    c.iiPos += 2;
                    c.ffPos += 1;
                    c.fPos += 1;
                    break;
                  case 3:
                    c.oPos += 1;
                    break;
                  case 4:
                    c.fPos += 6;
                    break;
                  case 5:
                    c.fPos += 4;
                    break;
                  case 6:
                    c.fPos += 3;
                    break;
                  case 7:
                    c.fPos += 4;
                    break;
                  case 8:
                    c.oPos += 3;
                    break;
                  case 9:
                    c.fPos += 4;
                    break;
                  case 10:
                    c.fPos += 5;
                    c.oPos += 1;
                    break;
                  case 12:
                    c.oPos += 4;
                    break;
                  case 14:
                    c.oPos += 2;
                    c.bPos += 2;
                    break;
                  case 15:
                    c.oPos += 4;
                    c.iiPos += 2;
                    c.ffPos += 1;
                    c.fPos += 1;
                    break;
                  case 16:
                    c.oPos += 4;
                    c.iPos += 1;
                    c.fPos += 2;
                    c.bPos += 1;
                    break;
                  case 17:
                    c.fPos += 2;
                    break;
                  case 18:
                    c.fPos += 2;
                    break;
                  case 19:
                    c.oPos += 1;
                    break;
                  case 20:
                    c.oPos += 1;
                }
                c.prev = K.BEGIN_FILL;
                g = c;
                k =
                  ((g.buffer.i[g.iPos] | 0) & 16777215) |
                  (((255 * g.buffer.f[g.fPos]) | 0) << 24);
                g = f = null;
                break;
              case 3:
                switch (c.prev[1]) {
                  case 0:
                    c.oPos += 2;
                    c.bPos += 2;
                    break;
                  case 1:
                    c.iPos += 1;
                    c.fPos += 1;
                    break;
                  case 2:
                    c.oPos += 4;
                    c.iiPos += 2;
                    c.ffPos += 1;
                    c.fPos += 1;
                    break;
                  case 3:
                    c.oPos += 1;
                    break;
                  case 4:
                    c.fPos += 6;
                    break;
                  case 5:
                    c.fPos += 4;
                    break;
                  case 6:
                    c.fPos += 3;
                    break;
                  case 7:
                    c.fPos += 4;
                    break;
                  case 8:
                    c.oPos += 3;
                    break;
                  case 9:
                    c.fPos += 4;
                    break;
                  case 10:
                    c.fPos += 5;
                    c.oPos += 1;
                    break;
                  case 12:
                    c.oPos += 4;
                    break;
                  case 14:
                    c.oPos += 2;
                    c.bPos += 2;
                    break;
                  case 15:
                    c.oPos += 4;
                    c.iiPos += 2;
                    c.ffPos += 1;
                    c.fPos += 1;
                    break;
                  case 16:
                    c.oPos += 4;
                    c.iPos += 1;
                    c.fPos += 2;
                    c.bPos += 1;
                    break;
                  case 17:
                    c.fPos += 2;
                    break;
                  case 18:
                    c.fPos += 2;
                    break;
                  case 19:
                    c.oPos += 1;
                    break;
                  case 20:
                    c.oPos += 1;
                }
                c.prev = K.BEGIN_SHADER_FILL;
                l = c;
                f = l.buffer.o[l.oPos];
                l = 0;
                g =
                  null == f || null == f.shader || null == f.shader.__bitmap
                    ? null
                    : f.shader.__bitmap.input;
                k = null;
                break;
              case 8:
                if (null != g) {
                  switch (c.prev[1]) {
                    case 0:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 1:
                      c.iPos += 1;
                      c.fPos += 1;
                      break;
                    case 2:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 3:
                      c.oPos += 1;
                      break;
                    case 4:
                      c.fPos += 6;
                      break;
                    case 5:
                      c.fPos += 4;
                      break;
                    case 6:
                      c.fPos += 3;
                      break;
                    case 7:
                      c.fPos += 4;
                      break;
                    case 8:
                      c.oPos += 3;
                      break;
                    case 9:
                      c.fPos += 4;
                      break;
                    case 10:
                      c.fPos += 5;
                      c.oPos += 1;
                      break;
                    case 12:
                      c.oPos += 4;
                      break;
                    case 14:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 15:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 16:
                      c.oPos += 4;
                      c.iPos += 1;
                      c.fPos += 2;
                      c.bPos += 1;
                      break;
                    case 17:
                      c.fPos += 2;
                      break;
                    case 18:
                      c.fPos += 2;
                      break;
                    case 19:
                      c.oPos += 1;
                      break;
                    case 20:
                      c.oPos += 1;
                  }
                  c.prev = K.DRAW_QUADS;
                  var v = c;
                  u = v.buffer.o[v.oPos];
                  v = v.buffer.o[v.oPos + 1];
                  u =
                    null != v ? v.get_length() : Math.floor(u.get_length() / 4);
                  var x = b.__getMatrix(a.__owner.__renderTransform, 1);
                  null == f || Ic.maskRender
                    ? ((v = Ic.maskRender
                        ? b.__maskShader
                        : b.__initGraphicsShader(null)),
                      b.setShader(v),
                      b.applyMatrix(x),
                      b.applyBitmapData(g, b.__allowSmoothing && n, h),
                      b.applyAlpha(a.__owner.__worldAlpha),
                      b.applyColorTransform(a.__owner.__worldColorTransform),
                      b.updateShader())
                    : ((v = b.__initShaderBuffer(f)),
                      b.__setShaderBuffer(f),
                      b.applyMatrix(x),
                      b.applyBitmapData(g, !1, h),
                      b.applyAlpha(a.__owner.__worldAlpha),
                      b.applyColorTransform(a.__owner.__worldColorTransform));
                  for (x = m + u; m < x; ) {
                    u = Math.min(x - m, d.__quadIndexBufferElements) | 0;
                    if (0 >= u) break;
                    null == f || Ic.maskRender || b.__updateShaderBuffer(l);
                    null != v.__position &&
                      d.setVertexBufferAt(
                        v.__position.index,
                        a.__quadBuffer.vertexBuffer,
                        16 * m,
                        2
                      );
                    null != v.__textureCoord &&
                      d.setVertexBufferAt(
                        v.__textureCoord.index,
                        a.__quadBuffer.vertexBuffer,
                        16 * m + 2,
                        2
                      );
                    d.drawTriangles(d.__quadIndexBuffer, 0, 2 * u);
                    l += 4 * u;
                    m += u;
                  }
                  b.__clearShader();
                }
                break;
              case 9:
                if (null != k) {
                  switch (c.prev[1]) {
                    case 0:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 1:
                      c.iPos += 1;
                      c.fPos += 1;
                      break;
                    case 2:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 3:
                      c.oPos += 1;
                      break;
                    case 4:
                      c.fPos += 6;
                      break;
                    case 5:
                      c.fPos += 4;
                      break;
                    case 6:
                      c.fPos += 3;
                      break;
                    case 7:
                      c.fPos += 4;
                      break;
                    case 8:
                      c.oPos += 3;
                      break;
                    case 9:
                      c.fPos += 4;
                      break;
                    case 10:
                      c.fPos += 5;
                      c.oPos += 1;
                      break;
                    case 12:
                      c.oPos += 4;
                      break;
                    case 14:
                      c.oPos += 2;
                      c.bPos += 2;
                      break;
                    case 15:
                      c.oPos += 4;
                      c.iiPos += 2;
                      c.ffPos += 1;
                      c.fPos += 1;
                      break;
                    case 16:
                      c.oPos += 4;
                      c.iPos += 1;
                      c.fPos += 2;
                      c.bPos += 1;
                      break;
                    case 17:
                      c.fPos += 2;
                      break;
                    case 18:
                      c.fPos += 2;
                      break;
                    case 19:
                      c.oPos += 1;
                      break;
                    case 20:
                      c.oPos += 1;
                  }
                  c.prev = K.DRAW_RECT;
                  var y = c;
                  u = y.buffer.f[y.fPos];
                  v = y.buffer.f[y.fPos + 1];
                  x = y.buffer.f[y.fPos + 2];
                  var z = y.buffer.f[y.fPos + 3];
                  y = k;
                  Ic.tempColorTransform.redOffset = (y >>> 16) & 255;
                  Ic.tempColorTransform.greenOffset = (y >>> 8) & 255;
                  Ic.tempColorTransform.blueOffset = y & 255;
                  Ic.tempColorTransform.__combine(
                    a.__owner.__worldColorTransform
                  );
                  e.identity();
                  e.scale(x, z);
                  e.tx = u;
                  e.ty = v;
                  e.concat(a.__owner.__renderTransform);
                  u = Ic.maskRender
                    ? b.__maskShader
                    : b.__initGraphicsShader(null);
                  b.setShader(u);
                  b.applyMatrix(b.__getMatrix(e, 1));
                  b.applyBitmapData(Ic.blankBitmapData, b.__allowSmoothing, h);
                  b.applyAlpha(
                    (((y >>> 24) & 255) / 255) * a.__owner.__worldAlpha
                  );
                  b.applyColorTransform(Ic.tempColorTransform);
                  b.updateShader();
                  v = Ic.blankBitmapData.getVertexBuffer(d);
                  null != u.__position &&
                    d.setVertexBufferAt(u.__position.index, v, 0, 3);
                  null != u.__textureCoord &&
                    d.setVertexBufferAt(u.__textureCoord.index, v, 3, 2);
                  u = Ic.blankBitmapData.getIndexBuffer(d);
                  d.drawTriangles(u);
                  l += 4;
                  b.__clearShader();
                }
                break;
              case 12:
                switch (c.prev[1]) {
                  case 0:
                    c.oPos += 2;
                    c.bPos += 2;
                    break;
                  case 1:
                    c.iPos += 1;
                    c.fPos += 1;
                    break;
                  case 2:
                    c.oPos += 4;
                    c.iiPos += 2;
                    c.ffPos += 1;
                    c.fPos += 1;
                    break;
                  case 3:
                    c.oPos += 1;
                    break;
                  case 4:
                    c.fPos += 6;
                    break;
                  case 5:
                    c.fPos += 4;
                    break;
                  case 6:
                    c.fPos += 3;
                    break;
                  case 7:
                    c.fPos += 4;
                    break;
                  case 8:
                    c.oPos += 3;
                    break;
                  case 9:
                    c.fPos += 4;
                    break;
                  case 10:
                    c.fPos += 5;
                    c.oPos += 1;
                    break;
                  case 12:
                    c.oPos += 4;
                    break;
                  case 14:
                    c.oPos += 2;
                    c.bPos += 2;
                    break;
                  case 15:
                    c.oPos += 4;
                    c.iiPos += 2;
                    c.ffPos += 1;
                    c.fPos += 1;
                    break;
                  case 16:
                    c.oPos += 4;
                    c.iPos += 1;
                    c.fPos += 2;
                    c.bPos += 1;
                    break;
                  case 17:
                    c.fPos += 2;
                    break;
                  case 18:
                    c.fPos += 2;
                    break;
                  case 19:
                    c.oPos += 1;
                    break;
                  case 20:
                    c.oPos += 1;
                }
                c.prev = K.DRAW_TRIANGLES;
                z = c;
                v = z.buffer.o[z.oPos + 1];
                y = z.buffer.o[z.oPos + 2];
                u = z.buffer.o[z.oPos + 3];
                x = null != v;
                z = Math.floor(z.buffer.o[z.oPos].get_length() / 2);
                v = x ? v.get_length() : z;
                z = (y = (x = null != y) && y.get_length() >= 3 * z) ? 4 : 2;
                var A = z + 2,
                  B = y ? a.__vertexBufferUVT : a.__vertexBuffer,
                  C = y ? q : p,
                  D = b.__getMatrix(a.__owner.__renderTransform, 1);
                if (null == f || Ic.maskRender) {
                  var E = Ic.maskRender
                    ? b.__maskShader
                    : b.__initGraphicsShader(null);
                  b.setShader(E);
                  b.applyMatrix(D);
                  b.applyBitmapData(g, b.__allowSmoothing && n, h);
                  b.applyAlpha(a.__owner.__worldAlpha);
                  b.applyColorTransform(a.__owner.__worldColorTransform);
                  b.updateShader();
                } else
                  (E = b.__initShaderBuffer(f)),
                    b.__setShaderBuffer(f),
                    b.applyMatrix(D),
                    b.applyBitmapData(g, !1, h),
                    b.applyAlpha(1),
                    b.applyColorTransform(null),
                    b.__updateShaderBuffer(l);
                null != E.__position &&
                  d.setVertexBufferAt(E.__position.index, B, C, y ? 4 : 2);
                null != E.__textureCoord &&
                  d.setVertexBufferAt(E.__textureCoord.index, B, C + z, 2);
                switch (u) {
                  case 0:
                    d.setCulling(0);
                    break;
                  case 2:
                    d.setCulling(1);
                }
                d.__drawTriangles(C, v);
                l += v;
                x ? (q += A * v) : (p += A * v);
                1 != u && d.setCulling(0);
                b.__clearShader();
                break;
              case 13:
                f = k = g = null;
                switch (c.prev[1]) {
                  case 0:
                    c.oPos += 2;
                    c.bPos += 2;
                    break;
                  case 1:
                    c.iPos += 1;
                    c.fPos += 1;
                    break;
                  case 2:
                    c.oPos += 4;
                    c.iiPos += 2;
                    c.ffPos += 1;
                    c.fPos += 1;
                    break;
                  case 3:
                    c.oPos += 1;
                    break;
                  case 4:
                    c.fPos += 6;
                    break;
                  case 5:
                    c.fPos += 4;
                    break;
                  case 6:
                    c.fPos += 3;
                    break;
                  case 7:
                    c.fPos += 4;
                    break;
                  case 8:
                    c.oPos += 3;
                    break;
                  case 9:
                    c.fPos += 4;
                    break;
                  case 10:
                    c.fPos += 5;
                    c.oPos += 1;
                    break;
                  case 12:
                    c.oPos += 4;
                    break;
                  case 14:
                    c.oPos += 2;
                    c.bPos += 2;
                    break;
                  case 15:
                    c.oPos += 4;
                    c.iiPos += 2;
                    c.ffPos += 1;
                    c.fPos += 1;
                    break;
                  case 16:
                    c.oPos += 4;
                    c.iPos += 1;
                    c.fPos += 2;
                    c.bPos += 1;
                    break;
                  case 17:
                    c.fPos += 2;
                    break;
                  case 18:
                    c.fPos += 2;
                    break;
                  case 19:
                    c.oPos += 1;
                    break;
                  case 20:
                    c.oPos += 1;
                }
                c.prev = u;
                break;
              case 18:
                switch (c.prev[1]) {
                  case 0:
                    c.oPos += 2;
                    c.bPos += 2;
                    break;
                  case 1:
                    c.iPos += 1;
                    c.fPos += 1;
                    break;
                  case 2:
                    c.oPos += 4;
                    c.iiPos += 2;
                    c.ffPos += 1;
                    c.fPos += 1;
                    break;
                  case 3:
                    c.oPos += 1;
                    break;
                  case 4:
                    c.fPos += 6;
                    break;
                  case 5:
                    c.fPos += 4;
                    break;
                  case 6:
                    c.fPos += 3;
                    break;
                  case 7:
                    c.fPos += 4;
                    break;
                  case 8:
                    c.oPos += 3;
                    break;
                  case 9:
                    c.fPos += 4;
                    break;
                  case 10:
                    c.fPos += 5;
                    c.oPos += 1;
                    break;
                  case 12:
                    c.oPos += 4;
                    break;
                  case 14:
                    c.oPos += 2;
                    c.bPos += 2;
                    break;
                  case 15:
                    c.oPos += 4;
                    c.iiPos += 2;
                    c.ffPos += 1;
                    c.fPos += 1;
                    break;
                  case 16:
                    c.oPos += 4;
                    c.iPos += 1;
                    c.fPos += 2;
                    c.bPos += 1;
                    break;
                  case 17:
                    c.fPos += 2;
                    break;
                  case 18:
                    c.fPos += 2;
                    break;
                  case 19:
                    c.oPos += 1;
                    break;
                  case 20:
                    c.oPos += 1;
                }
                c.prev = K.MOVE_TO;
                break;
              case 19:
                switch (c.prev[1]) {
                  case 0:
                    c.oPos += 2;
                    c.bPos += 2;
                    break;
                  case 1:
                    c.iPos += 1;
                    c.fPos += 1;
                    break;
                  case 2:
                    c.oPos += 4;
                    c.iiPos += 2;
                    c.ffPos += 1;
                    c.fPos += 1;
                    break;
                  case 3:
                    c.oPos += 1;
                    break;
                  case 4:
                    c.fPos += 6;
                    break;
                  case 5:
                    c.fPos += 4;
                    break;
                  case 6:
                    c.fPos += 3;
                    break;
                  case 7:
                    c.fPos += 4;
                    break;
                  case 8:
                    c.oPos += 3;
                    break;
                  case 9:
                    c.fPos += 4;
                    break;
                  case 10:
                    c.fPos += 5;
                    c.oPos += 1;
                    break;
                  case 12:
                    c.oPos += 4;
                    break;
                  case 14:
                    c.oPos += 2;
                    c.bPos += 2;
                    break;
                  case 15:
                    c.oPos += 4;
                    c.iiPos += 2;
                    c.ffPos += 1;
                    c.fPos += 1;
                    break;
                  case 16:
                    c.oPos += 4;
                    c.iPos += 1;
                    c.fPos += 2;
                    c.bPos += 1;
                    break;
                  case 17:
                    c.fPos += 2;
                    break;
                  case 18:
                    c.fPos += 2;
                    break;
                  case 19:
                    c.oPos += 1;
                    break;
                  case 20:
                    c.oPos += 1;
                }
                c.prev = K.OVERRIDE_BLEND_MODE;
                u = c;
                b.__setBlendMode(u.buffer.o[u.oPos]);
                break;
              default:
                switch (c.prev[1]) {
                  case 0:
                    c.oPos += 2;
                    c.bPos += 2;
                    break;
                  case 1:
                    c.iPos += 1;
                    c.fPos += 1;
                    break;
                  case 2:
                    c.oPos += 4;
                    c.iiPos += 2;
                    c.ffPos += 1;
                    c.fPos += 1;
                    break;
                  case 3:
                    c.oPos += 1;
                    break;
                  case 4:
                    c.fPos += 6;
                    break;
                  case 5:
                    c.fPos += 4;
                    break;
                  case 6:
                    c.fPos += 3;
                    break;
                  case 7:
                    c.fPos += 4;
                    break;
                  case 8:
                    c.oPos += 3;
                    break;
                  case 9:
                    c.fPos += 4;
                    break;
                  case 10:
                    c.fPos += 5;
                    c.oPos += 1;
                    break;
                  case 12:
                    c.oPos += 4;
                    break;
                  case 14:
                    c.oPos += 2;
                    c.bPos += 2;
                    break;
                  case 15:
                    c.oPos += 4;
                    c.iiPos += 2;
                    c.ffPos += 1;
                    c.fPos += 1;
                    break;
                  case 16:
                    c.oPos += 4;
                    c.iPos += 1;
                    c.fPos += 2;
                    c.bPos += 1;
                    break;
                  case 17:
                    c.fPos += 2;
                    break;
                  case 18:
                    c.fPos += 2;
                    break;
                  case 19:
                    c.oPos += 1;
                    break;
                  case 20:
                    c.oPos += 1;
                }
                c.prev = u;
            }
          }
          ya.__pool.release(e);
        }
        a.set___dirty(!1);
      }
  };
  Ic.renderMask = function (a, b) {
    Ic.maskRender = !0;
    Ic.render(a, b);
    Ic.maskRender = !1;
  };
  Ic.resizeIndexBuffer = function (a, b, c) {
    if (!b) {
      var d = b ? null : a.__triangleIndexBufferData,
        e = null;
      null == d
        ? (e = null != c ? new Uint16Array(c) : null)
        : c > d.length &&
          ((e = null != c ? new Uint16Array(c) : null), e.set(d));
      null == e || b || (a.__triangleIndexBufferData = e);
    }
  };
  Ic.resizeVertexBuffer = function (a, b, c) {
    var d = b ? a.__vertexBufferDataUVT : a.__vertexBufferData,
      e = null;
    null == d
      ? (e = null != c ? new vc(c) : null)
      : c > d.length && ((e = null != c ? new vc(c) : null), e.set(d));
    null != e &&
      (b ? (a.__vertexBufferDataUVT = e) : (a.__vertexBufferData = e));
  };
  var Bf = function (a) {
    this.byteCode = a;
    this.precisionHint = 1;
    this.__glSourceDirty = !0;
    this.__numPasses = 1;
    this.__data = wq._new(a);
  };
  p["openfl.display.Shader"] = Bf;
  Bf.__name__ = ["openfl", "display", "Shader"];
  Bf.prototype = {
    byteCode: null,
    glProgram: null,
    precisionHint: null,
    program: null,
    __alpha: null,
    __bitmap: null,
    __colorMultiplier: null,
    __colorOffset: null,
    __context: null,
    __data: null,
    __glFragmentSource: null,
    __glSourceDirty: null,
    __glVertexSource: null,
    __hasColorTransform: null,
    __inputBitmapData: null,
    __isGenerated: null,
    __matrix: null,
    __numPasses: null,
    __paramBool: null,
    __paramFloat: null,
    __paramInt: null,
    __position: null,
    __textureCoord: null,
    __texture: null,
    __textureSize: null,
    __clearUseArray: function () {
      for (var a = 0, b = this.__paramBool; a < b.length; ) {
        var c = b[a];
        ++a;
        c.__useArray = !1;
      }
      a = 0;
      for (b = this.__paramFloat; a < b.length; )
        (c = b[a]), ++a, (c.__useArray = !1);
      a = 0;
      for (b = this.__paramInt; a < b.length; )
        (c = b[a]), ++a, (c.__useArray = !1);
    },
    __createGLShader: function (a, b) {
      var c = this.__context.gl,
        d = c.createShader(b);
      c.shaderSource(d, a);
      c.compileShader(d);
      0 == c.getShaderParameter(d, c.COMPILE_STATUS) &&
        ((b =
          b == c.VERTEX_SHADER
            ? "Error compiling vertex shader"
            : "Error compiling fragment shader"),
        (b += "\n" + c.getShaderInfoLog(d)),
        mb.error(b + ("\n" + a), {
          fileName: "Shader.hx",
          lineNumber: 184,
          className: "openfl.display.Shader",
          methodName: "__createGLShader",
        }));
      return d;
    },
    __createGLProgram: function (a, b) {
      var c = this.__context.gl;
      a = this.__createGLShader(a, c.VERTEX_SHADER);
      var d = this.__createGLShader(b, c.FRAGMENT_SHADER);
      b = c.createProgram();
      for (var e = 0, f = this.__paramFloat; e < f.length; ) {
        var g = f[e];
        ++e;
        if (
          -1 < g.name.indexOf("Position") &&
          ba.startsWith(g.name, "openfl_")
        ) {
          c.bindAttribLocation(b, 0, g.name);
          break;
        }
      }
      c.attachShader(b, a);
      c.attachShader(b, d);
      c.linkProgram(b);
      0 == c.getProgramParameter(b, c.LINK_STATUS) &&
        ((c =
          "Unable to initialize the shader program\n" + c.getProgramInfoLog(b)),
        mb.error(c, {
          fileName: "Shader.hx",
          lineNumber: 224,
          className: "openfl.display.Shader",
          methodName: "__createGLProgram",
        }));
      return b;
    },
    __disable: function () {
      null != this.program && this.__disableGL();
    },
    __disableGL: function () {
      for (
        var a = this.__context.gl, b = 0, c = 0, d = this.__inputBitmapData;
        c < d.length;

      ) {
        var e = d[c];
        ++c;
        e.__disableGL(this.__context, b);
        ++b;
      }
      b = 0;
      for (c = this.__paramBool; b < c.length; )
        (d = c[b]), ++b, d.__disableGL(this.__context);
      b = 0;
      for (c = this.__paramFloat; b < c.length; )
        (d = c[b]), ++b, d.__disableGL(this.__context);
      b = 0;
      for (c = this.__paramInt; b < c.length; )
        (d = c[b]), ++b, d.__disableGL(this.__context);
      this.__context.__bindGLArrayBuffer(null);
      "opengl" == this.__context.__context.type && a.disable(a.TEXTURE_2D);
    },
    __enable: function () {
      this.__init();
      null != this.program && this.__enableGL();
    },
    __enableGL: function () {
      for (
        var a = 0, b = this.__context.gl, c = 0, d = this.__inputBitmapData;
        c < d.length;

      ) {
        var e = d[c];
        ++c;
        b.uniform1i(e.index, a);
        ++a;
      }
      "opengl" == this.__context.__context.type &&
        0 < a &&
        b.enable(b.TEXTURE_2D);
    },
    __init: function () {
      null == this.__data && (this.__data = wq._new(null));
      null == this.__glFragmentSource ||
        null == this.__glVertexSource ||
        (null != this.program && !this.__glSourceDirty) ||
        this.__initGL();
    },
    __initGL: function () {
      if (this.__glSourceDirty || null == this.__paramBool)
        (this.__glSourceDirty = !1),
          (this.program = null),
          (this.__inputBitmapData = []),
          (this.__paramBool = []),
          (this.__paramFloat = []),
          (this.__paramInt = []),
          this.__processGLData(this.get_glVertexSource(), "attribute"),
          this.__processGLData(this.get_glVertexSource(), "uniform"),
          this.__processGLData(this.get_glFragmentSource(), "uniform");
      if (null != this.__context && null == this.program) {
        var a = this.__context.gl,
          b =
            "#ifdef GL_ES\n\t\t\t\t" +
            (1 == this.precisionHint
              ? "#ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\t\t\tprecision highp float;\n\t\t\t\t#else\n\t\t\t\tprecision mediump float;\n\t\t\t\t#endif"
              : "precision lowp float;") +
            "\n\t\t\t\t#endif\n\t\t\t\t",
          c = b + this.get_glVertexSource(),
          d = b + this.get_glFragmentSource();
        b = c + d;
        var e = this.__context.__programs;
        (null != t[b] ? e.existsReserved(b) : e.h.hasOwnProperty(b))
          ? ((c = this.__context.__programs),
            (this.program = null != t[b] ? c.getReserved(b) : c.h[b]))
          : ((this.program = this.__context.createProgram(1)),
            (this.program.__glProgram = this.__createGLProgram(c, d)),
            (c = this.program),
            (d = this.__context.__programs),
            null != t[b] ? d.setReserved(b, c) : (d.h[b] = c));
        if (null != this.program) {
          this.glProgram = this.program.__glProgram;
          b = 0;
          for (c = this.__inputBitmapData; b < c.length; )
            (d = c[b]),
              ++b,
              (d.index = d.__isUniform
                ? a.getUniformLocation(this.glProgram, d.name)
                : a.getAttribLocation(this.glProgram, d.name));
          b = 0;
          for (c = this.__paramBool; b < c.length; )
            (d = c[b]),
              ++b,
              (d.index = d.__isUniform
                ? a.getUniformLocation(this.glProgram, d.name)
                : a.getAttribLocation(this.glProgram, d.name));
          b = 0;
          for (c = this.__paramFloat; b < c.length; )
            (d = c[b]),
              ++b,
              (d.index = d.__isUniform
                ? a.getUniformLocation(this.glProgram, d.name)
                : a.getAttribLocation(this.glProgram, d.name));
          b = 0;
          for (c = this.__paramInt; b < c.length; )
            (d = c[b]),
              ++b,
              (d.index = d.__isUniform
                ? a.getUniformLocation(this.glProgram, d.name)
                : a.getAttribLocation(this.glProgram, d.name));
        }
      }
    },
    __processGLData: function (a, b) {
      var c = 0,
        d;
      for (
        d =
          "uniform" == b
            ? new Ib("uniform ([A-Za-z0-9]+) ([A-Za-z0-9_]+)", "")
            : new Ib("attribute ([A-Za-z0-9]+) ([A-Za-z0-9_]+)", "");
        d.matchSub(a, c);

      ) {
        var e = d.matched(1);
        var f = d.matched(2);
        if (!ba.startsWith(f, "gl_")) {
          c = "uniform" == b;
          if (ba.startsWith(e, "sampler")) {
            e = new xq();
            e.name = f;
            e.__isUniform = c;
            this.__inputBitmapData.push(e);
            switch (f) {
              case "bitmap":
                this.__bitmap = e;
                break;
              case "openfl_Texture":
                this.__texture = e;
            }
            this.__data[f] = e;
            this.__isGenerated && (this[f] = e);
          } else if (
            !Object.prototype.hasOwnProperty.call(this.__data, f) ||
            null == V.field(this.__data, f)
          ) {
            switch (e) {
              case "bool":
                var g = 0;
                break;
              case "bvec2":
                g = 1;
                break;
              case "bvec3":
                g = 2;
                break;
              case "bvec4":
                g = 3;
                break;
              case "dvec2":
              case "vec2":
                g = 5;
                break;
              case "dvec3":
              case "vec3":
                g = 6;
                break;
              case "double":
              case "float":
                g = 4;
                break;
              case "ivec3":
              case "uvec3":
                g = 10;
                break;
              case "ivec4":
              case "uvec4":
                g = 11;
                break;
              case "mat2":
              case "mat2x2":
                g = 12;
                break;
              case "mat2x3":
                g = 13;
                break;
              case "mat2x4":
                g = 14;
                break;
              case "mat3x2":
                g = 15;
                break;
              case "mat3":
              case "mat3x3":
                g = 16;
                break;
              case "mat3x4":
                g = 17;
                break;
              case "mat4":
              case "mat4x4":
                g = 20;
                break;
              case "mat4x2":
                g = 18;
                break;
              case "mat4x3":
                g = 19;
                break;
              case "int":
              case "uint":
                g = 8;
                break;
              case "ivec2":
              case "uvec2":
                g = 9;
                break;
              case "dvec4":
              case "vec4":
                g = 7;
                break;
              default:
                g = null;
            }
            switch (g) {
              case 1:
              case 5:
              case 9:
                e = 2;
                break;
              case 3:
              case 7:
              case 11:
              case 12:
                e = 4;
                break;
              case 2:
              case 6:
              case 10:
                e = 3;
                break;
              case 16:
                e = 9;
                break;
              case 20:
                e = 16;
                break;
              default:
                e = 1;
            }
            switch (g) {
              case 12:
                var h = 2;
                break;
              case 16:
                h = 3;
                break;
              case 20:
                h = 4;
                break;
              default:
                h = 1;
            }
            switch (g) {
              case 0:
              case 1:
              case 2:
              case 3:
                var n = new Pk();
                n.set_name(f);
                n.type = g;
                n.__arrayLength = h;
                n.__isBool = !0;
                n.__isUniform = c;
                n.__length = e;
                this.__paramBool.push(n);
                "openfl_HasColorTransform" == f &&
                  (this.__hasColorTransform = n);
                this.__data[f] = n;
                this.__isGenerated && (this[f] = n);
                break;
              case 8:
              case 9:
              case 10:
              case 11:
                n = new Pk();
                n.set_name(f);
                n.type = g;
                n.__arrayLength = h;
                n.__isInt = !0;
                n.__isUniform = c;
                n.__length = e;
                this.__paramInt.push(n);
                this.__data[f] = n;
                this.__isGenerated && (this[f] = n);
                break;
              default:
                n = new Pk();
                n.set_name(f);
                n.type = g;
                n.__arrayLength = h;
                0 < h &&
                  ((g = h * h),
                  (g = null != g ? new vc(g) : null),
                  (n.__uniformMatrix = g));
                n.__isFloat = !0;
                n.__isUniform = c;
                n.__length = e;
                this.__paramFloat.push(n);
                if (ba.startsWith(f, "openfl_"))
                  switch (f) {
                    case "openfl_Alpha":
                      this.__alpha = n;
                      break;
                    case "openfl_ColorMultiplier":
                      this.__colorMultiplier = n;
                      break;
                    case "openfl_ColorOffset":
                      this.__colorOffset = n;
                      break;
                    case "openfl_Matrix":
                      this.__matrix = n;
                      break;
                    case "openfl_Position":
                      this.__position = n;
                      break;
                    case "openfl_TextureCoord":
                      this.__textureCoord = n;
                      break;
                    case "openfl_TextureSize":
                      this.__textureSize = n;
                  }
                this.__data[f] = n;
                this.__isGenerated && (this[f] = n);
            }
          }
          f = d.matchedPos();
          c = f.pos + f.len;
        }
      }
    },
    __update: function () {
      null != this.program && this.__updateGL();
    },
    __updateFromBuffer: function (a, b) {
      null != this.program && this.__updateGLFromBuffer(a, b);
    },
    __updateGL: function () {
      for (var a = 0, b = 0, c = this.__inputBitmapData; b < c.length; ) {
        var d = c[b];
        ++b;
        d.__updateGL(this.__context, a);
        ++a;
      }
      a = 0;
      for (b = this.__paramBool; a < b.length; )
        (c = b[a]), ++a, c.__updateGL(this.__context);
      a = 0;
      for (b = this.__paramFloat; a < b.length; )
        (c = b[a]), ++a, c.__updateGL(this.__context);
      a = 0;
      for (b = this.__paramInt; a < b.length; )
        (c = b[a]), ++a, c.__updateGL(this.__context);
    },
    __updateGLFromBuffer: function (a, b) {
      for (var c = 0, d, e, f, g, h, n = 0, k = a.inputCount; n < k; )
        (h = n++),
          (d = a.inputRefs[h]),
          (e = a.inputs[h]),
          (f = a.inputFilter[h]),
          (g = a.inputMipFilter[h]),
          (h = a.inputWrap[h]),
          null != e && (d.__updateGL(this.__context, c, e, f, g, h), ++c);
      c = this.__context.gl;
      0 < a.paramDataLength
        ? (null == a.paramDataBuffer && (a.paramDataBuffer = c.createBuffer()),
          this.__context.__bindGLArrayBuffer(a.paramDataBuffer),
          yb.bufferData(c, c.ARRAY_BUFFER, a.paramData, c.DYNAMIC_DRAW))
        : this.__context.__bindGLArrayBuffer(null);
      e = d = c = 0;
      f = a.paramBoolCount;
      g = a.paramFloatCount;
      n = a.paramData;
      for (var m, l = (h = null), p = null, q = 0, r = a.paramCount; q < r; ) {
        var t = q++;
        k = !1;
        if (t < f) {
          m = a.paramRefs_Bool[c];
          for (var u = 0, v = a.overrideBoolCount; u < v; ) {
            var w = u++;
            if (m.name == a.overrideBoolNames[w]) {
              h = a.overrideBoolValues[w];
              k = !0;
              break;
            }
          }
          k
            ? m.__updateGL(this.__context, h)
            : m.__updateGLFromBuffer(
                this.__context,
                n,
                a.paramPositions[t],
                a.paramLengths[t],
                b
              );
          ++c;
        } else if (t < f + g) {
          m = a.paramRefs_Float[d];
          u = 0;
          for (v = a.overrideFloatCount; u < v; )
            if (((w = u++), m.name == a.overrideFloatNames[w])) {
              l = a.overrideFloatValues[w];
              k = !0;
              break;
            }
          k
            ? m.__updateGL(this.__context, l)
            : m.__updateGLFromBuffer(
                this.__context,
                n,
                a.paramPositions[t],
                a.paramLengths[t],
                b
              );
          ++d;
        } else {
          m = a.paramRefs_Int[e];
          u = 0;
          for (v = a.overrideIntCount; u < v; )
            if (((w = u++), m.name == a.overrideIntNames[w])) {
              p = a.overrideIntValues[w];
              k = !0;
              break;
            }
          k
            ? m.__updateGL(this.__context, p)
            : m.__updateGLFromBuffer(
                this.__context,
                n,
                a.paramPositions[t],
                a.paramLengths[t],
                b
              );
          ++e;
        }
      }
    },
    get_data: function () {
      (this.__glSourceDirty || null == this.__data) && this.__init();
      return this.__data;
    },
    set_data: function (a) {
      return (this.__data = a);
    },
    get_glFragmentSource: function () {
      return this.__glFragmentSource;
    },
    set_glFragmentSource: function (a) {
      a != this.__glFragmentSource && (this.__glSourceDirty = !0);
      return (this.__glFragmentSource = a);
    },
    get_glVertexSource: function () {
      return this.__glVertexSource;
    },
    set_glVertexSource: function (a) {
      a != this.__glVertexSource && (this.__glSourceDirty = !0);
      return (this.__glVertexSource = a);
    },
    __class__: Bf,
    __properties__: {
      set_glVertexSource: "set_glVertexSource",
      get_glVertexSource: "get_glVertexSource",
      set_glFragmentSource: "set_glFragmentSource",
      get_glFragmentSource: "get_glFragmentSource",
      set_data: "set_data",
      get_data: "get_data",
    },
  };
  var Bj = function () {
    null == this.__glFragmentSource &&
      (this.__glFragmentSource =
        "varying vec2 openfl_TextureCoordv;\n\t\t\n\t\tuniform sampler2D openfl_Texture;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\t\t\t\n\t\t\tif (color.a == 0.0) {\n\t\t\t\t\n\t\t\t\tdiscard;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tgl_FragColor = color;\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}");
    null == this.__glVertexSource &&
      (this.__glVertexSource =
        "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\tvarying vec2 openfl_TextureCoordv;\n\t\t\n\t\tuniform mat4 openfl_Matrix;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\t\t\t\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\t\n\t\t}");
    Bf.call(this);
    this.__isGenerated = !0;
    this.__initGL();
  };
  p["openfl._internal.renderer.context3D.Context3DMaskShader"] = Bj;
  Bj.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "context3D",
    "Context3DMaskShader",
  ];
  Bj.__super__ = Bf;
  Bj.prototype = x(Bf.prototype, {
    openfl_Position: null,
    openfl_TextureCoord: null,
    openfl_Matrix: null,
    openfl_Texture: null,
    __class__: Bj,
  });
  var lg = function () {};
  p["openfl._internal.renderer.context3D.Context3DShape"] = lg;
  lg.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "context3D",
    "Context3DShape",
  ];
  lg.render = function (a, b) {
    if (a.__renderable && !(0 >= a.__worldAlpha)) {
      var c = a.__graphics;
      if (null != c) {
        b.__setBlendMode(a.__worldBlendMode);
        b.__pushMaskObject(a);
        Ic.render(c, b);
        if (null != c.__bitmap && c.__visible) {
          var d = b.__context3D,
            e = b.__initDisplayShader(a.__worldShader);
          b.setShader(e);
          b.applyBitmapData(c.__bitmap, b.__allowSmoothing);
          b.applyMatrix(b.__getMatrix(c.__worldTransform, 1));
          b.applyAlpha(a.__worldAlpha);
          b.applyColorTransform(a.__worldColorTransform);
          b.updateShader();
          var f = c.__bitmap.getVertexBuffer(d);
          null != e.__position &&
            d.setVertexBufferAt(e.__position.index, f, 0, 3);
          null != e.__textureCoord &&
            d.setVertexBufferAt(e.__textureCoord.index, f, 3, 2);
          c = c.__bitmap.getIndexBuffer(d);
          d.drawTriangles(c);
          b.__clearShader();
        }
        b.__popMaskObject(a);
      }
    }
  };
  lg.renderMask = function (a, b) {
    var c = a.__graphics;
    if (null != c && (Ic.renderMask(c, b), null != c.__bitmap)) {
      a = b.__context3D;
      var d = b.__maskShader;
      b.setShader(d);
      b.applyBitmapData(c.__bitmap, b.__allowSmoothing);
      b.applyMatrix(b.__getMatrix(c.__worldTransform, 1));
      b.updateShader();
      var e = c.__bitmap.getVertexBuffer(a);
      null != d.__position && a.setVertexBufferAt(d.__position.index, e, 0, 3);
      null != d.__textureCoord &&
        a.setVertexBufferAt(d.__textureCoord.index, e, 3, 2);
      c = c.__bitmap.getIndexBuffer(a);
      a.drawTriangles(c);
      b.__clearShader();
    }
  };
  var Wn = function () {
    this.backBufferEnableDepthAndStencil = !1;
    this.blendDestinationAlphaFactor = 9;
    this.blendSourceAlphaFactor = 2;
    this.blendDestinationRGBFactor = 9;
    this.blendSourceRGBFactor = 2;
    this.colorMaskAlpha =
      this.colorMaskBlue =
      this.colorMaskGreen =
      this.colorMaskRed =
        !0;
    this.culling = 3;
    this.depthCompareMode = 4;
    this.depthMask = !0;
    this.samplerStates = [];
    this.scissorRectangle = new W();
    this.stencilCompareMode = 0;
    this.stencilPass = this.stencilFail = this.stencilDepthFail = 5;
    this.stencilReadMask = 255;
    this.stencilReferenceValue = 0;
    this.stencilTriangleFace = 2;
    this.stencilWriteMask = 255;
    this.textures = [];
    this.__frontFaceGLCCW = !0;
    this.__glBlendEquation = 32774;
  };
  p["openfl._internal.renderer.context3D.Context3DState"] = Wn;
  Wn.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "context3D",
    "Context3DState",
  ];
  Wn.prototype = {
    backBufferEnableDepthAndStencil: null,
    blendDestinationAlphaFactor: null,
    blendSourceAlphaFactor: null,
    blendDestinationRGBFactor: null,
    blendSourceRGBFactor: null,
    colorMaskRed: null,
    colorMaskGreen: null,
    colorMaskBlue: null,
    colorMaskAlpha: null,
    culling: null,
    depthCompareMode: null,
    depthMask: null,
    program: null,
    renderToTexture: null,
    renderToTextureAntiAlias: null,
    renderToTextureDepthStencil: null,
    renderToTextureSurfaceSelector: null,
    samplerStates: null,
    scissorEnabled: null,
    scissorRectangle: null,
    stencilCompareMode: null,
    stencilDepthFail: null,
    stencilFail: null,
    stencilPass: null,
    stencilReadMask: null,
    stencilReferenceValue: null,
    stencilTriangleFace: null,
    stencilWriteMask: null,
    textures: null,
    shader: null,
    __currentGLArrayBuffer: null,
    __currentGLElementArrayBuffer: null,
    __currentGLFramebuffer: null,
    __currentGLTexture2D: null,
    __currentGLTextureCubeMap: null,
    __enableGLBlend: null,
    __enableGLCullFace: null,
    __enableGLDepthTest: null,
    __enableGLScissorTest: null,
    __enableGLStencilTest: null,
    __frontFaceGLCCW: null,
    __glBlendEquation: null,
    __primaryGLFramebuffer: null,
    __rttDepthGLRenderbuffer: null,
    __rttGLFramebuffer: null,
    __rttGLRenderbuffer: null,
    __rttStencilGLRenderbuffer: null,
    __class__: Wn,
  };
  var S = function () {};
  p["openfl._internal.renderer.context3D.Context3DTilemap"] = S;
  S.__name__ = [
    "openfl",
    "_internal",
    "renderer",
    "context3D",
    "Context3DTilemap",
  ];
  S.buildBuffer = function (a, b) {
    if (
      a.__renderable &&
      0 != a.__group.__tiles.length &&
      !(0 >= a.__worldAlpha)
    ) {
      S.numTiles = 0;
      S.vertexBufferData =
        null != a.__buffer ? a.__buffer.vertexBufferData : null;
      S.vertexDataPosition = 0;
      var c = W.__pool.get(),
        d = ya.__pool.get(),
        e = ya.__pool.get();
      S.dataPerVertex = 4;
      a.tileAlphaEnabled && S.dataPerVertex++;
      a.tileColorTransformEnabled && (S.dataPerVertex += 8);
      S.buildBufferTileContainer(
        a,
        a.__group,
        b,
        e,
        a.__tileset,
        a.tileAlphaEnabled,
        a.__worldAlpha,
        a.tileColorTransformEnabled,
        a.__worldColorTransform,
        null,
        c,
        d
      );
      W.__pool.release(c);
      ya.__pool.release(d);
      ya.__pool.release(e);
    }
  };
  S.buildBufferTileContainer = function (a, b, c, d, e, f, g, h, n, k, m, l) {
    var p = ya.__pool.get(),
      q = c.__roundPixels,
      r = b.__tiles;
    S.resizeBuffer(a, S.numTiles + b.__length);
    for (
      var t,
        u,
        v,
        w = null,
        x,
        y,
        G,
        z,
        A,
        B,
        C,
        D,
        E,
        F,
        I,
        H = f ? 5 : 4,
        K = 0;
      K < r.length;

    )
      if (
        ((z = r[K]),
        ++K,
        p.setTo(1, 0, 0, 1, -z.get_originX(), -z.get_originY()),
        p.concat(z.get_matrix()),
        p.concat(d),
        q && ((p.tx = Math.round(p.tx)), (p.ty = Math.round(p.ty))),
        (t = null != z.get_tileset() ? z.get_tileset() : e),
        (u = z.get_alpha() * g),
        (v = z.get_visible()),
        (z.__dirty = !1),
        v && !(0 >= u))
      )
        if (
          (h &&
            (null != z.get_colorTransform()
              ? null == n
                ? (w = z.get_colorTransform())
                : (null == S.cacheColorTransform &&
                    (S.cacheColorTransform = new sc()),
                  (w = S.cacheColorTransform),
                  (w.redMultiplier =
                    n.redMultiplier * z.get_colorTransform().redMultiplier),
                  (w.greenMultiplier =
                    n.greenMultiplier * z.get_colorTransform().greenMultiplier),
                  (w.blueMultiplier =
                    n.blueMultiplier * z.get_colorTransform().blueMultiplier),
                  (w.alphaMultiplier =
                    n.alphaMultiplier * z.get_colorTransform().alphaMultiplier),
                  (w.redOffset =
                    n.redOffset + z.get_colorTransform().redOffset),
                  (w.greenOffset =
                    n.greenOffset + z.get_colorTransform().greenOffset),
                  (w.blueOffset =
                    n.blueOffset + z.get_colorTransform().blueOffset),
                  (w.alphaOffset =
                    n.alphaOffset + z.get_colorTransform().alphaOffset))
              : (w = n)),
          f || (u = 1),
          0 < z.__length)
        )
          S.buildBufferTileContainer(a, z, c, p, t, f, u, h, w, k, m, l);
        else if (
          null != t &&
          ((x = z.get_id()), (v = t.__bitmapData), null != v)
        ) {
          if (-1 == x) {
            y = z.__rect;
            if (null == y || 0 >= y.width || 0 >= y.height) continue;
            t = y.x / v.width;
            z = y.y / v.height;
            x = y.get_right() / v.width;
            A = y.get_bottom() / v.height;
          } else {
            v = t.__data[x];
            if (null == v) continue;
            m.setTo(v.x, v.y, v.width, v.height);
            y = m;
            t = v.__uvX;
            z = v.__uvY;
            x = v.__uvWidth;
            A = v.__uvHeight;
          }
          v = y.width;
          G = y.height;
          y = 0 * p.a + 0 * p.c + p.tx;
          B = 0 * p.b + 0 * p.d + p.ty;
          C = v * p.a + 0 * p.c + p.tx;
          D = v * p.b + 0 * p.d + p.ty;
          E = 0 * p.a + G * p.c + p.tx;
          F = 0 * p.b + G * p.d + p.ty;
          I = v * p.a + G * p.c + p.tx;
          G = v * p.b + G * p.d + p.ty;
          v = S.vertexDataPosition;
          S.vertexBufferData[v] = y;
          S.vertexBufferData[v + 1] = B;
          S.vertexBufferData[v + 2] = t;
          S.vertexBufferData[v + 3] = z;
          S.vertexBufferData[v + S.dataPerVertex] = C;
          S.vertexBufferData[v + S.dataPerVertex + 1] = D;
          S.vertexBufferData[v + S.dataPerVertex + 2] = x;
          S.vertexBufferData[v + S.dataPerVertex + 3] = z;
          S.vertexBufferData[v + 2 * S.dataPerVertex] = E;
          S.vertexBufferData[v + 2 * S.dataPerVertex + 1] = F;
          S.vertexBufferData[v + 2 * S.dataPerVertex + 2] = t;
          S.vertexBufferData[v + 2 * S.dataPerVertex + 3] = A;
          S.vertexBufferData[v + 3 * S.dataPerVertex] = I;
          S.vertexBufferData[v + 3 * S.dataPerVertex + 1] = G;
          S.vertexBufferData[v + 3 * S.dataPerVertex + 2] = x;
          S.vertexBufferData[v + 3 * S.dataPerVertex + 3] = A;
          if (f)
            for (t = 0; 4 > t; )
              (z = t++), (S.vertexBufferData[v + S.dataPerVertex * z + 4] = u);
          if (h)
            if (null != w)
              for (u = 0; 4 > u; )
                (t = u++),
                  (S.vertexBufferData[v + S.dataPerVertex * t + H] =
                    w.redMultiplier),
                  (S.vertexBufferData[v + S.dataPerVertex * t + H + 1] =
                    w.greenMultiplier),
                  (S.vertexBufferData[v + S.dataPerVertex * t + H + 2] =
                    w.blueMultiplier),
                  (S.vertexBufferData[v + S.dataPerVertex * t + H + 3] =
                    w.alphaMultiplier),
                  (S.vertexBufferData[v + S.dataPerVertex * t + H + 4] =
                    w.redOffset),
                  (S.vertexBufferData[v + S.dataPerVertex * t + H + 5] =
                    w.greenOffset),
                  (S.vertexBufferData[v + S.dataPerVertex * t + H + 6] =
                    w.blueOffset),
                  (S.vertexBufferData[v + S.dataPerVertex * t + H + 7] =
                    w.alphaOffset);
            else
              for (u = 0; 4 > u; )
                (t = u++),
                  (S.vertexBufferData[v + S.dataPerVertex * t + H] = 1),
                  (S.vertexBufferData[v + S.dataPerVertex * t + H + 1] = 1),
                  (S.vertexBufferData[v + S.dataPerVertex * t + H + 2] = 1),
                  (S.vertexBufferData[v + S.dataPerVertex * t + H + 3] = 1),
                  (S.vertexBufferData[v + S.dataPerVertex * t + H + 4] = 0),
                  (S.vertexBufferData[v + S.dataPerVertex * t + H + 5] = 0),
                  (S.vertexBufferData[v + S.dataPerVertex * t + H + 6] = 0),
                  (S.vertexBufferData[v + S.dataPerVertex * t + H + 7] = 0);
          S.vertexDataPosition += 4 * S.dataPerVertex;
        }
    b.__dirty = !1;
    a.__buffer.flushVertexBufferData();
    ya.__pool.release(p);
  };
  S.flush = function (a, b, c) {
    null == S.currentShader && (S.currentShader = b.__defaultDisplayShader);
    if (
      S.bufferPosition > S.lastFlushedPosition &&
      null != S.currentBitmapData &&
      null != S.currentShader
    ) {
      var d = b.__initDisplayShader(S.currentShader);
      b.setShader(d);
      b.applyBitmapData(S.currentBitmapData, b.__allowSmoothing && a.smoothing);
      b.applyMatrix(b.__getMatrix(a.__renderTransform, 1));
      a.tileAlphaEnabled ? b.useAlphaArray() : b.applyAlpha(a.__worldAlpha);
      a.tileBlendModeEnabled && b.__setBlendMode(c);
      a.tileColorTransformEnabled
        ? (b.applyHasColorTransform(!0), b.useColorTransformArray())
        : b.applyColorTransform(a.__worldColorTransform);
      b.updateShader();
      c = a.__buffer.vertexBuffer;
      null != d.__position &&
        S.context.setVertexBufferAt(d.__position.index, c, 0, 2);
      null != d.__textureCoord &&
        S.context.setVertexBufferAt(d.__textureCoord.index, c, 2, 2);
      a.tileAlphaEnabled &&
        null != d.__alpha &&
        S.context.setVertexBufferAt(d.__alpha.index, c, 4, 1);
      if (a.tileColorTransformEnabled) {
        var e = a.tileAlphaEnabled ? 5 : 4;
        null != d.__colorMultiplier &&
          S.context.setVertexBufferAt(d.__colorMultiplier.index, c, e, 4);
        null != d.__colorOffset &&
          S.context.setVertexBufferAt(d.__colorOffset.index, c, e + 4, 4);
      }
      for (; S.lastFlushedPosition < S.bufferPosition; ) {
        c =
          Math.min(
            S.bufferPosition - S.lastFlushedPosition,
            S.context.__quadIndexBufferElements
          ) | 0;
        if (0 >= c) break;
        null != d.__position &&
          S.context.setVertexBufferAt(
            d.__position.index,
            a.__buffer.vertexBuffer,
            16 * S.lastFlushedPosition,
            2
          );
        null != d.__textureCoord &&
          S.context.setVertexBufferAt(
            d.__textureCoord.index,
            a.__buffer.vertexBuffer,
            16 * S.lastFlushedPosition + 2,
            2
          );
        S.context.drawTriangles(S.context.__quadIndexBuffer, 0, 2 * c);
        S.lastFlushedPosition += c;
      }
      b.__clearShader();
    }
    S.lastUsedBitmapData = S.currentBitmapData;
    S.lastUsedShader = S.currentShader;
  };
  S.render = function (a, b) {
    if (
      a.__renderable &&
      !(0 >= a.__worldAlpha) &&
      ((S.context = b.__context3D), S.buildBuffer(a, b), 0 != S.numTiles)
    ) {
      S.bufferPosition = 0;
      S.lastFlushedPosition = 0;
      S.lastUsedBitmapData = null;
      S.lastUsedShader = null;
      S.currentBitmapData = null;
      S.currentShader = null;
      S.currentBlendMode = a.__worldBlendMode;
      a.tileBlendModeEnabled || b.__setBlendMode(S.currentBlendMode);
      b.__pushMaskObject(a);
      var c = W.__pool.get();
      c.setTo(0, 0, a.__width, a.__height);
      b.__pushMaskRect(c, a.__renderTransform);
      S.renderTileContainer(
        a,
        b,
        a.__group,
        a.__worldShader,
        a.__tileset,
        a.__worldAlpha,
        a.tileBlendModeEnabled,
        S.currentBlendMode,
        null
      );
      S.flush(a, b, S.currentBlendMode);
      b.__popMaskRect();
      b.__popMaskObject(a);
      W.__pool.release(c);
    }
  };
  S.renderTileContainer = function (a, b, c, d, e, f, g, h, n) {
    c = c.__tiles;
    for (var k, m, l, p = null, q, r = 0; r < c.length; ) {
      var t = c[r];
      ++r;
      k = null != t.get_tileset() ? t.get_tileset() : e;
      m = t.get_alpha() * f;
      if ((l = t.get_visible()) && !(0 >= m))
        if (
          ((l = null != t.get_shader() ? t.get_shader() : d),
          g && (p = null != t.__blendMode ? t.__blendMode : h),
          0 < t.__length)
        )
          S.renderTileContainer(a, b, t, l, k, m, g, p, n);
        else if (
          null != k &&
          ((q = t.get_id()), (m = k.__bitmapData), null != m)
        ) {
          if (-1 == q) {
            if (((k = t.__rect), null == k || 0 >= k.width || 0 >= k.height))
              continue;
          } else if (((k = k.__data[q]), null == k)) continue;
          ((l != S.currentShader && null != S.currentShader) ||
            (m != S.currentBitmapData && null != S.currentBitmapData) ||
            S.currentBlendMode != p) &&
            S.flush(a, b, S.currentBlendMode);
          S.currentBitmapData = m;
          S.currentShader = l;
          S.currentBlendMode = p;
          S.bufferPosition++;
        }
    }
  };
  S.renderMask = function (a, b) {};
  S.resizeBuffer = function (a, b) {
    S.numTiles = b;
    null == a.__buffer
      ? (a.__buffer = new Ii(S.context, fg.QUADS, S.numTiles, S.dataPerVertex))
      : a.__buffer.resize(S.numTiles, S.dataPerVertex);
    S.vertexBufferData = a.__buffer.vertexBufferData;
  };
  var Sd = function () {};
  p["openfl._internal.renderer.dom.DOMBitmap"] = Sd;
  Sd.__name__ = ["openfl", "_internal", "renderer", "dom", "DOMBitmap"];
  Sd.clear = function (a, b) {
    null != a.__image &&
      (b.element.removeChild(a.__image),
      (a.__image = null),
      (a.__style = null));
    null != a.__canvas &&
      (b.element.removeChild(a.__canvas),
      (a.__canvas = null),
      (a.__style = null));
  };
  Sd.render = function (a, b) {
    null != a.stage &&
    a.__worldVisible &&
    a.__renderable &&
    null != a.__bitmapData &&
    a.__bitmapData.__isValid &&
    a.__bitmapData.readable
      ? (b.__pushMaskObject(a),
        null != a.__bitmapData.image.buffer.__srcImage
          ? Sd.renderImage(a, b)
          : Sd.renderCanvas(a, b),
        b.__popMaskObject(a))
      : Sd.clear(a, b);
  };
  Sd.renderCanvas = function (a, b) {
    null != a.__image && (b.element.removeChild(a.__image), (a.__image = null));
    null == a.__canvas &&
      ((a.__canvas = window.document.createElement("canvas")),
      (a.__context = a.__canvas.getContext("2d")),
      (a.__imageVersion = -1),
      (b.__allowSmoothing && a.smoothing) ||
        (a.__context.imageSmoothingEnabled = !1),
      b.__initializeElement(a, a.__canvas));
    a.__imageVersion != a.__bitmapData.image.version &&
      (pa.convertToCanvas(a.__bitmapData.image),
      (a.__canvas.width = a.__bitmapData.width + 1),
      (a.__canvas.width = a.__bitmapData.width),
      (a.__canvas.height = a.__bitmapData.height),
      a.__context.drawImage(a.__bitmapData.image.buffer.__srcCanvas, 0, 0),
      (a.__imageVersion = a.__bitmapData.image.version));
    b.__updateClip(a);
    b.__applyStyle(a, !0, !0, !0);
  };
  Sd.renderImage = function (a, b) {
    null != a.__canvas &&
      (b.element.removeChild(a.__canvas), (a.__canvas = null));
    null == a.__image &&
      ((a.__image = window.document.createElement("img")),
      (a.__image.crossOrigin = "Anonymous"),
      (a.__image.src = a.__bitmapData.image.buffer.__srcImage.src),
      b.__initializeElement(a, a.__image));
    b.__updateClip(a);
    b.__applyStyle(a, !0, !0, !0);
  };
  var Fo = function () {};
  p["openfl._internal.renderer.dom.DOMDisplayObject"] = Fo;
  Fo.__name__ = ["openfl", "_internal", "renderer", "dom", "DOMDisplayObject"];
  Fo.clear = function (a, b) {
    Df.clear(a, b);
  };
  Fo.render = function (a, b) {
    null != a.opaqueBackground &&
      !a.__isCacheBitmapRender &&
      0 < a.get_width() &&
      a.get_height();
    var c = a.__graphics;
    if (null != a.stage && a.__worldVisible && a.__renderable && null != c) {
      w.render(c, b.__canvasRenderer);
      if (c.__dirty || a.__worldAlphaChanged || a.__canvas != c.__canvas)
        null != c.__canvas
          ? a.__canvas != c.__canvas &&
            (null != a.__canvas && b.element.removeChild(a.__canvas),
            (a.__canvas = c.__canvas),
            (a.__context = c.__context),
            b.__initializeElement(a, a.__canvas))
          : Df.clear(a, b);
      if (null != a.__canvas) {
        b.__pushMaskObject(a);
        var d = a.__renderTransform;
        a.__renderTransform = c.__worldTransform;
        c.__transformDirty &&
          ((c.__transformDirty = !1), (a.__renderTransformChanged = !0));
        b.__updateClip(a);
        b.__applyStyle(a, !0, !0, !0);
        a.__renderTransform = d;
        b.__popMaskObject(a);
      }
    } else Df.clear(a, b);
  };
  var Df = function () {};
  p["openfl._internal.renderer.dom.DOMShape"] = Df;
  Df.__name__ = ["openfl", "_internal", "renderer", "dom", "DOMShape"];
  Df.clear = function (a, b) {
    null != a.__canvas &&
      (b.element.removeChild(a.__canvas),
      (a.__canvas = null),
      (a.__style = null));
  };
  Df.render = function (a, b) {
    var c = a.__graphics;
    if (null != a.stage && a.__worldVisible && a.__renderable && null != c) {
      w.render(c, b.__canvasRenderer);
      if (c.__dirty || a.__worldAlphaChanged || a.__canvas != c.__canvas)
        null != c.__canvas
          ? a.__canvas != c.__canvas &&
            (null != a.__canvas && b.element.removeChild(a.__canvas),
            (a.__canvas = c.__canvas),
            (a.__context = c.__context),
            b.__initializeElement(a, a.__canvas))
          : Df.clear(a, b);
      if (null != a.__canvas) {
        b.__pushMaskObject(a);
        var d = a.__renderTransform;
        a.__renderTransform = c.__worldTransform;
        c.__transformDirty &&
          ((c.__transformDirty = !1), (a.__renderTransformChanged = !0));
        b.__updateClip(a);
        b.__applyStyle(a, !0, !0, !0);
        a.__renderTransform = d;
        b.__popMaskObject(a);
      }
    } else Df.clear(a, b);
  };
  var kc = function () {};
  p["openfl._internal.renderer.dom.DOMTextField"] = kc;
  kc.__name__ = ["openfl", "_internal", "renderer", "dom", "DOMTextField"];
  kc.clear = function (a, b) {
    null != a.__div &&
      (b.element.removeChild(a.__div), (a.__div = null), (a.__style = null));
  };
  kc.measureText = function (a) {
    var b = a.__textEngine,
      c = a.__div;
    null == c &&
      ((c = window.document.createElement("div")),
      (c.innerHTML = b.text.replace(/\n/g, "<br>")),
      c.style.setProperty("font", Lb.getFont(a.__textFormat), null),
      c.style.setProperty("pointer-events", "none", null),
      (c.style.position = "absolute"),
      (c.style.top = "110%"),
      window.document.body.appendChild(c));
    b.__measuredWidth = c.clientWidth;
    null == a.__div && (c.style.width = P.string(b.width - 4) + "px");
    b.__measuredHeight = c.clientHeight;
    null == a.__div && window.document.body.removeChild(c);
  };
  kc.render = function (a, b) {
    var c = a.__textEngine;
    if (null != a.stage && a.__worldVisible && a.__renderable) {
      if (a.__dirty || a.__renderTransformChanged || null == a.__div)
        if ("" != c.text || c.background || c.border || 1 == c.type) {
          null == a.__div &&
            ((a.__div = window.document.createElement("div")),
            b.__initializeElement(a, a.__div),
            a.__style.setProperty("outline", "none", null),
            a.__div.addEventListener(
              "input",
              function (b) {
                b.preventDefault();
                a.get_htmlText() != a.__div.innerHTML &&
                  (a.set_htmlText(a.__div.innerHTML), (a.__dirty = !1));
              },
              !0
            ));
          c.wordWrap
            ? a.__style.setProperty("word-wrap", "break-word", null)
            : a.__style.setProperty("white-space", "nowrap", null);
          a.__style.setProperty("overflow", "hidden", null);
          c.selectable
            ? (a.__style.setProperty("cursor", "text", null),
              a.__style.setProperty("-webkit-user-select", "text", null),
              a.__style.setProperty("-moz-user-select", "text", null),
              a.__style.setProperty("-ms-user-select", "text", null),
              a.__style.setProperty("-o-user-select", "text", null))
            : a.__style.setProperty("cursor", "inherit", null);
          a.__div.contentEditable = 1 == c.type;
          var d = a.__style;
          c.background
            ? d.setProperty(
                "background-color",
                "#" + ba.hex(c.backgroundColor & 16777215, 6),
                null
              )
            : d.removeProperty("background-color");
          var e = c.width,
            f = c.height,
            g = 1,
            h = a.__textFormat.size,
            n = h,
            k = a.__renderTransform;
          if (1 != k.a || 1 != k.d)
            k.a == k.d
              ? ((g = k.a), (k.a = k.d = 1))
              : k.a > k.d
              ? ((g = k.a), (k.d /= k.a), (k.a = 1))
              : ((g = k.d), (k.a /= k.d), (k.d = 1)),
              (n *= g),
              (e = Math.ceil(e * g)),
              (f = Math.ceil(f * g));
          a.__textFormat.size = n;
          k = c.text;
          var m = 0;
          if (a.__isHTML) {
            for (var l = k; kc.__regexFont.match(l); ) {
              l = kc.__regexFont.matched(0);
              var p = "";
              kc.__regexFace.match(l) &&
                (p +=
                  "font-family:'" +
                  kc.__getAttributeMatch(kc.__regexFace) +
                  "';");
              kc.__regexColor.match(l) &&
                (p +=
                  "color:#" + kc.__getAttributeMatch(kc.__regexColor) + ";");
              if (kc.__regexSize.match(l)) {
                m = kc.__getAttributeMatch(kc.__regexSize);
                var q = Q.cca(m, 0);
                m = parseFloat(m) * g;
                p += "font-size:" + (43 == q || 45 == q ? n + m : m) + "px;";
              }
              k = ba.replace(k, l, "<span style='" + p + "'>");
              l = kc.__regexFont.matchedRight();
            }
            k = k.replace(kc.__regexCloseFont.r, "</span>");
          } else k = ba.htmlEscape(k);
          k = ba.replace(
            k,
            "<p ",
            "<p style='margin-top:0; margin-bottom:0;' "
          );
          g = a.__textFormat.leading;
          a.__textFormat.leading += m | 0;
          n = k.replace(/\r\n/g, "<br>");
          a.__div.innerHTML = n;
          n = a.__div.innerHTML.replace(/\n/g, "<br>");
          a.__div.innerHTML = n;
          n = a.__div.innerHTML.replace(/\r/g, "<br>");
          a.__div.innerHTML = n;
          d.setProperty("font", Lb.getFont(a.__textFormat), null);
          a.__textFormat.size = h;
          a.__textFormat.leading = g;
          d.setProperty("top", "3px", null);
          c.border
            ? (d.setProperty(
                "border",
                "solid 1px #" + ba.hex(c.borderColor & 16777215, 6),
                null
              ),
              a.__renderTransform.translate(-1, -1),
              (a.__renderTransformChanged = !0),
              (a.__transformDirty = !0))
            : "" != d.border &&
              (d.removeProperty("border"), (a.__renderTransformChanged = !0));
          d.setProperty(
            "color",
            "#" + ba.hex(a.__textFormat.color & 16777215, 6),
            null
          );
          d.setProperty("width", e + "px", null);
          d.setProperty("height", f + "px", null);
          switch (a.__textFormat.align) {
            case 0:
              d.setProperty("text-align", "center", null);
              break;
            case 4:
              d.setProperty("text-align", "right", null);
              break;
            default:
              d.setProperty("text-align", "left", null);
          }
          a.__dirty = !1;
        } else
          null != a.__div && (b.element.removeChild(a.__div), (a.__div = null));
      null != a.__div &&
        ((c = b.__roundPixels),
        (b.__roundPixels = !0),
        b.__updateClip(a),
        b.__applyStyle(a, !0, !0, !0),
        (b.__roundPixels = c));
    } else kc.clear(a, b);
  };
  kc.__getAttributeMatch = function (a) {
    return null != a.matched(2) ? a.matched(2) : a.matched(3);
  };
  var Qk = function () {};
  p["openfl._internal.renderer.dom.DOMTilemap"] = Qk;
  Qk.__name__ = ["openfl", "_internal", "renderer", "dom", "DOMTilemap"];
  Qk.clear = function (a, b) {
    null != a.__canvas &&
      (b.element.removeChild(a.__canvas),
      (a.__canvas = null),
      (a.__style = null));
  };
  Qk.render = function (a, b) {
    if (
      null != a.stage &&
      a.__worldVisible &&
      a.__renderable &&
      0 < a.__group.__tiles.length
    ) {
      null == a.__canvas &&
        ((a.__canvas = window.document.createElement("canvas")),
        (a.__context = a.__canvas.getContext("2d")),
        b.__initializeElement(a, a.__canvas));
      a.__canvas.width = a.__width;
      a.__canvas.height = a.__height;
      b.__canvasRenderer.context = a.__context;
      var c = b.__canvasRenderer;
      if (a.__renderable && 0 != a.__group.__tiles.length) {
        var d = c.__getAlpha(a.__worldAlpha);
        if (!(0 >= d)) {
          var e = c.context;
          c.__setBlendMode(a.__worldBlendMode);
          c.__pushMaskObject(a);
          var f = W.__pool.get();
          f.setTo(0, 0, a.__width, a.__height);
          c.__pushMaskRect(f, a.__renderTransform);
          (c.__allowSmoothing && a.smoothing) || (e.imageSmoothingEnabled = !1);
          Hi.renderTileContainer(
            a.__group,
            c,
            a.__renderTransform,
            a.__tileset,
            c.__allowSmoothing && a.smoothing,
            a.tileAlphaEnabled,
            d,
            a.tileBlendModeEnabled,
            a.__worldBlendMode,
            null,
            null,
            f
          );
          (c.__allowSmoothing && a.smoothing) || (e.imageSmoothingEnabled = !0);
          c.__popMaskRect();
          c.__popMaskObject(a);
          W.__pool.release(f);
        }
      }
      b.__canvasRenderer.context = null;
      b.__updateClip(a);
      b.__applyStyle(a, !0, !1, !0);
    } else Qk.clear(a, b);
  };
  var Ki = function () {};
  p["openfl._internal.renderer.flash.FlashRenderer"] = Ki;
  Ki.__name__ = ["openfl", "_internal", "renderer", "flash", "FlashRenderer"];
  Ki.register = function (a) {
    null == Ki.instances &&
      ((Ki.instances = te.toObjectMap(null, !0)),
      wa
        .get_current()
        .stage.addEventListener("enterFrame", Ki.render, !1, -2147483648));
    Ki.instances.set(a, !0);
  };
  Ki.render = function (a) {
    for (a = Ki.instances.keys(); a.hasNext(); ) a.next().__renderFlash();
  };
  var nt = function () {};
  p["openfl._internal.renderer.flash.IDisplayObject"] = nt;
  nt.__name__ = ["openfl", "_internal", "renderer", "flash", "IDisplayObject"];
  nt.prototype = { __renderFlash: null, __class__: nt };
  var Dj = function () {};
  p["openfl._internal.renderer.flash.FlashTilemap"] = Dj;
  Dj.__name__ = ["openfl", "_internal", "renderer", "flash", "FlashTilemap"];
  Dj.render = function (a) {};
  Dj.renderTileContainer = function (a, b, c, d, e, f, g, h, n, k, m, l) {};
  var gf = function () {};
  p["openfl._internal.symbols.SWFSymbol"] = gf;
  gf.__name__ = ["openfl", "_internal", "symbols", "SWFSymbol"];
  gf.prototype = {
    className: null,
    id: null,
    __createObject: function (a) {
      return null;
    },
    __class__: gf,
  };
  var bh = function () {};
  p["openfl._internal.symbols.BitmapSymbol"] = bh;
  bh.__name__ = ["openfl", "_internal", "symbols", "BitmapSymbol"];
  bh.__super__ = gf;
  bh.prototype = x(gf.prototype, {
    alpha: null,
    path: null,
    smooth: null,
    __createObject: function (a) {
      return new ic(
        sa.fromImage(a.library.getImage(this.path)),
        1,
        0 != this.smooth
      );
    },
    __class__: bh,
  });
  var yq = function () {};
  p["openfl._internal.symbols.ButtonSymbol"] = yq;
  yq.__name__ = ["openfl", "_internal", "symbols", "ButtonSymbol"];
  yq.__super__ = gf;
  yq.prototype = x(gf.prototype, {
    downState: null,
    hitState: null,
    overState: null,
    upState: null,
    __createObject: function (a) {
      var b = null;
      wg.__initSWF = a;
      wg.__initSymbol = this;
      null != this.className &&
        ((a = qa.resolveClass(this.className)),
        null != a && (b = qa.createInstance(a, [])));
      null == b && (b = new wg());
      return b;
    },
    __class__: yq,
  });
  var zq = function () {};
  p["openfl._internal.symbols.DynamicTextSymbol"] = zq;
  zq.__name__ = ["openfl", "_internal", "symbols", "DynamicTextSymbol"];
  zq.__super__ = gf;
  zq.prototype = x(gf.prototype, {
    align: null,
    border: null,
    color: null,
    fontHeight: null,
    fontID: null,
    fontName: null,
    height: null,
    html: null,
    indent: null,
    input: null,
    leading: null,
    leftMargin: null,
    multiline: null,
    password: null,
    rightMargin: null,
    selectable: null,
    text: null,
    width: null,
    wordWrap: null,
    x: null,
    y: null,
    __createObject: function (a) {
      var b = new De();
      b.__fromSymbol(a, this);
      return b;
    },
    __class__: zq,
  });
  var Aq = function () {};
  p["openfl._internal.symbols.FontSymbol"] = Aq;
  Aq.__name__ = ["openfl", "_internal", "symbols", "FontSymbol"];
  Aq.__super__ = gf;
  Aq.prototype = x(gf.prototype, {
    advances: null,
    ascent: null,
    bold: null,
    codes: null,
    descent: null,
    glyphs: null,
    italic: null,
    leading: null,
    name: null,
    __class__: Aq,
  });
  var Bq = function () {};
  p["openfl._internal.symbols.ShapeSymbol"] = Bq;
  Bq.__name__ = ["openfl", "_internal", "symbols", "ShapeSymbol"];
  Bq.__super__ = gf;
  Bq.prototype = x(gf.prototype, {
    commands: null,
    rendered: null,
    __createObject: function (a) {
      var b = new Ye(),
        c = b.get_graphics();
      if (null != this.rendered)
        return c.copyFrom(this.rendered.get_graphics()), b;
      for (var d = 0, e = this.commands; d < e.length; ) {
        var f = e[d];
        ++d;
        switch (f[1]) {
          case 0:
            var g = f[5],
              h = f[4],
              n = f[3];
            f = a.symbols.get(f[2]);
            f = a.library.getImage(f.path);
            null != f && c.beginBitmapFill(sa.fromImage(f), n, h, g);
            break;
          case 1:
            c.beginFill(f[2], f[3]);
            break;
          case 2:
            c.beginGradientFill(f[2], f[3], f[4], f[5], f[6], f[7], f[8], f[9]);
            break;
          case 3:
            c.curveTo(f[2], f[3], f[4], f[5]);
            break;
          case 4:
            c.endFill();
            break;
          case 5:
            g = f[9];
            h = f[8];
            n = f[7];
            var k = f[6],
              m = f[5],
              l = f[4],
              p = f[3];
            f = f[2];
            null != f ? c.lineStyle(f, p, l, m, k, n, h, g) : c.lineStyle();
            break;
          case 6:
            c.lineTo(f[2], f[3]);
            break;
          case 7:
            c.moveTo(f[2], f[3]);
        }
      }
      this.commands = null;
      this.rendered = new Ye();
      this.rendered.get_graphics().copyFrom(b.get_graphics());
      return b;
    },
    __class__: Bq,
  });
  var Mk = function () {
    this.frames = [];
  };
  p["openfl._internal.symbols.SpriteSymbol"] = Mk;
  Mk.__name__ = ["openfl", "_internal", "symbols", "SpriteSymbol"];
  Mk.__super__ = gf;
  Mk.prototype = x(gf.prototype, {
    baseClassName: null,
    frames: null,
    __createObject: function (a) {
      ef.__initSWF = a;
      ef.__initSymbol = this;
      a = null;
      null != this.className && (a = qa.resolveClass(this.className));
      null == a &&
        null != this.baseClassName &&
        (a = qa.resolveClass(this.baseClassName));
      return null != a ? qa.createInstance(a, []) : new ef();
    },
    __class__: Mk,
  });
  var Cq = function () {};
  p["openfl._internal.symbols.StaticTextSymbol"] = Cq;
  Cq.__name__ = ["openfl", "_internal", "symbols", "StaticTextSymbol"];
  Cq.__super__ = gf;
  Cq.prototype = x(gf.prototype, {
    matrix: null,
    records: null,
    rendered: null,
    __createObject: function (a) {
      var b = new Rk(),
        c = b.__graphics;
      if (null != this.rendered)
        return (
          (b.text = this.rendered.text), c.copyFrom(this.rendered.__graphics), b
        );
      var d = "";
      if (null != this.records)
        for (
          var e = null,
            f = 16777215,
            g = this.matrix.tx,
            h = this.matrix.ty,
            n,
            k,
            m = 0,
            l = this.records;
          m < l.length;

        ) {
          var p = l[m];
          ++m;
          null != p.fontID && (e = a.symbols.h[p.fontID]);
          null != p.offsetX && (g = this.matrix.tx + 0.05 * p.offsetX);
          null != p.offsetY && (h = this.matrix.ty + 0.05 * p.offsetY);
          null != p.color && (f = p.color);
          if (null != e) {
            n = (p.fontHeight / 1024) * 0.05;
            for (var q = 0, r = p.glyphs.length; q < r; ) {
              var t = q++;
              k = p.glyphs[t];
              d += String.fromCharCode(e.codes[k]);
              var u = 0;
              for (k = e.glyphs[k]; u < k.length; ) {
                var v = k[u];
                ++u;
                switch (v[1]) {
                  case 1:
                    c.beginFill(f & 16777215, ((f >> 24) & 255) / 255);
                    break;
                  case 3:
                    c.curveTo(
                      v[2] * n + g,
                      v[3] * n + h,
                      v[4] * n + g,
                      v[5] * n + h
                    );
                    break;
                  case 4:
                    c.endFill();
                    break;
                  case 5:
                    var w = v[9],
                      x = v[8],
                      y = v[7],
                      z = v[6],
                      A = v[5],
                      B = v[4],
                      C = v[3];
                    v = v[2];
                    null != v
                      ? c.lineStyle(v, C, B, A, z, y, x, w)
                      : c.lineStyle();
                    break;
                  case 6:
                    c.lineTo(v[2] * n + g, v[3] * n + h);
                    break;
                  case 7:
                    c.moveTo(v[2] * n + g, v[3] * n + h);
                }
              }
              g += 0.05 * p.advances[t];
            }
          }
        }
      b.text = d;
      this.records = null;
      this.rendered = new Rk();
      this.rendered.text = d;
      this.rendered.__graphics.copyFrom(b.__graphics);
      return b;
    },
    __class__: Cq,
  });
  var ot = function () {};
  p["openfl._internal.symbols.StaticTextRecord"] = ot;
  ot.__name__ = ["openfl", "_internal", "symbols", "StaticTextRecord"];
  ot.prototype = {
    advances: null,
    color: null,
    fontHeight: null,
    fontID: null,
    glyphs: null,
    offsetX: null,
    offsetY: null,
    __class__: ot,
  };
  var pt = function () {};
  p["openfl._internal.symbols.timeline.Frame"] = pt;
  pt.__name__ = ["openfl", "_internal", "symbols", "timeline", "Frame"];
  pt.prototype = {
    label: null,
    objects: null,
    script: null,
    scriptSource: null,
    __class__: pt,
  };
  var qt = function () {};
  p["openfl._internal.symbols.timeline.FrameObject"] = qt;
  qt.__name__ = ["openfl", "_internal", "symbols", "timeline", "FrameObject"];
  qt.prototype = {
    blendMode: null,
    cacheAsBitmap: null,
    clipDepth: null,
    colorTransform: null,
    depth: null,
    filters: null,
    id: null,
    matrix: null,
    name: null,
    symbol: null,
    type: null,
    visible: null,
    __class__: qt,
  };
  var xg = (p["openfl._internal.symbols.timeline.FrameObjectType"] = {
    __ename__: [
      "openfl",
      "_internal",
      "symbols",
      "timeline",
      "FrameObjectType",
    ],
    __constructs__: ["CREATE", "UPDATE", "DESTROY"],
  });
  xg.CREATE = ["CREATE", 0];
  xg.CREATE.toString = M;
  xg.CREATE.__enum__ = xg;
  xg.UPDATE = ["UPDATE", 1];
  xg.UPDATE.toString = M;
  xg.UPDATE.__enum__ = xg;
  xg.DESTROY = ["DESTROY", 2];
  xg.DESTROY.toString = M;
  xg.DESTROY.__enum__ = xg;
  var rt = function (a, b, c) {
    this.glyph = a;
    this.advance = b;
    this.offset = null != c ? c : new xd();
  };
  p["openfl._internal.text.GlyphPosition"] = rt;
  rt.__name__ = ["openfl", "_internal", "text", "GlyphPosition"];
  rt.prototype = { advance: null, glyph: null, offset: null, __class__: rt };
  var Lb = function (a) {
    this.textField = a;
    this.height = this.width = 100;
    this.set_text("");
    this.bounds = new W(0, 0, 0, 0);
    this.textBounds = new W(0, 0, 0, 0);
    this.type = 0;
    this.autoSize = 2;
    this.embedFonts = !1;
    this.selectable = !0;
    this.borderColor = 0;
    this.border = !1;
    this.backgroundColor = 16777215;
    this.background = !1;
    this.gridFitType = 1;
    this.maxChars = 0;
    this.multiline = !1;
    this.scrollH = this.sharpness = 0;
    this.scrollV = 1;
    this.wordWrap = !1;
    this.lineAscents = Oa.toFloatVector(null);
    this.lineBreaks = Oa.toIntVector(null);
    this.lineDescents = Oa.toFloatVector(null);
    this.lineLeadings = Oa.toFloatVector(null);
    this.lineHeights = Oa.toFloatVector(null);
    this.lineWidths = Oa.toFloatVector(null);
    this.layoutGroups = Oa.toObjectVector(null);
    this.textFormatRanges = Oa.toObjectVector(null);
    Lb.__canvas = window.document.createElement("canvas");
    Lb.__context = Lb.__canvas.getContext("2d");
  };
  p["openfl._internal.text.TextEngine"] = Lb;
  Lb.__name__ = ["openfl", "_internal", "text", "TextEngine"];
  Lb.findFont = function (a) {
    var b = xc.__fontByName;
    return null != t[a] ? b.getReserved(a) : b.h[a];
  };
  Lb.findFontVariant = function (a) {
    var b = a.font,
      c = a.bold,
      d = a.italic;
    null == b && (b = "_serif");
    a = ba.replace(ba.replace(b, " Normal", ""), " Regular", "");
    if (c && d) {
      var e = xc.__fontByName;
      var f = a + " Bold Italic";
      e = null != t[f] ? e.existsReserved(f) : e.h.hasOwnProperty(f);
    } else e = !1;
    if (e) return Lb.findFont(a + " Bold Italic");
    c
      ? ((c = xc.__fontByName),
        (e = a + " Bold"),
        (c = null != t[e] ? c.existsReserved(e) : c.h.hasOwnProperty(e)))
      : (c = !1);
    if (c) return Lb.findFont(a + " Bold");
    d
      ? ((d = xc.__fontByName),
        (c = a + " Italic"),
        (d = null != t[c] ? d.existsReserved(c) : d.h.hasOwnProperty(c)))
      : (d = !1);
    return d ? Lb.findFont(a + " Italic") : Lb.findFont(b);
  };
  Lb.getFormatHeight = function (a) {
    Lb.__context.font = Lb.getFont(a);
    var b = Lb.getFontInstance(a);
    if (null != a.__ascent) {
      var c = a.size * a.__ascent;
      b = a.size * a.__descent;
    } else
      null != b && 0 != b.unitsPerEM
        ? ((c = (b.ascender / b.unitsPerEM) * a.size),
          (b = Math.abs((b.descender / b.unitsPerEM) * a.size)))
        : ((c = a.size), (b = 0.185 * a.size));
    return c + b + a.leading;
  };
  Lb.getFont = function (a) {
    var b = a.font,
      c = a.bold,
      d = a.italic;
    null == b && (b = "_serif");
    var e = ba.replace(ba.replace(b, " Normal", ""), " Regular", "");
    if (c && d) {
      var f = xc.__fontByName;
      var g = e + " Bold Italic";
      f = null != t[g] ? f.existsReserved(g) : f.h.hasOwnProperty(g);
    } else f = !1;
    f
      ? ((b = e + " Bold Italic"), (d = c = !1))
      : (c
          ? ((f = xc.__fontByName),
            (g = e + " Bold"),
            (f = null != t[g] ? f.existsReserved(g) : f.h.hasOwnProperty(g)))
          : (f = !1),
        f
          ? ((b = e + " Bold"), (c = !1))
          : (d
              ? ((f = xc.__fontByName),
                (g = e + " Italic"),
                (f =
                  null != t[g] ? f.existsReserved(g) : f.h.hasOwnProperty(g)))
              : (f = !1),
            f
              ? ((b = e + " Italic"), (d = !1))
              : (c &&
                  (-1 < b.indexOf(" Bold ") || ba.endsWith(b, " Bold")) &&
                  (c = !1),
                d &&
                  (-1 < b.indexOf(" Italic ") || ba.endsWith(b, " Italic")) &&
                  (d = !1))));
    c = (d ? "italic " : "normal ") + "normal " + (c ? "bold " : "normal ");
    c += a.size + "px";
    c += "/" + (a.leading + a.size + 3) + "px ";
    switch (b) {
      case "_sans":
        a = "sans-serif";
        break;
      case "_serif":
        a = "serif";
        break;
      case "_typewriter":
        a = "monospace";
        break;
      default:
        a = "'" + b.replace(/^[\s'"]+(.*)[\s'"]+$/, "$1") + "'";
    }
    return (c += "" + a);
  };
  Lb.getFontInstance = function (a) {
    return Lb.findFontVariant(a);
  };
  Lb.prototype = {
    antiAliasType: null,
    autoSize: null,
    background: null,
    backgroundColor: null,
    border: null,
    borderColor: null,
    bottomScrollV: null,
    bounds: null,
    caretIndex: null,
    embedFonts: null,
    gridFitType: null,
    height: null,
    layoutGroups: null,
    lineAscents: null,
    lineBreaks: null,
    lineDescents: null,
    lineLeadings: null,
    lineHeights: null,
    lineWidths: null,
    maxChars: null,
    maxScrollH: null,
    maxScrollV: null,
    multiline: null,
    numLines: null,
    restrict: null,
    scrollH: null,
    scrollV: null,
    selectable: null,
    sharpness: null,
    text: null,
    textBounds: null,
    textHeight: null,
    textFormatRanges: null,
    textWidth: null,
    type: null,
    width: null,
    wordWrap: null,
    textField: null,
    __cursorTimer: null,
    __hasFocus: null,
    __isKeyDown: null,
    __measuredHeight: null,
    __measuredWidth: null,
    __restrictRegexp: null,
    __selectionStart: null,
    __showCursor: null,
    __textFormat: null,
    __textLayout: null,
    __texture: null,
    __useIntAdvances: null,
    __cairoFont: null,
    __font: null,
    createRestrictRegexp: function (a) {
      var b = "",
        c = [];
      0 <
        new Ib("\\^(.-.|.)", "gu").map(a, function (a) {
          b += a.matched(1);
          return "";
        }).length && c.push("[^" + a + "]");
      0 < b.length && c.push("[" + b + "]");
      return new Ib("(" + c.join("|") + ")", "g");
    },
    getBounds: function () {
      var a = this.border ? 1 : 0;
      this.bounds.width = this.width + a;
      this.bounds.height = this.height + a;
      for (
        var b = (a = this.width), c = 0, d = this.layoutGroups;
        c < d.get_length();

      ) {
        var e = d.get(c);
        ++c;
        e.offsetX < a && (a = e.offsetX);
        e.offsetY < b && (b = e.offsetY);
      }
      a >= this.width && (a = 2);
      b >= this.height && (b = 2);
      this.textBounds.setTo(
        Math.max(a - 2, 0),
        Math.max(b - 2, 0),
        Math.min(this.textWidth + 4, this.bounds.width + 4),
        Math.min(1.185 * this.textHeight + 4, this.bounds.height + 4)
      );
    },
    getLine: function (a) {
      return 0 > a || a > this.lineBreaks.get_length() + 1
        ? null
        : 0 == this.lineBreaks.get_length()
        ? this.text
        : ha.substring(
            this.text,
            0 < a ? this.lineBreaks.get(a - 1) : 0,
            this.lineBreaks.get(a)
          );
    },
    getLineBreakIndex: function (a) {
      null == a && (a = 0);
      var b = ha.indexOf(this.text, "<br>", a),
        c = ha.indexOf(this.text, "\n", a);
      a = ha.indexOf(this.text, "\r", a);
      return -1 == c && -1 == b
        ? a
        : -1 == a && -1 == b
        ? c
        : -1 == a && -1 == c
        ? b
        : -1 == c
        ? Math.min(b, a) | 0
        : -1 == a
        ? Math.min(b, c) | 0
        : -1 == b
        ? Math.min(c, a) | 0
        : Math.min(Math.min(c, a), b) | 0;
    },
    getLineMeasurements: function () {
      this.lineAscents.set_length(0);
      this.lineDescents.set_length(0);
      this.lineLeadings.set_length(0);
      this.lineHeights.set_length(0);
      this.lineWidths.set_length(0);
      var a = 0,
        b = 0,
        c = null,
        d = 0,
        e = 0;
      this.textHeight = this.textWidth = 0;
      this.numLines = 1;
      for (
        var f = (this.maxScrollH = this.bottomScrollV = 0),
          g = this.layoutGroups;
        f < g.get_length();

      ) {
        var h = g.get(f);
        for (++f; h.lineIndex > this.numLines - 1; )
          this.lineAscents.push(a),
            this.lineDescents.push(b),
            this.lineLeadings.push(null != c ? c : 0),
            this.lineHeights.push(d),
            this.lineWidths.push(e),
            (b = a = 0),
            (c = null),
            (e = d = 0),
            this.numLines++,
            this.textHeight <= this.height - 2 && this.bottomScrollV++;
        a = Math.max(a, h.ascent);
        b = Math.max(b, h.descent);
        c = null == c ? h.leading : Math.max(c, h.leading) | 0;
        d = Math.max(d, h.height);
        e = h.offsetX - 2 + h.width;
        e > this.textWidth && (this.textWidth = e);
        h = h.offsetY - 2 + h.ascent + h.descent;
        h > this.textHeight && (this.textHeight = h);
      }
      0 == this.textHeight &&
        null != this.textField &&
        1 == this.textField.get_type() &&
        ((a = this.textField.__textFormat),
        (b = Lb.getFontInstance(a)),
        null != a.__ascent
          ? ((f = a.size * a.__ascent), (g = a.size * a.__descent))
          : null != b && 0 != b.unitsPerEM
          ? ((f = (b.ascender / b.unitsPerEM) * a.size),
            (g = Math.abs((b.descender / b.unitsPerEM) * a.size)))
          : ((f = a.size), (g = 0.185 * a.size)),
        (c = a.leading),
        (a = f),
        (b = g),
        (this.textHeight = f + g));
      this.lineAscents.push(a);
      this.lineDescents.push(b);
      this.lineLeadings.push(null != c ? c : 0);
      this.lineHeights.push(d);
      this.lineWidths.push(e);
      1 == this.numLines
        ? ((this.bottomScrollV = 1), 0 < c && (this.textHeight += c))
        : this.textHeight <= this.height - 2 && this.bottomScrollV++;
      if (2 != this.autoSize)
        switch (this.autoSize) {
          case 0:
          case 1:
          case 3:
            this.wordWrap || (this.width = this.textWidth + 4),
              (this.height = this.textHeight + 4),
              (this.bottomScrollV = this.numLines);
        }
      this.maxScrollH =
        this.textWidth > this.width - 4
          ? (this.textWidth - this.width + 4) | 0
          : 0;
      this.maxScrollV = this.numLines - this.bottomScrollV + 1;
      this.scrollV > this.maxScrollV && (this.scrollV = this.maxScrollV);
      this.scrollH > this.maxScrollH && (this.scrollH = this.maxScrollH);
    },
    getLayoutGroups: function () {
      var a = this;
      this.layoutGroups.set_length(0);
      if (null != this.text && !ha.equals(this.text, "")) {
        var b = -1,
          c = null,
          d = null,
          e = De.__defaultTextFormat.clone(),
          f = 0,
          g = 0,
          h = 0,
          n = 0,
          k = null,
          m = null,
          l = 0,
          p = 0,
          q = 0,
          r = -2,
          t = ha.indexOf(this.text, " "),
          u = this.getLineBreakIndex(),
          v = 2,
          w = 2,
          x = 0,
          y = 0,
          z = null,
          A = function (b, c, d) {
            var e = [];
            if (null == a.__useIntAdvances) {
              var f = new Ib("Trident/7.0", "");
              a.__useIntAdvances = f.match(window.navigator.userAgent);
            }
            if (a.__useIntAdvances) {
              f = 0;
              for (var g, h = c; h < d; )
                (g = h++),
                  (g = Lb.__context.measureText(
                    ha.substring(b, c, g + 1)
                  ).width),
                  e.push(g - f),
                  (f = g);
            } else
              for (; c < d; )
                (f = c++),
                  f < ha.get_length(b) - 1
                    ? ((h = Lb.__context.measureText(
                        ha.charAt(b, f + 1)
                      ).width),
                      (f =
                        Lb.__context.measureText(ha.substr(b, f, 2)).width - h))
                    : (f = Lb.__context.measureText(ha.charAt(b, f)).width),
                  e.push(f);
            return e;
          },
          B = function (a) {
            for (var b = 0, c = 0; c < a.length; ) {
              var d = a[c];
              ++c;
              b += d;
            }
            return b;
          },
          C = function (b, d) {
            null == k || k.startIndex != k.endIndex
              ? ((k = new Dq(c.format, b, d)), a.layoutGroups.push(k))
              : ((k.format = c.format), (k.startIndex = b), (k.endIndex = d));
          },
          D = function () {
            null != e.__ascent
              ? ((g = e.size * e.__ascent), (n = e.size * e.__descent))
              : null != d && 0 != d.unitsPerEM
              ? ((g = (d.ascender / d.unitsPerEM) * e.size),
                (n = Math.abs((d.descender / d.unitsPerEM) * e.size)))
              : ((g = e.size), (n = 0.185 * e.size));
            f = e.leading;
            p = g + n + f;
            p > q && (q = p);
            g > h && (h = g);
          },
          E = function () {
            var f = a.textFormatRanges.get_length() - 1;
            b < f &&
              ((b += 1),
              (c = a.textFormatRanges.get(b)),
              e.__merge(c.format),
              (Lb.__context.font = Lb.getFont(e)),
              (d = Lb.getFontInstance(e)));
          },
          F = function (d, e) {
            if (e <= c.end) (m = A(a.text, d, e)), (l = B(m));
            else {
              var f = d;
              d = c.end;
              var g = 0;
              m = [];
              for (l = 0; ; )
                if (
                  (f != d && ((f = A(a.text, f, d)), (m = m.concat(f))), d != e)
                )
                  E(), (f = d), (d = e < c.end ? e : c.end), ++g;
                else {
                  l = B(m);
                  break;
                }
              b -= g + 1;
              E();
            }
          },
          I = function (b) {
            if (b <= c.end)
              (m = A(a.text, x, b)),
                (l = B(m)),
                C(x, b),
                (k.positions = m),
                (k.offsetX = v),
                (k.ascent = g),
                (k.descent = n),
                (k.leading = f),
                (k.lineIndex = y),
                (k.offsetY = w),
                (k.width = l),
                (k.height = p),
                (v += l),
                b == c.end && ((k = null), E(), D());
            else
              for (;;) {
                var d = b < c.end ? b : c.end;
                x != d &&
                  ((m = A(a.text, x, d)),
                  (l = B(m)),
                  C(x, d),
                  (k.positions = m),
                  (k.offsetX = v),
                  (k.ascent = g),
                  (k.descent = n),
                  (k.leading = f),
                  (k.lineIndex = y),
                  (k.offsetY = w),
                  (k.width = l),
                  (k.height = p),
                  (v += l),
                  (x = d));
                d == c.end && (k = null);
                if (d == b) break;
                E();
                D();
              }
            x = b;
          },
          H = function () {
            D();
            for (var b = a.layoutGroups.get_length(); -1 < --b; ) {
              var c = a.layoutGroups.get(b);
              if (c.lineIndex < y) break;
              c.lineIndex > y || ((c.ascent = h), (c.height = q));
            }
            w += q;
            q = h = 0;
            y += 1;
            v = 2;
          },
          K = function (b) {
            if (4 <= a.width && a.wordWrap) {
              var c = m,
                d,
                e,
                f;
              for (d = B(c); v + d > a.width - 2; ) {
                for (f = d = e = 0; v + f < a.width - 2; ) {
                  var g = c[d];
                  0 == g ? (++d, ++e) : ((f += g), ++d);
                }
                if (2 > d && f > a.width - 4) {
                  if (x + d - e == b) break;
                } else
                  for (; v + f > a.width - 2; )
                    --d,
                      0 < d - e
                        ? (F(x, x + d - e), (f = l))
                        : ((d = 1), (e = 0));
                c = x + d - e;
                I(c);
                H();
                F(c, b);
                c = m;
                d = l;
              }
            }
            I(b);
          };
        E();
        D();
        z = c.format;
        for (var J, M = ha.get_length(this.text) + 1; x < M; )
          if (-1 < u && (-1 == t || u < t))
            x <= u
              ? (F(x, u), K(u), (k = null))
              : null != k &&
                k.startIndex != k.endIndex &&
                (k.endIndex == t &&
                  (k.width -= k.positions[k.positions.length - 1]),
                (k = null)),
              c.end == u && (E(), D(), (z = c.format)),
              u >= ha.get_length(this.text) - 1 && (w -= q),
              H(),
              (x = u + 1),
              (u = this.getLineBreakIndex(x));
          else if (-1 < t)
            for (
              null != k && k.startIndex != k.endIndex && (k = null), J = !1;
              ;

            ) {
              var L = ha.get_length(this.text);
              if (x >= L) break;
              L = -1;
              -1 == t ? (L = u) : ((L = t + 1), -1 < u && u < L && (L = u));
              -1 == L && (L = ha.get_length(this.text));
              F(x, L);
              if (2 == z.align) {
                if (0 < m.length && x == r) {
                  x += 1;
                  var N = m.shift();
                  l -= N;
                  v += N;
                }
                0 < m.length && L == t + 1 && (--L, (N = m.pop()), (l -= N));
              }
              this.wordWrap &&
                v + l > this.width - 2 &&
                ((J = !0),
                0 < m.length &&
                  L == t + 1 &&
                  v + l - m[m.length - 1] <= this.width - 2 &&
                  (J = !1));
              if (J) {
                2 != z.align &&
                  (null != k || 0 < this.layoutGroups.get_length()) &&
                  ((J = k),
                  null == J &&
                    (J = this.layoutGroups.get(
                      this.layoutGroups.get_length() - 1
                    )),
                  (J.width -= J.positions[J.positions.length - 1]),
                  J.endIndex--);
                J = this.layoutGroups.get_length() - 1;
                for (N = 0; ; ) {
                  k = this.layoutGroups.get(J);
                  if (0 < J && k.startIndex > r) ++N;
                  else break;
                  --J;
                }
                x == r + 1 && H();
                v = 2;
                if (0 < N) {
                  J = this.layoutGroups.get(
                    this.layoutGroups.get_length() - N
                  ).offsetX;
                  N = this.layoutGroups.get_length() - N;
                  for (var O = this.layoutGroups.get_length(); N < O; ) {
                    var P = N++;
                    k = this.layoutGroups.get(P);
                    k.offsetX -= J;
                    k.offsetY = w;
                    k.lineIndex = y;
                    v += k.width;
                  }
                }
                K(L);
                J = !1;
              } else
                null != k && x == t
                  ? (2 != z.align &&
                      ((k.endIndex = t),
                      (k.positions = k.positions.concat(m)),
                      (k.width += l)),
                    (v += l),
                    (x = L))
                  : null == k || 2 == z.align
                  ? K(L)
                  : ((N = L < c.end ? L : c.end),
                    N < L && ((m = A(this.text, x, N)), (l = B(m))),
                    (k.endIndex = N),
                    (k.positions = k.positions.concat(m)),
                    (k.width += l),
                    (v += l),
                    N == c.end &&
                      ((k = null), E(), D(), (x = N), N != L && I(L)),
                    u == L && ++L,
                    (x = L));
              L = ha.indexOf(this.text, " ", x);
              u == r &&
                ((k.endIndex = u),
                0 > u - k.startIndex - k.positions.length &&
                  k.positions.push(0),
                (x = u + 1));
              r = t;
              t = L;
              -1 < u && u <= x && (t > u || -1 == t)
                ? (L = !0)
                : ((L = ha.get_length(this.text)), (L = x > L));
              if (L) break;
            }
          else
            (L = ha.get_length(this.text)),
              x < L &&
                ((L = ha.get_length(this.text)),
                F(x, L),
                K(ha.get_length(this.text)),
                H()),
              (x += 1);
      }
    },
    restrictText: function (a) {
      if (null == a) return a;
      null != this.__restrictRegexp &&
        (a = this.__restrictRegexp.split(a).join(""));
      return a;
    },
    setTextAlignment: function () {
      for (
        var a = -1,
          b = 0,
          c = this.width - 4,
          d,
          e,
          f = !1,
          g = 0,
          h = this.layoutGroups.get_length();
        g < h;

      ) {
        var n = g++;
        d = this.layoutGroups.get(n);
        if (d.lineIndex != a)
          switch (((a = d.lineIndex), d.format.align)) {
            case 0:
              b =
                this.lineWidths.get(a) < c
                  ? Math.round((c - this.lineWidths.get(a)) / 2)
                  : 0;
              break;
            case 2:
              if (this.lineWidths.get(a) < c) {
                e = 1;
                b = n + 1;
                for (var k = this.layoutGroups.get_length(); b < k; ) {
                  var m = b++;
                  if (this.layoutGroups.get(m).lineIndex == a)
                    (0 != m &&
                      32 !=
                        ha.charCodeAt(
                          this.text,
                          this.layoutGroups.get(m).startIndex - 1
                        )) ||
                      ++e;
                  else break;
                }
                if (
                  1 < e &&
                  ((d = this.layoutGroups.get(n + e - 1)),
                  (b = ha.charCodeAt(this.text, d.endIndex)),
                  d.endIndex < ha.get_length(this.text) && 10 != b && 13 != b)
                )
                  for (
                    b = (c - this.lineWidths.get(a)) / (e - 1), f = !0, k = 1;
                    (this.layoutGroups.get(n + k).offsetX += b * k), ++k < e;

                  );
              }
              b = 0;
              break;
            case 4:
              b =
                this.lineWidths.get(a) < c
                  ? Math.round(c - this.lineWidths.get(a))
                  : 0;
              break;
            default:
              b = 0;
          }
        0 < b && (d.offsetX += b);
      }
      f && this.getLineMeasurements();
    },
    trimText: function (a) {
      if (null == a) return a;
      0 < this.maxChars &&
        ha.get_length(a) > this.maxChars &&
        (a = ha.substr(a, 0, this.maxChars));
      return a;
    },
    update: function () {
      null == this.text || 0 == this.textFormatRanges.get_length()
        ? (this.lineAscents.set_length(0),
          this.lineBreaks.set_length(0),
          this.lineDescents.set_length(0),
          this.lineLeadings.set_length(0),
          this.lineHeights.set_length(0),
          this.lineWidths.set_length(0),
          this.layoutGroups.set_length(0),
          (this.textHeight = this.textWidth = 0),
          (this.numLines = 1),
          (this.maxScrollH = 0),
          (this.bottomScrollV = this.maxScrollV = 1))
        : (this.getLayoutGroups(),
          this.getLineMeasurements(),
          this.setTextAlignment());
      this.getBounds();
    },
    set_restrict: function (a) {
      if (ha.equals(this.restrict, a)) return this.restrict;
      this.restrict = a;
      null == this.restrict || 0 == ha.get_length(this.restrict)
        ? (this.__restrictRegexp = null)
        : (this.__restrictRegexp = this.createRestrictRegexp(a));
      return this.restrict;
    },
    set_text: function (a) {
      return (this.text = a);
    },
    __class__: Lb,
    __properties__: { set_text: "set_text", set_restrict: "set_restrict" },
  };
  var vh = function (a, b, c) {
    this.format = a;
    this.start = b;
    this.end = c;
  };
  p["openfl._internal.text.TextFormatRange"] = vh;
  vh.__name__ = ["openfl", "_internal", "text", "TextFormatRange"];
  vh.prototype = { end: null, format: null, start: null, __class__: vh };
  var $d = function (a, b, c, d, e, f) {
    null == f && (f = "en");
    null == e && (e = "Zyyy");
    null == d && (d = 4);
    null == c && (c = 12);
    null == a && (a = "");
    this.letterSpacing = 0;
    this.set_text(a);
    this.set_font(b);
    this.set_size(c);
    this.__direction = d;
    this.__script = e;
    this.__language = f;
    this.positions = [];
    this.__dirty = !0;
    this.__create(this.__direction, this.__script, this.__language);
  };
  p["openfl._internal.text.TextLayout"] = $d;
  $d.__name__ = ["openfl", "_internal", "text", "TextLayout"];
  $d.prototype = {
    autoHint: null,
    font: null,
    glyphs: null,
    letterSpacing: null,
    positions: null,
    size: null,
    text: null,
    __buffer: null,
    __direction: null,
    __dirty: null,
    __handle: null,
    __language: null,
    __script: null,
    __font: null,
    __hbBuffer: null,
    __hbFont: null,
    __create: function (a, b, c) {
      4 == c.length && ((this.__hbBuffer = hc._new()), Fk._new(c));
    },
    __position: function () {
      this.positions = [];
    },
    get_positions: function () {
      this.__dirty && ((this.__dirty = !1), this.__position());
      return this.positions;
    },
    get_direction: function () {
      return this.__direction;
    },
    set_direction: function (a) {
      if (a == this.__direction) return a;
      this.__direction = a;
      this.__dirty = !0;
      return a;
    },
    set_font: function (a) {
      if (a == this.font) return a;
      this.font = a;
      this.__dirty = !0;
      return a;
    },
    get_glyphs: function () {
      for (var a = [], b = 0, c = this.get_positions(); b < c.length; ) {
        var d = c[b];
        ++b;
        a.push(d.glyph);
      }
      return a;
    },
    get_language: function () {
      return this.__language;
    },
    set_language: function (a) {
      if (a == this.__language) return a;
      this.__language = a;
      this.__dirty = !0;
      return a;
    },
    get_script: function () {
      return this.__script;
    },
    set_script: function (a) {
      if (a == this.__script) return a;
      this.__script = a;
      this.__dirty = !0;
      return a;
    },
    set_size: function (a) {
      if (a == this.size) return a;
      this.size = a;
      this.__dirty = !0;
      return a;
    },
    set_text: function (a) {
      if (a == this.text) return a;
      this.text = a;
      this.__dirty = !0;
      return a;
    },
    __class__: $d,
    __properties__: {
      set_text: "set_text",
      set_size: "set_size",
      set_script: "set_script",
      get_script: "get_script",
      get_positions: "get_positions",
      set_language: "set_language",
      get_language: "get_language",
      get_glyphs: "get_glyphs",
      set_font: "set_font",
      set_direction: "set_direction",
      get_direction: "get_direction",
    },
  };
  var Lf = {};
  p["openfl._internal.text._TextLayout.TextDirection_Impl_"] = Lf;
  Lf.__name__ = [
    "openfl",
    "_internal",
    "text",
    "_TextLayout",
    "TextDirection_Impl_",
  ];
  Lf.__properties__ = {
    get_vertical: "get_vertical",
    get_horizontal: "get_horizontal",
    get_forward: "get_forward",
    get_backward: "get_backward",
  };
  Lf.reverse = function (a) {};
  Lf.toString = function (a) {
    switch (a) {
      case 4:
        return "leftToRight";
      case 5:
        return "rightToLeft";
      case 6:
        return "topToBottom";
      case 7:
        return "bottomToTop";
      default:
        return "";
    }
  };
  Lf.toHBDirection = function (a) {
    switch (a) {
      case 4:
        return 4;
      case 5:
        return 5;
      case 6:
        return 6;
      case 7:
        return 7;
      default:
        return 0;
    }
  };
  Lf.get_backward = function (a) {
    return 5 == (a & -3);
  };
  Lf.get_forward = function (a) {
    return 4 == (a & -3);
  };
  Lf.get_horizontal = function (a) {
    return 4 == (a & -2);
  };
  Lf.get_vertical = function (a) {
    return 6 == (a & -2);
  };
  var ca = {};
  p["openfl._internal.text._TextLayout.TextScript_Impl_"] = ca;
  ca.__name__ = [
    "openfl",
    "_internal",
    "text",
    "_TextLayout",
    "TextScript_Impl_",
  ];
  ca.__properties__ = { get_rightToLeft: "get_rightToLeft" };
  ca.toHBScript = function (a) {
    return 1517910393;
  };
  ca.get_rightToLeft = function (a) {
    switch (a) {
      case "Arab":
      case "Armi":
      case "Avst":
      case "Cprt":
      case "Hebr":
      case "Khar":
      case "Lydi":
      case "Mand":
      case "Nkoo":
      case "Orkh":
      case "Phli":
      case "Phlp":
      case "Phnx":
      case "Samr":
      case "Sarb":
      case "Syrc":
      case "Thaa":
        return !0;
      default:
        return !1;
    }
  };
  var Dq = function (a, b, c) {
    this.format = a;
    this.startIndex = b;
    this.endIndex = c;
  };
  p["openfl._internal.text.TextLayoutGroup"] = Dq;
  Dq.__name__ = ["openfl", "_internal", "text", "TextLayoutGroup"];
  Dq.prototype = {
    ascent: null,
    descent: null,
    endIndex: null,
    format: null,
    height: null,
    leading: null,
    lineIndex: null,
    offsetX: null,
    offsetY: null,
    positions: null,
    startIndex: null,
    width: null,
    getAdvance: function (a) {
      return this.positions[a];
    },
    __class__: Dq,
  };
  var Sk = function (a, b, c, d, e, f, g) {
    null == g && (g = 0.05);
    null == f && (f = !1);
    this.stitch = f;
    this.stitch_threshold = g;
    this.octaves = b;
    this.channels = c;
    this.grayscale = d;
    this.calculateOctaves(e);
  };
  p["openfl._internal.utils.AbstractNoise"] = Sk;
  Sk.__name__ = ["openfl", "_internal", "utils", "AbstractNoise"];
  Sk.prototype = {
    octaves: null,
    stitch: null,
    stitch_threshold: null,
    channels: null,
    grayscale: null,
    octaves_frequencies: null,
    octaves_persistences: null,
    persistence_max: null,
    fill: function (a, b, c, d) {},
    stitching: function (a, b, c, d, e, f, g, h) {
      var n = (b >> 16) & 255,
        k = (b >> 8) & 255;
      b &= 255;
      if (g - e < c) {
        var m = a.getPixel32(g - c, d),
          l = (m >> 8) & 255,
          p = m & 255;
        e = (g - c) / e;
        n = this.mixI((m >> 16) & 255, n, e);
        k = this.mixI(l, k, e);
        b = this.mixI(p, b, e);
      }
      h - f < d &&
        ((a = a.getPixel32(c, h - d)),
        (c = (a >> 8) & 255),
        (e = a & 255),
        (d = (h - d) / f),
        (n = this.mixI((a >> 16) & 255, n, d)),
        (k = this.mixI(c, k, d)),
        (b = this.mixI(e, b, d)));
      return -16777216 | (n << 16) | (k << 8) | b;
    },
    color: function (a, b, c) {
      var d = 0,
        e = 0,
        f = 0;
      null != a && (d = this.noiseToColor(a));
      null != b && (e = this.noiseToColor(b));
      null != c && (f = this.noiseToColor(c));
      return -16777216 | (d << 16) | (e << 8) | f;
    },
    noiseToColor: function (a) {
      return (128 * (a * this.persistence_max + 1)) | 0;
    },
    fade: function (a) {
      return a * a * a * (a * (6 * a - 15) + 10);
    },
    mixI: function (a, b, c) {
      return ((1 - c) * a + c * b) | 0;
    },
    mix: function (a, b, c) {
      return (1 - c) * a + c * b;
    },
    fastfloor: function (a) {
      return 0 < a ? a | 0 : (a - 1) | 0;
    },
    dot2d: function (a, b, c) {
      return a[0] * b + a[1] * c;
    },
    dot: function (a, b, c, d) {
      return a[0] * b + a[1] * c + a[2] * d;
    },
    calculateOctaves: function (a) {
      this.octaves_frequencies = [];
      this.octaves_persistences = [];
      for (var b = (this.persistence_max = 0), c = this.octaves; b < c; ) {
        var d = b++;
        var e = Math.pow(2, d);
        d = Math.pow(a, d);
        this.persistence_max += d;
        this.octaves_frequencies.push(e);
        this.octaves_persistences.push(d);
      }
      this.persistence_max = 1 / this.persistence_max;
    },
    __class__: Sk,
  };
  var Cj = function (a, b, c, d, e, f, g) {
    null == g && (g = 0.05);
    null == f && (f = !1);
    Sk.call(this, a, b, c, d, e, f, g);
    this.p_perm = [];
    for (b = 0; 512 > b; ) (c = b++), (this.p_perm[c] = Cj.P[c & 255]);
    this.base_factor = 0.03125;
    this.setSeed(a);
  };
  p["openfl._internal.utils.PerlinNoise"] = Cj;
  Cj.__name__ = ["openfl", "_internal", "utils", "PerlinNoise"];
  Cj.__super__ = Sk;
  Cj.prototype = x(Sk.prototype, {
    p_perm: null,
    x_offset: null,
    y_offset: null,
    z_offset: null,
    base_factor: null,
    fill: function (a, b, c, d) {
      var e = a.width,
        f = a.height,
        g = this.octaves,
        h = this.octaves_frequencies,
        n = this.octaves_persistences,
        k = 1 == (1 & this.channels),
        m = 2 == (2 & this.channels),
        l = 4 == (4 & this.channels),
        p = 0;
      k && ++p;
      m && ++p;
      l && ++p;
      var q = this.grayscale,
        r = (this.stitch_threshold * e) | 0,
        t = (this.stitch_threshold * f) | 0,
        u = b * this.base_factor + this.x_offset;
      c = c * this.base_factor + this.y_offset;
      d = d * this.base_factor + this.z_offset;
      for (var v = 0; v < f; ) {
        var w = v++;
        b = u;
        for (var x = 0, y = e; x < y; ) {
          for (var z = x++, A = 0, B = 0, C = 0, D = 0, E = g; D < E; ) {
            var F = D++,
              H = h[F];
            F = n[F];
            A += this.noise(b * H, c * H, d * H) * F;
            q ||
              (1 < p && (B += this.noise((b + 1) * H, (c + 1) * H, d * H) * F),
              2 < p && (C += this.noise((b + 2) * H, (c + 2) * H, d * H) * F));
          }
          D = 0;
          q
            ? (D = this.color(A, A, A))
            : k && m && l
            ? (D = this.color(A, B, C))
            : k && m
            ? (D = this.color(A, B, null))
            : k && l
            ? (D = this.color(A, null, B))
            : m && l
            ? (D = this.color(null, A, B))
            : k
            ? (D = this.color(A, null, null))
            : m
            ? (D = this.color(null, A, null))
            : l && (D = this.color(null, null, A));
          this.stitch && (D = this.stitching(a, D, z, w, r, t, e, f));
          a.setPixel32(z, w, D);
          b += this.base_factor;
        }
        c += this.base_factor;
      }
    },
    noise: function (a, b, c) {
      var d = a - (a % 1),
        e = b - (b % 1),
        f = c - (c % 1);
      a -= d;
      b -= e;
      c -= f;
      var g = (d | 0) & 255,
        h = (e | 0) & 255,
        n = (f | 0) & 255;
      f = this.fade(a);
      e = this.fade(b);
      d = this.fade(c);
      var k = this.p_perm[g] + h,
        m = this.p_perm[k] + n;
      k = this.p_perm[k + 1] + n;
      h = this.p_perm[g + 1] + h;
      g = this.p_perm[h] + n;
      var l = this.p_perm[h + 1] + n,
        p = a - 1,
        q = b - 1,
        r = c - 1,
        t = this.p_perm[l + 1] & 15;
      n =
        (0 == (t & 1) ? (8 > t ? p : q) : 8 > t ? -p : -q) +
        (0 == (t & 2)
          ? 4 > t
            ? q
            : 12 == t
            ? p
            : r
          : 4 > t
          ? -q
          : 14 == t
          ? -p
          : -r);
      t = this.p_perm[k + 1] & 15;
      h =
        (0 == (t & 1) ? (8 > t ? a : q) : 8 > t ? -a : -q) +
        (0 == (t & 2)
          ? 4 > t
            ? q
            : 12 == t
            ? a
            : r
          : 4 > t
          ? -q
          : 14 == t
          ? -a
          : -r);
      t = this.p_perm[g + 1] & 15;
      var u =
        (0 == (t & 1) ? (8 > t ? p : b) : 8 > t ? -p : -b) +
        (0 == (t & 2)
          ? 4 > t
            ? b
            : 12 == t
            ? p
            : r
          : 4 > t
          ? -b
          : 14 == t
          ? -p
          : -r);
      t = this.p_perm[m + 1] & 15;
      r =
        (0 == (t & 1) ? (8 > t ? a : b) : 8 > t ? -a : -b) +
        (0 == (t & 2)
          ? 4 > t
            ? b
            : 12 == t
            ? a
            : r
          : 4 > t
          ? -b
          : 14 == t
          ? -a
          : -r);
      t = this.p_perm[l] & 15;
      l =
        (0 == (t & 1) ? (8 > t ? p : q) : 8 > t ? -p : -q) +
        (0 == (t & 2)
          ? 4 > t
            ? q
            : 12 == t
            ? p
            : c
          : 4 > t
          ? -q
          : 14 == t
          ? -p
          : -c);
      t = this.p_perm[k] & 15;
      k =
        (0 == (t & 1) ? (8 > t ? a : q) : 8 > t ? -a : -q) +
        (0 == (t & 2)
          ? 4 > t
            ? q
            : 12 == t
            ? a
            : c
          : 4 > t
          ? -q
          : 14 == t
          ? -a
          : -c);
      t = this.p_perm[g] & 15;
      g =
        (0 == (t & 1) ? (8 > t ? p : b) : 8 > t ? -p : -b) +
        (0 == (t & 2)
          ? 4 > t
            ? b
            : 12 == t
            ? p
            : c
          : 4 > t
          ? -b
          : 14 == t
          ? -p
          : -c);
      t = this.p_perm[m] & 15;
      a =
        (0 == (t & 1) ? (8 > t ? a : b) : 8 > t ? -a : -b) +
        (0 == (t & 2)
          ? 4 > t
            ? b
            : 12 == t
            ? a
            : c
          : 4 > t
          ? -b
          : 14 == t
          ? -a
          : -c);
      r += f * (u - r);
      a += f * (g - a);
      a += e * (k + f * (l - k) - a);
      return a + d * (r + e * (h + f * (n - h) - r) - a);
    },
    setSeed: function (a) {
      this.x_offset = a = (16807 * a) % 2147483647 | 0;
      this.y_offset = a = (16807 * a) % 2147483647 | 0;
      this.z_offset = (16807 * a) % 2147483647 | 0;
    },
    __class__: Cj,
  });
  var Ej = function () {
    this.rollOutStack = [];
  };
  p["openfl._internal.utils.TouchData"] = Ej;
  Ej.__name__ = ["openfl", "_internal", "utils", "TouchData"];
  Ej.prototype = {
    rollOutStack: null,
    touch: null,
    touchDownTarget: null,
    touchOverTarget: null,
    reset: function () {
      this.touchOverTarget = this.touchDownTarget = this.touch = null;
      this.rollOutStack.splice(0, this.rollOutStack.length);
    },
    __class__: Ej,
  };
  var jl = function () {
    Me.call(this);
    null == Ec.application && (Ec.application = this);
    null == Ec.current && (Ec.current = new ef());
    Ec.current.__loaderInfo = Pg.create(null);
    Ec.current.__loaderInfo.content = Ec.current;
  };
  p["openfl.display.Application"] = jl;
  jl.__name__ = ["openfl", "display", "Application"];
  jl.__super__ = Me;
  jl.prototype = x(Me.prototype, {
    createWindow: function (a) {
      var b = new Xn(this, a);
      this.__windows.push(b);
      this.__windowByID.h[b.id] = b;
      var c = B(this, this.__onWindowClose);
      b.onClose.add(
        function () {
          c(b);
        },
        !1,
        -1e4
      );
      null == this.__window &&
        ((this.__window = b),
        b.onActivate.add(B(this, this.onWindowActivate)),
        b.onRenderContextLost.add(B(this, this.onRenderContextLost)),
        b.onRenderContextRestored.add(B(this, this.onRenderContextRestored)),
        b.onDeactivate.add(B(this, this.onWindowDeactivate)),
        b.onDropFile.add(B(this, this.onWindowDropFile)),
        b.onEnter.add(B(this, this.onWindowEnter)),
        b.onExpose.add(B(this, this.onWindowExpose)),
        b.onFocusIn.add(B(this, this.onWindowFocusIn)),
        b.onFocusOut.add(B(this, this.onWindowFocusOut)),
        b.onFullscreen.add(B(this, this.onWindowFullscreen)),
        b.onKeyDown.add(B(this, this.onKeyDown)),
        b.onKeyUp.add(B(this, this.onKeyUp)),
        b.onLeave.add(B(this, this.onWindowLeave)),
        b.onMinimize.add(B(this, this.onWindowMinimize)),
        b.onMouseDown.add(B(this, this.onMouseDown)),
        b.onMouseMove.add(B(this, this.onMouseMove)),
        b.onMouseMoveRelative.add(B(this, this.onMouseMoveRelative)),
        b.onMouseUp.add(B(this, this.onMouseUp)),
        b.onMouseWheel.add(B(this, this.onMouseWheel)),
        b.onMove.add(B(this, this.onWindowMove)),
        b.onRender.add(B(this, this.render)),
        b.onResize.add(B(this, this.onWindowResize)),
        b.onRestore.add(B(this, this.onWindowRestore)),
        b.onTextEdit.add(B(this, this.onTextEdit)),
        b.onTextInput.add(B(this, this.onTextInput)),
        this.onWindowCreate());
      this.onCreateWindow.dispatch(b);
      return b;
    },
    __class__: jl,
  });
  var Ve = {};
  p["openfl.display._BlendMode.BlendMode_Impl_"] = Ve;
  Ve.__name__ = ["openfl", "display", "_BlendMode", "BlendMode_Impl_"];
  Ve.fromString = function (a) {
    switch (a) {
      case "add":
        return 0;
      case "alpha":
        return 1;
      case "darken":
        return 2;
      case "difference":
        return 3;
      case "erase":
        return 4;
      case "hardlight":
        return 5;
      case "invert":
        return 6;
      case "layer":
        return 7;
      case "lighten":
        return 8;
      case "multiply":
        return 9;
      case "normal":
        return 10;
      case "overlay":
        return 11;
      case "screen":
        return 12;
      case "shader":
        return 13;
      case "subtract":
        return 14;
      default:
        return null;
    }
  };
  Ve.toString = function (a) {
    switch (a) {
      case 0:
        return "add";
      case 1:
        return "alpha";
      case 2:
        return "darken";
      case 3:
        return "difference";
      case 4:
        return "erase";
      case 5:
        return "hardlight";
      case 6:
        return "invert";
      case 7:
        return "layer";
      case 8:
        return "lighten";
      case 9:
        return "multiply";
      case 10:
        return "normal";
      case 11:
        return "overlay";
      case 12:
        return "screen";
      case 13:
        return "shader";
      case 14:
        return "subtract";
      default:
        return null;
    }
  };
  var sf = function () {
    db.call(this);
    this.__allowSmoothing = !0;
    this.__tempColorTransform = new sc();
    this.__worldAlpha = 1;
  };
  p["openfl.display.DisplayObjectRenderer"] = sf;
  sf.__name__ = ["openfl", "display", "DisplayObjectRenderer"];
  sf.__super__ = db;
  sf.prototype = x(db.prototype, {
    __allowSmoothing: null,
    __blendMode: null,
    __cleared: null,
    __context: null,
    __overrideBlendMode: null,
    __roundPixels: null,
    __stage: null,
    __tempColorTransform: null,
    __transparent: null,
    __type: null,
    __worldAlpha: null,
    __worldColorTransform: null,
    __worldTransform: null,
    __clear: function () {},
    __getAlpha: function (a) {
      return a * this.__worldAlpha;
    },
    __getColorTransform: function (a) {
      return null != this.__worldColorTransform
        ? (this.__tempColorTransform.__copyFrom(this.__worldColorTransform),
          this.__tempColorTransform.__combine(a),
          this.__tempColorTransform)
        : a;
    },
    __popMask: function () {},
    __popMaskObject: function (a, b) {},
    __popMaskRect: function () {},
    __pushMask: function (a) {},
    __pushMaskObject: function (a, b) {},
    __pushMaskRect: function (a, b) {},
    __render: function (a) {},
    __resize: function (a, b) {},
    __setBlendMode: function (a) {},
    __class__: sf,
  });
  var Eq = function (a) {
    sf.call(this);
  };
  p["openfl.display.CairoRenderer"] = Eq;
  Eq.__name__ = ["openfl", "display", "CairoRenderer"];
  Eq.__super__ = sf;
  Eq.prototype = x(sf.prototype, {
    cairo: null,
    __matrix: null,
    __matrix3: null,
    applyMatrix: function (a, b) {
      null == b && (b = this.cairo);
      this.__matrix.copyFrom(a);
      this.cairo == b &&
        null != this.__worldTransform &&
        this.__matrix.concat(this.__worldTransform);
      this.__matrix3.a = this.__matrix.a;
      this.__matrix3.b = this.__matrix.b;
      this.__matrix3.c = this.__matrix.c;
      this.__matrix3.d = this.__matrix.d;
      this.__roundPixels
        ? ((this.__matrix3.tx = Math.round(this.__matrix.tx)),
          (this.__matrix3.ty = Math.round(this.__matrix.ty)))
        : ((this.__matrix3.tx = this.__matrix.tx),
          (this.__matrix3.ty = this.__matrix.ty));
      b.set_matrix(this.__matrix3);
    },
    __clear: function () {
      if (
        null != this.cairo &&
        (this.cairo.identityMatrix(),
        null != this.__stage && this.__stage.__clearBeforeRender)
      ) {
        var a = this.__blendMode;
        this.__setBlendMode(10);
        this.cairo.setSourceRGB(
          this.__stage.__colorSplit[0],
          this.__stage.__colorSplit[1],
          this.__stage.__colorSplit[2]
        );
        this.cairo.paint();
        this.__setBlendMode(a);
      }
    },
    __popMask: function () {
      this.cairo.restore();
    },
    __popMaskObject: function (a, b) {
      null == b && (b = !0);
      a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
      b && null != a.__scrollRect && this.__popMaskRect();
    },
    __popMaskRect: function () {
      this.cairo.restore();
    },
    __pushMask: function (a) {
      this.cairo.save();
      this.applyMatrix(a.__renderTransform, this.cairo);
      this.cairo.newPath();
      a.__renderCairoMask(this);
      this.cairo.clip();
    },
    __pushMaskObject: function (a, b) {
      null == b && (b = !0);
      b &&
        null != a.__scrollRect &&
        this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
      a.__isCacheBitmapRender || null == a.__mask || this.__pushMask(a.__mask);
    },
    __pushMaskRect: function (a, b) {
      this.cairo.save();
      this.applyMatrix(b, this.cairo);
      this.cairo.newPath();
      this.cairo.rectangle(a.x, a.y, a.width, a.height);
      this.cairo.clip();
    },
    __render: function (a) {
      null != this.cairo && a.__renderCairo(this);
    },
    __setBlendMode: function (a) {
      null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
      this.__blendMode != a &&
        ((this.__blendMode = a), this.__setBlendModeCairo(this.cairo, a));
    },
    __setBlendModeCairo: function (a, b) {
      switch (b) {
        case 0:
          a.setOperator(12);
          break;
        case 2:
          a.setOperator(17);
          break;
        case 3:
          a.setOperator(23);
          break;
        case 5:
          a.setOperator(21);
          break;
        case 7:
          a.setOperator(2);
          break;
        case 8:
          a.setOperator(18);
          break;
        case 9:
          a.setOperator(14);
          break;
        case 11:
          a.setOperator(16);
          break;
        case 12:
          a.setOperator(15);
          break;
        default:
          a.setOperator(2);
      }
    },
    __class__: Eq,
  });
  var mh = function (a) {
    this.pixelRatio = 1;
    sf.call(this);
    this.context = a;
    this.__tempMatrix = new ya();
    this.__type = "canvas";
  };
  p["openfl.display.CanvasRenderer"] = mh;
  mh.__name__ = ["openfl", "display", "CanvasRenderer"];
  mh.__super__ = sf;
  mh.prototype = x(sf.prototype, {
    context: null,
    pixelRatio: null,
    __isDOM: null,
    __tempMatrix: null,
    applySmoothing: function (a, b) {
      a.imageSmoothingEnabled = b;
    },
    setTransform: function (a, b) {
      null == b
        ? (b = this.context)
        : this.context == b &&
          null != this.__worldTransform &&
          (this.__tempMatrix.copyFrom(a),
          this.__tempMatrix.concat(this.__worldTransform),
          (a = this.__tempMatrix));
      this.__roundPixels
        ? b.setTransform(a.a, a.b, a.c, a.d, a.tx | 0, a.ty | 0)
        : b.setTransform(a.a, a.b, a.c, a.d, a.tx, a.ty);
    },
    __clear: function () {
      if (null != this.__stage) {
        var a = this.__blendMode;
        this.__blendMode = null;
        this.__setBlendMode(10);
        this.context.setTransform(1, 0, 0, 1, 0, 0);
        this.context.globalAlpha = 1;
        !this.__stage.__transparent && this.__stage.__clearBeforeRender
          ? ((this.context.fillStyle = this.__stage.__colorString),
            this.context.fillRect(
              0,
              0,
              this.__stage.stageWidth * this.__stage.window.__scale,
              this.__stage.stageHeight * this.__stage.window.__scale
            ))
          : this.__stage.__transparent &&
            this.__stage.__clearBeforeRender &&
            this.context.clearRect(
              0,
              0,
              this.__stage.stageWidth * this.__stage.window.__scale,
              this.__stage.stageHeight * this.__stage.window.__scale
            );
        this.__setBlendMode(a);
      }
    },
    __popMask: function () {
      this.context.restore();
    },
    __popMaskObject: function (a, b) {
      null == b && (b = !0);
      a.__isCacheBitmapRender || null == a.__mask || this.__popMask();
      b && null != a.__scrollRect && this.__popMaskRect();
    },
    __popMaskRect: function () {
      this.context.restore();
    },
    __pushMask: function (a) {
      this.context.save();
      this.setTransform(a.__renderTransform, this.context);
      this.context.beginPath();
      a.__renderCanvasMask(this);
      this.context.closePath();
      this.context.clip();
    },
    __pushMaskObject: function (a, b) {
      null == b && (b = !0);
      b &&
        null != a.__scrollRect &&
        this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
      a.__isCacheBitmapRender || null == a.__mask || this.__pushMask(a.__mask);
    },
    __pushMaskRect: function (a, b) {
      this.context.save();
      this.setTransform(b, this.context);
      this.context.beginPath();
      this.context.rect(a.x, a.y, a.width, a.height);
      this.context.clip();
    },
    __render: function (a) {
      a.__renderCanvas(this);
    },
    __setBlendMode: function (a) {
      null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
      this.__blendMode != a &&
        ((this.__blendMode = a), this.__setBlendModeContext(this.context, a));
    },
    __setBlendModeContext: function (a, b) {
      switch (b) {
        case 0:
          a.globalCompositeOperation = "lighter";
          break;
        case 2:
          a.globalCompositeOperation = "darken";
          break;
        case 3:
          a.globalCompositeOperation = "difference";
          break;
        case 5:
          a.globalCompositeOperation = "hard-light";
          break;
        case 8:
          a.globalCompositeOperation = "lighten";
          break;
        case 9:
          a.globalCompositeOperation = "multiply";
          break;
        case 11:
          a.globalCompositeOperation = "overlay";
          break;
        case 12:
          a.globalCompositeOperation = "screen";
          break;
        default:
          a.globalCompositeOperation = "source-over";
      }
    },
    __class__: mh,
  });
  var bi = {};
  p["openfl.display._CapsStyle.CapsStyle_Impl_"] = bi;
  bi.__name__ = ["openfl", "display", "_CapsStyle", "CapsStyle_Impl_"];
  bi.fromInt = function (a) {
    return a;
  };
  bi.fromString = function (a) {
    switch (a) {
      case "none":
        return 0;
      case "round":
        return 1;
      case "square":
        return 2;
      default:
        return null;
    }
  };
  bi.toInt = function (a) {
    return a;
  };
  bi.toString = function (a) {
    switch (a) {
      case 0:
        return "none";
      case 1:
        return "round";
      case 2:
        return "square";
      default:
        return null;
    }
  };
  var Tk = function (a) {
    this.pixelRatio = 1;
    sf.call(this);
    this.element = a;
    hb.__supportDOM = !0;
    a = window.getComputedStyle(document.documentElement, "");
    a = (Array.prototype.slice
      .call(a)
      .join("")
      .match(/-(moz|webkit|ms)-/) ||
      ("" === a.OLink && ["", "o"]))[1];
    "WebKit|Moz|MS|O".match(new RegExp("(" + a + ")", "i"));
    a[0].toUpperCase();
    a.substr(1);
    this.__vendorPrefix = a;
    this.__transformProperty =
      "webkit" == a ? "-webkit-transform" : "transform";
    this.__transformOriginProperty =
      "webkit" == a ? "-webkit-transform-origin" : "transform-origin";
    this.__clipRects = [];
    this.__z = this.__numClipRects = 0;
    this.__type = "dom";
    this.__canvasRenderer = new mh(null);
    this.__canvasRenderer.__isDOM = !0;
  };
  p["openfl.display.DOMRenderer"] = Tk;
  Tk.__name__ = ["openfl", "display", "DOMRenderer"];
  Tk.__super__ = sf;
  Tk.prototype = x(sf.prototype, {
    element: null,
    pixelRatio: null,
    __canvasRenderer: null,
    __clipRects: null,
    __currentClipRect: null,
    __numClipRects: null,
    __transformOriginProperty: null,
    __transformProperty: null,
    __vendorPrefix: null,
    __z: null,
    applyStyle: function (a, b) {
      null != a &&
        null != b &&
        ((null != a.__style && b.parentElement == this.element) ||
          this.__initializeElement(a, b),
        (a.__style = b.style),
        this.__updateClip(a),
        this.__applyStyle(a, !0, !0, !0));
    },
    clearStyle: function (a) {
      null != a &&
        a.parentElement == this.element &&
        this.element.removeChild(a);
    },
    __applyStyle: function (a, b, c, d) {
      var e = a.__style;
      b &&
        a.__renderTransformChanged &&
        ((b = a.__renderTransform),
        e.setProperty(
          this.__transformProperty,
          this.__roundPixels
            ? "matrix3d(" +
                b.a +
                ", " +
                b.b +
                ", 0, 0, " +
                b.c +
                ", " +
                b.d +
                ", 0, 0, 0, 0, 1, 0, " +
                (b.tx | 0) +
                ", " +
                (b.ty | 0) +
                ", 0, 1)"
            : "matrix3d(" +
                b.a +
                ", " +
                b.b +
                ", 0, 0, " +
                b.c +
                ", " +
                b.d +
                ", 0, 0, 0, 0, 1, 0, " +
                b.tx +
                ", " +
                b.ty +
                ", 0, 1)",
          null
        ));
      a.__worldZ != ++this.__z &&
        ((a.__worldZ = this.__z),
        e.setProperty(
          "z-index",
          null == a.__worldZ ? "null" : "" + a.__worldZ,
          null
        ));
      c &&
        a.__worldAlphaChanged &&
        (1 > a.__worldAlpha
          ? e.setProperty(
              "opacity",
              null == a.__worldAlpha ? "null" : "" + a.__worldAlpha,
              null
            )
          : e.removeProperty("opacity"));
      d &&
        a.__worldClipChanged &&
        (null == a.__worldClip
          ? e.removeProperty("clip")
          : ((a = a.__worldClip),
            e.setProperty(
              "clip",
              "rect(" +
                a.y +
                "px, " +
                a.get_right() +
                "px, " +
                a.get_bottom() +
                "px, " +
                a.x +
                "px)",
              null
            )));
    },
    __initializeElement: function (a, b) {
      var c = (a.__style = b.style);
      c.setProperty("position", "absolute", null);
      c.setProperty("top", "0", null);
      c.setProperty("left", "0", null);
      c.setProperty(this.__transformOriginProperty, "0 0 0", null);
      this.element.appendChild(b);
      a.__worldAlphaChanged = !0;
      a.__renderTransformChanged = !0;
      a.__worldVisibleChanged = !0;
      a.__worldClipChanged = !0;
      a.__worldClip = null;
      a.__worldZ = -1;
    },
    __popMask: function () {
      this.__popMaskRect();
    },
    __popMaskObject: function (a, b) {
      null == b && (b = !0);
      null != a.__mask && this.__popMask();
      b && null != a.__scrollRect && this.__popMaskRect();
    },
    __popMaskRect: function () {
      0 < this.__numClipRects &&
        (this.__numClipRects--,
        (this.__currentClipRect =
          0 < this.__numClipRects
            ? this.__clipRects[this.__numClipRects - 1]
            : null));
    },
    __pushMask: function (a) {
      this.__pushMaskRect(a.getBounds(a), a.__renderTransform);
    },
    __pushMaskObject: function (a, b) {
      null == b && (b = !0);
      b &&
        null != a.__scrollRect &&
        this.__pushMaskRect(a.__scrollRect, a.__renderTransform);
      null != a.__mask && this.__pushMask(a.__mask);
    },
    __pushMaskRect: function (a, b) {
      this.__numClipRects == this.__clipRects.length &&
        (this.__clipRects[this.__numClipRects] = new W());
      var c = this.__clipRects[this.__numClipRects];
      a.__transform(c, b);
      0 < this.__numClipRects &&
        ((a = this.__clipRects[this.__numClipRects - 1]),
        c.__contract(a.x, a.y, a.width, a.height));
      0 > c.height && (c.height = 0);
      0 > c.width && (c.width = 0);
      this.__currentClipRect = c;
      this.__numClipRects++;
    },
    __render: function (a) {
      this.element.style.background = this.__stage.__transparent
        ? "none"
        : this.__stage.__colorString;
      this.__z = 1;
      a.__renderDOM(this);
    },
    __setBlendMode: function (a) {
      null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
      this.__blendMode != a && (this.__blendMode = a);
    },
    __updateClip: function (a) {
      if (null == this.__currentClipRect)
        (a.__worldClipChanged = null != a.__worldClip), (a.__worldClip = null);
      else {
        null == a.__worldClip && (a.__worldClip = new W());
        var b = W.__pool.get(),
          c = ya.__pool.get();
        c.copyFrom(a.__renderTransform);
        c.invert();
        this.__currentClipRect.__transform(b, c);
        b.equals(a.__worldClip)
          ? (a.__worldClipChanged = !1)
          : (a.__worldClip.copyFrom(b), (a.__worldClipChanged = !0));
        W.__pool.release(b);
        ya.__pool.release(c);
      }
    },
    __class__: Tk,
  });
  var Yn = function (a) {
    null == this.__glFragmentSource &&
      (this.__glFragmentSource =
        "varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\t\t\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec2 openfl_TextureSize;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\t\t\n\t\tif (color.a == 0.0) {\n\t\t\t\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\t\t\t\n\t\t} else if (openfl_HasColorTransform) {\n\t\t\t\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\t\t\t\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\t\t\t\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\t\t\t\n\t\t\tif (color.a > 0.0) {\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\t\t\t\n\t\t}\n\t\t\t\n\t\t}");
    null == this.__glVertexSource &&
      (this.__glVertexSource =
        "attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\t\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\t\t\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\t\t\n\t\tif (openfl_HasColorTransform) {\n\t\t\t\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\t\t\t\n\t\t}\n\t\t\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\t\n\t\t}");
    Bf.call(this, a);
    this.__isGenerated = !0;
    this.__initGL();
  };
  p["openfl.display.DisplayObjectShader"] = Yn;
  Yn.__name__ = ["openfl", "display", "DisplayObjectShader"];
  Yn.__super__ = Bf;
  Yn.prototype = x(Bf.prototype, {
    openfl_Alpha: null,
    openfl_ColorMultiplier: null,
    openfl_ColorOffset: null,
    openfl_Position: null,
    openfl_TextureCoord: null,
    openfl_Matrix: null,
    openfl_HasColorTransform: null,
    openfl_TextureSize: null,
    openfl_Texture: null,
    __class__: Yn,
  });
  var Zn = function (a, b) {
    db.call(this);
    this.__name = a;
    this.__frame = b;
  };
  p["openfl.display.FrameLabel"] = Zn;
  Zn.__name__ = ["openfl", "display", "FrameLabel"];
  Zn.__super__ = db;
  Zn.prototype = x(db.prototype, {
    __frame: null,
    __name: null,
    get_frame: function () {
      return this.__frame;
    },
    get_name: function () {
      return this.__name;
    },
    __class__: Zn,
    __properties__: { get_name: "get_name", get_frame: "get_frame" },
  });
  var Fj = {};
  p["openfl.display._GradientType.GradientType_Impl_"] = Fj;
  Fj.__name__ = ["openfl", "display", "_GradientType", "GradientType_Impl_"];
  Fj.fromInt = function (a) {
    return a;
  };
  Fj.fromString = function (a) {
    switch (a) {
      case "linear":
        return 0;
      case "radial":
        return 1;
      default:
        return null;
    }
  };
  Fj.toInt = function (a) {
    return a;
  };
  Fj.toString = function (a) {
    switch (a) {
      case 0:
        return "linear";
      case 1:
        return "radial";
      default:
        return null;
    }
  };
  var hf = function (a) {
    this.__dirty = !0;
    this.__owner = a;
    this.__commands = new Ue();
    this.__positionY = this.__positionX = this.__strokePadding = 0;
    this.__renderTransform = new ya();
    this.__usedShaderBuffers = new yf();
    this.__worldTransform = new ya();
    this.__height = this.__width = 0;
    this.__shaderBufferPool = new Fg(function () {
      return new tq();
    });
    this.moveTo(0, 0);
  };
  p["openfl.display.Graphics"] = hf;
  hf.__name__ = ["openfl", "display", "Graphics"];
  hf.prototype = {
    __bounds: null,
    __commands: null,
    __dirty: null,
    __height: null,
    __managed: null,
    __positionX: null,
    __positionY: null,
    __quadBuffer: null,
    __renderTransform: null,
    __shaderBufferPool: null,
    __strokePadding: null,
    __transformDirty: null,
    __triangleIndexBuffer: null,
    __triangleIndexBufferCount: null,
    __triangleIndexBufferData: null,
    __usedShaderBuffers: null,
    __vertexBuffer: null,
    __vertexBufferCount: null,
    __vertexBufferCountUVT: null,
    __vertexBufferData: null,
    __vertexBufferDataUVT: null,
    __vertexBufferUVT: null,
    __visible: null,
    __owner: null,
    __width: null,
    __worldTransform: null,
    __canvas: null,
    __context: null,
    __bitmap: null,
    beginBitmapFill: function (a, b, c, d) {
      null == d && (d = !1);
      null == c && (c = !0);
      this.__commands.beginBitmapFill(a, null != b ? b.clone() : null, c, d);
      this.__visible = !0;
    },
    beginFill: function (a, b) {
      null == b && (b = 1);
      null == a && (a = 0);
      this.__commands.beginFill(a & 16777215, b);
      0 < b && (this.__visible = !0);
    },
    beginGradientFill: function (a, b, c, d, e, f, g, h) {
      null == h && (h = 0);
      null == g && (g = 1);
      null == f && (f = 0);
      if (null != b && 0 != b.length) {
        if (null == c) {
          c = [];
          for (var n = 0, k = b.length; n < k; ) n++, c.push(1);
        }
        if (null == d)
          for (d = [], n = 0, k = b.length; n < k; ) {
            var m = n++;
            d.push(Math.ceil((m / b.length) * 255));
          }
        if (!(c.length < b.length || d.length < b.length))
          for (
            this.__commands.beginGradientFill(a, b, c, d, e, f, g, h), a = 0;
            a < c.length;

          )
            if (((b = c[a]), ++a, 0 < b)) {
              this.__visible = !0;
              break;
            }
      }
    },
    beginShaderFill: function (a, b) {
      null != a &&
        ((b = this.__shaderBufferPool.get()),
        this.__usedShaderBuffers.add(b),
        b.update(a),
        this.__commands.beginShaderFill(b));
    },
    clear: function () {
      for (var a = this.__usedShaderBuffers.h; null != a; ) {
        var b = a.item;
        a = a.next;
        this.__shaderBufferPool.release(b);
      }
      this.__usedShaderBuffers.clear();
      this.__commands.clear();
      this.__strokePadding = 0;
      null != this.__bounds &&
        (this.set___dirty(!0),
        (this.__transformDirty = !0),
        (this.__bounds = null));
      this.__visible = !1;
      this.__positionY = this.__positionX = 0;
      this.moveTo(0, 0);
    },
    copyFrom: function (a) {
      this.__bounds = null != a.__bounds ? a.__bounds.clone() : null;
      this.__commands = a.__commands.copy();
      this.set___dirty(!0);
      this.__strokePadding = a.__strokePadding;
      this.__positionX = a.__positionX;
      this.__positionY = a.__positionY;
      this.__transformDirty = !0;
      this.__visible = a.__visible;
    },
    cubicCurveTo: function (a, b, c, d, e, f) {
      this.__inflateBounds(
        this.__positionX - this.__strokePadding,
        this.__positionY - this.__strokePadding
      );
      this.__inflateBounds(
        this.__positionX + this.__strokePadding,
        this.__positionY + this.__strokePadding
      );
      var g;
      var h = (g = e);
      if (
        !((a < e && a > this.__positionX) || (a > e && a < this.__positionX)) ||
        !((c < e && c > this.__positionX) || (c > e && c < this.__positionX))
      ) {
        var n = 2 * this.__positionX - 4 * a + 2 * c;
        var k = a - this.__positionX,
          m = -this.__positionX + 3 * a + e - 3 * c;
        var l = (-n + Math.sqrt(n * n - 4 * k * m)) / (2 * m);
        n = (-n - Math.sqrt(n * n - 4 * k * m)) / (2 * m);
        0 < l &&
          1 > l &&
          (g = this.__calculateBezierCubicPoint(l, this.__positionX, a, c, e));
        0 < n &&
          1 > n &&
          (h = this.__calculateBezierCubicPoint(n, this.__positionX, a, c, e));
      }
      n = l = f;
      if (
        !((b < f && b > this.__positionX) || (b > f && b < this.__positionX)) ||
        !((d < f && d > this.__positionX) || (d > f && d < this.__positionX))
      ) {
        m = 2 * this.__positionX - 4 * b + 2 * d;
        var p = b - this.__positionX,
          q = -this.__positionX + 3 * b + f - 3 * d;
        k = (-m + Math.sqrt(m * m - 4 * p * q)) / (2 * q);
        m = (-m - Math.sqrt(m * m - 4 * p * q)) / (2 * q);
        0 < k &&
          1 > k &&
          (l = this.__calculateBezierCubicPoint(k, this.__positionX, b, d, f));
        0 < m &&
          1 > m &&
          (n = this.__calculateBezierCubicPoint(m, this.__positionX, b, d, f));
      }
      this.__inflateBounds(g - this.__strokePadding, l - this.__strokePadding);
      this.__inflateBounds(g + this.__strokePadding, l + this.__strokePadding);
      this.__inflateBounds(h - this.__strokePadding, n - this.__strokePadding);
      this.__inflateBounds(h + this.__strokePadding, n + this.__strokePadding);
      this.__positionX = e;
      this.__positionY = f;
      this.__inflateBounds(
        this.__positionX - this.__strokePadding,
        this.__positionY - this.__strokePadding
      );
      this.__inflateBounds(
        this.__positionX + this.__strokePadding,
        this.__positionY + this.__strokePadding
      );
      this.__commands.cubicCurveTo(a, b, c, d, e, f);
      this.set___dirty(!0);
    },
    curveTo: function (a, b, c, d) {
      this.__inflateBounds(
        this.__positionX - this.__strokePadding,
        this.__positionY - this.__strokePadding
      );
      this.__inflateBounds(
        this.__positionX + this.__strokePadding,
        this.__positionY + this.__strokePadding
      );
      var e =
        (a < c && a > this.__positionX) || (a > c && a < this.__positionX)
          ? c
          : this.__calculateBezierQuadPoint(
              (this.__positionX - a) / (this.__positionX - 2 * a + c),
              this.__positionX,
              a,
              c
            );
      var f =
        (b < d && b > this.__positionY) || (b > d && b < this.__positionY)
          ? d
          : this.__calculateBezierQuadPoint(
              (this.__positionY - b) / (this.__positionY - 2 * b + d),
              this.__positionY,
              b,
              d
            );
      this.__inflateBounds(e - this.__strokePadding, f - this.__strokePadding);
      this.__inflateBounds(e + this.__strokePadding, f + this.__strokePadding);
      this.__positionX = c;
      this.__positionY = d;
      this.__commands.curveTo(a, b, c, d);
      this.set___dirty(!0);
    },
    drawCircle: function (a, b, c) {
      0 >= c ||
        (this.__inflateBounds(
          a - c - this.__strokePadding,
          b - c - this.__strokePadding
        ),
        this.__inflateBounds(
          a + c + this.__strokePadding,
          b + c + this.__strokePadding
        ),
        this.__commands.drawCircle(a, b, c),
        this.set___dirty(!0));
    },
    drawEllipse: function (a, b, c, d) {
      0 >= c ||
        0 >= d ||
        (this.__inflateBounds(
          a - this.__strokePadding,
          b - this.__strokePadding
        ),
        this.__inflateBounds(
          a + c + this.__strokePadding,
          b + d + this.__strokePadding
        ),
        this.__commands.drawEllipse(a, b, c, d),
        this.set___dirty(!0));
    },
    drawGraphicsData: function (a) {
      for (var b, c, d = 0; d < a.get_length(); )
        switch (((c = a.get(d)), ++d, c.__graphicsDataType)) {
          case rb.STROKE:
            if (null != c.fill) {
              var e = c.thickness;
              isNaN(e) && (e = null);
              switch (c.fill.__graphicsFillType) {
                case vd.SOLID_FILL:
                  b = c.fill;
                  this.lineStyle(
                    e,
                    b.color,
                    b.alpha,
                    c.pixelHinting,
                    c.scaleMode,
                    c.caps,
                    c.joints,
                    c.miterLimit
                  );
                  break;
                case vd.GRADIENT_FILL:
                  b = c.fill;
                  this.lineStyle(
                    e,
                    0,
                    1,
                    c.pixelHinting,
                    c.scaleMode,
                    c.caps,
                    c.joints,
                    c.miterLimit
                  );
                  this.lineGradientStyle(
                    b.type,
                    b.colors,
                    b.alphas,
                    b.ratios,
                    b.matrix,
                    b.spreadMethod,
                    b.interpolationMethod,
                    b.focalPointRatio
                  );
                  break;
                case vd.BITMAP_FILL:
                  (b = c.fill),
                    this.lineStyle(
                      e,
                      0,
                      1,
                      c.pixelHinting,
                      c.scaleMode,
                      c.caps,
                      c.joints,
                      c.miterLimit
                    ),
                    this.lineBitmapStyle(
                      b.bitmapData,
                      b.matrix,
                      b.repeat,
                      b.smooth
                    );
              }
            } else this.lineStyle();
            break;
          case rb.SOLID:
            b = c;
            this.beginFill(b.color, b.alpha);
            break;
          case rb.GRADIENT:
            b = c;
            this.beginGradientFill(
              b.type,
              b.colors,
              b.alphas,
              b.ratios,
              b.matrix,
              b.spreadMethod,
              b.interpolationMethod,
              b.focalPointRatio
            );
            break;
          case rb.PATH:
            this.drawPath(c.commands, c.data, c.winding);
            break;
          case rb.BITMAP:
            b = c;
            this.beginBitmapFill(b.bitmapData, b.matrix, b.repeat, b.smooth);
            break;
          case rb.END:
            this.endFill();
            break;
          case rb.QUAD_PATH:
            this.drawQuads(c.rects, c.indices, c.transforms);
            break;
          case rb.TRIANGLE_PATH:
            this.drawTriangles(c.vertices, c.indices, c.uvtData, c.culling);
            break;
          case rb.SHADER:
            this.beginShaderFill(c.shader, c.matrix);
        }
    },
    drawPath: function (a, b, c) {
      null == c && (c = 0);
      var d = 0;
      1 == c && this.__commands.windingNonZero();
      c = 0;
      try {
        for (; c < a.get_length(); ) {
          var e = a.get(c);
          ++c;
          switch (e) {
            case 1:
              this.moveTo(b.get(d), b.get(d + 1));
              d += 2;
              break;
            case 2:
              this.lineTo(b.get(d), b.get(d + 1));
              d += 2;
              break;
            case 3:
              this.curveTo(b.get(d), b.get(d + 1), b.get(d + 2), b.get(d + 3));
              d += 4;
              break;
            case 4:
              throw (this.moveTo(b.get(d + 2), b.get(d + 3)), "__break__");
            case 5:
              throw (this.lineTo(b.get(d + 2), b.get(d + 3)), "__break__");
            case 6:
              this.cubicCurveTo(
                b.get(d),
                b.get(d + 1),
                b.get(d + 2),
                b.get(d + 3),
                b.get(d + 4),
                b.get(d + 5)
              ),
                (d += 6);
          }
        }
      } catch (f) {
        if ("__break__" != f) throw f;
      }
    },
    drawQuads: function (a, b, c) {
      if (null != a) {
        var d = null != b,
          e = !1,
          f = !1,
          g = d ? b.get_length() : Math.floor(a.get_length() / 4);
        if (0 != g) {
          null != c &&
            (c.get_length() >= 6 * g
              ? (f = e = !0)
              : c.get_length() >= 4 * g
              ? (e = !0)
              : c.get_length() >= 2 * g && (f = !0));
          for (
            var h = W.__pool.get(),
              n = ya.__pool.get(),
              k = Infinity,
              m = Infinity,
              l = -Infinity,
              p = -Infinity,
              q,
              r = 0;
            r < g;

          ) {
            var t = r++;
            q = d ? 4 * b.get(t) : 4 * t;
            0 > q ||
              (h.setTo(a.get(q), a.get(q + 1), a.get(q + 2), a.get(q + 3)),
              0 >= h.width ||
                0 >= h.height ||
                (e && f
                  ? ((q = 6 * t),
                    n.setTo(
                      c.get(q),
                      c.get(q + 1),
                      c.get(q + 2),
                      c.get(q + 3),
                      c.get(q + 4),
                      c.get(q + 5)
                    ))
                  : e
                  ? ((q = 4 * t),
                    n.setTo(
                      c.get(q),
                      c.get(q + 1),
                      c.get(q + 2),
                      c.get(q + 3),
                      h.x,
                      h.y
                    ))
                  : f
                  ? ((q = 2 * t), (n.tx = c.get(q)), (n.ty = c.get(q + 1)))
                  : ((n.tx = h.x), (n.ty = h.y)),
                h.__transform(h, n),
                k > h.x && (k = h.x),
                m > h.y && (m = h.y),
                l < h.get_right() && (l = h.get_right()),
                p < h.get_bottom() && (p = h.get_bottom())));
          }
          this.__inflateBounds(k, m);
          this.__inflateBounds(l, p);
          this.__commands.drawQuads(a, b, c);
          this.set___dirty(!0);
          this.__visible = !0;
          W.__pool.release(h);
          ya.__pool.release(n);
        }
      }
    },
    drawRect: function (a, b, c, d) {
      if (0 != c || 0 != d) {
        var e = 0 > c ? -1 : 1,
          f = 0 > d ? -1 : 1;
        this.__inflateBounds(
          a - this.__strokePadding * e,
          b - this.__strokePadding * f
        );
        this.__inflateBounds(
          a + c + this.__strokePadding * e,
          b + d + this.__strokePadding * f
        );
        this.__commands.drawRect(a, b, c, d);
        this.set___dirty(!0);
      }
    },
    drawRoundRect: function (a, b, c, d, e, f) {
      if (0 != c || 0 != d) {
        var g = 0 > c ? -1 : 1,
          h = 0 > d ? -1 : 1;
        this.__inflateBounds(
          a - this.__strokePadding * g,
          b - this.__strokePadding * h
        );
        this.__inflateBounds(
          a + c + this.__strokePadding * g,
          b + d + this.__strokePadding * h
        );
        this.__commands.drawRoundRect(a, b, c, d, e, f);
        this.set___dirty(!0);
      }
    },
    drawRoundRectComplex: function (a, b, c, d, e, f, g, h) {
      if (!(0 >= c || 0 >= d)) {
        this.__inflateBounds(
          a - this.__strokePadding,
          b - this.__strokePadding
        );
        this.__inflateBounds(
          a + c + this.__strokePadding,
          b + d + this.__strokePadding
        );
        var n = a + c,
          k = b + d;
        c = c < d ? 2 * c : 2 * d;
        e < c || (e = c);
        f < c || (f = c);
        g < c || (g = c);
        h < c || (h = c);
        c = 1 - Math.sin((Math.PI / 180) * 45);
        d = 1 - Math.tan((Math.PI / 180) * 22.5);
        var m = h * c,
          l = h * d;
        this.moveTo(n, k - h);
        this.curveTo(n, k - l, n - m, k - m);
        this.curveTo(n - l, k, n - h, k);
        m = g * c;
        l = g * d;
        this.lineTo(a + g, k);
        this.curveTo(a + l, k, a + m, k - m);
        this.curveTo(a, k - l, a, k - g);
        m = e * c;
        l = e * d;
        this.lineTo(a, b + e);
        this.curveTo(a, b + l, a + m, b + m);
        this.curveTo(a + l, b, a + e, b);
        m = f * c;
        l = f * d;
        this.lineTo(n - f, b);
        this.curveTo(n - l, b, n - m, b + m);
        this.curveTo(n, b + l, n, b + f);
        this.lineTo(n, k - h);
        this.set___dirty(!0);
      }
    },
    drawTriangles: function (a, b, c, d) {
      null == d && (d = 1);
      if (null != a && 0 != a.get_length()) {
        var e = (a.get_length() / 2) | 0;
        if (null == b) {
          if (0 != e % 3)
            throw new v(new Si("Not enough vertices to close a triangle."));
          b = Oa.toIntVector(null);
          for (var f = 0; f < e; ) {
            var g = f++;
            b.push(g);
          }
        }
        null == d && (d = 1);
        for (
          var h, n = (g = Infinity), k = -Infinity, m = -Infinity, l = 0;
          l < e;

        )
          (h = l++),
            (f = a.get(2 * h)),
            (h = a.get(2 * h + 1)),
            g > f && (g = f),
            n > h && (n = h),
            k < f && (k = f),
            m < h && (m = h);
        this.__inflateBounds(g, n);
        this.__inflateBounds(k, m);
        this.__commands.drawTriangles(a, b, c, d);
        this.set___dirty(!0);
        this.__visible = !0;
      }
    },
    endFill: function () {
      this.__commands.endFill();
    },
    lineBitmapStyle: function (a, b, c, d) {
      null == d && (d = !1);
      null == c && (c = !0);
      this.__commands.lineBitmapStyle(a, null != b ? b.clone() : null, c, d);
    },
    lineGradientStyle: function (a, b, c, d, e, f, g, h) {
      null == h && (h = 0);
      null == g && (g = 1);
      null == f && (f = 0);
      this.__commands.lineGradientStyle(a, b, c, d, e, f, g, h);
    },
    lineStyle: function (a, b, c, d, e, f, g, h) {
      null == h && (h = 3);
      null == e && (e = 2);
      null == d && (d = !1);
      null == c && (c = 1);
      null == b && (b = 0);
      null != a &&
        (1 == g
          ? a > this.__strokePadding && (this.__strokePadding = a)
          : a / 2 > this.__strokePadding && (this.__strokePadding = a / 2));
      this.__commands.lineStyle(a, b, c, d, e, f, g, h);
      null != a && (this.__visible = !0);
    },
    lineTo: function (a, b) {
      isFinite(a) &&
        isFinite(b) &&
        (this.__inflateBounds(
          this.__positionX - this.__strokePadding,
          this.__positionY - this.__strokePadding
        ),
        this.__inflateBounds(
          this.__positionX + this.__strokePadding,
          this.__positionY + this.__strokePadding
        ),
        (this.__positionX = a),
        (this.__positionY = b),
        this.__inflateBounds(
          this.__positionX - this.__strokePadding,
          this.__positionY - this.__strokePadding
        ),
        this.__inflateBounds(
          this.__positionX + 2 * this.__strokePadding,
          this.__positionY + this.__strokePadding
        ),
        this.__commands.lineTo(a, b),
        this.set___dirty(!0));
    },
    moveTo: function (a, b) {
      this.__positionX = a;
      this.__positionY = b;
      this.__commands.moveTo(a, b);
    },
    overrideBlendMode: function (a) {
      null == a && (a = 10);
      this.__commands.overrideBlendMode(a);
    },
    readGraphicsData: function (a) {
      null == a && (a = !0);
      var b = Oa.toObjectVector(null);
      this.__owner.__readGraphicsData(b, a);
      return b;
    },
    __calculateBezierCubicPoint: function (a, b, c, d, e) {
      var f = 1 - a;
      return (
        b * f * f * f + 3 * c * a * f * f + 3 * d * f * a * a + e * a * a * a
      );
    },
    __calculateBezierQuadPoint: function (a, b, c, d) {
      var e = 1 - a;
      return e * e * b + 2 * e * a * c + a * a * d;
    },
    __cleanup: function () {
      null != this.__bounds &&
        null != this.__canvas &&
        (this.set___dirty(!0), (this.__transformDirty = !0));
      this.__context = this.__canvas = this.__bitmap = null;
    },
    __getBounds: function (a, b) {
      if (null != this.__bounds) {
        var c = W.__pool.get();
        this.__bounds.__transform(c, b);
        a.__expand(c.x, c.y, c.width, c.height);
        W.__pool.release(c);
      }
    },
    __hitTest: function (a, b, c, d) {
      if (null == this.__bounds) return !1;
      var e = d.a * d.d - d.b * d.c;
      e = 0 == e ? -d.tx : (1 / e) * (d.c * (d.ty - b) + d.d * (a - d.tx));
      var f = d.a * d.d - d.b * d.c;
      a = 0 == f ? -d.ty : (1 / f) * (d.a * (b - d.ty) + d.b * (d.tx - a));
      return e > this.__bounds.x &&
        a > this.__bounds.y &&
        this.__bounds.contains(e, a)
        ? c
          ? w.hitTest(this, e, a)
          : !0
        : !1;
    },
    __inflateBounds: function (a, b) {
      null == this.__bounds
        ? ((this.__bounds = new W(a, b, 0, 0)), (this.__transformDirty = !0))
        : (a < this.__bounds.x &&
            ((this.__bounds.width += this.__bounds.x - a),
            (this.__bounds.x = a),
            (this.__transformDirty = !0)),
          b < this.__bounds.y &&
            ((this.__bounds.height += this.__bounds.y - b),
            (this.__bounds.y = b),
            (this.__transformDirty = !0)),
          a > this.__bounds.x + this.__bounds.width &&
            (this.__bounds.width = a - this.__bounds.x),
          b > this.__bounds.y + this.__bounds.height &&
            (this.__bounds.height = b - this.__bounds.y));
    },
    __readGraphicsData: function (a) {
      for (
        var b = new vg(this.__commands),
          c = null,
          d,
          e = this.__commands.types,
          f = 0,
          g = this.__commands.get_length();
        f < g;

      ) {
        d = f++;
        d = e[d];
        switch (d[1]) {
          case 4:
          case 5:
          case 6:
          case 7:
          case 9:
          case 10:
          case 17:
          case 18:
            null == c && (c = new fh());
            break;
          default:
            null != c && (a.push(c), (c = null));
        }
        switch (d[1]) {
          case 0:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.BEGIN_BITMAP_FILL;
            d = b;
            a.push(
              new $n(
                d.buffer.o[d.oPos],
                d.buffer.o[d.oPos + 1],
                d.buffer.b[d.bPos],
                d.buffer.b[d.bPos + 1]
              )
            );
            break;
          case 1:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.BEGIN_FILL;
            d = b;
            a.push(new Uk(d.buffer.i[d.iPos], 1));
            break;
          case 2:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.BEGIN_GRADIENT_FILL;
            d = b;
            a.push(
              new ao(
                d.buffer.o[d.oPos],
                d.buffer.ii[d.iiPos],
                d.buffer.ff[d.ffPos],
                d.buffer.ii[d.iiPos + 1],
                d.buffer.o[d.oPos + 1],
                d.buffer.o[d.oPos + 2],
                d.buffer.o[d.oPos + 3],
                d.buffer.f[d.fPos]
              )
            );
            break;
          case 3:
            break;
          case 4:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.CUBIC_CURVE_TO;
            d = b;
            c.cubicCurveTo(
              d.buffer.f[d.fPos],
              d.buffer.f[d.fPos + 1],
              d.buffer.f[d.fPos + 2],
              d.buffer.f[d.fPos + 3],
              d.buffer.f[d.fPos + 4],
              d.buffer.f[d.fPos + 5]
            );
            break;
          case 5:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.CURVE_TO;
            d = b;
            c.curveTo(
              d.buffer.f[d.fPos],
              d.buffer.f[d.fPos + 1],
              d.buffer.f[d.fPos + 2],
              d.buffer.f[d.fPos + 3]
            );
            break;
          case 6:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.DRAW_CIRCLE;
            d = b;
            c.__drawCircle(
              d.buffer.f[d.fPos],
              d.buffer.f[d.fPos + 1],
              d.buffer.f[d.fPos + 2]
            );
            break;
          case 7:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.DRAW_ELLIPSE;
            d = b;
            c.__drawEllipse(
              d.buffer.f[d.fPos],
              d.buffer.f[d.fPos + 1],
              d.buffer.f[d.fPos + 2],
              d.buffer.f[d.fPos + 3]
            );
            break;
          case 9:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.DRAW_RECT;
            d = b;
            c.__drawRect(
              d.buffer.f[d.fPos],
              d.buffer.f[d.fPos + 1],
              d.buffer.f[d.fPos + 2],
              d.buffer.f[d.fPos + 3]
            );
            break;
          case 10:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.DRAW_ROUND_RECT;
            d = b;
            c.__drawRoundRect(
              d.buffer.f[d.fPos],
              d.buffer.f[d.fPos + 1],
              d.buffer.f[d.fPos + 2],
              d.buffer.f[d.fPos + 3],
              d.buffer.f[d.fPos + 4],
              null != d.buffer.o[d.oPos]
                ? d.buffer.o[d.oPos]
                : d.buffer.f[d.fPos + 4]
            );
            break;
          case 13:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.END_FILL;
            a.push(new bo());
            break;
          case 14:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.LINE_BITMAP_STYLE;
            c = null;
            break;
          case 15:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.LINE_GRADIENT_STYLE;
            break;
          case 16:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.LINE_STYLE;
            var h = b;
            d = new co(
              h.buffer.o[h.oPos],
              h.buffer.b[h.bPos],
              h.buffer.o[h.oPos + 1],
              h.buffer.o[h.oPos + 2],
              h.buffer.o[h.oPos + 3],
              h.buffer.f[h.fPos + 1]
            );
            d.fill = new Uk(h.buffer.i[h.iPos], h.buffer.f[h.fPos]);
            a.push(d);
            break;
          case 17:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.LINE_TO;
            d = b;
            c.lineTo(d.buffer.f[d.fPos], d.buffer.f[d.fPos + 1]);
            break;
          case 18:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = K.MOVE_TO;
            d = b;
            c.moveTo(d.buffer.f[d.fPos], d.buffer.f[d.fPos + 1]);
            break;
          default:
            switch (b.prev[1]) {
              case 0:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 1:
                b.iPos += 1;
                b.fPos += 1;
                break;
              case 2:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 3:
                b.oPos += 1;
                break;
              case 4:
                b.fPos += 6;
                break;
              case 5:
                b.fPos += 4;
                break;
              case 6:
                b.fPos += 3;
                break;
              case 7:
                b.fPos += 4;
                break;
              case 8:
                b.oPos += 3;
                break;
              case 9:
                b.fPos += 4;
                break;
              case 10:
                b.fPos += 5;
                b.oPos += 1;
                break;
              case 12:
                b.oPos += 4;
                break;
              case 14:
                b.oPos += 2;
                b.bPos += 2;
                break;
              case 15:
                b.oPos += 4;
                b.iiPos += 2;
                b.ffPos += 1;
                b.fPos += 1;
                break;
              case 16:
                b.oPos += 4;
                b.iPos += 1;
                b.fPos += 2;
                b.bPos += 1;
                break;
              case 17:
                b.fPos += 2;
                break;
              case 18:
                b.fPos += 2;
                break;
              case 19:
                b.oPos += 1;
                break;
              case 20:
                b.oPos += 1;
            }
            b.prev = d;
        }
      }
      null != c && a.push(c);
    },
    __update: function (a) {
      if (
        !(
          null == this.__bounds ||
          0 >= this.__bounds.width ||
          0 >= this.__bounds.height
        )
      ) {
        var b = this.__owner.__renderTransform;
        if (null != b) {
          var c = 0 == b.b ? Math.abs(b.a) : Math.sqrt(b.a * b.a + b.b * b.b);
          var d = 0 == b.c ? Math.abs(b.d) : Math.sqrt(b.c * b.c + b.d * b.d);
          null != a &&
            ((c = 0 == a.b ? c * a.a : c * Math.sqrt(a.a * a.a + a.b * a.b)),
            (d = 0 == a.c ? d * a.d : d * Math.sqrt(a.c * a.c + a.d * a.d)));
          a = this.__bounds.width * c;
          d *= this.__bounds.height;
          if (1 > a || 1 > d)
            (1 <= this.__width || 1 <= this.__height) && this.set___dirty(!0),
              (this.__height = this.__width = 0);
          else {
            null != hf.maxTextureWidth &&
              a > hf.maxTextureWidth &&
              (a = hf.maxTextureWidth);
            null != hf.maxTextureWidth &&
              d > hf.maxTextureHeight &&
              (d = hf.maxTextureHeight);
            this.__renderTransform.a = a / this.__bounds.width;
            this.__renderTransform.d = d / this.__bounds.height;
            c = 1 / this.__renderTransform.a;
            var e = 1 / this.__renderTransform.d;
            this.__worldTransform.a = c * b.a;
            this.__worldTransform.b = c * b.b;
            this.__worldTransform.c = e * b.c;
            this.__worldTransform.d = e * b.d;
            e = this.__bounds.x;
            var f = this.__bounds.y;
            c = e * b.a + f * b.c + b.tx;
            b = e * b.b + f * b.d + b.ty;
            this.__worldTransform.tx = Math.floor(c);
            this.__worldTransform.ty = Math.floor(b);
            e = this.__worldTransform;
            f = e.a * e.d - e.b * e.c;
            this.__renderTransform.tx =
              0 == f ? -e.tx : (1 / f) * (e.c * (e.ty - b) + e.d * (c - e.tx));
            e = this.__worldTransform;
            f = e.a * e.d - e.b * e.c;
            this.__renderTransform.ty =
              0 == f ? -e.ty : (1 / f) * (e.a * (b - e.ty) + e.b * (e.tx - c));
            a = Math.ceil(a + this.__renderTransform.tx);
            d = Math.ceil(d + this.__renderTransform.ty);
            (a == this.__width && d == this.__height) || this.set___dirty(!0);
            this.__width = a;
            this.__height = d;
          }
        }
      }
    },
    set___dirty: function (a) {
      if (a && null != this.__owner) {
        var b = this.__owner;
        b.__renderDirty || ((b.__renderDirty = !0), b.__setParentRenderDirty());
      }
      return (this.__dirty = a);
    },
    __class__: hf,
    __properties__: { set___dirty: "set___dirty" },
  };
  var Li = function () {};
  p["openfl.display.IGraphicsFill"] = Li;
  Li.__name__ = ["openfl", "display", "IGraphicsFill"];
  Li.prototype = { __graphicsFillType: null, __class__: Li };
  var yg = function () {};
  p["openfl.display.IGraphicsData"] = yg;
  yg.__name__ = ["openfl", "display", "IGraphicsData"];
  yg.prototype = { __graphicsDataType: null, __class__: yg };
  var $n = function (a, b, c, d) {
    null == d && (d = !1);
    null == c && (c = !0);
    this.bitmapData = a;
    this.matrix = b;
    this.repeat = c;
    this.smooth = d;
    this.__graphicsDataType = rb.BITMAP;
    this.__graphicsFillType = vd.BITMAP_FILL;
  };
  p["openfl.display.GraphicsBitmapFill"] = $n;
  $n.__name__ = ["openfl", "display", "GraphicsBitmapFill"];
  $n.__interfaces__ = [Li, yg];
  $n.prototype = {
    bitmapData: null,
    matrix: null,
    repeat: null,
    smooth: null,
    __graphicsDataType: null,
    __graphicsFillType: null,
    __class__: $n,
  };
  var bo = function () {
    this.__graphicsDataType = rb.END;
    this.__graphicsFillType = vd.END_FILL;
  };
  p["openfl.display.GraphicsEndFill"] = bo;
  bo.__name__ = ["openfl", "display", "GraphicsEndFill"];
  bo.__interfaces__ = [Li, yg];
  bo.prototype = {
    __graphicsDataType: null,
    __graphicsFillType: null,
    __class__: bo,
  };
  var ao = function (a, b, c, d, e, f, g, h) {
    null == h && (h = 0);
    null == a && (a = 0);
    null == f && (f = 0);
    null == g && (g = 1);
    this.type = a;
    this.colors = b;
    this.alphas = c;
    this.ratios = d;
    this.matrix = e;
    this.spreadMethod = f;
    this.interpolationMethod = g;
    this.focalPointRatio = h;
    this.__graphicsDataType = rb.GRADIENT;
    this.__graphicsFillType = vd.GRADIENT_FILL;
  };
  p["openfl.display.GraphicsGradientFill"] = ao;
  ao.__name__ = ["openfl", "display", "GraphicsGradientFill"];
  ao.__interfaces__ = [Li, yg];
  ao.prototype = {
    alphas: null,
    colors: null,
    focalPointRatio: null,
    interpolationMethod: null,
    matrix: null,
    ratios: null,
    spreadMethod: null,
    type: null,
    __graphicsDataType: null,
    __graphicsFillType: null,
    __class__: ao,
  };
  var Fq = function () {};
  p["openfl.display.IGraphicsPath"] = Fq;
  Fq.__name__ = ["openfl", "display", "IGraphicsPath"];
  var fh = function (a, b, c) {
    null == c && (c = 0);
    this.commands = a;
    this.data = b;
    this.winding = c;
    this.__graphicsDataType = rb.PATH;
  };
  p["openfl.display.GraphicsPath"] = fh;
  fh.__name__ = ["openfl", "display", "GraphicsPath"];
  fh.__interfaces__ = [Fq, yg];
  fh.prototype = {
    commands: null,
    data: null,
    winding: null,
    __graphicsDataType: null,
    cubicCurveTo: function (a, b, c, d, e, f) {
      null == this.commands && (this.commands = Oa.toIntVector(null));
      null == this.data && (this.data = Oa.toFloatVector(null));
      this.commands.push(6);
      this.data.push(a);
      this.data.push(b);
      this.data.push(c);
      this.data.push(d);
      this.data.push(e);
      this.data.push(f);
    },
    curveTo: function (a, b, c, d) {
      null == this.commands && (this.commands = Oa.toIntVector(null));
      null == this.data && (this.data = Oa.toFloatVector(null));
      this.commands.push(3);
      this.data.push(a);
      this.data.push(b);
      this.data.push(c);
      this.data.push(d);
    },
    lineTo: function (a, b) {
      null == this.commands && (this.commands = Oa.toIntVector(null));
      null == this.data && (this.data = Oa.toFloatVector(null));
      this.commands.push(2);
      this.data.push(a);
      this.data.push(b);
    },
    moveTo: function (a, b) {
      null == this.commands && (this.commands = Oa.toIntVector(null));
      null == this.data && (this.data = Oa.toFloatVector(null));
      this.commands.push(1);
      this.data.push(a);
      this.data.push(b);
    },
    wideLineTo: function (a, b) {
      null == this.commands && (this.commands = Oa.toIntVector(null));
      null == this.data && (this.data = Oa.toFloatVector(null));
      this.commands.push(2);
      this.data.push(a);
      this.data.push(b);
    },
    wideMoveTo: function (a, b) {
      null == this.commands && (this.commands = Oa.toIntVector(null));
      null == this.data && (this.data = Oa.toFloatVector(null));
      this.commands.push(1);
      this.data.push(a);
      this.data.push(b);
    },
    __drawCircle: function (a, b, c) {
      this.__drawRoundRect(a - c, b - c, 2 * c, 2 * c, 2 * c, 2 * c);
    },
    __drawEllipse: function (a, b, c, d) {
      this.__drawRoundRect(a, b, c, d, c, d);
    },
    __drawRect: function (a, b, c, d) {
      this.moveTo(a, b);
      this.lineTo(a + c, b);
      this.lineTo(a + c, b + d);
      this.lineTo(a, b + d);
      this.lineTo(a, b);
    },
    __drawRoundRect: function (a, b, c, d, e, f) {
      e *= 0.5;
      f *= 0.5;
      e > c / 2 && (e = c / 2);
      f > d / 2 && (f = d / 2);
      c = a + c;
      d = b + d;
      var g = -e + e * fh.SIN45,
        h = -e + e * fh.TAN22,
        n = -f + f * fh.SIN45,
        k = -f + f * fh.TAN22;
      this.moveTo(c, d - f);
      this.curveTo(c, d + k, c + g, d + n);
      this.curveTo(c + h, d, c - e, d);
      this.lineTo(a + e, d);
      this.curveTo(a - h, d, a - g, d + n);
      this.curveTo(a, d + k, a, d - f);
      this.lineTo(a, b + f);
      this.curveTo(a, b - k, a - g, b - n);
      this.curveTo(a - h, b, a + e, b);
      this.lineTo(c - e, b);
      this.curveTo(c + h, b, c + g, b - n);
      this.curveTo(c, b - k, c, b + f);
      this.lineTo(c, d - f);
    },
    __class__: fh,
  };
  var eo = {};
  p["openfl.display._GraphicsPathWinding.GraphicsPathWinding_Impl_"] = eo;
  eo.__name__ = [
    "openfl",
    "display",
    "_GraphicsPathWinding",
    "GraphicsPathWinding_Impl_",
  ];
  eo.fromString = function (a) {
    switch (a) {
      case "evenOdd":
        return 0;
      case "nonZero":
        return 1;
      default:
        return null;
    }
  };
  eo.toString = function (a) {
    switch (a) {
      case 0:
        return "evenOdd";
      case 1:
        return "nonZero";
      default:
        return null;
    }
  };
  var Gq = function (a, b, c) {
    this.rects = a;
    this.indices = b;
    this.transforms = c;
    this.__graphicsDataType = rb.QUAD_PATH;
  };
  p["openfl.display.GraphicsQuadPath"] = Gq;
  Gq.__name__ = ["openfl", "display", "GraphicsQuadPath"];
  Gq.__interfaces__ = [Fq, yg];
  Gq.prototype = {
    indices: null,
    rects: null,
    transforms: null,
    __graphicsDataType: null,
    __class__: Gq,
  };
  var fo = function (a) {
    null == this.__glFragmentSource &&
      (this.__glFragmentSource =
        "varying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\t\t\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\t\tuniform sampler2D bitmap;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvec4 color = texture2D (bitmap, openfl_TextureCoordv);\n\t\t\n\t\tif (color.a == 0.0) {\n\t\t\t\n\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\t\t\t\n\t\t} else if (openfl_HasColorTransform) {\n\t\t\t\n\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\t\t\t\n\t\t\tmat4 colorMultiplier = mat4 (0);\n\t\t\tcolorMultiplier[0][0] = openfl_ColorMultiplierv.x;\n\t\t\tcolorMultiplier[1][1] = openfl_ColorMultiplierv.y;\n\t\t\tcolorMultiplier[2][2] = openfl_ColorMultiplierv.z;\n\t\t\tcolorMultiplier[3][3] = 1.0; // openfl_ColorMultiplierv.w;\n\t\t\t\n\t\t\tcolor = clamp (openfl_ColorOffsetv + (color * colorMultiplier), 0.0, 1.0);\n\t\t\t\n\t\t\tif (color.a > 0.0) {\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a * openfl_Alphav, color.a * openfl_Alphav);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t} else {\n\t\t\t\n\t\t\tgl_FragColor = color * openfl_Alphav;\n\t\t\t\n\t\t}\n\t\t\t\n\t\t}");
    null == this.__glVertexSource &&
      (this.__glVertexSource =
        "attribute float openfl_Alpha;\n\t\tattribute vec4 openfl_ColorMultiplier;\n\t\tattribute vec4 openfl_ColorOffset;\n\t\tattribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\t\n\t\tvarying float openfl_Alphav;\n\t\tvarying vec4 openfl_ColorMultiplierv;\n\t\tvarying vec4 openfl_ColorOffsetv;\n\t\tvarying vec2 openfl_TextureCoordv;\n\t\t\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform bool openfl_HasColorTransform;\n\t\tuniform vec2 openfl_TextureSize;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\topenfl_Alphav = openfl_Alpha;\n\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\t\t\n\t\tif (openfl_HasColorTransform) {\n\t\t\t\n\t\t\topenfl_ColorMultiplierv = openfl_ColorMultiplier;\n\t\t\topenfl_ColorOffsetv = openfl_ColorOffset / 255.0;\n\t\t\t\n\t\t}\n\t\t\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\t\n\t\t}");
    Bf.call(this, a);
    this.__isGenerated = !0;
    this.__initGL();
  };
  p["openfl.display.GraphicsShader"] = fo;
  fo.__name__ = ["openfl", "display", "GraphicsShader"];
  fo.__super__ = Bf;
  fo.prototype = x(Bf.prototype, {
    openfl_Alpha: null,
    openfl_ColorMultiplier: null,
    openfl_ColorOffset: null,
    openfl_Position: null,
    openfl_TextureCoord: null,
    openfl_Matrix: null,
    openfl_HasColorTransform: null,
    openfl_TextureSize: null,
    bitmap: null,
    __class__: fo,
  });
  var Hq = function (a, b) {
    this.shader = a;
    this.matrix = b;
    this.__graphicsDataType = rb.SHADER;
    this.__graphicsFillType = vd.SHADER_FILL;
  };
  p["openfl.display.GraphicsShaderFill"] = Hq;
  Hq.__name__ = ["openfl", "display", "GraphicsShaderFill"];
  Hq.__interfaces__ = [Li, yg];
  Hq.prototype = {
    shader: null,
    matrix: null,
    __graphicsDataType: null,
    __graphicsFillType: null,
    __class__: Hq,
  };
  var Uk = function (a, b) {
    null == b && (b = 1);
    null == a && (a = 0);
    this.alpha = b;
    this.color = a;
    this.__graphicsDataType = rb.SOLID;
    this.__graphicsFillType = vd.SOLID_FILL;
  };
  p["openfl.display.GraphicsSolidFill"] = Uk;
  Uk.__name__ = ["openfl", "display", "GraphicsSolidFill"];
  Uk.__interfaces__ = [Li, yg];
  Uk.prototype = {
    alpha: null,
    color: null,
    __graphicsDataType: null,
    __graphicsFillType: null,
    __class__: Uk,
  };
  var Ut = function () {};
  p["openfl.display.IGraphicsStroke"] = Ut;
  Ut.__name__ = ["openfl", "display", "IGraphicsStroke"];
  var co = function (a, b, c, d, e, f, g) {
    null == f && (f = 3);
    null == e && (e = 2);
    null == d && (d = 0);
    null == c && (c = 2);
    null == b && (b = !1);
    null == a && (a = NaN);
    this.caps = d;
    this.fill = g;
    this.joints = e;
    this.miterLimit = f;
    this.pixelHinting = b;
    this.scaleMode = c;
    this.thickness = a;
    this.__graphicsDataType = rb.STROKE;
  };
  p["openfl.display.GraphicsStroke"] = co;
  co.__name__ = ["openfl", "display", "GraphicsStroke"];
  co.__interfaces__ = [Ut, yg];
  co.prototype = {
    caps: null,
    fill: null,
    joints: null,
    miterLimit: null,
    pixelHinting: null,
    scaleMode: null,
    thickness: null,
    __graphicsDataType: null,
    __class__: co,
  };
  var Iq = function (a, b, c, d) {
    null == d && (d = 1);
    this.vertices = a;
    this.indices = b;
    this.uvtData = c;
    this.culling = d;
    this.__graphicsDataType = rb.TRIANGLE_PATH;
  };
  p["openfl.display.GraphicsTrianglePath"] = Iq;
  Iq.__name__ = ["openfl", "display", "GraphicsTrianglePath"];
  Iq.__interfaces__ = [Fq, yg];
  Iq.prototype = {
    culling: null,
    indices: null,
    uvtData: null,
    vertices: null,
    __graphicsDataType: null,
    __class__: Iq,
  };
  var rb = (p["openfl.display.GraphicsDataType"] = {
    __ename__: ["openfl", "display", "GraphicsDataType"],
    __constructs__:
      "STROKE SOLID GRADIENT PATH BITMAP END QUAD_PATH TRIANGLE_PATH SHADER".split(
        " "
      ),
  });
  rb.STROKE = ["STROKE", 0];
  rb.STROKE.toString = M;
  rb.STROKE.__enum__ = rb;
  rb.SOLID = ["SOLID", 1];
  rb.SOLID.toString = M;
  rb.SOLID.__enum__ = rb;
  rb.GRADIENT = ["GRADIENT", 2];
  rb.GRADIENT.toString = M;
  rb.GRADIENT.__enum__ = rb;
  rb.PATH = ["PATH", 3];
  rb.PATH.toString = M;
  rb.PATH.__enum__ = rb;
  rb.BITMAP = ["BITMAP", 4];
  rb.BITMAP.toString = M;
  rb.BITMAP.__enum__ = rb;
  rb.END = ["END", 5];
  rb.END.toString = M;
  rb.END.__enum__ = rb;
  rb.QUAD_PATH = ["QUAD_PATH", 6];
  rb.QUAD_PATH.toString = M;
  rb.QUAD_PATH.__enum__ = rb;
  rb.TRIANGLE_PATH = ["TRIANGLE_PATH", 7];
  rb.TRIANGLE_PATH.toString = M;
  rb.TRIANGLE_PATH.__enum__ = rb;
  rb.SHADER = ["SHADER", 8];
  rb.SHADER.toString = M;
  rb.SHADER.__enum__ = rb;
  var vd = (p["openfl.display.GraphicsFillType"] = {
    __ename__: ["openfl", "display", "GraphicsFillType"],
    __constructs__: [
      "SOLID_FILL",
      "GRADIENT_FILL",
      "BITMAP_FILL",
      "END_FILL",
      "SHADER_FILL",
    ],
  });
  vd.SOLID_FILL = ["SOLID_FILL", 0];
  vd.SOLID_FILL.toString = M;
  vd.SOLID_FILL.__enum__ = vd;
  vd.GRADIENT_FILL = ["GRADIENT_FILL", 1];
  vd.GRADIENT_FILL.toString = M;
  vd.GRADIENT_FILL.__enum__ = vd;
  vd.BITMAP_FILL = ["BITMAP_FILL", 2];
  vd.BITMAP_FILL.toString = M;
  vd.BITMAP_FILL.__enum__ = vd;
  vd.END_FILL = ["END_FILL", 3];
  vd.END_FILL.toString = M;
  vd.END_FILL.__enum__ = vd;
  vd.SHADER_FILL = ["SHADER_FILL", 4];
  vd.SHADER_FILL.toString = M;
  vd.SHADER_FILL.__enum__ = vd;
  var pk = function () {};
  p["openfl.display.ITileContainer"] = pk;
  pk.__name__ = ["openfl", "display", "ITileContainer"];
  pk.prototype = {
    get_numTiles: null,
    addTile: null,
    addTileAt: null,
    addTiles: null,
    contains: null,
    getTileAt: null,
    getTileIndex: null,
    removeTile: null,
    removeTileAt: null,
    removeTiles: null,
    setTileIndex: null,
    swapTiles: null,
    swapTilesAt: null,
    __class__: pk,
    __properties__: { get_numTiles: "get_numTiles" },
  };
  var Gj = {};
  p["openfl.display._InterpolationMethod.InterpolationMethod_Impl_"] = Gj;
  Gj.__name__ = [
    "openfl",
    "display",
    "_InterpolationMethod",
    "InterpolationMethod_Impl_",
  ];
  Gj.fromInt = function (a) {
    return a;
  };
  Gj.fromString = function (a) {
    switch (a) {
      case "linearRGB":
        return 0;
      case "rgb":
        return 1;
      default:
        return null;
    }
  };
  Gj.toInt = function (a) {
    return a;
  };
  Gj.toString = function (a) {
    switch (a) {
      case 0:
        return "linearRGB";
      case 1:
        return "rgb";
      default:
        return null;
    }
  };
  var Vn = function (a) {
    null == a && (a = 80);
    this.quality = a;
  };
  p["openfl.display.JPEGEncoderOptions"] = Vn;
  Vn.__name__ = ["openfl", "display", "JPEGEncoderOptions"];
  Vn.prototype = { quality: null, __class__: Vn };
  var ai = {};
  p["openfl.display._JointStyle.JointStyle_Impl_"] = ai;
  ai.__name__ = ["openfl", "display", "_JointStyle", "JointStyle_Impl_"];
  ai.fromInt = function (a) {
    return a;
  };
  ai.fromString = function (a) {
    switch (a) {
      case "bevel":
        return 0;
      case "miter":
        return 1;
      case "round":
        return 2;
      default:
        return null;
    }
  };
  ai.toInt = function (a) {
    return a;
  };
  ai.toString = function (a) {
    switch (a) {
      case 0:
        return "bevel";
      case 1:
        return "miter";
      case 2:
        return "round";
      default:
        return null;
    }
  };
  var ci = {};
  p["openfl.display._LineScaleMode.LineScaleMode_Impl_"] = ci;
  ci.__name__ = ["openfl", "display", "_LineScaleMode", "LineScaleMode_Impl_"];
  ci.fromInt = function (a) {
    return a;
  };
  ci.fromString = function (a) {
    switch (a) {
      case "horizontal":
        return 0;
      case "none":
        return 1;
      case "normal":
        return 2;
      case "vertical":
        return 3;
      default:
        return null;
    }
  };
  ci.toInt = function (a) {
    return a;
  };
  ci.toString = function (a) {
    switch (a) {
      case 0:
        return "horizontal";
      case 1:
        return "none";
      case 2:
        return "normal";
      case 3:
        return "vertical";
      default:
        return null;
    }
  };
  var fm = function () {
    wd.call(this);
    this.contentLoaderInfo = Pg.create(this);
    this.uncaughtErrorEvents = this.contentLoaderInfo.uncaughtErrorEvents;
  };
  p["openfl.display.Loader"] = fm;
  fm.__name__ = ["openfl", "display", "Loader"];
  fm.__super__ = wd;
  fm.prototype = x(wd.prototype, {
    content: null,
    contentLoaderInfo: null,
    uncaughtErrorEvents: null,
    __library: null,
    __path: null,
    __unloaded: null,
    close: function () {
      Ec.notImplemented({
        fileName: "Loader.hx",
        lineNumber: 213,
        className: "openfl.display.Loader",
        methodName: "close",
      });
    },
    load: function (a, b) {
      this.contentLoaderInfo.loaderURL = wa.get_current().get_loaderInfo().url;
      this.contentLoaderInfo.url = a.url;
      this.__unloaded = !1;
      if (null == a.contentType || "" == a.contentType) {
        b = "";
        this.__path = a.url;
        var c = this.__path.indexOf("?");
        -1 < c && (this.__path = this.__path.substring(0, c));
        for (; ba.endsWith(this.__path, "/"); )
          this.__path = this.__path.substring(0, this.__path.length - 1);
        ba.endsWith(this.__path, ".bundle") &&
          ((this.__path += "/library.json"),
          (a.url = -1 < c ? this.__path + a.url.substring(c) : this.__path));
        c = this.__path.lastIndexOf(".");
        -1 < c && (b = this.__path.substring(c + 1));
        switch (b) {
          case "gif":
            b = "image/gif";
            break;
          case "jpeg":
          case "jpg":
            b = "image/jpeg";
            break;
          case "js":
            b = "application/javascript";
            break;
          case "json":
            b = "application/json";
            break;
          case "png":
            b = "image/png";
            break;
          case "swf":
            b = "application/x-shockwave-flash";
            break;
          default:
            b = "application/x-www-form-urlencoded";
        }
        this.contentLoaderInfo.contentType = b;
      } else this.contentLoaderInfo.contentType = a.contentType;
      if (
        -1 < this.contentLoaderInfo.contentType.indexOf("image/") &&
        "GET" == a.method &&
        (null == a.requestHeaders || 0 == a.requestHeaders.length) &&
        null == a.userAgent
      )
        sa.loadFromFile(a.url)
          .onComplete(B(this, this.BitmapData_onLoad))
          .onError(B(this, this.BitmapData_onError))
          .onProgress(B(this, this.BitmapData_onProgress));
      else {
        b = new ph();
        b.dataFormat = 0;
        if (
          -1 < this.contentLoaderInfo.contentType.indexOf("/json") ||
          -1 < this.contentLoaderInfo.contentType.indexOf("/javascript") ||
          -1 < this.contentLoaderInfo.contentType.indexOf("/ecmascript")
        )
          b.dataFormat = 1;
        b.addEventListener("complete", B(this, this.loader_onComplete));
        b.addEventListener("ioError", B(this, this.loader_onError));
        b.addEventListener("progress", B(this, this.loader_onProgress));
        b.load(a);
      }
    },
    loadBytes: function (a, b) {
      sa.loadFromBytes(a)
        .onComplete(B(this, this.BitmapData_onLoad))
        .onError(B(this, this.BitmapData_onError));
    },
    unload: function () {
      if (!this.__unloaded) {
        for (; 0 < this.get_numChildren(); ) this.removeChildAt(0);
        null != this.__library &&
          (oa.unloadLibrary(this.contentLoaderInfo.url),
          (this.__library = null));
        this.content = null;
        this.contentLoaderInfo.url = null;
        this.contentLoaderInfo.contentType = null;
        this.contentLoaderInfo.content = null;
        this.contentLoaderInfo.bytesLoaded = 0;
        this.contentLoaderInfo.bytesTotal = 0;
        this.contentLoaderInfo.width = 0;
        this.contentLoaderInfo.height = 0;
        this.__unloaded = !0;
        this.contentLoaderInfo.dispatchEvent(new ma("unload"));
      }
    },
    unloadAndStop: function (a) {
      null != this.content && this.content.__stopAllMovieClips();
      a = 0;
      for (var b = this.get_numChildren(); a < b; ) {
        var c = a++;
        this.getChildAt(c).__stopAllMovieClips();
      }
      this.unload();
    },
    __dispatchError: function (a) {
      var b = new zg("ioError");
      b.text = a;
      this.contentLoaderInfo.dispatchEvent(b);
    },
    BitmapData_onError: function (a) {
      this.__dispatchError(P.string(a));
    },
    BitmapData_onLoad: function (a) {
      null == a
        ? this.__dispatchError("Unknown error")
        : ((this.content = new ic(a)),
          (this.contentLoaderInfo.content = this.content),
          (a = this.content.get_width() | 0),
          (this.contentLoaderInfo.width = a),
          (a = this.content.get_height() | 0),
          (this.contentLoaderInfo.height = a),
          this.addChild(this.content),
          this.contentLoaderInfo.dispatchEvent(new ma("complete")));
    },
    BitmapData_onProgress: function (a, b) {
      var c = new gh("progress");
      c.bytesLoaded = a;
      c.bytesTotal = b;
      this.contentLoaderInfo.dispatchEvent(c);
    },
    loader_onComplete: function (a) {
      var b = this;
      a = a.target;
      if (
        null != this.contentLoaderInfo.contentType &&
        -1 < this.contentLoaderInfo.contentType.indexOf("/json")
      ) {
        var c = Zc.parse(a.data, mj.directory(this.__path));
        if (null == c) this.__dispatchError("Cannot parse asset manifest");
        else {
          var d = ac.fromManifest(c);
          if (null == d) this.__dispatchError("Cannot open library");
          else if (u.__instanceof(d, Yc))
            d.load()
              .onComplete(function (a) {
                b.__library = d;
                oa.registerLibrary(b.contentLoaderInfo.url, b.__library);
                null == c.name ||
                  oa.hasLibrary(c.name) ||
                  oa.registerLibrary(c.name, b.__library);
                b.content = b.__library.getMovieClip("");
                b.contentLoaderInfo.content = b.content;
                b.addChild(b.content);
                b.contentLoaderInfo.dispatchEvent(new ma("complete"));
              })
              .onError(function (a) {
                b.__dispatchError(a);
              });
        }
      } else
        null != this.contentLoaderInfo.contentType &&
        (-1 < this.contentLoaderInfo.contentType.indexOf("/javascript") ||
          -1 < this.contentLoaderInfo.contentType.indexOf("/ecmascript"))
          ? ((this.content = new gb()),
            (this.contentLoaderInfo.content = this.content),
            this.addChild(this.content),
            eval("(function () {" + P.string(a.data) + "})()"),
            this.contentLoaderInfo.dispatchEvent(new ma("complete")))
          : ((this.contentLoaderInfo.bytes = a.data),
            sa
              .loadFromBytes(a.data)
              .onComplete(B(this, this.BitmapData_onLoad))
              .onError(B(this, this.BitmapData_onError)));
    },
    loader_onError: function (a) {
      a.target = this.contentLoaderInfo;
      this.contentLoaderInfo.dispatchEvent(a);
    },
    loader_onProgress: function (a) {
      a.target = this.contentLoaderInfo;
      this.contentLoaderInfo.dispatchEvent(a);
    },
    __class__: fm,
  });
  var Pg = function () {
    db.call(this);
    this.applicationDomain = Hj.currentDomain;
    this.bytesTotal = this.bytesLoaded = 0;
    this.childAllowsParent = !0;
    this.parameters = {};
  };
  p["openfl.display.LoaderInfo"] = Pg;
  Pg.__name__ = ["openfl", "display", "LoaderInfo"];
  Pg.create = function (a) {
    var b = new Pg();
    b.uncaughtErrorEvents = new go();
    null != a ? (b.loader = a) : (b.url = Pg.__rootURL);
    return b;
  };
  Pg.__super__ = db;
  Pg.prototype = x(db.prototype, {
    applicationDomain: null,
    bytes: null,
    bytesLoaded: null,
    bytesTotal: null,
    childAllowsParent: null,
    content: null,
    contentType: null,
    frameRate: null,
    height: null,
    loader: null,
    loaderURL: null,
    parameters: null,
    parentAllowsChild: null,
    sameDomain: null,
    sharedEvents: null,
    uncaughtErrorEvents: null,
    url: null,
    width: null,
    __completed: null,
    __complete: function () {
      this.__completed ||
        (this.bytesLoaded < this.bytesTotal &&
          (this.bytesLoaded = this.bytesTotal),
        this.__update(this.bytesLoaded, this.bytesTotal),
        (this.__completed = !0),
        this.dispatchEvent(new ma("complete")));
    },
    __update: function (a, b) {
      this.bytesLoaded = a;
      this.bytesTotal = b;
      this.dispatchEvent(new gh("progress", !1, !1, a, b));
    },
    __class__: Pg,
  });
  var ef = function () {
    gb.call(this);
    this.__currentFrame = 1;
    this.__currentLabels = [];
    this.__instanceFields = [];
    this.__totalFrames = 0;
    this.enabled = !0;
    null != ef.__initSymbol &&
      ((this.__swf = ef.__initSWF),
      (this.__symbol = ef.__initSymbol),
      (ef.__initSWF = null),
      (ef.__initSymbol = null),
      this.__fromSymbol(this.__swf, this.__symbol));
  };
  p["openfl.display.MovieClip"] = ef;
  ef.__name__ = ["openfl", "display", "MovieClip"];
  ef.__super__ = gb;
  ef.prototype = x(gb.prototype, {
    enabled: null,
    __activeInstances: null,
    __activeInstancesByFrameObjectID: null,
    __currentFrame: null,
    __currentFrameLabel: null,
    __currentLabel: null,
    __currentLabels: null,
    __frameScripts: null,
    __frameTime: null,
    __hasDown: null,
    __hasOver: null,
    __hasUp: null,
    __instanceFields: null,
    __lastFrameScriptEval: null,
    __lastFrameUpdate: null,
    __mouseIsDown: null,
    __playing: null,
    __swf: null,
    __symbol: null,
    __timeElapsed: null,
    __totalFrames: null,
    addFrameScript: function (a, b) {
      0 > a ||
        ((a += 1),
        null != b
          ? (null == this.__frameScripts && (this.__frameScripts = new Ca()),
            (this.__frameScripts.h[a] = b))
          : null != this.__frameScripts && this.__frameScripts.remove(a));
    },
    gotoAndPlay: function (a, b) {
      this.play();
      this.__goto(this.__resolveFrameReference(a));
    },
    gotoAndStop: function (a, b) {
      this.stop();
      this.__goto(this.__resolveFrameReference(a));
    },
    nextFrame: function () {
      this.stop();
      this.__goto(this.__currentFrame + 1);
    },
    play: function () {
      null == this.__symbol ||
        this.__playing ||
        2 > this.__totalFrames ||
        ((this.__playing = !0),
        (this.__frameTime = (1e3 / this.__swf.frameRate) | 0),
        (this.__timeElapsed = 0));
    },
    prevFrame: function () {
      this.stop();
      this.__goto(this.__currentFrame - 1);
    },
    stop: function () {
      this.__playing = !1;
    },
    __enterFrame: function (a) {
      this.__updateFrameScript(a);
      this.__updateSymbol(this.__currentFrame);
      gb.prototype.__enterFrame.call(this, a);
    },
    __updateFrameScript: function (a) {
      if (null != this.__symbol && this.__playing) {
        var b = this.__getNextFrame(a);
        if (this.__lastFrameScriptEval == b)
          gb.prototype.__enterFrame.call(this, a);
        else if (null != this.__frameScripts) {
          if (b < this.__currentFrame) {
            if (!this.__evaluateFrameScripts(this.__totalFrames)) {
              gb.prototype.__enterFrame.call(this, a);
              return;
            }
            this.__currentFrame = 1;
          }
          this.__evaluateFrameScripts(b) ||
            gb.prototype.__enterFrame.call(this, a);
        } else this.__currentFrame = b;
      }
    },
    __updateSymbol: function (a) {
      if (
        null != this.__symbol &&
        this.__currentFrame != this.__lastFrameUpdate
      ) {
        this.__updateFrameLabel();
        for (var b = new Ca(), c, d = 0; d < a; )
          if (((c = d++), (c = this.__symbol.frames[c]), null != c.objects))
            for (var e = 0, f = c.objects; e < f.length; ) {
              var g = f[e];
              ++e;
              switch (g.type[1]) {
                case 0:
                  c = this.__activeInstancesByFrameObjectID.get(g.id);
                  null != c &&
                    ((b.h[g.id] = c),
                    this.__updateDisplayObject(c.displayObject, g, !0));
                  break;
                case 1:
                  c = b.h[g.id];
                  null != c &&
                    null != c.displayObject &&
                    this.__updateDisplayObject(c.displayObject, g);
                  break;
                case 2:
                  b.remove(g.id);
              }
            }
        a = [];
        d = [];
        for (c = b.iterator(); c.hasNext(); )
          (b = c.next()),
            -1 == a.indexOf(b) && (a.push(b), 0 < b.clipDepth && d.push(b));
        a.sort(B(this, this.__sortDepths));
        e = 0;
        for (f = a.length; e < f; ) {
          g = e++;
          var h = this.__children[g];
          c = a[g];
          b = c.depth;
          var n = c.displayObject;
          h != n ? ((c = n), this.addChildAt(n, g)) : (c = this.__children[g]);
          g = !1;
          for (h = 0; h < d.length; )
            if (((n = d[h]), ++h, b > n.depth && b <= n.clipDepth)) {
              c.set_mask(n.displayObject);
              g = !0;
              break;
            }
          0 < d.length && !g && null != c.get_mask() && c.set_mask(null);
        }
        d = a.length;
        for (c = this.__children.length; d < c; ) {
          a = this.__children[d];
          b = 0;
          for (e = this.__activeInstances; b < e.length; )
            (f = e[b]),
              ++b,
              f.displayObject == a &&
                (u.__instanceof(a, ef) && a.gotoAndPlay(1),
                this.removeChild(a),
                --d,
                --c);
          ++d;
        }
        this.__lastFrameUpdate = this.__currentFrame;
        this.__updateInstanceFields();
      }
    },
    __evaluateFrameScripts: function (a) {
      var b = this.__currentFrame;
      for (a += 1; b < a; ) {
        var c = b++;
        if (
          c != this.__lastFrameScriptEval &&
          ((this.__currentFrame = this.__lastFrameScriptEval = c),
          (this.__frameScripts.h.hasOwnProperty(c) &&
            (this.__updateSymbol(c),
            (0, this.__frameScripts.h[c])(),
            this.__currentFrame != c)) ||
            !this.__playing)
        )
          return !1;
      }
      return !0;
    },
    __fromSymbol: function (a, b) {
      if (null == this.__activeInstances) {
        this.__swf = a;
        this.__symbol = b;
        this.__activeInstances = [];
        this.__activeInstancesByFrameObjectID = new Ca();
        this.__currentFrame = 1;
        this.__lastFrameUpdate = this.__lastFrameScriptEval = -1;
        this.__totalFrames = this.__symbol.frames.length;
        for (var c = null, d = 0, e = this.__symbol.frames.length; d < e; ) {
          var f = d++;
          a = f + 1;
          b = this.__symbol.frames[f];
          null != b.label && this.__currentLabels.push(new Zn(b.label, f + 1));
          if (null != b.script)
            null == this.__frameScripts && (this.__frameScripts = new Ca()),
              (this.__frameScripts.h[a] = b.script);
          else if (null != b.scriptSource) {
            null == this.__frameScripts && (this.__frameScripts = new Ca());
            try {
              null == c && ((c = new Bi()), (c.allowTypes = !0));
              var g = [c.parseString(b.scriptSource)],
                h = [new Hp()],
                n = h[0].variables;
              null != t["this"]
                ? n.setReserved("this", this)
                : (n.h["this"] = this);
              var k = (function (a, b) {
                return function () {
                  a[0].execute(b[0]);
                };
              })(h, g);
              this.__frameScripts.h[a] = k;
            } catch (l) {
              (X.lastException = l),
                null != this.__symbol.className
                  ? mb.warn(
                      'Unable to evaluate frame script source for symbol "' +
                        this.__symbol.className +
                        '" frame ' +
                        a +
                        "\n" +
                        b.scriptSource,
                      {
                        fileName: "MovieClip.hx",
                        lineNumber: 732,
                        className: "openfl.display.MovieClip",
                        methodName: "__fromSymbol",
                      }
                    )
                  : mb.warn(
                      "Unable to evaluate frame script source:\n" +
                        b.scriptSource,
                      {
                        fileName: "MovieClip.hx",
                        lineNumber: 736,
                        className: "openfl.display.MovieClip",
                        methodName: "__fromSymbol",
                      }
                    );
            }
          }
        }
        h = 0;
        for (n = this.__totalFrames; h < n; )
          if (
            ((k = h++),
            (g = k + 1),
            (a = this.__symbol.frames[k]),
            null != a.objects)
          )
            for (k = 0, c = a.objects; k < c.length; )
              if (
                ((d = c[k]),
                ++k,
                d.type == xg.CREATE &&
                  !this.__activeInstancesByFrameObjectID.h.hasOwnProperty(d.id))
              ) {
                a = null;
                b = !1;
                e = 0;
                for (f = this.__activeInstances; e < f.length; ) {
                  var m = f[e];
                  ++e;
                  if (
                    null != m.displayObject &&
                    m.characterID == d.symbol &&
                    m.depth == d.depth
                  ) {
                    a = m;
                    b = !0;
                    break;
                  }
                }
                null == a &&
                  ((e = this.__swf.symbols.h[d.symbol]),
                  null != e &&
                    ((e = e.__createObject(this.__swf)),
                    null != e &&
                      ((e.parent = this),
                      (e.stage = this.stage),
                      null != this.stage &&
                        e.dispatchEvent(new ma("addedToStage", !1, !1)),
                      (a = new Jq(
                        g,
                        d.id,
                        d.symbol,
                        d.depth,
                        e,
                        d.clipDepth
                      )))));
                null != a &&
                  ((this.__activeInstancesByFrameObjectID.h[d.id] = a),
                  b ||
                    (this.__activeInstances.push(a),
                    this.__updateDisplayObject(a.displayObject, d)));
              }
        1 < this.__totalFrames && this.play();
        this.__enterFrame(0);
        this.__instanceFields = qa.getInstanceFields(u.getClass(this));
        this.__updateInstanceFields();
      }
    },
    __getNextFrame: function (a) {
      this.__timeElapsed += a;
      a =
        this.__currentFrame + Math.floor(this.__timeElapsed / this.__frameTime);
      1 > a && (a = 1);
      a > this.__totalFrames &&
        (a = Math.floor((a - 1) % this.__totalFrames) + 1);
      this.__timeElapsed %= this.__frameTime;
      return a;
    },
    __goto: function (a) {
      null != this.__symbol &&
        (1 > a ? (a = 1) : a > this.__totalFrames && (a = this.__totalFrames),
        (this.__currentFrame = a),
        this.__enterFrame(0));
    },
    __resolveFrameReference: function (a) {
      if ("number" == typeof a && (a | 0) === a) return a;
      if ("string" == typeof a) {
        for (var b = 0, c = this.__currentLabels; b < c.length; ) {
          var d = c[b];
          ++b;
          if (d.get_name() == a) return d.get_frame();
        }
        throw new v(
          new Si("Error #2109: Frame label " + a + " not found in scene.")
        );
      }
      throw new v("Invalid type for frame " + qa.getClassName(a));
    },
    __sortDepths: function (a, b) {
      return a.depth - b.depth;
    },
    __stopAllMovieClips: function () {
      gb.prototype.__stopAllMovieClips.call(this);
      this.stop();
    },
    __updateDisplayObject: function (a, b, c) {
      null == c && (c = !1);
      if (null != a) {
        null != b.name && a.set_name(b.name);
        null != b.matrix && a.get_transform().set_matrix(b.matrix);
        null != b.colorTransform
          ? a.get_transform().set_colorTransform(b.colorTransform)
          : c &&
            !a.get_transform().get_colorTransform().__isDefault(!0) &&
            a.get_transform().set_colorTransform(new sc());
        if (null != b.filters) {
          c = [];
          for (var d = 0, e = b.filters; d < e.length; ) {
            var f = e[d];
            ++d;
            switch (f[1]) {
              case 0:
                c.push(new Ag(f[2], f[3], f[4]));
                break;
              case 1:
                c.push(new Vf(f[2]));
                break;
              case 2:
                c.push(
                  new Vk(
                    f[2],
                    f[3],
                    f[4],
                    f[5],
                    f[6],
                    f[7],
                    f[8],
                    f[9],
                    f[10],
                    f[11],
                    f[12]
                  )
                );
                break;
              case 3:
                c.push(new tf(f[2], f[3], f[4], f[5], f[6], f[7], f[8], f[9]));
            }
          }
          a.set_filters(c);
        } else a.set_filters(null);
        null != b.visible && a.set_visible(b.visible);
        null != b.blendMode && a.set_blendMode(b.blendMode);
      }
    },
    __updateFrameLabel: function () {
      this.__currentFrameLabel =
        this.__symbol.frames[this.__currentFrame - 1].label;
      if (null != this.__currentFrameLabel)
        this.__currentLabel = this.__currentFrameLabel;
      else {
        this.__currentLabel = null;
        for (var a = 0, b = this.__currentLabels; a < b.length; ) {
          var c = b[a];
          ++a;
          if (c.get_frame() < this.__currentFrame)
            this.__currentLabel = c.get_name();
          else break;
        }
      }
    },
    __updateInstanceFields: function () {
      for (var a = 0, b = this.__instanceFields; a < b.length; ) {
        var c = b[a];
        ++a;
        for (var d = 0, e = this.__children; d < e.length; ) {
          var f = e[d];
          ++d;
          if (f.get_name() == c) {
            this[c] = f;
            break;
          }
        }
      }
    },
    __onMouseDown: function (a) {
      this.__hasDown && this.gotoAndStop("_down");
      this.__mouseIsDown = !0;
      this.stage.addEventListener("mouseUp", B(this, this.__onMouseUp), !0);
    },
    __onMouseUp: function (a) {
      this.__mouseIsDown = !1;
      null != this.stage &&
        this.stage.removeEventListener("mouseUp", B(this, this.__onMouseUp));
      a.target == this && this.__hasOver
        ? this.gotoAndStop("_over")
        : this.__hasUp && this.gotoAndStop("_up");
    },
    __onRollOut: function (a) {
      this.__mouseIsDown && this.__hasOver
        ? this.gotoAndStop("_over")
        : this.__hasUp && this.gotoAndStop("_up");
    },
    __onRollOver: function (a) {
      this.__hasOver && this.gotoAndStop("_over");
    },
    set_buttonMode: function (a) {
      if (this.__buttonMode != a) {
        if (a) {
          this.__hasUp = this.__hasOver = this.__hasDown = !1;
          for (var b = 0, c = this.__currentLabels; b < c.length; ) {
            var d = c[b];
            ++b;
            switch (d.get_name()) {
              case "_down":
                this.__hasDown = !0;
                break;
              case "_over":
                this.__hasOver = !0;
                break;
              case "_up":
                this.__hasUp = !0;
            }
          }
          if (this.__hasDown || this.__hasOver || this.__hasUp)
            this.addEventListener("rollOver", B(this, this.__onRollOver)),
              this.addEventListener("rollOut", B(this, this.__onRollOut)),
              this.addEventListener("mouseDown", B(this, this.__onMouseDown));
        } else
          this.removeEventListener("rollOver", B(this, this.__onRollOver)),
            this.removeEventListener("rollOut", B(this, this.__onRollOut)),
            this.removeEventListener("mouseDown", B(this, this.__onMouseDown));
        this.__buttonMode = a;
      }
      return a;
    },
    get_currentFrame: function () {
      return this.__currentFrame;
    },
    get_currentFrameLabel: function () {
      return this.__currentFrameLabel;
    },
    get_currentLabel: function () {
      return this.__currentLabel;
    },
    get_currentLabels: function () {
      return this.__currentLabels;
    },
    get_framesLoaded: function () {
      return this.__totalFrames;
    },
    get_isPlaying: function () {
      return this.__playing;
    },
    get_totalFrames: function () {
      return this.__totalFrames;
    },
    __class__: ef,
    __properties__: x(gb.prototype.__properties__, {
      get_totalFrames: "get_totalFrames",
      get_isPlaying: "get_isPlaying",
      get_framesLoaded: "get_framesLoaded",
      get_currentLabels: "get_currentLabels",
      get_currentLabel: "get_currentLabel",
      get_currentFrameLabel: "get_currentFrameLabel",
      get_currentFrame: "get_currentFrame",
    }),
  });
  var Jq = function (a, b, c, d, e, f) {
    this.initFrame = a;
    this.initFrameObjectID = b;
    this.characterID = c;
    this.depth = d;
    this.displayObject = e;
    this.clipDepth = f;
  };
  p["openfl.display._MovieClip.FrameSymbolInstance"] = Jq;
  Jq.__name__ = ["openfl", "display", "_MovieClip", "FrameSymbolInstance"];
  Jq.prototype = {
    characterID: null,
    clipDepth: null,
    depth: null,
    displayObject: null,
    initFrame: null,
    initFrameObjectID: null,
    __class__: Jq,
  };
  var Ab = function (a, b) {
    sf.call(this);
    this.__context3D = a;
    this.__context = a.__context;
    this.__gl = this.gl = a.__context.webgl;
    this.__defaultRenderTarget = b;
    this.__flipped = null == this.__defaultRenderTarget;
    null == hf.maxTextureWidth &&
      (hf.maxTextureWidth = hf.maxTextureHeight =
        this.__gl.getParameter(this.__gl.MAX_TEXTURE_SIZE));
    this.__matrix = fa._new();
    this.__values = [];
    this.__softwareRenderer = new mh(null);
    this.__type = "opengl";
    this.__setBlendMode(10);
    this.__context3D.__setGLBlend(!0);
    this.__clipRects = [];
    this.__maskObjects = [];
    this.__numClipRects = 0;
    this.__projection = fa._new();
    this.__projectionFlipped = fa._new();
    this.__stencilReference = 0;
    this.__tempRect = new W();
    this.__defaultDisplayShader = new Yn();
    this.__defaultGraphicsShader = new fo();
    this.__defaultShader = this.__defaultDisplayShader;
    this.__initShader(this.__defaultShader);
    this.__scrollRectMasks = new Fg(function () {
      return new Ye();
    });
    this.__maskShader = new Bj();
  };
  p["openfl.display.OpenGLRenderer"] = Ab;
  Ab.__name__ = ["openfl", "display", "OpenGLRenderer"];
  Ab.__super__ = sf;
  Ab.prototype = x(sf.prototype, {
    gl: null,
    __context3D: null,
    __clipRects: null,
    __currentDisplayShader: null,
    __currentGraphicsShader: null,
    __currentRenderTarget: null,
    __currentShader: null,
    __currentShaderBuffer: null,
    __defaultDisplayShader: null,
    __defaultGraphicsShader: null,
    __defaultRenderTarget: null,
    __defaultShader: null,
    __displayHeight: null,
    __displayWidth: null,
    __flipped: null,
    __gl: null,
    __height: null,
    __maskShader: null,
    __matrix: null,
    __maskObjects: null,
    __numClipRects: null,
    __offsetX: null,
    __offsetY: null,
    __projection: null,
    __projectionFlipped: null,
    __scrollRectMasks: null,
    __softwareRenderer: null,
    __stencilReference: null,
    __tempRect: null,
    __updatedStencil: null,
    __upscaled: null,
    __values: null,
    __width: null,
    applyAlpha: function (a) {
      Ab.__alphaValue[0] = a;
      null != this.__currentShaderBuffer
        ? this.__currentShaderBuffer.addFloatOverride(
            "openfl_Alpha",
            Ab.__alphaValue
          )
        : null != this.__currentShader &&
          null != this.__currentShader.__alpha &&
          (this.__currentShader.__alpha.value = Ab.__alphaValue);
    },
    applyBitmapData: function (a, b, c) {
      null == c && (c = !1);
      null != this.__currentShaderBuffer
        ? null != a &&
          ((Ab.__textureSizeValue[0] = a.__textureWidth),
          (Ab.__textureSizeValue[1] = a.__textureHeight),
          this.__currentShaderBuffer.addFloatOverride(
            "openfl_TextureSize",
            Ab.__textureSizeValue
          ))
        : null != this.__currentShader &&
          (null != this.__currentShader.__bitmap &&
            ((this.__currentShader.__bitmap.input = a),
            (this.__currentShader.__bitmap.filter =
              b && this.__allowSmoothing ? 4 : 5),
            (this.__currentShader.__bitmap.mipFilter = 2),
            (this.__currentShader.__bitmap.wrap = c ? 2 : 0)),
          null != this.__currentShader.__texture &&
            ((this.__currentShader.__texture.input = a),
            (this.__currentShader.__texture.filter =
              b && this.__allowSmoothing ? 4 : 5),
            (this.__currentShader.__texture.mipFilter = 2),
            (this.__currentShader.__texture.wrap = c ? 2 : 0)),
          null != this.__currentShader.__textureSize &&
            (null != a
              ? ((Ab.__textureSizeValue[0] = a.__textureWidth),
                (Ab.__textureSizeValue[1] = a.__textureHeight),
                (this.__currentShader.__textureSize.value =
                  Ab.__textureSizeValue))
              : (this.__currentShader.__textureSize.value = null)));
    },
    applyColorTransform: function (a) {
      var b = null != a && !a.__isDefault(!0);
      this.applyHasColorTransform(b);
      b
        ? (a.__setArrays(Ab.__colorMultipliersValue, Ab.__colorOffsetsValue),
          null != this.__currentShaderBuffer
            ? (this.__currentShaderBuffer.addFloatOverride(
                "openfl_ColorMultiplier",
                Ab.__colorMultipliersValue
              ),
              this.__currentShaderBuffer.addFloatOverride(
                "openfl_ColorOffset",
                Ab.__colorOffsetsValue
              ))
            : null != this.__currentShader &&
              (null != this.__currentShader.__colorMultiplier &&
                (this.__currentShader.__colorMultiplier.value =
                  Ab.__colorMultipliersValue),
              null != this.__currentShader.__colorOffset &&
                (this.__currentShader.__colorOffset.value =
                  Ab.__colorOffsetsValue)))
        : null != this.__currentShaderBuffer
        ? (this.__currentShaderBuffer.addFloatOverride(
            "openfl_ColorMultiplier",
            Ab.__emptyColorValue
          ),
          this.__currentShaderBuffer.addFloatOverride(
            "openfl_ColorOffset",
            Ab.__emptyColorValue
          ))
        : null != this.__currentShader &&
          (null != this.__currentShader.__colorMultiplier &&
            (this.__currentShader.__colorMultiplier.value =
              Ab.__emptyColorValue),
          null != this.__currentShader.__colorOffset &&
            (this.__currentShader.__colorOffset.value = Ab.__emptyColorValue));
    },
    applyHasColorTransform: function (a) {
      Ab.__hasColorTransformValue[0] = a;
      null != this.__currentShaderBuffer
        ? this.__currentShaderBuffer.addBoolOverride(
            "openfl_HasColorTransform",
            Ab.__hasColorTransformValue
          )
        : null != this.__currentShader &&
          null != this.__currentShader.__hasColorTransform &&
          (this.__currentShader.__hasColorTransform.value =
            Ab.__hasColorTransformValue);
    },
    applyMatrix: function (a) {
      null != this.__currentShaderBuffer
        ? this.__currentShaderBuffer.addFloatOverride("openfl_Matrix", a)
        : null != this.__currentShader &&
          null != this.__currentShader.__matrix &&
          (this.__currentShader.__matrix.value = a);
    },
    getMatrix: function (a) {
      if (null != this.gl) {
        a = this.__getMatrix(a, 1);
        for (var b = 0; 16 > b; ) {
          var c = b++;
          fa.set(this.__matrix, c, a[c]);
        }
      } else
        fa.identity(this.__matrix),
          fa.set(this.__matrix, 0, a.a),
          fa.set(this.__matrix, 1, a.b),
          fa.set(this.__matrix, 4, a.c),
          fa.set(this.__matrix, 5, a.d),
          fa.set(this.__matrix, 12, a.tx),
          fa.set(this.__matrix, 13, a.ty);
      return this.__matrix;
    },
    setShader: function (a) {
      this.__currentShaderBuffer = null;
      this.__currentShader != a &&
        (null == a
          ? ((this.__currentShader = null), this.__context3D.setProgram(null))
          : ((this.__currentShader = a),
            this.__initShader(a),
            this.__context3D.setProgram(a.program),
            this.__context3D.__flushGLProgram(),
            this.__currentShader.__enable(),
            (this.__context3D.__state.shader = a)));
    },
    setViewport: function () {
      this.__gl.viewport(
        this.__offsetX,
        this.__offsetY,
        this.__displayWidth,
        this.__displayHeight
      );
    },
    updateShader: function () {
      null != this.__currentShader &&
        (null != this.__currentShader.__position &&
          (this.__currentShader.__position.__useArray = !0),
        null != this.__currentShader.__textureCoord &&
          (this.__currentShader.__textureCoord.__useArray = !0),
        this.__context3D.setProgram(this.__currentShader.program),
        this.__context3D.__flushGLProgram(),
        this.__context3D.__flushGLTextures(),
        this.__currentShader.__update());
    },
    useAlphaArray: function () {
      null != this.__currentShader &&
        null != this.__currentShader.__alpha &&
        (this.__currentShader.__alpha.__useArray = !0);
    },
    useColorTransformArray: function () {
      null != this.__currentShader &&
        (null != this.__currentShader.__colorMultiplier &&
          (this.__currentShader.__colorMultiplier.__useArray = !0),
        null != this.__currentShader.__colorOffset &&
          (this.__currentShader.__colorOffset.__useArray = !0));
    },
    __cleanup: function () {
      0 < this.__stencilReference &&
        ((this.__stencilReference = 0),
        this.__context3D.setStencilActions(),
        this.__context3D.setStencilReferenceValue(0, 0, 0));
      0 < this.__numClipRects &&
        ((this.__numClipRects = 0), this.__scissorRect());
    },
    __clear: function () {
      null == this.__stage || this.__stage.__transparent
        ? this.__context3D.clear(0, 0, 0, 0, 0, 0, 1)
        : this.__context3D.clear(
            this.__stage.__colorSplit[0],
            this.__stage.__colorSplit[1],
            this.__stage.__colorSplit[2],
            1,
            0,
            0,
            1
          );
      this.__cleared = !0;
    },
    __clearShader: function () {
      null != this.__currentShader &&
        (null == this.__currentShaderBuffer
          ? null != this.__currentShader.__bitmap &&
            (this.__currentShader.__bitmap.input = null)
          : this.__currentShaderBuffer.clearOverride(),
        null != this.__currentShader.__texture &&
          (this.__currentShader.__texture.input = null),
        null != this.__currentShader.__textureSize &&
          (this.__currentShader.__textureSize.value = null),
        null != this.__currentShader.__hasColorTransform &&
          (this.__currentShader.__hasColorTransform.value = null),
        null != this.__currentShader.__position &&
          (this.__currentShader.__position.value = null),
        null != this.__currentShader.__matrix &&
          (this.__currentShader.__matrix.value = null),
        this.__currentShader.__clearUseArray());
    },
    __copyShader: function (a) {
      this.__currentShader = a.__currentShader;
      this.__currentShaderBuffer = a.__currentShaderBuffer;
      this.__currentDisplayShader = a.__currentDisplayShader;
      this.__currentGraphicsShader = a.__currentGraphicsShader;
    },
    __getMatrix: function (a, b) {
      var c = ya.__pool.get();
      c.copyFrom(a);
      c.concat(this.__worldTransform);
      if (
        0 == b ||
        (1 == b &&
          0 == c.b &&
          0 == c.c &&
          1.001 > c.a &&
          0.999 < c.a &&
          1.001 > c.d &&
          0.999 < c.d)
      )
        (c.tx = Math.round(c.tx)), (c.ty = Math.round(c.ty));
      fa.identity(this.__matrix);
      fa.set(this.__matrix, 0, c.a);
      fa.set(this.__matrix, 1, c.b);
      fa.set(this.__matrix, 4, c.c);
      fa.set(this.__matrix, 5, c.d);
      fa.set(this.__matrix, 12, c.tx);
      fa.set(this.__matrix, 13, c.ty);
      fa.append(
        this.__matrix,
        this.__flipped ? this.__projectionFlipped : this.__projection
      );
      for (a = 0; 16 > a; )
        (b = a++), (this.__values[b] = fa.get(this.__matrix, b));
      ya.__pool.release(c);
      return this.__values;
    },
    __initShader: function (a) {
      return null != a
        ? (null == a.__context &&
            ((a.__context = this.__context3D), a.__init()),
          a)
        : this.__defaultShader;
    },
    __initDisplayShader: function (a) {
      return null != a
        ? (null == a.__context &&
            ((a.__context = this.__context3D), a.__init()),
          a)
        : this.__defaultDisplayShader;
    },
    __initGraphicsShader: function (a) {
      return null != a
        ? (null == a.__context &&
            ((a.__context = this.__context3D), a.__init()),
          a)
        : this.__defaultGraphicsShader;
    },
    __initShaderBuffer: function (a) {
      return null != a
        ? this.__initGraphicsShader(a.shader)
        : this.__defaultGraphicsShader;
    },
    __popMask: function () {
      if (0 != this.__stencilReference) {
        var a = this.__maskObjects.pop();
        1 < this.__stencilReference
          ? (this.__context3D.setStencilActions(2, 1, 0, 0, 5),
            this.__context3D.setStencilReferenceValue(
              this.__stencilReference,
              255,
              255
            ),
            this.__context3D.setColorMask(!1, !1, !1, !1),
            a.__renderGLMask(this),
            this.__stencilReference--,
            this.__context3D.setStencilActions(2, 1, 5, 5, 5),
            this.__context3D.setStencilReferenceValue(
              this.__stencilReference,
              255,
              0
            ),
            this.__context3D.setColorMask(!0, !0, !0, !0))
          : ((this.__stencilReference = 0),
            this.__context3D.setStencilActions(),
            this.__context3D.setStencilReferenceValue(0, 0, 0));
      }
    },
    __popMaskObject: function (a, b) {
      null == b && (b = !0);
      null != a.__mask && this.__popMask();
      b &&
        null != a.__scrollRect &&
        (0 != a.__renderTransform.b || 0 != a.__renderTransform.c
          ? (this.__scrollRectMasks.release(
              this.__maskObjects[this.__maskObjects.length - 1]
            ),
            this.__popMask())
          : this.__popMaskRect());
    },
    __popMaskRect: function () {
      0 < this.__numClipRects &&
        (this.__numClipRects--,
        0 < this.__numClipRects
          ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1])
          : this.__scissorRect());
    },
    __pushMask: function (a) {
      0 == this.__stencilReference &&
        (this.__context3D.clear(0, 0, 0, 0, 0, 0, 4),
        (this.__updatedStencil = !0));
      this.__context3D.setStencilActions(2, 1, 2, 5, 5);
      this.__context3D.setStencilReferenceValue(
        this.__stencilReference,
        255,
        255
      );
      this.__context3D.setColorMask(!1, !1, !1, !1);
      a.__renderGLMask(this);
      this.__maskObjects.push(a);
      this.__stencilReference++;
      this.__context3D.setStencilActions(2, 1, 5, 5, 5);
      this.__context3D.setStencilReferenceValue(
        this.__stencilReference,
        255,
        0
      );
      this.__context3D.setColorMask(!0, !0, !0, !0);
    },
    __pushMaskObject: function (a, b) {
      null == b && (b = !0);
      b &&
        null != a.__scrollRect &&
        (0 != a.__renderTransform.b || 0 != a.__renderTransform.c
          ? ((b = this.__scrollRectMasks.get()),
            b.get_graphics().clear(),
            b.get_graphics().beginFill(65280),
            b
              .get_graphics()
              .drawRect(
                a.__scrollRect.x,
                a.__scrollRect.y,
                a.__scrollRect.width,
                a.__scrollRect.height
              ),
            b.__renderTransform.copyFrom(a.__renderTransform),
            this.__pushMask(b))
          : this.__pushMaskRect(a.__scrollRect, a.__renderTransform));
      null != a.__mask && this.__pushMask(a.__mask);
    },
    __pushMaskRect: function (a, b) {
      this.__numClipRects == this.__clipRects.length &&
        (this.__clipRects[this.__numClipRects] = new W());
      var c = ya.__pool.get();
      c.copyFrom(b);
      c.concat(this.__worldTransform);
      b = this.__clipRects[this.__numClipRects];
      a.__transform(b, c);
      0 < this.__numClipRects &&
        ((a = this.__clipRects[this.__numClipRects - 1]),
        b.__contract(a.x, a.y, a.width, a.height));
      0 > b.height && (b.height = 0);
      0 > b.width && (b.width = 0);
      ya.__pool.release(c);
      this.__scissorRect(b);
      this.__numClipRects++;
    },
    __render: function (a) {
      this.__context3D.setColorMask(!0, !0, !0, !0);
      this.__context3D.setCulling(3);
      this.__context3D.setDepthTest(!1, 0);
      this.__context3D.setStencilActions();
      this.__context3D.setStencilReferenceValue(0, 0, 0);
      this.__context3D.setScissorRectangle(null);
      this.__blendMode = null;
      this.__setBlendMode(10);
      if (null == this.__defaultRenderTarget) {
        if (
          (Ab.__scissorRectangle.setTo(
            this.__offsetX,
            this.__offsetY,
            this.__displayWidth,
            this.__displayHeight
          ),
          this.__context3D.setScissorRectangle(Ab.__scissorRectangle),
          (this.__upscaled =
            1 != this.__worldTransform.a || 1 != this.__worldTransform.d),
          a.__renderGL(this),
          0 < this.__offsetX || 0 < this.__offsetY)
        )
          0 < this.__offsetX &&
            (Ab.__scissorRectangle.setTo(0, 0, this.__offsetX, this.__height),
            this.__context3D.setScissorRectangle(Ab.__scissorRectangle),
            this.__context3D.__flushGL(),
            this.__gl.clearColor(0, 0, 0, 1),
            this.__gl.clear(this.__gl.COLOR_BUFFER_BIT),
            Ab.__scissorRectangle.setTo(
              this.__offsetX + this.__displayWidth,
              0,
              this.__width,
              this.__height
            ),
            this.__context3D.setScissorRectangle(Ab.__scissorRectangle),
            this.__context3D.__flushGL(),
            this.__gl.clearColor(0, 0, 0, 1),
            this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)),
            0 < this.__offsetY &&
              (Ab.__scissorRectangle.setTo(0, 0, this.__width, this.__offsetY),
              this.__context3D.setScissorRectangle(Ab.__scissorRectangle),
              this.__context3D.__flushGL(),
              this.__gl.clearColor(0, 0, 0, 1),
              this.__gl.clear(this.__gl.COLOR_BUFFER_BIT),
              Ab.__scissorRectangle.setTo(
                0,
                this.__offsetY + this.__displayHeight,
                this.__width,
                this.__height
              ),
              this.__context3D.setScissorRectangle(Ab.__scissorRectangle),
              this.__context3D.__flushGL(),
              this.__gl.clearColor(0, 0, 0, 1),
              this.__gl.clear(this.__gl.COLOR_BUFFER_BIT)),
            this.__context3D.setScissorRectangle(null);
      } else {
        Ab.__scissorRectangle.setTo(
          this.__offsetX,
          this.__offsetY,
          this.__displayWidth,
          this.__displayHeight
        );
        this.__context3D.setScissorRectangle(Ab.__scissorRectangle);
        var b = a.__mask,
          c = a.__scrollRect;
        a.__mask = null;
        a.__scrollRect = null;
        a.__renderGL(this);
        a.__mask = b;
        a.__scrollRect = c;
      }
      this.__context3D.present();
    },
    __renderFilterPass: function (a, b, c, d) {
      null == d && (d = !0);
      if (null != a && null != b && null != this.__defaultRenderTarget) {
        var e = this.__context3D.__state.renderToTexture,
          f = this.__context3D.__state.renderToTextureDepthStencil,
          g = this.__context3D.__state.renderToTextureAntiAlias,
          h = this.__context3D.__state.renderToTextureSurfaceSelector;
        this.__context3D.setRenderToTexture(
          this.__defaultRenderTarget.getTexture(this.__context3D),
          !1
        );
        d && this.__context3D.clear(0, 0, 0, 0, 0, 0, 1);
        b = this.__initShader(b);
        this.setShader(b);
        this.applyAlpha(1);
        this.applyBitmapData(a, c);
        this.applyColorTransform(null);
        this.applyMatrix(this.__getMatrix(a.__renderTransform, 1));
        this.updateShader();
        c = a.getVertexBuffer(this.__context3D);
        null != b.__position &&
          this.__context3D.setVertexBufferAt(b.__position.index, c, 0, 3);
        null != b.__textureCoord &&
          this.__context3D.setVertexBufferAt(b.__textureCoord.index, c, 3, 2);
        a = a.getIndexBuffer(this.__context3D);
        this.__context3D.drawTriangles(a);
        null != e
          ? this.__context3D.setRenderToTexture(e, f, g, h)
          : this.__context3D.setRenderToBackBuffer();
        this.__clearShader();
      }
    },
    __resize: function (a, b) {
      this.__width = a;
      this.__height = b;
      b =
        null == this.__defaultRenderTarget
          ? this.__stage.stageWidth
          : this.__defaultRenderTarget.width;
      a =
        null == this.__defaultRenderTarget
          ? this.__stage.stageHeight
          : this.__defaultRenderTarget.height;
      if (null == this.__defaultRenderTarget) {
        var c = this.__worldTransform;
        c = Math.round(0 * c.a + 0 * c.c + c.tx);
      } else c = 0;
      this.__offsetX = c;
      null == this.__defaultRenderTarget
        ? ((c = this.__worldTransform),
          (c = Math.round(0 * c.b + 0 * c.d + c.ty)))
        : (c = 0);
      this.__offsetY = c;
      null == this.__defaultRenderTarget &&
        ((c = this.__worldTransform),
        (b = Math.round(b * c.a + 0 * c.c + c.tx - this.__offsetX)));
      this.__displayWidth = b;
      null == this.__defaultRenderTarget &&
        ((b = this.__worldTransform),
        (a = Math.round(0 * b.b + a * b.d + b.ty - this.__offsetY)));
      this.__displayHeight = a;
      fa.createOrtho(
        this.__projection,
        0,
        this.__displayWidth + 2 * this.__offsetX,
        0,
        this.__displayHeight + 2 * this.__offsetY,
        -1e3,
        1e3
      );
      fa.createOrtho(
        this.__projectionFlipped,
        0,
        this.__displayWidth + 2 * this.__offsetX,
        this.__displayHeight + 2 * this.__offsetY,
        0,
        -1e3,
        1e3
      );
    },
    __resumeClipAndMask: function (a) {
      0 < this.__stencilReference
        ? (this.__context3D.setStencilActions(2, 1, 5, 5, 5),
          this.__context3D.setStencilReferenceValue(
            this.__stencilReference,
            255,
            0
          ))
        : (this.__context3D.setStencilActions(),
          this.__context3D.setStencilReferenceValue(0, 0, 0));
      0 < this.__numClipRects
        ? this.__scissorRect(this.__clipRects[this.__numClipRects - 1])
        : this.__scissorRect();
    },
    __scissorRect: function (a) {
      if (null != a) {
        var b = Math.floor(a.x),
          c = Math.floor(a.y),
          d = 0 < a.width ? Math.ceil(a.get_right()) - b : 0;
        a = 0 < a.height ? Math.ceil(a.get_bottom()) - c : 0;
        0 > d && (d = 0);
        0 > a && (a = 0);
        Ab.__scissorRectangle.setTo(b, c, d, a);
        this.__context3D.setScissorRectangle(Ab.__scissorRectangle);
      } else this.__context3D.setScissorRectangle(null);
    },
    __setBlendMode: function (a) {
      null != this.__overrideBlendMode && (a = this.__overrideBlendMode);
      if (this.__blendMode != a)
        switch (((this.__blendMode = a), a)) {
          case 0:
            this.__context3D.setBlendFactors(2, 2);
            break;
          case 9:
            this.__context3D.setBlendFactors(1, 5);
            break;
          case 12:
            this.__context3D.setBlendFactors(2, 6);
            break;
          case 14:
            this.__context3D.setBlendFactors(2, 2);
            this.__context3D.__setGLBlendEquation(
              this.__gl.FUNC_REVERSE_SUBTRACT
            );
            break;
          default:
            this.__context3D.setBlendFactors(2, 5);
        }
    },
    __setRenderTarget: function (a) {
      this.__defaultRenderTarget = a;
      this.__flipped = null == a;
      null != a && this.__resize(a.width, a.height);
    },
    __setShaderBuffer: function (a) {
      this.setShader(a.shader);
      this.__currentShaderBuffer = a;
    },
    __suspendClipAndMask: function () {
      0 < this.__stencilReference &&
        (this.__context3D.setStencilActions(),
        this.__context3D.setStencilReferenceValue(0, 0, 0));
      0 < this.__numClipRects && this.__scissorRect();
    },
    __updateShaderBuffer: function (a) {
      null != this.__currentShader &&
        null != this.__currentShaderBuffer &&
        this.__currentShader.__updateFromBuffer(this.__currentShaderBuffer, a);
    },
    __class__: Ab,
  });
  var vq = function (a) {
    null == a && (a = !1);
    this.fastCompression = a;
  };
  p["openfl.display.PNGEncoderOptions"] = vq;
  vq.__name__ = ["openfl", "display", "PNGEncoderOptions"];
  vq.prototype = { fastCompression: null, __class__: vq };
  var Wk = {};
  p["openfl.display._PixelSnapping.PixelSnapping_Impl_"] = Wk;
  Wk.__name__ = ["openfl", "display", "_PixelSnapping", "PixelSnapping_Impl_"];
  Wk.fromString = function (a) {
    switch (a) {
      case "always":
        return 0;
      case "auto":
        return 1;
      case "never":
        return 2;
      default:
        return null;
    }
  };
  Wk.toString = function (a) {
    switch (a) {
      case 0:
        return "always";
      case 1:
        return "auto";
      case 2:
        return "never";
      default:
        return null;
    }
  };
  var st = function (a) {
    this.onComplete = new Md();
    this.display = a;
    null != a &&
      (a.addEventListener("unload", B(this, this.display_onUnload)),
      wa.get_current().addChild(a));
  };
  p["openfl.display.Preloader"] = st;
  st.__name__ = ["openfl", "display", "Preloader"];
  st.prototype = {
    onComplete: null,
    complete: null,
    display: null,
    ready: null,
    start: function () {
      this.ready = !0;
      wa.get_current().get_loaderInfo().__complete();
      if (null != this.display) {
        var a = new ma("complete", !0, !0);
        this.display.dispatchEvent(a);
        a.isDefaultPrevented() || this.display.dispatchEvent(new ma("unload"));
      } else
        this.complete || ((this.complete = !0), this.onComplete.dispatch());
    },
    update: function (a, b) {
      wa.get_current().get_loaderInfo().__update(a, b);
      null != this.display &&
        this.display.dispatchEvent(new gh("progress", !0, !0, a, b));
    },
    display_onUnload: function (a) {
      null != this.display &&
        (this.display.removeEventListener(
          "unload",
          B(this, this.display_onUnload)
        ),
        this.display.parent == wa.get_current() &&
          wa.get_current().removeChild(this.display),
        wa.get_current().stage.set_focus(null),
        (this.display = null));
      this.ready &&
        !this.complete &&
        ((this.complete = !0), this.onComplete.dispatch());
    },
    __class__: st,
  };
  var Kq = function () {
    gb.call(this);
    var a = this.getBackgroundColor(),
      b = 0;
    70 >
      0.299 * ((a >> 16) & 255) +
        0.587 * ((a >> 8) & 255) +
        0.114 * (a & 255) && (b = 16777215);
    a = this.getHeight() / 2 - 3.5;
    var c = this.getWidth() - 60;
    this.outline = new gb();
    this.outline.get_graphics().beginFill(b, 0.07);
    this.outline.get_graphics().drawRect(0, 0, c, 7);
    this.outline.set_x(30);
    this.outline.set_y(a);
    this.outline.set_alpha(0);
    this.addChild(this.outline);
    this.progress = new gb();
    this.progress.get_graphics().beginFill(b, 0.35);
    this.progress.get_graphics().drawRect(0, 0, c - 4, 3);
    this.progress.set_x(32);
    this.progress.set_y(a + 2);
    this.progress.set_scaleX(0);
    this.progress.set_alpha(0);
    this.addChild(this.progress);
    this.startAnimation = wa.getTimer() + 100;
    this.endAnimation = this.startAnimation + 1e3;
    this.addEventListener("addedToStage", B(this, this.this_onAddedToStage));
  };
  p["openfl.display.DefaultPreloader"] = Kq;
  Kq.__name__ = ["openfl", "display", "DefaultPreloader"];
  Kq.__super__ = gb;
  Kq.prototype = x(gb.prototype, {
    endAnimation: null,
    outline: null,
    progress: null,
    startAnimation: null,
    getBackgroundColor: function () {
      var a = wa.get_current().stage.window.context.attributes;
      return Object.prototype.hasOwnProperty.call(a, "background") &&
        null != a.background
        ? a.background
        : 0;
    },
    getHeight: function () {
      var a = wa.get_current().stage.window.__height;
      return 0 < a ? a : wa.get_current().stage.stageHeight;
    },
    getWidth: function () {
      var a = wa.get_current().stage.window.__width;
      return 0 < a ? a : wa.get_current().stage.stageWidth;
    },
    onInit: function () {
      this.addEventListener("enterFrame", B(this, this.this_onEnterFrame));
    },
    onLoaded: function () {
      this.removeEventListener("enterFrame", B(this, this.this_onEnterFrame));
      this.dispatchEvent(new ma("unload"));
    },
    onUpdate: function (a, b) {
      var c = 0;
      0 < b && ((c = a / b), 1 < c && (c = 1));
      this.progress.set_scaleX(c);
    },
    this_onAddedToStage: function (a) {
      this.removeEventListener(
        "addedToStage",
        B(this, this.this_onAddedToStage)
      );
      this.onInit();
      this.onUpdate(
        this.get_loaderInfo().bytesLoaded,
        this.get_loaderInfo().bytesTotal
      );
      this.addEventListener("progress", B(this, this.this_onProgress));
      this.addEventListener("complete", B(this, this.this_onComplete));
    },
    this_onComplete: function (a) {
      a.preventDefault();
      this.removeEventListener("progress", B(this, this.this_onProgress));
      this.removeEventListener("complete", B(this, this.this_onComplete));
      this.onLoaded();
    },
    this_onEnterFrame: function (a) {
      a =
        (wa.getTimer() - this.startAnimation) /
        (this.endAnimation - this.startAnimation);
      0 > a && (a = 0);
      1 < a && (a = 1);
      this.outline.set_alpha(a);
      this.progress.set_alpha(a);
    },
    this_onProgress: function (a) {
      this.onUpdate(a.bytesLoaded | 0, a.bytesTotal | 0);
    },
    __class__: Kq,
  });
  var wq = {};
  p["openfl.display._ShaderData.ShaderData_Impl_"] = wq;
  wq.__name__ = ["openfl", "display", "_ShaderData", "ShaderData_Impl_"];
  wq._new = function (a) {
    return {};
  };
  var xq = function () {
    this.channels = 0;
    this.filter = 5;
    this.index = this.height = 0;
    this.mipFilter = 2;
    this.wrap = this.width = 0;
  };
  p["openfl.display.ShaderInput"] = xq;
  xq.__name__ = ["openfl", "display", "ShaderInput"];
  xq.prototype = {
    channels: null,
    filter: null,
    height: null,
    index: null,
    input: null,
    mipFilter: null,
    name: null,
    width: null,
    wrap: null,
    __isUniform: null,
    __disableGL: function (a, b) {
      a.setTextureAt(b, null);
    },
    __updateGL: function (a, b, c, d, e, f) {
      c = null != c ? c : this.input;
      d = null != d ? d : this.filter;
      e = null != e ? e : this.mipFilter;
      f = null != f ? f : this.wrap;
      null != c
        ? (a.setTextureAt(b, c.getTexture(a)), a.setSamplerStateAt(b, f, d, e))
        : a.setTextureAt(b, null);
    },
    __class__: xq,
  };
  var Pk = function () {
    this.index = 0;
  };
  p["openfl.display.ShaderParameter"] = Pk;
  Pk.__name__ = ["openfl", "display", "ShaderParameter"];
  Pk.prototype = {
    index: null,
    name: null,
    type: null,
    value: null,
    __arrayLength: null,
    __internal: null,
    __isBool: null,
    __isFloat: null,
    __isInt: null,
    __isUniform: null,
    __length: null,
    __uniformMatrix: null,
    __useArray: null,
    __disableGL: function (a) {
      a = a.gl;
      if (!this.__isUniform)
        for (var b = 0, c = this.__arrayLength; b < c; ) {
          var d = b++;
          a.disableVertexAttribArray(this.index + d);
        }
    },
    __updateGL: function (a, b) {
      a = a.gl;
      var c = null != b ? b : this.value,
        d = this.__isBool ? c : null;
      b = this.__isFloat ? c : null;
      var e = this.__isInt ? c : null;
      if (this.__isUniform)
        if (null != c && c.length >= this.__length)
          switch (this.type) {
            case 0:
              a.uniform1i(this.index, d[0] ? 1 : 0);
              break;
            case 1:
              a.uniform2i(this.index, d[0] ? 1 : 0, d[1] ? 1 : 0);
              break;
            case 2:
              a.uniform3i(this.index, d[0] ? 1 : 0, d[1] ? 1 : 0, d[2] ? 1 : 0);
              break;
            case 3:
              a.uniform4i(
                this.index,
                d[0] ? 1 : 0,
                d[1] ? 1 : 0,
                d[2] ? 1 : 0,
                d[3] ? 1 : 0
              );
              break;
            case 4:
              a.uniform1f(this.index, b[0]);
              break;
            case 5:
              a.uniform2f(this.index, b[0], b[1]);
              break;
            case 6:
              a.uniform3f(this.index, b[0], b[1], b[2]);
              break;
            case 7:
              a.uniform4f(this.index, b[0], b[1], b[2], b[3]);
              break;
            case 8:
              a.uniform1i(this.index, e[0]);
              break;
            case 9:
              a.uniform2i(this.index, e[0], e[1]);
              break;
            case 10:
              a.uniform3i(this.index, e[0], e[1], e[2]);
              break;
            case 11:
              a.uniform4i(this.index, e[0], e[1], e[2], e[3]);
              break;
            case 12:
              for (c = 0; 4 > c; ) (d = c++), (this.__uniformMatrix[d] = b[d]);
              yb.uniformMatrix2fv(a, this.index, !1, this.__uniformMatrix);
              break;
            case 16:
              for (c = 0; 9 > c; ) (d = c++), (this.__uniformMatrix[d] = b[d]);
              yb.uniformMatrix3fv(a, this.index, !1, this.__uniformMatrix);
              break;
            case 20:
              for (c = 0; 16 > c; ) (d = c++), (this.__uniformMatrix[d] = b[d]);
              yb.uniformMatrix4fv(a, this.index, !1, this.__uniformMatrix);
          }
        else
          switch (this.type) {
            case 1:
            case 9:
              a.uniform2i(this.index, 0, 0);
              break;
            case 3:
            case 11:
              a.uniform4i(this.index, 0, 0, 0, 0);
              break;
            case 4:
              a.uniform1f(this.index, 0);
              break;
            case 5:
              a.uniform2f(this.index, 0, 0);
              break;
            case 6:
              a.uniform3f(this.index, 0, 0, 0);
              break;
            case 7:
              a.uniform4f(this.index, 0, 0, 0, 0);
              break;
            case 0:
            case 8:
              a.uniform1i(this.index, 0);
              break;
            case 2:
            case 10:
              a.uniform3i(this.index, 0, 0, 0);
              break;
            case 12:
              for (b = 0; 4 > b; ) (c = b++), (this.__uniformMatrix[c] = 0);
              yb.uniformMatrix2fv(a, this.index, !1, this.__uniformMatrix);
              break;
            case 16:
              for (b = 0; 9 > b; ) (c = b++), (this.__uniformMatrix[c] = 0);
              yb.uniformMatrix3fv(a, this.index, !1, this.__uniformMatrix);
              break;
            case 20:
              for (b = 0; 16 > b; ) (c = b++), (this.__uniformMatrix[c] = 0);
              yb.uniformMatrix4fv(a, this.index, !1, this.__uniformMatrix);
          }
      else if (this.__useArray || (null != c && c.length != this.__length))
        for (b = 0, c = this.__arrayLength; b < c; )
          (d = b++), a.enableVertexAttribArray(this.index + d);
      else {
        for (var f = 0, g = this.__arrayLength; f < g; ) {
          var h = f++;
          a.disableVertexAttribArray(this.index + h);
        }
        if (null != c)
          switch (this.type) {
            case 0:
              a.vertexAttrib1f(this.index, d[0] ? 1 : 0);
              break;
            case 1:
              a.vertexAttrib2f(this.index, d[0] ? 1 : 0, d[1] ? 1 : 0);
              break;
            case 2:
              a.vertexAttrib3f(
                this.index,
                d[0] ? 1 : 0,
                d[1] ? 1 : 0,
                d[2] ? 1 : 0
              );
              break;
            case 3:
              a.vertexAttrib4f(
                this.index,
                d[0] ? 1 : 0,
                d[1] ? 1 : 0,
                d[2] ? 1 : 0,
                d[3] ? 1 : 0
              );
              break;
            case 4:
              a.vertexAttrib1f(this.index, b[0]);
              break;
            case 5:
              a.vertexAttrib2f(this.index, b[0], b[1]);
              break;
            case 6:
              a.vertexAttrib3f(this.index, b[0], b[1], b[2]);
              break;
            case 7:
              a.vertexAttrib4f(this.index, b[0], b[1], b[2], b[3]);
              break;
            case 8:
              a.vertexAttrib1f(this.index, e[0]);
              break;
            case 9:
              a.vertexAttrib2f(this.index, e[0], e[1]);
              break;
            case 10:
              a.vertexAttrib3f(this.index, e[0], e[1], e[2]);
              break;
            case 11:
              a.vertexAttrib4f(this.index, e[0], e[1], e[2], e[3]);
              break;
            case 12:
              for (c = 0; 2 > c; )
                (d = c++),
                  a.vertexAttrib2f(this.index + d, b[2 * d], b[2 * d + 1]);
              break;
            case 16:
              for (c = 0; 3 > c; )
                (d = c++),
                  a.vertexAttrib3f(
                    this.index + d,
                    b[3 * d],
                    b[3 * d + 1],
                    b[3 * d + 2]
                  );
              break;
            case 20:
              for (c = 0; 4 > c; )
                (d = c++),
                  a.vertexAttrib4f(
                    this.index + d,
                    b[4 * d],
                    b[4 * d + 1],
                    b[4 * d + 2],
                    b[4 * d + 3]
                  );
          }
        else
          switch (this.type) {
            case 1:
            case 5:
            case 9:
              a.vertexAttrib2f(this.index, 0, 0);
              break;
            case 3:
            case 7:
            case 11:
              a.vertexAttrib4f(this.index, 0, 0, 0, 0);
              break;
            case 0:
            case 4:
            case 8:
              a.vertexAttrib1f(this.index, 0);
              break;
            case 2:
            case 6:
            case 10:
              a.vertexAttrib3f(this.index, 0, 0, 0);
              break;
            case 12:
              for (b = 0; 2 > b; )
                (c = b++), a.vertexAttrib2f(this.index + c, 0, 0);
              break;
            case 16:
              for (b = 0; 3 > b; )
                (c = b++), a.vertexAttrib3f(this.index + c, 0, 0, 0);
              break;
            case 20:
              for (b = 0; 4 > b; )
                (c = b++), a.vertexAttrib4f(this.index + c, 0, 0, 0, 0);
          }
      }
    },
    __updateGLFromBuffer: function (a, b, c, d, e) {
      a = a.gl;
      if (this.__isUniform) {
        if (d >= this.__length)
          switch (this.type) {
            case 1:
            case 9:
              a.uniform2i(this.index, b[c] | 0, b[c + 1] | 0);
              break;
            case 3:
            case 11:
              a.uniform4i(
                this.index,
                b[c] | 0,
                b[c + 1] | 0,
                b[c + 2] | 0,
                b[c + 3] | 0
              );
              break;
            case 4:
              a.uniform1f(this.index, b[c]);
              break;
            case 5:
              a.uniform2f(this.index, b[c], b[c + 1]);
              break;
            case 6:
              a.uniform3f(this.index, b[c], b[c + 1], b[c + 2]);
              break;
            case 7:
              a.uniform4f(this.index, b[c], b[c + 1], b[c + 2], b[c + 3]);
              break;
            case 0:
            case 8:
              a.uniform1i(this.index, b[c] | 0);
              break;
            case 2:
            case 10:
              a.uniform3i(this.index, b[c] | 0, b[c + 1] | 0, b[c + 2] | 0);
              break;
            case 12:
              for (d = 0; 4 > d; )
                (e = d++), (this.__uniformMatrix[e] = b[c + e]);
              yb.uniformMatrix2fv(a, this.index, !1, this.__uniformMatrix);
              break;
            case 16:
              for (d = 0; 9 > d; )
                (e = d++), (this.__uniformMatrix[e] = b[c + e]);
              yb.uniformMatrix3fv(a, this.index, !1, this.__uniformMatrix);
              break;
            case 20:
              for (d = 0; 16 > d; )
                (e = d++), (this.__uniformMatrix[e] = b[c + e]);
              yb.uniformMatrix4fv(a, this.index, !1, this.__uniformMatrix);
          }
      } else if (this.__internal || (0 != d && d != this.__length)) {
        b = a.FLOAT;
        this.__isBool ? (b = a.INT) : this.__isInt && (b = a.INT);
        for (var f = 0, g = this.__arrayLength; f < g; ) {
          var h = f++;
          a.enableVertexAttribArray(this.index + h);
        }
        if (0 < d)
          for (d = 0, f = this.__arrayLength; d < f; )
            (g = d++),
              a.vertexAttribPointer(
                this.index + g,
                this.__length,
                b,
                !1,
                4 * this.__length,
                4 * (c + e * this.__length + g * this.__arrayLength)
              );
      } else {
        e = 0;
        for (f = this.__arrayLength; e < f; )
          (g = e++), a.disableVertexAttribArray(this.index + g);
        if (0 < d)
          switch (this.type) {
            case 1:
            case 5:
            case 9:
              a.vertexAttrib2f(this.index, b[c], b[c + 1]);
              break;
            case 3:
            case 7:
            case 11:
              a.vertexAttrib4f(this.index, b[c], b[c + 1], b[c + 2], b[c + 3]);
              break;
            case 0:
            case 4:
            case 8:
              a.vertexAttrib1f(this.index, b[c]);
              break;
            case 2:
            case 6:
            case 10:
              a.vertexAttrib3f(this.index, b[c], b[c + 1], b[c + 2]);
              break;
            case 12:
              for (d = 0; 2 > d; )
                (e = d++),
                  a.vertexAttrib2f(
                    this.index + e,
                    b[c + 2 * e],
                    b[c + 2 * e + 1]
                  );
              break;
            case 16:
              for (d = 0; 3 > d; )
                (e = d++),
                  a.vertexAttrib3f(
                    this.index + e,
                    b[c + 3 * e],
                    b[c + 3 * e + 1],
                    b[c + 3 * e + 2]
                  );
              break;
            case 20:
              for (d = 0; 4 > d; )
                (e = d++),
                  a.vertexAttrib4f(
                    this.index + e,
                    b[c + 4 * e],
                    b[c + 4 * e + 1],
                    b[c + 4 * e + 2],
                    b[c + 4 * e + 3]
                  );
          }
        else
          switch (this.type) {
            case 1:
            case 5:
            case 9:
              a.vertexAttrib2f(this.index, 0, 0);
              break;
            case 3:
            case 7:
            case 11:
              a.vertexAttrib4f(this.index, 0, 0, 0, 0);
              break;
            case 0:
            case 4:
            case 8:
              a.vertexAttrib1f(this.index, 0);
              break;
            case 2:
            case 6:
            case 10:
              a.vertexAttrib3f(this.index, 0, 0, 0);
              break;
            case 12:
              for (c = 0; 2 > c; )
                (b = c++), a.vertexAttrib2f(this.index + b, 0, 0);
              break;
            case 16:
              for (c = 0; 3 > c; )
                (b = c++), a.vertexAttrib3f(this.index + b, 0, 0, 0);
              break;
            case 20:
              for (c = 0; 4 > c; )
                (b = c++), a.vertexAttrib4f(this.index + b, 0, 0, 0, 0);
          }
      }
    },
    set_name: function (a) {
      this.__internal = ba.startsWith(a, "openfl_");
      return (this.name = a);
    },
    __class__: Pk,
    __properties__: { set_name: "set_name" },
  };
  var Vd = {};
  p["openfl.display._ShaderParameterType.ShaderParameterType_Impl_"] = Vd;
  Vd.__name__ = [
    "openfl",
    "display",
    "_ShaderParameterType",
    "ShaderParameterType_Impl_",
  ];
  Vd.fromString = function (a) {
    switch (a) {
      case "bool":
        return 0;
      case "bool2":
        return 1;
      case "bool3":
        return 1;
      case "bool4":
        return 1;
      case "float":
        return 4;
      case "float2":
        return 5;
      case "float3":
        return 6;
      case "float4":
        return 7;
      case "int":
        return 8;
      case "int2":
        return 9;
      case "int3":
        return 10;
      case "int4":
        return 11;
      case "matrix2x2":
        return 12;
      case "matrix2x3":
        return 13;
      case "matrix2x4":
        return 14;
      case "matrix3x2":
        return 15;
      case "matrix3x3":
        return 16;
      case "matrix3x4":
        return 17;
      case "matrix4x2":
        return 18;
      case "matrix4x3":
        return 19;
      case "matrix4x4":
        return 20;
      default:
        return null;
    }
  };
  Vd.toString = function (a) {
    switch (a) {
      case 0:
        return "bool";
      case 1:
        return "bool2";
      case 2:
        return "bool3";
      case 3:
        return "bool4";
      case 4:
        return "float";
      case 5:
        return "float2";
      case 6:
        return "float3";
      case 7:
        return "float4";
      case 8:
        return "int";
      case 9:
        return "int2";
      case 10:
        return "int3";
      case 11:
        return "int4";
      case 12:
        return "matrix2x2";
      case 13:
        return "matrix2x3";
      case 14:
        return "matrix2x4";
      case 15:
        return "matrix3x2";
      case 16:
        return "matrix3x3";
      case 17:
        return "matrix3x4";
      case 18:
        return "matrix4x2";
      case 19:
        return "matrix4x3";
      case 20:
        return "matrix4x4";
      default:
        return null;
    }
  };
  var ho = {};
  p["openfl.display._ShaderPrecision.ShaderPrecision_Impl_"] = ho;
  ho.__name__ = [
    "openfl",
    "display",
    "_ShaderPrecision",
    "ShaderPrecision_Impl_",
  ];
  ho.fromString = function (a) {
    switch (a) {
      case "fast":
        return 0;
      case "full":
        return 1;
      default:
        return null;
    }
  };
  ho.toString = function (a) {
    switch (a) {
      case 0:
        return "fast";
      case 1:
        return "full";
      default:
        return null;
    }
  };
  var Ye = function () {
    hb.call(this);
  };
  p["openfl.display.Shape"] = Ye;
  Ye.__name__ = ["openfl", "display", "Shape"];
  Ye.__super__ = hb;
  Ye.prototype = x(hb.prototype, {
    get_graphics: function () {
      null == this.__graphics && (this.__graphics = new hf(this));
      return this.__graphics;
    },
    __class__: Ye,
    __properties__: x(hb.prototype.__properties__, {
      get_graphics: "get_graphics",
    }),
  });
  var wg = function (a, b, c, d) {
    Vb.call(this);
    this.enabled = !0;
    this.trackAsMenu = !1;
    this.useHandCursor = !0;
    this.__upState = null != a ? a : new hb();
    this.__overState = b;
    this.__downState = c;
    this.set_hitTestState(null != d ? d : new hb());
    this.addEventListener("mouseDown", B(this, this.__this_onMouseDown));
    this.addEventListener("mouseOut", B(this, this.__this_onMouseOut));
    this.addEventListener("mouseOver", B(this, this.__this_onMouseOver));
    this.addEventListener("mouseUp", B(this, this.__this_onMouseUp));
    this.__tabEnabled = !0;
    this.set___currentState(this.__upState);
    null != wg.__initSymbol &&
      ((a = wg.__initSWF),
      (this.__symbol = wg.__initSymbol),
      (wg.__initSWF = null),
      (wg.__initSymbol = null),
      this.__fromSymbol(a, this.__symbol));
  };
  p["openfl.display.SimpleButton"] = wg;
  wg.__name__ = ["openfl", "display", "SimpleButton"];
  wg.__super__ = Vb;
  wg.prototype = x(Vb.prototype, {
    enabled: null,
    trackAsMenu: null,
    useHandCursor: null,
    __currentState: null,
    __downState: null,
    __hitTestState: null,
    __ignoreEvent: null,
    __overState: null,
    __previousStates: null,
    __soundTransform: null,
    __symbol: null,
    __upState: null,
    __fromSymbol: function (a, b) {
      this.__symbol = b;
      null != b.downState && this.set_downState(b.downState.__createObject(a));
      null != b.hitState && this.set_hitTestState(b.hitState.__createObject(a));
      null != b.overState && this.set_overState(b.overState.__createObject(a));
      null != b.upState && this.set_upState(b.upState.__createObject(a));
    },
    __getBounds: function (a, b) {
      Vb.prototype.__getBounds.call(this, a, b);
      var c = ya.__pool.get(),
        d = this.__currentState.__transform;
      c.a = d.a * b.a + d.b * b.c;
      c.b = d.a * b.b + d.b * b.d;
      c.c = d.c * b.a + d.d * b.c;
      c.d = d.c * b.b + d.d * b.d;
      c.tx = d.tx * b.a + d.ty * b.c + b.tx;
      c.ty = d.tx * b.b + d.ty * b.d + b.ty;
      this.__currentState.__getBounds(a, c);
      ya.__pool.release(c);
    },
    __getRenderBounds: function (a, b) {
      if (null != this.__scrollRect)
        Vb.prototype.__getRenderBounds.call(this, a, b);
      else {
        Vb.prototype.__getBounds.call(this, a, b);
        var c = ya.__pool.get(),
          d = this.__currentState.__transform;
        c.a = d.a * b.a + d.b * b.c;
        c.b = d.a * b.b + d.b * b.d;
        c.c = d.c * b.a + d.d * b.c;
        c.d = d.c * b.b + d.d * b.d;
        c.tx = d.tx * b.a + d.ty * b.c + b.tx;
        c.ty = d.tx * b.b + d.ty * b.d + b.ty;
        this.__currentState.__getRenderBounds(a, c);
        ya.__pool.release(c);
      }
    },
    __getCursor: function () {
      return this.useHandCursor && !this.__ignoreEvent && this.enabled
        ? "button"
        : null;
    },
    __hitTest: function (a, b, c, d, e, f) {
      var g = !1;
      if (null != this.get_hitTestState())
        this.get_hitTestState().__hitTest(a, b, c, d, e, f) &&
          (null != d && (0 == d.length ? (d[0] = f) : (d[d.length - 1] = f)),
          (g = e ? this.mouseEnabled : !0));
      else if (null != this.__currentState) {
        if (
          !f.get_visible() ||
          this.__isMask ||
          (e && !this.mouseEnabled) ||
          (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
        )
          return !1;
        this.__currentState.__hitTest(a, b, c, d, e, f) && (g = e);
      }
      if (null != d)
        for (; 1 < d.length && d[d.length - 1] == d[d.length - 2]; ) d.pop();
      return g;
    },
    __hitTestMask: function (a, b) {
      var c = !1;
      this.__currentState.__hitTestMask(a, b) && (c = !0);
      return c;
    },
    __renderCairo: function (a) {
      !this.__renderable ||
        0 >= this.__worldAlpha ||
        null == this.__currentState ||
        (a.__pushMaskObject(this),
        this.__currentState.__renderCairo(a),
        a.__popMaskObject(this),
        this.__renderEvent(a));
    },
    __renderCairoMask: function (a) {
      this.__currentState.__renderCairoMask(a);
    },
    __renderCanvas: function (a) {
      !this.__renderable ||
        0 >= this.__worldAlpha ||
        null == this.__currentState ||
        (a.__pushMaskObject(this),
        this.__currentState.__renderCanvas(a),
        a.__popMaskObject(this),
        this.__renderEvent(a));
    },
    __renderCanvasMask: function (a) {
      this.__currentState.__renderCanvasMask(a);
    },
    __renderDOM: function (a) {
      a.__pushMaskObject(this);
      for (var b = 0, c = this.__previousStates; b < c.get_length(); ) {
        var d = c.get(b);
        ++b;
        d.__renderDOM(a);
      }
      this.__previousStates.set_length(0);
      null != this.__currentState &&
        (this.__currentState.stage != this.stage &&
          this.__currentState.__setStageReference(this.stage),
        this.__currentState.__renderDOM(a));
      a.__popMaskObject(this);
      this.__renderEvent(a);
    },
    __renderGL: function (a) {
      !this.__renderable ||
        0 >= this.__worldAlpha ||
        null == this.__currentState ||
        (a.__pushMaskObject(this),
        this.__currentState.__renderGL(a),
        a.__popMaskObject(this),
        this.__renderEvent(a));
    },
    __renderGLMask: function (a) {
      null != this.__currentState && this.__currentState.__renderGLMask(a);
    },
    __setStageReference: function (a) {
      Vb.prototype.__setStageReference.call(this, a);
      null != this.__currentState && this.__currentState.__setStageReference(a);
      null != this.get_hitTestState() &&
        this.get_hitTestState() != this.__currentState &&
        this.get_hitTestState().__setStageReference(a);
    },
    __setTransformDirty: function () {
      Vb.prototype.__setTransformDirty.call(this);
      null != this.__currentState && this.__currentState.__setTransformDirty();
      null != this.get_hitTestState() &&
        this.get_hitTestState() != this.__currentState &&
        this.get_hitTestState().__setTransformDirty();
    },
    __update: function (a, b) {
      Vb.prototype.__update.call(this, a, b);
      b &&
        (null != this.__currentState && this.__currentState.__update(a, !0),
        null != this.get_hitTestState() &&
          this.get_hitTestState() != this.__currentState &&
          this.get_hitTestState().__update(a, !0));
    },
    __updateTransforms: function (a) {
      Vb.prototype.__updateTransforms.call(this, a);
      null != this.__currentState && this.__currentState.__updateTransforms();
      null != this.get_hitTestState() &&
        this.get_hitTestState() != this.__currentState &&
        this.get_hitTestState().__updateTransforms();
    },
    get_downState: function () {
      return this.__downState;
    },
    set_downState: function (a) {
      null != this.__downState &&
        this.__currentState == this.__downState &&
        this.set___currentState(this.__downState);
      return (this.__downState = a);
    },
    get_hitTestState: function () {
      return this.__hitTestState;
    },
    set_hitTestState: function (a) {
      null != this.__hitTestState &&
        this.__hitTestState != a &&
        this.__hitTestState != this.get_downState() &&
        this.__hitTestState != this.get_upState() &&
        this.__hitTestState != this.get_overState() &&
        (this.__hitTestState.__renderParent = null);
      null != a &&
        ((a.__renderParent = this),
        a.__renderDirty ||
          ((a.__renderDirty = !0), a.__setParentRenderDirty()));
      return (this.__hitTestState = a);
    },
    get_overState: function () {
      return this.__overState;
    },
    set_overState: function (a) {
      null != this.__overState &&
        this.__currentState == this.__overState &&
        this.set___currentState(a);
      return (this.__overState = a);
    },
    get_soundTransform: function () {
      null == this.__soundTransform && (this.__soundTransform = new Yf());
      return new Yf(this.__soundTransform.volume, this.__soundTransform.pan);
    },
    set_soundTransform: function (a) {
      this.__soundTransform = new Yf(a.volume, a.pan);
      return a;
    },
    get_upState: function () {
      return this.__upState;
    },
    set_upState: function (a) {
      null != this.__upState &&
        this.__currentState == this.__upState &&
        this.set___currentState(a);
      return (this.__upState = a);
    },
    set___currentState: function (a) {
      null != this.__currentState &&
        this.__currentState != this.get_hitTestState() &&
        (this.__currentState.__renderParent = null);
      null != a && null != a.parent && a.parent.removeChild(a);
      hb.__supportDOM &&
        null == this.__previousStates &&
        (this.__previousStates = Oa.toObjectVector(null));
      if (a != this.__currentState) {
        if (hb.__supportDOM) {
          null != this.__currentState &&
            (this.__currentState.__setStageReference(null),
            this.__previousStates.push(this.__currentState));
          var b = this.__previousStates.indexOf(a, 0);
          -1 < b && this.__previousStates.splice(b, 1);
        }
        null != a &&
          ((a.__renderParent = this),
          a.__renderDirty ||
            ((a.__renderDirty = !0), a.__setParentRenderDirty()));
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty());
      }
      return (this.__currentState = a);
    },
    __this_onMouseDown: function (a) {
      this.enabled && this.set___currentState(this.get_downState());
    },
    __this_onMouseOut: function (a) {
      this.__ignoreEvent = !1;
      this.enabled &&
        this.get_upState() != this.__currentState &&
        this.set___currentState(this.get_upState());
    },
    __this_onMouseOver: function (a) {
      a.buttonDown && (this.__ignoreEvent = !0);
      this.get_overState() != this.__currentState &&
        null != this.get_overState() &&
        !this.__ignoreEvent &&
        this.enabled &&
        this.set___currentState(this.get_overState());
    },
    __this_onMouseUp: function (a) {
      this.__ignoreEvent = !1;
      this.enabled &&
        (null != this.get_overState()
          ? this.set___currentState(this.get_overState())
          : this.set___currentState(this.get_upState()));
    },
    __class__: wg,
    __properties__: x(Vb.prototype.__properties__, {
      set___currentState: "set___currentState",
      set_upState: "set_upState",
      get_upState: "get_upState",
      set_soundTransform: "set_soundTransform",
      get_soundTransform: "get_soundTransform",
      set_overState: "set_overState",
      get_overState: "get_overState",
      set_hitTestState: "set_hitTestState",
      get_hitTestState: "get_hitTestState",
      set_downState: "set_downState",
      get_downState: "get_downState",
    }),
  });
  var Mi = {};
  p["openfl.display._SpreadMethod.SpreadMethod_Impl_"] = Mi;
  Mi.__name__ = ["openfl", "display", "_SpreadMethod", "SpreadMethod_Impl_"];
  Mi.fromInt = function (a) {
    return a;
  };
  Mi.fromString = function (a) {
    switch (a) {
      case "pad":
        return 0;
      case "reflect":
        return 1;
      case "repeat":
        return 2;
      default:
        return null;
    }
  };
  Mi.toInt = function (a) {
    return a;
  };
  Mi.toString = function (a) {
    switch (a) {
      case 0:
        return "pad";
      case 1:
        return "reflect";
      case 2:
        return "repeat";
      default:
        return null;
    }
  };
  var Xk = function (a, b) {
    wd.call(this);
    this.set_name(null);
    this.__color = -1;
    this.__colorSplit = [255, 255, 255];
    this.__colorString = "#FFFFFF";
    this.__contentsScaleFactor = 1;
    this.__deltaTime = this.__currentTabOrderIndex = 0;
    this.__displayState = 2;
    this.__logicalHeight =
      this.__logicalWidth =
      this.__lastClickTime =
      this.__mouseY =
      this.__mouseX =
        0;
    this.__displayMatrix = new ya();
    this.__displayRect = new W();
    this.__renderDirty = !0;
    this.stage3Ds = Oa.toObjectVector(null);
    for (var c = 0; 4 > c; ) c++, this.stage3Ds.push(new io(this));
    this.stage = this;
    this.align = 6;
    this.allowsFullScreenInteractive = this.allowsFullScreen = !0;
    this.__quality = 1;
    this.__scaleMode = 2;
    this.showDefaultContextMenu = !0;
    this.softKeyboardRect = new W();
    this.stageFocusRect = !0;
    this.__macKeyboard =
      (/AppleWebKit/.test(navigator.userAgent) &&
        /Mobile\/\w+/.test(navigator.userAgent)) ||
      /Mac/.test(navigator.platform);
    this.__clearBeforeRender = !0;
    this.__forceRender = !1;
    this.__stack = [];
    this.__rollOutStack = [];
    this.__mouseOutStack = [];
    this.__touchData = new Ca();
    this.application = a.application;
    this.window = a;
    this.set_color(b);
    this.__contentsScaleFactor = a.__scale;
    this.__wasFullscreen = a.__fullscreen;
    this.__resize();
    null == wa.get_current().stage && this.stage.addChild(wa.get_current());
  };
  p["openfl.display.Stage"] = Xk;
  Xk.__name__ = ["openfl", "display", "Stage"];
  Xk.__interfaces__ = [vn];
  Xk.__super__ = wd;
  Xk.prototype = x(wd.prototype, {
    align: null,
    allowsFullScreen: null,
    allowsFullScreenInteractive: null,
    application: null,
    context3D: null,
    showDefaultContextMenu: null,
    softKeyboardRect: null,
    stage3Ds: null,
    stageFocusRect: null,
    stageHeight: null,
    stageWidth: null,
    window: null,
    __cacheFocus: null,
    __clearBeforeRender: null,
    __color: null,
    __colorSplit: null,
    __colorString: null,
    __contentsScaleFactor: null,
    __currentTabOrderIndex: null,
    __deltaTime: null,
    __dirty: null,
    __displayMatrix: null,
    __displayRect: null,
    __displayState: null,
    __dragBounds: null,
    __dragObject: null,
    __dragOffsetX: null,
    __dragOffsetY: null,
    __focus: null,
    __forceRender: null,
    __fullscreen: null,
    __fullScreenSourceRect: null,
    __invalidated: null,
    __lastClickTime: null,
    __logicalWidth: null,
    __logicalHeight: null,
    __macKeyboard: null,
    __mouseDownLeft: null,
    __mouseDownMiddle: null,
    __mouseDownRight: null,
    __mouseOutStack: null,
    __mouseOverTarget: null,
    __mouseX: null,
    __mouseY: null,
    __pendingMouseEvent: null,
    __pendingMouseX: null,
    __pendingMouseY: null,
    __quality: null,
    __renderer: null,
    __rendering: null,
    __rollOutStack: null,
    __scaleMode: null,
    __stack: null,
    __touchData: null,
    __transparent: null,
    __wasDirty: null,
    __wasFullscreen: null,
    __primaryTouch: null,
    invalidate: function () {
      this.__renderDirty = this.__invalidated = !0;
    },
    localToGlobal: function (a) {
      return a.clone();
    },
    onGamepadAxisMove: function (a, b, c) {
      Tb.__onGamepadAxisMove(a, b, c);
    },
    onGamepadButtonDown: function (a, b) {
      Tb.__onGamepadButtonDown(a, b);
    },
    onGamepadButtonUp: function (a, b) {
      Tb.__onGamepadButtonUp(a, b);
    },
    onGamepadConnect: function (a) {
      Tb.__onGamepadConnect(a);
    },
    onGamepadDisconnect: function (a) {
      Tb.__onGamepadDisconnect(a);
    },
    onJoystickAxisMove: function (a, b, c) {},
    onJoystickButtonDown: function (a, b) {},
    onJoystickButtonUp: function (a, b) {},
    onJoystickConnect: function (a) {},
    onJoystickDisconnect: function (a) {},
    onJoystickHatMove: function (a, b, c) {},
    onJoystickTrackballMove: function (a, b, c) {},
    onKeyDown: function (a, b, c) {
      null != this.window && this.window == a && this.__onKey("keyDown", b, c);
    },
    onKeyUp: function (a, b, c) {
      null != this.window && this.window == a && this.__onKey("keyUp", b, c);
    },
    onModuleExit: function (a) {
      null != this.window && this.__broadcastEvent(new ma("deactivate"));
    },
    onMouseDown: function (a, b, c, d) {
      if (null != this.window && this.window == a) {
        this.__dispatchPendingMouseEvent();
        switch (d) {
          case 1:
            var e = "middleMouseDown";
            break;
          case 2:
            e = "rightMouseDown";
            break;
          default:
            e = "mouseDown";
        }
        this.__onMouse(e, (b * a.__scale) | 0, (c * a.__scale) | 0, d);
        this.showDefaultContextMenu || 2 != d || a.onMouseDown.cancel();
      }
    },
    onMouseMove: function (a, b, c) {
      null != this.window &&
        this.window == a &&
        ((this.__pendingMouseEvent = !0),
        (this.__pendingMouseX = (b * a.__scale) | 0),
        (this.__pendingMouseY = (c * a.__scale) | 0));
    },
    onMouseMoveRelative: function (a, b, c) {},
    onMouseUp: function (a, b, c, d) {
      if (null != this.window && this.window == a) {
        this.__dispatchPendingMouseEvent();
        switch (d) {
          case 1:
            var e = "middleMouseUp";
            break;
          case 2:
            e = "rightMouseUp";
            break;
          default:
            e = "mouseUp";
        }
        this.__onMouse(e, (b * a.__scale) | 0, (c * a.__scale) | 0, d);
        this.showDefaultContextMenu || 2 != d || a.onMouseUp.cancel();
      }
    },
    onMouseWheel: function (a, b, c, d) {
      null != this.window &&
        this.window == a &&
        (this.__dispatchPendingMouseEvent(),
        d == ze.PIXELS
          ? this.__onMouseWheel((b * a.__scale) | 0, (c * a.__scale) | 0, d)
          : this.__onMouseWheel(b | 0, c | 0, d));
    },
    onPreloadComplete: function () {},
    onPreloadProgress: function (a, b) {},
    onRenderContextLost: function () {
      this.__renderer = null;
    },
    onRenderContextRestored: function (a) {
      this.__createRenderer();
    },
    onTextEdit: function (a, b, c, d) {},
    onTextInput: function (a, b) {
      if (null != this.window && this.window == a) {
        var c = [];
        null == this.__focus
          ? this.__getInteractive(c)
          : this.__focus.__getInteractive(c);
        b = new gg("textInput", !0, !0, b);
        0 < c.length
          ? (c.reverse(), this.__dispatchStack(b, c))
          : this.__dispatchEvent(b);
        b.isDefaultPrevented() && a.onTextInput.cancel();
      }
    },
    onTouchCancel: function (a) {
      this.__primaryTouch == a && (this.__primaryTouch = null);
      this.__onTouch("touchEnd", a);
    },
    onTouchMove: function (a) {
      this.__onTouch("touchMove", a);
    },
    onTouchEnd: function (a) {
      this.__primaryTouch == a && (this.__primaryTouch = null);
      this.__onTouch("touchEnd", a);
    },
    onTouchStart: function (a) {
      null == this.__primaryTouch && (this.__primaryTouch = a);
      this.__onTouch("touchBegin", a);
    },
    onWindowActivate: function (a) {},
    onWindowClose: function (a) {
      this.window == a && (this.window = null);
      this.__primaryTouch = null;
      this.__broadcastEvent(new ma("deactivate"));
    },
    onWindowCreate: function (a) {
      null != this.window &&
        this.window == a &&
        null != a.context &&
        this.__createRenderer();
    },
    onWindowDeactivate: function (a) {},
    onWindowDropFile: function (a, b) {},
    onWindowEnter: function (a) {},
    onWindowExpose: function (a) {
      null != this.window && this.window == a && (this.__renderDirty = !0);
    },
    onWindowFocusIn: function (a) {
      null != this.window &&
        this.window == a &&
        ((this.__renderDirty = !0),
        this.__broadcastEvent(new ma("activate")),
        this.set_focus(this.__cacheFocus));
    },
    onWindowFocusOut: function (a) {
      null != this.window &&
        this.window == a &&
        ((this.__primaryTouch = null),
        this.__broadcastEvent(new ma("deactivate")),
        (a = this.get_focus()),
        this.set_focus(null),
        (this.__cacheFocus = a));
    },
    onWindowFullscreen: function (a) {
      null != this.window &&
        this.window == a &&
        (this.__resize(),
        this.__wasFullscreen ||
          ((this.__wasFullscreen = !0),
          2 == this.__displayState && (this.__displayState = 1),
          this.__dispatchEvent(new Hg("fullScreen", !1, !1, !0, !0))));
    },
    onWindowLeave: function (a) {
      null == this.window ||
        this.window != a ||
        Ob.__buttonDown ||
        (this.__dispatchPendingMouseEvent(),
        this.__dispatchEvent(new ma("mouseLeave")));
    },
    onWindowMinimize: function (a) {},
    onWindowMove: function (a, b, c) {},
    onWindowResize: function (a, b, c) {
      null != this.window &&
        this.window == a &&
        (this.__resize(),
        this.__wasFullscreen &&
          !a.__fullscreen &&
          ((this.__wasFullscreen = !1),
          (this.__displayState = 2),
          this.__dispatchEvent(new Hg("fullScreen", !1, !1, !1, !0))));
    },
    onWindowRestore: function (a) {
      null != this.window &&
        this.window == a &&
        this.__wasFullscreen &&
        !a.__fullscreen &&
        ((this.__wasFullscreen = !1),
        (this.__displayState = 2),
        this.__dispatchEvent(new Hg("fullScreen", !1, !1, !1, !0)));
    },
    render: function (a) {
      if (!this.__rendering) {
        this.__rendering = !0;
        this.__broadcastEvent(new ma("enterFrame"));
        this.__broadcastEvent(new ma("frameConstructed"));
        this.__broadcastEvent(new ma("exitFrame"));
        this.__renderable = !0;
        this.__enterFrame(this.__deltaTime);
        this.__deltaTime = 0;
        a =
          null != this.__renderer && (this.__renderDirty || this.__forceRender);
        this.__invalidated &&
          a &&
          ((this.__invalidated = !1), this.__broadcastEvent(new ma("render")));
        this.__update(!1, !0);
        if (null != this.__renderer) {
          if (null != this.context3D) {
            for (var b = 0, c = this.stage3Ds; b < c.get_length(); ) {
              var d = c.get(b);
              ++b;
              this.context3D.__renderStage3D(d);
            }
            this.context3D.__present && (a = !0);
          }
          a
            ? (null == this.context3D && this.__renderer.__clear(),
              this.__renderer.__render(this))
            : null == this.context3D && this.window.onRender.cancel();
          null != this.context3D &&
            (this.context3D.__present
              ? (this.__renderer.__cleared || this.__renderer.__clear(),
                (this.context3D.__present = !1),
                (this.context3D.__cleared = !1))
              : this.window.onRender.cancel());
          this.__renderer.__cleared = !1;
        }
        this.__rendering = !1;
      }
    },
    update: function (a) {
      this.__deltaTime = a;
      this.__dispatchPendingMouseEvent();
    },
    __addWindow: function (a) {
      if (this.window == a) {
        var b = B(this, this.onWindowActivate);
        a.onActivate.add(function () {
          b(a);
        });
        var c = B(this, this.onWindowClose);
        a.onClose.add(
          function () {
            c(a);
          },
          !1,
          -9e3
        );
        var d = B(this, this.onWindowDeactivate);
        a.onDeactivate.add(function () {
          d(a);
        });
        var e = B(this, this.onWindowDropFile);
        a.onDropFile.add(function (b) {
          e(a, b);
        });
        var f = B(this, this.onWindowEnter);
        a.onEnter.add(function () {
          f(a);
        });
        var g = B(this, this.onWindowExpose);
        a.onExpose.add(function () {
          g(a);
        });
        var h = B(this, this.onWindowFocusIn);
        a.onFocusIn.add(function () {
          h(a);
        });
        var n = B(this, this.onWindowFocusOut);
        a.onFocusOut.add(function () {
          n(a);
        });
        var k = B(this, this.onWindowFullscreen);
        a.onFullscreen.add(function () {
          k(a);
        });
        var m = B(this, this.onKeyDown);
        a.onKeyDown.add(function (b, c) {
          m(a, b, c);
        });
        var l = B(this, this.onKeyUp);
        a.onKeyUp.add(function (b, c) {
          l(a, b, c);
        });
        var p = B(this, this.onWindowLeave);
        a.onLeave.add(function () {
          p(a);
        });
        var q = B(this, this.onWindowMinimize);
        a.onMinimize.add(function () {
          q(a);
        });
        var r = B(this, this.onMouseDown);
        a.onMouseDown.add(function (b, c, d) {
          r(a, b, c, d);
        });
        var t = B(this, this.onMouseMove);
        a.onMouseMove.add(function (b, c) {
          t(a, b, c);
        });
        var u = B(this, this.onMouseMoveRelative);
        a.onMouseMoveRelative.add(function (b, c) {
          u(a, b, c);
        });
        var v = B(this, this.onMouseUp);
        a.onMouseUp.add(function (b, c, d) {
          v(a, b, c, d);
        });
        var w = B(this, this.onMouseWheel);
        a.onMouseWheel.add(function (b, c, d) {
          w(a, b, c, d);
        });
        var x = B(this, this.onWindowMove);
        a.onMove.add(function (b, c) {
          x(a, b, c);
        });
        a.onRender.add(B(this, this.render));
        a.onRenderContextLost.add(B(this, this.onRenderContextLost));
        a.onRenderContextRestored.add(B(this, this.onRenderContextRestored));
        var y = B(this, this.onWindowResize);
        a.onResize.add(function (b, c) {
          y(a, b, c);
        });
        var z = B(this, this.onWindowRestore);
        a.onRestore.add(function () {
          z(a);
        });
        var A = B(this, this.onTextEdit);
        a.onTextEdit.add(function (b, c, d) {
          A(a, b, c, d);
        });
        var C = B(this, this.onTextInput);
        a.onTextInput.add(function (b) {
          C(a, b);
        });
        this.onWindowCreate(a);
      }
    },
    __broadcastEvent: function (a) {
      var b = a.type,
        c = hb.__broadcastEvents;
      if (null != t[b] ? c.existsReserved(b) : c.h.hasOwnProperty(b))
        for (
          b = a.type,
            c = hb.__broadcastEvents,
            b = null != t[b] ? c.getReserved(b) : c.h[b],
            c = 0;
          c < b.length;

        ) {
          var d = b[c];
          ++c;
          (d.stage != this && null != d.stage) || d.__dispatch(a);
        }
    },
    __createRenderer: function () {
      var a = 1;
      1 < this.window.__scale && (a = this.window.devicePixelRatio ? !0 : 1);
      var b = (this.window.__width * this.window.__scale) | 0,
        c = (this.window.__height * this.window.__scale) | 0;
      switch (this.window.context.type) {
        case "canvas":
          this.__renderer = new mh(this.window.context.canvas2D);
          u.__cast(this.__renderer, mh).pixelRatio = a;
          break;
        case "dom":
          this.__renderer = new Tk(this.window.context.dom);
          u.__cast(this.__renderer, Tk).pixelRatio = a;
          break;
        case "opengl":
        case "opengles":
        case "webgl":
          (this.context3D = new nc(this)),
            this.context3D.configureBackBuffer(b, c, 0, !0, !0, !0),
            this.context3D.present(),
            (this.__renderer = new Ab(this.context3D));
      }
      null != this.__renderer &&
        ((a = this.get_quality()),
        (this.__renderer.__allowSmoothing = 2 != a),
        (this.__renderer.__worldTransform = this.__displayMatrix),
        (this.__renderer.__stage = this),
        this.__renderer.__resize(b, c));
    },
    __dispatchEvent: function (a) {
      return wd.prototype.__dispatchEvent.call(this, a);
    },
    __dispatchPendingMouseEvent: function () {
      this.__pendingMouseEvent &&
        (this.__onMouse(
          "mouseMove",
          this.__pendingMouseX,
          this.__pendingMouseY,
          0
        ),
        (this.__pendingMouseEvent = !1));
    },
    __dispatchStack: function (a, b) {
      var c = b.length;
      if (0 == c) {
        a.eventPhase = 2;
        var d = a.target;
        d.__dispatch(a);
      } else {
        a.eventPhase = 1;
        a.target = b[b.length - 1];
        d = 0;
        for (var e = c - 1; d < e; ) {
          var f = d++;
          b[f].__dispatch(a);
          if (a.__isCanceled) return;
        }
        a.eventPhase = 2;
        d = a.target;
        d.__dispatch(a);
        if (!a.__isCanceled && a.bubbles)
          for (a.eventPhase = 3, c -= 2; 0 <= c; ) {
            b[c].__dispatch(a);
            if (a.__isCanceled) break;
            --c;
          }
      }
    },
    __dispatchTarget: function (a, b) {
      return a.__dispatchEvent(b);
    },
    __drag: function (a) {
      var b = this.__dragObject.parent;
      if (null != b) {
        b = b.__getWorldTransform();
        var c = b.a * b.d - b.b * b.c;
        if (0 == c) (a.x = -b.tx), (a.y = -b.ty);
        else {
          var d = (1 / c) * (b.c * (b.ty - a.y) + b.d * (a.x - b.tx));
          a.y = (1 / c) * (b.a * (a.y - b.ty) + b.b * (b.tx - a.x));
          a.x = d;
        }
      }
      b = a.x + this.__dragOffsetX;
      a = a.y + this.__dragOffsetY;
      null != this.__dragBounds &&
        (b < this.__dragBounds.x
          ? (b = this.__dragBounds.x)
          : b > this.__dragBounds.get_right() &&
            (b = this.__dragBounds.get_right()),
        a < this.__dragBounds.y
          ? (a = this.__dragBounds.y)
          : a > this.__dragBounds.get_bottom() &&
            (a = this.__dragBounds.get_bottom()));
      this.__dragObject.set_x(b);
      this.__dragObject.set_y(a);
    },
    __getInteractive: function (a) {
      null != a && a.push(this);
      return !0;
    },
    __globalToLocal: function (a, b) {
      a != b && b.copyFrom(a);
      return b;
    },
    __handleError: function (a) {
      var b = new Ij("uncaughtError", !0, !0, a);
      try {
        wa.get_current().__loaderInfo.uncaughtErrorEvents.dispatchEvent(b);
      } catch (e) {
        X.lastException = e;
      }
      if (!b.__preventDefault) {
        try {
          var c = X.lastException;
          if (
            null != c &&
            Object.prototype.hasOwnProperty.call(c, "stack") &&
            null != c.stack &&
            "" != c.stack
          )
            console.log(c.stack), (a.stack = c.stack);
          else {
            var d = X.toString(X.callStack());
            console.log(d);
          }
        } catch (e) {
          X.lastException = e;
        }
        throw a;
      }
    },
    __onKey: function (a, b, c) {
      this.__dispatchPendingMouseEvent();
      Ob.__altKey = Za.get_altKey(c);
      Ob.__commandKey = Za.get_metaKey(c);
      Ob.__ctrlKey = Za.get_ctrlKey(c);
      Ob.__shiftKey = Za.get_shiftKey(c);
      var d = [];
      null == this.__focus
        ? this.__getInteractive(d)
        : this.__focus.__getInteractive(d);
      if (0 < d.length) {
        switch (b) {
          case 1073741908:
          case 1073741909:
          case 1073741910:
          case 1073741911:
          case 1073741912:
          case 1073741913:
          case 1073741914:
          case 1073741915:
          case 1073741916:
          case 1073741917:
          case 1073741918:
          case 1073741919:
          case 1073741920:
          case 1073741921:
          case 1073741922:
          case 1073741923:
          case 1073742044:
            var e = 3;
            break;
          case 1073742048:
          case 1073742049:
          case 1073742050:
          case 1073742051:
            e = 1;
            break;
          case 1073742052:
          case 1073742053:
          case 1073742054:
          case 1073742055:
            e = 2;
            break;
          default:
            e = 0;
        }
        switch (b) {
          case 8:
            b = 8;
            break;
          case 9:
            b = 9;
            break;
          case 13:
            b = 13;
            break;
          case 27:
            b = 27;
            break;
          case 32:
            b = 32;
            break;
          case 33:
            b = 49;
            break;
          case 34:
            b = 222;
            break;
          case 35:
            b = 51;
            break;
          case 36:
            b = 52;
            break;
          case 37:
            b = 53;
            break;
          case 38:
            b = 55;
            break;
          case 39:
            b = 222;
            break;
          case 40:
            b = 57;
            break;
          case 41:
            b = 48;
            break;
          case 42:
            b = 56;
            break;
          case 44:
            b = 188;
            break;
          case 45:
            b = 189;
            break;
          case 46:
            b = 190;
            break;
          case 47:
            b = 191;
            break;
          case 48:
            b = 48;
            break;
          case 49:
            b = 49;
            break;
          case 50:
            b = 50;
            break;
          case 51:
            b = 51;
            break;
          case 52:
            b = 52;
            break;
          case 53:
            b = 53;
            break;
          case 54:
            b = 54;
            break;
          case 55:
            b = 55;
            break;
          case 56:
            b = 56;
            break;
          case 57:
            b = 57;
            break;
          case 58:
            b = 186;
            break;
          case 59:
            b = 186;
            break;
          case 60:
            b = 60;
            break;
          case 61:
            b = 187;
            break;
          case 62:
            b = 190;
            break;
          case 63:
            b = 191;
            break;
          case 64:
            b = 50;
            break;
          case 91:
            b = 219;
            break;
          case 92:
            b = 220;
            break;
          case 93:
            b = 221;
            break;
          case 94:
            b = 54;
            break;
          case 95:
            b = 189;
            break;
          case 96:
            b = 192;
            break;
          case 97:
            b = 65;
            break;
          case 98:
            b = 66;
            break;
          case 99:
            b = 67;
            break;
          case 100:
            b = 68;
            break;
          case 101:
            b = 69;
            break;
          case 102:
            b = 70;
            break;
          case 103:
            b = 71;
            break;
          case 104:
            b = 72;
            break;
          case 105:
            b = 73;
            break;
          case 106:
            b = 74;
            break;
          case 107:
            b = 75;
            break;
          case 108:
            b = 76;
            break;
          case 109:
            b = 77;
            break;
          case 110:
            b = 78;
            break;
          case 111:
            b = 79;
            break;
          case 112:
            b = 80;
            break;
          case 113:
            b = 81;
            break;
          case 114:
            b = 82;
            break;
          case 115:
            b = 83;
            break;
          case 116:
            b = 84;
            break;
          case 117:
            b = 85;
            break;
          case 118:
            b = 86;
            break;
          case 119:
            b = 87;
            break;
          case 120:
            b = 88;
            break;
          case 121:
            b = 89;
            break;
          case 122:
            b = 90;
            break;
          case 127:
            b = 46;
            break;
          case 1073741881:
            b = 20;
            break;
          case 1073741882:
            b = 112;
            break;
          case 1073741883:
            b = 113;
            break;
          case 1073741884:
            b = 114;
            break;
          case 1073741885:
            b = 115;
            break;
          case 1073741886:
            b = 116;
            break;
          case 1073741887:
            b = 117;
            break;
          case 1073741888:
            b = 118;
            break;
          case 1073741889:
            b = 119;
            break;
          case 1073741890:
            b = 120;
            break;
          case 1073741891:
            b = 121;
            break;
          case 1073741892:
            b = 122;
            break;
          case 1073741893:
            b = 123;
            break;
          case 1073741894:
            b = 301;
            break;
          case 1073741895:
            b = 145;
            break;
          case 1073741896:
            b = 19;
            break;
          case 1073741897:
            b = 45;
            break;
          case 1073741898:
            b = 36;
            break;
          case 1073741899:
            b = 33;
            break;
          case 1073741901:
            b = 35;
            break;
          case 1073741902:
            b = 34;
            break;
          case 1073741903:
            b = 39;
            break;
          case 1073741904:
            b = 37;
            break;
          case 1073741905:
            b = 40;
            break;
          case 1073741906:
            b = 38;
            break;
          case 1073741907:
            b = 144;
            break;
          case 1073741908:
            b = 111;
            break;
          case 1073741909:
            b = 106;
            break;
          case 1073741910:
            b = 109;
            break;
          case 1073741911:
            b = 107;
            break;
          case 1073741912:
            b = 13;
            break;
          case 1073741913:
            b = 97;
            break;
          case 1073741914:
            b = 98;
            break;
          case 1073741915:
            b = 99;
            break;
          case 1073741916:
            b = 100;
            break;
          case 1073741917:
            b = 101;
            break;
          case 1073741918:
            b = 102;
            break;
          case 1073741919:
            b = 103;
            break;
          case 1073741920:
            b = 104;
            break;
          case 1073741921:
            b = 105;
            break;
          case 1073741922:
            b = 96;
            break;
          case 1073741923:
            b = 110;
            break;
          case 1073741925:
            b = 302;
            break;
          case 1073741928:
            b = 124;
            break;
          case 1073741929:
            b = 125;
            break;
          case 1073741930:
            b = 126;
            break;
          case 1073741982:
            b = 13;
            break;
          case 1073742044:
            b = 110;
            break;
          case 1073742048:
            b = 17;
            break;
          case 1073742049:
            b = 16;
            break;
          case 1073742050:
            b = 18;
            break;
          case 1073742051:
            b = 15;
            break;
          case 1073742052:
            b = 17;
            break;
          case 1073742053:
            b = 16;
            break;
          case 1073742054:
            b = 18;
            break;
          case 1073742055:
            b = 15;
        }
        var f = ua.__getCharCode(b, Za.get_shiftKey(c));
        e = new Ni(
          a,
          !0,
          !0,
          f,
          b,
          e,
          this.__macKeyboard
            ? Za.get_ctrlKey(c) || Za.get_metaKey(c)
            : Za.get_ctrlKey(c),
          Za.get_altKey(c),
          Za.get_shiftKey(c),
          Za.get_ctrlKey(c),
          Za.get_metaKey(c)
        );
        d.reverse();
        this.__dispatchStack(e, d);
        if (e.__preventDefault)
          "keyDown" == a
            ? this.window.onKeyDown.cancel()
            : this.window.onKeyUp.cancel();
        else if ("keyDown" == a && 9 == b) {
          d = [];
          this.__tabTest(d);
          e = -1;
          a = null;
          b = Za.get_shiftKey(c) ? -1 : 1;
          if (1 < d.length)
            if (
              (ge.sort(d, function (a, b) {
                return a.get_tabIndex() - b.get_tabIndex();
              }),
              -1 == d[d.length - 1].get_tabIndex())
            )
              e = null != this.get_focus() ? 0 : this.__currentTabOrderIndex;
            else {
              for (e = 0; e < d.length; ) {
                if (-1 < d[e].get_tabIndex()) {
                  0 < e && d.splice(0, e);
                  break;
                }
                ++e;
              }
              null != this.get_focus()
                ? ((e = d.indexOf(this.get_focus())), (e = 0 > e ? 0 : e + b))
                : (e = this.__currentTabOrderIndex);
            }
          else
            1 == d.length && ((a = d[0]), this.get_focus() == a && (a = null));
          1 == d.length || (0 == d.length && null != this.get_focus())
            ? (e = 0)
            : 1 < d.length &&
              (0 > e && (e += d.length),
              (e %= d.length),
              (a = d[e]),
              a == this.get_focus() &&
                ((e += b),
                0 > e && (e += d.length),
                (e %= d.length),
                (a = d[e])));
          b = null;
          null != this.get_focus() &&
            ((b = new hg("keyFocusChange", !0, !0, a, Za.get_shiftKey(c), 0)),
            (d = []),
            this.get_focus().__getInteractive(d),
            d.reverse(),
            this.__dispatchStack(b, d));
          (null != b && b.isDefaultPrevented()) ||
            ((this.__currentTabOrderIndex = e), null != a && this.set_focus(a));
        }
      }
    },
    __onGamepadConnect: function (a) {
      this.onGamepadConnect(a);
      var b = B(this, this.onGamepadAxisMove);
      a.onAxisMove.add(function (c, d) {
        b(a, c, d);
      });
      var c = B(this, this.onGamepadButtonDown);
      a.onButtonDown.add(function (b) {
        c(a, b);
      });
      var d = B(this, this.onGamepadButtonUp);
      a.onButtonUp.add(function (b) {
        d(a, b);
      });
      var e = B(this, this.onGamepadDisconnect);
      a.onDisconnect.add(function () {
        e(a);
      });
    },
    __onMouse: function (a, b, c, d) {
      if (!(2 < d)) {
        var e = Y.__pool.get();
        e.setTo(b, c);
        b = this.__displayMatrix;
        c = b.a * b.d - b.b * b.c;
        if (0 == c) (e.x = -b.tx), (e.y = -b.ty);
        else {
          var f = (1 / c) * (b.c * (b.ty - e.y) + b.d * (e.x - b.tx));
          e.y = (1 / c) * (b.a * (e.y - b.ty) + b.b * (b.tx - e.x));
          e.x = f;
        }
        this.__mouseX = e.x;
        this.__mouseY = e.y;
        c = [];
        this.__hitTest(this.__mouseX, this.__mouseY, !0, c, !0, this)
          ? (f = c[c.length - 1])
          : ((f = this), (c = [this]));
        null == f && (f = this);
        var g = null;
        switch (a) {
          case "middleMouseDown":
            this.__mouseDownMiddle = f;
            break;
          case "middleMouseUp":
            this.__mouseDownMiddle == f && (g = "middleClick");
            this.__mouseDownMiddle = null;
            break;
          case "mouseDown":
            f.__allowMouseFocus()
              ? null != this.get_focus()
                ? ((b = new hg("mouseFocusChange", !0, !0, f, !1, 0)),
                  this.__dispatchStack(b, c),
                  b.isDefaultPrevented() || this.set_focus(f))
                : this.set_focus(f)
              : this.set_focus(null);
            this.__mouseDownLeft = f;
            Ob.__buttonDown = !0;
            break;
          case "mouseUp":
            null != this.__mouseDownLeft &&
              ((Ob.__buttonDown = !1),
              this.__mouseDownLeft == f
                ? (g = "click")
                : this.__mouseDownLeft.dispatchEvent(
                    Ob.__create(
                      "releaseOutside",
                      1,
                      this.__mouseX,
                      this.__mouseY,
                      new Y(this.__mouseX, this.__mouseY),
                      this
                    )
                  ),
              (this.__mouseDownLeft = null));
            break;
          case "rightMouseDown":
            this.__mouseDownRight = f;
            break;
          case "rightMouseUp":
            this.__mouseDownRight == f && (g = "rightClick"),
              (this.__mouseDownRight = null);
        }
        b = Y.__pool.get();
        this.__dispatchStack(
          Ob.__create(
            a,
            d,
            this.__mouseX,
            this.__mouseY,
            f.__globalToLocal(e, b),
            f
          ),
          c
        );
        null != g &&
          (this.__dispatchStack(
            Ob.__create(
              g,
              d,
              this.__mouseX,
              this.__mouseY,
              f.__globalToLocal(e, b),
              f
            ),
            c
          ),
          "mouseUp" == a &&
            u.__cast(f, Vb).doubleClickEnabled &&
            ((a = wa.getTimer()),
            500 > a - this.__lastClickTime
              ? (this.__dispatchStack(
                  Ob.__create(
                    "doubleClick",
                    d,
                    this.__mouseX,
                    this.__mouseY,
                    f.__globalToLocal(e, b),
                    f
                  ),
                  c
                ),
                (this.__lastClickTime = 0))
              : (this.__lastClickTime = a)));
        if ("auto" == oe.__cursor && !oe.__hidden) {
          g = null;
          if (null != this.__mouseDownLeft)
            g = this.__mouseDownLeft.__getCursor();
          else
            for (a = 0; a < c.length; )
              if (((g = c[a]), ++a, (g = g.__getCursor()), null != g)) {
                this.window.set_cursor(We.toLimeCursor(g));
                break;
              }
          null == g && this.window.set_cursor(Ka.ARROW);
        }
        f != this.__mouseOverTarget &&
          null != this.__mouseOverTarget &&
          ((a = Ob.__create(
            "mouseOut",
            d,
            this.__mouseX,
            this.__mouseY,
            this.__mouseOverTarget.__globalToLocal(e, b),
            this.__mouseOverTarget
          )),
          this.__dispatchStack(a, this.__mouseOutStack));
        g = 0;
        for (var h = this.__rollOutStack; g < h.length; ) {
          var n = h[g];
          ++g;
          -1 == c.indexOf(n) &&
            (Q.remove(this.__rollOutStack, n),
            (a = Ob.__create(
              "rollOut",
              d,
              this.__mouseX,
              this.__mouseY,
              this.__mouseOverTarget.__globalToLocal(e, b),
              this.__mouseOverTarget
            )),
            (a.bubbles = !1),
            this.__dispatchTarget(n, a));
        }
        for (g = 0; g < c.length; )
          (h = c[g]),
            ++g,
            -1 == this.__rollOutStack.indexOf(h) &&
              null != this.__mouseOverTarget &&
              (h.hasEventListener("rollOver") &&
                ((a = Ob.__create(
                  "rollOver",
                  d,
                  this.__mouseX,
                  this.__mouseY,
                  this.__mouseOverTarget.__globalToLocal(e, b),
                  h
                )),
                (a.bubbles = !1),
                this.__dispatchTarget(h, a)),
              (h.hasEventListener("rollOut") ||
                h.hasEventListener("rollOver")) &&
                this.__rollOutStack.push(h));
        f != this.__mouseOverTarget &&
          (null != f &&
            ((a = Ob.__create(
              "mouseOver",
              d,
              this.__mouseX,
              this.__mouseY,
              f.__globalToLocal(e, b),
              f
            )),
            this.__dispatchStack(a, c)),
          (this.__mouseOverTarget = f),
          (this.__mouseOutStack = c));
        null != this.__dragObject &&
          (this.__drag(e),
          (d = null),
          this.__mouseOverTarget == this.__dragObject
            ? ((c = this.__dragObject.mouseEnabled),
              (f = this.__dragObject.mouseChildren),
              (this.__dragObject.mouseEnabled = !1),
              (this.__dragObject.mouseChildren = !1),
              (a = []),
              this.__hitTest(this.__mouseX, this.__mouseY, !0, a, !0, this) &&
                (d = a[a.length - 1]),
              (this.__dragObject.mouseEnabled = c),
              (this.__dragObject.mouseChildren = f))
            : this.__mouseOverTarget != this && (d = this.__mouseOverTarget),
          (this.__dragObject.dropTarget = d));
        Y.__pool.release(e);
        Y.__pool.release(b);
      }
    },
    __onMouseWheel: function (a, b, c) {
      var d = this.__mouseX,
        e = this.__mouseY;
      a = [];
      this.__hitTest(this.__mouseX, this.__mouseY, !0, a, !0, this)
        ? (c = a[a.length - 1])
        : ((c = this), (a = [this]));
      null == c && (c = this);
      var f = Y.__pool.get();
      f.setTo(d, e);
      d = this.__displayMatrix;
      e = d.a * d.d - d.b * d.c;
      if (0 == e) (f.x = -d.tx), (f.y = -d.ty);
      else {
        var g = (1 / e) * (d.c * (d.ty - f.y) + d.d * (f.x - d.tx));
        f.y = (1 / e) * (d.a * (f.y - d.ty) + d.b * (d.tx - f.x));
        f.x = g;
      }
      b |= 0;
      this.__dispatchStack(
        Ob.__create(
          "mouseWheel",
          0,
          this.__mouseX,
          this.__mouseY,
          c.__globalToLocal(f, f),
          c,
          b
        ),
        a
      );
      Y.__pool.release(f);
    },
    __onTouch: function (a, b) {
      var c = Y.__pool.get();
      c.setTo(
        Math.round(b.x * this.window.__width * this.window.__scale),
        Math.round(b.y * this.window.__height * this.window.__scale)
      );
      var d = this.__displayMatrix,
        e = d.a * d.d - d.b * d.c;
      if (0 == e) (c.x = -d.tx), (c.y = -d.ty);
      else {
        var f = (1 / e) * (d.c * (d.ty - c.y) + d.d * (c.x - d.tx));
        c.y = (1 / e) * (d.a * (c.y - d.ty) + d.b * (d.tx - c.x));
        c.x = f;
      }
      d = c.x;
      e = c.y;
      f = [];
      if (this.__hitTest(d, e, !1, f, !0, this)) var g = f[f.length - 1];
      else (g = this), (f = [this]);
      null == g && (g = this);
      var h = b.id;
      if (this.__touchData.h.hasOwnProperty(h)) var n = this.__touchData.h[h];
      else
        (n = Ej.__pool.get()),
          n.reset(),
          (n.touch = b),
          (this.__touchData.h[h] = n);
      var k = null,
        m = !1;
      switch (a) {
        case "touchBegin":
          n.touchDownTarget = g;
          break;
        case "touchEnd":
          n.touchDownTarget == g && (k = "touchTap"),
            (n.touchDownTarget = null),
            (m = !0);
      }
      var l = Y.__pool.get(),
        p = this.__primaryTouch == b;
      a = ae.__create(a, null, d, e, g.__globalToLocal(c, l), g);
      a.touchPointID = h;
      a.isPrimaryTouchPoint = p;
      a.pressure = b.pressure;
      this.__dispatchStack(a, f);
      null != k &&
        ((a = ae.__create(k, null, d, e, g.__globalToLocal(c, l), g)),
        (a.touchPointID = h),
        (a.isPrimaryTouchPoint = p),
        (a.pressure = b.pressure),
        this.__dispatchStack(a, f));
      k = n.touchOverTarget;
      g != k &&
        null != k &&
        ((a = ae.__create("touchOut", null, d, e, k.__globalToLocal(c, l), k)),
        (a.touchPointID = h),
        (a.isPrimaryTouchPoint = p),
        (a.pressure = b.pressure),
        this.__dispatchTarget(k, a));
      for (var q = n.rollOutStack, r = 0; r < q.length; ) {
        var t = q[r];
        ++r;
        -1 == f.indexOf(t) &&
          (Q.remove(q, t),
          (a = ae.__create(
            "touchRollOut",
            null,
            d,
            e,
            k.__globalToLocal(c, l),
            k
          )),
          (a.touchPointID = h),
          (a.isPrimaryTouchPoint = p),
          (a.bubbles = !1),
          (a.pressure = b.pressure),
          this.__dispatchTarget(t, a));
      }
      for (r = 0; r < f.length; )
        (t = f[r]),
          ++r,
          -1 == q.indexOf(t) &&
            (t.hasEventListener("touchRollOver") &&
              ((a = ae.__create(
                "touchRollOver",
                null,
                d,
                e,
                k.__globalToLocal(c, l),
                t
              )),
              (a.touchPointID = h),
              (a.isPrimaryTouchPoint = p),
              (a.bubbles = !1),
              (a.pressure = b.pressure),
              this.__dispatchTarget(t, a)),
            t.hasEventListener("touchRollOut") && q.push(t));
      g != k &&
        (null != g &&
          ((a = ae.__create(
            "touchOver",
            null,
            d,
            e,
            g.__globalToLocal(c, l),
            g
          )),
          (a.touchPointID = h),
          (a.isPrimaryTouchPoint = p),
          (a.bubbles = !0),
          (a.pressure = b.pressure),
          this.__dispatchTarget(g, a)),
        (n.touchOverTarget = g));
      Y.__pool.release(c);
      Y.__pool.release(l);
      m && (this.__touchData.remove(h), n.reset(), Ej.__pool.release(n));
    },
    __registerLimeModule: function (a) {
      a.onCreateWindow.add(B(this, this.__addWindow));
      a.onUpdate.add(B(this, this.update));
      a.onExit.add(B(this, this.onModuleExit), !1, 0);
      for (a = Ld.devices.iterator(); a.hasNext(); ) {
        var b = a.next();
        this.__onGamepadConnect(b);
      }
      Ld.onConnect.add(B(this, this.__onGamepadConnect));
      pd.onStart.add(B(this, this.onTouchStart));
      pd.onMove.add(B(this, this.onTouchMove));
      pd.onEnd.add(B(this, this.onTouchEnd));
      pd.onCancel.add(B(this, this.onTouchCancel));
    },
    __resize: function () {
      var a = this.stageWidth,
        b = this.stageHeight,
        c = (this.window.__width * this.window.__scale) | 0,
        d = (this.window.__height * this.window.__scale) | 0;
      this.__logicalWidth = c;
      this.__logicalHeight = d;
      this.__displayMatrix.identity();
      if (null != this.get_fullScreenSourceRect() && this.window.__fullscreen) {
        this.stageWidth = this.get_fullScreenSourceRect().width | 0;
        this.stageHeight = this.get_fullScreenSourceRect().height | 0;
        var e = c / this.stageWidth,
          f = d / this.stageHeight;
        this.__displayMatrix.translate(
          -this.get_fullScreenSourceRect().x,
          -this.get_fullScreenSourceRect().y
        );
        this.__displayMatrix.scale(e, f);
        this.__displayRect.setTo(
          this.get_fullScreenSourceRect().get_left(),
          this.get_fullScreenSourceRect().get_right(),
          this.get_fullScreenSourceRect().get_top(),
          this.get_fullScreenSourceRect().get_bottom()
        );
      } else {
        if (0 == this.__logicalWidth && 0 == this.__logicalHeight)
          (this.stageWidth = c), (this.stageHeight = d);
        else {
          this.stageWidth = this.__logicalWidth;
          this.stageHeight = this.__logicalHeight;
          e = Math.min(c / this.stageWidth, d / this.stageHeight);
          f = Math.round((c - this.stageWidth * e) / 2);
          var g = Math.round((d - this.stageHeight * e) / 2);
          this.__displayMatrix.scale(e, e);
          this.__displayMatrix.translate(f, g);
        }
        this.__displayRect.setTo(0, 0, this.stageWidth, this.stageHeight);
      }
      null != this.context3D &&
        this.context3D.configureBackBuffer(c, d, 0, !0, !0, !0);
      e = 0;
      for (f = this.stage3Ds; e < f.get_length(); )
        (g = f.get(e)), ++e, g.__resize(c, d);
      null != this.__renderer && this.__renderer.__resize(c, d);
      if (this.stageWidth != a || this.stageHeight != b)
        (this.__renderDirty = !0),
          this.__setTransformDirty(),
          this.__dispatchEvent(new ma("resize"));
    },
    __setLogicalSize: function (a, b) {
      this.__logicalWidth = a;
      this.__logicalHeight = b;
      this.__resize();
    },
    __startDrag: function (a, b, c) {
      if (null == c) this.__dragBounds = null;
      else {
        this.__dragBounds = new W();
        var d = c.get_right(),
          e = c.get_bottom();
        this.__dragBounds.x = d < c.x ? d : c.x;
        this.__dragBounds.y = e < c.y ? e : c.y;
        this.__dragBounds.width = Math.abs(c.width);
        this.__dragBounds.height = Math.abs(c.height);
      }
      this.__dragObject = a;
      null != this.__dragObject &&
        (b
          ? (this.__dragOffsetY = this.__dragOffsetX = 0)
          : ((a = Y.__pool.get()),
            a.setTo(this.get_mouseX(), this.get_mouseY()),
            (b = this.__dragObject.parent),
            null != b &&
              ((b = b.__getWorldTransform()),
              (c = b.a * b.d - b.b * b.c),
              0 == c
                ? ((a.x = -b.tx), (a.y = -b.ty))
                : ((d = (1 / c) * (b.c * (b.ty - a.y) + b.d * (a.x - b.tx))),
                  (a.y = (1 / c) * (b.a * (a.y - b.ty) + b.b * (b.tx - a.x))),
                  (a.x = d))),
            (this.__dragOffsetX = this.__dragObject.get_x() - a.x),
            (this.__dragOffsetY = this.__dragObject.get_y() - a.y),
            Y.__pool.release(a)));
    },
    __stopDrag: function (a) {
      this.__dragObject = this.__dragBounds = null;
    },
    __unregisterLimeModule: function (a) {
      a.onCreateWindow.remove(B(this, this.__addWindow));
      a.onUpdate.remove(B(this, this.update));
      a.onExit.remove(B(this, this.onModuleExit));
      Ld.onConnect.remove(B(this, this.__onGamepadConnect));
      pd.onStart.remove(B(this, this.onTouchStart));
      pd.onMove.remove(B(this, this.onTouchMove));
      pd.onEnd.remove(B(this, this.onTouchEnd));
      pd.onCancel.remove(B(this, this.onTouchCancel));
    },
    __update: function (a, b) {
      a
        ? this.__transformDirty &&
          (wd.prototype.__update.call(this, !0, b),
          b && (this.__transformDirty = !1))
        : this.__transformDirty || this.__renderDirty
        ? (wd.prototype.__update.call(this, !1, b),
          b && hb.__supportDOM && (this.__wasDirty = !0))
        : !this.__renderDirty &&
          this.__wasDirty &&
          (wd.prototype.__update.call(this, !1, b),
          b && (this.__wasDirty = !1));
    },
    get_color: function () {
      return this.__color;
    },
    set_color: function (a) {
      null == a
        ? ((this.__transparent = !0), (a = 0))
        : (this.__transparent = !1);
      this.__color != a &&
        ((this.__colorSplit[0] = ((a & 16711680) >>> 16) / 255),
        (this.__colorSplit[1] = ((a & 65280) >>> 8) / 255),
        (this.__colorSplit[2] = (a & 255) / 255),
        (this.__colorString = "#" + ba.hex(a & 16777215, 6)),
        (this.__renderDirty = !0),
        (this.__color = -16777216 | (a & 16777215)));
      return a;
    },
    get_contentsScaleFactor: function () {
      return this.__contentsScaleFactor;
    },
    get_displayState: function () {
      return this.__displayState;
    },
    set_displayState: function (a) {
      null != this.window &&
        (2 == a
          ? this.window.__fullscreen && this.window.set_fullscreen(!1)
          : this.window.__fullscreen || this.window.set_fullscreen(!0));
      return (this.__displayState = a);
    },
    get_focus: function () {
      return this.__focus;
    },
    set_focus: function (a) {
      if (a != this.__focus) {
        var b = this.__focus;
        this.__cacheFocus = this.__focus = a;
        if (null != b) {
          var c = new hg("focusOut", !0, !1, a, !1, 0),
            d = [];
          b.__getInteractive(d);
          d.reverse();
          this.__dispatchStack(c, d);
        }
        null != a &&
          ((b = new hg("focusIn", !0, !1, b, !1, 0)),
          (c = []),
          a.__getInteractive(c),
          c.reverse(),
          this.__dispatchStack(b, c));
      }
      return a;
    },
    get_frameRate: function () {
      return null != this.window ? this.window.__backend.getFrameRate() : 0;
    },
    set_frameRate: function (a) {
      return null != this.window ? this.window.__backend.setFrameRate(a) : a;
    },
    get_fullScreenHeight: function () {
      var a = this.window.__scale;
      return Math.ceil(this.window.get_display().currentMode.height * a);
    },
    get_fullScreenSourceRect: function () {
      return null == this.__fullScreenSourceRect
        ? null
        : this.__fullScreenSourceRect.clone();
    },
    set_fullScreenSourceRect: function (a) {
      null == a
        ? null != this.__fullScreenSourceRect &&
          ((this.__fullScreenSourceRect = null), this.__resize())
        : a.equals(this.__fullScreenSourceRect) ||
          ((this.__fullScreenSourceRect = a.clone()), this.__resize());
      return a;
    },
    get_fullScreenWidth: function () {
      var a = this.window.__scale;
      return Math.ceil(this.window.get_display().currentMode.width * a);
    },
    set_height: function (a) {
      return this.get_height();
    },
    get_mouseX: function () {
      return this.__mouseX;
    },
    get_mouseY: function () {
      return this.__mouseY;
    },
    get_quality: function () {
      return this.__quality;
    },
    set_quality: function (a) {
      this.__quality = a;
      if (null != this.__renderer) {
        var b = this.get_quality();
        this.__renderer.__allowSmoothing = 2 != b;
      }
      return a;
    },
    set_rotation: function (a) {
      return 0;
    },
    get_scaleMode: function () {
      return this.__scaleMode;
    },
    set_scaleMode: function (a) {
      return (this.__scaleMode = a);
    },
    set_scaleX: function (a) {
      return 0;
    },
    set_scaleY: function (a) {
      return 0;
    },
    get_tabEnabled: function () {
      return !1;
    },
    set_tabEnabled: function (a) {
      throw new v(
        new ld(
          "Error: The Stage class does not implement this property or method."
        )
      );
    },
    get_tabIndex: function () {
      return -1;
    },
    set_tabIndex: function (a) {
      throw new v(
        new ld(
          "Error: The Stage class does not implement this property or method."
        )
      );
    },
    set_transform: function (a) {
      return this.get_transform();
    },
    set_width: function (a) {
      return this.get_width();
    },
    set_x: function (a) {
      return 0;
    },
    set_y: function (a) {
      return 0;
    },
    __class__: Xk,
    __properties__: x(wd.prototype.__properties__, {
      set_scaleMode: "set_scaleMode",
      get_scaleMode: "get_scaleMode",
      set_quality: "set_quality",
      get_quality: "get_quality",
      set_fullScreenSourceRect: "set_fullScreenSourceRect",
      get_fullScreenSourceRect: "get_fullScreenSourceRect",
      get_fullScreenWidth: "get_fullScreenWidth",
      get_fullScreenHeight: "get_fullScreenHeight",
      set_frameRate: "set_frameRate",
      get_frameRate: "get_frameRate",
      set_focus: "set_focus",
      get_focus: "get_focus",
      set_displayState: "set_displayState",
      get_displayState: "get_displayState",
      get_contentsScaleFactor: "get_contentsScaleFactor",
      set_color: "set_color",
      get_color: "get_color",
    }),
  });
  var io = function (a) {
    db.call(this);
    this.__stage = a;
    this.__height = 0;
    this.__projectionTransform = new ke();
    this.__renderTransform = new ke();
    this.__y = this.__x = this.__width = 0;
    this.visible = !0;
    0 < a.stageWidth &&
      0 < a.stageHeight &&
      this.__resize(a.stageWidth, a.stageHeight);
  };
  p["openfl.display.Stage3D"] = io;
  io.__name__ = ["openfl", "display", "Stage3D"];
  io.__super__ = db;
  io.prototype = x(db.prototype, {
    context3D: null,
    visible: null,
    __contextRequested: null,
    __height: null,
    __indexBuffer: null,
    __projectionTransform: null,
    __renderTransform: null,
    __stage: null,
    __vertexBuffer: null,
    __width: null,
    __x: null,
    __y: null,
    __canvas: null,
    __renderContext: null,
    __style: null,
    __webgl: null,
    requestContext3D: function (a, b) {
      null != this.context3D
        ? ((this.__contextRequested = !0),
          af.delay(B(this, this.__dispatchCreate), 1))
        : this.__contextRequested ||
          ((this.__contextRequested = !0),
          af.delay(B(this, this.__createContext), 1));
    },
    requestContext3DMatchingProfiles: function (a) {
      this.requestContext3D();
    },
    __createContext: function () {
      var a = this.__stage,
        b = a.__renderer;
      if ("cairo" == b.__type || "canvas" == b.__type) this.__dispatchError();
      else if ("opengl" == b.__type)
        (this.context3D = new nc(a, a.context3D.__contextState, this)),
          this.__dispatchCreate();
      else if ("dom" == b.__type) {
        this.__canvas = window.document.createElement("canvas");
        this.__canvas.width = a.stageWidth;
        this.__canvas.height = a.stageHeight;
        a = b.__context.attributes;
        b =
          Object.prototype.hasOwnProperty.call(a, "background") &&
          null == a.background;
        var c = Object.prototype.hasOwnProperty.call(a, "colorDepth")
          ? a.colorDepth
          : 32;
        a = {
          alpha: b || 16 < c,
          antialias:
            Object.prototype.hasOwnProperty.call(a, "antialiasing") &&
            0 < a.antialiasing,
          depth: !0,
          premultipliedAlpha: !0,
          stencil: !0,
          preserveDrawingBuffer: !1,
        };
        this.__webgl = Ms.getContextWebGL(this.__canvas, a);
        this.__dispatchError();
      }
    },
    __dispatchError: function () {
      this.__contextRequested = !1;
      this.dispatchEvent(new uf("error", !1, !1, "Context3D not available"));
    },
    __dispatchCreate: function () {
      this.__contextRequested &&
        ((this.__contextRequested = !1),
        this.dispatchEvent(new ma("context3DCreate")));
    },
    __resize: function (a, b) {
      if (a != this.__width || b != this.__height)
        null != this.__canvas &&
          ((this.__canvas.width = a), (this.__canvas.height = b)),
          this.__projectionTransform.copyRawDataFrom(
            Oa.toFloatVector(null, null, null, [
              2 / (0 < a ? a : 1),
              0,
              0,
              0,
              0,
              -2 / (0 < b ? b : 1),
              0,
              0,
              0,
              0,
              -0.001,
              0,
              -1,
              1,
              0,
              1,
            ])
          ),
          this.__renderTransform.identity(),
          this.__renderTransform.appendTranslation(this.__x, this.__y, 0),
          this.__renderTransform.append(this.__projectionTransform),
          (this.__width = a),
          (this.__height = b);
    },
    get_x: function () {
      return this.__x;
    },
    set_x: function (a) {
      if (this.__x == a) return a;
      this.__x = a;
      this.__renderTransform.identity();
      this.__renderTransform.appendTranslation(this.__x, this.__y, 0);
      this.__renderTransform.append(this.__projectionTransform);
      return a;
    },
    get_y: function () {
      return this.__y;
    },
    set_y: function (a) {
      if (this.__y == a) return a;
      this.__y = a;
      this.__renderTransform.identity();
      this.__renderTransform.appendTranslation(this.__x, this.__y, 0);
      this.__renderTransform.append(this.__projectionTransform);
      return a;
    },
    __class__: io,
    __properties__: {
      set_y: "set_y",
      get_y: "get_y",
      set_x: "set_x",
      get_x: "get_x",
    },
  });
  var hh = {};
  p["openfl.display._StageAlign.StageAlign_Impl_"] = hh;
  hh.__name__ = ["openfl", "display", "_StageAlign", "StageAlign_Impl_"];
  hh.fromString = function (a) {
    switch (a) {
      case "bottom":
        return 0;
      case "bottomLeft":
        return 1;
      case "bottomRight":
        return 2;
      case "left":
        return 3;
      case "right":
        return 4;
      case "top":
        return 5;
      case "topLeft":
        return 6;
      case "topRight":
        return 7;
      default:
        return null;
    }
  };
  hh.toString = function (a) {
    switch (a) {
      case 0:
        return "bottom";
      case 1:
        return "bottomLeft";
      case 2:
        return "bottomRight";
      case 3:
        return "left";
      case 4:
        return "right";
      case 5:
        return "top";
      case 6:
        return "topLeft";
      case 7:
        return "topRight";
      default:
        return null;
    }
  };
  var Yk = {};
  p["openfl.display._StageDisplayState.StageDisplayState_Impl_"] = Yk;
  Yk.__name__ = [
    "openfl",
    "display",
    "_StageDisplayState",
    "StageDisplayState_Impl_",
  ];
  Yk.fromString = function (a) {
    switch (a) {
      case "fullScreen":
        return 0;
      case "fullScreenInteractive":
        return 1;
      case "normal":
        return 2;
      default:
        return null;
    }
  };
  Yk.toString = function (a) {
    switch (a) {
      case 0:
        return "fullScreen";
      case 1:
        return "fullScreenInteractive";
      case 2:
        return "normal";
      default:
        return null;
    }
  };
  var Jj = {};
  p["openfl.display._StageQuality.StageQuality_Impl_"] = Jj;
  Jj.__name__ = ["openfl", "display", "_StageQuality", "StageQuality_Impl_"];
  Jj.fromString = function (a) {
    switch (a) {
      case "best":
        return 0;
      case "high":
        return 1;
      case "low":
        return 2;
      case "medium":
        return 3;
      default:
        return null;
    }
  };
  Jj.toString = function (a) {
    switch (a) {
      case 0:
        return "best";
      case 1:
        return "high";
      case 2:
        return "low";
      case 3:
        return "medium";
      default:
        return null;
    }
  };
  var Kj = {};
  p["openfl.display._StageScaleMode.StageScaleMode_Impl_"] = Kj;
  Kj.__name__ = [
    "openfl",
    "display",
    "_StageScaleMode",
    "StageScaleMode_Impl_",
  ];
  Kj.fromString = function (a) {
    switch (a) {
      case "exactFit":
        return 0;
      case "noBorder":
        return 1;
      case "noScale":
        return 2;
      case "showAll":
        return 3;
      default:
        return null;
    }
  };
  Kj.toString = function (a) {
    switch (a) {
      case 0:
        return "exactFit";
      case 1:
        return "noBorder";
      case 2:
        return "noScale";
      case 3:
        return "showAll";
      default:
        return null;
    }
  };
  var Sg = function (a, b, c, d, e, f, g, h) {
    null == h && (h = 0);
    null == g && (g = 0);
    null == f && (f = 0);
    null == e && (e = 1);
    null == d && (d = 1);
    null == c && (c = 0);
    null == b && (b = 0);
    null == a && (a = 0);
    this.__id = a;
    this.__matrix = new ya();
    0 != b && this.set_x(b);
    0 != c && this.set_y(c);
    1 != d && this.set_scaleX(d);
    1 != e && this.set_scaleY(e);
    0 != f && this.set_rotation(f);
    this.__dirty = !0;
    this.__length = 0;
    this.__originX = g;
    this.__originY = h;
    this.__alpha = 1;
    this.__blendMode = null;
    this.__visible = !0;
  };
  p["openfl.display.Tile"] = Sg;
  Sg.__name__ = ["openfl", "display", "Tile"];
  Sg.prototype = {
    data: null,
    parent: null,
    __alpha: null,
    __blendMode: null,
    __colorTransform: null,
    __dirty: null,
    __id: null,
    __length: null,
    __matrix: null,
    __originX: null,
    __originY: null,
    __rect: null,
    __rotation: null,
    __rotationCosine: null,
    __rotationSine: null,
    __scaleX: null,
    __scaleY: null,
    __shader: null,
    __tileset: null,
    __visible: null,
    clone: function () {
      var a = new Sg(this.__id);
      a.__alpha = this.__alpha;
      a.__blendMode = this.__blendMode;
      a.__originX = this.__originX;
      a.__originY = this.__originY;
      null != this.__rect && (a.__rect = this.__rect.clone());
      a.set_matrix(this.__matrix.clone());
      a.__shader = this.__shader;
      a.set_tileset(this.__tileset);
      null != this.__colorTransform &&
        (a.__colorTransform = this.__colorTransform.__clone());
      return a;
    },
    getBounds: function (a) {
      if (null == this.get_tileset()) {
        var b = this.parent.__findTileset();
        if (null == b) return new W();
        b = b.getRect(this.get_id());
        if (null == b) return new W();
      } else b = this.get_tileset().getRect(this.get_id());
      b.x = 0;
      b.y = 0;
      var c = ya.__pool.get();
      c.copyFrom(this.__getWorldTransform());
      if (null != a && a != this) {
        var d = ya.__pool.get();
        d.copyFrom(a.__getWorldTransform());
        d.invert();
        c.concat(d);
        ya.__pool.release(d);
      }
      b.__transform(b, c);
      ya.__pool.release(c);
      return b;
    },
    hitTestTile: function (a) {
      if (null != a && null != a.parent && null != this.parent) {
        var b = this.getBounds(this);
        a = a.getBounds(this);
        return b.intersects(a);
      }
      return !1;
    },
    invalidate: function () {
      this.__setRenderDirty();
    },
    __findTileset: function () {
      return null != this.get_tileset()
        ? this.get_tileset()
        : u.__instanceof(this.parent, pg)
        ? this.parent.get_tileset()
        : null == this.parent
        ? null
        : this.parent.__findTileset();
    },
    __getWorldTransform: function () {
      var a = this.get_matrix().clone();
      null != this.parent && a.concat(this.parent.__getWorldTransform());
      return a;
    },
    __setRenderDirty: function () {
      this.__dirty ||
        ((this.__dirty = !0),
        null != this.parent && this.parent.__setRenderDirty());
    },
    get_alpha: function () {
      return this.__alpha;
    },
    set_alpha: function (a) {
      a != this.__alpha && ((this.__alpha = a), this.__setRenderDirty());
      return a;
    },
    get_blendMode: function () {
      return this.__blendMode;
    },
    set_blendMode: function (a) {
      a != this.__blendMode &&
        ((this.__blendMode = a), this.__setRenderDirty());
      return a;
    },
    get_colorTransform: function () {
      return this.__colorTransform;
    },
    set_colorTransform: function (a) {
      a != this.__colorTransform &&
        ((this.__colorTransform = a), this.__setRenderDirty());
      return a;
    },
    get_id: function () {
      return this.__id;
    },
    set_id: function (a) {
      a != this.__id && ((this.__id = a), this.__setRenderDirty());
      return a;
    },
    get_matrix: function () {
      return this.__matrix;
    },
    set_matrix: function (a) {
      a != this.__matrix &&
        ((this.__scaleY = this.__scaleX = this.__rotation = null),
        (this.__matrix = a),
        this.__setRenderDirty());
      return a;
    },
    get_originX: function () {
      return this.__originX;
    },
    set_originX: function (a) {
      a != this.__originX && ((this.__originX = a), this.__setRenderDirty());
      return a;
    },
    get_originY: function () {
      return this.__originY;
    },
    set_originY: function (a) {
      a != this.__originY && ((this.__originY = a), this.__setRenderDirty());
      return a;
    },
    get_rect: function () {
      return this.__rect;
    },
    set_rect: function (a) {
      a != this.__rect && ((this.__rect = a), this.__setRenderDirty());
      return a;
    },
    get_rotation: function () {
      if (null == this.__rotation)
        if (0 == this.__matrix.b && 0 == this.__matrix.c)
          (this.__rotationSine = this.__rotation = 0),
            (this.__rotationCosine = 1);
        else {
          var a = Math.atan2(this.__matrix.d, this.__matrix.c) - Math.PI / 2;
          this.__rotation = (180 / Math.PI) * a;
          this.__rotationSine = Math.sin(a);
          this.__rotationCosine = Math.cos(a);
        }
      return this.__rotation;
    },
    set_rotation: function (a) {
      if (a != this.__rotation) {
        this.__rotation = a;
        var b = (Math.PI / 180) * a;
        this.__rotationSine = Math.sin(b);
        this.__rotationCosine = Math.cos(b);
        b = this.get_scaleX();
        var c = this.get_scaleY();
        this.__matrix.a = this.__rotationCosine * b;
        this.__matrix.b = this.__rotationSine * b;
        this.__matrix.c = -this.__rotationSine * c;
        this.__matrix.d = this.__rotationCosine * c;
        this.__setRenderDirty();
      }
      return a;
    },
    get_scaleX: function () {
      null == this.__scaleX &&
        (0 == this.get_matrix().b
          ? (this.__scaleX = this.__matrix.a)
          : (this.__scaleX = Math.sqrt(
              this.__matrix.a * this.__matrix.a +
                this.__matrix.b * this.__matrix.b
            )));
      return this.__scaleX;
    },
    set_scaleX: function (a) {
      if (a != this.__scaleX) {
        this.__scaleX = a;
        if (0 == this.__matrix.b) this.__matrix.a = a;
        else {
          this.get_rotation();
          var b = this.__rotationSine * a;
          this.__matrix.a = this.__rotationCosine * a;
          this.__matrix.b = b;
        }
        this.__setRenderDirty();
      }
      return a;
    },
    get_scaleY: function () {
      null == this.__scaleY &&
        (this.__scaleY =
          0 == this.__matrix.c
            ? this.get_matrix().d
            : Math.sqrt(
                this.__matrix.c * this.__matrix.c +
                  this.__matrix.d * this.__matrix.d
              ));
      return this.__scaleY;
    },
    set_scaleY: function (a) {
      if (a != this.__scaleY) {
        this.__scaleY = a;
        if (0 == this.__matrix.c) this.__matrix.d = a;
        else {
          this.get_rotation();
          var b = this.__rotationCosine * a;
          this.__matrix.c = -this.__rotationSine * a;
          this.__matrix.d = b;
        }
        this.__setRenderDirty();
      }
      return a;
    },
    get_shader: function () {
      return this.__shader;
    },
    set_shader: function (a) {
      a != this.__shader && ((this.__shader = a), this.__setRenderDirty());
      return a;
    },
    get_tileset: function () {
      return this.__tileset;
    },
    set_tileset: function (a) {
      a != this.__tileset && ((this.__tileset = a), this.__setRenderDirty());
      return a;
    },
    get_visible: function () {
      return this.__visible;
    },
    set_visible: function (a) {
      a != this.__visible && ((this.__visible = a), this.__setRenderDirty());
      return a;
    },
    get_x: function () {
      return this.__matrix.tx;
    },
    set_x: function (a) {
      a != this.__matrix.tx &&
        ((this.__matrix.tx = a), this.__setRenderDirty());
      return a;
    },
    get_y: function () {
      return this.__matrix.ty;
    },
    set_y: function (a) {
      a != this.__matrix.ty &&
        ((this.__matrix.ty = a), this.__setRenderDirty());
      return a;
    },
    __class__: Sg,
    __properties__: {
      set_y: "set_y",
      get_y: "get_y",
      set_x: "set_x",
      get_x: "get_x",
      set_visible: "set_visible",
      get_visible: "get_visible",
      set_tileset: "set_tileset",
      get_tileset: "get_tileset",
      set_shader: "set_shader",
      get_shader: "get_shader",
      set_scaleY: "set_scaleY",
      get_scaleY: "get_scaleY",
      set_scaleX: "set_scaleX",
      get_scaleX: "get_scaleX",
      set_rotation: "set_rotation",
      get_rotation: "get_rotation",
      set_rect: "set_rect",
      get_rect: "get_rect",
      set_originY: "set_originY",
      get_originY: "get_originY",
      set_originX: "set_originX",
      get_originX: "get_originX",
      set_matrix: "set_matrix",
      get_matrix: "get_matrix",
      set_id: "set_id",
      get_id: "get_id",
      set_colorTransform: "set_colorTransform",
      get_colorTransform: "get_colorTransform",
      set_blendMode: "set_blendMode",
      get_blendMode: "get_blendMode",
      set_alpha: "set_alpha",
      get_alpha: "get_alpha",
    },
  };
  var Lj = function (a, b, c, d, e, f, g) {
    null == g && (g = 0);
    null == f && (f = 0);
    null == e && (e = 0);
    null == d && (d = 1);
    null == c && (c = 1);
    null == b && (b = 0);
    null == a && (a = 0);
    Sg.call(this, -1, a, b, c, d, e, f, g);
    this.__tiles = [];
    this.__length = 0;
  };
  p["openfl.display.TileContainer"] = Lj;
  Lj.__name__ = ["openfl", "display", "TileContainer"];
  Lj.__interfaces__ = [pk];
  Lj.__super__ = Sg;
  Lj.prototype = x(Sg.prototype, {
    __tiles: null,
    addTile: function (a) {
      if (null == a) return null;
      a.parent == this && (Q.remove(this.__tiles, a), this.__length--);
      this.__tiles[this.get_numTiles()] = a;
      a.parent = this;
      this.__length++;
      this.__setRenderDirty();
      return a;
    },
    addTileAt: function (a, b) {
      if (null == a) return null;
      a.parent == this && (Q.remove(this.__tiles, a), this.__length--);
      this.__tiles.splice(b, 0, a);
      a.parent = this;
      this.__length++;
      this.__setRenderDirty();
      return a;
    },
    addTiles: function (a) {
      for (var b = 0; b < a.length; ) {
        var c = a[b];
        ++b;
        this.addTile(c);
      }
      return a;
    },
    clone: function () {
      for (var a = new Lj(), b = 0, c = this.__tiles; b < c.length; ) {
        var d = c[b];
        ++b;
        a.addTile(d.clone());
      }
      return a;
    },
    contains: function (a) {
      return -1 < this.__tiles.indexOf(a);
    },
    getBounds: function (a) {
      for (var b = new W(), c, d = 0, e = this.__tiles; d < e.length; )
        (c = e[d]),
          ++d,
          (c = c.getBounds(a)),
          b.__expand(c.x, c.y, c.width, c.height);
      return b;
    },
    getTileAt: function (a) {
      return 0 <= a && a < this.get_numTiles() ? this.__tiles[a] : null;
    },
    getTileIndex: function (a) {
      for (var b = 0, c = this.__tiles.length; b < c; ) {
        var d = b++;
        if (this.__tiles[d] == a) return d;
      }
      return -1;
    },
    removeTile: function (a) {
      null != a &&
        a.parent == this &&
        ((a.parent = null),
        Q.remove(this.__tiles, a),
        this.__length--,
        this.__setRenderDirty());
      return a;
    },
    removeTileAt: function (a) {
      return 0 <= a && a < this.get_numTiles()
        ? this.removeTile(this.__tiles[a])
        : null;
    },
    removeTiles: function (a, b) {
      null == b && (b = 2147483647);
      null == a && (a = 0);
      0 > a && (a = 0);
      b > this.__tiles.length - 1 && (b = this.__tiles.length - 1);
      a = this.__tiles.splice(a, b - a + 1);
      for (b = 0; b < a.length; ) {
        var c = a[b];
        ++b;
        c.parent = null;
      }
      this.__length = this.__tiles.length;
      this.__setRenderDirty();
    },
    setTileIndex: function (a, b) {
      0 <= b &&
        b <= this.get_numTiles() &&
        a.parent == this &&
        (Q.remove(this.__tiles, a),
        this.__tiles.splice(b, 0, a),
        this.__setRenderDirty());
    },
    swapTiles: function (a, b) {
      if (a.parent == this && b.parent == this) {
        var c = this.__tiles.indexOf(a),
          d = this.__tiles.indexOf(b);
        this.__tiles[c] = b;
        this.__tiles[d] = a;
        this.__setRenderDirty();
      }
    },
    swapTilesAt: function (a, b) {
      var c = this.__tiles[a];
      this.__tiles[a] = this.__tiles[b];
      this.__tiles[b] = c;
      this.__setRenderDirty();
    },
    get_numTiles: function () {
      return this.__length;
    },
    __class__: Lj,
    __properties__: x(Sg.prototype.__properties__, {
      get_numTiles: "get_numTiles",
    }),
  });
  var pg = function (a, b, c, d) {
    null == d && (d = !0);
    hb.call(this);
    this.__tileset = c;
    this.smoothing = d;
    this.tileColorTransformEnabled =
      this.tileBlendModeEnabled =
      this.tileAlphaEnabled =
        !0;
    this.__group = new Lj();
    this.__group.set_tileset(c);
    this.__width = a;
    this.__height = b;
  };
  p["openfl.display.Tilemap"] = pg;
  pg.__name__ = ["openfl", "display", "Tilemap"];
  pg.__interfaces__ = [pk];
  pg.__super__ = hb;
  pg.prototype = x(hb.prototype, {
    tileAlphaEnabled: null,
    tileBlendModeEnabled: null,
    tileColorTransformEnabled: null,
    smoothing: null,
    __group: null,
    __tileset: null,
    __buffer: null,
    __bufferDirty: null,
    __height: null,
    __width: null,
    addTile: function (a) {
      return this.__group.addTile(a);
    },
    addTileAt: function (a, b) {
      return this.__group.addTileAt(a, b);
    },
    addTiles: function (a) {
      return this.__group.addTiles(a);
    },
    contains: function (a) {
      return this.__group.contains(a);
    },
    getTileAt: function (a) {
      return this.__group.getTileAt(a);
    },
    getTileIndex: function (a) {
      return this.__group.getTileIndex(a);
    },
    getTiles: function () {
      return this.__group.clone();
    },
    removeTile: function (a) {
      return this.__group.removeTile(a);
    },
    removeTileAt: function (a) {
      return this.__group.removeTileAt(a);
    },
    removeTiles: function (a, b) {
      null == b && (b = 2147483647);
      null == a && (a = 0);
      this.__group.removeTiles(a, b);
    },
    setTileIndex: function (a, b) {
      this.__group.setTileIndex(a, b);
    },
    setTiles: function (a) {
      var b = 0;
      for (a = a.__tiles; b < a.length; ) {
        var c = a[b];
        ++b;
        this.addTile(c);
      }
    },
    swapTiles: function (a, b) {
      this.__group.swapTiles(a, b);
    },
    swapTilesAt: function (a, b) {
      this.__group.swapTilesAt(a, b);
    },
    __enterFrame: function (a) {
      this.__group.__dirty &&
        !this.__renderDirty &&
        ((this.__renderDirty = !0), this.__setParentRenderDirty());
    },
    __getBounds: function (a, b) {
      var c = W.__pool.get();
      c.setTo(0, 0, this.__width, this.__height);
      c.__transform(c, b);
      a.__expand(c.x, c.y, c.width, c.height);
      W.__pool.release(c);
    },
    __hitTest: function (a, b, c, d, e, f) {
      if (
        !f.get_visible() ||
        this.__isMask ||
        (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
      )
        return !1;
      this.__getRenderTransform();
      c = this.__renderTransform;
      var g = c.a * c.d - c.b * c.c;
      c = 0 == g ? -c.tx : (1 / g) * (c.c * (c.ty - b) + c.d * (a - c.tx));
      g = this.__renderTransform;
      var h = g.a * g.d - g.b * g.c;
      a = 0 == h ? -g.ty : (1 / h) * (g.a * (b - g.ty) + g.b * (g.tx - a));
      return 0 < c && 0 < a && c <= this.__width && a <= this.__height
        ? (null == d || e || d.push(f), !0)
        : !1;
    },
    __renderCairo: function (a) {},
    __renderCanvas: function (a) {
      this.__updateCacheBitmap(a, !1);
      if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
        if (
          !(
            (null == this.opaqueBackground && null == this.__graphics) ||
            !this.__renderable ||
            0 >= a.__getAlpha(this.__worldAlpha)
          )
        ) {
          if (
            null != this.opaqueBackground &&
            !this.__isCacheBitmapRender &&
            0 < this.get_width() &&
            0 < this.get_height()
          ) {
            a.__setBlendMode(this.__worldBlendMode);
            a.__pushMaskObject(this);
            var b = a.context;
            a.setTransform(this.__renderTransform, b);
            var c = this.opaqueBackground;
            b.fillStyle =
              "rgb(" +
              ((c >>> 16) & 255) +
              "," +
              ((c >>> 8) & 255) +
              "," +
              (c & 255) +
              ")";
            b.fillRect(0, 0, this.get_width(), this.get_height());
            a.__popMaskObject(this);
          }
          if (null != this.__graphics && this.__renderable) {
            var d = a.__getAlpha(this.__worldAlpha);
            if (!(0 >= d) && ((b = this.__graphics), null != b)) {
              w.render(b, a);
              c = b.__width;
              var e = b.__height;
              if (null != b.__canvas) {
                var f = a.context,
                  g = this.__scrollRect;
                0 < c &&
                  0 < e &&
                  (null == g || (0 < g.width && 0 < g.height)) &&
                  (a.__setBlendMode(this.__worldBlendMode),
                  a.__pushMaskObject(this),
                  (f.globalAlpha = d),
                  a.setTransform(b.__worldTransform, f),
                  a.__isDOM && ((d = 1 / a.pixelRatio), f.scale(d, d)),
                  f.drawImage(b.__canvas, 0, 0, c, e),
                  a.__popMaskObject(this));
              }
            }
          }
        }
        this.__renderable &&
          0 != this.__group.__tiles.length &&
          ((b = a.__getAlpha(this.__worldAlpha)),
          0 >= b ||
            ((c = a.context),
            a.__setBlendMode(this.__worldBlendMode),
            a.__pushMaskObject(this),
            (e = W.__pool.get()),
            e.setTo(0, 0, this.__width, this.__height),
            a.__pushMaskRect(e, this.__renderTransform),
            (a.__allowSmoothing && this.smoothing) ||
              (c.imageSmoothingEnabled = !1),
            Hi.renderTileContainer(
              this.__group,
              a,
              this.__renderTransform,
              this.__tileset,
              a.__allowSmoothing && this.smoothing,
              this.tileAlphaEnabled,
              b,
              this.tileBlendModeEnabled,
              this.__worldBlendMode,
              null,
              null,
              e
            ),
            (a.__allowSmoothing && this.smoothing) ||
              (c.imageSmoothingEnabled = !0),
            a.__popMaskRect(),
            a.__popMaskObject(this),
            W.__pool.release(e)));
      } else
        (b = this.__cacheBitmap),
          b.__renderable &&
            ((e = a.__getAlpha(b.__worldAlpha)),
            0 < e &&
              null != b.__bitmapData &&
              b.__bitmapData.__isValid &&
              b.__bitmapData.readable &&
              ((c = a.context),
              a.__setBlendMode(b.__worldBlendMode),
              a.__pushMaskObject(b, !1),
              pa.convertToCanvas(b.__bitmapData.image),
              (c.globalAlpha = e),
              (e = b.__scrollRect),
              a.setTransform(b.__renderTransform, c),
              (a.__allowSmoothing && b.smoothing) ||
                (c.imageSmoothingEnabled = !1),
              null == e
                ? c.drawImage(
                    b.__bitmapData.image.get_src(),
                    0,
                    0,
                    b.__bitmapData.image.width,
                    b.__bitmapData.image.height
                  )
                : c.drawImage(
                    b.__bitmapData.image.get_src(),
                    e.x,
                    e.y,
                    e.width,
                    e.height
                  ),
              (a.__allowSmoothing && b.smoothing) ||
                (c.imageSmoothingEnabled = !0),
              a.__popMaskObject(b, !1)));
      this.__renderEvent(a);
    },
    __renderDOM: function (a) {
      this.__updateCacheBitmap(a, !1);
      if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
        null != this.opaqueBackground &&
          !this.__isCacheBitmapRender &&
          0 < this.get_width() &&
          this.get_height();
        var b = this.__graphics;
        if (
          null != this.stage &&
          this.__worldVisible &&
          this.__renderable &&
          null != b
        ) {
          w.render(b, a.__canvasRenderer);
          if (
            b.__dirty ||
            this.__worldAlphaChanged ||
            this.__canvas != b.__canvas
          )
            null != b.__canvas
              ? this.__canvas != b.__canvas &&
                (null != this.__canvas && a.element.removeChild(this.__canvas),
                (this.__canvas = b.__canvas),
                (this.__context = b.__context),
                a.__initializeElement(this, this.__canvas))
              : Df.clear(this, a);
          if (null != this.__canvas) {
            a.__pushMaskObject(this);
            var c = this.__renderTransform;
            this.__renderTransform = b.__worldTransform;
            b.__transformDirty &&
              ((b.__transformDirty = !1), (this.__renderTransformChanged = !0));
            a.__updateClip(this);
            a.__applyStyle(this, !0, !0, !0);
            this.__renderTransform = c;
            a.__popMaskObject(this);
          }
        } else Df.clear(this, a);
        if (
          null != this.stage &&
          this.__worldVisible &&
          this.__renderable &&
          0 < this.__group.__tiles.length
        ) {
          null == this.__canvas &&
            ((this.__canvas = window.document.createElement("canvas")),
            (this.__context = this.__canvas.getContext("2d")),
            a.__initializeElement(this, this.__canvas));
          this.__canvas.width = this.__width;
          this.__canvas.height = this.__height;
          a.__canvasRenderer.context = this.__context;
          b = a.__canvasRenderer;
          if (
            this.__renderable &&
            0 != this.__group.__tiles.length &&
            ((c = b.__getAlpha(this.__worldAlpha)), !(0 >= c))
          ) {
            var d = b.context;
            b.__setBlendMode(this.__worldBlendMode);
            b.__pushMaskObject(this);
            var e = W.__pool.get();
            e.setTo(0, 0, this.__width, this.__height);
            b.__pushMaskRect(e, this.__renderTransform);
            (b.__allowSmoothing && this.smoothing) ||
              (d.imageSmoothingEnabled = !1);
            Hi.renderTileContainer(
              this.__group,
              b,
              this.__renderTransform,
              this.__tileset,
              b.__allowSmoothing && this.smoothing,
              this.tileAlphaEnabled,
              c,
              this.tileBlendModeEnabled,
              this.__worldBlendMode,
              null,
              null,
              e
            );
            (b.__allowSmoothing && this.smoothing) ||
              (d.imageSmoothingEnabled = !0);
            b.__popMaskRect();
            b.__popMaskObject(this);
            W.__pool.release(e);
          }
          a.__canvasRenderer.context = null;
          a.__updateClip(this);
          a.__applyStyle(this, !0, !1, !0);
        } else Qk.clear(this, a);
      } else
        this.__renderDOMClear(a),
          (this.__cacheBitmap.stage = this.stage),
          (b = this.__cacheBitmap),
          null != b.stage &&
          b.__worldVisible &&
          b.__renderable &&
          null != b.__bitmapData &&
          b.__bitmapData.__isValid &&
          b.__bitmapData.readable
            ? (a.__pushMaskObject(b),
              null != b.__bitmapData.image.buffer.__srcImage
                ? Sd.renderImage(b, a)
                : Sd.renderCanvas(b, a),
              a.__popMaskObject(b))
            : Sd.clear(b, a);
      this.__renderEvent(a);
    },
    __renderDOMClear: function (a) {
      Qk.clear(this, a);
    },
    __renderFlash: function () {},
    __renderGL: function (a) {
      this.__updateCacheBitmap(a, !1);
      if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
        if (
          !(
            (null == this.opaqueBackground && null == this.__graphics) ||
            !this.__renderable ||
            0 >= this.__worldAlpha
          )
        ) {
          if (
            null != this.opaqueBackground &&
            !this.__isCacheBitmapRender &&
            0 < this.get_width() &&
            0 < this.get_height()
          ) {
            a.__setBlendMode(this.__worldBlendMode);
            a.__pushMaskObject(this);
            var b = a.__context3D,
              c = W.__pool.get();
            c.setTo(0, 0, this.get_width(), this.get_height());
            a.__pushMaskRect(c, this.__renderTransform);
            var d = this.opaqueBackground;
            b.clear(
              ((d >>> 16) & 255) / 255,
              ((d >>> 8) & 255) / 255,
              (d & 255) / 255,
              1,
              0,
              0,
              1
            );
            a.__popMaskRect();
            a.__popMaskObject(this);
            W.__pool.release(c);
          }
          null != this.__graphics && lg.render(this, a);
        }
        S.render(this, a);
      } else Ah.render(this.__cacheBitmap, a);
      this.__renderEvent(a);
    },
    __renderGLMask: function (a) {
      if (null != this.opaqueBackground || null != this.__graphics)
        null != this.opaqueBackground &&
          !this.__isCacheBitmapRender &&
          0 < this.get_width() &&
          this.get_height(),
          null != this.__graphics && lg.renderMask(this, a);
      S.renderMask(this, a);
    },
    __shouldCacheHardware: function (a) {
      return !0;
    },
    __updateCacheBitmap: function (a, b) {
      return null == this.__filters &&
        "opengl" == a.__type &&
        null == this.__cacheBitmap
        ? !1
        : hb.prototype.__updateCacheBitmap.call(this, a, b);
    },
    get_height: function () {
      return this.__height * Math.abs(this.get_scaleY());
    },
    set_height: function (a) {
      this.__height = a | 0;
      return this.__height * Math.abs(this.get_scaleY());
    },
    get_numTiles: function () {
      return this.__group.__length;
    },
    get_tileset: function () {
      return this.__tileset;
    },
    set_tileset: function (a) {
      a != this.__tileset &&
        ((this.__tileset = a),
        this.__group.set_tileset(a),
        (this.__group.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      return a;
    },
    get_width: function () {
      return this.__width * Math.abs(this.__scaleX);
    },
    set_width: function (a) {
      this.__width = a | 0;
      return this.__width * Math.abs(this.__scaleX);
    },
    __class__: pg,
    __properties__: x(hb.prototype.__properties__, {
      set_tileset: "set_tileset",
      get_tileset: "get_tileset",
      get_numTiles: "get_numTiles",
    }),
  });
  var ui = function (a, b) {
    this.__bitmapData = a;
    this.rectData = Oa.toFloatVector(null);
    this.__data = [];
    if (null != b)
      for (a = 0; a < b.length; ) {
        var c = b[a];
        ++a;
        this.addRect(c);
      }
  };
  p["openfl.display.Tileset"] = ui;
  ui.__name__ = ["openfl", "display", "Tileset"];
  ui.prototype = {
    rectData: null,
    __bitmapData: null,
    __data: null,
    addRect: function (a) {
      if (null == a) return -1;
      this.rectData.push(a.x);
      this.rectData.push(a.y);
      this.rectData.push(a.width);
      this.rectData.push(a.height);
      a = new Lq(a);
      a.__update(this.__bitmapData);
      this.__data.push(a);
      return this.__data.length - 1;
    },
    clone: function () {
      for (
        var a = new ui(this.__bitmapData, null),
          b = W.__pool.get(),
          c = 0,
          d = this.__data;
        c < d.length;

      ) {
        var e = d[c];
        ++c;
        b.setTo(e.x, e.y, e.width, e.height);
        a.addRect(b);
      }
      W.__pool.release(b);
      return a;
    },
    hasRect: function (a) {
      for (var b = 0, c = this.__data; b < c.length; ) {
        var d = c[b];
        ++b;
        if (
          a.x == d.x &&
          a.y == d.y &&
          a.width == d.height &&
          a.height == d.height
        )
          return !0;
      }
      return !1;
    },
    getRect: function (a) {
      return a < this.__data.length && 0 <= a
        ? new W(
            this.__data[a].x,
            this.__data[a].y,
            this.__data[a].width,
            this.__data[a].height
          )
        : null;
    },
    getRectID: function (a) {
      for (var b, c = 0, d = this.__data.length; c < d; ) {
        var e = c++;
        b = this.__data[e];
        if (
          a.x == b.x &&
          a.y == b.y &&
          a.width == b.height &&
          a.height == b.height
        )
          return e;
      }
      return null;
    },
    get_bitmapData: function () {
      return this.__bitmapData;
    },
    set_bitmapData: function (a) {
      this.__bitmapData = a;
      for (var b = 0, c = this.__data; b < c.length; ) {
        var d = c[b];
        ++b;
        d.__update(this.__bitmapData);
      }
      return a;
    },
    get_numRects: function () {
      return this.__data.length;
    },
    __class__: ui,
    __properties__: {
      get_numRects: "get_numRects",
      set_bitmapData: "set_bitmapData",
      get_bitmapData: "get_bitmapData",
    },
  };
  var Lq = function (a) {
    null != a &&
      ((this.x = a.x | 0),
      (this.y = a.y | 0),
      (this.width = a.width | 0),
      (this.height = a.height | 0));
  };
  p["openfl.display._Tileset.TileData"] = Lq;
  Lq.__name__ = ["openfl", "display", "_Tileset", "TileData"];
  Lq.prototype = {
    height: null,
    width: null,
    x: null,
    y: null,
    __bitmapData: null,
    __uvHeight: null,
    __uvWidth: null,
    __uvX: null,
    __uvY: null,
    __update: function (a) {
      if (null != a) {
        var b = a.width;
        a = a.height;
        this.__uvX = this.x / b;
        this.__uvY = this.y / a;
        this.__uvWidth = (this.x + this.width) / b;
        this.__uvHeight = (this.y + this.height) / a;
      }
    },
    __class__: Lq,
  };
  var Zk = {};
  p["openfl.display._TriangleCulling.TriangleCulling_Impl_"] = Zk;
  Zk.__name__ = [
    "openfl",
    "display",
    "_TriangleCulling",
    "TriangleCulling_Impl_",
  ];
  Zk.fromString = function (a) {
    switch (a) {
      case "negative":
        return 0;
      case "none":
        return 1;
      case "positive":
        return 2;
      default:
        return null;
    }
  };
  Zk.toString = function (a) {
    switch (a) {
      case 0:
        return "negative";
      case 1:
        return "none";
      case 2:
        return "positive";
      default:
        return null;
    }
  };
  var Xn = function (a, b) {
    qj.call(this, a, b);
    this.stage = new Xk(
      this,
      Object.prototype.hasOwnProperty.call(b.context, "background")
        ? b.context.background
        : 16777215
    );
    if (Object.prototype.hasOwnProperty.call(b, "parameters"))
      try {
        this.stage.get_loaderInfo().parameters = b.parameters;
      } catch (c) {
        X.lastException = c;
      }
    Object.prototype.hasOwnProperty.call(b, "resizable") &&
      !b.resizable &&
      this.stage.__setLogicalSize(b.width, b.height);
    a.addModule(this.stage);
  };
  p["openfl.display.Window"] = Xn;
  Xn.__name__ = ["openfl", "display", "Window"];
  Xn.__super__ = qj;
  Xn.prototype = x(qj.prototype, { __class__: Xn });
  var nc = function (a, b, c) {
    this.totalGPUMemory = 0;
    this.profile = 3;
    this.driverInfo = "OpenGL (Direct blitting)";
    this.backBufferHeight = this.backBufferWidth = 0;
    db.call(this);
    this.__stage = a;
    this.__contextState = b;
    this.__stage3D = c;
    this.__context = a.window.context;
    this.gl = this.__context.webgl;
    null == this.__contextState && (this.__contextState = new Wn());
    this.__state = new Wn();
    this.__vertexConstants = new vc(512);
    this.__fragmentConstants = new vc(512);
    a = [1, 1, 1, 1];
    this.__positionScale = null != a ? new vc(a) : null;
    this.__programs = new la();
    -1 == nc.GL_MAX_VIEWPORT_DIMS &&
      (nc.GL_MAX_VIEWPORT_DIMS = this.gl.getParameter(
        this.gl.MAX_VIEWPORT_DIMS
      ));
    this.maxBackBufferHeight = this.maxBackBufferWidth =
      nc.GL_MAX_VIEWPORT_DIMS;
    -1 == nc.GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT &&
      ((a = this.gl.getExtension("EXT_texture_filter_anisotropic")),
      (null != a &&
        Object.prototype.hasOwnProperty.call(
          a,
          "MAX_TEXTURE_MAX_ANISOTROPY_EXT"
        )) ||
        (a = this.gl.getExtension("MOZ_EXT_texture_filter_anisotropic")),
      (null != a &&
        Object.prototype.hasOwnProperty.call(
          a,
          "MAX_TEXTURE_MAX_ANISOTROPY_EXT"
        )) ||
        (a = this.gl.getExtension("WEBKIT_EXT_texture_filter_anisotropic")),
      null != a
        ? ((nc.GL_TEXTURE_MAX_ANISOTROPY_EXT = a.TEXTURE_MAX_ANISOTROPY_EXT),
          (nc.GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = this.gl.getParameter(
            a.MAX_TEXTURE_MAX_ANISOTROPY_EXT
          )))
        : ((nc.GL_TEXTURE_MAX_ANISOTROPY_EXT = 0),
          (nc.GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0)));
    -1 == nc.GL_DEPTH_STENCIL && (nc.GL_DEPTH_STENCIL = this.gl.DEPTH_STENCIL);
    if (null == nc.__driverInfo) {
      a = this.gl.getParameter(this.gl.VENDOR);
      b = this.gl.getParameter(this.gl.VERSION);
      c = this.gl.getParameter(this.gl.RENDERER);
      var d = this.gl.getParameter(this.gl.SHADING_LANGUAGE_VERSION);
      nc.__driverInfo =
        "OpenGL Vendor=" +
        a +
        " Version=" +
        b +
        " Renderer=" +
        c +
        " GLSL=" +
        d;
    }
    this.driverInfo = nc.__driverInfo;
    this.__quadIndexBufferElements = 16383;
    a = this.__quadIndexBufferCount = 6 * this.__quadIndexBufferElements;
    a = null != a ? new Uint16Array(a) : null;
    d = c = b = 0;
    for (var e = this.__quadIndexBufferElements; d < e; )
      d++,
        (a[b] = c),
        (a[b + 1] = c + 1),
        (a[b + 2] = c + 2),
        (a[b + 3] = c + 2),
        (a[b + 4] = c + 1),
        (a[b + 5] = c + 3),
        (b += 6),
        (c += 4);
    this.__quadIndexBuffer = this.createIndexBuffer(
      this.__quadIndexBufferCount
    );
    this.__quadIndexBuffer.uploadFromTypedArray(a);
  };
  p["openfl.display3D.Context3D"] = nc;
  nc.__name__ = ["openfl", "display3D", "Context3D"];
  nc.__super__ = db;
  nc.prototype = x(db.prototype, {
    backBufferHeight: null,
    backBufferWidth: null,
    driverInfo: null,
    maxBackBufferHeight: null,
    maxBackBufferWidth: null,
    profile: null,
    totalGPUMemory: null,
    gl: null,
    __backBufferAntiAlias: null,
    __backBufferTexture: null,
    __backBufferWantsBestResolution: null,
    __backBufferWantsBestResolutionOnBrowserZoom: null,
    __cleared: null,
    __context: null,
    __contextState: null,
    __renderStage3DProgram: null,
    __enableErrorChecking: null,
    __fragmentConstants: null,
    __frontBufferTexture: null,
    __positionScale: null,
    __present: null,
    __programs: null,
    __quadIndexBuffer: null,
    __quadIndexBufferCount: null,
    __quadIndexBufferElements: null,
    __stage: null,
    __stage3D: null,
    __state: null,
    __vertexConstants: null,
    clear: function (a, b, c, d, e, f, g) {
      null == g && (g = 7);
      null == f && (f = 0);
      null == e && (e = 1);
      null == d && (d = 1);
      null == c && (c = 0);
      null == b && (b = 0);
      null == a && (a = 0);
      this.__flushGLFramebuffer();
      this.__flushGLViewport();
      var h = 0;
      if (0 != (g & 1)) {
        null == this.__state.renderToTexture &&
          (this.__stage.context3D != this ||
            this.__stage.__renderer.__cleared ||
            (this.__stage.__renderer.__cleared = !0),
          (this.__cleared = !0));
        h |= this.gl.COLOR_BUFFER_BIT;
        if (
          1 != this.__contextState.colorMaskRed ||
          1 != this.__contextState.colorMaskGreen ||
          1 != this.__contextState.colorMaskBlue ||
          1 != this.__contextState.colorMaskAlpha
        )
          this.gl.colorMask(!0, !0, !0, !0),
            (this.__contextState.colorMaskRed = !0),
            (this.__contextState.colorMaskGreen = !0),
            (this.__contextState.colorMaskBlue = !0),
            (this.__contextState.colorMaskAlpha = !0);
        this.gl.clearColor(a, b, c, d);
      }
      0 != (g & 2) &&
        ((h |= this.gl.DEPTH_BUFFER_BIT),
        1 != this.__contextState.depthMask &&
          (this.gl.depthMask(!0), (this.__contextState.depthMask = !0)),
        this.gl.clearDepth(e));
      0 != (g & 4) &&
        ((h |= this.gl.STENCIL_BUFFER_BIT),
        255 != this.__contextState.stencilWriteMask &&
          (this.gl.stencilMask(255),
          (this.__contextState.stencilWriteMask = 255)),
        this.gl.clearStencil(f),
        (this.__contextState.stencilWriteMask = 255));
      0 != h && (this.__setGLScissorTest(!1), this.gl.clear(h));
    },
    configureBackBuffer: function (a, b, c, d, e, f) {
      null == f && (f = !1);
      null == e && (e = !1);
      null == d && (d = !0);
      if (null == this.__stage3D)
        (this.backBufferWidth = a),
          (this.backBufferHeight = b),
          (this.__backBufferAntiAlias = c),
          (this.__state.backBufferEnableDepthAndStencil = d),
          (this.__backBufferWantsBestResolution = e),
          (this.__backBufferWantsBestResolutionOnBrowserZoom = f);
      else {
        if (
          null == this.__backBufferTexture ||
          this.backBufferWidth != a ||
          this.backBufferHeight != b
        ) {
          this.__backBufferTexture = this.createRectangleTexture(a, b, 1, !0);
          this.__frontBufferTexture = this.createRectangleTexture(a, b, 1, !0);
          null == this.__stage3D.__vertexBuffer &&
            (this.__stage3D.__vertexBuffer = this.createVertexBuffer(4, 5));
          var g = Oa.toFloatVector(null, null, null, [
            a,
            b,
            0,
            1,
            1,
            0,
            b,
            0,
            0,
            1,
            a,
            0,
            0,
            1,
            0,
            0,
            0,
            0,
            0,
            0,
          ]);
          this.__stage3D.__vertexBuffer.uploadFromVector(g, 0, 20);
          null == this.__stage3D.__indexBuffer &&
            ((this.__stage3D.__indexBuffer = this.createIndexBuffer(6)),
            (g = Oa.toIntVector(null, null, null, [0, 1, 2, 2, 1, 3])),
            this.__stage3D.__indexBuffer.uploadFromVector(g, 0, 6));
        }
        this.backBufferWidth = a;
        this.backBufferHeight = b;
        this.__backBufferAntiAlias = c;
        this.__state.backBufferEnableDepthAndStencil = d;
        this.__backBufferWantsBestResolution = e;
        this.__backBufferWantsBestResolutionOnBrowserZoom = f;
        this.__state.__primaryGLFramebuffer =
          this.__backBufferTexture.__getGLFramebuffer(d, c, 0);
        this.__frontBufferTexture.__getGLFramebuffer(d, c, 0);
      }
    },
    createCubeTexture: function (a, b, c, d) {
      null == d && (d = 0);
      return new Mj(this, a, b, c, d);
    },
    createIndexBuffer: function (a, b) {
      null == b && (b = 1);
      return new Mq(this, a, b);
    },
    createProgram: function (a) {
      null == a && (a = 0);
      return new Nq(this, a);
    },
    createRectangleTexture: function (a, b, c, d) {
      return new $k(this, a, b, xh.toString(c), d);
    },
    createTexture: function (a, b, c, d, e) {
      null == e && (e = 0);
      return new Oi(this, a, b, c, d, e);
    },
    createVertexBuffer: function (a, b, c) {
      null == c && (c = 1);
      return new Oq(this, a, b, Nj.toString(c));
    },
    createVideoTexture: function () {
      return new jo(this);
    },
    dispose: function (a) {},
    drawToBitmapData: function (a, b, c) {
      if (null != a)
        if (
          ((b =
            null != b
              ? b.__toLimeRectangle()
              : new Td(0, 0, this.backBufferWidth, this.backBufferHeight)),
          (c = null != c ? c.__toLimeVector2() : new xd()),
          this.__stage.context3D == this)
        ) {
          if (null != this.__stage.window) {
            if (null != this.__stage3D) {
              var d = -this.__stage3D.get_x() | 0,
                e = -this.__stage3D.get_y() | 0;
              c.x = d;
              c.y = e;
            }
            d = this.__stage.window.readPixels();
            a.image.copyPixels(d, b, c);
          }
        } else
          null != this.__backBufferTexture &&
            ((d = this.__state.renderToTexture),
            this.setRenderToBackBuffer(),
            this.__flushGLFramebuffer(),
            this.__flushGLViewport(),
            (e = this.backBufferWidth * this.backBufferHeight * 4),
            (e = null != e ? new lb(e) : null),
            this.gl.readPixels(
              0,
              0,
              this.backBufferWidth,
              this.backBufferHeight,
              this.__backBufferTexture.__format,
              this.gl.UNSIGNED_BYTE,
              e
            ),
            (e = new pb(
              new ag(e, this.backBufferWidth, this.backBufferHeight, 32, 2)
            )),
            a.image.copyPixels(e, b, c),
            null != d &&
              this.setRenderToTexture(
                d,
                this.__state.renderToTextureDepthStencil,
                this.__state.renderToTextureAntiAlias,
                this.__state.renderToTextureSurfaceSelector
              ));
    },
    drawTriangles: function (a, b, c) {
      null == c && (c = -1);
      null == b && (b = 0);
      null == this.__state.renderToTexture &&
        (this.__stage.context3D != this || this.__stage.__renderer.__cleared
          ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1)
          : this.__stage.__renderer.__clear());
      this.__flushGL();
      null != this.__state.program && this.__state.program.__flush();
      c = -1 == c ? a.__numIndices : 3 * c;
      this.__bindGLElementArrayBuffer(a.__id);
      this.gl.drawElements(this.gl.TRIANGLES, c, a.__elementType, b);
    },
    present: function () {
      this.setRenderToBackBuffer();
      if (null != this.__stage3D) {
        this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1);
        var a = this.__backBufferTexture;
        this.__backBufferTexture = this.__frontBufferTexture;
        this.__frontBufferTexture = a;
        this.__state.__primaryGLFramebuffer =
          this.__backBufferTexture.__getGLFramebuffer(
            this.__state.backBufferEnableDepthAndStencil,
            this.__backBufferAntiAlias,
            0
          );
        this.__cleared = !1;
      }
      this.__present = !0;
    },
    setBlendFactors: function (a, b) {
      this.setBlendFactorsSeparate(a, b, a, b);
    },
    setBlendFactorsSeparate: function (a, b, c, d) {
      this.__state.blendSourceRGBFactor = a;
      this.__state.blendDestinationRGBFactor = b;
      this.__state.blendSourceAlphaFactor = c;
      this.__state.blendDestinationAlphaFactor = d;
      this.__setGLBlendEquation(this.gl.FUNC_ADD);
    },
    setColorMask: function (a, b, c, d) {
      this.__state.colorMaskRed = a;
      this.__state.colorMaskGreen = b;
      this.__state.colorMaskBlue = c;
      this.__state.colorMaskAlpha = d;
    },
    setCulling: function (a) {
      this.__state.culling = a;
    },
    setDepthTest: function (a, b) {
      this.__state.depthMask = a;
      this.__state.depthCompareMode = b;
    },
    setProgram: function (a) {
      this.__state.program = a;
      this.__state.shader = null;
      if (null != a)
        for (var b = 0, c = a.__samplerStates.length; b < c; ) {
          var d = b++;
          null == this.__state.samplerStates[d]
            ? (this.__state.samplerStates[d] = a.__samplerStates[d].clone())
            : this.__state.samplerStates[d].copyFrom(a.__samplerStates[d]);
        }
    },
    setProgramConstantsFromByteArray: function (a, b, c, d, e) {
      if (
        0 != c &&
        null != this.__state.program &&
        (null == this.__state.program || 1 != this.__state.program.__format)
      ) {
        -1 == c && (c = (Na.get_length(d) >> 2) - e);
        var f = (a = 1 == a)
            ? this.__vertexConstants
            : this.__fragmentConstants,
          g = Na.toBytes(d);
        d = Na.get_length(d);
        d =
          null == d
            ? new vc(g.b.bufferValue, 0)
            : new vc(g.b.bufferValue, 0, d);
        g = 4 * b;
        e = (Xa.toFloat(e) / Xa.toFloat(4)) | 0;
        for (var h = 0, n = 4 * c; h < n; ) {
          var k = h++;
          f[g + k] = d[e + k];
        }
        null != this.__state.program &&
          this.__state.program.__markDirty(a, b, c);
      }
    },
    setProgramConstantsFromMatrix: function (a, b, c, d) {
      null == d && (d = !1);
      if (null != this.__state.program && 1 == this.__state.program.__format) {
        this.__flushGLProgram();
        a = new vc(16);
        for (var e = 0; 16 > e; ) {
          var f = e++;
          a[f] = c.rawData.get(f);
        }
        yb.uniformMatrix4fv(this.gl, b, d, a);
      } else
        (e = (a = 1 == a) ? this.__vertexConstants : this.__fragmentConstants),
          (c = c.rawData),
          (f = 4 * b),
          d
            ? ((e[f++] = c.get(0)),
              (e[f++] = c.get(4)),
              (e[f++] = c.get(8)),
              (e[f++] = c.get(12)),
              (e[f++] = c.get(1)),
              (e[f++] = c.get(5)),
              (e[f++] = c.get(9)),
              (e[f++] = c.get(13)),
              (e[f++] = c.get(2)),
              (e[f++] = c.get(6)),
              (e[f++] = c.get(10)),
              (e[f++] = c.get(14)),
              (e[f++] = c.get(3)),
              (e[f++] = c.get(7)),
              (e[f++] = c.get(11)))
            : ((e[f++] = c.get(0)),
              (e[f++] = c.get(1)),
              (e[f++] = c.get(2)),
              (e[f++] = c.get(3)),
              (e[f++] = c.get(4)),
              (e[f++] = c.get(5)),
              (e[f++] = c.get(6)),
              (e[f++] = c.get(7)),
              (e[f++] = c.get(8)),
              (e[f++] = c.get(9)),
              (e[f++] = c.get(10)),
              (e[f++] = c.get(11)),
              (e[f++] = c.get(12)),
              (e[f++] = c.get(13)),
              (e[f++] = c.get(14))),
          (e[f++] = c.get(15)),
          null != this.__state.program &&
            this.__state.program.__markDirty(a, b, 4);
    },
    setProgramConstantsFromVector: function (a, b, c, d) {
      null == d && (d = -1);
      if (
        0 != d &&
        (null == this.__state.program || 1 != this.__state.program.__format)
      ) {
        -1 == d && (d = c.get_length() >> 2);
        for (
          var e = (a = 1 == a)
              ? this.__vertexConstants
              : this.__fragmentConstants,
            f = 0,
            g = 4 * b,
            h = 0,
            n = d;
          h < n;

        )
          h++,
            (e[g++] = c.get(f++)),
            (e[g++] = c.get(f++)),
            (e[g++] = c.get(f++)),
            (e[g++] = c.get(f++));
        null != this.__state.program &&
          this.__state.program.__markDirty(a, b, d);
      }
    },
    setRenderToBackBuffer: function () {
      this.__state.renderToTexture = null;
    },
    setRenderToTexture: function (a, b, c, d) {
      null == d && (d = 0);
      null == c && (c = 0);
      null == b && (b = !1);
      this.__state.renderToTexture = a;
      this.__state.renderToTextureDepthStencil = b;
      this.__state.renderToTextureAntiAlias = c;
      this.__state.renderToTextureSurfaceSelector = d;
    },
    setSamplerStateAt: function (a, b, c, d) {
      null == this.__state.samplerStates[a] &&
        (this.__state.samplerStates[a] = new Oh());
      a = this.__state.samplerStates[a];
      a.wrap = b;
      a.filter = c;
      a.mipfilter = d;
    },
    setScissorRectangle: function (a) {
      null != a
        ? ((this.__state.scissorEnabled = !0),
          this.__state.scissorRectangle.copyFrom(a))
        : (this.__state.scissorEnabled = !1);
    },
    setStencilActions: function (a, b, c, d, e) {
      null == e && (e = 5);
      null == d && (d = 5);
      null == c && (c = 5);
      null == b && (b = 0);
      null == a && (a = 2);
      this.__state.stencilTriangleFace = a;
      this.__state.stencilCompareMode = b;
      this.__state.stencilPass = c;
      this.__state.stencilDepthFail = d;
      this.__state.stencilFail = e;
    },
    setStencilReferenceValue: function (a, b, c) {
      null == c && (c = 255);
      null == b && (b = 255);
      this.__state.stencilReferenceValue = a;
      this.__state.stencilReadMask = b;
      this.__state.stencilWriteMask = c;
    },
    setTextureAt: function (a, b) {
      this.__state.textures[a] = b;
    },
    setVertexBufferAt: function (a, b, c, d) {
      null == d && (d = 4);
      null == c && (c = 0);
      if (null == b)
        this.gl.disableVertexAttribArray(a), this.__bindGLArrayBuffer(null);
      else
        switch (
          (this.__bindGLArrayBuffer(b.__id),
          this.gl.enableVertexAttribArray(a),
          (c *= 4),
          d)
        ) {
          case 0:
            this.gl.vertexAttribPointer(
              a,
              4,
              this.gl.UNSIGNED_BYTE,
              !0,
              b.__stride,
              c
            );
            break;
          case 1:
            this.gl.vertexAttribPointer(a, 1, this.gl.FLOAT, !1, b.__stride, c);
            break;
          case 2:
            this.gl.vertexAttribPointer(a, 2, this.gl.FLOAT, !1, b.__stride, c);
            break;
          case 3:
            this.gl.vertexAttribPointer(a, 3, this.gl.FLOAT, !1, b.__stride, c);
            break;
          case 4:
            this.gl.vertexAttribPointer(a, 4, this.gl.FLOAT, !1, b.__stride, c);
            break;
          default:
            throw new v(new ld());
        }
    },
    __bindGLArrayBuffer: function (a) {
      this.__contextState.__currentGLArrayBuffer != a &&
        (this.gl.bindBuffer(this.gl.ARRAY_BUFFER, a),
        (this.__contextState.__currentGLArrayBuffer = a));
    },
    __bindGLElementArrayBuffer: function (a) {
      this.__contextState.__currentGLElementArrayBuffer != a &&
        (this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, a),
        (this.__contextState.__currentGLElementArrayBuffer = a));
    },
    __bindGLFramebuffer: function (a) {
      this.__contextState.__currentGLFramebuffer != a &&
        (this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, a),
        (this.__contextState.__currentGLFramebuffer = a));
    },
    __bindGLTexture2D: function (a) {
      this.gl.bindTexture(this.gl.TEXTURE_2D, a);
      this.__contextState.__currentGLTexture2D = a;
    },
    __bindGLTextureCubeMap: function (a) {
      this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, a);
      this.__contextState.__currentGLTextureCubeMap = a;
    },
    __drawTriangles: function (a, b) {
      null == a && (a = 0);
      null == this.__state.renderToTexture &&
        (this.__stage.context3D != this || this.__stage.__renderer.__cleared
          ? this.__cleared || this.clear(0, 0, 0, 0, 1, 0, 1)
          : this.__stage.__renderer.__clear());
      this.__flushGL();
      null != this.__state.program && this.__state.program.__flush();
      this.gl.drawArrays(this.gl.TRIANGLES, a, b);
    },
    __flushGL: function () {
      this.__flushGLProgram();
      this.__flushGLFramebuffer();
      this.__flushGLViewport();
      this.__flushGLBlend();
      if (
        this.__contextState.colorMaskRed != this.__state.colorMaskRed ||
        this.__contextState.colorMaskGreen != this.__state.colorMaskGreen ||
        this.__contextState.colorMaskBlue != this.__state.colorMaskBlue ||
        this.__contextState.colorMaskAlpha != this.__state.colorMaskAlpha
      )
        this.gl.colorMask(
          this.__state.colorMaskRed,
          this.__state.colorMaskGreen,
          this.__state.colorMaskBlue,
          this.__state.colorMaskAlpha
        ),
          (this.__contextState.colorMaskRed = this.__state.colorMaskRed),
          (this.__contextState.colorMaskGreen = this.__state.colorMaskGreen),
          (this.__contextState.colorMaskBlue = this.__state.colorMaskBlue),
          (this.__contextState.colorMaskAlpha = this.__state.colorMaskAlpha);
      this.__flushGLCulling();
      this.__flushGLDepth();
      this.__flushGLScissor();
      this.__flushGLStencil();
      this.__flushGLTextures();
    },
    __flushGLBlend: function () {
      if (
        this.__contextState.blendDestinationRGBFactor !=
          this.__state.blendDestinationRGBFactor ||
        this.__contextState.blendSourceRGBFactor !=
          this.__state.blendSourceRGBFactor ||
        this.__contextState.blendDestinationAlphaFactor !=
          this.__state.blendDestinationAlphaFactor ||
        this.__contextState.blendSourceAlphaFactor !=
          this.__state.blendSourceAlphaFactor
      )
        this.__setGLBlend(!0),
          this.__state.blendDestinationRGBFactor ==
            this.__state.blendDestinationAlphaFactor &&
          this.__state.blendSourceRGBFactor ==
            this.__state.blendSourceAlphaFactor
            ? this.gl.blendFunc(
                this.__getGLBlend(this.__state.blendSourceRGBFactor),
                this.__getGLBlend(this.__state.blendDestinationRGBFactor)
              )
            : this.gl.blendFuncSeparate(
                this.__getGLBlend(this.__state.blendSourceRGBFactor),
                this.__getGLBlend(this.__state.blendDestinationRGBFactor),
                this.__getGLBlend(this.__state.blendSourceAlphaFactor),
                this.__getGLBlend(this.__state.blendDestinationAlphaFactor)
              ),
          (this.__contextState.blendDestinationRGBFactor =
            this.__state.blendDestinationRGBFactor),
          (this.__contextState.blendSourceRGBFactor =
            this.__state.blendSourceRGBFactor),
          (this.__contextState.blendDestinationAlphaFactor =
            this.__state.blendDestinationAlphaFactor),
          (this.__contextState.blendSourceAlphaFactor =
            this.__state.blendSourceAlphaFactor);
    },
    __flushGLColor: function () {
      if (
        this.__contextState.colorMaskRed != this.__state.colorMaskRed ||
        this.__contextState.colorMaskGreen != this.__state.colorMaskGreen ||
        this.__contextState.colorMaskBlue != this.__state.colorMaskBlue ||
        this.__contextState.colorMaskAlpha != this.__state.colorMaskAlpha
      )
        this.gl.colorMask(
          this.__state.colorMaskRed,
          this.__state.colorMaskGreen,
          this.__state.colorMaskBlue,
          this.__state.colorMaskAlpha
        ),
          (this.__contextState.colorMaskRed = this.__state.colorMaskRed),
          (this.__contextState.colorMaskGreen = this.__state.colorMaskGreen),
          (this.__contextState.colorMaskBlue = this.__state.colorMaskBlue),
          (this.__contextState.colorMaskAlpha = this.__state.colorMaskAlpha);
    },
    __flushGLCulling: function () {
      if (this.__contextState.culling != this.__state.culling) {
        if (3 == this.__state.culling) this.__setGLCullFace(!1);
        else
          switch ((this.__setGLCullFace(!0), this.__state.culling)) {
            case 0:
              this.gl.cullFace(this.gl.BACK);
              break;
            case 1:
              this.gl.cullFace(this.gl.FRONT);
              break;
            case 2:
              this.gl.cullFace(this.gl.FRONT_AND_BACK);
              break;
            case 3:
              break;
            default:
              throw new v(new ld());
          }
        this.__contextState.culling = this.__state.culling;
      }
    },
    __flushGLDepth: function () {
      var a =
        this.__state.depthMask &&
        (null != this.__state.renderToTexture
          ? this.__state.renderToTextureDepthStencil
          : this.__state.backBufferEnableDepthAndStencil);
      this.__contextState.depthMask != a &&
        (this.gl.depthMask(a), (this.__contextState.depthMask = a));
      if (
        this.__contextState.depthCompareMode != this.__state.depthCompareMode
      ) {
        switch (this.__state.depthCompareMode) {
          case 0:
            this.gl.depthFunc(this.gl.ALWAYS);
            break;
          case 1:
            this.gl.depthFunc(this.gl.EQUAL);
            break;
          case 2:
            this.gl.depthFunc(this.gl.GREATER);
            break;
          case 3:
            this.gl.depthFunc(this.gl.GEQUAL);
            break;
          case 4:
            this.gl.depthFunc(this.gl.LESS);
            break;
          case 5:
            this.gl.depthFunc(this.gl.LEQUAL);
            break;
          case 6:
            this.gl.depthFunc(this.gl.NEVER);
            break;
          case 7:
            this.gl.depthFunc(this.gl.NOTEQUAL);
            break;
          default:
            throw new v(new ld());
        }
        this.__contextState.depthCompareMode = this.__state.depthCompareMode;
      }
    },
    __flushGLFramebuffer: function () {
      if (null != this.__state.renderToTexture) {
        if (
          this.__contextState.renderToTexture != this.__state.renderToTexture ||
          this.__contextState.renderToTextureSurfaceSelector !=
            this.__state.renderToTextureSurfaceSelector
        ) {
          var a = this.__state.renderToTexture.__getGLFramebuffer(
            this.__state.renderToTextureDepthStencil,
            this.__state.renderToTextureAntiAlias,
            this.__state.renderToTextureSurfaceSelector
          );
          this.__bindGLFramebuffer(a);
          this.__contextState.renderToTexture = this.__state.renderToTexture;
          this.__contextState.renderToTextureAntiAlias =
            this.__state.renderToTextureAntiAlias;
          this.__contextState.renderToTextureDepthStencil =
            this.__state.renderToTextureDepthStencil;
          this.__contextState.renderToTextureSurfaceSelector =
            this.__state.renderToTextureSurfaceSelector;
        }
        this.__setGLDepthTest(this.__state.renderToTextureDepthStencil);
        this.__setGLStencilTest(this.__state.renderToTextureDepthStencil);
        this.__setGLFrontFace(!0);
      } else {
        if (
          null == this.__stage &&
          0 == this.backBufferWidth &&
          0 == this.backBufferHeight
        )
          throw new v(new ud("Context3D backbuffer has not been configured"));
        if (
          null != this.__contextState.renderToTexture ||
          this.__contextState.__currentGLFramebuffer !=
            this.__state.__primaryGLFramebuffer ||
          this.__contextState.backBufferEnableDepthAndStencil !=
            this.__state.backBufferEnableDepthAndStencil
        )
          this.__bindGLFramebuffer(this.__state.__primaryGLFramebuffer),
            (this.__contextState.renderToTexture = null),
            (this.__contextState.backBufferEnableDepthAndStencil =
              this.__state.backBufferEnableDepthAndStencil);
        this.__setGLDepthTest(this.__state.backBufferEnableDepthAndStencil);
        this.__setGLStencilTest(this.__state.backBufferEnableDepthAndStencil);
        this.__setGLFrontFace(this.__stage.context3D != this);
      }
    },
    __flushGLProgram: function () {
      var a = this.__state.shader,
        b = this.__state.program;
      this.__contextState.shader != a &&
        (null != this.__contextState.shader &&
          this.__contextState.shader.__disable(),
        null != a && a.__enable(),
        (this.__contextState.shader = a));
      this.__contextState.program != b &&
        (null != this.__contextState.program &&
          this.__contextState.program.__disable(),
        null != b && b.__enable(),
        (this.__contextState.program = b));
      null != b &&
        0 == b.__format &&
        ((this.__positionScale[1] =
          this.__stage.context3D == this && null == this.__state.renderToTexture
            ? 1
            : -1),
        b.__setPositionScale(this.__positionScale));
    },
    __flushGLScissor: function () {
      if (this.__state.scissorEnabled) {
        this.__setGLScissorTest(!0);
        this.__contextState.scissorEnabled = !0;
        var a = this.__state.scissorRectangle.x | 0,
          b = this.__state.scissorRectangle.y | 0,
          c = this.__state.scissorRectangle.width | 0,
          d = this.__state.scissorRectangle.height | 0;
        null == this.__state.renderToTexture &&
          null == this.__stage3D &&
          (b =
            ((this.__stage.window.__height * this.__stage.window.__scale) | 0) -
            (this.__state.scissorRectangle.height | 0) -
            b);
        if (
          this.__contextState.scissorRectangle.x != a ||
          this.__contextState.scissorRectangle.y != b ||
          this.__contextState.scissorRectangle.width != c ||
          this.__contextState.scissorRectangle.height != d
        )
          this.gl.scissor(a, b, c, d),
            this.__contextState.scissorRectangle.setTo(a, b, c, d);
      } else
        this.__contextState.scissorEnabled != this.__state.scissorEnabled &&
          (this.__setGLScissorTest(!1),
          (this.__contextState.scissorEnabled = !1));
    },
    __flushGLStencil: function () {
      if (
        this.__contextState.stencilTriangleFace !=
          this.__state.stencilTriangleFace ||
        this.__contextState.stencilPass != this.__state.stencilPass ||
        this.__contextState.stencilDepthFail != this.__state.stencilDepthFail ||
        this.__contextState.stencilFail != this.__state.stencilFail
      )
        this.gl.stencilOpSeparate(
          this.__getGLTriangleFace(this.__state.stencilTriangleFace),
          this.__getGLStencilAction(this.__state.stencilFail),
          this.__getGLStencilAction(this.__state.stencilDepthFail),
          this.__getGLStencilAction(this.__state.stencilPass)
        ),
          (this.__contextState.stencilTriangleFace =
            this.__state.stencilTriangleFace),
          (this.__contextState.stencilPass = this.__state.stencilPass),
          (this.__contextState.stencilDepthFail =
            this.__state.stencilDepthFail),
          (this.__contextState.stencilFail = this.__state.stencilFail);
      this.__contextState.stencilWriteMask != this.__state.stencilWriteMask &&
        (this.gl.stencilMask(this.__state.stencilWriteMask),
        (this.__contextState.stencilWriteMask = this.__state.stencilWriteMask));
      if (
        this.__contextState.stencilCompareMode !=
          this.__state.stencilCompareMode ||
        this.__contextState.stencilReferenceValue !=
          this.__state.stencilReferenceValue ||
        this.__contextState.stencilReadMask != this.__state.stencilReadMask
      )
        this.gl.stencilFunc(
          this.__getGLCompareMode(this.__state.stencilCompareMode),
          this.__state.stencilReferenceValue,
          this.__state.stencilReadMask
        ),
          (this.__contextState.stencilCompareMode =
            this.__state.stencilCompareMode),
          (this.__contextState.stencilReferenceValue =
            this.__state.stencilReferenceValue),
          (this.__contextState.stencilReadMask = this.__state.stencilReadMask);
    },
    __flushGLTextures: function () {
      for (var a = 0, b, c, d = 0, e = this.__state.textures.length; d < e; ) {
        var f = d++;
        b = this.__state.textures[f];
        c = this.__state.samplerStates[f];
        null == c &&
          ((this.__state.samplerStates[f] = new Oh()),
          (c = this.__state.samplerStates[f]));
        this.gl.activeTexture(this.gl.TEXTURE0 + a);
        null != b
          ? (b.__textureTarget == this.gl.TEXTURE_2D
              ? this.__bindGLTexture2D(b.__getTexture())
              : this.__bindGLTextureCubeMap(b.__getTexture()),
            (this.__contextState.textures[f] = b),
            b.__setSamplerState(c))
          : this.__bindGLTexture2D(null);
        null != this.__state.program &&
          0 == this.__state.program.__format &&
          c.textureAlpha &&
          (this.gl.activeTexture(this.gl.TEXTURE0 + a + 4),
          null != b && null != b.__alphaTexture
            ? (b.__alphaTexture.__textureTarget == this.gl.TEXTURE_2D
                ? this.__bindGLTexture2D(b.__alphaTexture.__getTexture())
                : this.__bindGLTextureCubeMap(b.__alphaTexture.__getTexture()),
              b.__alphaTexture.__setSamplerState(c),
              this.gl.uniform1i(
                this.__state.program.__agalAlphaSamplerEnabled[a].location,
                1
              ))
            : (this.__bindGLTexture2D(null),
              this.gl.uniform1i(
                this.__state.program.__agalAlphaSamplerEnabled[a].location,
                0
              )));
        ++a;
      }
    },
    __flushGLViewport: function () {
      if (null == this.__state.renderToTexture)
        if (this.__stage.context3D == this) {
          var a = null == this.__stage3D ? 0 : this.__stage3D.get_x() | 0,
            b =
              (this.__stage.window.__height * this.__stage.window.__scale -
                this.backBufferHeight -
                (null == this.__stage3D ? 0 : this.__stage3D.get_y())) |
              0;
          this.gl.viewport(a, b, this.backBufferWidth, this.backBufferHeight);
        } else
          this.gl.viewport(0, 0, this.backBufferWidth, this.backBufferHeight);
      else
        (b = a = 0),
          u.__instanceof(this.__state.renderToTexture, Oi)
            ? ((b = this.__state.renderToTexture),
              (a = b.__width),
              (b = b.__height))
            : u.__instanceof(this.__state.renderToTexture, $k)
            ? ((b = this.__state.renderToTexture),
              (a = b.__width),
              (b = b.__height))
            : u.__instanceof(this.__state.renderToTexture, Mj) &&
              ((b = this.__state.renderToTexture), (b = a = b.__size)),
          this.gl.viewport(0, 0, a, b);
    },
    __getGLBlend: function (a) {
      switch (a) {
        case 0:
          return this.gl.DST_ALPHA;
        case 1:
          return this.gl.DST_COLOR;
        case 2:
          return this.gl.ONE;
        case 3:
          return this.gl.ONE_MINUS_DST_ALPHA;
        case 4:
          return this.gl.ONE_MINUS_DST_COLOR;
        case 5:
          return this.gl.ONE_MINUS_SRC_ALPHA;
        case 6:
          return this.gl.ONE_MINUS_SRC_COLOR;
        case 7:
          return this.gl.SRC_ALPHA;
        case 8:
          return this.gl.SRC_COLOR;
        case 9:
          return this.gl.ZERO;
        default:
          throw new v(new ld());
      }
    },
    __getGLCompareMode: function (a) {
      switch (a) {
        case 0:
          return this.gl.ALWAYS;
        case 1:
          return this.gl.EQUAL;
        case 2:
          return this.gl.GREATER;
        case 3:
          return this.gl.GEQUAL;
        case 4:
          return this.gl.LESS;
        case 5:
          return this.gl.LEQUAL;
        case 6:
          return this.gl.NEVER;
        case 7:
          return this.gl.NOTEQUAL;
        default:
          return this.gl.EQUAL;
      }
    },
    __getGLStencilAction: function (a) {
      switch (a) {
        case 0:
          return this.gl.DECR;
        case 1:
          return this.gl.DECR_WRAP;
        case 2:
          return this.gl.INCR;
        case 3:
          return this.gl.INCR_WRAP;
        case 4:
          return this.gl.INVERT;
        case 5:
          return this.gl.KEEP;
        case 6:
          return this.gl.REPLACE;
        case 7:
          return this.gl.ZERO;
        default:
          return this.gl.KEEP;
      }
    },
    __getGLTriangleFace: function (a) {
      switch (a) {
        case 0:
          return this.gl.BACK;
        case 1:
          return this.gl.FRONT;
        case 2:
          return this.gl.FRONT_AND_BACK;
        case 3:
          return this.gl.NONE;
        default:
          return this.gl.FRONT_AND_BACK;
      }
    },
    __renderStage3D: function (a) {
      var b = a.context3D;
      if (
        null != b &&
        b != this &&
        null != b.__frontBufferTexture &&
        a.visible &&
        0 < this.backBufferHeight &&
        0 < this.backBufferWidth
      ) {
        if (null == this.__renderStage3DProgram) {
          var c = new L();
          c.assemble(Oj.toString(1), "m44 op, va0, vc0\nmov v0, va1");
          var d = new L();
          d.assemble(
            Oj.toString(0),
            "tex ft1, v0, fs0 <2d,nearest,nomip>\nmov oc, ft1"
          );
          this.__renderStage3DProgram = this.createProgram();
          this.__renderStage3DProgram.upload(c.agalcode, d.agalcode);
        }
        this.setProgram(this.__renderStage3DProgram);
        this.setBlendFactors(2, 9);
        this.setColorMask(!0, !0, !0, !0);
        this.setCulling(3);
        this.setDepthTest(!1, 0);
        this.setStencilActions();
        this.setStencilReferenceValue(0, 0, 0);
        this.setScissorRectangle(null);
        this.setTextureAt(0, b.__frontBufferTexture);
        this.setVertexBufferAt(0, a.__vertexBuffer, 0, 3);
        this.setVertexBufferAt(1, a.__vertexBuffer, 3, 2);
        this.setProgramConstantsFromMatrix(1, 0, a.__renderTransform, !0);
        this.drawTriangles(a.__indexBuffer);
        this.__present = !0;
      }
    },
    __setGLBlend: function (a) {
      this.__contextState.__enableGLBlend != a &&
        (a ? this.gl.enable(this.gl.BLEND) : this.gl.disable(this.gl.BLEND),
        (this.__contextState.__enableGLBlend = a));
    },
    __setGLBlendEquation: function (a) {
      this.__contextState.__glBlendEquation != a &&
        (this.gl.blendEquation(a), (this.__contextState.__glBlendEquation = a));
    },
    __setGLCullFace: function (a) {
      this.__contextState.__enableGLCullFace != a &&
        (a
          ? this.gl.enable(this.gl.CULL_FACE)
          : this.gl.disable(this.gl.CULL_FACE),
        (this.__contextState.__enableGLCullFace = a));
    },
    __setGLDepthTest: function (a) {
      this.__contextState.__enableGLDepthTest != a &&
        (a
          ? this.gl.enable(this.gl.DEPTH_TEST)
          : this.gl.disable(this.gl.DEPTH_TEST),
        (this.__contextState.__enableGLDepthTest = a));
    },
    __setGLFrontFace: function (a) {
      this.__contextState.__frontFaceGLCCW != a &&
        (this.gl.frontFace(a ? this.gl.CCW : this.gl.CW),
        (this.__contextState.__frontFaceGLCCW = a));
    },
    __setGLScissorTest: function (a) {
      this.__contextState.__enableGLScissorTest != a &&
        (a
          ? this.gl.enable(this.gl.SCISSOR_TEST)
          : this.gl.disable(this.gl.SCISSOR_TEST),
        (this.__contextState.__enableGLScissorTest = a));
    },
    __setGLStencilTest: function (a) {
      this.__contextState.__enableGLStencilTest != a &&
        (a
          ? this.gl.enable(this.gl.STENCIL_TEST)
          : this.gl.disable(this.gl.STENCIL_TEST),
        (this.__contextState.__enableGLStencilTest = a));
    },
    get_enableErrorChecking: function () {
      return this.__enableErrorChecking;
    },
    set_enableErrorChecking: function (a) {
      return (this.__enableErrorChecking = a);
    },
    __class__: nc,
    __properties__: {
      set_enableErrorChecking: "set_enableErrorChecking",
      get_enableErrorChecking: "get_enableErrorChecking",
    },
  });
  var ig = {};
  p["openfl.display3D._Context3DBlendFactor.Context3DBlendFactor_Impl_"] = ig;
  ig.__name__ = [
    "openfl",
    "display3D",
    "_Context3DBlendFactor",
    "Context3DBlendFactor_Impl_",
  ];
  ig.fromString = function (a) {
    switch (a) {
      case "destinationAlpha":
        return 0;
      case "destinationColor":
        return 1;
      case "one":
        return 2;
      case "oneMinusDestinationAlpha":
        return 3;
      case "oneMinusDestinationColor":
        return 4;
      case "oneMinusSourceAlpha":
        return 5;
      case "oneMinusSourceColor":
        return 6;
      case "sourceAlpha":
        return 7;
      case "sourceColor":
        return 8;
      case "zero":
        return 9;
      default:
        return null;
    }
  };
  ig.toString = function (a) {
    switch (a) {
      case 0:
        return "destinationAlpha";
      case 1:
        return "destinationColor";
      case 2:
        return "one";
      case 3:
        return "oneMinusDestinationAlpha";
      case 4:
        return "oneMinusDestinationColor";
      case 5:
        return "oneMinusSourceAlpha";
      case 6:
        return "oneMinusSourceColor";
      case 7:
        return "sourceAlpha";
      case 8:
        return "sourceColor";
      case 9:
        return "zero";
      default:
        return null;
    }
  };
  var Nj = {};
  p["openfl.display3D._Context3DBufferUsage.Context3DBufferUsage_Impl_"] = Nj;
  Nj.__name__ = [
    "openfl",
    "display3D",
    "_Context3DBufferUsage",
    "Context3DBufferUsage_Impl_",
  ];
  Nj.fromString = function (a) {
    switch (a) {
      case "dynamicDraw":
        return 0;
      case "staticDraw":
        return 1;
      default:
        return null;
    }
  };
  Nj.toString = function (a) {
    switch (a) {
      case 0:
        return "dynamicDraw";
      case 1:
        return "staticDraw";
      default:
        return null;
    }
  };
  var ih = {};
  p["openfl.display3D._Context3DCompareMode.Context3DCompareMode_Impl_"] = ih;
  ih.__name__ = [
    "openfl",
    "display3D",
    "_Context3DCompareMode",
    "Context3DCompareMode_Impl_",
  ];
  ih.fromString = function (a) {
    switch (a) {
      case "always":
        return 0;
      case "equal":
        return 1;
      case "greater":
        return 2;
      case "greaterEqual":
        return 3;
      case "less":
        return 4;
      case "lessEqual":
        return 5;
      case "never":
        return 6;
      case "notEqual":
        return 7;
      default:
        return null;
    }
  };
  ih.toString = function (a) {
    switch (a) {
      case 0:
        return "always";
      case 1:
        return "equal";
      case 2:
        return "greater";
      case 3:
        return "greaterEqual";
      case 4:
        return "less";
      case 5:
        return "lessEqual";
      case 6:
        return "never";
      case 7:
        return "notEqual";
      default:
        return null;
    }
  };
  var al = {};
  p["openfl.display3D._Context3DMipFilter.Context3DMipFilter_Impl_"] = al;
  al.__name__ = [
    "openfl",
    "display3D",
    "_Context3DMipFilter",
    "Context3DMipFilter_Impl_",
  ];
  al.fromString = function (a) {
    switch (a) {
      case "miplinear":
        return 0;
      case "mipnearest":
        return 1;
      case "mipnone":
        return 2;
      default:
        return null;
    }
  };
  al.toString = function (a) {
    switch (a) {
      case 0:
        return "miplinear";
      case 1:
        return "mipnearest";
      case 2:
        return "mipnone";
      default:
        return null;
    }
  };
  var di = {};
  p["openfl.display3D._Context3DProfile.Context3DProfile_Impl_"] = di;
  di.__name__ = [
    "openfl",
    "display3D",
    "_Context3DProfile",
    "Context3DProfile_Impl_",
  ];
  di.fromString = function (a) {
    switch (a) {
      case "baseline":
        return 0;
      case "baselineConstrained":
        return 1;
      case "baselineExtended":
        return 2;
      case "standard":
        return 3;
      case "standardConstrained":
        return 4;
      case "standardExtended":
        return 5;
      default:
        return null;
    }
  };
  di.toString = function (a) {
    switch (a) {
      case 0:
        return "baseline";
      case 1:
        return "baselineConstrained";
      case 2:
        return "baselineExtended";
      case 3:
        return "standard";
      case 4:
        return "standardConstrained";
      case 5:
        return "standardExtended";
      default:
        return null;
    }
  };
  var ko = {};
  p["openfl.display3D._Context3DProgramFormat.Context3DProgramFormat_Impl_"] =
    ko;
  ko.__name__ = [
    "openfl",
    "display3D",
    "_Context3DProgramFormat",
    "Context3DProgramFormat_Impl_",
  ];
  ko.fromString = function (a) {
    switch (a) {
      case "agal":
        return 0;
      case "glsl":
        return 1;
      default:
        return null;
    }
  };
  ko.toString = function (a) {
    switch (a) {
      case 0:
        return "agal";
      case 1:
        return "glsl";
      default:
        return null;
    }
  };
  var Oj = {};
  p["openfl.display3D._Context3DProgramType.Context3DProgramType_Impl_"] = Oj;
  Oj.__name__ = [
    "openfl",
    "display3D",
    "_Context3DProgramType",
    "Context3DProgramType_Impl_",
  ];
  Oj.fromString = function (a) {
    switch (a) {
      case "fragment":
        return 0;
      case "vertex":
        return 1;
      default:
        return null;
    }
  };
  Oj.toString = function (a) {
    switch (a) {
      case 0:
        return "fragment";
      case 1:
        return "vertex";
      default:
        return null;
    }
  };
  var lo = {};
  p["openfl.display3D._Context3DRenderMode.Context3DRenderMode_Impl_"] = lo;
  lo.__name__ = [
    "openfl",
    "display3D",
    "_Context3DRenderMode",
    "Context3DRenderMode_Impl_",
  ];
  lo.fromString = function (a) {
    switch (a) {
      case "auto":
        return 0;
      case "software":
        return 1;
      default:
        return null;
    }
  };
  lo.toString = function (a) {
    switch (a) {
      case 0:
        return "auto";
      case 1:
        return "software";
      default:
        return null;
    }
  };
  var jh = {};
  p["openfl.display3D._Context3DStencilAction.Context3DStencilAction_Impl_"] =
    jh;
  jh.__name__ = [
    "openfl",
    "display3D",
    "_Context3DStencilAction",
    "Context3DStencilAction_Impl_",
  ];
  jh.fromString = function (a) {
    switch (a) {
      case "decrementSaturate":
        return 0;
      case "decrementWrap":
        return 1;
      case "incrementSaturate":
        return 2;
      case "incrementWrap":
        return 3;
      case "invert":
        return 4;
      case "keep":
        return 5;
      case "set":
        return 6;
      case "zero":
        return 7;
      default:
        return null;
    }
  };
  jh.toString = function (a) {
    switch (a) {
      case 0:
        return "decrementSaturate";
      case 1:
        return "decrementWrap";
      case 2:
        return "incrementSaturate";
      case 3:
        return "incrementWrap";
      case 4:
        return "invert";
      case 5:
        return "keep";
      case 6:
        return "set";
      case 7:
        return "zero";
      default:
        return null;
    }
  };
  var ei = {};
  p["openfl.display3D._Context3DTextureFilter.Context3DTextureFilter_Impl_"] =
    ei;
  ei.__name__ = [
    "openfl",
    "display3D",
    "_Context3DTextureFilter",
    "Context3DTextureFilter_Impl_",
  ];
  ei.fromString = function (a) {
    switch (a) {
      case "anisotropic16x":
        return 0;
      case "anisotropic2x":
        return 1;
      case "anisotropic4x":
        return 2;
      case "anisotropic8x":
        return 3;
      case "linear":
        return 4;
      case "nearest":
        return 5;
      default:
        return null;
    }
  };
  ei.toString = function (a) {
    switch (a) {
      case 0:
        return "anisotropic16x";
      case 1:
        return "anisotropic2x";
      case 2:
        return "anisotropic4x";
      case 3:
        return "anisotropic8x";
      case 4:
        return "linear";
      case 5:
        return "nearest";
      default:
        return null;
    }
  };
  var xh = {};
  p["openfl.display3D._Context3DTextureFormat.Context3DTextureFormat_Impl_"] =
    xh;
  xh.__name__ = [
    "openfl",
    "display3D",
    "_Context3DTextureFormat",
    "Context3DTextureFormat_Impl_",
  ];
  xh.fromString = function (a) {
    switch (a) {
      case "bgrPacked565":
        return 0;
      case "bgra":
        return 1;
      case "bgraPacked4444":
        return 2;
      case "compressed":
        return 3;
      case "compressedAlpha":
        return 4;
      case "rgbaHalfFloat":
        return 5;
      default:
        return null;
    }
  };
  xh.toString = function (a) {
    switch (a) {
      case 0:
        return "bgrPacked565";
      case 1:
        return "bgra";
      case 2:
        return "bgraPacked4444";
      case 3:
        return "compressed";
      case 4:
        return "compressedAlpha";
      case 5:
        return "rgbaHalfFloat";
      default:
        return null;
    }
  };
  var Pj = {};
  p["openfl.display3D._Context3DTriangleFace.Context3DTriangleFace_Impl_"] = Pj;
  Pj.__name__ = [
    "openfl",
    "display3D",
    "_Context3DTriangleFace",
    "Context3DTriangleFace_Impl_",
  ];
  Pj.fromString = function (a) {
    switch (a) {
      case "back":
        return 0;
      case "front":
        return 1;
      case "frontAndBack":
        return 2;
      case "none":
        return 3;
      default:
        return null;
    }
  };
  Pj.toString = function (a) {
    switch (a) {
      case 0:
        return "back";
      case 1:
        return "front";
      case 2:
        return "frontAndBack";
      case 3:
        return "none";
      default:
        return null;
    }
  };
  var Pi = {};
  p[
    "openfl.display3D._Context3DVertexBufferFormat.Context3DVertexBufferFormat_Impl_"
  ] = Pi;
  Pi.__name__ = [
    "openfl",
    "display3D",
    "_Context3DVertexBufferFormat",
    "Context3DVertexBufferFormat_Impl_",
  ];
  Pi.fromString = function (a) {
    switch (a) {
      case "bytes4":
        return 0;
      case "float1":
        return 1;
      case "float2":
        return 2;
      case "float3":
        return 3;
      case "float4":
        return 4;
      default:
        return null;
    }
  };
  Pi.toString = function (a) {
    switch (a) {
      case 0:
        return "bytes4";
      case 1:
        return "float1";
      case 2:
        return "float2";
      case 3:
        return "float3";
      case 4:
        return "float4";
      default:
        return null;
    }
  };
  var Qj = {};
  p["openfl.display3D._Context3DWrapMode.Context3DWrapMode_Impl_"] = Qj;
  Qj.__name__ = [
    "openfl",
    "display3D",
    "_Context3DWrapMode",
    "Context3DWrapMode_Impl_",
  ];
  Qj.fromString = function (a) {
    switch (a) {
      case "clamp":
        return 0;
      case "clamp_u_repeat_v":
        return 1;
      case "repeat":
        return 2;
      case "repeat_u_clamp_v":
        return 3;
      default:
        return null;
    }
  };
  Qj.toString = function (a) {
    switch (a) {
      case 0:
        return "clamp";
      case 1:
        return "clamp_u_repeat_v";
      case 2:
        return "repeat";
      case 3:
        return "repeat_u_clamp_v";
      default:
        return null;
    }
  };
  var Mq = function (a, b, c) {
    this.__context = a;
    this.__numIndices = b;
    a = this.__context.gl;
    this.__elementType = a.UNSIGNED_SHORT;
    this.__id = a.createBuffer();
    this.__usage = 0 == c ? a.DYNAMIC_DRAW : a.STATIC_DRAW;
  };
  p["openfl.display3D.IndexBuffer3D"] = Mq;
  Mq.__name__ = ["openfl", "display3D", "IndexBuffer3D"];
  Mq.prototype = {
    __context: null,
    __elementType: null,
    __id: null,
    __memoryUsage: null,
    __numIndices: null,
    __tempUInt16Array: null,
    __usage: null,
    dispose: function () {
      this.__context.gl.deleteBuffer(this.__id);
    },
    uploadFromByteArray: function (a, b, c, d) {
      b += 2 * c;
      a = Na.toArrayBuffer(a);
      d =
        null != a
          ? null == d
            ? new Uint16Array(a, b)
            : new Uint16Array(a, b, d)
          : null;
      this.uploadFromTypedArray(d);
    },
    uploadFromTypedArray: function (a, b) {
      null != a &&
        ((b = this.__context.gl),
        this.__context.__bindGLElementArrayBuffer(this.__id),
        yb.bufferData(b, b.ELEMENT_ARRAY_BUFFER, a, this.__usage));
    },
    uploadFromVector: function (a, b, c) {
      if (null != a) {
        var d = b + c,
          e = this.__tempUInt16Array;
        if (null == this.__tempUInt16Array || this.__tempUInt16Array.length < c)
          (this.__tempUInt16Array = null != c ? new Uint16Array(c) : null),
            null != e && this.__tempUInt16Array.set(e);
        for (c = b; c < d; )
          (e = c++), (this.__tempUInt16Array[e - b] = a.get(e));
        this.uploadFromTypedArray(this.__tempUInt16Array);
      }
    },
    __class__: Mq,
  };
  var Nq = function (a, b) {
    this.__context = a;
    this.__format = b;
    0 == this.__format
      ? ((this.__agalSamplerUsageMask = 0),
        (this.__agalUniforms = new yf()),
        (this.__agalSamplerUniforms = new yf()),
        (this.__agalAlphaSamplerUniforms = new yf()),
        (this.__agalAlphaSamplerEnabled = []))
      : ((this.__glslAttribNames = []),
        (this.__glslAttribTypes = []),
        (this.__glslSamplerNames = []),
        (this.__glslUniformNames = []),
        (this.__glslUniformTypes = []));
    this.__samplerStates = [];
  };
  p["openfl.display3D.Program3D"] = Nq;
  Nq.__name__ = ["openfl", "display3D", "Program3D"];
  Nq.prototype = {
    __agalAlphaSamplerEnabled: null,
    __agalAlphaSamplerUniforms: null,
    __agalFragmentUniformMap: null,
    __agalPositionScale: null,
    __agalSamplerUniforms: null,
    __agalSamplerUsageMask: null,
    __agalUniforms: null,
    __agalVertexUniformMap: null,
    __context: null,
    __format: null,
    __glFragmentShader: null,
    __glFragmentSource: null,
    __glProgram: null,
    __glslAttribNames: null,
    __glslAttribTypes: null,
    __glslSamplerNames: null,
    __glslUniformNames: null,
    __glslUniformTypes: null,
    __glVertexShader: null,
    __glVertexSource: null,
    __samplerStates: null,
    dispose: function () {
      this.__deleteShaders();
    },
    getAttributeIndex: function (a) {
      if (0 == this.__format)
        return ba.startsWith(a, "va") ? P.parseInt(a.substring(2)) : -1;
      for (var b = 0, c = this.__glslAttribNames.length; b < c; ) {
        var d = b++;
        if (this.__glslAttribNames[d] == a) return d;
      }
      return -1;
    },
    getConstantIndex: function (a) {
      if (0 == this.__format)
        return ba.startsWith(a, "vc")
          ? P.parseInt(a.substring(2))
          : ba.startsWith(a, "fc")
          ? P.parseInt(a.substring(2))
          : -1;
      for (var b = 0, c = this.__glslUniformNames.length; b < c; ) {
        var d = b++;
        if (this.__glslUniformNames[d] == a) return d;
      }
      return -1;
    },
    upload: function (a, b) {
      if (0 == this.__format) {
        var c = [];
        a = Te.convertToGLSL(a, null);
        b = Te.convertToGLSL(b, c);
        5 == mb.level &&
          (mb.info(a, {
            fileName: "Program3D.hx",
            lineNumber: 178,
            className: "openfl.display3D.Program3D",
            methodName: "upload",
          }),
          mb.info(b, {
            fileName: "Program3D.hx",
            lineNumber: 179,
            className: "openfl.display3D.Program3D",
            methodName: "upload",
          }));
        this.__deleteShaders();
        this.__uploadFromGLSL(a, b);
        this.__buildAGALUniformList();
        b = 0;
        for (a = c.length; b < a; ) {
          var d = b++;
          this.__samplerStates[d] = c[d];
        }
      }
    },
    uploadSources: function (a, b) {
      if (1 == this.__format) {
        var c =
            "#ifdef GL_ES\n\t\t\t#ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\t\tprecision highp float;\n\t\t\t#else\n\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t#endif\n\t\t\t" +
            a,
          d =
            "#ifdef GL_ES\n\t\t\t#ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\t\tprecision highp float;\n\t\t\t#else\n\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t#endif\n\t\t\t" +
            b;
        if (c != this.__glVertexSource || d != this.__glFragmentSource) {
          this.__processGLSLData(a, "attribute");
          this.__processGLSLData(a, "uniform");
          this.__processGLSLData(b, "uniform");
          this.__deleteShaders();
          this.__uploadFromGLSL(c, d);
          var e = this.__glslSamplerNames,
            f = this.__glslAttribNames,
            g = this.__glslAttribTypes;
          a = this.__glslUniformNames;
          b = this.__glslUniformTypes;
          this.__glslSamplerNames = [];
          this.__glslAttribNames = [];
          this.__glslAttribTypes = [];
          this.__glslUniformNames = [];
          c = this.__context.gl;
          for (var h = 0; h < e.length; ) {
            var n = e[h];
            ++h;
            d = c.getUniformLocation(this.__glProgram, n);
            this.__glslSamplerNames[d] = n;
          }
          e = 0;
          for (h = f.length; e < h; )
            (n = e++),
              (d = c.getAttribLocation(this.__glProgram, f[n])),
              (this.__glslAttribNames[d] = f[n]),
              (this.__glslAttribTypes[d] = g[n]);
          f = 0;
          for (g = a.length; f < g; )
            (e = f++),
              (d = c.getUniformLocation(this.__glProgram, a[e])),
              (this.__glslAttribNames[d] = a[e]),
              (this.__glslAttribTypes[d] = b[e]);
        }
      }
    },
    __buildAGALUniformList: function () {
      if (1 != this.__format) {
        var a = this.__context.gl;
        this.__agalUniforms.clear();
        this.__agalSamplerUniforms.clear();
        this.__agalAlphaSamplerUniforms.clear();
        this.__agalAlphaSamplerEnabled = [];
        this.__agalSamplerUsageMask = 0;
        var b = a.getProgramParameter(this.__glProgram, a.ACTIVE_UNIFORMS);
        for (var c = new yf(), d = new yf(), e = 0; e < b; ) {
          var f = e++;
          f = a.getActiveUniform(this.__glProgram, f);
          var g = f.name,
            h = f.size,
            n = f.type;
          f = new Pq(this.__context);
          f.name = g;
          f.size = h;
          f.type = n;
          f.location = a.getUniformLocation(this.__glProgram, f.name);
          g = f.name.indexOf("[");
          0 <= g && (f.name = f.name.substring(0, g));
          switch (f.type) {
            case 35674:
              f.regCount = 2;
              break;
            case 35675:
              f.regCount = 3;
              break;
            case 35676:
              f.regCount = 4;
              break;
            default:
              f.regCount = 1;
          }
          f.regCount *= f.size;
          this.__agalUniforms.add(f);
          if ("vcPositionScale" == f.name) this.__agalPositionScale = f;
          else if (ba.startsWith(f.name, "vc"))
            (f.regIndex = P.parseInt(f.name.substring(2))),
              (f.regData = this.__context.__vertexConstants),
              c.add(f);
          else if (ba.startsWith(f.name, "fc"))
            (f.regIndex = P.parseInt(f.name.substring(2))),
              (f.regData = this.__context.__fragmentConstants),
              d.add(f);
          else if (
            ba.startsWith(f.name, "sampler") &&
            -1 == f.name.indexOf("alpha")
          )
            for (
              f.regIndex = P.parseInt(f.name.substring(7)),
                this.__agalSamplerUniforms.add(f),
                g = 0,
                h = f.regCount;
              g < h;

            )
              (n = g++), (this.__agalSamplerUsageMask |= 1 << (f.regIndex + n));
          else
            ba.startsWith(f.name, "sampler") && ba.endsWith(f.name, "_alpha")
              ? ((g = f.name.indexOf("_") - 7),
                (f.regIndex = P.parseInt(f.name.substring(7, 7 + g)) + 4),
                this.__agalAlphaSamplerUniforms.add(f))
              : ba.startsWith(f.name, "sampler") &&
                ba.endsWith(f.name, "_alphaEnabled") &&
                ((f.regIndex = P.parseInt(f.name.substring(7))),
                (this.__agalAlphaSamplerEnabled[f.regIndex] = f));
        }
        this.__agalVertexUniformMap = new mo(zh.array(c));
        this.__agalFragmentUniformMap = new mo(zh.array(d));
      }
    },
    __deleteShaders: function () {
      var a = this.__context.gl;
      null != this.__glProgram && (this.__glProgram = null);
      null != this.__glVertexShader &&
        (a.deleteShader(this.__glVertexShader), (this.__glVertexShader = null));
      null != this.__glFragmentShader &&
        (a.deleteShader(this.__glFragmentShader),
        (this.__glFragmentShader = null));
    },
    __disable: function () {},
    __enable: function () {
      var a = this.__context.gl;
      a.useProgram(this.__glProgram);
      if (0 == this.__format) {
        this.__agalVertexUniformMap.markAllDirty();
        this.__agalFragmentUniformMap.markAllDirty();
        for (var b = this.__agalSamplerUniforms.h; null != b; ) {
          var c = b.item;
          b = b.next;
          if (1 == c.regCount) a.uniform1i(c.location, c.regIndex);
          else throw new v(new ld("!!! TODO: uniform location on webgl"));
        }
        for (b = this.__agalAlphaSamplerUniforms.h; null != b; )
          if (((c = b.item), (b = b.next), 1 == c.regCount))
            a.uniform1i(c.location, c.regIndex);
          else throw new v(new ld("!!! TODO: uniform location on webgl"));
      }
    },
    __flush: function () {
      0 == this.__format &&
        (this.__agalVertexUniformMap.flush(),
        this.__agalFragmentUniformMap.flush());
    },
    __getSamplerState: function (a) {
      return this.__samplerStates[a];
    },
    __markDirty: function (a, b, c) {
      1 != this.__format &&
        (a
          ? this.__agalVertexUniformMap.markDirty(b, c)
          : this.__agalFragmentUniformMap.markDirty(b, c));
    },
    __processGLSLData: function (a, b) {
      var c = 0,
        d;
      for (
        d =
          "uniform" == b
            ? new Ib("uniform ([A-Za-z0-9]+) ([A-Za-z0-9_]+)", "")
            : new Ib("attribute ([A-Za-z0-9]+) ([A-Za-z0-9_]+)", "");
        d.matchSub(a, c);

      ) {
        var e = d.matched(1);
        var f = d.matched(2);
        if (!ba.startsWith(f, "gl_")) {
          if (ba.startsWith(e, "sampler")) this.__glslSamplerNames.push(f);
          else {
            switch (e) {
              case "bool":
                c = 0;
                break;
              case "bvec2":
                c = 1;
                break;
              case "bvec3":
                c = 2;
                break;
              case "bvec4":
                c = 3;
                break;
              case "dvec2":
              case "vec2":
                c = 5;
                break;
              case "dvec3":
              case "vec3":
                c = 6;
                break;
              case "double":
              case "float":
                c = 4;
                break;
              case "ivec3":
              case "uvec3":
                c = 10;
                break;
              case "ivec4":
              case "uvec4":
                c = 11;
                break;
              case "mat2":
              case "mat2x2":
                c = 12;
                break;
              case "mat2x3":
                c = 13;
                break;
              case "mat2x4":
                c = 14;
                break;
              case "mat3x2":
                c = 15;
                break;
              case "mat3":
              case "mat3x3":
                c = 16;
                break;
              case "mat3x4":
                c = 17;
                break;
              case "mat4":
              case "mat4x4":
                c = 20;
                break;
              case "mat4x2":
                c = 18;
                break;
              case "mat4x3":
                c = 19;
                break;
              case "int":
              case "uint":
                c = 8;
                break;
              case "ivec2":
              case "uvec2":
                c = 9;
                break;
              case "dvec4":
              case "vec4":
                c = 7;
                break;
              default:
                c = null;
            }
            "uniform" == b
              ? (this.__glslUniformNames.push(f),
                this.__glslUniformTypes.push(c))
              : (this.__glslAttribNames.push(f),
                this.__glslAttribTypes.push(c));
          }
          f = d.matchedPos();
          c = f.pos + f.len;
        }
      }
    },
    __setPositionScale: function (a) {
      1 != this.__format &&
        null != this.__agalPositionScale &&
        this.__context.gl.uniform4fv(this.__agalPositionScale.location, a);
    },
    __setSamplerState: function (a, b) {
      this.__samplerStates[a] = b;
    },
    __uploadFromGLSL: function (a, b) {
      var c = this.__context.gl;
      this.__glVertexSource = a;
      this.__glFragmentSource = b;
      this.__glVertexShader = c.createShader(c.VERTEX_SHADER);
      c.shaderSource(this.__glVertexShader, a);
      c.compileShader(this.__glVertexShader);
      if (0 == c.getShaderParameter(this.__glVertexShader, c.COMPILE_STATUS)) {
        var d =
          "Error compiling vertex shader\n" +
          c.getShaderInfoLog(this.__glVertexShader);
        mb.error(d + ("\n" + a), {
          fileName: "Program3D.hx",
          lineNumber: 696,
          className: "openfl.display3D.Program3D",
          methodName: "__uploadFromGLSL",
        });
      }
      this.__glFragmentShader = c.createShader(c.FRAGMENT_SHADER);
      c.shaderSource(this.__glFragmentShader, b);
      c.compileShader(this.__glFragmentShader);
      0 == c.getShaderParameter(this.__glFragmentShader, c.COMPILE_STATUS) &&
        ((d =
          "Error compiling fragment shader\n" +
          c.getShaderInfoLog(this.__glFragmentShader)),
        mb.error(d + ("\n" + b), {
          fileName: "Program3D.hx",
          lineNumber: 709,
          className: "openfl.display3D.Program3D",
          methodName: "__uploadFromGLSL",
        }));
      this.__glProgram = c.createProgram();
      if (0 == this.__format)
        for (b = 0; 16 > b; ) {
          d = b++;
          var e = "va" + d;
          -1 != a.indexOf(" " + e) &&
            c.bindAttribLocation(this.__glProgram, d, e);
        }
      else
        for (a = 0, b = this.__glslAttribNames; a < b.length; )
          if (
            ((d = b[a]),
            ++a,
            -1 < d.indexOf("Position") && ba.startsWith(d, "openfl_"))
          ) {
            c.bindAttribLocation(this.__glProgram, 0, d);
            break;
          }
      c.attachShader(this.__glProgram, this.__glVertexShader);
      c.attachShader(this.__glProgram, this.__glFragmentShader);
      c.linkProgram(this.__glProgram);
      0 == c.getProgramParameter(this.__glProgram, c.LINK_STATUS) &&
        ((c =
          "Unable to initialize the shader program\n" +
          c.getProgramInfoLog(this.__glProgram)),
        mb.error(c, {
          fileName: "Program3D.hx",
          lineNumber: 755,
          className: "openfl.display3D.Program3D",
          methodName: "__uploadFromGLSL",
        }));
    },
    __class__: Nq,
  };
  var Pq = function (a) {
    this.context = a;
    this.isDirty = !0;
    this.regDataPointer = new eg(null, 0);
  };
  p["openfl.display3D.Uniform"] = Pq;
  Pq.__name__ = ["openfl", "display3D", "Uniform"];
  Pq.prototype = {
    name: null,
    location: null,
    type: null,
    size: null,
    regData: null,
    regIndex: null,
    regCount: null,
    isDirty: null,
    context: null,
    regDataPointer: null,
    flush: function () {
      var a = this.context.gl,
        b = 4 * this.regIndex;
      switch (this.type) {
        case 35664:
          Nd.uniform2fv(
            a,
            this.location,
            this.regData.subarray(b, b + 2 * this.regCount)
          );
          break;
        case 35665:
          var c = this.location;
          b = this.regData.subarray(b, b + 3 * this.regCount);
          a.uniform3fv(c, b);
          break;
        case 35666:
          c = this.location;
          b = this.regData.subarray(b, b + 4 * this.regCount);
          a.uniform4fv(c, b);
          break;
        case 35674:
          yb.uniformMatrix2fv(
            a,
            this.location,
            !1,
            this.regData.subarray(b, b + 4 * this.size)
          );
          break;
        case 35675:
          yb.uniformMatrix3fv(
            a,
            this.location,
            !1,
            this.regData.subarray(b, b + 9 * this.size)
          );
          break;
        case 35676:
          yb.uniformMatrix4fv(
            a,
            this.location,
            !1,
            this.regData.subarray(b, b + 16 * this.size)
          );
          break;
        default:
          (c = this.location),
            (b = this.regData.subarray(b, b + 4 * this.regCount)),
            a.uniform4fv(c, b);
      }
    },
    __getUniformRegisters: function (a, b) {
      return this.regData.subarray(a, a + b);
    },
    __class__: Pq,
  };
  var mo = function (a) {
    this.__uniforms = a;
    this.__uniforms.sort(function (a, b) {
      return V.compare(a.regIndex, b.regIndex);
    });
    for (var b = (a = 0), c = this.__uniforms; b < c.length; ) {
      var d = c[b];
      ++b;
      d.regIndex + d.regCount > a && (a = d.regIndex + d.regCount);
    }
    this.__registerLookup = Oa.toObjectVector(null, a);
    a = 0;
    for (b = this.__uniforms; a < b.length; ) {
      c = b[a];
      ++a;
      d = 0;
      for (var e = c.regCount; d < e; ) {
        var f = d++;
        this.__registerLookup.set(c.regIndex + f, c);
      }
    }
    this.__anyDirty = this.__allDirty = !0;
  };
  p["openfl.display3D.UniformMap"] = mo;
  mo.__name__ = ["openfl", "display3D", "UniformMap"];
  mo.prototype = {
    __allDirty: null,
    __anyDirty: null,
    __registerLookup: null,
    __uniforms: null,
    flush: function () {
      if (this.__anyDirty) {
        for (var a = 0, b = this.__uniforms; a < b.length; ) {
          var c = b[a];
          ++a;
          if (this.__allDirty || c.isDirty) c.flush(), (c.isDirty = !1);
        }
        this.__anyDirty = this.__allDirty = !1;
      }
    },
    markAllDirty: function () {
      this.__anyDirty = this.__allDirty = !0;
    },
    markDirty: function (a, b) {
      if (!this.__allDirty)
        for (
          b = a + b,
            b > this.__registerLookup.get_length() &&
              (b = this.__registerLookup.get_length());
          a < b;

        ) {
          var c = this.__registerLookup.get(a);
          null != c
            ? ((this.__anyDirty = c.isDirty = !0),
              (a = c.regIndex + c.regCount))
            : ++a;
        }
    },
    __class__: mo,
  };
  var Oq = function (a, b, c, d) {
    this.__context = a;
    this.__numVertices = b;
    this.__vertexSize = c;
    a = this.__context.gl;
    this.__id = a.createBuffer();
    this.__stride = 4 * this.__vertexSize;
    this.__usage = 0 == Nj.fromString(d) ? a.DYNAMIC_DRAW : a.STATIC_DRAW;
  };
  p["openfl.display3D.VertexBuffer3D"] = Oq;
  Oq.__name__ = ["openfl", "display3D", "VertexBuffer3D"];
  Oq.prototype = {
    __context: null,
    __data: null,
    __id: null,
    __memoryUsage: null,
    __numVertices: null,
    __stride: null,
    __tempFloat32Array: null,
    __usage: null,
    __vertexSize: null,
    dispose: function () {
      this.__context.gl.deleteBuffer(this.__id);
    },
    uploadFromByteArray: function (a, b, c, d) {
      b += c * this.__stride;
      d *= this.__vertexSize;
      a = Na.toArrayBuffer(a);
      a = null != a ? (null == d ? new vc(a, b) : new vc(a, b, d)) : null;
      this.uploadFromTypedArray(a);
    },
    uploadFromTypedArray: function (a, b) {
      null != a &&
        ((b = this.__context.gl),
        this.__context.__bindGLArrayBuffer(this.__id),
        yb.bufferData(b, b.ARRAY_BUFFER, a, this.__usage));
    },
    uploadFromVector: function (a, b, c) {
      if (null != a) {
        b *= this.__vertexSize;
        var d = c * this.__vertexSize;
        c = b + d;
        var e = this.__tempFloat32Array;
        if (
          null == this.__tempFloat32Array ||
          this.__tempFloat32Array.length < d
        )
          (this.__tempFloat32Array = null != d ? new vc(d) : null),
            null != e && this.__tempFloat32Array.set(e);
        for (d = b; d < c; )
          (e = d++), (this.__tempFloat32Array[e - b] = a.get(e));
        this.uploadFromTypedArray(this.__tempFloat32Array);
      }
    },
    __class__: Oq,
  };
  var dc = function (a) {
    db.call(this);
    this.__context = a;
    var b = this.__context.gl;
    this.__textureID = b.createTexture();
    this.__textureContext = this.__context.__context;
    if (null == dc.__supportsBGRA) {
      dc.__textureInternalFormat = b.RGBA;
      dc.__supportsBGRA = !1;
      dc.__textureFormat = b.RGBA;
      dc.__compressedFormats = new Ca();
      dc.__compressedFormatsAlpha = new Ca();
      a = b.getExtension("WEBGL_compressed_texture_s3tc");
      var c = b.getExtension("WEBGL_compressed_texture_etc1");
      b = b.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
      null != a &&
        ((dc.__compressedFormats.h[0] = a.COMPRESSED_RGBA_S3TC_DXT1_EXT),
        (dc.__compressedFormatsAlpha.h[0] = a.COMPRESSED_RGBA_S3TC_DXT5_EXT));
      null != c &&
        ((dc.__compressedFormats.h[2] = c.COMPRESSED_RGB_ETC1_WEBGL),
        (dc.__compressedFormatsAlpha.h[2] = c.COMPRESSED_RGB_ETC1_WEBGL));
      null != b &&
        ((dc.__compressedFormats.h[1] = b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG),
        (dc.__compressedFormatsAlpha.h[1] =
          b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG));
    }
    this.__internalFormat = dc.__textureInternalFormat;
    this.__format = dc.__textureFormat;
  };
  p["openfl.display3D.textures.TextureBase"] = dc;
  dc.__name__ = ["openfl", "display3D", "textures", "TextureBase"];
  dc.__super__ = db;
  dc.prototype = x(db.prototype, {
    __alphaTexture: null,
    __context: null,
    __format: null,
    __glDepthRenderbuffer: null,
    __glFramebuffer: null,
    __glStencilRenderbuffer: null,
    __height: null,
    __internalFormat: null,
    __optimizeForRenderToTexture: null,
    __samplerState: null,
    __streamingLevels: null,
    __textureContext: null,
    __textureID: null,
    __textureTarget: null,
    __width: null,
    dispose: function () {
      var a = this.__context.gl;
      null != this.__alphaTexture && this.__alphaTexture.dispose();
      a.deleteTexture(this.__textureID);
    },
    __getGLFramebuffer: function (a, b, c) {
      b = this.__context.gl;
      null == this.__glFramebuffer &&
        ((this.__glFramebuffer = b.createFramebuffer()),
        this.__context.__bindGLFramebuffer(this.__glFramebuffer),
        b.framebufferTexture2D(
          b.FRAMEBUFFER,
          b.COLOR_ATTACHMENT0,
          b.TEXTURE_2D,
          this.__textureID,
          0
        ),
        this.__context.__enableErrorChecking &&
          b.checkFramebufferStatus(b.FRAMEBUFFER));
      a &&
        null == this.__glDepthRenderbuffer &&
        (this.__context.__bindGLFramebuffer(this.__glFramebuffer),
        0 != nc.GL_DEPTH_STENCIL
          ? ((this.__glStencilRenderbuffer = this.__glDepthRenderbuffer =
              b.createRenderbuffer()),
            b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer),
            b.renderbufferStorage(
              b.RENDERBUFFER,
              nc.GL_DEPTH_STENCIL,
              this.__width,
              this.__height
            ),
            b.framebufferRenderbuffer(
              b.FRAMEBUFFER,
              b.DEPTH_STENCIL_ATTACHMENT,
              b.RENDERBUFFER,
              this.__glDepthRenderbuffer
            ))
          : ((this.__glDepthRenderbuffer = b.createRenderbuffer()),
            (this.__glStencilRenderbuffer = b.createRenderbuffer()),
            b.bindRenderbuffer(b.RENDERBUFFER, this.__glDepthRenderbuffer),
            b.renderbufferStorage(
              b.RENDERBUFFER,
              b.DEPTH_COMPONENT16,
              this.__width,
              this.__height
            ),
            b.bindRenderbuffer(b.RENDERBUFFER, this.__glStencilRenderbuffer),
            b.renderbufferStorage(
              b.RENDERBUFFER,
              b.STENCIL_INDEX8,
              this.__width,
              this.__height
            ),
            b.framebufferRenderbuffer(
              b.FRAMEBUFFER,
              b.DEPTH_ATTACHMENT,
              b.RENDERBUFFER,
              this.__glDepthRenderbuffer
            ),
            b.framebufferRenderbuffer(
              b.FRAMEBUFFER,
              b.STENCIL_ATTACHMENT,
              b.RENDERBUFFER,
              this.__glStencilRenderbuffer
            )),
        this.__context.__enableErrorChecking &&
          b.checkFramebufferStatus(b.FRAMEBUFFER),
        b.bindRenderbuffer(b.RENDERBUFFER, null));
      return this.__glFramebuffer;
    },
    __getImage: function (a) {
      var b = a.image;
      if (!a.__isValid || null == b) return null;
      pa.sync(b, !1);
      a = this.__context.gl;
      b.type == Pc.DATA || b.get_premultiplied()
        ? !b.get_premultiplied() &&
          b.get_transparent() &&
          (a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0),
          (b = b.clone()),
          b.set_premultiplied(!0))
        : a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);
      0 != b.get_format() &&
        ((b = b.clone()), b.set_format(0), (b.buffer.premultiplied = !0));
      return b;
    },
    __getTexture: function () {
      return this.__textureID;
    },
    __setSamplerState: function (a) {
      if (!a.equals(this.__samplerState)) {
        var b = this.__context.gl;
        this.__context.__bindGLTexture2D(this.__textureID);
        var c;
        switch (a.wrap) {
          case 0:
            var d = (c = b.CLAMP_TO_EDGE);
            break;
          case 1:
            c = b.CLAMP_TO_EDGE;
            d = b.REPEAT;
            break;
          case 2:
            d = c = b.REPEAT;
            break;
          case 3:
            c = b.REPEAT;
            d = b.CLAMP_TO_EDGE;
            break;
          default:
            throw new v(new ud("wrap bad enum"));
        }
        var e = 5 == a.filter ? b.NEAREST : b.LINEAR;
        switch (a.mipfilter) {
          case 0:
            var f =
              5 == a.filter ? b.NEAREST_MIPMAP_LINEAR : b.LINEAR_MIPMAP_LINEAR;
            break;
          case 1:
            f =
              5 == a.filter
                ? b.NEAREST_MIPMAP_NEAREST
                : b.LINEAR_MIPMAP_NEAREST;
            break;
          case 2:
            f = 5 == a.filter ? b.NEAREST : b.LINEAR;
            break;
          default:
            throw new v(new ud("mipfiter bad enum"));
        }
        b.texParameteri(this.__textureTarget, b.TEXTURE_MIN_FILTER, f);
        b.texParameteri(this.__textureTarget, b.TEXTURE_MAG_FILTER, e);
        b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_S, c);
        b.texParameteri(this.__textureTarget, b.TEXTURE_WRAP_T, d);
        null == this.__samplerState && (this.__samplerState = a.clone());
        this.__samplerState.copyFrom(a);
        return !0;
      }
      return !1;
    },
    __class__: dc,
  });
  var Mj = function (a, b, c, d, e) {
    dc.call(this, a);
    this.__width = this.__height = this.__size = b;
    this.__optimizeForRenderToTexture = d;
    this.__streamingLevels = e;
    this.__textureTarget = this.__context.gl.TEXTURE_CUBE_MAP;
    this.__uploadedSides = 0;
  };
  p["openfl.display3D.textures.CubeTexture"] = Mj;
  Mj.__name__ = ["openfl", "display3D", "textures", "CubeTexture"];
  Mj.__super__ = dc;
  Mj.prototype = x(dc.prototype, {
    __framebufferSurface: null,
    __size: null,
    __uploadedSides: null,
    uploadCompressedTextureFromByteArray: function (a, b, c) {
      null == c && (c = !1);
      var d = this;
      c
        ? af.delay(function () {
            d.__uploadCompressedTextureFromByteArray(a, b);
            d.dispatchEvent(new ma("textureReady"));
          }, 1)
        : this.__uploadCompressedTextureFromByteArray(a, b);
    },
    uploadFromBitmapData: function (a, b, c, d) {
      null == c && (c = 0);
      if (
        null != a &&
        0 != this.__size >> c &&
        ((a = this.__getImage(a)), null != a)
      )
        if (
          0 == c &&
          null != a.buffer &&
          null == a.buffer.data &&
          null != a.buffer.get_src()
        ) {
          if (((d = this.__context.gl), 0 != this.__size >> c)) {
            var e = this.__sideToTarget(b);
            this.__context.__bindGLTextureCubeMap(this.__textureID);
            yb.texImage2D(
              d,
              e,
              c,
              this.__internalFormat,
              this.__format,
              d.UNSIGNED_BYTE,
              a.buffer.get_src()
            );
            this.__context.__bindGLTextureCubeMap(null);
            this.__uploadedSides |= 1 << b;
          }
        } else this.uploadFromTypedArray(a.get_data(), b, c);
    },
    uploadFromByteArray: function (a, b, c, d) {
      null == d && (d = 0);
      0 == b
        ? this.uploadFromTypedArray(a.b, c, d)
        : ((a = Na.toArrayBuffer(a)),
          (b = null != a ? new lb(a, b) : null),
          this.uploadFromTypedArray(b, c, d));
    },
    uploadFromTypedArray: function (a, b, c) {
      null == c && (c = 0);
      if (null != a) {
        var d = this.__context.gl,
          e = this.__size >> c;
        if (0 != e) {
          var f = this.__sideToTarget(b);
          this.__context.__bindGLTextureCubeMap(this.__textureID);
          yb.texImage2D(
            d,
            f,
            c,
            this.__internalFormat,
            e,
            e,
            0,
            this.__format,
            d.UNSIGNED_BYTE,
            a
          );
          this.__context.__bindGLTextureCubeMap(null);
          this.__uploadedSides |= 1 << b;
        }
      }
    },
    __getGLFramebuffer: function (a, b, c) {
      var d = this.__context.gl;
      null == this.__glFramebuffer &&
        ((this.__glFramebuffer = d.createFramebuffer()),
        (this.__framebufferSurface = -1));
      this.__framebufferSurface != c &&
        ((this.__framebufferSurface = c),
        this.__context.__bindGLFramebuffer(this.__glFramebuffer),
        d.framebufferTexture2D(
          d.FRAMEBUFFER,
          d.COLOR_ATTACHMENT0,
          d.TEXTURE_CUBE_MAP_POSITIVE_X + c,
          this.__textureID,
          0
        ),
        this.__context.__enableErrorChecking &&
          d.checkFramebufferStatus(d.FRAMEBUFFER));
      return dc.prototype.__getGLFramebuffer.call(this, a, b, c);
    },
    __setSamplerState: function (a) {
      if (dc.prototype.__setSamplerState.call(this, a)) {
        var b = this.__context.gl;
        2 == a.mipfilter ||
          this.__samplerState.mipmapGenerated ||
          (b.generateMipmap(b.TEXTURE_CUBE_MAP),
          (this.__samplerState.mipmapGenerated = !0));
        if (0 != nc.GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT) {
          switch (a.filter) {
            case 0:
              a = 16;
              break;
            case 1:
              a = 2;
              break;
            case 2:
              a = 4;
              break;
            case 3:
              a = 8;
              break;
            default:
              a = 1;
          }
          a > nc.GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT &&
            (a = nc.GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT);
          b.texParameterf(
            b.TEXTURE_CUBE_MAP,
            nc.GL_TEXTURE_MAX_ANISOTROPY_EXT,
            a
          );
        }
        return !0;
      }
      return !1;
    },
    __sideToTarget: function (a) {
      var b = this.__context.gl;
      switch (a) {
        case 0:
          return b.TEXTURE_CUBE_MAP_POSITIVE_X;
        case 1:
          return b.TEXTURE_CUBE_MAP_NEGATIVE_X;
        case 2:
          return b.TEXTURE_CUBE_MAP_POSITIVE_Y;
        case 3:
          return b.TEXTURE_CUBE_MAP_NEGATIVE_Y;
        case 4:
          return b.TEXTURE_CUBE_MAP_POSITIVE_Z;
        case 5:
          return b.TEXTURE_CUBE_MAP_NEGATIVE_Z;
        default:
          throw new v(new ld());
      }
    },
    __uploadCompressedTextureFromByteArray: function (a, b) {
      var c = this;
      a = new Qn(a, b);
      var d = a.readHeader(this.__size, this.__size, !0),
        e = this.__context.gl;
      this.__context.__bindGLTextureCubeMap(this.__textureID);
      var f = !1;
      a.readTextures(function (a, b, g, m, l, p, q) {
        var h = d
          ? dc.__compressedFormatsAlpha.h[g]
          : dc.__compressedFormats.h[g];
        if (0 != h)
          if (
            ((f = !0),
            (a = c.__sideToTarget(a)),
            (c.__format = h),
            (c.__internalFormat = h),
            d && 2 == g)
          ) {
            p = (p / 2) | 0;
            g = c.__internalFormat;
            var k = q.b.buffer;
            k = null != k ? (null == p ? new lb(k, 0) : new lb(k, 0, p)) : null;
            yb.compressedTexImage2D(e, a, b, g, m, l, 0, k);
            g = new Mj(
              c.__context,
              c.__size,
              3,
              c.__optimizeForRenderToTexture,
              c.__streamingLevels
            );
            g.__format = h;
            g.__internalFormat = h;
            c.__context.__bindGLTextureCubeMap(g.__textureID);
            h = g.__internalFormat;
            q = q.b.buffer;
            q = null != q ? (null == p ? new lb(q, p) : new lb(q, p, p)) : null;
            yb.compressedTexImage2D(e, a, b, h, m, l, 0, q);
            c.__alphaTexture = g;
          } else
            (h = c.__internalFormat),
              (q = q.b.buffer),
              (q =
                null != q
                  ? null == p
                    ? new lb(q, 0)
                    : new lb(q, 0, p)
                  : null),
              yb.compressedTexImage2D(e, a, b, h, m, l, 0, q);
      });
      if (!f)
        for (a = 0; 6 > a; ) {
          b = a++;
          var g = this.__size * this.__size * 4;
          g = null != g ? new lb(g) : null;
          b = this.__sideToTarget(b);
          yb.texImage2D(
            e,
            b,
            0,
            this.__internalFormat,
            this.__size,
            this.__size,
            0,
            this.__format,
            e.UNSIGNED_BYTE,
            g
          );
        }
      this.__context.__bindGLTextureCubeMap(null);
    },
    __class__: Mj,
  });
  var $k = function (a, b, c, d, e) {
    dc.call(this, a);
    this.__width = b;
    this.__height = c;
    this.__optimizeForRenderToTexture = e;
    this.__textureTarget = this.__context.gl.TEXTURE_2D;
    this.uploadFromTypedArray(null);
    e && this.__getGLFramebuffer(!0, 0, 0);
  };
  p["openfl.display3D.textures.RectangleTexture"] = $k;
  $k.__name__ = ["openfl", "display3D", "textures", "RectangleTexture"];
  $k.__super__ = dc;
  $k.prototype = x(dc.prototype, {
    uploadFromBitmapData: function (a) {
      if (null != a && ((a = this.__getImage(a)), null != a))
        if (
          null != a.buffer &&
          null == a.buffer.data &&
          null != a.buffer.get_src()
        ) {
          var b = this.__context.gl;
          this.__context.__bindGLTexture2D(this.__textureID);
          yb.texImage2D(
            b,
            this.__textureTarget,
            0,
            this.__internalFormat,
            this.__format,
            b.UNSIGNED_BYTE,
            a.buffer.get_src()
          );
          this.__context.__bindGLTexture2D(null);
        } else this.uploadFromTypedArray(a.get_data());
    },
    uploadFromByteArray: function (a, b) {
      0 == b
        ? this.uploadFromTypedArray(a.b)
        : ((a = Na.toArrayBuffer(a)),
          (b = null != a ? new lb(a, b) : null),
          this.uploadFromTypedArray(b));
    },
    uploadFromTypedArray: function (a) {
      var b = this.__context.gl;
      this.__context.__bindGLTexture2D(this.__textureID);
      yb.texImage2D(
        b,
        this.__textureTarget,
        0,
        this.__internalFormat,
        this.__width,
        this.__height,
        0,
        this.__format,
        b.UNSIGNED_BYTE,
        a
      );
      this.__context.__bindGLTexture2D(null);
    },
    __setSamplerState: function (a) {
      if (dc.prototype.__setSamplerState.call(this, a)) {
        var b = this.__context.gl;
        if (0 != nc.GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT) {
          switch (a.filter) {
            case 0:
              a = 16;
              break;
            case 1:
              a = 2;
              break;
            case 2:
              a = 4;
              break;
            case 3:
              a = 8;
              break;
            default:
              a = 1;
          }
          a > nc.GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT &&
            (a = nc.GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT);
          b.texParameterf(b.TEXTURE_2D, nc.GL_TEXTURE_MAX_ANISOTROPY_EXT, a);
        }
        return !0;
      }
      return !1;
    },
    __uploadFromImage: function (a) {
      var b = this.__context.gl,
        c;
      if (1 == a.buffer.bitsPerPixel) var d = (c = b.ALPHA);
      else (c = dc.__textureInternalFormat), (d = dc.__textureFormat);
      this.__context.__bindGLTexture2D(this.__textureID);
      a.type == Pc.DATA || a.get_premultiplied()
        ? !a.get_premultiplied() &&
          a.get_transparent() &&
          b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1)
        : b.pixelStorei(b.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);
      a.type == Pc.DATA
        ? yb.texImage2D(
            b,
            b.TEXTURE_2D,
            0,
            c,
            a.buffer.width,
            a.buffer.height,
            0,
            d,
            b.UNSIGNED_BYTE,
            a.get_data()
          )
        : yb.texImage2D(b, b.TEXTURE_2D, 0, c, d, b.UNSIGNED_BYTE, a.get_src());
      this.__context.__bindGLTexture2D(null);
    },
    __class__: $k,
  });
  var Oi = function (a, b, c, d, e, f) {
    dc.call(this, a);
    this.__width = b;
    this.__height = c;
    this.__optimizeForRenderToTexture = e;
    this.__streamingLevels = f;
    a = this.__context.gl;
    this.__textureTarget = a.TEXTURE_2D;
    this.__context.__bindGLTexture2D(this.__textureID);
    yb.texImage2D(
      a,
      this.__textureTarget,
      0,
      this.__internalFormat,
      this.__width,
      this.__height,
      0,
      this.__format,
      a.UNSIGNED_BYTE,
      null
    );
    this.__context.__bindGLTexture2D(null);
    e && this.__getGLFramebuffer(!0, 0, 0);
  };
  p["openfl.display3D.textures.Texture"] = Oi;
  Oi.__name__ = ["openfl", "display3D", "textures", "Texture"];
  Oi.__super__ = dc;
  Oi.prototype = x(dc.prototype, {
    uploadCompressedTextureFromByteArray: function (a, b, c) {
      null == c && (c = !1);
      var d = this;
      c
        ? af.delay(function () {
            d.__uploadCompressedTextureFromByteArray(a, b);
            d.dispatchEvent(new ma("textureReady"));
          }, 1)
        : this.__uploadCompressedTextureFromByteArray(a, b);
    },
    uploadFromBitmapData: function (a, b, c) {
      null == b && (b = 0);
      if (null != a) {
        c = this.__width >> b;
        var d = this.__height >> b;
        if (0 != c || 0 != d) {
          0 == c && (c = 1);
          0 == d && (d = 1);
          if (a.width != c || a.height != d)
            (c = new sa(c, d, !0, 0)), c.draw(a), (a = c);
          a = this.__getImage(a);
          if (null != a)
            if (
              0 == b &&
              null != a.buffer &&
              null == a.buffer.data &&
              null != a.buffer.get_src()
            ) {
              if (
                ((c = this.__context.gl),
                (d = this.__height >> b),
                0 != this.__width >> b || 0 != d)
              )
                this.__context.__bindGLTexture2D(this.__textureID),
                  yb.texImage2D(
                    c,
                    this.__textureTarget,
                    b,
                    this.__internalFormat,
                    this.__format,
                    c.UNSIGNED_BYTE,
                    a.buffer.get_src()
                  ),
                  this.__context.__bindGLTexture2D(null);
            } else this.uploadFromTypedArray(a.get_data(), b);
        }
      }
    },
    uploadFromByteArray: function (a, b, c) {
      null == c && (c = 0);
      0 == b
        ? this.uploadFromTypedArray(a.b, c)
        : ((a = Na.toArrayBuffer(a)),
          (b = null != a ? new lb(a, b) : null),
          this.uploadFromTypedArray(b, c));
    },
    uploadFromTypedArray: function (a, b) {
      null == b && (b = 0);
      if (null != a) {
        var c = this.__context.gl,
          d = this.__width >> b,
          e = this.__height >> b;
        if (0 != d || 0 != e)
          0 == d && (d = 1),
            0 == e && (e = 1),
            this.__context.__bindGLTexture2D(this.__textureID),
            yb.texImage2D(
              c,
              this.__textureTarget,
              b,
              this.__internalFormat,
              d,
              e,
              0,
              this.__format,
              c.UNSIGNED_BYTE,
              a
            ),
            this.__context.__bindGLTexture2D(null);
      }
    },
    __setSamplerState: function (a) {
      if (dc.prototype.__setSamplerState.call(this, a)) {
        var b = this.__context.gl;
        2 == a.mipfilter ||
          this.__samplerState.mipmapGenerated ||
          (b.generateMipmap(b.TEXTURE_2D),
          (this.__samplerState.mipmapGenerated = !0));
        if (0 != nc.GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT) {
          switch (a.filter) {
            case 0:
              a = 16;
              break;
            case 1:
              a = 2;
              break;
            case 2:
              a = 4;
              break;
            case 3:
              a = 8;
              break;
            default:
              a = 1;
          }
          a > nc.GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT &&
            (a = nc.GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT);
          b.texParameterf(b.TEXTURE_2D, nc.GL_TEXTURE_MAX_ANISOTROPY_EXT, a);
        }
        return !0;
      }
      return !1;
    },
    __uploadCompressedTextureFromByteArray: function (a, b) {
      var c = this;
      a = new Qn(a, b);
      var d = a.readHeader(this.__width, this.__height, !1),
        e = this.__context.gl;
      this.__context.__bindGLTexture2D(this.__textureID);
      var f = !1;
      a.readTextures(function (a, b, n, k, m, l, p) {
        a = d ? dc.__compressedFormatsAlpha.h[n] : dc.__compressedFormats.h[n];
        if (0 != a)
          if (
            ((f = !0), (c.__format = a), (c.__internalFormat = a), d && 2 == n)
          ) {
            l = (l / 2) | 0;
            n = c.__textureTarget;
            var g = c.__internalFormat,
              h = p.b.buffer;
            h = null != h ? (null == l ? new lb(h, 0) : new lb(h, 0, l)) : null;
            yb.compressedTexImage2D(e, n, b, g, k, m, 0, h);
            n = new Oi(
              c.__context,
              c.__width,
              c.__height,
              3,
              c.__optimizeForRenderToTexture,
              c.__streamingLevels
            );
            n.__format = a;
            n.__internalFormat = a;
            c.__context.__bindGLTexture2D(n.__textureID);
            a = n.__textureTarget;
            g = n.__internalFormat;
            p = p.b.buffer;
            p = null != p ? (null == l ? new lb(p, l) : new lb(p, l, l)) : null;
            yb.compressedTexImage2D(e, a, b, g, k, m, 0, p);
            c.__alphaTexture = n;
          } else
            (a = c.__textureTarget),
              (n = c.__internalFormat),
              (p = p.b.buffer),
              (p =
                null != p
                  ? null == l
                    ? new lb(p, 0)
                    : new lb(p, 0, l)
                  : null),
              yb.compressedTexImage2D(e, a, b, n, k, m, 0, p);
      });
      f ||
        ((a = this.__width * this.__height * 4),
        (a = null != a ? new lb(a) : null),
        yb.texImage2D(
          e,
          this.__textureTarget,
          0,
          this.__internalFormat,
          this.__width,
          this.__height,
          0,
          this.__format,
          e.UNSIGNED_BYTE,
          a
        ));
      this.__context.__bindGLTexture2D(null);
    },
    __class__: Oi,
  });
  var jo = function (a) {
    dc.call(this, a);
    this.__textureTarget = this.__context.gl.TEXTURE_2D;
  };
  p["openfl.display3D.textures.VideoTexture"] = jo;
  jo.__name__ = ["openfl", "display3D", "textures", "VideoTexture"];
  jo.__super__ = dc;
  jo.prototype = x(dc.prototype, {
    videoHeight: null,
    videoWidth: null,
    __netStream: null,
    attachNetStream: function (a) {
      var b = this;
      this.__netStream = a;
      4 == this.__netStream.__video.readyState
        ? af.delay(function () {
            b.__textureReady();
          }, 0)
        : this.__netStream.__video.addEventListener(
            "canplay",
            function (a) {
              b.__textureReady();
            },
            !1
          );
    },
    __getTexture: function () {
      if (
        (!this.__netStream.__video.paused ||
          this.__netStream.get___seeking()) &&
        0 < this.__netStream.__video.readyState
      ) {
        this.__netStream.set___seeking(!1);
        var a = this.__context.gl;
        this.__context.__bindGLTexture2D(this.__textureID);
        yb.texImage2D(
          a,
          a.TEXTURE_2D,
          0,
          a.RGBA,
          a.RGBA,
          a.UNSIGNED_BYTE,
          this.__netStream.__video
        );
      }
      return this.__textureID;
    },
    __textureReady: function () {
      this.videoWidth = this.__netStream.__video.videoWidth;
      this.videoHeight = this.__netStream.__video.videoHeight;
      this.dispatchEvent(new ma("textureReady"));
    },
    __class__: jo,
  });
  var ud = function (a, b) {
    null == b && (b = 0);
    null == a && (a = "");
    this.message = a;
    this.errorID = b;
    this.name = "Error";
  };
  p["openfl.errors.Error"] = ud;
  ud.__name__ = ["openfl", "errors", "Error"];
  ud.prototype = {
    errorID: null,
    message: null,
    name: null,
    getStackTrace: function () {
      return X.toString(X.exceptionStack());
    },
    toString: function () {
      return null != this.message ? this.message : "Error";
    },
    __class__: ud,
  };
  var Si = function (a) {
    null == a && (a = "");
    ud.call(this, a);
    this.name = "ArgumentError";
  };
  p["openfl.errors.ArgumentError"] = Si;
  Si.__name__ = ["openfl", "errors", "ArgumentError"];
  Si.__super__ = ud;
  Si.prototype = x(ud.prototype, { __class__: Si });
  var Rj = function (a) {
    null == a && (a = "");
    ud.call(this, a);
    this.name = "IOError";
  };
  p["openfl.errors.IOError"] = Rj;
  Rj.__name__ = ["openfl", "errors", "IOError"];
  Rj.__super__ = ud;
  Rj.prototype = x(ud.prototype, { __class__: Rj });
  var yh = function (a, b) {
    Rj.call(this, "End of file was encountered");
    this.name = "EOFError";
    this.errorID = 2030;
  };
  p["openfl.errors.EOFError"] = yh;
  yh.__name__ = ["openfl", "errors", "EOFError"];
  yh.__super__ = Rj;
  yh.prototype = x(Rj.prototype, { __class__: yh });
  var ld = function (a) {
    null == a && (a = "");
    ud.call(this, a, 0);
    this.name = "IllegalOperationError";
  };
  p["openfl.errors.IllegalOperationError"] = ld;
  ld.__name__ = ["openfl", "errors", "IllegalOperationError"];
  ld.__super__ = ud;
  ld.prototype = x(ud.prototype, { __class__: ld });
  var Ri = function (a) {
    null == a && (a = "");
    ud.call(this, a, 0);
    this.name = "RangeError";
  };
  p["openfl.errors.RangeError"] = Ri;
  Ri.__name__ = ["openfl", "errors", "RangeError"];
  Ri.__super__ = ud;
  Ri.prototype = x(ud.prototype, { __class__: Ri });
  var Qq = function (a) {
    null == a && (a = "");
    ud.call(this, a, 0);
    this.name = "SecurityError";
  };
  p["openfl.errors.SecurityError"] = Qq;
  Qq.__name__ = ["openfl", "errors", "SecurityError"];
  Qq.__super__ = ud;
  Qq.prototype = x(ud.prototype, { __class__: Qq });
  var Vj = function (a) {
    null == a && (a = "");
    ud.call(this, a, 0);
    this.name = "TypeError";
  };
  p["openfl.errors.TypeError"] = Vj;
  Vj.__name__ = ["openfl", "errors", "TypeError"];
  Vj.__super__ = ud;
  Vj.prototype = x(ud.prototype, { __class__: Vj });
  var fi = function (a, b, c, d) {
    null == d && (d = !1);
    null == c && (c = !1);
    null == b && (b = !1);
    ma.call(this, a, b, c);
    this.activating = d;
  };
  p["openfl.events.ActivityEvent"] = fi;
  fi.__name__ = ["openfl", "events", "ActivityEvent"];
  fi.__super__ = ma;
  fi.prototype = x(ma.prototype, {
    activating: null,
    clone: function () {
      var a = new fi(this.type, this.bubbles, this.cancelable, this.activating);
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      a.eventPhase = this.eventPhase;
      return a;
    },
    toString: function () {
      return this.__formatToString("ActivityEvent", [
        "type",
        "bubbles",
        "cancelable",
        "activating",
      ]);
    },
    __class__: fi,
  });
  var gg = function (a, b, c, d) {
    null == d && (d = "");
    null == c && (c = !1);
    null == b && (b = !1);
    ma.call(this, a, b, c);
    this.text = d;
  };
  p["openfl.events.TextEvent"] = gg;
  gg.__name__ = ["openfl", "events", "TextEvent"];
  gg.__super__ = ma;
  gg.prototype = x(ma.prototype, {
    text: null,
    clone: function () {
      var a = new gg(this.type, this.bubbles, this.cancelable, this.text);
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      a.eventPhase = this.eventPhase;
      return a;
    },
    toString: function () {
      return this.__formatToString("TextEvent", [
        "type",
        "bubbles",
        "cancelable",
        "text",
      ]);
    },
    __class__: gg,
  });
  var uf = function (a, b, c, d, e) {
    null == e && (e = 0);
    null == d && (d = "");
    null == c && (c = !1);
    null == b && (b = !1);
    gg.call(this, a, b, c, d);
    this.errorID = e;
  };
  p["openfl.events.ErrorEvent"] = uf;
  uf.__name__ = ["openfl", "events", "ErrorEvent"];
  uf.__super__ = gg;
  uf.prototype = x(gg.prototype, {
    errorID: null,
    clone: function () {
      var a = new uf(
        this.type,
        this.bubbles,
        this.cancelable,
        this.text,
        this.errorID
      );
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      a.eventPhase = this.eventPhase;
      return a;
    },
    toString: function () {
      return this.__formatToString("ErrorEvent", [
        "type",
        "bubbles",
        "cancelable",
        "text",
        "errorID",
      ]);
    },
    __class__: uf,
  });
  var ol = function (a) {
    this.active = !1;
    this.reset(a);
  };
  p["openfl.events._EventDispatcher.DispatchIterator"] = ol;
  ol.__name__ = ["openfl", "events", "_EventDispatcher", "DispatchIterator"];
  ol.prototype = {
    active: null,
    index: null,
    isCopy: null,
    list: null,
    copy: function () {
      this.isCopy || ((this.list = this.list.slice()), (this.isCopy = !0));
    },
    hasNext: function () {
      return this.index < this.list.length;
    },
    next: function () {
      return this.list[this.index++];
    },
    remove: function (a, b) {
      if (this.active)
        if (this.isCopy) {
          b = this.index;
          for (var c = this.list.length; b < c; ) {
            var d = b++;
            if (this.list[d] == a) {
              this.list.splice(d, 1);
              break;
            }
          }
        } else b < this.index && this.index--;
    },
    reset: function (a) {
      this.list = a;
      this.isCopy = !1;
      this.index = 0;
    },
    start: function () {
      this.active = !0;
    },
    stop: function () {
      this.active = !1;
    },
    __class__: ol,
  };
  var nl = function (a, b, c) {
    this.callback = a;
    this.useCapture = b;
    this.priority = c;
  };
  p["openfl.events._EventDispatcher.Listener"] = nl;
  nl.__name__ = ["openfl", "events", "_EventDispatcher", "Listener"];
  nl.prototype = {
    callback: null,
    priority: null,
    useCapture: null,
    match: function (a, b) {
      return V.compareMethods(this.callback, a) ? this.useCapture == b : !1;
    },
    __class__: nl,
  };
  var hg = function (a, b, c, d, e, f) {
    null == f && (f = 0);
    null == e && (e = !1);
    null == c && (c = !1);
    null == b && (b = !1);
    ma.call(this, a, b, c);
    this.keyCode = f;
    this.shiftKey = e;
    this.relatedObject = d;
  };
  p["openfl.events.FocusEvent"] = hg;
  hg.__name__ = ["openfl", "events", "FocusEvent"];
  hg.__super__ = ma;
  hg.prototype = x(ma.prototype, {
    keyCode: null,
    relatedObject: null,
    shiftKey: null,
    clone: function () {
      var a = new hg(
        this.type,
        this.bubbles,
        this.cancelable,
        this.relatedObject,
        this.shiftKey,
        this.keyCode
      );
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      a.eventPhase = this.eventPhase;
      return a;
    },
    toString: function () {
      return this.__formatToString(
        "FocusEvent",
        "type bubbles cancelable relatedObject shiftKey keyCode".split(" ")
      );
    },
    __class__: hg,
  });
  var Hg = function (a, b, c, d, e) {
    null == e && (e = !1);
    null == d && (d = !1);
    null == c && (c = !1);
    null == b && (b = !1);
    fi.call(this, a, b, c);
    this.fullScreen = d;
    this.interactive = e;
  };
  p["openfl.events.FullScreenEvent"] = Hg;
  Hg.__name__ = ["openfl", "events", "FullScreenEvent"];
  Hg.__super__ = fi;
  Hg.prototype = x(fi.prototype, {
    fullScreen: null,
    interactive: null,
    clone: function () {
      var a = new Hg(
        this.type,
        this.bubbles,
        this.cancelable,
        this.fullScreen,
        this.interactive
      );
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      a.eventPhase = this.eventPhase;
      return a;
    },
    toString: function () {
      return this.__formatToString("FullscreenEvent", [
        "type",
        "bubbles",
        "cancelable",
        "fullscreen",
        "interactive",
      ]);
    },
    __class__: Hg,
  });
  var kh = function (a, b, c, d) {
    null == c && (c = !1);
    null == b && (b = !0);
    ma.call(this, a, b, c);
    this.device = d;
  };
  p["openfl.events.GameInputEvent"] = kh;
  kh.__name__ = ["openfl", "events", "GameInputEvent"];
  kh.__super__ = ma;
  kh.prototype = x(ma.prototype, {
    device: null,
    clone: function () {
      var a = new kh(this.type, this.bubbles, this.cancelable, this.device);
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      a.eventPhase = this.eventPhase;
      return a;
    },
    toString: function () {
      return this.__formatToString("GameInputEvent", [
        "type",
        "bubbles",
        "cancelable",
        "device",
      ]);
    },
    __class__: kh,
  });
  var Qi = function (a, b, c, d, e) {
    null == e && (e = !1);
    null == d && (d = 0);
    null == c && (c = !1);
    null == b && (b = !1);
    this.status = d;
    this.redirected = e;
    ma.call(this, a, b, c);
  };
  p["openfl.events.HTTPStatusEvent"] = Qi;
  Qi.__name__ = ["openfl", "events", "HTTPStatusEvent"];
  Qi.__super__ = ma;
  Qi.prototype = x(ma.prototype, {
    redirected: null,
    responseHeaders: null,
    responseURL: null,
    status: null,
    clone: function () {
      var a = new Qi(
        this.type,
        this.bubbles,
        this.cancelable,
        this.status,
        this.redirected
      );
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      a.eventPhase = this.eventPhase;
      return a;
    },
    toString: function () {
      return this.__formatToString("HTTPStatusEvent", [
        "type",
        "bubbles",
        "cancelable",
        "status",
        "redirected",
      ]);
    },
    __class__: Qi,
  });
  var zg = function (a, b, c, d, e) {
    null == e && (e = 0);
    null == d && (d = "");
    null == c && (c = !1);
    null == b && (b = !0);
    uf.call(this, a, b, c, d, e);
  };
  p["openfl.events.IOErrorEvent"] = zg;
  zg.__name__ = ["openfl", "events", "IOErrorEvent"];
  zg.__super__ = uf;
  zg.prototype = x(uf.prototype, {
    clone: function () {
      var a = new zg(
        this.type,
        this.bubbles,
        this.cancelable,
        this.text,
        this.errorID
      );
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      a.eventPhase = this.eventPhase;
      return a;
    },
    toString: function () {
      return this.__formatToString("IOErrorEvent", [
        "type",
        "bubbles",
        "cancelable",
        "text",
        "errorID",
      ]);
    },
    __class__: zg,
  });
  var Ni = function (a, b, c, d, e, f, g, h, n, k, m) {
    null == m && (m = !1);
    null == k && (k = !1);
    null == n && (n = !1);
    null == h && (h = !1);
    null == g && (g = !1);
    null == e && (e = 0);
    null == d && (d = 0);
    null == c && (c = !1);
    null == b && (b = !1);
    ma.call(this, a, b, c);
    this.charCode = d;
    this.keyCode = e;
    this.keyLocation = null != f ? f : 0;
    this.ctrlKey = g;
    this.altKey = h;
    this.shiftKey = n;
    this.controlKey = k;
    this.commandKey = m;
  };
  p["openfl.events.KeyboardEvent"] = Ni;
  Ni.__name__ = ["openfl", "events", "KeyboardEvent"];
  Ni.__super__ = ma;
  Ni.prototype = x(ma.prototype, {
    altKey: null,
    charCode: null,
    ctrlKey: null,
    commandKey: null,
    controlKey: null,
    keyCode: null,
    keyLocation: null,
    shiftKey: null,
    clone: function () {
      var a = new Ni(
        this.type,
        this.bubbles,
        this.cancelable,
        this.charCode,
        this.keyCode,
        this.keyLocation,
        this.ctrlKey,
        this.altKey,
        this.shiftKey,
        this.controlKey,
        this.commandKey
      );
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      a.eventPhase = this.eventPhase;
      return a;
    },
    toString: function () {
      return this.__formatToString(
        "KeyboardEvent",
        "type bubbles cancelable charCode keyCode keyLocation ctrlKey altKey shiftKey".split(
          " "
        )
      );
    },
    __class__: Ni,
  });
  var Ob = function (a, b, c, d, e, f, g, h, n, k, m, l, p) {
    null == p && (p = 0);
    null == l && (l = !1);
    null == m && (m = 0);
    null == k && (k = !1);
    null == n && (n = !1);
    null == h && (h = !1);
    null == g && (g = !1);
    null == e && (e = 0);
    null == d && (d = 0);
    null == c && (c = !1);
    null == b && (b = !0);
    ma.call(this, a, b, c);
    this.shiftKey = n;
    this.altKey = h;
    this.ctrlKey = g;
    this.bubbles = b;
    this.relatedObject = f;
    this.delta = m;
    this.localX = d;
    this.localY = e;
    this.buttonDown = k;
    this.commandKey = l;
    this.clickCount = p;
    this.isRelatedObjectInaccessible = !1;
    this.stageY = this.stageX = NaN;
  };
  p["openfl.events.MouseEvent"] = Ob;
  Ob.__name__ = ["openfl", "events", "MouseEvent"];
  Ob.__create = function (a, b, c, d, e, f, g) {
    null == g && (g = 0);
    a = new Ob(
      a,
      !0,
      !1,
      e.x,
      e.y,
      null,
      Ob.__ctrlKey,
      Ob.__altKey,
      Ob.__shiftKey,
      Ob.__buttonDown,
      g,
      Ob.__commandKey
    );
    a.stageX = c;
    a.stageY = d;
    a.target = f;
    return a;
  };
  Ob.__super__ = ma;
  Ob.prototype = x(ma.prototype, {
    altKey: null,
    buttonDown: null,
    commandKey: null,
    clickCount: null,
    ctrlKey: null,
    delta: null,
    isRelatedObjectInaccessible: null,
    localX: null,
    localY: null,
    relatedObject: null,
    shiftKey: null,
    stageX: null,
    stageY: null,
    clone: function () {
      var a = new Ob(
        this.type,
        this.bubbles,
        this.cancelable,
        this.localX,
        this.localY,
        this.relatedObject,
        this.ctrlKey,
        this.altKey,
        this.shiftKey,
        this.buttonDown,
        this.delta,
        this.commandKey,
        this.clickCount
      );
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      a.eventPhase = this.eventPhase;
      return a;
    },
    toString: function () {
      return this.__formatToString(
        "MouseEvent",
        "type bubbles cancelable localX localY relatedObject ctrlKey altKey shiftKey buttonDown delta".split(
          " "
        )
      );
    },
    updateAfterEvent: function () {},
    __class__: Ob,
  });
  var jg = function (a, b, c, d) {
    null == c && (c = !1);
    null == b && (b = !1);
    this.info = d;
    ma.call(this, a, b, c);
  };
  p["openfl.events.NetStatusEvent"] = jg;
  jg.__name__ = ["openfl", "events", "NetStatusEvent"];
  jg.__super__ = ma;
  jg.prototype = x(ma.prototype, {
    info: null,
    clone: function () {
      var a = new jg(this.type, this.bubbles, this.cancelable, this.info);
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      a.eventPhase = this.eventPhase;
      return a;
    },
    toString: function () {
      return this.__formatToString("NetStatusEvent", [
        "type",
        "bubbles",
        "cancelable",
        "info",
      ]);
    },
    __class__: jg,
  });
  var gh = function (a, b, c, d, e) {
    null == e && (e = 0);
    null == d && (d = 0);
    null == c && (c = !1);
    null == b && (b = !1);
    ma.call(this, a, b, c);
    this.bytesLoaded = d;
    this.bytesTotal = e;
  };
  p["openfl.events.ProgressEvent"] = gh;
  gh.__name__ = ["openfl", "events", "ProgressEvent"];
  gh.__super__ = ma;
  gh.prototype = x(ma.prototype, {
    bytesLoaded: null,
    bytesTotal: null,
    clone: function () {
      var a = new gh(
        this.type,
        this.bubbles,
        this.cancelable,
        this.bytesLoaded,
        this.bytesTotal
      );
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      a.eventPhase = this.eventPhase;
      return a;
    },
    toString: function () {
      return this.__formatToString("ProgressEvent", [
        "type",
        "bubbles",
        "cancelable",
        "bytesLoaded",
        "bytesTotal",
      ]);
    },
    __class__: gh,
  });
  var Gg = function (a, b, c, d, e, f) {
    null == f && (f = !0);
    null == c && (c = !1);
    null == b && (b = !1);
    ma.call(this, a, b, c);
    this.objectMatrix = d;
    this.objectColorTransform = e;
    this.allowSmoothing = f;
  };
  p["openfl.events.RenderEvent"] = Gg;
  Gg.__name__ = ["openfl", "events", "RenderEvent"];
  Gg.__super__ = ma;
  Gg.prototype = x(ma.prototype, {
    allowSmoothing: null,
    objectColorTransform: null,
    objectMatrix: null,
    renderer: null,
    clone: function () {
      var a = new Gg(
        this.type,
        this.bubbles,
        this.cancelable,
        this.objectMatrix.clone(),
        this.objectColorTransform.__clone(),
        this.allowSmoothing
      );
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      a.eventPhase = this.eventPhase;
      return a;
    },
    toString: function () {
      return this.__formatToString("RenderEvent", [
        "type",
        "bubbles",
        "cancelable",
      ]);
    },
    __class__: Gg,
  });
  var Sj = function (a, b, c, d, e) {
    null == e && (e = 0);
    null == d && (d = "");
    null == c && (c = !1);
    null == b && (b = !1);
    uf.call(this, a, b, c, d, e);
  };
  p["openfl.events.SecurityErrorEvent"] = Sj;
  Sj.__name__ = ["openfl", "events", "SecurityErrorEvent"];
  Sj.__super__ = uf;
  Sj.prototype = x(uf.prototype, {
    clone: function () {
      var a = new Sj(
        this.type,
        this.bubbles,
        this.cancelable,
        this.text,
        this.errorID
      );
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      a.eventPhase = this.eventPhase;
      return a;
    },
    toString: function () {
      return this.__formatToString("SecurityErrorEvent", [
        "type",
        "bubbles",
        "cancelable",
        "text",
        "errorID",
      ]);
    },
    __class__: Sj,
  });
  var ae = function (
    a,
    b,
    c,
    d,
    e,
    f,
    g,
    h,
    n,
    k,
    m,
    l,
    p,
    q,
    r,
    t,
    u,
    v,
    w,
    x
  ) {
    null == t && (t = !1);
    null == r && (r = !1);
    null == q && (q = !1);
    null == p && (p = !1);
    null == l && (l = !1);
    null == k && (k = 0);
    null == n && (n = 0);
    null == h && (h = 0);
    null == g && (g = 0);
    null == f && (f = 0);
    null == e && (e = !1);
    null == d && (d = 0);
    null == c && (c = !1);
    null == b && (b = !0);
    ma.call(this, a, b, c);
    this.touchPointID = d;
    this.isPrimaryTouchPoint = e;
    this.localX = f;
    this.localY = g;
    this.sizeX = h;
    this.sizeY = n;
    this.pressure = k;
    this.relatedObject = m;
    this.ctrlKey = l;
    this.altKey = p;
    this.shiftKey = q;
    this.commandKey = r;
    this.controlKey = t;
    this.stageY = this.stageX = NaN;
  };
  p["openfl.events.TouchEvent"] = ae;
  ae.__name__ = ["openfl", "events", "TouchEvent"];
  ae.__create = function (a, b, c, d, e, f) {
    a = new ae(a, !0, !1, 0, !0, e.x, e.y, 1, 1, 1);
    a.stageX = c;
    a.stageY = d;
    a.target = f;
    return a;
  };
  ae.__super__ = ma;
  ae.prototype = x(ma.prototype, {
    altKey: null,
    commandKey: null,
    controlKey: null,
    ctrlKey: null,
    delta: null,
    isPrimaryTouchPoint: null,
    localX: null,
    localY: null,
    pressure: null,
    relatedObject: null,
    shiftKey: null,
    sizeX: null,
    sizeY: null,
    stageX: null,
    stageY: null,
    touchPointID: null,
    clone: function () {
      var a = new ae(
        this.type,
        this.bubbles,
        this.cancelable,
        this.touchPointID,
        this.isPrimaryTouchPoint,
        this.localX,
        this.localY,
        this.sizeX,
        this.sizeY,
        this.pressure,
        this.relatedObject,
        this.ctrlKey,
        this.altKey,
        this.shiftKey,
        this.commandKey,
        this.controlKey
      );
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      a.eventPhase = this.eventPhase;
      return a;
    },
    toString: function () {
      return this.__formatToString(
        "TouchEvent",
        "type bubbles cancelable touchPointID isPrimaryTouchPoint localX localY sizeX sizeY pressure relatedObject ctrlKey altKey shiftKey commandKey controlKey".split(
          " "
        )
      );
    },
    updateAfterEvent: function () {},
    __class__: ae,
  });
  var Ij = function (a, b, c, d) {
    null == c && (c = !0);
    null == b && (b = !0);
    uf.call(this, a, b, c);
    this.error = d;
  };
  p["openfl.events.UncaughtErrorEvent"] = Ij;
  Ij.__name__ = ["openfl", "events", "UncaughtErrorEvent"];
  Ij.__super__ = uf;
  Ij.prototype = x(uf.prototype, {
    error: null,
    clone: function () {
      var a = new Ij(this.type, this.bubbles, this.cancelable, this.error);
      a.target = this.target;
      a.currentTarget = this.currentTarget;
      a.eventPhase = this.eventPhase;
      return a;
    },
    toString: function () {
      return this.__formatToString("UncaughtErrorEvent", [
        "type",
        "bubbles",
        "cancelable",
        "error",
      ]);
    },
    __class__: Ij,
  });
  var go = function () {
    db.call(this);
  };
  p["openfl.events.UncaughtErrorEvents"] = go;
  go.__name__ = ["openfl", "events", "UncaughtErrorEvents"];
  go.__super__ = db;
  go.prototype = x(db.prototype, { __class__: go });
  var vf = function () {
    this.__leftExtension = this.__bottomExtension = 0;
    this.__needSecondBitmapData = !0;
    this.__numShaderPasses = 0;
    this.__preserveObject = !1;
    this.__rightExtension = 0;
    this.__shaderBlendMode = 10;
    this.__topExtension = 0;
    this.__smooth = !0;
  };
  p["openfl.filters.BitmapFilter"] = vf;
  vf.__name__ = ["openfl", "filters", "BitmapFilter"];
  vf.prototype = {
    __bottomExtension: null,
    __leftExtension: null,
    __needSecondBitmapData: null,
    __numShaderPasses: null,
    __preserveObject: null,
    __renderDirty: null,
    __rightExtension: null,
    __shaderBlendMode: null,
    __smooth: null,
    __topExtension: null,
    clone: function () {
      return new vf();
    },
    __applyFilter: function (a, b, c, d) {
      return b;
    },
    __initShader: function (a, b) {
      return null;
    },
    __class__: vf,
  };
  var Mf = function (a) {
    null == this.__glFragmentSource &&
      (this.__glFragmentSource =
        "varying vec2 openfl_TextureCoordv;\n\t\t\n\t\tuniform sampler2D openfl_Texture;\n\t\tuniform vec2 openfl_TextureSize;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tgl_FragColor = texture2D (openfl_Texture, openfl_TextureCoordv);\n\t\t\t\n\t\t}");
    null == this.__glVertexSource &&
      (this.__glVertexSource =
        "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\t\n\t\tvarying vec2 openfl_TextureCoordv;\n\t\t\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\t\t\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\t\n\t\t}");
    Bf.call(this, a);
    this.__isGenerated = !0;
    this.__initGL();
  };
  p["openfl.filters.BitmapFilterShader"] = Mf;
  Mf.__name__ = ["openfl", "filters", "BitmapFilterShader"];
  Mf.__super__ = Bf;
  Mf.prototype = x(Bf.prototype, {
    openfl_Position: null,
    openfl_TextureCoord: null,
    openfl_Matrix: null,
    openfl_TextureSize: null,
    openfl_Texture: null,
    __class__: Mf,
  });
  var no = function () {
    null == this.__glFragmentSource &&
      (this.__glFragmentSource =
        "uniform sampler2D openfl_Texture;\n\t\t\n\t\tvarying vec2 vBlurCoords[7];\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvec4 sum = vec4(0.0);\n\t\t\tsum += texture2D(openfl_Texture, vBlurCoords[0]) * 0.00443;\n\t\t\tsum += texture2D(openfl_Texture, vBlurCoords[1]) * 0.05399;\n\t\t\tsum += texture2D(openfl_Texture, vBlurCoords[2]) * 0.24197;\n\t\t\tsum += texture2D(openfl_Texture, vBlurCoords[3]) * 0.39894;\n\t\t\tsum += texture2D(openfl_Texture, vBlurCoords[4]) * 0.24197;\n\t\t\tsum += texture2D(openfl_Texture, vBlurCoords[5]) * 0.05399;\n\t\t\tsum += texture2D(openfl_Texture, vBlurCoords[6]) * 0.00443;\n\t\t\t\n\t\t\tgl_FragColor = sum;\n\t\t\t\n\t\t}");
    null == this.__glVertexSource &&
      (this.__glVertexSource =
        "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\t\n\t\tuniform mat4 openfl_Matrix;\n\t\t\n\t\tuniform vec2 uRadius;\n\t\tvarying vec2 vBlurCoords[7];\n\t\tuniform vec2 uTextureSize;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\t\n\t\t\tvec2 r = uRadius / uTextureSize;\n\t\t\tvBlurCoords[0] = openfl_TextureCoord - r * 1.0;\n\t\t\tvBlurCoords[1] = openfl_TextureCoord - r * 0.75;\n\t\t\tvBlurCoords[2] = openfl_TextureCoord - r * 0.5;\n\t\t\tvBlurCoords[3] = openfl_TextureCoord;\n\t\t\tvBlurCoords[4] = openfl_TextureCoord + r * 0.5;\n\t\t\tvBlurCoords[5] = openfl_TextureCoord + r * 0.75;\n\t\t\tvBlurCoords[6] = openfl_TextureCoord + r * 1.0;\n\t\t\t\n\t\t}");
    Mf.call(this);
    this.uRadius.value = [0, 0];
    this.__isGenerated = !0;
    this.__initGL();
  };
  p["openfl.filters._BlurFilter.BlurShader"] = no;
  no.__name__ = ["openfl", "filters", "_BlurFilter", "BlurShader"];
  no.__super__ = Mf;
  no.prototype = x(Mf.prototype, {
    __update: function () {
      this.uTextureSize.value = [
        this.__texture.input.width,
        this.__texture.input.height,
      ];
      Mf.prototype.__update.call(this);
    },
    uRadius: null,
    uTextureSize: null,
    __class__: no,
  });
  var Ag = function (a, b, c) {
    null == c && (c = 1);
    null == b && (b = 4);
    null == a && (a = 4);
    vf.call(this);
    this.set_blurX(a);
    this.set_blurY(b);
    this.set_quality(c);
    this.__needSecondBitmapData = !0;
    this.__preserveObject = !1;
    this.__renderDirty = !0;
  };
  p["openfl.filters.BlurFilter"] = Ag;
  Ag.__name__ = ["openfl", "filters", "BlurFilter"];
  Ag.__super__ = vf;
  Ag.prototype = x(vf.prototype, {
    __blurX: null,
    __blurY: null,
    __horizontalPasses: null,
    __quality: null,
    __verticalPasses: null,
    clone: function () {
      return new Ag(this.__blurX, this.__blurY, this.__quality);
    },
    __applyFilter: function (a, b, c, d) {
      return Z.gaussianBlur(
        a.image,
        b.image,
        c.__toLimeRectangle(),
        d.__toLimeVector2(),
        this.__blurX,
        this.__blurY,
        this.__quality
      ) == a.image
        ? a
        : b;
    },
    __initShader: function (a, b) {
      b <= this.__horizontalPasses
        ? ((a = Math.pow(0.5, b >> 1)),
          (Ag.__blurShader.uRadius.value[0] = this.get_blurX() * a),
          (Ag.__blurShader.uRadius.value[1] = 0))
        : ((a = Math.pow(0.5, (b - this.__horizontalPasses) >> 1)),
          (Ag.__blurShader.uRadius.value[0] = 0),
          (Ag.__blurShader.uRadius.value[1] = this.get_blurY() * a));
      return Ag.__blurShader;
    },
    get_blurX: function () {
      return this.__blurX;
    },
    set_blurX: function (a) {
      a != this.__blurX &&
        ((this.__blurX = a),
        (this.__renderDirty = !0),
        (this.__rightExtension = this.__leftExtension =
          0 < a ? Math.ceil(a) : 0));
      return a;
    },
    get_blurY: function () {
      return this.__blurY;
    },
    set_blurY: function (a) {
      a != this.__blurY &&
        ((this.__blurY = a),
        (this.__renderDirty = !0),
        (this.__bottomExtension = this.__topExtension =
          0 < a ? Math.ceil(a) : 0));
      return a;
    },
    get_quality: function () {
      return this.__quality;
    },
    set_quality: function (a) {
      this.__horizontalPasses =
        0 >= this.__blurX ? 0 : Math.round((a / 4) * this.__blurX) + 1;
      this.__verticalPasses =
        0 >= this.__blurY ? 0 : Math.round((a / 4) * this.__blurY) + 1;
      this.__numShaderPasses = this.__horizontalPasses + this.__verticalPasses;
      a != this.__quality && (this.__renderDirty = !0);
      return (this.__quality = a);
    },
    __class__: Ag,
    __properties__: {
      set_quality: "set_quality",
      get_quality: "get_quality",
      set_blurY: "set_blurY",
      get_blurY: "get_blurY",
      set_blurX: "set_blurX",
      get_blurX: "get_blurX",
    },
  });
  var oo = function () {
    null == this.__glFragmentSource &&
      (this.__glFragmentSource =
        "varying vec2 openfl_TextureCoordv;\n\t\tuniform sampler2D openfl_Texture;\n\t\t\n\t\tuniform mat4 uMultipliers;\n\t\tuniform vec4 uOffsets;\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tvec4 color = texture2D (openfl_Texture, openfl_TextureCoordv);\n\t\t\t\n\t\t\tif (color.a == 0.0) {\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4 (0.0, 0.0, 0.0, 0.0);\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tcolor = vec4 (color.rgb / color.a, color.a);\n\t\t\t\tcolor = uOffsets + color * uMultipliers;\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4 (color.rgb * color.a, color.a);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}");
    null == this.__glVertexSource &&
      (this.__glVertexSource =
        "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\t\n\t\tvarying vec2 openfl_TextureCoordv;\n\t\t\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\topenfl_TextureCoordv = openfl_TextureCoord;\n\t\t\n\t\tgl_Position = openfl_Matrix * openfl_Position;\n\n\t\t\t\n\t\t}");
    Mf.call(this);
    this.uMultipliers.value = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
    this.uOffsets.value = [0, 0, 0, 0];
    this.__isGenerated = !0;
    this.__initGL();
  };
  p["openfl.filters._ColorMatrixFilter.ColorMatrixShader"] = oo;
  oo.__name__ = [
    "openfl",
    "filters",
    "_ColorMatrixFilter",
    "ColorMatrixShader",
  ];
  oo.__super__ = Mf;
  oo.prototype = x(Mf.prototype, {
    init: function (a) {
      var b = this.uMultipliers.value,
        c = this.uOffsets.value;
      b[0] = a[0];
      b[1] = a[1];
      b[2] = a[2];
      b[3] = a[3];
      b[4] = a[5];
      b[5] = a[6];
      b[6] = a[7];
      b[7] = a[8];
      b[8] = a[10];
      b[9] = a[11];
      b[10] = a[12];
      b[11] = a[13];
      b[12] = a[15];
      b[13] = a[16];
      b[14] = a[17];
      b[15] = a[18];
      c[0] = a[4] / 255;
      c[1] = a[9] / 255;
      c[2] = a[14] / 255;
      c[3] = a[19] / 255;
    },
    uMultipliers: null,
    uOffsets: null,
    __class__: oo,
  });
  var Vf = function (a) {
    vf.call(this);
    this.set_matrix(a);
    this.__numShaderPasses = 1;
    this.__needSecondBitmapData = !1;
  };
  p["openfl.filters.ColorMatrixFilter"] = Vf;
  Vf.__name__ = ["openfl", "filters", "ColorMatrixFilter"];
  Vf.__super__ = vf;
  Vf.prototype = x(vf.prototype, {
    __matrix: null,
    clone: function () {
      return new Vf(this.__matrix);
    },
    __applyFilter: function (a, b, c, d) {
      var e = b.image,
        f = a.image;
      pa.convertToData(e);
      pa.convertToData(f);
      var g = e.get_data(),
        h = f.get_data(),
        n = (d.x - c.x) | 0;
      d = (d.y - c.y) | 0;
      b = 4 * b.width;
      var k = 4 * a.width,
        m = e.buffer.format,
        l = f.buffer.format;
      e = e.buffer.premultiplied;
      f = f.buffer.premultiplied;
      for (var p, q = 0, r, t, u = c.y | 0, v = c.height | 0; u < v; )
        for (var w = u++, x = c.x | 0, y = c.width | 0; x < y; ) {
          t = x++;
          r = w * b + 4 * t;
          t = (w + n) * k + 4 * (t + d);
          switch (m) {
            case 0:
              p =
                ((g[r] & 255) << 24) |
                ((g[r + 1] & 255) << 16) |
                ((g[r + 2] & 255) << 8) |
                (g[r + 3] & 255);
              break;
            case 1:
              p =
                ((g[r + 1] & 255) << 24) |
                ((g[r + 2] & 255) << 16) |
                ((g[r + 3] & 255) << 8) |
                (g[r] & 255);
              break;
            case 2:
              p =
                ((g[r + 2] & 255) << 24) |
                ((g[r + 1] & 255) << 16) |
                ((g[r] & 255) << 8) |
                (g[r + 3] & 255);
          }
          e &&
            0 != (p & 255) &&
            255 != (p & 255) &&
            ((C.unmult = 255 / (p & 255)),
            (p =
              ((C.__clamp[Math.round(((p >>> 24) & 255) * C.unmult)] & 255) <<
                24) |
              ((C.__clamp[Math.round(((p >>> 16) & 255) * C.unmult)] & 255) <<
                16) |
              ((C.__clamp[Math.round(((p >>> 8) & 255) * C.unmult)] & 255) <<
                8) |
              (p & 255)));
          0 == (p & 255)
            ? (q = 0)
            : ((q =
                (((Math.max(
                  0,
                  Math.min(
                    this.__matrix[0] * ((p >>> 24) & 255) +
                      this.__matrix[1] * ((p >>> 16) & 255) +
                      this.__matrix[2] * ((p >>> 8) & 255) +
                      this.__matrix[3] * (p & 255) +
                      this.__matrix[4],
                    255
                  )
                ) |
                  0) &
                  255) <<
                  24) |
                (((q >>> 16) & 255) << 16) |
                (((q >>> 8) & 255) << 8) |
                (q & 255)),
              (q =
                (((q >>> 24) & 255) << 24) |
                (((Math.max(
                  0,
                  Math.min(
                    this.__matrix[5] * ((p >>> 24) & 255) +
                      this.__matrix[6] * ((p >>> 16) & 255) +
                      this.__matrix[7] * ((p >>> 8) & 255) +
                      this.__matrix[8] * (p & 255) +
                      this.__matrix[9],
                    255
                  )
                ) |
                  0) &
                  255) <<
                  16) |
                (((q >>> 8) & 255) << 8) |
                (q & 255)),
              (q =
                (((q >>> 24) & 255) << 24) |
                (((q >>> 16) & 255) << 16) |
                (((Math.max(
                  0,
                  Math.min(
                    this.__matrix[10] * ((p >>> 24) & 255) +
                      this.__matrix[11] * ((p >>> 16) & 255) +
                      this.__matrix[12] * ((p >>> 8) & 255) +
                      this.__matrix[13] * (p & 255) +
                      this.__matrix[14],
                    255
                  )
                ) |
                  0) &
                  255) <<
                  8) |
                (q & 255)),
              (q =
                (((q >>> 24) & 255) << 24) |
                (((q >>> 16) & 255) << 16) |
                (((q >>> 8) & 255) << 8) |
                ((Math.max(
                  0,
                  Math.min(
                    this.__matrix[15] * ((p >>> 24) & 255) +
                      this.__matrix[16] * ((p >>> 16) & 255) +
                      this.__matrix[17] * ((p >>> 8) & 255) +
                      this.__matrix[18] * (p & 255) +
                      this.__matrix[19],
                    255
                  )
                ) |
                  0) &
                  255)));
          f &&
            (0 == (q & 255)
              ? 0 != q && (q = 0)
              : 255 != (q & 255) &&
                ((C.a16 = C.__alpha16[q & 255]),
                (q =
                  ((((((q >>> 24) & 255) * C.a16) >> 16) & 255) << 24) |
                  ((((((q >>> 16) & 255) * C.a16) >> 16) & 255) << 16) |
                  ((((((q >>> 8) & 255) * C.a16) >> 16) & 255) << 8) |
                  (q & 255))));
          switch (l) {
            case 0:
              h[t] = (q >>> 24) & 255;
              h[t + 1] = (q >>> 16) & 255;
              h[t + 2] = (q >>> 8) & 255;
              h[t + 3] = q & 255;
              break;
            case 1:
              h[t] = q & 255;
              h[t + 1] = (q >>> 24) & 255;
              h[t + 2] = (q >>> 16) & 255;
              h[t + 3] = (q >>> 8) & 255;
              break;
            case 2:
              (h[t] = (q >>> 8) & 255),
                (h[t + 1] = (q >>> 16) & 255),
                (h[t + 2] = (q >>> 24) & 255),
                (h[t + 3] = q & 255);
          }
        }
      a.image.dirty = !0;
      return a;
    },
    __initShader: function (a, b) {
      Vf.__colorMatrixShader.init(this.get_matrix());
      return Vf.__colorMatrixShader;
    },
    get_matrix: function () {
      return this.__matrix;
    },
    set_matrix: function (a) {
      null == a &&
        (a = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0]);
      return (this.__matrix = a);
    },
    __class__: Vf,
    __properties__: { set_matrix: "set_matrix", get_matrix: "get_matrix" },
  });
  var Vk = function (a, b, c, d, e, f, g, h, n, k, m) {
    null == m && (m = !1);
    null == k && (k = !1);
    null == n && (n = !1);
    null == h && (h = 1);
    null == g && (g = 1);
    null == f && (f = 4);
    null == e && (e = 4);
    null == d && (d = 1);
    null == c && (c = 0);
    null == b && (b = 45);
    null == a && (a = 4);
    vf.call(this);
    this.__offsetY = this.__offsetX = 0;
    this.__distance = a;
    this.__angle = b;
    this.__color = c;
    this.__alpha = d;
    this.__blurX = e;
    this.__blurY = f;
    this.__strength = g;
    this.__quality = h;
    this.__inner = n;
    this.__knockout = k;
    this.__hideObject = m;
    this.__updateSize();
    this.__needSecondBitmapData = !0;
    this.__preserveObject = !this.__hideObject;
    this.__renderDirty = !0;
  };
  p["openfl.filters.DropShadowFilter"] = Vk;
  Vk.__name__ = ["openfl", "filters", "DropShadowFilter"];
  Vk.__super__ = vf;
  Vk.prototype = x(vf.prototype, {
    __alpha: null,
    __angle: null,
    __blurX: null,
    __blurY: null,
    __color: null,
    __distance: null,
    __hideObject: null,
    __inner: null,
    __knockout: null,
    __offsetX: null,
    __offsetY: null,
    __quality: null,
    __strength: null,
    clone: function () {
      return new Vk(
        this.__distance,
        this.__angle,
        this.__color,
        this.__alpha,
        this.__blurX,
        this.__blurY,
        this.__strength,
        this.__quality,
        this.__inner,
        this.__knockout,
        this.__hideObject
      );
    },
    __applyFilter: function (a, b, c, d) {
      var e = (this.__color >> 16) & 255,
        f = (this.__color >> 8) & 255,
        g = this.__color & 255;
      d = new Y(d.x + this.__offsetX, d.y + this.__offsetY);
      c = Z.gaussianBlur(
        a.image,
        b.image,
        c.__toLimeRectangle(),
        d.__toLimeVector2(),
        this.__blurX,
        this.__blurY,
        this.__quality,
        this.__strength
      );
      c.colorTransform(
        c.get_rect(),
        new sc(0, 0, 0, this.__alpha, e, f, g, 0).__toLimeColorMatrix()
      );
      return c == a.image ? a : b;
    },
    __updateSize: function () {
      this.__offsetX =
        (this.__distance * Math.cos((this.__angle * Math.PI) / 180)) | 0;
      this.__offsetY =
        (this.__distance * Math.sin((this.__angle * Math.PI) / 180)) | 0;
      this.__topExtension = Math.ceil(
        (0 > this.__offsetY ? -this.__offsetY : 0) + this.__blurY
      );
      this.__bottomExtension = Math.ceil(
        (0 < this.__offsetY ? this.__offsetY : 0) + this.__blurY
      );
      this.__leftExtension = Math.ceil(
        (0 > this.__offsetX ? -this.__offsetX : 0) + this.__blurX
      );
      this.__rightExtension = Math.ceil(
        (0 < this.__offsetX ? this.__offsetX : 0) + this.__blurX
      );
    },
    get_alpha: function () {
      return this.__alpha;
    },
    set_alpha: function (a) {
      a != this.__alpha && (this.__renderDirty = !0);
      return (this.__alpha = a);
    },
    get_angle: function () {
      return this.__angle;
    },
    set_angle: function (a) {
      a != this.__angle &&
        ((this.__angle = a), (this.__renderDirty = !0), this.__updateSize());
      return a;
    },
    get_blurX: function () {
      return this.__blurX;
    },
    set_blurX: function (a) {
      a != this.__blurX &&
        ((this.__blurX = a), (this.__renderDirty = !0), this.__updateSize());
      return a;
    },
    get_blurY: function () {
      return this.__blurY;
    },
    set_blurY: function (a) {
      a != this.__blurY &&
        ((this.__blurY = a), (this.__renderDirty = !0), this.__updateSize());
      return a;
    },
    get_color: function () {
      return this.__color;
    },
    set_color: function (a) {
      a != this.__color && (this.__renderDirty = !0);
      return (this.__color = a);
    },
    get_distance: function () {
      return this.__distance;
    },
    set_distance: function (a) {
      a != this.__distance &&
        ((this.__distance = a), (this.__renderDirty = !0), this.__updateSize());
      return a;
    },
    get_hideObject: function () {
      return this.__hideObject;
    },
    set_hideObject: function (a) {
      a != this.__hideObject &&
        ((this.__renderDirty = !0), (this.__preserveObject = !a));
      return (this.__hideObject = a);
    },
    get_inner: function () {
      return this.__inner;
    },
    set_inner: function (a) {
      a != this.__inner && (this.__renderDirty = !0);
      return (this.__inner = a);
    },
    get_knockout: function () {
      return this.__knockout;
    },
    set_knockout: function (a) {
      a != this.__knockout && (this.__renderDirty = !0);
      return (this.__knockout = a);
    },
    get_quality: function () {
      return this.__quality;
    },
    set_quality: function (a) {
      a != this.__quality && (this.__renderDirty = !0);
      return (this.__quality = a);
    },
    get_strength: function () {
      return this.__strength;
    },
    set_strength: function (a) {
      a != this.__strength && (this.__renderDirty = !0);
      return (this.__strength = a);
    },
    __class__: Vk,
    __properties__: {
      set_strength: "set_strength",
      get_strength: "get_strength",
      set_quality: "set_quality",
      get_quality: "get_quality",
      set_knockout: "set_knockout",
      get_knockout: "get_knockout",
      set_inner: "set_inner",
      get_inner: "get_inner",
      set_hideObject: "set_hideObject",
      get_hideObject: "get_hideObject",
      set_distance: "set_distance",
      get_distance: "get_distance",
      set_color: "set_color",
      get_color: "get_color",
      set_blurY: "set_blurY",
      get_blurY: "get_blurY",
      set_blurX: "set_blurX",
      get_blurX: "get_blurX",
      set_angle: "set_angle",
      get_angle: "get_angle",
      set_alpha: "set_alpha",
      get_alpha: "get_alpha",
    },
  });
  var po = function () {
    null == this.__glFragmentSource &&
      (this.__glFragmentSource =
        "uniform sampler2D openfl_Texture;\n\t\t\n\t\tuniform vec4 uColor;\n\t\t\n\t\tvarying vec2 vBlurCoords[7];\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tfloat a = 0.0;\n\t\t\ta += texture2D(openfl_Texture, vBlurCoords[0]).a * 0.00443;\n\t\t\ta += texture2D(openfl_Texture, vBlurCoords[1]).a * 0.05399;\n\t\t\ta += texture2D(openfl_Texture, vBlurCoords[2]).a * 0.24197;\n\t\t\ta += texture2D(openfl_Texture, vBlurCoords[3]).a * 0.39894;\n\t\t\ta += texture2D(openfl_Texture, vBlurCoords[4]).a * 0.24197;\n\t\t\ta += texture2D(openfl_Texture, vBlurCoords[5]).a * 0.05399;\n\t\t\ta += texture2D(openfl_Texture, vBlurCoords[6]).a * 0.00443;\n\t\t\ta *= uColor.a;\n\t\t\t\n\t\t\tgl_FragColor = vec4(uColor.rgb * a, a);\n\t\t\t\n\t\t}");
    null == this.__glVertexSource &&
      (this.__glVertexSource =
        "attribute vec4 openfl_Position;\n\t\tattribute vec2 openfl_TextureCoord;\n\t\t\n\t\tuniform mat4 openfl_Matrix;\n\t\tuniform vec2 openfl_TextureSize;\n\t\t\n\t\tuniform vec2 uRadius;\n\t\tvarying vec2 vBlurCoords[7];\n\t\t\n\t\tvoid main(void) {\n\t\t\t\n\t\t\tgl_Position = openfl_Matrix * openfl_Position;\n\t\t\t\n\t\t\tvec2 r = uRadius / openfl_TextureSize;\n\t\t\tvBlurCoords[0] = openfl_TextureCoord - r * 1.0;\n\t\t\tvBlurCoords[1] = openfl_TextureCoord - r * 0.75;\n\t\t\tvBlurCoords[2] = openfl_TextureCoord - r * 0.5;\n\t\t\tvBlurCoords[3] = openfl_TextureCoord;\n\t\t\tvBlurCoords[4] = openfl_TextureCoord + r * 0.5;\n\t\t\tvBlurCoords[5] = openfl_TextureCoord + r * 0.75;\n\t\t\tvBlurCoords[6] = openfl_TextureCoord + r * 1.0;\n\t\t\t\n\t\t}");
    Mf.call(this);
    this.uRadius.value = [0, 0];
    this.uColor.value = [0, 0, 0, 0];
    this.__isGenerated = !0;
    this.__initGL();
  };
  p["openfl.filters._GlowFilter.GlowShader"] = po;
  po.__name__ = ["openfl", "filters", "_GlowFilter", "GlowShader"];
  po.__super__ = Mf;
  po.prototype = x(Mf.prototype, {
    uRadius: null,
    uColor: null,
    __class__: po,
  });
  var tf = function (a, b, c, d, e, f, g, h) {
    null == h && (h = !1);
    null == g && (g = !1);
    null == f && (f = 1);
    null == e && (e = 2);
    null == d && (d = 6);
    null == c && (c = 6);
    null == b && (b = 1);
    null == a && (a = 16711680);
    vf.call(this);
    this.__color = a;
    this.__alpha = b;
    this.set_blurX(c);
    this.set_blurY(d);
    this.__strength = e;
    this.set_quality(f);
    this.__inner = g;
    this.__knockout = h;
    this.__renderDirty =
      this.__preserveObject =
      this.__needSecondBitmapData =
        !0;
  };
  p["openfl.filters.GlowFilter"] = tf;
  tf.__name__ = ["openfl", "filters", "GlowFilter"];
  tf.__super__ = vf;
  tf.prototype = x(vf.prototype, {
    __alpha: null,
    __blurX: null,
    __blurY: null,
    __color: null,
    __horizontalPasses: null,
    __inner: null,
    __knockout: null,
    __quality: null,
    __strength: null,
    __verticalPasses: null,
    clone: function () {
      return new tf(
        this.__color,
        this.__alpha,
        this.__blurX,
        this.__blurY,
        this.__strength,
        this.__quality,
        this.__inner,
        this.__knockout
      );
    },
    __applyFilter: function (a, b, c, d) {
      var e = (this.__color >> 16) & 255,
        f = (this.__color >> 8) & 255,
        g = this.__color & 255;
      c = Z.gaussianBlur(
        a.image,
        b.image,
        c.__toLimeRectangle(),
        d.__toLimeVector2(),
        this.__blurX,
        this.__blurY,
        this.__quality,
        this.__strength
      );
      c.colorTransform(
        c.get_rect(),
        new sc(0, 0, 0, this.__alpha, e, f, g, 0).__toLimeColorMatrix()
      );
      return c == a.image ? a : b;
    },
    __initShader: function (a, b) {
      b <= this.__horizontalPasses
        ? ((a = Math.pow(0.5, b >> 1)),
          (tf.__glowShader.uRadius.value[0] = this.get_blurX() * a),
          (tf.__glowShader.uRadius.value[1] = 0))
        : ((a = Math.pow(0.5, (b - this.__horizontalPasses) >> 1)),
          (tf.__glowShader.uRadius.value[0] = 0),
          (tf.__glowShader.uRadius.value[1] = this.get_blurY() * a));
      tf.__glowShader.uColor.value[0] = ((this.get_color() >> 16) & 255) / 255;
      tf.__glowShader.uColor.value[1] = ((this.get_color() >> 8) & 255) / 255;
      tf.__glowShader.uColor.value[2] = (this.get_color() & 255) / 255;
      tf.__glowShader.uColor.value[3] =
        this.get_alpha() * (this.__strength / this.__numShaderPasses);
      return tf.__glowShader;
    },
    get_alpha: function () {
      return this.__alpha;
    },
    set_alpha: function (a) {
      a != this.__alpha && (this.__renderDirty = !0);
      return (this.__alpha = a);
    },
    get_blurX: function () {
      return this.__blurX;
    },
    set_blurX: function (a) {
      a != this.__blurX &&
        ((this.__blurX = a),
        (this.__renderDirty = !0),
        (this.__rightExtension = this.__leftExtension =
          0 < a ? Math.ceil(1.5 * a) : 0));
      return a;
    },
    get_blurY: function () {
      return this.__blurY;
    },
    set_blurY: function (a) {
      a != this.__blurY &&
        ((this.__blurY = a),
        (this.__renderDirty = !0),
        (this.__bottomExtension = this.__topExtension =
          0 < a ? Math.ceil(1.5 * a) : 0));
      return a;
    },
    get_color: function () {
      return this.__color;
    },
    set_color: function (a) {
      a != this.__color && (this.__renderDirty = !0);
      return (this.__color = a);
    },
    get_inner: function () {
      return this.__inner;
    },
    set_inner: function (a) {
      a != this.__inner && (this.__renderDirty = !0);
      return (this.__inner = a);
    },
    get_knockout: function () {
      return this.__knockout;
    },
    set_knockout: function (a) {
      a != this.__knockout && (this.__renderDirty = !0);
      return (this.__knockout = a);
    },
    get_quality: function () {
      return this.__quality;
    },
    set_quality: function (a) {
      this.__horizontalPasses =
        0 >= this.__blurX ? 0 : Math.round((a / 4) * this.__blurX) + 1;
      this.__verticalPasses =
        0 >= this.__blurY ? 0 : Math.round((a / 4) * this.__blurY) + 1;
      this.__numShaderPasses = this.__horizontalPasses + this.__verticalPasses;
      a != this.__quality && (this.__renderDirty = !0);
      return (this.__quality = a);
    },
    get_strength: function () {
      return this.__strength;
    },
    set_strength: function (a) {
      a != this.__strength && (this.__renderDirty = !0);
      return (this.__strength = a);
    },
    __class__: tf,
    __properties__: {
      set_strength: "set_strength",
      get_strength: "get_strength",
      set_quality: "set_quality",
      get_quality: "get_quality",
      set_knockout: "set_knockout",
      get_knockout: "get_knockout",
      set_inner: "set_inner",
      get_inner: "get_inner",
      set_color: "set_color",
      get_color: "get_color",
      set_blurY: "set_blurY",
      get_blurY: "get_blurY",
      set_blurX: "set_blurX",
      get_blurX: "get_blurX",
      set_alpha: "set_alpha",
      get_alpha: "get_alpha",
    },
  });
  var ke = function (a) {
    null != a && 16 == a.get_length()
      ? (this.rawData = a.concat(null))
      : (this.rawData = Oa.toFloatVector(
          null,
          null,
          null,
          [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
        ));
  };
  p["openfl.geom.Matrix3D"] = ke;
  ke.__name__ = ["openfl", "geom", "Matrix3D"];
  ke.create2D = function (a, b, c, d) {
    null == d && (d = 0);
    null == c && (c = 1);
    var e = (d * Math.PI) / 180;
    d = Math.cos(e);
    e = Math.sin(e);
    return new ke(
      Oa.toFloatVector(null, null, null, [
        d * c,
        -e * c,
        0,
        0,
        e * c,
        d * c,
        0,
        0,
        0,
        0,
        1,
        0,
        a,
        b,
        0,
        1,
      ])
    );
  };
  ke.createABCD = function (a, b, c, d, e, f) {
    return new ke(
      Oa.toFloatVector(null, null, null, [
        a,
        b,
        0,
        0,
        c,
        d,
        0,
        0,
        0,
        0,
        1,
        0,
        e,
        f,
        0,
        1,
      ])
    );
  };
  ke.createOrtho = function (a, b, c, d, e, f) {
    var g = 1 / (b - a),
      h = 1 / (d - c),
      n = 1 / (f - e);
    return new ke(
      Oa.toFloatVector(null, null, null, [
        2 * g,
        0,
        0,
        0,
        0,
        2 * h,
        0,
        0,
        0,
        0,
        -2 * n,
        0,
        -(a + b) * g,
        -(c + d) * h,
        -(e + f) * n,
        1,
      ])
    );
  };
  ke.interpolate = function (a, b, c) {
    for (var d = new ke(), e = 0; 16 > e; ) {
      var f = e++;
      d.rawData.set(
        f,
        a.rawData.get(f) + (b.rawData.get(f) - a.rawData.get(f)) * c
      );
    }
    return d;
  };
  ke.__getAxisRotation = function (a, b, c, d) {
    var e = new ke();
    a = new ed(a, b, c);
    d = (Math.PI / 180) * -d;
    c = Math.cos(d);
    d = Math.sin(d);
    b = 1 - c;
    e.rawData.set(0, c + a.x * a.x * b);
    e.rawData.set(5, c + a.y * a.y * b);
    e.rawData.set(10, c + a.z * a.z * b);
    c = a.x * a.y * b;
    var f = a.z * d;
    e.rawData.set(4, c + f);
    e.rawData.set(1, c - f);
    c = a.x * a.z * b;
    f = a.y * d;
    e.rawData.set(8, c - f);
    e.rawData.set(2, c + f);
    c = a.y * a.z * b;
    f = a.x * d;
    e.rawData.set(9, c + f);
    e.rawData.set(6, c - f);
    return e;
  };
  ke.prototype = {
    rawData: null,
    append: function (a) {
      var b = this.rawData.get(0),
        c = this.rawData.get(4),
        d = this.rawData.get(8),
        e = this.rawData.get(12),
        f = this.rawData.get(1),
        g = this.rawData.get(5),
        h = this.rawData.get(9),
        n = this.rawData.get(13),
        k = this.rawData.get(2),
        m = this.rawData.get(6),
        l = this.rawData.get(10),
        p = this.rawData.get(14),
        q = this.rawData.get(3),
        r = this.rawData.get(7),
        t = this.rawData.get(11),
        u = this.rawData.get(15),
        v = a.rawData.get(0),
        w = a.rawData.get(4),
        x = a.rawData.get(8),
        y = a.rawData.get(12),
        z = a.rawData.get(1),
        A = a.rawData.get(5),
        B = a.rawData.get(9),
        C = a.rawData.get(13),
        D = a.rawData.get(2),
        E = a.rawData.get(6),
        F = a.rawData.get(10),
        H = a.rawData.get(14),
        I = a.rawData.get(3),
        J = a.rawData.get(7),
        L = a.rawData.get(11);
      a = a.rawData.get(15);
      this.rawData.set(0, b * v + f * w + k * x + q * y);
      this.rawData.set(1, b * z + f * A + k * B + q * C);
      this.rawData.set(2, b * D + f * E + k * F + q * H);
      this.rawData.set(3, b * I + f * J + k * L + q * a);
      this.rawData.set(4, c * v + g * w + m * x + r * y);
      this.rawData.set(5, c * z + g * A + m * B + r * C);
      this.rawData.set(6, c * D + g * E + m * F + r * H);
      this.rawData.set(7, c * I + g * J + m * L + r * a);
      this.rawData.set(8, d * v + h * w + l * x + t * y);
      this.rawData.set(9, d * z + h * A + l * B + t * C);
      this.rawData.set(10, d * D + h * E + l * F + t * H);
      this.rawData.set(11, d * I + h * J + l * L + t * a);
      this.rawData.set(12, e * v + n * w + p * x + u * y);
      this.rawData.set(13, e * z + n * A + p * B + u * C);
      this.rawData.set(14, e * D + n * E + p * F + u * H);
      this.rawData.set(15, e * I + n * J + p * L + u * a);
    },
    appendRotation: function (a, b, c) {
      var d,
        e = 0;
      var f = (d = e);
      null != c && ((f = c.x), (d = c.y), (e = c.z));
      c = (a * Math.PI) / 180;
      a = Math.cos(c);
      c = Math.sin(c);
      var g = b.x,
        h = b.y;
      b = b.z;
      var n = g * g,
        k = h * h,
        m = b * b,
        l = n + k + m;
      if (0 != l) {
        var p = Math.sqrt(l);
        g /= p;
        h /= p;
        b /= p;
        n /= l;
        k /= l;
        m /= l;
      }
      l = 1 - a;
      p = new ke();
      var q = p.rawData;
      q.set(0, n + (k + m) * a);
      q.set(1, g * h * l + b * c);
      q.set(2, g * b * l - h * c);
      q.set(4, g * h * l - b * c);
      q.set(5, k + (n + m) * a);
      q.set(6, h * b * l + g * c);
      q.set(8, g * b * l + h * c);
      q.set(9, h * b * l - g * c);
      q.set(10, m + (n + k) * a);
      q.set(12, (f * (k + m) - g * (d * h + e * b)) * l + (d * b - e * h) * c);
      q.set(13, (d * (n + m) - h * (f * g + e * b)) * l + (e * g - f * b) * c);
      q.set(14, (e * (n + k) - b * (f * g + d * h)) * l + (f * h - d * g) * c);
      this.append(p);
    },
    appendScale: function (a, b, c) {
      this.append(
        new ke(
          Oa.toFloatVector(null, null, null, [
            a,
            0,
            0,
            0,
            0,
            b,
            0,
            0,
            0,
            0,
            c,
            0,
            0,
            0,
            0,
            1,
          ])
        )
      );
    },
    appendTranslation: function (a, b, c) {
      var d = this.rawData;
      d.set(12, d.get(12) + a);
      a = this.rawData;
      a.set(13, a.get(13) + b);
      b = this.rawData;
      b.set(14, b.get(14) + c);
    },
    clone: function () {
      return new ke(this.rawData.copy());
    },
    copyColumnFrom: function (a, b) {
      switch (a) {
        case 0:
          this.rawData.set(0, b.x);
          this.rawData.set(1, b.y);
          this.rawData.set(2, b.z);
          this.rawData.set(3, b.w);
          break;
        case 1:
          this.rawData.set(4, b.x);
          this.rawData.set(5, b.y);
          this.rawData.set(6, b.z);
          this.rawData.set(7, b.w);
          break;
        case 2:
          this.rawData.set(8, b.x);
          this.rawData.set(9, b.y);
          this.rawData.set(10, b.z);
          this.rawData.set(11, b.w);
          break;
        case 3:
          this.rawData.set(12, b.x),
            this.rawData.set(13, b.y),
            this.rawData.set(14, b.z),
            this.rawData.set(15, b.w);
      }
    },
    copyColumnTo: function (a, b) {
      switch (a) {
        case 0:
          b.x = this.rawData.get(0);
          b.y = this.rawData.get(1);
          b.z = this.rawData.get(2);
          b.w = this.rawData.get(3);
          break;
        case 1:
          b.x = this.rawData.get(4);
          b.y = this.rawData.get(5);
          b.z = this.rawData.get(6);
          b.w = this.rawData.get(7);
          break;
        case 2:
          b.x = this.rawData.get(8);
          b.y = this.rawData.get(9);
          b.z = this.rawData.get(10);
          b.w = this.rawData.get(11);
          break;
        case 3:
          (b.x = this.rawData.get(12)),
            (b.y = this.rawData.get(13)),
            (b.z = this.rawData.get(14)),
            (b.w = this.rawData.get(15));
      }
    },
    copyFrom: function (a) {
      this.rawData = a.rawData.copy();
    },
    copyRawDataFrom: function (a, b, c) {
      null == c && (c = !1);
      null == b && (b = 0);
      c && this.transpose();
      for (var d = 0, e = a.get_length() - b; d < e; ) {
        var f = d++;
        this.rawData.set(f, a.get(f + b));
      }
      c && this.transpose();
    },
    copyRawDataTo: function (a, b, c) {
      null == c && (c = !1);
      null == b && (b = 0);
      c && this.transpose();
      for (var d = 0, e = this.rawData.get_length(); d < e; ) {
        var f = d++;
        a.set(f + b, this.rawData.get(f));
      }
      c && this.transpose();
    },
    copyRowFrom: function (a, b) {
      switch (a) {
        case 0:
          this.rawData.set(0, b.x);
          this.rawData.set(4, b.y);
          this.rawData.set(8, b.z);
          this.rawData.set(12, b.w);
          break;
        case 1:
          this.rawData.set(1, b.x);
          this.rawData.set(5, b.y);
          this.rawData.set(9, b.z);
          this.rawData.set(13, b.w);
          break;
        case 2:
          this.rawData.set(2, b.x);
          this.rawData.set(6, b.y);
          this.rawData.set(10, b.z);
          this.rawData.set(14, b.w);
          break;
        case 3:
          this.rawData.set(3, b.x),
            this.rawData.set(7, b.y),
            this.rawData.set(11, b.z),
            this.rawData.set(15, b.w);
      }
    },
    copyRowTo: function (a, b) {
      switch (a) {
        case 0:
          b.x = this.rawData.get(0);
          b.y = this.rawData.get(4);
          b.z = this.rawData.get(8);
          b.w = this.rawData.get(12);
          break;
        case 1:
          b.x = this.rawData.get(1);
          b.y = this.rawData.get(5);
          b.z = this.rawData.get(9);
          b.w = this.rawData.get(13);
          break;
        case 2:
          b.x = this.rawData.get(2);
          b.y = this.rawData.get(6);
          b.z = this.rawData.get(10);
          b.w = this.rawData.get(14);
          break;
        case 3:
          (b.x = this.rawData.get(3)),
            (b.y = this.rawData.get(7)),
            (b.z = this.rawData.get(11)),
            (b.w = this.rawData.get(15));
      }
    },
    copyToMatrix3D: function (a) {
      a.rawData = this.rawData.copy();
    },
    decompose: function (a) {
      null == a && (a = 1);
      var b = Oa.toObjectVector(null),
        c = this.clone().rawData.copy(),
        d = new ed(c.get(12), c.get(13), c.get(14));
      c.set(12, 0);
      c.set(13, 0);
      c.set(14, 0);
      var e = new ed();
      e.x = Math.sqrt(
        c.get(0) * c.get(0) + c.get(1) * c.get(1) + c.get(2) * c.get(2)
      );
      e.y = Math.sqrt(
        c.get(4) * c.get(4) + c.get(5) * c.get(5) + c.get(6) * c.get(6)
      );
      e.z = Math.sqrt(
        c.get(8) * c.get(8) + c.get(9) * c.get(9) + c.get(10) * c.get(10)
      );
      0 >
        c.get(0) * (c.get(5) * c.get(10) - c.get(6) * c.get(9)) -
          c.get(1) * (c.get(4) * c.get(10) - c.get(6) * c.get(8)) +
          c.get(2) * (c.get(4) * c.get(9) - c.get(5) * c.get(8)) &&
        (e.z = -e.z);
      c.set(0, c.get(0) / e.x);
      c.set(1, c.get(1) / e.x);
      c.set(2, c.get(2) / e.x);
      c.set(4, c.get(4) / e.y);
      c.set(5, c.get(5) / e.y);
      c.set(6, c.get(6) / e.y);
      c.set(8, c.get(8) / e.z);
      c.set(9, c.get(9) / e.z);
      c.set(10, c.get(10) / e.z);
      var f = new ed();
      switch (a) {
        case 0:
          f.w = Math.acos((c.get(0) + c.get(5) + c.get(10) - 1) / 2);
          a = Math.sqrt(
            (c.get(6) - c.get(9)) * (c.get(6) - c.get(9)) +
              (c.get(8) - c.get(2)) * (c.get(8) - c.get(2)) +
              (c.get(1) - c.get(4)) * (c.get(1) - c.get(4))
          );
          0 != a
            ? ((f.x = (c.get(6) - c.get(9)) / a),
              (f.y = (c.get(8) - c.get(2)) / a),
              (f.z = (c.get(1) - c.get(4)) / a))
            : (f.x = f.y = f.z = 0);
          break;
        case 1:
          f.y = Math.asin(-c.get(2));
          1 != c.get(2) && -1 != c.get(2)
            ? ((f.x = Math.atan2(c.get(6), c.get(10))),
              (f.z = Math.atan2(c.get(1), c.get(0))))
            : ((f.z = 0), (f.x = Math.atan2(c.get(4), c.get(5))));
          break;
        case 2:
          (a = c.get(0) + c.get(5) + c.get(10)),
            0 < a
              ? ((f.w = Math.sqrt(1 + a) / 2),
                (f.x = (c.get(6) - c.get(9)) / (4 * f.w)),
                (f.y = (c.get(8) - c.get(2)) / (4 * f.w)),
                (f.z = (c.get(1) - c.get(4)) / (4 * f.w)))
              : c.get(0) > c.get(5) && c.get(0) > c.get(10)
              ? ((f.x = Math.sqrt(1 + c.get(0) - c.get(5) - c.get(10)) / 2),
                (f.w = (c.get(6) - c.get(9)) / (4 * f.x)),
                (f.y = (c.get(1) + c.get(4)) / (4 * f.x)),
                (f.z = (c.get(8) + c.get(2)) / (4 * f.x)))
              : c.get(5) > c.get(10)
              ? ((f.y = Math.sqrt(1 + c.get(5) - c.get(0) - c.get(10)) / 2),
                (f.x = (c.get(1) + c.get(4)) / (4 * f.y)),
                (f.w = (c.get(8) - c.get(2)) / (4 * f.y)),
                (f.z = (c.get(6) + c.get(9)) / (4 * f.y)))
              : ((f.z = Math.sqrt(1 + c.get(10) - c.get(0) - c.get(5)) / 2),
                (f.x = (c.get(8) + c.get(2)) / (4 * f.z)),
                (f.y = (c.get(6) + c.get(9)) / (4 * f.z)),
                (f.w = (c.get(1) - c.get(4)) / (4 * f.z)));
      }
      b.push(d);
      b.push(f);
      b.push(e);
      return b;
    },
    deltaTransformVector: function (a) {
      var b = a.x,
        c = a.y;
      a = a.z;
      return new ed(
        b * this.rawData.get(0) +
          c * this.rawData.get(4) +
          a * this.rawData.get(8) +
          this.rawData.get(3),
        b * this.rawData.get(1) +
          c * this.rawData.get(5) +
          a * this.rawData.get(9) +
          this.rawData.get(7),
        b * this.rawData.get(2) +
          c * this.rawData.get(6) +
          a * this.rawData.get(10) +
          this.rawData.get(11),
        0
      );
    },
    identity: function () {
      this.rawData = Oa.toFloatVector(
        null,
        null,
        null,
        [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
      );
    },
    interpolateTo: function (a, b) {
      for (var c = 0; 16 > c; ) {
        var d = c++;
        this.rawData.set(
          d,
          this.rawData.get(d) + (a.rawData.get(d) - this.rawData.get(d)) * b
        );
      }
    },
    invert: function () {
      var a = this.get_determinant(),
        b = 1e-11 < Math.abs(a);
      if (b) {
        a = 1 / a;
        var c = this.rawData.get(0),
          d = this.rawData.get(4),
          e = this.rawData.get(8),
          f = this.rawData.get(12),
          g = this.rawData.get(1),
          h = this.rawData.get(5),
          n = this.rawData.get(9),
          k = this.rawData.get(13),
          m = this.rawData.get(2),
          l = this.rawData.get(6),
          p = this.rawData.get(10),
          q = this.rawData.get(14),
          r = this.rawData.get(3),
          t = this.rawData.get(7),
          u = this.rawData.get(11),
          v = this.rawData.get(15);
        this.rawData.set(
          0,
          a * (h * (p * v - q * u) - n * (l * v - q * t) + k * (l * u - p * t))
        );
        this.rawData.set(
          1,
          -a * (g * (p * v - q * u) - n * (m * v - q * r) + k * (m * u - p * r))
        );
        this.rawData.set(
          2,
          a * (g * (l * v - q * t) - h * (m * v - q * r) + k * (m * t - l * r))
        );
        this.rawData.set(
          3,
          -a * (g * (l * u - p * t) - h * (m * u - p * r) + n * (m * t - l * r))
        );
        this.rawData.set(
          4,
          -a * (d * (p * v - q * u) - e * (l * v - q * t) + f * (l * u - p * t))
        );
        this.rawData.set(
          5,
          a * (c * (p * v - q * u) - e * (m * v - q * r) + f * (m * u - p * r))
        );
        this.rawData.set(
          6,
          -a * (c * (l * v - q * t) - d * (m * v - q * r) + f * (m * t - l * r))
        );
        this.rawData.set(
          7,
          a * (c * (l * u - p * t) - d * (m * u - p * r) + e * (m * t - l * r))
        );
        this.rawData.set(
          8,
          a * (d * (n * v - k * u) - e * (h * v - k * t) + f * (h * u - n * t))
        );
        this.rawData.set(
          9,
          -a * (c * (n * v - k * u) - e * (g * v - k * r) + f * (g * u - n * r))
        );
        this.rawData.set(
          10,
          a * (c * (h * v - k * t) - d * (g * v - k * r) + f * (g * t - h * r))
        );
        this.rawData.set(
          11,
          -a * (c * (h * u - n * t) - d * (g * u - n * r) + e * (g * t - h * r))
        );
        this.rawData.set(
          12,
          -a * (d * (n * q - k * p) - e * (h * q - k * l) + f * (h * p - n * l))
        );
        this.rawData.set(
          13,
          a * (c * (n * q - k * p) - e * (g * q - k * m) + f * (g * p - n * m))
        );
        this.rawData.set(
          14,
          -a * (c * (h * q - k * l) - d * (g * q - k * m) + f * (g * l - h * m))
        );
        this.rawData.set(
          15,
          a * (c * (h * p - n * l) - d * (g * p - n * m) + e * (g * l - h * m))
        );
      }
      return b;
    },
    pointAt: function (a, b, c) {
      null == b && (b = new ed(0, 0, -1));
      null == c && (c = new ed(0, -1, 0));
      b = b.subtract(a);
      c = c.clone();
      b.normalize();
      c.normalize();
      var d = b.clone();
      d.scaleBy(c.dotProduct(b));
      c = c.subtract(d);
      0 < c.get_length()
        ? c.normalize()
        : (c = 0 != b.x ? new ed(-b.y, b.x, 0) : new ed(1, 0, 0));
      d = c.crossProduct(b);
      d.normalize();
      this.rawData.set(0, d.x);
      this.rawData.set(4, d.y);
      this.rawData.set(8, d.z);
      this.rawData.set(12, 0);
      this.rawData.set(1, c.x);
      this.rawData.set(5, c.y);
      this.rawData.set(9, c.z);
      this.rawData.set(13, 0);
      this.rawData.set(2, b.x);
      this.rawData.set(6, b.y);
      this.rawData.set(10, b.z);
      this.rawData.set(14, 0);
      this.rawData.set(3, a.x);
      this.rawData.set(7, a.y);
      this.rawData.set(11, a.z);
      this.rawData.set(15, 1);
    },
    prepend: function (a) {
      var b = a.rawData.get(0),
        c = a.rawData.get(4),
        d = a.rawData.get(8),
        e = a.rawData.get(12),
        f = a.rawData.get(1),
        g = a.rawData.get(5),
        h = a.rawData.get(9),
        m = a.rawData.get(13),
        k = a.rawData.get(2),
        p = a.rawData.get(6),
        l = a.rawData.get(10),
        q = a.rawData.get(14),
        r = a.rawData.get(3),
        t = a.rawData.get(7),
        u = a.rawData.get(11);
      a = a.rawData.get(15);
      var v = this.rawData.get(0),
        w = this.rawData.get(4),
        x = this.rawData.get(8),
        y = this.rawData.get(12),
        z = this.rawData.get(1),
        A = this.rawData.get(5),
        B = this.rawData.get(9),
        C = this.rawData.get(13),
        D = this.rawData.get(2),
        E = this.rawData.get(6),
        F = this.rawData.get(10),
        H = this.rawData.get(14),
        I = this.rawData.get(3),
        J = this.rawData.get(7),
        L = this.rawData.get(11),
        K = this.rawData.get(15);
      this.rawData.set(0, b * v + f * w + k * x + r * y);
      this.rawData.set(1, b * z + f * A + k * B + r * C);
      this.rawData.set(2, b * D + f * E + k * F + r * H);
      this.rawData.set(3, b * I + f * J + k * L + r * K);
      this.rawData.set(4, c * v + g * w + p * x + t * y);
      this.rawData.set(5, c * z + g * A + p * B + t * C);
      this.rawData.set(6, c * D + g * E + p * F + t * H);
      this.rawData.set(7, c * I + g * J + p * L + t * K);
      this.rawData.set(8, d * v + h * w + l * x + u * y);
      this.rawData.set(9, d * z + h * A + l * B + u * C);
      this.rawData.set(10, d * D + h * E + l * F + u * H);
      this.rawData.set(11, d * I + h * J + l * L + u * K);
      this.rawData.set(12, e * v + m * w + q * x + a * y);
      this.rawData.set(13, e * z + m * A + q * B + a * C);
      this.rawData.set(14, e * D + m * E + q * F + a * H);
      this.rawData.set(15, e * I + m * J + q * L + a * K);
    },
    prependRotation: function (a, b, c) {
      var d,
        e = 0;
      var f = (d = e);
      null != c && ((f = c.x), (d = c.y), (e = c.z));
      c = (a * Math.PI) / 180;
      a = Math.cos(c);
      c = Math.sin(c);
      var g = b.x,
        h = b.y;
      b = b.z;
      var m = g * g,
        k = h * h,
        p = b * b,
        l = m + k + p;
      if (0 != l) {
        var q = Math.sqrt(l);
        g /= q;
        h /= q;
        b /= q;
        m /= l;
        k /= l;
        p /= l;
      }
      l = 1 - a;
      q = new ke();
      var r = q.rawData;
      r.set(0, m + (k + p) * a);
      r.set(1, g * h * l + b * c);
      r.set(2, g * b * l - h * c);
      r.set(4, g * h * l - b * c);
      r.set(5, k + (m + p) * a);
      r.set(6, h * b * l + g * c);
      r.set(8, g * b * l + h * c);
      r.set(9, h * b * l - g * c);
      r.set(10, p + (m + k) * a);
      r.set(12, (f * (k + p) - g * (d * h + e * b)) * l + (d * b - e * h) * c);
      r.set(13, (d * (m + p) - h * (f * g + e * b)) * l + (e * g - f * b) * c);
      r.set(14, (e * (m + k) - b * (f * g + d * h)) * l + (f * h - d * g) * c);
      this.prepend(q);
    },
    prependScale: function (a, b, c) {
      this.prepend(
        new ke(
          Oa.toFloatVector(null, null, null, [
            a,
            0,
            0,
            0,
            0,
            b,
            0,
            0,
            0,
            0,
            c,
            0,
            0,
            0,
            0,
            1,
          ])
        )
      );
    },
    prependTranslation: function (a, b, c) {
      var d = new ke();
      d.set_position(new ed(a, b, c));
      this.prepend(d);
    },
    recompose: function (a, b) {
      if (
        3 > a.get_length() ||
        0 == a.get(2).x ||
        0 == a.get(2).y ||
        0 == a.get(2).z
      )
        return !1;
      null == b && (b = 1);
      this.identity();
      var c = [];
      c[0] = c[1] = c[2] = a.get(2).x;
      c[4] = c[5] = c[6] = a.get(2).y;
      c[8] = c[9] = c[10] = a.get(2).z;
      if (null == b) {
        var d = a.get(1).x,
          e = a.get(1).y,
          f = a.get(1).z,
          g = a.get(1).w;
        0 == b &&
          ((d *= Math.sin(g / 2)),
          (e *= Math.sin(g / 2)),
          (f *= Math.sin(g / 2)),
          (g = Math.cos(g / 2)));
        this.rawData.set(0, (1 - 2 * e * e - 2 * f * f) * c[0]);
        this.rawData.set(1, (2 * d * e + 2 * g * f) * c[1]);
        this.rawData.set(2, (2 * d * f - 2 * g * e) * c[2]);
        this.rawData.set(3, 0);
        this.rawData.set(4, (2 * d * e - 2 * g * f) * c[4]);
        this.rawData.set(5, (1 - 2 * d * d - 2 * f * f) * c[5]);
        this.rawData.set(6, (2 * e * f + 2 * g * d) * c[6]);
        this.rawData.set(7, 0);
        this.rawData.set(8, (2 * d * f + 2 * g * e) * c[8]);
        this.rawData.set(9, (2 * e * f - 2 * g * d) * c[9]);
        this.rawData.set(10, (1 - 2 * d * d - 2 * e * e) * c[10]);
      } else if (1 == b) {
        b = Math.cos(a.get(1).x);
        d = Math.cos(a.get(1).y);
        e = Math.cos(a.get(1).z);
        f = Math.sin(a.get(1).x);
        g = Math.sin(a.get(1).y);
        var h = Math.sin(a.get(1).z);
        this.rawData.set(0, d * e * c[0]);
        this.rawData.set(1, d * h * c[1]);
        this.rawData.set(2, -g * c[2]);
        this.rawData.set(3, 0);
        this.rawData.set(4, (f * g * e - b * h) * c[4]);
        this.rawData.set(5, (f * g * h + b * e) * c[5]);
        this.rawData.set(6, f * d * c[6]);
        this.rawData.set(7, 0);
        this.rawData.set(8, (b * g * e + f * h) * c[8]);
        this.rawData.set(9, (b * g * h - f * e) * c[9]);
        this.rawData.set(10, b * d * c[10]);
      } else
        (d = a.get(1).x),
          (e = a.get(1).y),
          (f = a.get(1).z),
          (g = a.get(1).w),
          0 == b &&
            ((d *= Math.sin(g / 2)),
            (e *= Math.sin(g / 2)),
            (f *= Math.sin(g / 2)),
            (g = Math.cos(g / 2))),
          this.rawData.set(0, (1 - 2 * e * e - 2 * f * f) * c[0]),
          this.rawData.set(1, (2 * d * e + 2 * g * f) * c[1]),
          this.rawData.set(2, (2 * d * f - 2 * g * e) * c[2]),
          this.rawData.set(3, 0),
          this.rawData.set(4, (2 * d * e - 2 * g * f) * c[4]),
          this.rawData.set(5, (1 - 2 * d * d - 2 * f * f) * c[5]),
          this.rawData.set(6, (2 * e * f + 2 * g * d) * c[6]),
          this.rawData.set(7, 0),
          this.rawData.set(8, (2 * d * f + 2 * g * e) * c[8]),
          this.rawData.set(9, (2 * e * f - 2 * g * d) * c[9]),
          this.rawData.set(10, (1 - 2 * d * d - 2 * e * e) * c[10]);
      this.rawData.set(11, 0);
      this.rawData.set(12, a.get(0).x);
      this.rawData.set(13, a.get(0).y);
      this.rawData.set(14, a.get(0).z);
      this.rawData.set(15, 1);
      0 == a.get(2).x && this.rawData.set(0, 1e-15);
      0 == a.get(2).y && this.rawData.set(5, 1e-15);
      0 == a.get(2).z && this.rawData.set(10, 1e-15);
      return !(0 == a.get(2).x || 0 == a.get(2).y || 0 == a.get(2).y);
    },
    transformVector: function (a) {
      var b = a.x,
        c = a.y;
      a = a.z;
      return new ed(
        b * this.rawData.get(0) +
          c * this.rawData.get(4) +
          a * this.rawData.get(8) +
          this.rawData.get(12),
        b * this.rawData.get(1) +
          c * this.rawData.get(5) +
          a * this.rawData.get(9) +
          this.rawData.get(13),
        b * this.rawData.get(2) +
          c * this.rawData.get(6) +
          a * this.rawData.get(10) +
          this.rawData.get(14),
        b * this.rawData.get(3) +
          c * this.rawData.get(7) +
          a * this.rawData.get(11) +
          this.rawData.get(15)
      );
    },
    transformVectors: function (a, b) {
      for (var c = 0, d, e, f; c + 3 <= a.get_length(); )
        (d = a.get(c)),
          (e = a.get(c + 1)),
          (f = a.get(c + 2)),
          b.set(
            c,
            d * this.rawData.get(0) +
              e * this.rawData.get(4) +
              f * this.rawData.get(8) +
              this.rawData.get(12)
          ),
          b.set(
            c + 1,
            d * this.rawData.get(1) +
              e * this.rawData.get(5) +
              f * this.rawData.get(9) +
              this.rawData.get(13)
          ),
          b.set(
            c + 2,
            d * this.rawData.get(2) +
              e * this.rawData.get(6) +
              f * this.rawData.get(10) +
              this.rawData.get(14)
          ),
          (c += 3);
    },
    transpose: function () {
      var a = this.rawData.copy();
      this.rawData.set(1, a.get(4));
      this.rawData.set(2, a.get(8));
      this.rawData.set(3, a.get(12));
      this.rawData.set(4, a.get(1));
      this.rawData.set(6, a.get(9));
      this.rawData.set(7, a.get(13));
      this.rawData.set(8, a.get(2));
      this.rawData.set(9, a.get(6));
      this.rawData.set(11, a.get(14));
      this.rawData.set(12, a.get(3));
      this.rawData.set(13, a.get(7));
      this.rawData.set(14, a.get(11));
    },
    get_determinant: function () {
      return (
        (this.rawData.get(0) * this.rawData.get(5) -
          this.rawData.get(4) * this.rawData.get(1)) *
          (this.rawData.get(10) * this.rawData.get(15) -
            this.rawData.get(14) * this.rawData.get(11)) -
        (this.rawData.get(0) * this.rawData.get(9) -
          this.rawData.get(8) * this.rawData.get(1)) *
          (this.rawData.get(6) * this.rawData.get(15) -
            this.rawData.get(14) * this.rawData.get(7)) +
        (this.rawData.get(0) * this.rawData.get(13) -
          this.rawData.get(12) * this.rawData.get(1)) *
          (this.rawData.get(6) * this.rawData.get(11) -
            this.rawData.get(10) * this.rawData.get(7)) +
        (this.rawData.get(4) * this.rawData.get(9) -
          this.rawData.get(8) * this.rawData.get(5)) *
          (this.rawData.get(2) * this.rawData.get(15) -
            this.rawData.get(14) * this.rawData.get(3)) -
        (this.rawData.get(4) * this.rawData.get(13) -
          this.rawData.get(12) * this.rawData.get(5)) *
          (this.rawData.get(2) * this.rawData.get(11) -
            this.rawData.get(10) * this.rawData.get(3)) +
        (this.rawData.get(8) * this.rawData.get(13) -
          this.rawData.get(12) * this.rawData.get(9)) *
          (this.rawData.get(2) * this.rawData.get(7) -
            this.rawData.get(6) * this.rawData.get(3))
      );
    },
    get_position: function () {
      return new ed(
        this.rawData.get(12),
        this.rawData.get(13),
        this.rawData.get(14)
      );
    },
    set_position: function (a) {
      this.rawData.set(12, a.x);
      this.rawData.set(13, a.y);
      this.rawData.set(14, a.z);
      return a;
    },
    __class__: ke,
    __properties__: {
      set_position: "set_position",
      get_position: "get_position",
      get_determinant: "get_determinant",
    },
  };
  var bl = {};
  p["openfl.geom._Orientation3D.Orientation3D_Impl_"] = bl;
  bl.__name__ = ["openfl", "geom", "_Orientation3D", "Orientation3D_Impl_"];
  bl.fromString = function (a) {
    switch (a) {
      case "axisAngle":
        return 0;
      case "eulerAngles":
        return 1;
      case "quaternion":
        return 2;
      default:
        return null;
    }
  };
  bl.toString = function (a) {
    switch (a) {
      case 0:
        return "axisAngle";
      case 1:
        return "eulerAngles";
      case 2:
        return "quaternion";
      default:
        return null;
    }
  };
  var rl = function (a) {
    this.__colorTransform = new sc();
    this.concatenatedColorTransform = new sc();
    this.pixelBounds = new W();
    this.__displayObject = a;
    this.__hasMatrix = !0;
  };
  p["openfl.geom.Transform"] = rl;
  rl.__name__ = ["openfl", "geom", "Transform"];
  rl.prototype = {
    concatenatedColorTransform: null,
    pixelBounds: null,
    __colorTransform: null,
    __displayObject: null,
    __hasMatrix: null,
    __hasMatrix3D: null,
    get_colorTransform: function () {
      return this.__colorTransform;
    },
    set_colorTransform: function (a) {
      this.__colorTransform.__equals(a, !1) ||
        (this.__colorTransform.__copyFrom(a),
        null != a && this.__displayObject.set_alpha(a.alphaMultiplier),
        (a = this.__displayObject),
        a.__renderDirty ||
          ((a.__renderDirty = !0), a.__setParentRenderDirty()));
      return this.__colorTransform;
    },
    get_concatenatedMatrix: function () {
      return this.__hasMatrix
        ? this.__displayObject.__getWorldTransform().clone()
        : null;
    },
    get_matrix: function () {
      return this.__hasMatrix ? this.__displayObject.__transform.clone() : null;
    },
    set_matrix: function (a) {
      if (null == a) return (this.__hasMatrix = !1), null;
      this.__hasMatrix = !0;
      this.__hasMatrix3D = !1;
      null != this.__displayObject &&
        this.__setTransform(a.a, a.b, a.c, a.d, a.tx, a.ty);
      return a;
    },
    get_matrix3D: function () {
      if (this.__hasMatrix3D) {
        var a = this.__displayObject.__transform;
        return new ke(
          Oa.toFloatVector(null, null, null, [
            a.a,
            a.b,
            0,
            0,
            a.c,
            a.d,
            0,
            0,
            0,
            0,
            1,
            0,
            a.tx,
            a.ty,
            0,
            1,
          ])
        );
      }
      return null;
    },
    set_matrix3D: function (a) {
      if (null == a) return (this.__hasMatrix3D = !1), null;
      this.__hasMatrix = !1;
      this.__hasMatrix3D = !0;
      this.__setTransform(
        a.rawData.get(0),
        a.rawData.get(1),
        a.rawData.get(5),
        a.rawData.get(6),
        a.rawData.get(12),
        a.rawData.get(13)
      );
      return a;
    },
    __setTransform: function (a, b, c, d, e, f) {
      if (null != this.__displayObject) {
        var g = 0 == b ? a : Math.sqrt(a * a + b * b);
        var h = 0 == c ? a : Math.sqrt(c * c + d * d);
        this.__displayObject.__scaleX = g;
        this.__displayObject.__scaleY = h;
        g = (180 / Math.PI) * Math.atan2(d, c) - 90;
        g != this.__displayObject.__rotation &&
          ((this.__displayObject.__rotation = g),
          (g *= Math.PI / 180),
          (this.__displayObject.__rotationSine = Math.sin(g)),
          (this.__displayObject.__rotationCosine = Math.cos(g)));
        this.__displayObject.__transform.a = a;
        this.__displayObject.__transform.b = b;
        this.__displayObject.__transform.c = c;
        this.__displayObject.__transform.d = d;
        this.__displayObject.__transform.tx = e;
        this.__displayObject.__transform.ty = f;
        this.__displayObject.__setTransformDirty();
      }
    },
    __class__: rl,
    __properties__: {
      set_matrix3D: "set_matrix3D",
      get_matrix3D: "get_matrix3D",
      set_matrix: "set_matrix",
      get_matrix: "get_matrix",
      get_concatenatedMatrix: "get_concatenatedMatrix",
      set_colorTransform: "set_colorTransform",
      get_colorTransform: "get_colorTransform",
    },
  };
  var ed = function (a, b, c, d) {
    null == d && (d = 0);
    null == c && (c = 0);
    null == b && (b = 0);
    null == a && (a = 0);
    this.w = d;
    this.x = a;
    this.y = b;
    this.z = c;
  };
  p["openfl.geom.Vector3D"] = ed;
  ed.__name__ = ["openfl", "geom", "Vector3D"];
  ed.__properties__ = {
    get_Z_AXIS: "get_Z_AXIS",
    get_Y_AXIS: "get_Y_AXIS",
    get_X_AXIS: "get_X_AXIS",
  };
  ed.angleBetween = function (a, b) {
    var c = a.get_length(),
      d = b.get_length();
    a = a.dotProduct(b);
    0 != c && (a /= c);
    0 != d && (a /= d);
    return Math.acos(a);
  };
  ed.distance = function (a, b) {
    var c = b.x - a.x,
      d = b.y - a.y;
    a = b.z - a.z;
    return Math.sqrt(c * c + d * d + a * a);
  };
  ed.get_X_AXIS = function () {
    return new ed(1, 0, 0);
  };
  ed.get_Y_AXIS = function () {
    return new ed(0, 1, 0);
  };
  ed.get_Z_AXIS = function () {
    return new ed(0, 0, 1);
  };
  ed.prototype = {
    w: null,
    x: null,
    y: null,
    z: null,
    add: function (a) {
      return new ed(this.x + a.x, this.y + a.y, this.z + a.z);
    },
    clone: function () {
      return new ed(this.x, this.y, this.z, this.w);
    },
    copyFrom: function (a) {
      this.x = a.x;
      this.y = a.y;
      this.z = a.z;
    },
    crossProduct: function (a) {
      return new ed(
        this.y * a.z - this.z * a.y,
        this.z * a.x - this.x * a.z,
        this.x * a.y - this.y * a.x,
        1
      );
    },
    decrementBy: function (a) {
      this.x -= a.x;
      this.y -= a.y;
      this.z -= a.z;
    },
    dotProduct: function (a) {
      return this.x * a.x + this.y * a.y + this.z * a.z;
    },
    equals: function (a, b) {
      null == b && (b = !1);
      return this.x == a.x && this.y == a.y && this.z == a.z
        ? b
          ? this.w == a.w
          : !0
        : !1;
    },
    incrementBy: function (a) {
      this.x += a.x;
      this.y += a.y;
      this.z += a.z;
    },
    nearEquals: function (a, b, c) {
      null == c && (c = !1);
      return Math.abs(this.x - a.x) < b &&
        Math.abs(this.y - a.y) < b &&
        Math.abs(this.z - a.z) < b
        ? c
          ? Math.abs(this.w - a.w) < b
          : !0
        : !1;
    },
    negate: function () {
      this.x *= -1;
      this.y *= -1;
      this.z *= -1;
    },
    normalize: function () {
      var a = this.get_length();
      0 != a && ((this.x /= a), (this.y /= a), (this.z /= a));
      return a;
    },
    project: function () {
      this.x /= this.w;
      this.y /= this.w;
      this.z /= this.w;
    },
    scaleBy: function (a) {
      this.x *= a;
      this.y *= a;
      this.z *= a;
    },
    setTo: function (a, b, c) {
      this.x = a;
      this.y = b;
      this.z = c;
    },
    subtract: function (a) {
      return new ed(this.x - a.x, this.y - a.y, this.z - a.z);
    },
    toString: function () {
      return "Vector3D(" + this.x + ", " + this.y + ", " + this.z + ")";
    },
    get_length: function () {
      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
    },
    get_lengthSquared: function () {
      return this.x * this.x + this.y * this.y + this.z * this.z;
    },
    __class__: ed,
    __properties__: {
      get_lengthSquared: "get_lengthSquared",
      get_length: "get_length",
    },
  };
  var Rq = function () {};
  p["openfl.media.ID3Info"] = Rq;
  Rq.__name__ = ["openfl", "media", "ID3Info"];
  Rq.prototype = {
    album: null,
    artist: null,
    comment: null,
    genre: null,
    songName: null,
    track: null,
    year: null,
    __class__: Rq,
  };
  var Nf = function (a, b) {
    db.call(this, this);
    this.bytesTotal = this.bytesLoaded = 0;
    this.isBuffering = !1;
    this.url = null;
    null != a && this.load(a, b);
  };
  p["openfl.media.Sound"] = Nf;
  Nf.__name__ = ["openfl", "media", "Sound"];
  Nf.fromAudioBuffer = function (a) {
    var b = new Nf();
    b.__buffer = a;
    return b;
  };
  Nf.fromFile = function (a) {
    return Nf.fromAudioBuffer(Qc.fromFile(a));
  };
  Nf.loadFromFile = function (a) {
    return Qc.loadFromFile(a).then(function (a) {
      return ab.withValue(Nf.fromAudioBuffer(a));
    });
  };
  Nf.loadFromFiles = function (a) {
    return Qc.loadFromFiles(a).then(function (a) {
      return ab.withValue(Nf.fromAudioBuffer(a));
    });
  };
  Nf.__super__ = db;
  Nf.prototype = x(db.prototype, {
    bytesLoaded: null,
    bytesTotal: null,
    isBuffering: null,
    url: null,
    __buffer: null,
    close: function () {
      null != this.__buffer &&
        (this.__buffer.dispose(), (this.__buffer = null));
    },
    load: function (a, b) {
      var c = this;
      this.url = a.url;
      a = ka.getLibrary("default");
      if (null != a) {
        b = this.url;
        var d = a.cachedAudioBuffers;
        b = null != t[b] ? d.existsReserved(b) : d.h.hasOwnProperty(b);
      } else b = !1;
      if (b)
        (b = this.url),
          (a = a.cachedAudioBuffers),
          this.AudioBuffer_onURLLoad(null != t[b] ? a.getReserved(b) : a.h[b]);
      else
        Qc.loadFromFile(this.url)
          .onComplete(B(this, this.AudioBuffer_onURLLoad))
          .onError(function (a) {
            c.AudioBuffer_onURLLoad(null);
          });
    },
    loadCompressedDataFromByteArray: function (a, b) {
      if (null == a || 0 >= b) this.dispatchEvent(new zg("ioError"));
      else {
        if (Na.get_length(a) > b) {
          var c = new ce(b);
          c.writeBytes(a, 0, b);
          a = c;
        }
        this.__buffer = Qc.fromBytes(Na.toBytes(a));
        null == this.__buffer
          ? this.dispatchEvent(new zg("ioError"))
          : this.dispatchEvent(new ma("complete"));
      }
    },
    loadPCMFromByteArray: function (a, b, c, d, e) {
      null == e && (e = 44100);
      null == d && (d = !0);
      null == c && (c = "float");
      null == a
        ? this.dispatchEvent(new zg("ioError"))
        : ((b = new Qc()),
          (b.bitsPerSample = "float" == c ? 32 : 16),
          (b.channels = d ? 2 : 1),
          (a = Na.toArrayBuffer(a)),
          (a = null != a ? new lb(a, 0) : null),
          (b.data = a),
          (b.sampleRate = e | 0),
          (this.__buffer = b),
          this.dispatchEvent(new ma("complete")));
    },
    play: function (a, b, c) {
      null == b && (b = 0);
      null == a && (a = 0);
      if (null == this.__buffer || 32 <= Pd.__soundChannels.length) return null;
      c = null == c ? new Yf() : c.clone();
      var d = Pd.__soundTransform.pan + c.pan;
      1 < d && (d = 1);
      -1 > d && (d = -1);
      var e = Pd.__soundTransform.volume * c.volume,
        f = new Dk(this.__buffer);
      f.offset = a | 0;
      1 < b && f.set_loops(b - 1);
      f.set_gain(e);
      a = f.get_position();
      a.x = d;
      a.z = -1 * Math.sqrt(1 - Math.pow(d, 2));
      f.set_position(a);
      return new qo(f, c);
    },
    get_id3: function () {
      return new Rq();
    },
    get_length: function () {
      return null != this.__buffer
        ? (1e3 * this.__buffer.get_src().duration()) | 0
        : 0;
    },
    AudioBuffer_onURLLoad: function (a) {
      null == a
        ? this.dispatchEvent(new zg("ioError"))
        : ((this.__buffer = a), this.dispatchEvent(new ma("complete")));
    },
    __class__: Nf,
    __properties__: { get_length: "get_length", get_id3: "get_id3" },
  });
  var qo = function (a, b) {
    db.call(this, this);
    this.rightPeak = this.leftPeak = 1;
    this.__soundTransform = null != b ? b : new Yf();
    null != a &&
      ((this.__source = a),
      this.__source.onComplete.add(B(this, this.source_onComplete)),
      (this.__isValid = !0),
      this.__source.play());
    Pd.__registerSoundChannel(this);
  };
  p["openfl.media.SoundChannel"] = qo;
  qo.__name__ = ["openfl", "media", "SoundChannel"];
  qo.__super__ = db;
  qo.prototype = x(db.prototype, {
    leftPeak: null,
    rightPeak: null,
    __isValid: null,
    __soundTransform: null,
    __source: null,
    stop: function () {
      Pd.__unregisterSoundChannel(this);
      this.__isValid && (this.__source.stop(), this.__dispose());
    },
    __dispose: function () {
      this.__isValid &&
        (this.__source.onComplete.remove(B(this, this.source_onComplete)),
        this.__source.dispose(),
        (this.__isValid = !1));
    },
    __updateTransform: function () {
      this.set_soundTransform(this.get_soundTransform());
    },
    get_position: function () {
      return this.__isValid
        ? this.__source.get_currentTime() + this.__source.offset
        : 0;
    },
    set_position: function (a) {
      if (!this.__isValid) return 0;
      this.__source.set_currentTime((a | 0) - this.__source.offset);
      return a;
    },
    get_soundTransform: function () {
      return this.__soundTransform.clone();
    },
    set_soundTransform: function (a) {
      if (null != a) {
        this.__soundTransform.pan = a.pan;
        this.__soundTransform.volume = a.volume;
        var b = Pd.__soundTransform.pan + this.__soundTransform.pan;
        -1 > b && (b = -1);
        1 < b && (b = 1);
        var c = Pd.__soundTransform.volume * this.__soundTransform.volume;
        this.__isValid &&
          (this.__source.set_gain(c),
          (c = this.__source.get_position()),
          (c.x = b),
          (c.z = -1 * Math.sqrt(1 - Math.pow(b, 2))),
          this.__source.set_position(c));
      }
      return a;
    },
    source_onComplete: function () {
      Pd.__unregisterSoundChannel(this);
      this.__dispose();
      this.dispatchEvent(new ma("soundComplete"));
    },
    __class__: qo,
    __properties__: {
      set_soundTransform: "set_soundTransform",
      get_soundTransform: "get_soundTransform",
      set_position: "set_position",
      get_position: "get_position",
    },
  });
  var tt = function (a, b) {
    null == b && (b = !1);
    null == a && (a = 1e3);
    this.bufferTime = a;
    this.checkPolicyFile = b;
  };
  p["openfl.media.SoundLoaderContext"] = tt;
  tt.__name__ = ["openfl", "media", "SoundLoaderContext"];
  tt.prototype = { bufferTime: null, checkPolicyFile: null, __class__: tt };
  var Pd = function () {};
  p["openfl.media.SoundMixer"] = Pd;
  Pd.__name__ = ["openfl", "media", "SoundMixer"];
  Pd.__properties__ = {
    set_soundTransform: "set_soundTransform",
    get_soundTransform: "get_soundTransform",
  };
  Pd.areSoundsInaccessible = function () {
    return !1;
  };
  Pd.stopAll = function () {
    for (var a = 0, b = Pd.__soundChannels; a < b.length; ) {
      var c = b[a];
      ++a;
      c.stop();
    }
  };
  Pd.__registerSoundChannel = function (a) {
    Pd.__soundChannels.push(a);
  };
  Pd.__unregisterSoundChannel = function (a) {
    Q.remove(Pd.__soundChannels, a);
  };
  Pd.get_soundTransform = function () {
    return Pd.__soundTransform;
  };
  Pd.set_soundTransform = function (a) {
    Pd.__soundTransform = a.clone();
    for (var b = 0, c = Pd.__soundChannels; b < c.length; ) {
      var d = c[b];
      ++b;
      d.__updateTransform();
    }
    return a;
  };
  var ro = function () {
    db.call(this);
  };
  p["openfl.net.NetConnection"] = ro;
  ro.__name__ = ["openfl", "net", "NetConnection"];
  ro.__super__ = db;
  ro.prototype = x(db.prototype, {
    connect: function (a, b, c, d, e, f) {
      if (null != a)
        throw new v('Error: Can only connect in "HTTP streaming" mode');
      this.dispatchEvent(
        new jg("netStatus", !1, !0, { code: "NetConnection.Connect.Success" })
      );
    },
    __class__: ro,
  });
  var Sq = function (a, b) {
    db.call(this);
    this.__connection = a;
    this.__video = window.document.createElement("video");
    this.__video.setAttribute("playsinline", "");
    this.__video.setAttribute("webkit-playsinline", "");
    this.__video.addEventListener("error", B(this, this.video_onError), !1);
    this.__video.addEventListener("waiting", B(this, this.video_onWaiting), !1);
    this.__video.addEventListener("ended", B(this, this.video_onEnd), !1);
    this.__video.addEventListener("pause", B(this, this.video_onPause), !1);
    this.__video.addEventListener("seeking", B(this, this.video_onSeeking), !1);
    this.__video.addEventListener("playing", B(this, this.video_onPlaying), !1);
    this.__video.addEventListener(
      "timeupdate",
      B(this, this.video_onTimeUpdate),
      !1
    );
    this.__video.addEventListener(
      "loadstart",
      B(this, this.video_onLoadStart),
      !1
    );
    this.__video.addEventListener("stalled", B(this, this.video_onStalled), !1);
    this.__video.addEventListener(
      "durationchanged",
      B(this, this.video_onDurationChanged),
      !1
    );
    this.__video.addEventListener("canplay", B(this, this.video_onCanPlay), !1);
    this.__video.addEventListener(
      "canplaythrough",
      B(this, this.video_onCanPlayThrough),
      !1
    );
    this.__video.addEventListener(
      "loadedmetadata",
      B(this, this.video_onLoadMetaData),
      !1
    );
  };
  p["openfl.net.NetStream"] = Sq;
  Sq.__name__ = ["openfl", "net", "NetStream"];
  Sq.__super__ = db;
  Sq.prototype = x(db.prototype, {
    audioCodec: null,
    bufferLength: null,
    bufferTime: null,
    bytesLoaded: null,
    bytesTotal: null,
    checkPolicyFile: null,
    client: null,
    currentFPS: null,
    decodedFrames: null,
    liveDelay: null,
    objectEncoding: null,
    soundTransform: null,
    time: null,
    videoCode: null,
    __closed: null,
    __connection: null,
    __timer: null,
    __seeking: null,
    __video: null,
    close: function () {
      null != this.__video &&
        ((this.__closed = !0),
        this.__video.pause(),
        (this.__video.src = ""),
        (this.time = 0));
    },
    dispose: function () {
      this.close();
      this.__video = null;
    },
    pause: function () {
      null != this.__video && this.__video.pause();
    },
    play: function (a, b, c, d, e, f) {
      null != this.__video && ((this.__video.src = a), this.__video.play());
    },
    requestVideoStatus: function () {
      var a = this;
      null != this.__video &&
        (null == this.__timer && (this.__timer = new af(1)),
        (this.__timer.run = function () {
          a.__video.paused
            ? a.__playStatus("NetStream.Play.pause")
            : a.__playStatus("NetStream.Play.playing");
          a.__timer.stop();
        }));
    },
    resume: function () {
      null != this.__video && this.__video.play();
    },
    seek: function (a) {
      null != this.__video &&
        (0 > a
          ? (a = 0)
          : a > this.__video.duration && (a = this.__video.duration),
        this.set___seeking(!0),
        this.__connection.dispatchEvent(
          new jg("netStatus", !1, !1, { code: "NetStream.SeekStart.Notify" })
        ),
        (this.__video.currentTime = a));
    },
    togglePause: function () {
      null != this.__video &&
        (this.__video.paused ? this.__video.play() : this.__video.pause());
    },
    __playStatus: function (a) {
      if (null != this.__video && null != this.client)
        try {
          var b = this.client.onPlayStatus;
          b({
            code: a,
            duration: this.__video.duration,
            position: this.__video.currentTime,
            speed: this.__video.playbackRate,
            start: this.__video.startTime,
          });
        } catch (c) {
          X.lastException = c;
        }
    },
    video_onCanPlay: function (a) {
      this.__playStatus("NetStream.Play.canplay");
    },
    video_onCanPlayThrough: function (a) {
      this.__playStatus("NetStream.Play.canplaythrough");
    },
    video_onDurationChanged: function (a) {
      this.__playStatus("NetStream.Play.durationchanged");
    },
    video_onEnd: function (a) {
      this.__connection.dispatchEvent(
        new jg("netStatus", !1, !1, { code: "NetStream.Play.Stop" })
      );
      this.__connection.dispatchEvent(
        new jg("netStatus", !1, !1, { code: "NetStream.Play.Complete" })
      );
      this.__playStatus("NetStream.Play.Complete");
    },
    video_onError: function (a) {
      this.__connection.dispatchEvent(
        new jg("netStatus", !1, !1, { code: "NetStream.Play.Stop" })
      );
      this.__playStatus("NetStream.Play.error");
    },
    video_onLoadMetaData: function (a) {
      if (null != this.__video && null != this.client)
        try {
          var b = this.client.onMetaData;
          b({
            width: this.__video.videoWidth,
            height: this.__video.videoHeight,
            duration: this.__video.duration,
          });
        } catch (c) {
          X.lastException = c;
        }
    },
    video_onLoadStart: function (a) {
      this.__playStatus("NetStream.Play.loadstart");
    },
    video_onPause: function (a) {
      this.__playStatus("NetStream.Play.pause");
    },
    video_onPlaying: function (a) {
      this.__connection.dispatchEvent(
        new jg("netStatus", !1, !1, { code: "NetStream.Play.Start" })
      );
      this.__playStatus("NetStream.Play.playing");
    },
    video_onSeeking: function (a) {
      this.__playStatus("NetStream.Play.seeking");
      this.__connection.dispatchEvent(
        new jg("netStatus", !1, !1, { code: "NetStream.Seek.Complete" })
      );
    },
    video_onStalled: function (a) {
      this.__playStatus("NetStream.Play.stalled");
    },
    video_onTimeUpdate: function (a) {
      null != this.__video &&
        ((this.time = this.__video.currentTime),
        this.__playStatus("NetStream.Play.timeupdate"));
    },
    video_onWaiting: function (a) {
      this.__playStatus("NetStream.Play.waiting");
    },
    get_speed: function () {
      return null != this.__video ? this.__video.playbackRate : 1;
    },
    set_speed: function (a) {
      return null != this.__video ? (this.__video.playbackRate = a) : a;
    },
    get___seeking: function () {
      return this.__seeking ? !0 : this.__video.seeking;
    },
    set___seeking: function (a) {
      return (this.__seeking = a);
    },
    __class__: Sq,
    __properties__: {
      set___seeking: "set___seeking",
      get___seeking: "get___seeking",
      set_speed: "set_speed",
      get_speed: "get_speed",
    },
  });
  var od = function () {
    db.call(this);
    this.client = this;
    this.objectEncoding = od.defaultObjectEncoding;
  };
  p["openfl.net.SharedObject"] = od;
  od.__name__ = ["openfl", "net", "SharedObject"];
  od.getLocal = function (a, b, c) {
    c = " ~%&\\;:\"',<>?#".split("");
    var d = !0;
    if (null == a || "" == a) d = !1;
    else
      for (var e = 0; e < c.length; ) {
        var f = c[e];
        ++e;
        if (-1 < a.indexOf(f)) {
          d = !1;
          break;
        }
      }
    if (!d) throw new v(new ud("Error #2134: Cannot create SharedObject."));
    null == b && (b = window.location.href);
    null == od.__sharedObjects &&
      ((od.__sharedObjects = new la()),
      null != Me.current && Me.current.onExit.add(od.application_onExit));
    c = b + "/" + a;
    d = od.__sharedObjects;
    if (null != t[c] ? !d.existsReserved(c) : !d.h.hasOwnProperty(c)) {
      d = new od();
      d.data = {};
      d.__localPath = b;
      d.__name = a;
      e = null;
      try {
        var g = nj.getLocalStorage();
        null != g && (e = g.getItem(b + ":" + a));
      } catch (n) {
        X.lastException = n;
      }
      if (null != e && "" != e)
        try {
          var h = new Ie(e);
          h.setResolver({
            resolveEnum: qa.resolveEnum,
            resolveClass: od.__resolveClass,
          });
          d.data = h.unserialize();
        } catch (n) {
          X.lastException = n;
        }
      a = od.__sharedObjects;
      null != t[c] ? a.setReserved(c, d) : (a.h[c] = d);
    }
    a = od.__sharedObjects;
    return null != t[c] ? a.getReserved(c) : a.h[c];
  };
  od.getRemote = function (a, b, c, d) {
    Ec.notImplemented({
      fileName: "SharedObject.hx",
      lineNumber: 671,
      className: "openfl.net.SharedObject",
      methodName: "getRemote",
    });
    return null;
  };
  od.__getPath = function (a, b) {
    a = za.get_applicationStorageDirectory() + "/" + a + "/";
    b = ba.replace(b, "//", "/");
    b = ba.replace(b, "//", "/");
    ba.startsWith(b, "/") && (b = Q.substr(b, 1, null));
    ba.endsWith(b, "/") && (b = b.substring(0, b.length - 1));
    if (-1 < b.indexOf("/")) {
      var c = b.split("/");
      b = "";
      for (var d = 0, e = c.length - 1; d < e; ) {
        var f = d++;
        b += "#" + c[f] + "/";
      }
      b += c[c.length - 1];
    }
    return a + b + ".sol";
  };
  od.__mkdir = function (a) {};
  od.__resolveClass = function (a) {
    return null != a
      ? (ba.startsWith(a, "neash.") && (a = ba.replace(a, "neash.", "openfl.")),
        ba.startsWith(a, "native.") &&
          (a = ba.replace(a, "native.", "openfl.")),
        ba.startsWith(a, "flash.") && (a = ba.replace(a, "flash.", "openfl.")),
        ba.startsWith(a, "openfl._v2.") &&
          (a = ba.replace(a, "openfl._v2.", "openfl.")),
        ba.startsWith(a, "openfl._legacy.") &&
          (a = ba.replace(a, "openfl._legacy.", "openfl.")),
        qa.resolveClass(a))
      : null;
  };
  od.application_onExit = function (a) {
    a = od.__sharedObjects;
    for (a = new Oe(a, a.arrayKeys()); a.hasNext(); ) a.next().flush();
  };
  od.__super__ = db;
  od.prototype = x(db.prototype, {
    client: null,
    data: null,
    fps: null,
    objectEncoding: null,
    __localPath: null,
    __name: null,
    clear: function () {
      this.data = {};
      try {
        var a = nj.getLocalStorage();
        null != a && a.removeItem(this.__localPath + ":" + this.__name);
      } catch (b) {
        X.lastException = b;
      }
    },
    close: function () {},
    connect: function (a, b) {
      Ec.notImplemented({
        fileName: "SharedObject.hx",
        lineNumber: 293,
        className: "openfl.net.SharedObject",
        methodName: "connect",
      });
    },
    flush: function (a) {
      if (0 == V.fields(this.data).length) return 0;
      a = we.run(this.data);
      try {
        var b = nj.getLocalStorage();
        null != b &&
          (b.removeItem(this.__localPath + ":" + this.__name),
          b.setItem(this.__localPath + ":" + this.__name, a));
      } catch (c) {
        return (X.lastException = c), 1;
      }
      return 0;
    },
    send: function (a) {
      Ec.notImplemented({
        fileName: "SharedObject.hx",
        lineNumber: 680,
        className: "openfl.net.SharedObject",
        methodName: "send",
      });
    },
    setDirty: function (a) {},
    setProperty: function (a, b) {
      null != this.data && (this.data[a] = b);
    },
    get_size: function () {
      try {
        var a = we.run(this.data);
        return Ra.ofString(a).length;
      } catch (b) {
        return (X.lastException = b), 0;
      }
    },
    __class__: od,
    __properties__: { get_size: "get_size" },
  });
  var so = {};
  p["openfl.net._SharedObjectFlushStatus.SharedObjectFlushStatus_Impl_"] = so;
  so.__name__ = [
    "openfl",
    "net",
    "_SharedObjectFlushStatus",
    "SharedObjectFlushStatus_Impl_",
  ];
  so.fromString = function (a) {
    switch (a) {
      case "flushed":
        return 0;
      case "pending":
        return 1;
      default:
        return null;
    }
  };
  so.toString = function (a) {
    switch (a) {
      case 0:
        return "flushed";
      case 1:
        return "pending";
      default:
        return null;
    }
  };
  var ph = function (a) {
    db.call(this);
    this.bytesTotal = this.bytesLoaded = 0;
    this.dataFormat = 1;
    null != a && this.load(a);
  };
  p["openfl.net.URLLoader"] = ph;
  ph.__name__ = ["openfl", "net", "URLLoader"];
  ph.__super__ = db;
  ph.prototype = x(db.prototype, {
    bytesLoaded: null,
    bytesTotal: null,
    data: null,
    dataFormat: null,
    __httpRequest: null,
    close: function () {
      null != this.__httpRequest && this.__httpRequest.cancel();
    },
    load: function (a) {
      var b = this;
      if (0 == this.dataFormat) {
        var c = new Fn();
        this.__prepareRequest(c, a);
        c.load()
          .onProgress(B(this, this.httpRequest_onProgress))
          .onError(B(this, this.httpRequest_onError))
          .onComplete(function (a) {
            b.__dispatchStatus();
            b.data = a;
            a = new ma("complete");
            b.dispatchEvent(a);
          });
      } else
        (c = new Ek()),
          this.__prepareRequest(c, a),
          c
            .load()
            .onProgress(B(this, this.httpRequest_onProgress))
            .onError(B(this, this.httpRequest_onError))
            .onComplete(function (a) {
              b.__dispatchStatus();
              b.data = a;
              a = new ma("complete");
              b.dispatchEvent(a);
            });
    },
    __dispatchStatus: function () {
      var a = new Qi("httpStatus", !1, !1, this.__httpRequest.responseStatus);
      a.responseURL = this.__httpRequest.uri;
      var b = [];
      if (
        this.__httpRequest.enableResponseHeaders &&
        null != this.__httpRequest.responseHeaders
      )
        for (
          var c = 0, d = this.__httpRequest.responseHeaders;
          c < d.length;

        ) {
          var e = d[c];
          ++c;
          b.push(new Tq(e.name, e.value));
        }
      a.responseHeaders = b;
      this.dispatchEvent(a);
    },
    __prepareRequest: function (a, b) {
      this.__httpRequest = a;
      this.__httpRequest.uri = b.url;
      switch (b.method) {
        case "DELETE":
          a = "DELETE";
          break;
        case "HEAD":
          a = "HEAD";
          break;
        case "OPTIONS":
          a = "OPTIONS";
          break;
        case "POST":
          a = "POST";
          break;
        case "PUT":
          a = "PUT";
          break;
        default:
          a = "GET";
      }
      this.__httpRequest.method = a;
      if (null != b.data)
        if (qa["typeof"](b.data) == Nb.TObject) {
          a = V.fields(b.data);
          for (var c = 0; c < a.length; ) {
            var d = a[c];
            ++c;
            var e = this.__httpRequest.formData,
              f = V.field(b.data, d);
            null != t[d] ? e.setReserved(d, f) : (e.h[d] = f);
          }
        } else
          u.__instanceof(b.data, Ra)
            ? (this.__httpRequest.data = b.data)
            : (this.__httpRequest.data = Ra.ofString(P.string(b.data)));
      this.__httpRequest.contentType = b.contentType;
      if (null != b.requestHeaders)
        for (a = 0, c = b.requestHeaders; a < c.length; )
          (d = c[a]),
            ++a,
            this.__httpRequest.headers.push(new pn(d.name, d.value));
      this.__httpRequest.followRedirects = b.followRedirects;
      this.__httpRequest.timeout = b.idleTimeout | 0;
      this.__httpRequest.withCredentials = b.manageCookies;
      this.__httpRequest.userAgent = b.userAgent;
      this.__httpRequest.enableResponseHeaders = !0;
    },
    httpRequest_onError: function (a) {
      this.__dispatchStatus();
      var b = 403 == a ? new Sj("securityError") : new zg("ioError");
      b.text = P.string(a);
      this.dispatchEvent(b);
    },
    httpRequest_onProgress: function (a, b) {
      var c = new gh("progress");
      c.bytesLoaded = a;
      c.bytesTotal = b;
      this.dispatchEvent(c);
    },
    __class__: ph,
  });
  var cl = {};
  p["openfl.net._URLLoaderDataFormat.URLLoaderDataFormat_Impl_"] = cl;
  cl.__name__ = [
    "openfl",
    "net",
    "_URLLoaderDataFormat",
    "URLLoaderDataFormat_Impl_",
  ];
  cl.fromString = function (a) {
    switch (a) {
      case "binary":
        return 0;
      case "text":
        return 1;
      case "variables":
        return 2;
      default:
        return null;
    }
  };
  cl.toString = function (a) {
    switch (a) {
      case 0:
        return "binary";
      case 1:
        return "text";
      case 2:
        return "variables";
      default:
        return null;
    }
  };
  var Qg = function (a) {
    null != a && (this.url = a);
    this.contentType = null;
    this.followRedirects = gi.followRedirects;
    this.idleTimeout = 0 < gi.idleTimeout ? gi.idleTimeout : 3e4;
    this.manageCookies = gi.manageCookies;
    this.method = "GET";
    this.requestHeaders = [];
    this.userAgent = gi.userAgent;
  };
  p["openfl.net.URLRequest"] = Qg;
  Qg.__name__ = ["openfl", "net", "URLRequest"];
  Qg.prototype = {
    contentType: null,
    data: null,
    followRedirects: null,
    idleTimeout: null,
    manageCookies: null,
    method: null,
    requestHeaders: null,
    url: null,
    userAgent: null,
    __class__: Qg,
  };
  var gi = function () {};
  p["openfl.net.URLRequestDefaults"] = gi;
  gi.__name__ = ["openfl", "net", "URLRequestDefaults"];
  var Tq = function (a, b) {
    null == b && (b = "");
    null == a && (a = "");
    this.name = a;
    this.value = b;
  };
  p["openfl.net.URLRequestHeader"] = Tq;
  Tq.__name__ = ["openfl", "net", "URLRequestHeader"];
  Tq.prototype = { name: null, value: null, __class__: Tq };
  var kk = {};
  p["openfl.net._URLVariables.URLVariables_Impl_"] = kk;
  kk.__name__ = ["openfl", "net", "_URLVariables", "URLVariables_Impl_"];
  kk._new = function (a) {
    var b = {};
    null != a && kk.decode(b, a);
    return b;
  };
  kk.decode = function (a, b) {
    for (var c = V.fields(a), d = 0; d < c.length; ) {
      var e = c[d];
      ++d;
      V.deleteField(a, e);
    }
    b = b.split(";").join("&").split("&");
    for (c = 0; c < b.length; )
      if (((d = b[c]), ++c, (e = d.indexOf("=")), 0 < e)) {
        var f = Q.substr(d, 0, e);
        f = decodeURIComponent(f.split("+").join(" "));
        d = Q.substr(d, e + 1, null);
        a[f] = decodeURIComponent(d.split("+").join(" "));
      } else 0 != e && (a[decodeURIComponent(d.split("+").join(" "))] = "");
  };
  kk.toString = function (a) {
    for (var b = [], c = V.fields(a), d = 0; d < c.length; ) {
      var e = c[d];
      ++d;
      var f = encodeURIComponent(e) + "=";
      e = V.field(a, e);
      b.push(f + encodeURIComponent(e));
    }
    return b.join("&");
  };
  var Hj = function (a) {
    this.parentDomain = null != a ? a : Hj.currentDomain;
  };
  p["openfl.system.ApplicationDomain"] = Hj;
  Hj.__name__ = ["openfl", "system", "ApplicationDomain"];
  Hj.prototype = {
    parentDomain: null,
    getDefinition: function (a) {
      return qa.resolveClass(a);
    },
    hasDefinition: function (a) {
      return null != qa.resolveClass(a);
    },
    __class__: Hj,
  };
  var rc = function () {};
  p["openfl.system.Capabilities"] = rc;
  rc.__name__ = ["openfl", "system", "Capabilities"];
  rc.__properties__ = {
    get_version: "get_version",
    get_screenResolutionY: "get_screenResolutionY",
    get_screenResolutionX: "get_screenResolutionX",
    get_screenDPI: "get_screenDPI",
    get_pixelAspectRatio: "get_pixelAspectRatio",
    get_os: "get_os",
    get_manufacturer: "get_manufacturer",
    get_language: "get_language",
    get_cpuArchitecture: "get_cpuArchitecture",
  };
  rc.hasMultiChannelAudio = function (a) {
    return !1;
  };
  rc.get_cpuArchitecture = function () {
    return "x86";
  };
  rc.get_language = function () {
    var a = dd.get_language(dd.get_currentLocale());
    if (null != a)
      switch (((a = a.toLowerCase()), a)) {
        case "cs":
        case "da":
        case "de":
        case "en":
        case "es":
        case "fi":
        case "fr":
        case "hu":
        case "it":
        case "ja":
        case "ko":
        case "nb":
        case "nl":
        case "pl":
        case "pt":
        case "ru":
        case "sv":
        case "tr":
          return a;
        case "zh":
          a = dd.get_region(dd.get_currentLocale());
          if (null != a)
            switch (a.toUpperCase()) {
              case "HANT":
              case "TW":
                return "zh-TW";
            }
          return "zh-CN";
        default:
          return "xu";
      }
    return "en";
  };
  rc.get_manufacturer = function () {
    var a = za.get_platformName();
    return "OpenFL" + (null != a ? " " + a : "");
  };
  rc.get_os = function () {
    var a = za.get_platformLabel();
    return null != a ? a : "";
  };
  rc.get_pixelAspectRatio = function () {
    return 1;
  };
  rc.get_screenDPI = function () {
    var a = null != Ec.application ? Ec.application.__window : null,
      b = 72;
    null != a && (b *= a.__scale);
    return b;
  };
  rc.get_screenResolutionX = function () {
    var a = Ec.current.stage,
      b = 0;
    if (null == a) return 0;
    if (null != a.window) {
      var c = a.window.get_display();
      null != c && (b = Math.ceil(c.currentMode.width * a.window.__scale));
    }
    return 0 < b ? b : a.stageWidth;
  };
  rc.get_screenResolutionY = function () {
    var a = Ec.current.stage,
      b = 0;
    if (null == a) return 0;
    if (null != a.window) {
      var c = a.window.get_display();
      null != c && (b = Math.ceil(c.currentMode.height * a.window.__scale));
    }
    return 0 < b ? b : a.stageHeight;
  };
  rc.get_version = function () {
    return "WEB" + (" " + ba.replace("8.7.0", ".", ",") + ",0");
  };
  var ut = function (a, b, c) {
    null == a && (a = !1);
    this.checkPolicyFile = a;
    this.securityDomain = c;
    this.applicationDomain = b;
    this.allowLoadBytesCodeExecution = this.allowCodeImport = !0;
  };
  p["openfl.system.LoaderContext"] = ut;
  ut.__name__ = ["openfl", "system", "LoaderContext"];
  ut.prototype = {
    allowCodeImport: null,
    allowLoadBytesCodeExecution: null,
    applicationDomain: null,
    checkPolicyFile: null,
    securityDomain: null,
    __class__: ut,
  };
  var to = function () {};
  p["openfl.system.SecurityDomain"] = to;
  to.__name__ = ["openfl", "system", "SecurityDomain"];
  to.prototype = { __class__: to };
  var Kg = function () {};
  p["openfl.system.System"] = Kg;
  Kg.__name__ = ["openfl", "system", "System"];
  Kg.__properties__ = {
    get_vmVersion: "get_vmVersion",
    get_totalMemory: "get_totalMemory",
  };
  Kg.exit = function (a) {
    za.exit(a);
  };
  Kg.gc = function () {};
  Kg.pause = function () {
    Ec.notImplemented({
      fileName: "System.hx",
      lineNumber: 176,
      className: "openfl.system.System",
      methodName: "pause",
    });
  };
  Kg.resume = function () {
    Ec.notImplemented({
      fileName: "System.hx",
      lineNumber: 193,
      className: "openfl.system.System",
      methodName: "resume",
    });
  };
  Kg.setClipboard = function (a) {
    qe.set_text(a);
  };
  Kg.get_totalMemory = function () {
    return window.performance && window.performance.memory
      ? window.performance.memory.usedJSHeapSize
      : 0;
  };
  Kg.get_vmVersion = function () {
    return "1.0.0";
  };
  var dl = {};
  p["openfl.system._TouchscreenType.TouchscreenType_Impl_"] = dl;
  dl.__name__ = [
    "openfl",
    "system",
    "_TouchscreenType",
    "TouchscreenType_Impl_",
  ];
  dl.fromString = function (a) {
    switch (a) {
      case "finger":
        return 0;
      case "none":
        return 1;
      case "stylus":
        return 2;
      default:
        return null;
    }
  };
  dl.toString = function (a) {
    switch (a) {
      case 0:
        return "finger";
      case 1:
        return "none";
      case 2:
        return "stylus";
      default:
        return null;
    }
  };
  var uo = {};
  p["openfl.text._AntiAliasType.AntiAliasType_Impl_"] = uo;
  uo.__name__ = ["openfl", "text", "_AntiAliasType", "AntiAliasType_Impl_"];
  uo.fromString = function (a) {
    switch (a) {
      case "advanced":
        return 0;
      case "normal":
        return 1;
      default:
        return null;
    }
  };
  uo.toString = function (a) {
    switch (a) {
      case 0:
        return "advanced";
      case 1:
        return "normal";
      default:
        return null;
    }
  };
  var xc = function (a) {
    Od.call(this, a);
  };
  p["openfl.text.Font"] = xc;
  xc.__name__ = ["openfl", "text", "Font"];
  xc.enumerateFonts = function (a) {
    return xc.__registeredFonts;
  };
  xc.fromBytes = function (a) {
    var b = new xc();
    b.__fromBytes(Na.toBytes(a));
    return b;
  };
  xc.fromFile = function (a) {
    var b = new xc();
    b.__fromFile(a);
    return b;
  };
  xc.loadFromBytes = function (a) {
    return Od.loadFromBytes(Na.toBytes(a)).then(function (a) {
      var b = new xc();
      b.__fromLimeFont(a);
      return ab.withValue(b);
    });
  };
  xc.loadFromFile = function (a) {
    return Od.loadFromFile(a).then(function (a) {
      var b = new xc();
      b.__fromLimeFont(a);
      return ab.withValue(b);
    });
  };
  xc.loadFromName = function (a) {
    return Od.loadFromName(a).then(function (a) {
      var b = new xc();
      b.__fromLimeFont(a);
      return ab.withValue(b);
    });
  };
  xc.registerFont = function (a) {
    a =
      null == (null == a ? null : u.getClass(a))
        ? u.__cast(qa.createInstance(a, []), xc)
        : u.__cast(a, xc);
    if (null != a) {
      xc.__registeredFonts.push(a);
      var b = a.name,
        c = xc.__fontByName;
      null != t[b] ? c.setReserved(b, a) : (c.h[b] = a);
    }
  };
  xc.__super__ = Od;
  xc.prototype = x(Od.prototype, {
    fontStyle: null,
    fontType: null,
    __initialized: null,
    __fromLimeFont: function (a) {
      this.__copyFrom(a);
    },
    __initialize: function () {
      return this.__initialized;
    },
    get_fontName: function () {
      return this.name;
    },
    set_fontName: function (a) {
      return (this.name = a);
    },
    __class__: xc,
    __properties__: {
      set_fontName: "set_fontName",
      get_fontName: "get_fontName",
    },
  });
  var Tj = {};
  p["openfl.text._FontStyle.FontStyle_Impl_"] = Tj;
  Tj.__name__ = ["openfl", "text", "_FontStyle", "FontStyle_Impl_"];
  Tj.fromString = function (a) {
    switch (a) {
      case "bold":
        return 0;
      case "boldItalic":
        return 1;
      case "italic":
        return 2;
      case "regular":
        return 3;
      default:
        return null;
    }
  };
  Tj.toString = function (a) {
    switch (a) {
      case 0:
        return "bold";
      case 1:
        return "boldItalic";
      case 2:
        return "italic";
      case 3:
        return "regular";
      default:
        return null;
    }
  };
  var el = {};
  p["openfl.text._FontType.FontType_Impl_"] = el;
  el.__name__ = ["openfl", "text", "_FontType", "FontType_Impl_"];
  el.fromString = function (a) {
    switch (a) {
      case "device":
        return 0;
      case "embedded":
        return 1;
      case "embeddedCFF":
        return 2;
      default:
        return null;
    }
  };
  el.toString = function (a) {
    switch (a) {
      case 0:
        return "device";
      case 1:
        return "embedded";
      case 2:
        return "embeddedCFF";
      default:
        return null;
    }
  };
  var fl = {};
  p["openfl.text._GridFitType.GridFitType_Impl_"] = fl;
  fl.__name__ = ["openfl", "text", "_GridFitType", "GridFitType_Impl_"];
  fl.fromString = function (a) {
    switch (a) {
      case "none":
        return 0;
      case "pixel":
        return 1;
      case "subpixel":
        return 2;
      default:
        return null;
    }
  };
  fl.toString = function (a) {
    switch (a) {
      case 0:
        return "none";
      case 1:
        return "pixel";
      case 2:
        return "subpixel";
      default:
        return null;
    }
  };
  var Rk = function () {
    hb.call(this);
    this.__graphics = new hf(this);
  };
  p["openfl.text.StaticText"] = Rk;
  Rk.__name__ = ["openfl", "text", "StaticText"];
  Rk.__super__ = hb;
  Rk.prototype = x(hb.prototype, { text: null, __class__: Rk });
  var De = function () {
    this.__renderedOnCanvasWhileOnDOM = this.__forceCachedBitmapUpdate = !1;
    Vb.call(this);
    this.__caretIndex = -1;
    this.__displayAsPassword = !1;
    this.__graphics = new hf(this);
    this.__textEngine = new Lb(this);
    this.__layoutDirty = !0;
    this.__offsetY = this.__offsetX = 0;
    this.__mouseWheelEnabled = !0;
    this.__text = "";
    null == De.__defaultTextFormat &&
      ((De.__defaultTextFormat = new Jh(
        "Times New Roman",
        12,
        0,
        !1,
        !1,
        !1,
        "",
        "",
        3,
        0,
        0,
        0,
        0
      )),
      (De.__defaultTextFormat.blockIndent = 0),
      (De.__defaultTextFormat.bullet = !1),
      (De.__defaultTextFormat.letterSpacing = 0),
      (De.__defaultTextFormat.kerning = !1));
    this.__textFormat = De.__defaultTextFormat.clone();
    this.__textEngine.textFormatRanges.push(new vh(this.__textFormat, 0, 0));
    this.addEventListener("mouseDown", B(this, this.this_onMouseDown));
    this.addEventListener("focusIn", B(this, this.this_onFocusIn));
    this.addEventListener("focusOut", B(this, this.this_onFocusOut));
    this.addEventListener("keyDown", B(this, this.this_onKeyDown));
    this.addEventListener("mouseWheel", B(this, this.this_onMouseWheel));
  };
  p["openfl.text.TextField"] = De;
  De.__name__ = ["openfl", "text", "TextField"];
  De.__super__ = Vb;
  De.prototype = x(Vb.prototype, {
    __bounds: null,
    __caretIndex: null,
    __cursorTimer: null,
    __dirty: null,
    __displayAsPassword: null,
    __domRender: null,
    __inputEnabled: null,
    __isHTML: null,
    __layoutDirty: null,
    __mouseWheelEnabled: null,
    __offsetX: null,
    __offsetY: null,
    __selectionIndex: null,
    __showCursor: null,
    __symbol: null,
    __text: null,
    __htmlText: null,
    __textEngine: null,
    __textFormat: null,
    __div: null,
    __renderedOnCanvasWhileOnDOM: null,
    __rawHtmlText: null,
    __forceCachedBitmapUpdate: null,
    appendText: function (a) {
      null != a &&
        "" != a &&
        ((this.__layoutDirty = this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()),
        this.__updateText(ha.plus(this.__text, a)),
        (this.__textEngine.textFormatRanges.get(
          this.__textEngine.textFormatRanges.get_length() - 1
        ).end = ha.get_length(this.__text)),
        this.__updateScrollH());
    },
    getCharBoundaries: function (a) {
      if (0 > a || a > ha.get_length(this.__text) - 1) return null;
      var b = new W();
      return this.__getCharBoundaries(a, b) ? b : null;
    },
    getCharIndexAtPoint: function (a, b) {
      if (
        2 >= a ||
        a > this.get_width() + 4 ||
        0 >= b ||
        b > this.get_height() + 4
      )
        return -1;
      this.__updateLayout();
      a += this.get_scrollH();
      for (var c = 0, d = this.get_scrollV() - 1; c < d; ) {
        var e = c++;
        b += this.__textEngine.lineHeights.get(e);
      }
      d = 0;
      for (e = this.__textEngine.layoutGroups; d < e.get_length(); )
        if (
          ((c = e.get(d)),
          ++d,
          b >= c.offsetY &&
            b <= c.offsetY + c.height &&
            a >= c.offsetX &&
            a <= c.offsetX + c.width)
        ) {
          d = b = 0;
          for (e = c.positions.length; d < e; ) {
            var f = d++;
            b += c.positions[f];
            if (a <= c.offsetX + b) return c.startIndex + f;
          }
          return c.endIndex;
        }
      return -1;
    },
    getFirstCharInParagraph: function (a) {
      if (0 > a || a > ha.get_length(this.get_text())) return -1;
      for (var b = this.__textEngine.getLineBreakIndex(), c = 0; -1 < b; ) {
        if (b < a) c = b + 1;
        else if (b >= a) break;
        b = this.__textEngine.getLineBreakIndex(b + 1);
      }
      return c;
    },
    getLineIndexAtPoint: function (a, b) {
      this.__updateLayout();
      if (
        2 >= a ||
        a > this.get_width() + 4 ||
        0 >= b ||
        b > this.get_height() + 4
      )
        return -1;
      a = 0;
      for (var c = this.get_scrollV() - 1; a < c; ) {
        var d = a++;
        b += this.__textEngine.lineHeights.get(d);
      }
      a = 0;
      for (c = this.__textEngine.layoutGroups; a < c.get_length(); )
        if (((d = c.get(a)), ++a, b >= d.offsetY && b <= d.offsetY + d.height))
          return d.lineIndex;
      return -1;
    },
    getLineIndexOfChar: function (a) {
      if (0 > a || a > ha.get_length(this.__text)) return -1;
      this.__updateLayout();
      for (
        var b = 0, c = this.__textEngine.layoutGroups;
        b < c.get_length();

      ) {
        var d = c.get(b);
        ++b;
        if (d.startIndex <= a && d.endIndex >= a) return d.lineIndex;
      }
      return -1;
    },
    getLineLength: function (a) {
      this.__updateLayout();
      if (0 > a || a > this.__textEngine.numLines - 1) return 0;
      for (
        var b = -1, c = -1, d = 0, e = this.__textEngine.layoutGroups;
        d < e.get_length();

      ) {
        var f = e.get(d);
        ++d;
        if (f.lineIndex == a) -1 == b && (b = f.startIndex);
        else if (f.lineIndex == a + 1) {
          c = f.startIndex;
          break;
        }
      }
      -1 == c && (c = ha.get_length(this.__text));
      return c - b;
    },
    getLineMetrics: function (a) {
      this.__updateLayout();
      var b = this.__textEngine.lineAscents.get(a),
        c = this.__textEngine.lineDescents.get(a),
        d = this.__textEngine.lineLeadings.get(a),
        e = this.__textEngine.lineHeights.get(a);
      a = this.__textEngine.lineWidths.get(a);
      switch (this.__textFormat.align) {
        case 0:
          var f = (this.__textEngine.width - a) / 2;
          break;
        case 1:
        case 4:
          f = this.__textEngine.width - a - 2;
          break;
        case 2:
        case 3:
        case 5:
          f = 2;
      }
      return new Uq(f, a, e, b, c, d);
    },
    getLineOffset: function (a) {
      this.__updateLayout();
      if (0 > a || a > this.__textEngine.numLines - 1) return -1;
      for (
        var b = 0, c = this.__textEngine.layoutGroups;
        b < c.get_length();

      ) {
        var d = c.get(b);
        ++b;
        if (d.lineIndex == a) return d.startIndex;
      }
      return 0;
    },
    getLineText: function (a) {
      this.__updateLayout();
      if (0 > a || a > this.__textEngine.numLines - 1) return null;
      for (
        var b = -1, c = -1, d = 0, e = this.__textEngine.layoutGroups;
        d < e.get_length();

      ) {
        var f = e.get(d);
        ++d;
        if (f.lineIndex == a) -1 == b && (b = f.startIndex);
        else if (f.lineIndex == a + 1) {
          c = f.startIndex;
          break;
        }
      }
      -1 == c && (c = ha.get_length(this.__text));
      return ha.substring(this.__textEngine.text, b, c);
    },
    getParagraphLength: function (a) {
      if (0 > a || a > ha.get_length(this.get_text())) return -1;
      var b = this.getFirstCharInParagraph(a);
      if (a >= ha.get_length(this.get_text()))
        return ha.get_length(this.get_text()) - b + 1;
      a = this.__textEngine.getLineBreakIndex(a) + 1;
      0 == a && (a = ha.get_length(this.__text));
      return a - b;
    },
    getTextFormat: function (a, b) {
      null == b && (b = -1);
      null == a && (a = -1);
      var c = null;
      if (
        a >= ha.get_length(this.get_text()) ||
        -1 > a ||
        b > ha.get_length(this.get_text()) ||
        -1 > b
      )
        throw new v(new Ri("The supplied index is out of bounds"));
      -1 == a && (a = 0);
      -1 == b && (b = ha.get_length(this.get_text()));
      if (a >= b) return new Jh();
      for (
        var d = 0, e = this.__textEngine.textFormatRanges;
        d < e.get_length();

      ) {
        var f = e.get(d);
        ++d;
        if ((f.start <= a && f.end > a) || (f.start < b && f.end >= b))
          null == c
            ? (c = f.format.clone())
            : (f.format.font != c.font && (c.font = null),
              f.format.size != c.size && (c.size = null),
              f.format.color != c.color && (c.color = null),
              f.format.bold != c.bold && (c.bold = null),
              f.format.italic != c.italic && (c.italic = null),
              f.format.underline != c.underline && (c.underline = null),
              f.format.url != c.url && (c.url = null),
              f.format.target != c.target && (c.target = null),
              f.format.align != c.align && (c.align = null),
              f.format.leftMargin != c.leftMargin && (c.leftMargin = null),
              f.format.rightMargin != c.rightMargin && (c.rightMargin = null),
              f.format.indent != c.indent && (c.indent = null),
              f.format.leading != c.leading && (c.leading = null),
              f.format.blockIndent != c.blockIndent && (c.blockIndent = null),
              f.format.bullet != c.bullet && (c.bullet = null),
              f.format.kerning != c.kerning && (c.kerning = null),
              f.format.letterSpacing != c.letterSpacing &&
                (c.letterSpacing = null),
              f.format.tabStops != c.tabStops && (c.tabStops = null));
      }
      null == c && (c = new Jh());
      return c;
    },
    replaceSelectedText: function (a) {
      this.__replaceSelectedText(a, !1);
    },
    replaceText: function (a, b, c) {
      this.__replaceText(a, b, c, !1);
    },
    setSelection: function (a, b) {
      this.__selectionIndex = a;
      this.__caretIndex = b;
      this.__stopCursorTimer();
      this.__startCursorTimer();
    },
    setTextFormat: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = 0);
      var d = ha.get_length(this.get_text());
      0 > b && (b = 0);
      0 > c && (c = 0);
      0 == c && (c = 0 == b ? d : b + 1);
      if (!(c < b)) {
        if (0 == b && c >= d)
          for (
            this.__textFormat.__merge(a),
              a = 0,
              b = this.__textEngine.textFormatRanges.get_length();
            a < b;

          ) {
            c = a++;
            var e = this.__textEngine.textFormatRanges.get(c);
            e.format.__merge(this.__textFormat);
          }
        else {
          for (
            var f = this.__textEngine.textFormatRanges.get_length();
            0 < f;

          ) {
            --f;
            e = this.__textEngine.textFormatRanges.get(f);
            if (e.start == b && e.end == c) {
              e.format = this.__textFormat.clone();
              e.format.__merge(a);
              this.__layoutDirty = this.__dirty = !0;
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty());
              return;
            }
            e.start >= b &&
              e.end <= c &&
              ((e = this.__textEngine.textFormatRanges.indexOf(e, 0)),
              -1 < e && this.__textEngine.textFormatRanges.splice(e, 1));
          }
          var g = (f = null);
          if (0 < b)
            for (
              var h = 0, m = this.__textEngine.textFormatRanges.get_length();
              h < m;

            )
              if (
                ((e = h++),
                (e = this.__textEngine.textFormatRanges.get(e)),
                e.end >= b)
              ) {
                f = e;
                break;
              }
          if (c < d)
            for (
              d = this.__textEngine.textFormatRanges.get_length();
              0 <= --d;

            )
              if (
                ((e = this.__textEngine.textFormatRanges.get(d)), e.start <= c)
              ) {
                g = e;
                break;
              }
          g == f &&
            ((g = new vh(g.format.clone(), g.start, g.end)),
            this.__textEngine.textFormatRanges.push(g));
          null != f && (f.end = b);
          null != g && (g.start = c);
          e = this.__textFormat.clone();
          e.__merge(a);
          this.__textEngine.textFormatRanges.push(new vh(e, b, c));
          this.__textEngine.textFormatRanges.sort(function (a, b) {
            return a.start < b.start || a.end < b.end
              ? -1
              : a.start > b.start || a.end > b.end
              ? 1
              : 0;
          });
        }
        this.__layoutDirty = this.__dirty = !0;
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty());
      }
    },
    __allowMouseFocus: function () {
      return 1 == this.__textEngine.type || this.get_tabEnabled()
        ? !0
        : this.get_selectable();
    },
    __caretBeginningOfLine: function () {
      this.__selectionIndex == this.__caretIndex ||
      this.__caretIndex < this.__selectionIndex
        ? (this.__caretIndex = this.getLineOffset(
            this.getLineIndexOfChar(this.__caretIndex)
          ))
        : (this.__selectionIndex = this.getLineOffset(
            this.getLineIndexOfChar(this.__selectionIndex)
          ));
    },
    __caretEndOfLine: function () {
      var a =
        this.__selectionIndex == this.__caretIndex
          ? this.getLineIndexOfChar(this.__caretIndex)
          : this.getLineIndexOfChar(
              Math.max(this.__caretIndex, this.__selectionIndex) | 0
            );
      this.__caretIndex =
        a < this.__textEngine.numLines - 1
          ? this.getLineOffset(a + 1) - 1
          : ha.get_length(this.__text);
    },
    __caretNextCharacter: function () {
      this.__caretIndex < ha.get_length(this.__text) && this.__caretIndex++;
    },
    __caretNextLine: function (a, b) {
      null == a && (a = this.getLineIndexOfChar(this.__caretIndex));
      a < this.__textEngine.numLines - 1
        ? (null == b && (b = this.__caretIndex),
          (this.__caretIndex = this.__getCharIndexOnDifferentLine(b, a + 1)))
        : (this.__caretIndex = ha.get_length(this.__text));
    },
    __caretPreviousCharacter: function () {
      0 < this.__caretIndex && this.__caretIndex--;
    },
    __caretPreviousLine: function (a, b) {
      null == a && (a = this.getLineIndexOfChar(this.__caretIndex));
      0 < a
        ? (null == b && (b = this.__caretIndex),
          (this.__caretIndex = this.__getCharIndexOnDifferentLine(b, a - 1)))
        : (this.__caretIndex = 0);
    },
    __disableInput: function () {
      this.__inputEnabled &&
        null != this.stage &&
        (this.stage.window.__backend.setTextInputEnabled(!1),
        this.stage.window.onTextInput.remove(B(this, this.window_onTextInput)),
        this.stage.window.onKeyDown.remove(B(this, this.window_onKeyDown)),
        (this.__inputEnabled = !1),
        this.__stopCursorTimer());
    },
    __dispatch: function (a) {
      if (2 == a.eventPhase && "mouseUp" == a.type) {
        var b = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
        null != b &&
          ((b = b.format.url),
          null != b &&
            "" != b &&
            (ba.startsWith(b, "event:")
              ? this.dispatchEvent(new gg("link", !1, !1, Q.substr(b, 6, null)))
              : wa.getURL(new Qg(b))));
      }
      return Vb.prototype.__dispatch.call(this, a);
    },
    __enableInput: function () {
      null != this.stage &&
        (this.stage.window.__backend.setTextInputEnabled(!0),
        this.__inputEnabled ||
          (this.stage.window.__backend.setTextInputEnabled(!0),
          this.stage.window.onTextInput.has(B(this, this.window_onTextInput)) ||
            (this.stage.window.onTextInput.add(
              B(this, this.window_onTextInput)
            ),
            this.stage.window.onKeyDown.add(B(this, this.window_onKeyDown))),
          (this.__inputEnabled = !0),
          this.__startCursorTimer()));
    },
    __fromSymbol: function (a, b) {
      this.__symbol = b;
      this.set_width(b.width);
      this.set_height(b.height);
      this.__offsetX = b.x;
      this.__offsetY = b.y;
      this.set_multiline(b.multiline);
      this.set_wordWrap(b.wordWrap);
      this.set_displayAsPassword(b.password);
      b.border && (this.set_border(!0), this.set_background(!0));
      this.set_selectable(b.selectable);
      b.input && this.set_type(1);
      var c = new Jh();
      null != b.color && (c.color = b.color & 16777215);
      c.size = Math.round(b.fontHeight / 20);
      a = a.symbols.h[b.fontID];
      null != a &&
        ((c.__ascent = a.ascent / 20 / 1024),
        (c.__descent = a.descent / 20 / 1024));
      c.font = b.fontName;
      a = !1;
      var d = c.font;
      if (null == d) a = !0;
      else
        switch (d) {
          case "":
          case "_sans":
          case "_serif":
          case "_typewriter":
            a = !0;
            break;
          default:
            d = 0;
            for (var e = xc.enumerateFonts(); d < e.length; ) {
              var f = e[d];
              ++d;
              if (f.name == c.font) {
                a = !0;
                break;
              }
            }
        }
      if (!a)
        for (
          d = /[^a-zA-Z]+/g, e = 0, f = xc.enumerateFonts();
          e < f.length;

        ) {
          var g = f[e];
          ++e;
          if (
            Q.substr(g.name.replace(d, ""), 0, b.fontName.length) == b.fontName
          ) {
            c.font = g.name;
            a = !0;
            break;
          }
        }
      a
        ? this.set_embedFonts(!0)
        : ((a = c.font),
          (d = De.__missingFontWarning),
          (null != t[a] ? d.existsReserved(a) : d.h.hasOwnProperty(a)) ||
            ((a = c.font),
            (d = De.__missingFontWarning),
            null != t[a] ? d.setReserved(a, !0) : (d.h[a] = !0),
            mb.warn(
              'Could not find required font "' +
                c.font +
                '", it has not been embedded',
              {
                fileName: "TextField.hx",
                lineNumber: 1676,
                className: "openfl.text.TextField",
                methodName: "__fromSymbol",
              }
            )));
      null != b.align &&
        ("center" == b.align
          ? (c.align = 0)
          : "right" == b.align
          ? (c.align = 4)
          : "justify" == b.align && (c.align = 2),
        (c.leftMargin = (b.leftMargin / 20) | 0),
        (c.rightMargin = (b.rightMargin / 20) | 0),
        (c.indent = (b.indent / 20) | 0),
        (c.leading = (b.leading / 20) | 0));
      this.set_defaultTextFormat(c);
      null != b.text &&
        (b.html ? this.set_htmlText(b.text) : this.set_text(b.text));
    },
    __getAdvance: function (a) {
      return a;
    },
    __getBounds: function (a, b) {
      this.__updateLayout();
      var c = W.__pool.get();
      c.copyFrom(this.__textEngine.bounds);
      b.tx += this.__offsetX;
      b.ty += this.__offsetY;
      c.__transform(c, b);
      a.__expand(c.x, c.y, c.width, c.height);
      W.__pool.release(c);
    },
    __getCharBoundaries: function (a, b) {
      if (0 > a || a > ha.get_length(this.__text) - 1) return !1;
      this.__updateLayout();
      for (
        var c = 0, d = this.__textEngine.layoutGroups;
        c < d.get_length();

      ) {
        var e = d.get(c);
        ++c;
        if (a >= e.startIndex && a <= e.endIndex)
          try {
            for (var f = e.offsetX, g = 0, h = a - e.startIndex; g < h; ) {
              var m = g++;
              f += e.positions[m];
            }
            b.setTo(
              f,
              e.offsetY,
              e.positions[a - e.startIndex],
              e.ascent + e.descent
            );
            return !0;
          } catch (k) {
            X.lastException = k;
          }
      }
      return !1;
    },
    __getCharIndexOnDifferentLine: function (a, b) {
      if (
        0 > a ||
        a > ha.get_length(this.__text) ||
        0 > b ||
        b > this.__textEngine.numLines - 1
      )
        return -1;
      for (
        var c = null, d = null, e = 0, f = this.__textEngine.layoutGroups;
        e < f.get_length();

      ) {
        var g = f.get(e);
        ++e;
        if (a >= g.startIndex && a <= g.endIndex) {
          c = g.offsetX;
          for (var h = 0, m = a - g.startIndex; h < m; ) {
            var k = h++;
            c += g.positions[k];
          }
          if (null != d) return this.__getPosition(c, d);
        }
        if (g.lineIndex == b) {
          d = g.offsetY + g.height / 2;
          g = 0;
          for (h = this.get_scrollV() - 1; g < h; )
            (m = g++), (d -= this.__textEngine.lineHeights.get(m));
          if (null != c) return this.__getPosition(c, d);
        }
      }
      return -1;
    },
    __getCursor: function () {
      var a = this.__getGroup(this.get_mouseX(), this.get_mouseY(), !0);
      return null != a && "" != a.format.url
        ? "button"
        : this.__textEngine.selectable
        ? "ibeam"
        : null;
    },
    __getGroup: function (a, b, c) {
      null == c && (c = !1);
      this.__updateLayout();
      a += this.get_scrollH();
      for (var d = 0, e = this.get_scrollV() - 1; d < e; ) {
        var f = d++;
        b += this.__textEngine.lineHeights.get(f);
      }
      !c &&
        b > this.__textEngine.textHeight &&
        (b = this.__textEngine.textHeight);
      d = !0;
      f = 0;
      for (var g = this.__textEngine.layoutGroups.get_length(); f < g; ) {
        var h = f++;
        e = this.__textEngine.layoutGroups.get(h);
        h =
          h < this.__textEngine.layoutGroups.get_length() - 1
            ? this.__textEngine.layoutGroups.get(h + 1)
            : null;
        d &&
          (b < e.offsetY && (b = e.offsetY),
          a < e.offsetX && (a = e.offsetX),
          (d = !1));
        if ((b >= e.offsetY && b <= e.offsetY + e.height) || (!c && null == h))
          if (
            (a >= e.offsetX && a <= e.offsetX + e.width) ||
            (!c && (null == h || h.lineIndex != e.lineIndex))
          )
            return e;
      }
      return null;
    },
    __getPosition: function (a, b) {
      b = this.__getGroup(a, b);
      if (null == b) return ha.get_length(this.__text);
      for (var c = 0, d = 0, e = b.positions.length; d < e; ) {
        var f = d++;
        c += b.positions[f];
        if (a <= b.offsetX + c) {
          if (a <= b.offsetX + (c - b.positions[f]) + b.positions[f] / 2)
            return b.startIndex + f;
          if (b.startIndex + f < b.endIndex) return b.startIndex + f + 1;
          break;
        }
      }
      return b.endIndex;
    },
    __hitTest: function (a, b, c, d, e, f) {
      if (
        !f.get_visible() ||
        this.__isMask ||
        (e && !this.mouseEnabled) ||
        (null != this.get_mask() && !this.get_mask().__hitTestMask(a, b))
      )
        return !1;
      this.__getRenderTransform();
      this.__updateLayout();
      c = this.__renderTransform;
      e = c.a * c.d - c.b * c.c;
      var g = this.__renderTransform,
        h = g.a * g.d - g.b * g.c;
      return this.__textEngine.bounds.contains(
        0 == e ? -c.tx : (1 / e) * (c.c * (c.ty - b) + c.d * (a - c.tx)),
        0 == h ? -g.ty : (1 / h) * (g.a * (b - g.ty) + g.b * (g.tx - a))
      )
        ? (null != d && d.push(f), !0)
        : !1;
    },
    __hitTestMask: function (a, b) {
      this.__getRenderTransform();
      this.__updateLayout();
      var c = this.__renderTransform,
        d = c.a * c.d - c.b * c.c,
        e = this.__renderTransform,
        f = e.a * e.d - e.b * e.c;
      return this.__textEngine.bounds.contains(
        0 == d ? -c.tx : (1 / d) * (c.c * (c.ty - b) + c.d * (a - c.tx)),
        0 == f ? -e.ty : (1 / f) * (e.a * (b - e.ty) + e.b * (e.tx - a))
      )
        ? !0
        : !1;
    },
    __renderCairo: function (a) {},
    __renderCanvas: function (a) {
      a.__isDOM &&
        !this.__renderedOnCanvasWhileOnDOM &&
        ((this.__renderedOnCanvasWhileOnDOM = !0),
        1 == this.get_type() &&
          this.replaceText(0, ha.get_length(this.__text), this.__text),
        this.__isHTML &&
          this.__updateText(
            fb.parse(
              this.__text,
              this.__textFormat,
              this.__textEngine.textFormatRanges
            )
          ),
        (this.__layoutDirty = this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      if (
        null == this.get_mask() ||
        (0 < this.get_mask().get_width() && 0 < this.get_mask().get_height())
      )
        if (
          (this.__updateCacheBitmap(a, !1),
          null == this.__cacheBitmap || this.__isCacheBitmapRender)
        ) {
          var b = this.__textEngine,
            c = b.background || b.border ? b.bounds : b.textBounds,
            d = this.__graphics;
          this.__dirty &&
            (this.__updateLayout(),
            null == d.__bounds && (d.__bounds = new W()),
            d.__bounds.copyFrom(c));
          d.__update(a.__worldTransform);
          if (this.__dirty || d.__dirty) {
            var e = d.__width,
              f = d.__height;
            if (
              !(
                (null != b.text && !ha.equals(b.text, "")) ||
                b.background ||
                b.border ||
                b.__hasFocus ||
                (1 == b.type && b.selectable)
              ) ||
              ((0 >= b.width || 0 >= b.height) && 2 != b.autoSize)
            )
              (this.__graphics.__canvas = null),
                (this.__graphics.__context = null),
                (this.__graphics.__bitmap = null),
                this.__graphics.set___dirty(!1),
                (this.__dirty = !1);
            else {
              null == this.__graphics.__canvas &&
                ((this.__graphics.__canvas =
                  window.document.createElement("canvas")),
                (this.__graphics.__context =
                  this.__graphics.__canvas.getContext("2d")));
              O.context = d.__context;
              var g = d.__renderTransform;
              if (a.__isDOM) {
                var h = a.pixelRatio;
                d.__canvas.width = (e * h) | 0;
                d.__canvas.height = (f * h) | 0;
                d.__canvas.style.width = e + "px";
                d.__canvas.style.height = f + "px";
                e = ya.__pool.get();
                e.copyFrom(g);
                e.scale(h, h);
                a.setTransform(e, O.context);
                ya.__pool.release(e);
              } else
                (d.__canvas.width = e),
                  (d.__canvas.height = f),
                  O.context.setTransform(g.a, g.b, g.c, g.d, g.tx, g.ty);
              null == O.clearRect &&
                (O.clearRect =
                  "undefined" !== typeof navigator &&
                  "undefined" !== typeof navigator.isCocoonJS);
              O.clearRect &&
                O.context.clearRect(0, 0, d.__canvas.width, d.__canvas.height);
              if ((null != b.text && "" != b.text) || b.__hasFocus) {
                g = b.text;
                d.__context.imageSmoothingEnabled =
                  !a.__allowSmoothing ||
                  (0 == b.antiAliasType && 400 == b.sharpness)
                    ? !1
                    : !0;
                if (b.border || b.background)
                  O.context.rect(0.5, 0.5, c.width - 1, c.height - 1),
                    b.background &&
                      ((h = ba.hex(b.backgroundColor & 16777215, 6)),
                      (O.context.fillStyle = "#" + h),
                      O.context.fill()),
                    b.border &&
                      ((O.context.lineWidth = 1),
                      (h = ba.hex(b.borderColor & 16777215, 6)),
                      (O.context.strokeStyle = "#" + h),
                      O.context.stroke());
                O.context.textBaseline = "alphabetic";
                O.context.textAlign = "start";
                h = -this.get_scrollH();
                f = e = 0;
                for (var m = this.get_scrollV() - 1; f < m; ) {
                  var k = f++;
                  e -= b.lineHeights.get(k);
                }
                var p;
                f = 0;
                for (m = b.layoutGroups; f < m.get_length(); )
                  if (
                    ((k = m.get(f)),
                    ++f,
                    !(k.lineIndex < this.get_scrollV() - 1))
                  ) {
                    if (k.lineIndex > this.get_scrollV() + b.bottomScrollV - 2)
                      break;
                    var l = "#" + ba.hex(k.format.color & 16777215, 6);
                    O.context.font = Lb.getFont(k.format);
                    O.context.fillStyle = l;
                    O.context.fillText(
                      ha.substring(g, k.startIndex, k.endIndex),
                      k.offsetX + h - c.x,
                      k.offsetY + k.ascent + e - c.y
                    );
                    if (-1 < this.__caretIndex && b.selectable)
                      if (this.__selectionIndex == this.__caretIndex) {
                        if (
                          this.__showCursor &&
                          k.startIndex <= this.__caretIndex &&
                          k.endIndex >= this.__caretIndex
                        ) {
                          for (
                            var q = (p = 0),
                              r = this.__caretIndex - k.startIndex;
                            q < r;

                          ) {
                            var t = q++;
                            if (k.positions.length <= t) break;
                            p += k.positions[t];
                          }
                          q = 0;
                          r = this.get_scrollV();
                          for (t = k.lineIndex + 1; r < t; ) {
                            var u = r++;
                            q += b.lineHeights.get(u - 1);
                          }
                          O.context.beginPath();
                          r = ba.hex(k.format.color & 16777215, 6);
                          O.context.strokeStyle = "#" + r;
                          O.context.moveTo(
                            k.offsetX + p - this.get_scrollH() - c.x,
                            q + 2 - c.y
                          );
                          O.context.lineWidth = 1;
                          O.context.lineTo(
                            k.offsetX + p - this.get_scrollH() - c.x,
                            q +
                              Lb.getFormatHeight(this.get_defaultTextFormat()) -
                              1 -
                              c.y
                          );
                          O.context.stroke();
                          O.context.closePath();
                        }
                      } else if (
                        (k.startIndex <= this.__caretIndex &&
                          k.endIndex >= this.__caretIndex) ||
                        (k.startIndex <= this.__selectionIndex &&
                          k.endIndex >= this.__selectionIndex) ||
                        (k.startIndex > this.__caretIndex &&
                          k.endIndex < this.__selectionIndex) ||
                        (k.startIndex > this.__selectionIndex &&
                          k.endIndex < this.__caretIndex)
                      )
                        (p =
                          Math.min(this.__selectionIndex, this.__caretIndex) |
                          0),
                          (q =
                            Math.max(this.__selectionIndex, this.__caretIndex) |
                            0),
                          k.startIndex > p && (p = k.startIndex),
                          k.endIndex < q && (q = k.endIndex),
                          (r = this.getCharBoundaries(p)),
                          q >= ha.get_length(b.text)
                            ? ((t = this.getCharBoundaries(
                                ha.get_length(b.text) - 1
                              )),
                              (t.x += t.width + 2))
                            : (t = this.getCharBoundaries(q)),
                          null != r &&
                            null != t &&
                            ((O.context.fillStyle = "#000000"),
                            O.context.fillRect(
                              r.x + h,
                              r.y + e,
                              t.x - r.x,
                              k.height
                            ),
                            (O.context.fillStyle = "#FFFFFF"),
                            O.context.fillText(
                              ha.substring(g, p, q),
                              h + r.x,
                              k.offsetY + k.ascent + e
                            ));
                    k.format.underline &&
                      (O.context.beginPath(),
                      (O.context.strokeStyle = l),
                      (O.context.lineWidth = 1),
                      (l = k.offsetX + h - c.x),
                      (p = Math.floor(k.offsetY + e + k.ascent - c.y) + 0.5),
                      O.context.moveTo(l, p),
                      O.context.lineTo(l + k.width, p),
                      O.context.stroke(),
                      O.context.closePath());
                  }
              } else {
                if (b.border || b.background)
                  b.border
                    ? O.context.rect(0.5, 0.5, c.width - 1, c.height - 1)
                    : O.context.rect(0, 0, c.width, c.height),
                    b.background &&
                      ((c = ba.hex(b.backgroundColor & 16777215, 6)),
                      (O.context.fillStyle = "#" + c),
                      O.context.fill()),
                    b.border &&
                      ((O.context.lineWidth = 1),
                      (O.context.lineCap = "square"),
                      (c = ba.hex(b.borderColor & 16777215, 6)),
                      (O.context.strokeStyle = "#" + c),
                      O.context.stroke());
                if (
                  -1 < this.__caretIndex &&
                  b.selectable &&
                  this.__showCursor
                ) {
                  c = -this.get_scrollH();
                  h = g = 0;
                  for (e = this.get_scrollV() - 1; h < e; )
                    (f = h++), (g += b.lineHeights.get(f));
                  O.context.beginPath();
                  b = ba.hex(this.get_defaultTextFormat().color & 16777215, 6);
                  O.context.strokeStyle = "#" + b;
                  O.context.moveTo(c + 2.5, g + 2.5);
                  O.context.lineWidth = 1;
                  O.context.lineTo(
                    c + 2.5,
                    g + Lb.getFormatHeight(this.get_defaultTextFormat()) - 1
                  );
                  O.context.stroke();
                  O.context.closePath();
                }
              }
              d.__bitmap = sa.fromCanvas(this.__graphics.__canvas);
              d.__visible = !0;
              this.__dirty = !1;
              d.set___dirty(!1);
            }
          }
          d = !1;
          0 == this.__textEngine.antiAliasType &&
            1 == this.__textEngine.gridFitType &&
            (d = a.context.imageSmoothingEnabled) &&
            (a.context.imageSmoothingEnabled = !1);
          (null == this.opaqueBackground && null == this.__graphics) ||
            !this.__renderable ||
            0 >= a.__getAlpha(this.__worldAlpha) ||
            (null != this.opaqueBackground &&
              !this.__isCacheBitmapRender &&
              0 < this.get_width() &&
              0 < this.get_height() &&
              (a.__setBlendMode(this.__worldBlendMode),
              a.__pushMaskObject(this),
              (b = a.context),
              a.setTransform(this.__renderTransform, b),
              (c = this.opaqueBackground),
              (b.fillStyle =
                "rgb(" +
                ((c >>> 16) & 255) +
                "," +
                ((c >>> 8) & 255) +
                "," +
                (c & 255) +
                ")"),
              b.fillRect(0, 0, this.get_width(), this.get_height()),
              a.__popMaskObject(this)),
            null != this.__graphics &&
              this.__renderable &&
              ((e = a.__getAlpha(this.__worldAlpha)),
              0 >= e ||
                ((b = this.__graphics),
                null != b &&
                  (w.render(b, a),
                  (c = b.__width),
                  (g = b.__height),
                  null != b.__canvas &&
                    ((h = a.context),
                    (f = this.__scrollRect),
                    0 < c &&
                      0 < g &&
                      (null == f || (0 < f.width && 0 < f.height)) &&
                      (a.__setBlendMode(this.__worldBlendMode),
                      a.__pushMaskObject(this),
                      (h.globalAlpha = e),
                      a.setTransform(b.__worldTransform, h),
                      a.__isDOM && ((e = 1 / a.pixelRatio), h.scale(e, e)),
                      h.drawImage(b.__canvas, 0, 0, c, g),
                      a.__popMaskObject(this)))))));
          d && (a.context.imageSmoothingEnabled = !0);
        } else
          (d = this.__cacheBitmap),
            d.__renderable &&
              ((c = a.__getAlpha(d.__worldAlpha)),
              0 < c &&
                null != d.__bitmapData &&
                d.__bitmapData.__isValid &&
                d.__bitmapData.readable &&
                ((b = a.context),
                a.__setBlendMode(d.__worldBlendMode),
                a.__pushMaskObject(d, !1),
                pa.convertToCanvas(d.__bitmapData.image),
                (b.globalAlpha = c),
                (c = d.__scrollRect),
                a.setTransform(d.__renderTransform, b),
                (a.__allowSmoothing && d.smoothing) ||
                  (b.imageSmoothingEnabled = !1),
                null == c
                  ? b.drawImage(
                      d.__bitmapData.image.get_src(),
                      0,
                      0,
                      d.__bitmapData.image.width,
                      d.__bitmapData.image.height
                    )
                  : b.drawImage(
                      d.__bitmapData.image.get_src(),
                      c.x,
                      c.y,
                      c.width,
                      c.height
                    ),
                (a.__allowSmoothing && d.smoothing) ||
                  (b.imageSmoothingEnabled = !0),
                a.__popMaskObject(d, !1)));
    },
    __renderDOM: function (a) {
      this.__domRender = !0;
      this.__updateCacheBitmap(a, this.__forceCachedBitmapUpdate);
      this.__domRender = this.__forceCachedBitmapUpdate = !1;
      if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
        this.__renderedOnCanvasWhileOnDOM &&
          ((this.__renderedOnCanvasWhileOnDOM = !1),
          this.__isHTML &&
            null != this.__rawHtmlText &&
            (this.__updateText(this.__rawHtmlText),
            (this.__layoutDirty = this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty())));
        var b = this,
          c = b.__textEngine;
        if (null != b.stage && b.__worldVisible && b.__renderable) {
          if (b.__dirty || b.__renderTransformChanged || null == b.__div)
            if ("" != c.text || c.background || c.border || 1 == c.type) {
              null == b.__div &&
                ((b.__div = window.document.createElement("div")),
                a.__initializeElement(b, b.__div),
                b.__style.setProperty("outline", "none", null),
                b.__div.addEventListener(
                  "input",
                  function (a) {
                    a.preventDefault();
                    b.get_htmlText() != b.__div.innerHTML &&
                      (b.set_htmlText(b.__div.innerHTML), (b.__dirty = !1));
                  },
                  !0
                ));
              c.wordWrap
                ? b.__style.setProperty("word-wrap", "break-word", null)
                : b.__style.setProperty("white-space", "nowrap", null);
              b.__style.setProperty("overflow", "hidden", null);
              c.selectable
                ? (b.__style.setProperty("cursor", "text", null),
                  b.__style.setProperty("-webkit-user-select", "text", null),
                  b.__style.setProperty("-moz-user-select", "text", null),
                  b.__style.setProperty("-ms-user-select", "text", null),
                  b.__style.setProperty("-o-user-select", "text", null))
                : b.__style.setProperty("cursor", "inherit", null);
              b.__div.contentEditable = 1 == c.type;
              var d = b.__style;
              c.background
                ? d.setProperty(
                    "background-color",
                    "#" + ba.hex(c.backgroundColor & 16777215, 6),
                    null
                  )
                : d.removeProperty("background-color");
              var e = c.width,
                f = c.height,
                g = 1,
                h = b.__textFormat.size,
                m = h,
                k = b.__renderTransform;
              if (1 != k.a || 1 != k.d)
                k.a == k.d
                  ? ((g = k.a), (k.a = k.d = 1))
                  : k.a > k.d
                  ? ((g = k.a), (k.d /= k.a), (k.a = 1))
                  : ((g = k.d), (k.a /= k.d), (k.d = 1)),
                  (m *= g),
                  (e = Math.ceil(e * g)),
                  (f = Math.ceil(f * g));
              b.__textFormat.size = m;
              k = c.text;
              var p = 0;
              if (b.__isHTML) {
                for (var l = k; kc.__regexFont.match(l); ) {
                  l = kc.__regexFont.matched(0);
                  var q = "";
                  kc.__regexFace.match(l) &&
                    (q +=
                      "font-family:'" +
                      kc.__getAttributeMatch(kc.__regexFace) +
                      "';");
                  kc.__regexColor.match(l) &&
                    (q +=
                      "color:#" +
                      kc.__getAttributeMatch(kc.__regexColor) +
                      ";");
                  if (kc.__regexSize.match(l)) {
                    p = kc.__getAttributeMatch(kc.__regexSize);
                    var r = Q.cca(p, 0);
                    p = parseFloat(p) * g;
                    q +=
                      "font-size:" + (43 == r || 45 == r ? m + p : p) + "px;";
                  }
                  k = ba.replace(k, l, "<span style='" + q + "'>");
                  l = kc.__regexFont.matchedRight();
                }
                k = k.replace(kc.__regexCloseFont.r, "</span>");
              } else k = ba.htmlEscape(k);
              k = ba.replace(
                k,
                "<p ",
                "<p style='margin-top:0; margin-bottom:0;' "
              );
              g = b.__textFormat.leading;
              b.__textFormat.leading += p | 0;
              m = k.replace(/\r\n/g, "<br>");
              b.__div.innerHTML = m;
              m = b.__div.innerHTML.replace(/\n/g, "<br>");
              b.__div.innerHTML = m;
              m = b.__div.innerHTML.replace(/\r/g, "<br>");
              b.__div.innerHTML = m;
              d.setProperty("font", Lb.getFont(b.__textFormat), null);
              b.__textFormat.size = h;
              b.__textFormat.leading = g;
              d.setProperty("top", "3px", null);
              c.border
                ? (d.setProperty(
                    "border",
                    "solid 1px #" + ba.hex(c.borderColor & 16777215, 6),
                    null
                  ),
                  b.__renderTransform.translate(-1, -1),
                  (b.__renderTransformChanged = !0),
                  (b.__transformDirty = !0))
                : "" != d.border &&
                  (d.removeProperty("border"),
                  (b.__renderTransformChanged = !0));
              d.setProperty(
                "color",
                "#" + ba.hex(b.__textFormat.color & 16777215, 6),
                null
              );
              d.setProperty("width", e + "px", null);
              d.setProperty("height", f + "px", null);
              switch (b.__textFormat.align) {
                case 0:
                  d.setProperty("text-align", "center", null);
                  break;
                case 4:
                  d.setProperty("text-align", "right", null);
                  break;
                default:
                  d.setProperty("text-align", "left", null);
              }
              b.__dirty = !1;
            } else
              null != b.__div &&
                (a.element.removeChild(b.__div), (b.__div = null));
          null != b.__div &&
            ((c = a.__roundPixels),
            (a.__roundPixels = !0),
            a.__updateClip(b),
            a.__applyStyle(b, !0, !0, !0),
            (a.__roundPixels = c));
        } else kc.clear(b, a);
      } else
        this.__renderDOMClear(a),
          (this.__cacheBitmap.stage = this.stage),
          (c = this.__cacheBitmap),
          null != c.stage &&
          c.__worldVisible &&
          c.__renderable &&
          null != c.__bitmapData &&
          c.__bitmapData.__isValid &&
          c.__bitmapData.readable
            ? (a.__pushMaskObject(c),
              null != c.__bitmapData.image.buffer.__srcImage
                ? Sd.renderImage(c, a)
                : Sd.renderCanvas(c, a),
              a.__popMaskObject(c))
            : Sd.clear(c, a);
      this.__renderEvent(a);
    },
    __renderDOMClear: function (a) {
      kc.clear(this, a);
    },
    __renderGL: function (a) {
      this.__updateCacheBitmap(a, !1);
      if (null == this.__cacheBitmap || this.__isCacheBitmapRender) {
        var b = a.__softwareRenderer,
          c = this.__textEngine,
          d = c.background || c.border ? c.bounds : c.textBounds,
          e = this.__graphics;
        this.__dirty &&
          (this.__updateLayout(),
          null == e.__bounds && (e.__bounds = new W()),
          e.__bounds.copyFrom(d));
        e.__update(b.__worldTransform);
        if (this.__dirty || e.__dirty) {
          var f = e.__width,
            g = e.__height;
          if (
            !(
              (null != c.text && !ha.equals(c.text, "")) ||
              c.background ||
              c.border ||
              c.__hasFocus ||
              (1 == c.type && c.selectable)
            ) ||
            ((0 >= c.width || 0 >= c.height) && 2 != c.autoSize)
          )
            (this.__graphics.__canvas = null),
              (this.__graphics.__context = null),
              (this.__graphics.__bitmap = null),
              this.__graphics.set___dirty(!1),
              (this.__dirty = !1);
          else {
            null == this.__graphics.__canvas &&
              ((this.__graphics.__canvas =
                window.document.createElement("canvas")),
              (this.__graphics.__context =
                this.__graphics.__canvas.getContext("2d")));
            O.context = e.__context;
            var h = e.__renderTransform;
            if (b.__isDOM) {
              var m = b.pixelRatio;
              e.__canvas.width = (f * m) | 0;
              e.__canvas.height = (g * m) | 0;
              e.__canvas.style.width = f + "px";
              e.__canvas.style.height = g + "px";
              f = ya.__pool.get();
              f.copyFrom(h);
              f.scale(m, m);
              b.setTransform(f, O.context);
              ya.__pool.release(f);
            } else
              (e.__canvas.width = f),
                (e.__canvas.height = g),
                O.context.setTransform(h.a, h.b, h.c, h.d, h.tx, h.ty);
            null == O.clearRect &&
              (O.clearRect =
                "undefined" !== typeof navigator &&
                "undefined" !== typeof navigator.isCocoonJS);
            O.clearRect &&
              O.context.clearRect(0, 0, e.__canvas.width, e.__canvas.height);
            if ((null != c.text && "" != c.text) || c.__hasFocus) {
              h = c.text;
              e.__context.imageSmoothingEnabled =
                !b.__allowSmoothing ||
                (0 == c.antiAliasType && 400 == c.sharpness)
                  ? !1
                  : !0;
              if (c.border || c.background)
                O.context.rect(0.5, 0.5, d.width - 1, d.height - 1),
                  c.background &&
                    ((b = ba.hex(c.backgroundColor & 16777215, 6)),
                    (O.context.fillStyle = "#" + b),
                    O.context.fill()),
                  c.border &&
                    ((O.context.lineWidth = 1),
                    (b = ba.hex(c.borderColor & 16777215, 6)),
                    (O.context.strokeStyle = "#" + b),
                    O.context.stroke());
              O.context.textBaseline = "alphabetic";
              O.context.textAlign = "start";
              b = -this.get_scrollH();
              f = m = 0;
              for (g = this.get_scrollV() - 1; f < g; ) {
                var k = f++;
                m -= c.lineHeights.get(k);
              }
              var p;
              f = 0;
              for (g = c.layoutGroups; f < g.get_length(); )
                if (
                  ((k = g.get(f)), ++f, !(k.lineIndex < this.get_scrollV() - 1))
                ) {
                  if (k.lineIndex > this.get_scrollV() + c.bottomScrollV - 2)
                    break;
                  var l = "#" + ba.hex(k.format.color & 16777215, 6);
                  O.context.font = Lb.getFont(k.format);
                  O.context.fillStyle = l;
                  O.context.fillText(
                    ha.substring(h, k.startIndex, k.endIndex),
                    k.offsetX + b - d.x,
                    k.offsetY + k.ascent + m - d.y
                  );
                  if (-1 < this.__caretIndex && c.selectable)
                    if (this.__selectionIndex == this.__caretIndex) {
                      if (
                        this.__showCursor &&
                        k.startIndex <= this.__caretIndex &&
                        k.endIndex >= this.__caretIndex
                      ) {
                        for (
                          var q = (p = 0), r = this.__caretIndex - k.startIndex;
                          q < r;

                        ) {
                          var t = q++;
                          if (k.positions.length <= t) break;
                          p += k.positions[t];
                        }
                        q = 0;
                        r = this.get_scrollV();
                        for (t = k.lineIndex + 1; r < t; ) {
                          var u = r++;
                          q += c.lineHeights.get(u - 1);
                        }
                        O.context.beginPath();
                        r = ba.hex(k.format.color & 16777215, 6);
                        O.context.strokeStyle = "#" + r;
                        O.context.moveTo(
                          k.offsetX + p - this.get_scrollH() - d.x,
                          q + 2 - d.y
                        );
                        O.context.lineWidth = 1;
                        O.context.lineTo(
                          k.offsetX + p - this.get_scrollH() - d.x,
                          q +
                            Lb.getFormatHeight(this.get_defaultTextFormat()) -
                            1 -
                            d.y
                        );
                        O.context.stroke();
                        O.context.closePath();
                      }
                    } else if (
                      (k.startIndex <= this.__caretIndex &&
                        k.endIndex >= this.__caretIndex) ||
                      (k.startIndex <= this.__selectionIndex &&
                        k.endIndex >= this.__selectionIndex) ||
                      (k.startIndex > this.__caretIndex &&
                        k.endIndex < this.__selectionIndex) ||
                      (k.startIndex > this.__selectionIndex &&
                        k.endIndex < this.__caretIndex)
                    )
                      (p =
                        Math.min(this.__selectionIndex, this.__caretIndex) | 0),
                        (q =
                          Math.max(this.__selectionIndex, this.__caretIndex) |
                          0),
                        k.startIndex > p && (p = k.startIndex),
                        k.endIndex < q && (q = k.endIndex),
                        (r = this.getCharBoundaries(p)),
                        q >= ha.get_length(c.text)
                          ? ((t = this.getCharBoundaries(
                              ha.get_length(c.text) - 1
                            )),
                            (t.x += t.width + 2))
                          : (t = this.getCharBoundaries(q)),
                        null != r &&
                          null != t &&
                          ((O.context.fillStyle = "#000000"),
                          O.context.fillRect(
                            r.x + b,
                            r.y + m,
                            t.x - r.x,
                            k.height
                          ),
                          (O.context.fillStyle = "#FFFFFF"),
                          O.context.fillText(
                            ha.substring(h, p, q),
                            b + r.x,
                            k.offsetY + k.ascent + m
                          ));
                  k.format.underline &&
                    (O.context.beginPath(),
                    (O.context.strokeStyle = l),
                    (O.context.lineWidth = 1),
                    (l = k.offsetX + b - d.x),
                    (p = Math.floor(k.offsetY + m + k.ascent - d.y) + 0.5),
                    O.context.moveTo(l, p),
                    O.context.lineTo(l + k.width, p),
                    O.context.stroke(),
                    O.context.closePath());
                }
            } else {
              if (c.border || c.background)
                c.border
                  ? O.context.rect(0.5, 0.5, d.width - 1, d.height - 1)
                  : O.context.rect(0, 0, d.width, d.height),
                  c.background &&
                    ((d = ba.hex(c.backgroundColor & 16777215, 6)),
                    (O.context.fillStyle = "#" + d),
                    O.context.fill()),
                  c.border &&
                    ((O.context.lineWidth = 1),
                    (O.context.lineCap = "square"),
                    (d = ba.hex(c.borderColor & 16777215, 6)),
                    (O.context.strokeStyle = "#" + d),
                    O.context.stroke());
              if (-1 < this.__caretIndex && c.selectable && this.__showCursor) {
                d = -this.get_scrollH();
                b = h = 0;
                for (m = this.get_scrollV() - 1; b < m; )
                  (f = b++), (h += c.lineHeights.get(f));
                O.context.beginPath();
                c = ba.hex(this.get_defaultTextFormat().color & 16777215, 6);
                O.context.strokeStyle = "#" + c;
                O.context.moveTo(d + 2.5, h + 2.5);
                O.context.lineWidth = 1;
                O.context.lineTo(
                  d + 2.5,
                  h + Lb.getFormatHeight(this.get_defaultTextFormat()) - 1
                );
                O.context.stroke();
                O.context.closePath();
              }
            }
            e.__bitmap = sa.fromCanvas(this.__graphics.__canvas);
            e.__visible = !0;
            this.__dirty = !1;
            e.set___dirty(!1);
          }
        }
        (null == this.opaqueBackground && null == this.__graphics) ||
          !this.__renderable ||
          0 >= this.__worldAlpha ||
          (null != this.opaqueBackground &&
            !this.__isCacheBitmapRender &&
            0 < this.get_width() &&
            0 < this.get_height() &&
            (a.__setBlendMode(this.__worldBlendMode),
            a.__pushMaskObject(this),
            (e = a.__context3D),
            (c = W.__pool.get()),
            c.setTo(0, 0, this.get_width(), this.get_height()),
            a.__pushMaskRect(c, this.__renderTransform),
            (d = this.opaqueBackground),
            e.clear(
              ((d >>> 16) & 255) / 255,
              ((d >>> 8) & 255) / 255,
              (d & 255) / 255,
              1,
              0,
              0,
              1
            ),
            a.__popMaskRect(),
            a.__popMaskObject(this),
            W.__pool.release(c)),
          null != this.__graphics && lg.render(this, a));
      } else Ah.render(this.__cacheBitmap, a);
      this.__renderEvent(a);
    },
    __renderGLMask: function (a) {
      var b = a.__softwareRenderer,
        c = this.__textEngine,
        d = c.background || c.border ? c.bounds : c.textBounds,
        e = this.__graphics;
      this.__dirty &&
        (this.__updateLayout(),
        null == e.__bounds && (e.__bounds = new W()),
        e.__bounds.copyFrom(d));
      e.__update(b.__worldTransform);
      if (this.__dirty || e.__dirty) {
        var f = e.__width,
          g = e.__height;
        if (
          !(
            (null != c.text && !ha.equals(c.text, "")) ||
            c.background ||
            c.border ||
            c.__hasFocus ||
            (1 == c.type && c.selectable)
          ) ||
          ((0 >= c.width || 0 >= c.height) && 2 != c.autoSize)
        )
          (this.__graphics.__canvas = null),
            (this.__graphics.__context = null),
            (this.__graphics.__bitmap = null),
            this.__graphics.set___dirty(!1),
            (this.__dirty = !1);
        else {
          null == this.__graphics.__canvas &&
            ((this.__graphics.__canvas =
              window.document.createElement("canvas")),
            (this.__graphics.__context =
              this.__graphics.__canvas.getContext("2d")));
          O.context = e.__context;
          var h = e.__renderTransform;
          if (b.__isDOM) {
            var m = b.pixelRatio;
            e.__canvas.width = (f * m) | 0;
            e.__canvas.height = (g * m) | 0;
            e.__canvas.style.width = f + "px";
            e.__canvas.style.height = g + "px";
            f = ya.__pool.get();
            f.copyFrom(h);
            f.scale(m, m);
            b.setTransform(f, O.context);
            ya.__pool.release(f);
          } else
            (e.__canvas.width = f),
              (e.__canvas.height = g),
              O.context.setTransform(h.a, h.b, h.c, h.d, h.tx, h.ty);
          null == O.clearRect &&
            (O.clearRect =
              "undefined" !== typeof navigator &&
              "undefined" !== typeof navigator.isCocoonJS);
          O.clearRect &&
            O.context.clearRect(0, 0, e.__canvas.width, e.__canvas.height);
          if ((null != c.text && "" != c.text) || c.__hasFocus) {
            h = c.text;
            e.__context.imageSmoothingEnabled =
              !b.__allowSmoothing ||
              (0 == c.antiAliasType && 400 == c.sharpness)
                ? !1
                : !0;
            if (c.border || c.background)
              O.context.rect(0.5, 0.5, d.width - 1, d.height - 1),
                c.background &&
                  ((b = ba.hex(c.backgroundColor & 16777215, 6)),
                  (O.context.fillStyle = "#" + b),
                  O.context.fill()),
                c.border &&
                  ((O.context.lineWidth = 1),
                  (b = ba.hex(c.borderColor & 16777215, 6)),
                  (O.context.strokeStyle = "#" + b),
                  O.context.stroke());
            O.context.textBaseline = "alphabetic";
            O.context.textAlign = "start";
            b = -this.get_scrollH();
            f = m = 0;
            for (g = this.get_scrollV() - 1; f < g; ) {
              var k = f++;
              m -= c.lineHeights.get(k);
            }
            var p;
            f = 0;
            for (g = c.layoutGroups; f < g.get_length(); )
              if (
                ((k = g.get(f)), ++f, !(k.lineIndex < this.get_scrollV() - 1))
              ) {
                if (k.lineIndex > this.get_scrollV() + c.bottomScrollV - 2)
                  break;
                var l = "#" + ba.hex(k.format.color & 16777215, 6);
                O.context.font = Lb.getFont(k.format);
                O.context.fillStyle = l;
                O.context.fillText(
                  ha.substring(h, k.startIndex, k.endIndex),
                  k.offsetX + b - d.x,
                  k.offsetY + k.ascent + m - d.y
                );
                if (-1 < this.__caretIndex && c.selectable)
                  if (this.__selectionIndex == this.__caretIndex) {
                    if (
                      this.__showCursor &&
                      k.startIndex <= this.__caretIndex &&
                      k.endIndex >= this.__caretIndex
                    ) {
                      for (
                        var q = (p = 0), r = this.__caretIndex - k.startIndex;
                        q < r;

                      ) {
                        var t = q++;
                        if (k.positions.length <= t) break;
                        p += k.positions[t];
                      }
                      q = 0;
                      r = this.get_scrollV();
                      for (t = k.lineIndex + 1; r < t; ) {
                        var u = r++;
                        q += c.lineHeights.get(u - 1);
                      }
                      O.context.beginPath();
                      r = ba.hex(k.format.color & 16777215, 6);
                      O.context.strokeStyle = "#" + r;
                      O.context.moveTo(
                        k.offsetX + p - this.get_scrollH() - d.x,
                        q + 2 - d.y
                      );
                      O.context.lineWidth = 1;
                      O.context.lineTo(
                        k.offsetX + p - this.get_scrollH() - d.x,
                        q +
                          Lb.getFormatHeight(this.get_defaultTextFormat()) -
                          1 -
                          d.y
                      );
                      O.context.stroke();
                      O.context.closePath();
                    }
                  } else if (
                    (k.startIndex <= this.__caretIndex &&
                      k.endIndex >= this.__caretIndex) ||
                    (k.startIndex <= this.__selectionIndex &&
                      k.endIndex >= this.__selectionIndex) ||
                    (k.startIndex > this.__caretIndex &&
                      k.endIndex < this.__selectionIndex) ||
                    (k.startIndex > this.__selectionIndex &&
                      k.endIndex < this.__caretIndex)
                  )
                    (p =
                      Math.min(this.__selectionIndex, this.__caretIndex) | 0),
                      (q =
                        Math.max(this.__selectionIndex, this.__caretIndex) | 0),
                      k.startIndex > p && (p = k.startIndex),
                      k.endIndex < q && (q = k.endIndex),
                      (r = this.getCharBoundaries(p)),
                      q >= ha.get_length(c.text)
                        ? ((t = this.getCharBoundaries(
                            ha.get_length(c.text) - 1
                          )),
                          (t.x += t.width + 2))
                        : (t = this.getCharBoundaries(q)),
                      null != r &&
                        null != t &&
                        ((O.context.fillStyle = "#000000"),
                        O.context.fillRect(
                          r.x + b,
                          r.y + m,
                          t.x - r.x,
                          k.height
                        ),
                        (O.context.fillStyle = "#FFFFFF"),
                        O.context.fillText(
                          ha.substring(h, p, q),
                          b + r.x,
                          k.offsetY + k.ascent + m
                        ));
                k.format.underline &&
                  (O.context.beginPath(),
                  (O.context.strokeStyle = l),
                  (O.context.lineWidth = 1),
                  (l = k.offsetX + b - d.x),
                  (p = Math.floor(k.offsetY + m + k.ascent - d.y) + 0.5),
                  O.context.moveTo(l, p),
                  O.context.lineTo(l + k.width, p),
                  O.context.stroke(),
                  O.context.closePath());
              }
          } else {
            if (c.border || c.background)
              c.border
                ? O.context.rect(0.5, 0.5, d.width - 1, d.height - 1)
                : O.context.rect(0, 0, d.width, d.height),
                c.background &&
                  ((d = ba.hex(c.backgroundColor & 16777215, 6)),
                  (O.context.fillStyle = "#" + d),
                  O.context.fill()),
                c.border &&
                  ((O.context.lineWidth = 1),
                  (O.context.lineCap = "square"),
                  (d = ba.hex(c.borderColor & 16777215, 6)),
                  (O.context.strokeStyle = "#" + d),
                  O.context.stroke());
            if (-1 < this.__caretIndex && c.selectable && this.__showCursor) {
              d = -this.get_scrollH();
              b = h = 0;
              for (m = this.get_scrollV() - 1; b < m; )
                (f = b++), (h += c.lineHeights.get(f));
              O.context.beginPath();
              c = ba.hex(this.get_defaultTextFormat().color & 16777215, 6);
              O.context.strokeStyle = "#" + c;
              O.context.moveTo(d + 2.5, h + 2.5);
              O.context.lineWidth = 1;
              O.context.lineTo(
                d + 2.5,
                h + Lb.getFormatHeight(this.get_defaultTextFormat()) - 1
              );
              O.context.stroke();
              O.context.closePath();
            }
          }
          e.__bitmap = sa.fromCanvas(this.__graphics.__canvas);
          e.__visible = !0;
          this.__dirty = !1;
          e.set___dirty(!1);
        }
      }
      Vb.prototype.__renderGLMask.call(this, a);
    },
    __replaceSelectedText: function (a, b) {
      null == b && (b = !0);
      null == a && (a = "");
      if ("" != a || this.__selectionIndex != this.__caretIndex) {
        var c =
            this.__caretIndex < this.__selectionIndex
              ? this.__caretIndex
              : this.__selectionIndex,
          d =
            this.__caretIndex > this.__selectionIndex
              ? this.__caretIndex
              : this.__selectionIndex;
        if (
          !(
            c == d &&
            0 < this.__textEngine.maxChars &&
            ha.get_length(this.__text) == this.__textEngine.maxChars
          )
        ) {
          c > ha.get_length(this.__text) && (c = ha.get_length(this.__text));
          d > ha.get_length(this.__text) && (d = ha.get_length(this.__text));
          if (d < c) {
            var e = d;
            d = c;
            c = e;
          }
          0 > c && (c = 0);
          this.__replaceText(c, d, a, b);
          a = c + ha.get_length(u.__cast(a, String));
          a > ha.get_length(this.__text) && (a = ha.get_length(this.__text));
          this.setSelection(a, a);
          this.__updateScrollH();
        }
      }
    },
    __replaceText: function (a, b, c, d) {
      if (!(b < a || 0 > a || b > ha.get_length(this.__text) || null == c)) {
        d &&
          ((c = this.__textEngine.restrictText(c)),
          0 < this.__textEngine.maxChars &&
            ((d = b - a),
            (d = this.__textEngine.maxChars - ha.get_length(this.__text) + d),
            0 >= d ? (c = "") : d < c.length && (c = Q.substr(c, 0, d))));
        this.__updateText(
          ha.substring(this.__text, 0, a) + c + ha.substring(this.__text, b)
        );
        b > ha.get_length(this.__text) && (b = ha.get_length(this.__text));
        d = c.length - (b - a);
        for (
          var e = 0, f;
          e < this.__textEngine.textFormatRanges.get_length();

        )
          (f = this.__textEngine.textFormatRanges.get(e)),
            f.start <= a && f.end >= b
              ? ((f.end += d), ++e)
              : f.start >= a && f.end <= b
              ? (0 < e
                  ? this.__textEngine.textFormatRanges.splice(e, 1)
                  : ((f.start = 0), (f.end = a + c.length), ++e),
                (d -= f.end - f.start))
              : (f.start > a && f.start <= b && (f.start += d), ++e);
        this.__updateScrollH();
        this.__layoutDirty = this.__dirty = !0;
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty());
      }
    },
    __shouldCacheHardware: function (a) {
      return 1 == a ? !0 : !1;
    },
    __startCursorTimer: function () {
      this.__cursorTimer = af.delay(B(this, this.__startCursorTimer), 600);
      this.__showCursor = !this.__showCursor;
      this.__dirty = !0;
      this.__renderDirty ||
        ((this.__renderDirty = !0), this.__setParentRenderDirty());
    },
    __startTextInput: function () {
      0 > this.__caretIndex &&
        (this.__selectionIndex = this.__caretIndex =
          ha.get_length(this.__text));
      (hb.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) &&
        this.__enableInput();
    },
    __stopCursorTimer: function () {
      null != this.__cursorTimer &&
        (this.__cursorTimer.stop(), (this.__cursorTimer = null));
      this.__showCursor &&
        ((this.__showCursor = !1),
        (this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
    },
    __stopTextInput: function () {
      (hb.__supportDOM ? this.__renderedOnCanvasWhileOnDOM : 1) &&
        this.__disableInput();
    },
    __updateCacheBitmap: function (a, b) {
      return null != this.__filters ||
        "opengl" != a.__type ||
        null != this.__cacheBitmap ||
        this.__domRender
        ? Vb.prototype.__updateCacheBitmap.call(this, a, b || this.__dirty)
          ? (null != this.__cacheBitmap &&
              ((this.__cacheBitmap.__renderTransform.tx -= this.__offsetX),
              (this.__cacheBitmap.__renderTransform.ty -= this.__offsetY)),
            !0)
          : !1
        : !1;
    },
    __updateLayout: function () {
      if (this.__layoutDirty) {
        var a = this.__textEngine.width;
        this.__textEngine.update();
        if (2 != this.__textEngine.autoSize) {
          if (this.__textEngine.width != a)
            switch (this.__textEngine.autoSize) {
              case 0:
                this.set_x(this.get_x() + (a - this.__textEngine.width) / 2);
                break;
              case 3:
                this.set_x(this.get_x() + (a - this.__textEngine.width));
            }
          this.__textEngine.getBounds();
        }
        this.__layoutDirty = !1;
      }
    },
    __updateScrollH: function () {
      if (!this.get_multiline() && 1 == this.get_type()) {
        this.__layoutDirty = !0;
        this.__updateLayout();
        var a = this.__textEngine.textWidth - this.__textEngine.width + 4;
        0 < a
          ? this.__caretIndex >= ha.get_length(this.get_text())
            ? this.set_scrollH(Math.ceil(a))
            : ((a = W.__pool.get()),
              this.__getCharBoundaries(this.__caretIndex, a),
              a.x < this.get_scrollH()
                ? this.set_scrollH(Math.floor(a.x - 2))
                : a.x > this.get_scrollH() + this.__textEngine.width &&
                  this.set_scrollH(
                    Math.ceil(a.x - this.__textEngine.width - 2)
                  ),
              W.__pool.release(a))
          : this.set_scrollH(0);
      }
    },
    __updateText: function (a) {
      hb.__supportDOM &&
        this.__renderedOnCanvasWhileOnDOM &&
        (this.__forceCachedBitmapUpdate = this.__text != a);
      this.__textEngine.set_text(a);
      this.__text = this.__textEngine.text;
      ha.get_length(this.__text) < this.__caretIndex &&
        (this.__selectionIndex = this.__caretIndex =
          ha.get_length(this.__text));
      if (
        !this.__displayAsPassword ||
        (hb.__supportDOM && !this.__renderedOnCanvasWhileOnDOM)
      )
        this.__textEngine.set_text(this.__text);
      else {
        a = "";
        for (var b = 0, c = ha.get_length(this.get_text()); b < c; )
          b++, (a += "*");
        this.__textEngine.set_text(a);
      }
    },
    __updateTransforms: function (a) {
      Vb.prototype.__updateTransforms.call(this, a);
      a = this.__renderTransform;
      var b = this.__offsetX,
        c = this.__offsetY;
      a.tx = b * a.a + c * a.c + a.tx;
      a.ty = b * a.b + c * a.d + a.ty;
    },
    get_antiAliasType: function () {
      return this.__textEngine.antiAliasType;
    },
    set_antiAliasType: function (a) {
      return (this.__textEngine.antiAliasType = a);
    },
    get_autoSize: function () {
      return this.__textEngine.autoSize;
    },
    set_autoSize: function (a) {
      a != this.__textEngine.autoSize &&
        ((this.__layoutDirty = this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      return (this.__textEngine.autoSize = a);
    },
    get_background: function () {
      return this.__textEngine.background;
    },
    set_background: function (a) {
      a != this.__textEngine.background &&
        ((this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      return (this.__textEngine.background = a);
    },
    get_backgroundColor: function () {
      return this.__textEngine.backgroundColor;
    },
    set_backgroundColor: function (a) {
      a != this.__textEngine.backgroundColor &&
        ((this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      return (this.__textEngine.backgroundColor = a);
    },
    get_border: function () {
      return this.__textEngine.border;
    },
    set_border: function (a) {
      a != this.__textEngine.border &&
        ((this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      return (this.__textEngine.border = a);
    },
    get_borderColor: function () {
      return this.__textEngine.borderColor;
    },
    set_borderColor: function (a) {
      a != this.__textEngine.borderColor &&
        ((this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      return (this.__textEngine.borderColor = a);
    },
    get_bottomScrollV: function () {
      this.__updateLayout();
      return this.__textEngine.bottomScrollV;
    },
    get_caretIndex: function () {
      return this.__caretIndex;
    },
    get_defaultTextFormat: function () {
      return this.__textFormat.clone();
    },
    set_defaultTextFormat: function (a) {
      this.__textFormat.__merge(a);
      this.__dirty = this.__layoutDirty = !0;
      this.__renderDirty ||
        ((this.__renderDirty = !0), this.__setParentRenderDirty());
      return a;
    },
    get_displayAsPassword: function () {
      return this.__displayAsPassword;
    },
    set_displayAsPassword: function (a) {
      a != this.__displayAsPassword &&
        ((this.__layoutDirty = this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()),
        (this.__displayAsPassword = a),
        this.__updateText(this.__text));
      return a;
    },
    get_embedFonts: function () {
      return this.__textEngine.embedFonts;
    },
    set_embedFonts: function (a) {
      return (this.__textEngine.embedFonts = a);
    },
    get_gridFitType: function () {
      return this.__textEngine.gridFitType;
    },
    set_gridFitType: function (a) {
      return (this.__textEngine.gridFitType = a);
    },
    get_height: function () {
      this.__updateLayout();
      return this.__textEngine.height * Math.abs(this.get_scaleY());
    },
    set_height: function (a) {
      a != this.__textEngine.height &&
        (this.__setTransformDirty(),
        (this.__layoutDirty = this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()),
        (this.__textEngine.height = a));
      return this.__textEngine.height * Math.abs(this.get_scaleY());
    },
    get_htmlText: function () {
      return this.__isHTML ? this.__rawHtmlText : this.__text;
    },
    set_htmlText: function (a) {
      (this.__isHTML && this.__text == a) ||
        ((this.__layoutDirty = this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      this.__isHTML = !0;
      this.__rawHtmlText = a;
      a = fb.parse(a, this.__textFormat, this.__textEngine.textFormatRanges);
      if (hb.__supportDOM) {
        1 < this.__textEngine.textFormatRanges.get_length() &&
          this.__textEngine.textFormatRanges.splice(
            1,
            this.__textEngine.textFormatRanges.get_length() - 1
          );
        var b = this.__textEngine.textFormatRanges.get(0);
        b.format = this.__textFormat;
        b.start = 0;
        this.__renderedOnCanvasWhileOnDOM
          ? ((b.end = a.length), this.__updateText(a))
          : ((b.end = this.__rawHtmlText.length),
            this.__updateText(this.__rawHtmlText));
      } else this.__updateText(a);
      return a;
    },
    get_length: function () {
      return null != this.__text ? ha.get_length(this.__text) : 0;
    },
    get_maxChars: function () {
      return this.__textEngine.maxChars;
    },
    set_maxChars: function (a) {
      a != this.__textEngine.maxChars &&
        ((this.__textEngine.maxChars = a),
        (this.__layoutDirty = this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      return a;
    },
    get_maxScrollH: function () {
      this.__updateLayout();
      return this.__textEngine.maxScrollH;
    },
    get_maxScrollV: function () {
      this.__updateLayout();
      return this.__textEngine.maxScrollV;
    },
    get_mouseWheelEnabled: function () {
      return this.__mouseWheelEnabled;
    },
    set_mouseWheelEnabled: function (a) {
      return (this.__mouseWheelEnabled = a);
    },
    get_multiline: function () {
      return this.__textEngine.multiline;
    },
    set_multiline: function (a) {
      a != this.__textEngine.multiline &&
        ((this.__layoutDirty = this.__dirty = !0),
        this.__updateText(this.__text),
        this.__updateScrollH(),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      return (this.__textEngine.multiline = a);
    },
    get_numLines: function () {
      this.__updateLayout();
      return this.__textEngine.numLines;
    },
    get_restrict: function () {
      return this.__textEngine.restrict;
    },
    set_restrict: function (a) {
      this.__textEngine.restrict != a &&
        (this.__textEngine.set_restrict(a), this.__updateText(this.__text));
      return a;
    },
    get_scrollH: function () {
      return this.__textEngine.scrollH;
    },
    set_scrollH: function (a) {
      this.__updateLayout();
      a > this.__textEngine.maxScrollH && (a = this.__textEngine.maxScrollH);
      0 > a && (a = 0);
      a != this.__textEngine.scrollH &&
        ((this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()),
        this.dispatchEvent(new ma("scroll")));
      return (this.__textEngine.scrollH = a);
    },
    get_scrollV: function () {
      return this.__textEngine.scrollV;
    },
    set_scrollV: function (a) {
      this.__updateLayout();
      a > this.__textEngine.maxScrollV && (a = this.__textEngine.maxScrollV);
      1 > a && (a = 1);
      a != this.__textEngine.scrollV &&
        ((this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()),
        this.dispatchEvent(new ma("scroll")));
      return (this.__textEngine.scrollV = a);
    },
    get_selectable: function () {
      return this.__textEngine.selectable;
    },
    set_selectable: function (a) {
      a != this.__textEngine.selectable &&
        1 == this.get_type() &&
        (null != this.stage && this.stage.get_focus() == this
          ? this.__startTextInput()
          : a || this.__stopTextInput());
      return (this.__textEngine.selectable = a);
    },
    get_selectionBeginIndex: function () {
      return Math.min(this.__caretIndex, this.__selectionIndex) | 0;
    },
    get_selectionEndIndex: function () {
      return Math.max(this.__caretIndex, this.__selectionIndex) | 0;
    },
    get_sharpness: function () {
      return this.__textEngine.sharpness;
    },
    set_sharpness: function (a) {
      a != this.__textEngine.sharpness &&
        ((this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      return (this.__textEngine.sharpness = a);
    },
    get_tabEnabled: function () {
      return null == this.__tabEnabled
        ? 1 == this.__textEngine.type
        : this.__tabEnabled;
    },
    get_text: function () {
      return this.__text;
    },
    set_text: function (a) {
      if (this.__isHTML || this.__text != a)
        (this.__layoutDirty = this.__dirty = !0),
          this.__renderDirty ||
            ((this.__renderDirty = !0), this.__setParentRenderDirty());
      else return a;
      1 < this.__textEngine.textFormatRanges.get_length() &&
        this.__textEngine.textFormatRanges.splice(
          1,
          this.__textEngine.textFormatRanges.get_length() - 1
        );
      var b = this.__textEngine.textFormatRanges.get(0);
      b.format = this.__textFormat;
      b.start = 0;
      b.end = ha.get_length(a);
      this.__isHTML = !1;
      this.__updateText(a);
      return a;
    },
    get_textColor: function () {
      return this.__textFormat.color;
    },
    set_textColor: function (a) {
      a != this.__textFormat.color &&
        ((this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      for (
        var b = 0, c = this.__textEngine.textFormatRanges;
        b < c.get_length();

      ) {
        var d = c.get(b);
        ++b;
        d.format.color = a;
      }
      return (this.__textFormat.color = a);
    },
    get_textWidth: function () {
      this.__updateLayout();
      return this.__textEngine.textWidth;
    },
    get_textHeight: function () {
      this.__updateLayout();
      return this.__textEngine.textHeight;
    },
    get_type: function () {
      return this.__textEngine.type;
    },
    set_type: function (a) {
      a != this.__textEngine.type &&
        (1 == a
          ? (this.addEventListener(
              "addedToStage",
              B(this, this.this_onAddedToStage)
            ),
            this.this_onFocusIn(null),
            (this.__textEngine.__useIntAdvances = !0))
          : (this.removeEventListener(
              "addedToStage",
              B(this, this.this_onAddedToStage)
            ),
            this.__stopTextInput(),
            (this.__textEngine.__useIntAdvances = null)),
        (this.__layoutDirty = this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      return (this.__textEngine.type = a);
    },
    get_width: function () {
      this.__updateLayout();
      return this.__textEngine.width * Math.abs(this.__scaleX);
    },
    set_width: function (a) {
      a != this.__textEngine.width &&
        (this.__setTransformDirty(),
        (this.__layoutDirty = this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()),
        (this.__textEngine.width = a));
      return this.__textEngine.width * Math.abs(this.__scaleX);
    },
    get_wordWrap: function () {
      return this.__textEngine.wordWrap;
    },
    set_wordWrap: function (a) {
      a != this.__textEngine.wordWrap &&
        ((this.__layoutDirty = this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
      return (this.__textEngine.wordWrap = a);
    },
    get_x: function () {
      return this.__transform.tx + this.__offsetX;
    },
    set_x: function (a) {
      a != this.__transform.tx + this.__offsetX && this.__setTransformDirty();
      return (this.__transform.tx = a - this.__offsetX);
    },
    get_y: function () {
      return this.__transform.ty + this.__offsetY;
    },
    set_y: function (a) {
      a != this.__transform.ty + this.__offsetY && this.__setTransformDirty();
      return (this.__transform.ty = a - this.__offsetY);
    },
    stage_onMouseMove: function (a) {
      null != this.stage &&
        this.__textEngine.selectable &&
        0 <= this.__selectionIndex &&
        (this.__updateLayout(),
        (a = this.__getPosition(
          this.get_mouseX() + this.get_scrollH(),
          this.get_mouseY()
        )),
        a != this.__caretIndex &&
          ((this.__caretIndex = a),
          hb.__supportDOM
            ? this.__renderedOnCanvasWhileOnDOM &&
              (this.__forceCachedBitmapUpdate = !0)
            : ((this.__dirty = !0),
              this.__renderDirty ||
                ((this.__renderDirty = !0), this.__setParentRenderDirty()))));
    },
    stage_onMouseUp: function (a) {
      if (
        null != this.stage &&
        (this.stage.removeEventListener(
          "mouseMove",
          B(this, this.stage_onMouseMove)
        ),
        this.stage.removeEventListener(
          "mouseUp",
          B(this, this.stage_onMouseUp)
        ),
        this.stage.get_focus() == this)
      ) {
        this.__getWorldTransform();
        this.__updateLayout();
        this.get_x();
        this.get_y();
        this.get_x();
        this.get_y();
        var b = this.__getPosition(
          this.get_mouseX() + this.get_scrollH(),
          this.get_mouseY()
        );
        a = Math.min(this.__selectionIndex, b) | 0;
        b = Math.max(this.__selectionIndex, b) | 0;
        this.__selectionIndex = a;
        this.__caretIndex = b;
        this.__inputEnabled &&
          (this.this_onFocusIn(null),
          this.__stopCursorTimer(),
          this.__startCursorTimer(),
          hb.__supportDOM &&
            this.__renderedOnCanvasWhileOnDOM &&
            (this.__forceCachedBitmapUpdate = !0));
      }
    },
    this_onAddedToStage: function (a) {
      this.this_onFocusIn(null);
    },
    this_onFocusIn: function (a) {
      1 == this.get_type() &&
        null != this.stage &&
        this.stage.get_focus() == this &&
        this.__startTextInput();
    },
    this_onFocusOut: function (a) {
      this.__stopCursorTimer();
      null != a.relatedObject && u.__instanceof(a.relatedObject, De)
        ? (null != this.stage &&
            (this.stage.window.onTextInput.remove(
              B(this, this.window_onTextInput)
            ),
            this.stage.window.onKeyDown.remove(B(this, this.window_onKeyDown))),
          (this.__inputEnabled = !1))
        : this.__stopTextInput();
      this.__selectionIndex != this.__caretIndex &&
        ((this.__selectionIndex = this.__caretIndex),
        (this.__dirty = !0),
        this.__renderDirty ||
          ((this.__renderDirty = !0), this.__setParentRenderDirty()));
    },
    this_onKeyDown: function (a) {
      this.get_selectable() &&
        1 != this.get_type() &&
        67 == a.keyCode &&
        (a.commandKey || a.ctrlKey) &&
        this.__caretIndex != this.__selectionIndex &&
        qe.set_text(
          ha.substring(this.__text, this.__caretIndex, this.__selectionIndex)
        );
    },
    this_onMouseDown: function (a) {
      if (this.get_selectable() || 1 == this.get_type())
        this.__updateLayout(),
          (this.__selectionIndex = this.__caretIndex =
            this.__getPosition(
              this.get_mouseX() + this.get_scrollH(),
              this.get_mouseY()
            )),
          hb.__supportDOM ||
            ((this.__dirty = !0),
            this.__renderDirty ||
              ((this.__renderDirty = !0), this.__setParentRenderDirty())),
          this.stage.addEventListener(
            "mouseMove",
            B(this, this.stage_onMouseMove)
          ),
          this.stage.addEventListener("mouseUp", B(this, this.stage_onMouseUp));
    },
    this_onMouseWheel: function (a) {
      this.set_scrollV(this.get_scrollV() - a.delta);
    },
    window_onKeyDown: function (a, b) {
      switch (a) {
        case 8:
          this.__selectionIndex == this.__caretIndex &&
            0 < this.__caretIndex &&
            (this.__selectionIndex = this.__caretIndex - 1);
          this.__selectionIndex != this.__caretIndex &&
            (this.replaceSelectedText(""),
            (this.__selectionIndex = this.__caretIndex),
            this.dispatchEvent(new ma("change", !0)));
          break;
        case 97:
          this.get_selectable() &&
            (Za.get_metaKey(b) || Za.get_ctrlKey(b)) &&
            ((this.__caretIndex = ha.get_length(this.__text)),
            (this.__selectionIndex = 0));
          break;
        case 99:
          (Za.get_metaKey(b) || Za.get_ctrlKey(b)) &&
            this.__caretIndex != this.__selectionIndex &&
            qe.set_text(
              ha.substring(
                this.__text,
                this.__caretIndex,
                this.__selectionIndex
              )
            );
          break;
        case 120:
          (Za.get_metaKey(b) || Za.get_ctrlKey(b)) &&
            this.__caretIndex != this.__selectionIndex &&
            (qe.set_text(
              ha.substring(
                this.__text,
                this.__caretIndex,
                this.__selectionIndex
              )
            ),
            this.replaceSelectedText(""),
            this.dispatchEvent(new ma("change", !0)));
          break;
        case 127:
          this.__selectionIndex == this.__caretIndex &&
            this.__caretIndex < ha.get_length(this.__text) &&
            (this.__selectionIndex = this.__caretIndex + 1);
          this.__selectionIndex != this.__caretIndex &&
            (this.replaceSelectedText(""),
            (this.__selectionIndex = this.__caretIndex),
            this.dispatchEvent(new ma("change", !0)));
          break;
        case 1073741898:
          this.get_selectable() &&
            (this.__caretBeginningOfLine(),
            this.__stopCursorTimer(),
            this.__startCursorTimer());
          break;
        case 1073741901:
          this.get_selectable() &&
            (this.__caretEndOfLine(),
            this.__stopCursorTimer(),
            this.__startCursorTimer());
          break;
        case 1073741903:
          this.get_selectable() &&
            (Za.get_metaKey(b)
              ? (this.__caretEndOfLine(),
                Za.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex))
              : Za.get_shiftKey(b)
              ? this.__caretNextCharacter()
              : (this.__selectionIndex == this.__caretIndex
                  ? this.__caretNextCharacter()
                  : (this.__caretIndex =
                      Math.max(this.__caretIndex, this.__selectionIndex) | 0),
                (this.__selectionIndex = this.__caretIndex)),
            this.__updateScrollH(),
            this.__stopCursorTimer(),
            this.__startCursorTimer());
          break;
        case 1073741904:
          this.get_selectable() &&
            (Za.get_metaKey(b)
              ? (this.__caretBeginningOfLine(),
                Za.get_shiftKey(b) ||
                  (this.__selectionIndex = this.__caretIndex))
              : Za.get_shiftKey(b)
              ? this.__caretPreviousCharacter()
              : (this.__selectionIndex == this.__caretIndex
                  ? this.__caretPreviousCharacter()
                  : (this.__caretIndex =
                      Math.min(this.__caretIndex, this.__selectionIndex) | 0),
                (this.__selectionIndex = this.__caretIndex)),
            this.__updateScrollH(),
            this.__stopCursorTimer(),
            this.__startCursorTimer());
          break;
        case 1073741905:
          this.get_selectable() &&
            this.__textEngine.multiline &&
            (Za.get_shiftKey(b)
              ? this.__caretNextLine()
              : (this.__selectionIndex == this.__caretIndex
                  ? this.__caretNextLine()
                  : ((a = this.getLineIndexOfChar(
                      Math.max(this.__caretIndex, this.__selectionIndex) | 0
                    )),
                    this.__caretNextLine(
                      a,
                      Math.min(this.__caretIndex, this.__selectionIndex) | 0
                    )),
                (this.__selectionIndex = this.__caretIndex)),
            this.__stopCursorTimer(),
            this.__startCursorTimer());
          break;
        case 1073741906:
          this.get_selectable() &&
            this.__textEngine.multiline &&
            (Za.get_shiftKey(b)
              ? this.__caretPreviousLine()
              : (this.__selectionIndex == this.__caretIndex
                  ? this.__caretPreviousLine()
                  : ((a = this.getLineIndexOfChar(
                      Math.min(this.__caretIndex, this.__selectionIndex) | 0
                    )),
                    this.__caretPreviousLine(
                      a,
                      Math.min(this.__caretIndex, this.__selectionIndex) | 0
                    )),
                (this.__selectionIndex = this.__caretIndex)),
            this.__stopCursorTimer(),
            this.__startCursorTimer());
          break;
        case 13:
        case 1073741912:
          this.__textEngine.multiline &&
            ((a = new gg("textInput", !0, !0, "\n")),
            this.dispatchEvent(a),
            a.isDefaultPrevented() ||
              (this.__replaceSelectedText("\n", !0),
              this.dispatchEvent(new ma("change", !0))));
      }
    },
    window_onTextInput: function (a) {
      this.__replaceSelectedText(a, !0);
      this.dispatchEvent(new ma("change", !0));
    },
    __class__: De,
    __properties__: x(Vb.prototype.__properties__, {
      set_wordWrap: "set_wordWrap",
      get_wordWrap: "get_wordWrap",
      set_type: "set_type",
      get_type: "get_type",
      get_textWidth: "get_textWidth",
      get_textHeight: "get_textHeight",
      set_textColor: "set_textColor",
      get_textColor: "get_textColor",
      set_text: "set_text",
      get_text: "get_text",
      set_sharpness: "set_sharpness",
      get_sharpness: "get_sharpness",
      get_selectionEndIndex: "get_selectionEndIndex",
      get_selectionBeginIndex: "get_selectionBeginIndex",
      set_selectable: "set_selectable",
      get_selectable: "get_selectable",
      set_scrollV: "set_scrollV",
      get_scrollV: "get_scrollV",
      set_scrollH: "set_scrollH",
      get_scrollH: "get_scrollH",
      set_restrict: "set_restrict",
      get_restrict: "get_restrict",
      get_numLines: "get_numLines",
      set_multiline: "set_multiline",
      get_multiline: "get_multiline",
      set_mouseWheelEnabled: "set_mouseWheelEnabled",
      get_mouseWheelEnabled: "get_mouseWheelEnabled",
      get_maxScrollV: "get_maxScrollV",
      get_maxScrollH: "get_maxScrollH",
      set_maxChars: "set_maxChars",
      get_maxChars: "get_maxChars",
      get_length: "get_length",
      set_htmlText: "set_htmlText",
      get_htmlText: "get_htmlText",
      set_gridFitType: "set_gridFitType",
      get_gridFitType: "get_gridFitType",
      set_embedFonts: "set_embedFonts",
      get_embedFonts: "get_embedFonts",
      set_displayAsPassword: "set_displayAsPassword",
      get_displayAsPassword: "get_displayAsPassword",
      set_defaultTextFormat: "set_defaultTextFormat",
      get_defaultTextFormat: "get_defaultTextFormat",
      get_caretIndex: "get_caretIndex",
      get_bottomScrollV: "get_bottomScrollV",
      set_borderColor: "set_borderColor",
      get_borderColor: "get_borderColor",
      set_border: "set_border",
      get_border: "get_border",
      set_backgroundColor: "set_backgroundColor",
      get_backgroundColor: "get_backgroundColor",
      set_background: "set_background",
      get_background: "get_background",
      set_autoSize: "set_autoSize",
      get_autoSize: "get_autoSize",
      set_antiAliasType: "set_antiAliasType",
      get_antiAliasType: "get_antiAliasType",
    }),
  });
  var Uj = {};
  p["openfl.text._TextFieldAutoSize.TextFieldAutoSize_Impl_"] = Uj;
  Uj.__name__ = [
    "openfl",
    "text",
    "_TextFieldAutoSize",
    "TextFieldAutoSize_Impl_",
  ];
  Uj.fromString = function (a) {
    switch (a) {
      case "center":
        return 0;
      case "left":
        return 1;
      case "none":
        return 2;
      case "right":
        return 3;
      default:
        return null;
    }
  };
  Uj.toString = function (a) {
    switch (a) {
      case 0:
        return "center";
      case 1:
        return "left";
      case 2:
        return "none";
      case 3:
        return "right";
      default:
        return null;
    }
  };
  var vo = {};
  p["openfl.text._TextFieldType.TextFieldType_Impl_"] = vo;
  vo.__name__ = ["openfl", "text", "_TextFieldType", "TextFieldType_Impl_"];
  vo.fromString = function (a) {
    switch (a) {
      case "dynamic":
        return 0;
      case "input":
        return 1;
      default:
        return null;
    }
  };
  vo.toString = function (a) {
    switch (a) {
      case 0:
        return "dynamic";
      case 1:
        return "input";
      default:
        return null;
    }
  };
  var Jh = function (a, b, c, d, e, f, g, h, m, k, p, l, q) {
    this.font = a;
    this.size = b;
    this.color = c;
    this.bold = d;
    this.italic = e;
    this.underline = f;
    this.url = g;
    this.target = h;
    this.align = m;
    this.leftMargin = k;
    this.rightMargin = p;
    this.indent = l;
    this.leading = q;
  };
  p["openfl.text.TextFormat"] = Jh;
  Jh.__name__ = ["openfl", "text", "TextFormat"];
  Jh.prototype = {
    align: null,
    blockIndent: null,
    bold: null,
    bullet: null,
    color: null,
    font: null,
    indent: null,
    italic: null,
    kerning: null,
    leading: null,
    leftMargin: null,
    letterSpacing: null,
    rightMargin: null,
    size: null,
    tabStops: null,
    target: null,
    underline: null,
    url: null,
    __ascent: null,
    __descent: null,
    clone: function () {
      var a = new Jh(
        this.font,
        this.size,
        this.color,
        this.bold,
        this.italic,
        this.underline,
        this.url,
        this.target
      );
      a.align = this.align;
      a.leftMargin = this.leftMargin;
      a.rightMargin = this.rightMargin;
      a.indent = this.indent;
      a.leading = this.leading;
      a.blockIndent = this.blockIndent;
      a.bullet = this.bullet;
      a.kerning = this.kerning;
      a.letterSpacing = this.letterSpacing;
      a.tabStops = this.tabStops;
      a.__ascent = this.__ascent;
      a.__descent = this.__descent;
      return a;
    },
    __merge: function (a) {
      null != a.font && (this.font = a.font);
      null != a.size && (this.size = a.size);
      null != a.color && (this.color = a.color);
      null != a.bold && (this.bold = a.bold);
      null != a.italic && (this.italic = a.italic);
      null != a.underline && (this.underline = a.underline);
      null != a.url && "" != a.url && (this.url = a.url);
      "" == a.url && null == this.url && (this.url = "");
      null != a.target && (this.target = a.target);
      null != a.align && (this.align = a.align);
      null != a.leftMargin && (this.leftMargin = a.leftMargin);
      null != a.rightMargin && (this.rightMargin = a.rightMargin);
      null != a.indent && (this.indent = a.indent);
      null != a.leading && (this.leading = a.leading);
      null != a.blockIndent && (this.blockIndent = a.blockIndent);
      null != a.bullet && (this.bullet = a.bullet);
      null != a.kerning && (this.kerning = a.kerning);
      null != a.letterSpacing && (this.letterSpacing = a.letterSpacing);
      null != a.tabStops && (this.tabStops = a.tabStops);
      null != a.__ascent && (this.__ascent = a.__ascent);
      null != a.__descent && (this.__descent = a.__descent);
    },
    __class__: Jh,
  };
  var wh = {};
  p["openfl.text._TextFormatAlign.TextFormatAlign_Impl_"] = wh;
  wh.__name__ = ["openfl", "text", "_TextFormatAlign", "TextFormatAlign_Impl_"];
  wh.fromString = function (a) {
    switch (a) {
      case "center":
        return 0;
      case "end":
        return 1;
      case "justify":
        return 2;
      case "left":
        return 3;
      case "right":
        return 4;
      case "start":
        return 5;
      default:
        return null;
    }
  };
  wh.toString = function (a) {
    switch (a) {
      case 0:
        return "center";
      case 1:
        return "end";
      case 2:
        return "justify";
      case 3:
        return "left";
      case 4:
        return "right";
      case 5:
        return "start";
      default:
        return null;
    }
  };
  var Uq = function (a, b, c, d, e, f) {
    this.x = a;
    this.width = b;
    this.height = c;
    this.ascent = d;
    this.descent = e;
    this.leading = f;
  };
  p["openfl.text.TextLineMetrics"] = Uq;
  Uq.__name__ = ["openfl", "text", "TextLineMetrics"];
  Uq.prototype = {
    ascent: null,
    descent: null,
    height: null,
    leading: null,
    width: null,
    x: null,
    __class__: Uq,
  };
  var Tb = function () {
    db.call(this);
    Tb.__instances.push(this);
  };
  p["openfl.ui.GameInput"] = Tb;
  Tb.__name__ = ["openfl", "ui", "GameInput"];
  Tb.getDeviceAt = function (a) {
    return 0 <= a && a < Tb.__deviceList.length ? Tb.__deviceList[a] : null;
  };
  Tb.__getDevice = function (a) {
    if (null == a) return null;
    if (null == Tb.__devices.h.__keys__[a.__id__]) {
      var b = Xc.__getDeviceData()[a.id].id,
        c = Xc.__getDeviceData();
      b = new wo(b, c[a.id].id);
      Tb.__deviceList.push(b);
      Tb.__devices.set(a, b);
      Tb.numDevices = Tb.__deviceList.length;
    }
    return Tb.__devices.h[a.__id__];
  };
  Tb.__onGamepadAxisMove = function (a, b, c) {
    a = Tb.__getDevice(a);
    if (null != a && a.enabled) {
      if (!a.__axis.h.hasOwnProperty(b)) {
        switch (b) {
          case 0:
            var d = "LEFT_X";
            break;
          case 1:
            d = "LEFT_Y";
            break;
          case 2:
            d = "RIGHT_X";
            break;
          case 3:
            d = "RIGHT_Y";
            break;
          case 4:
            d = "TRIGGER_LEFT";
            break;
          case 5:
            d = "TRIGGER_RIGHT";
            break;
          default:
            d = "UNKNOWN (" + b + ")";
        }
        d = new hi(a, "AXIS_" + d, -1, 1);
        a.__axis.h[b] = d;
        a.__controls.push(d);
      }
      b = a.__axis.h[b];
      b.value = c;
      b.dispatchEvent(new ma("change"));
    }
  };
  Tb.__onGamepadButtonDown = function (a, b) {
    a = Tb.__getDevice(a);
    if (null != a && a.enabled) {
      if (!a.__button.h.hasOwnProperty(b)) {
        switch (b) {
          case 0:
            var c = "A";
            break;
          case 1:
            c = "B";
            break;
          case 2:
            c = "X";
            break;
          case 3:
            c = "Y";
            break;
          case 4:
            c = "BACK";
            break;
          case 5:
            c = "GUIDE";
            break;
          case 6:
            c = "START";
            break;
          case 7:
            c = "LEFT_STICK";
            break;
          case 8:
            c = "RIGHT_STICK";
            break;
          case 9:
            c = "LEFT_SHOULDER";
            break;
          case 10:
            c = "RIGHT_SHOULDER";
            break;
          case 11:
            c = "DPAD_UP";
            break;
          case 12:
            c = "DPAD_DOWN";
            break;
          case 13:
            c = "DPAD_LEFT";
            break;
          case 14:
            c = "DPAD_RIGHT";
            break;
          default:
            c = "UNKNOWN (" + b + ")";
        }
        c = new hi(a, "BUTTON_" + c, 0, 1);
        a.__button.h[b] = c;
        a.__controls.push(c);
      }
      b = a.__button.h[b];
      b.value = 1;
      b.dispatchEvent(new ma("change"));
    }
  };
  Tb.__onGamepadButtonUp = function (a, b) {
    a = Tb.__getDevice(a);
    if (null != a && a.enabled) {
      if (!a.__button.h.hasOwnProperty(b)) {
        switch (b) {
          case 0:
            var c = "A";
            break;
          case 1:
            c = "B";
            break;
          case 2:
            c = "X";
            break;
          case 3:
            c = "Y";
            break;
          case 4:
            c = "BACK";
            break;
          case 5:
            c = "GUIDE";
            break;
          case 6:
            c = "START";
            break;
          case 7:
            c = "LEFT_STICK";
            break;
          case 8:
            c = "RIGHT_STICK";
            break;
          case 9:
            c = "LEFT_SHOULDER";
            break;
          case 10:
            c = "RIGHT_SHOULDER";
            break;
          case 11:
            c = "DPAD_UP";
            break;
          case 12:
            c = "DPAD_DOWN";
            break;
          case 13:
            c = "DPAD_LEFT";
            break;
          case 14:
            c = "DPAD_RIGHT";
            break;
          default:
            c = "UNKNOWN (" + b + ")";
        }
        c = new hi(a, "BUTTON_" + c, 0, 1);
        a.__button.h[b] = c;
        a.__controls.push(c);
      }
      b = a.__button.h[b];
      b.value = 0;
      b.dispatchEvent(new ma("change"));
    }
  };
  Tb.__onGamepadConnect = function (a) {
    a = Tb.__getDevice(a);
    if (null != a)
      for (var b = 0, c = Tb.__instances; b < c.length; ) {
        var d = c[b];
        ++b;
        d.dispatchEvent(new kh("deviceAdded", !0, !1, a));
      }
  };
  Tb.__onGamepadDisconnect = function (a) {
    var b = Tb.__devices.h[a.__id__];
    if (null != b) {
      null != Tb.__devices.h.__keys__[a.__id__] &&
        (Q.remove(Tb.__deviceList, Tb.__devices.h[a.__id__]),
        Tb.__devices.remove(a));
      Tb.numDevices = Tb.__deviceList.length;
      a = 0;
      for (var c = Tb.__instances; a < c.length; ) {
        var d = c[a];
        ++a;
        d.dispatchEvent(new kh("deviceRemoved", !0, !1, b));
      }
    }
  };
  Tb.__super__ = db;
  Tb.prototype = x(db.prototype, {
    addEventListener: function (a, b, c, d, e) {
      null == e && (e = !1);
      null == d && (d = 0);
      null == c && (c = !1);
      db.prototype.addEventListener.call(this, a, b, c, d, e);
      if ("deviceAdded" == a)
        for (a = 0, b = Tb.__deviceList; a < b.length; )
          (c = b[a]), ++a, this.dispatchEvent(new kh("deviceAdded", !0, !1, c));
    },
    __class__: Tb,
  });
  var hi = function (a, b, c, d, e) {
    null == e && (e = 0);
    db.call(this);
    this.device = a;
    this.id = b;
    this.minValue = c;
    this.maxValue = d;
    this.value = e;
  };
  p["openfl.ui.GameInputControl"] = hi;
  hi.__name__ = ["openfl", "ui", "GameInputControl"];
  hi.__super__ = db;
  hi.prototype = x(db.prototype, {
    device: null,
    id: null,
    maxValue: null,
    minValue: null,
    value: null,
    __class__: hi,
  });
  var wo = function (a, b) {
    this.__controls = [];
    this.__button = new Ca();
    this.__axis = new Ca();
    this.id = a;
    this.name = b;
    for (b = 0; 6 > b; ) {
      var c = b++;
      a = new hi(this, "AXIS_" + c, -1, 1);
      this.__axis.h[c] = a;
      this.__controls.push(a);
    }
    for (b = 0; 15 > b; )
      (c = b++),
        (a = new hi(this, "BUTTON_" + c, 0, 1)),
        (this.__button.h[c] = a),
        this.__controls.push(a);
  };
  p["openfl.ui.GameInputDevice"] = wo;
  wo.__name__ = ["openfl", "ui", "GameInputDevice"];
  wo.prototype = {
    enabled: null,
    id: null,
    name: null,
    sampleInterval: null,
    __axis: null,
    __button: null,
    __controls: null,
    __gamepad: null,
    getCachedSamples: function (a, b) {
      return 0;
    },
    getControlAt: function (a) {
      return 0 <= a && a < this.__controls.length ? this.__controls[a] : null;
    },
    startCachingSamples: function (a, b) {},
    stopCachingSamples: function () {},
    get_numControls: function () {
      return this.__controls.length;
    },
    __class__: wo,
    __properties__: { get_numControls: "get_numControls" },
  };
  var ua = function () {};
  p["openfl.ui.Keyboard"] = ua;
  ua.__name__ = ["openfl", "ui", "Keyboard"];
  ua.isAccessible = function () {
    return !1;
  };
  ua.__convertKeyCode = function (a) {
    switch (a) {
      case 8:
        return 8;
      case 9:
        return 9;
      case 13:
        return 13;
      case 27:
        return 27;
      case 32:
        return 32;
      case 33:
        return 49;
      case 34:
        return 222;
      case 35:
        return 51;
      case 36:
        return 52;
      case 37:
        return 53;
      case 38:
        return 55;
      case 39:
        return 222;
      case 40:
        return 57;
      case 41:
        return 48;
      case 42:
        return 56;
      case 44:
        return 188;
      case 45:
        return 189;
      case 46:
        return 190;
      case 47:
        return 191;
      case 48:
        return 48;
      case 49:
        return 49;
      case 50:
        return 50;
      case 51:
        return 51;
      case 52:
        return 52;
      case 53:
        return 53;
      case 54:
        return 54;
      case 55:
        return 55;
      case 56:
        return 56;
      case 57:
        return 57;
      case 58:
        return 186;
      case 59:
        return 186;
      case 60:
        return 60;
      case 61:
        return 187;
      case 62:
        return 190;
      case 63:
        return 191;
      case 64:
        return 50;
      case 91:
        return 219;
      case 92:
        return 220;
      case 93:
        return 221;
      case 94:
        return 54;
      case 95:
        return 189;
      case 96:
        return 192;
      case 97:
        return 65;
      case 98:
        return 66;
      case 99:
        return 67;
      case 100:
        return 68;
      case 101:
        return 69;
      case 102:
        return 70;
      case 103:
        return 71;
      case 104:
        return 72;
      case 105:
        return 73;
      case 106:
        return 74;
      case 107:
        return 75;
      case 108:
        return 76;
      case 109:
        return 77;
      case 110:
        return 78;
      case 111:
        return 79;
      case 112:
        return 80;
      case 113:
        return 81;
      case 114:
        return 82;
      case 115:
        return 83;
      case 116:
        return 84;
      case 117:
        return 85;
      case 118:
        return 86;
      case 119:
        return 87;
      case 120:
        return 88;
      case 121:
        return 89;
      case 122:
        return 90;
      case 127:
        return 46;
      case 1073741881:
        return 20;
      case 1073741882:
        return 112;
      case 1073741883:
        return 113;
      case 1073741884:
        return 114;
      case 1073741885:
        return 115;
      case 1073741886:
        return 116;
      case 1073741887:
        return 117;
      case 1073741888:
        return 118;
      case 1073741889:
        return 119;
      case 1073741890:
        return 120;
      case 1073741891:
        return 121;
      case 1073741892:
        return 122;
      case 1073741893:
        return 123;
      case 1073741894:
        return 301;
      case 1073741895:
        return 145;
      case 1073741896:
        return 19;
      case 1073741897:
        return 45;
      case 1073741898:
        return 36;
      case 1073741899:
        return 33;
      case 1073741901:
        return 35;
      case 1073741902:
        return 34;
      case 1073741903:
        return 39;
      case 1073741904:
        return 37;
      case 1073741905:
        return 40;
      case 1073741906:
        return 38;
      case 1073741907:
        return 144;
      case 1073741908:
        return 111;
      case 1073741909:
        return 106;
      case 1073741910:
        return 109;
      case 1073741911:
        return 107;
      case 1073741912:
        return 13;
      case 1073741913:
        return 97;
      case 1073741914:
        return 98;
      case 1073741915:
        return 99;
      case 1073741916:
        return 100;
      case 1073741917:
        return 101;
      case 1073741918:
        return 102;
      case 1073741919:
        return 103;
      case 1073741920:
        return 104;
      case 1073741921:
        return 105;
      case 1073741922:
        return 96;
      case 1073741923:
        return 110;
      case 1073741925:
        return 302;
      case 1073741928:
        return 124;
      case 1073741929:
        return 125;
      case 1073741930:
        return 126;
      case 1073741982:
        return 13;
      case 1073742044:
        return 110;
      case 1073742048:
        return 17;
      case 1073742049:
        return 16;
      case 1073742050:
        return 18;
      case 1073742051:
        return 15;
      case 1073742052:
        return 17;
      case 1073742053:
        return 16;
      case 1073742054:
        return 18;
      case 1073742055:
        return 15;
      default:
        return a;
    }
  };
  ua.__getCharCode = function (a, b) {
    null == b && (b = !1);
    if (b) {
      switch (a) {
        case 48:
          return 41;
        case 49:
          return 33;
        case 50:
          return 64;
        case 51:
          return 35;
        case 52:
          return 36;
        case 53:
          return 37;
        case 54:
          return 94;
        case 55:
          return 38;
        case 56:
          return 42;
        case 57:
          return 40;
        case 186:
          return 58;
        case 187:
          return 43;
        case 188:
          return 60;
        case 189:
          return 95;
        case 190:
          return 62;
        case 191:
          return 63;
        case 192:
          return 126;
        case 219:
          return 123;
        case 220:
          return 124;
        case 221:
          return 125;
        case 222:
          return 34;
      }
      if (65 <= a && 90 >= a) return a - 65 + 65;
    } else {
      switch (a) {
        case 8:
          return 8;
        case 9:
          return 9;
        case 13:
          return 13;
        case 27:
          return 27;
        case 32:
          return 32;
        case 186:
          return 59;
        case 187:
          return 61;
        case 188:
          return 44;
        case 189:
          return 45;
        case 190:
          return 46;
        case 191:
          return 47;
        case 192:
          return 96;
        case 219:
          return 91;
        case 220:
          return 92;
        case 221:
          return 93;
        case 222:
          return 39;
      }
      if (48 <= a && 57 >= a) return a - 48 + 48;
      if (65 <= a && 90 >= a) return a - 65 + 97;
    }
    if (96 <= a && 105 >= a) return a - 96 + 48;
    switch (a) {
      case 8:
        return 8;
      case 13:
        return 13;
      case 46:
        return 127;
      case 106:
        return 42;
      case 107:
        return 43;
      case 108:
        return 44;
      case 110:
        return 45;
      case 111:
        return 46;
    }
    return 0;
  };
  ua.__getKeyLocation = function (a) {
    switch (a) {
      case 1073741908:
      case 1073741909:
      case 1073741910:
      case 1073741911:
      case 1073741912:
      case 1073741913:
      case 1073741914:
      case 1073741915:
      case 1073741916:
      case 1073741917:
      case 1073741918:
      case 1073741919:
      case 1073741920:
      case 1073741921:
      case 1073741922:
      case 1073741923:
      case 1073742044:
        return 3;
      case 1073742048:
      case 1073742049:
      case 1073742050:
      case 1073742051:
        return 1;
      case 1073742052:
      case 1073742053:
      case 1073742054:
      case 1073742055:
        return 2;
      default:
        return 0;
    }
  };
  var oe = function () {};
  p["openfl.ui.Mouse"] = oe;
  oe.__name__ = ["openfl", "ui", "Mouse"];
  oe.__properties__ = { set_cursor: "set_cursor", get_cursor: "get_cursor" };
  oe.hide = function () {
    oe.__hidden = !0;
    for (var a = 0, b = Me.current.__windows; a < b.length; ) {
      var c = b[a];
      ++a;
      c.set_cursor(null);
    }
  };
  oe.show = function () {
    oe.__hidden = !1;
    var a = oe.__cursor;
    oe.__cursor = null;
    oe.set_cursor(a);
  };
  oe.get_cursor = function () {
    return oe.__cursor;
  };
  oe.set_cursor = function (a) {
    null == a && (a = "auto");
    var b = null;
    switch (a) {
      case "arrow":
        b = Ka.ARROW;
        break;
      case "button":
        b = Ka.POINTER;
        break;
      case "crosshair":
        b = Ka.CROSSHAIR;
        break;
      case "custom":
        b = Ka.CUSTOM;
        break;
      case "hand":
        b = Ka.MOVE;
        break;
      case "ibeam":
        b = Ka.TEXT;
        break;
      case "resize_nesw":
        b = Ka.RESIZE_NESW;
        break;
      case "resize_ns":
        b = Ka.RESIZE_NS;
        break;
      case "resize_nwse":
        b = Ka.RESIZE_NWSE;
        break;
      case "resize_we":
        b = Ka.RESIZE_WE;
        break;
      case "wait":
        b = Ka.WAIT;
        break;
      case "waitarrow":
        b = Ka.WAIT_ARROW;
    }
    if (null != b && !oe.__hidden)
      for (var c = 0, d = Me.current.__windows; c < d.length; ) {
        var e = d[c];
        ++c;
        e.set_cursor(b);
      }
    return (oe.__cursor = a);
  };
  var We = {};
  p["openfl.ui._MouseCursor.MouseCursor_Impl_"] = We;
  We.__name__ = ["openfl", "ui", "_MouseCursor", "MouseCursor_Impl_"];
  We.fromLimeCursor = function (a) {
    switch (a[1]) {
      case 0:
        return "arrow";
      case 1:
        return "crosshair";
      case 2:
        return "auto";
      case 3:
        return "hand";
      case 4:
        return "button";
      case 5:
        return "resize_nesw";
      case 6:
        return "resize_ns";
      case 7:
        return "resize_nwse";
      case 8:
        return "resize_we";
      case 9:
        return "ibeam";
      case 10:
        return "wait";
      case 11:
        return "waitarrow";
      case 12:
        return "custom";
    }
  };
  We.toLimeCursor = function (a) {
    switch (a) {
      case "arrow":
        return Ka.ARROW;
      case "auto":
        return Ka.DEFAULT;
      case "button":
        return Ka.POINTER;
      case "crosshair":
        return Ka.CROSSHAIR;
      case "custom":
        return Ka.CUSTOM;
      case "hand":
        return Ka.MOVE;
      case "ibeam":
        return Ka.TEXT;
      case "resize_nesw":
        return Ka.RESIZE_NESW;
      case "resize_ns":
        return Ka.RESIZE_NS;
      case "resize_nwse":
        return Ka.RESIZE_NWSE;
      case "resize_we":
        return Ka.RESIZE_WE;
      case "wait":
        return Ka.WAIT;
      case "waitarrow":
        return Ka.WAIT_ARROW;
      default:
        return Ka.DEFAULT;
    }
  };
  var Xe = function () {};
  p["openfl.ui.Multitouch"] = Xe;
  Xe.__name__ = ["openfl", "ui", "Multitouch"];
  Xe.__properties__ = { get_supportsTouchEvents: "get_supportsTouchEvents" };
  Xe.get_supportsTouchEvents = function () {
    return "ontouchstart" in document.documentElement ||
      (window.DocumentTouch && document instanceof DocumentTouch)
      ? !0
      : !1;
  };
  var gl = {};
  p["openfl.ui._MultitouchInputMode.MultitouchInputMode_Impl_"] = gl;
  gl.__name__ = [
    "openfl",
    "ui",
    "_MultitouchInputMode",
    "MultitouchInputMode_Impl_",
  ];
  gl.fromString = function (a) {
    switch (a) {
      case "gesture":
        return 0;
      case "none":
        return 1;
      case "touchPoint":
        return 2;
      default:
        return null;
    }
  };
  gl.toString = function (a) {
    switch (a) {
      case 0:
        return "gesture";
      case 1:
        return "none";
      case 2:
        return "touchPoint";
      default:
        return null;
    }
  };
  var L = function (a) {
    null == a && (a = !1);
    this.debugEnabled = a;
    L.initialized || L.init();
  };
  p["openfl.utils.AGALMiniAssembler"] = L;
  L.__name__ = ["openfl", "utils", "AGALMiniAssembler"];
  L.init = function () {
    L.initialized = !0;
    var a = L.OPMAP,
      b = new Ub("mov", 2, 0, 0);
    null != t.mov ? a.setReserved("mov", b) : (a.h.mov = b);
    var c = L.OPMAP,
      d = new Ub("add", 3, 1, 0);
    null != t.add ? c.setReserved("add", d) : (c.h.add = d);
    var e = L.OPMAP,
      f = new Ub("sub", 3, 2, 0);
    null != t.sub ? e.setReserved("sub", f) : (e.h.sub = f);
    var g = L.OPMAP,
      h = new Ub("mul", 3, 3, 0);
    null != t.mul ? g.setReserved("mul", h) : (g.h.mul = h);
    var m = L.OPMAP,
      k = new Ub("div", 3, 4, 0);
    null != t.div ? m.setReserved("div", k) : (m.h.div = k);
    var p = L.OPMAP,
      l = new Ub("rcp", 2, 5, 0);
    null != t.rcp ? p.setReserved("rcp", l) : (p.h.rcp = l);
    var q = L.OPMAP,
      r = new Ub("min", 3, 6, 0);
    null != t.min ? q.setReserved("min", r) : (q.h.min = r);
    var u = L.OPMAP,
      v = new Ub("max", 3, 7, 0);
    null != t.max ? u.setReserved("max", v) : (u.h.max = v);
    var w = L.OPMAP,
      x = new Ub("frc", 2, 8, 0);
    null != t.frc ? w.setReserved("frc", x) : (w.h.frc = x);
    var y = L.OPMAP,
      z = new Ub("sqt", 2, 9, 0);
    null != t.sqt ? y.setReserved("sqt", z) : (y.h.sqt = z);
    var A = L.OPMAP,
      B = new Ub("rsq", 2, 10, 0);
    null != t.rsq ? A.setReserved("rsq", B) : (A.h.rsq = B);
    var C = L.OPMAP,
      D = new Ub("pow", 3, 11, 0);
    null != t.pow ? C.setReserved("pow", D) : (C.h.pow = D);
    var E = L.OPMAP,
      F = new Ub("log", 2, 12, 0);
    null != t.log ? E.setReserved("log", F) : (E.h.log = F);
    var H = L.OPMAP,
      I = new Ub("exp", 2, 13, 0);
    null != t.exp ? H.setReserved("exp", I) : (H.h.exp = I);
    var J = L.OPMAP,
      K = new Ub("nrm", 2, 14, 0);
    null != t.nrm ? J.setReserved("nrm", K) : (J.h.nrm = K);
    var N = L.OPMAP,
      M = new Ub("sin", 2, 15, 0);
    null != t.sin ? N.setReserved("sin", M) : (N.h.sin = M);
    var O = L.OPMAP,
      P = new Ub("cos", 2, 16, 0);
    null != t.cos ? O.setReserved("cos", P) : (O.h.cos = P);
    var Q = L.OPMAP,
      R = new Ub("crs", 3, 17, 0);
    null != t.crs ? Q.setReserved("crs", R) : (Q.h.crs = R);
    var S = L.OPMAP,
      T = new Ub("dp3", 3, 18, 0);
    null != t.dp3 ? S.setReserved("dp3", T) : (S.h.dp3 = T);
    var U = L.OPMAP,
      W = new Ub("dp4", 3, 19, 0);
    null != t.dp4 ? U.setReserved("dp4", W) : (U.h.dp4 = W);
    var V = L.OPMAP,
      X = new Ub("abs", 2, 20, 0);
    null != t.abs ? V.setReserved("abs", X) : (V.h.abs = X);
    var Y = L.OPMAP,
      Z = new Ub("neg", 2, 21, 0);
    null != t.neg ? Y.setReserved("neg", Z) : (Y.h.neg = Z);
    var aa = L.OPMAP,
      ba = new Ub("sat", 2, 22, 0);
    null != t.sat ? aa.setReserved("sat", ba) : (aa.h.sat = ba);
    var ca = L.OPMAP,
      da = new Ub("m33", 3, 23, 16);
    null != t.m33 ? ca.setReserved("m33", da) : (ca.h.m33 = da);
    var ea = L.OPMAP,
      fa = new Ub("m44", 3, 24, 16);
    null != t.m44 ? ea.setReserved("m44", fa) : (ea.h.m44 = fa);
    var ha = L.OPMAP,
      ia = new Ub("m34", 3, 25, 16);
    null != t.m34 ? ha.setReserved("m34", ia) : (ha.h.m34 = ia);
    var ja = L.OPMAP,
      ka = new Ub("ddx", 2, 26, 288);
    null != t.ddx ? ja.setReserved("ddx", ka) : (ja.h.ddx = ka);
    var la = L.OPMAP,
      ma = new Ub("ddy", 2, 27, 288);
    null != t.ddy ? la.setReserved("ddy", ma) : (la.h.ddy = ma);
    var oa = L.OPMAP,
      pa = new Ub("ife", 2, 28, 897);
    null != t.ife ? oa.setReserved("ife", pa) : (oa.h.ife = pa);
    var qa = L.OPMAP,
      ra = new Ub("ine", 2, 29, 897);
    null != t.ine ? qa.setReserved("ine", ra) : (qa.h.ine = ra);
    var sa = L.OPMAP,
      ta = new Ub("ifg", 2, 30, 897);
    null != t.ifg ? sa.setReserved("ifg", ta) : (sa.h.ifg = ta);
    var ua = L.OPMAP,
      va = new Ub("ifl", 2, 31, 897);
    null != t.ifl ? ua.setReserved("ifl", va) : (ua.h.ifl = va);
    var wa = L.OPMAP,
      xa = new Ub("els", 0, 32, 1921);
    null != t.els ? wa.setReserved("els", xa) : (wa.h.els = xa);
    var ya = L.OPMAP,
      za = new Ub("eif", 0, 33, 1409);
    null != t.eif ? ya.setReserved("eif", za) : (ya.h.eif = za);
    var Aa = L.OPMAP,
      Ba = new Ub("kil", 1, 39, 160);
    null != t.kil ? Aa.setReserved("kil", Ba) : (Aa.h.kil = Ba);
    var Ca = L.OPMAP,
      Da = new Ub("tex", 3, 40, 40);
    null != t.tex ? Ca.setReserved("tex", Da) : (Ca.h.tex = Da);
    var Ea = L.OPMAP,
      Fa = new Ub("sge", 3, 41, 0);
    null != t.sge ? Ea.setReserved("sge", Fa) : (Ea.h.sge = Fa);
    var Ga = L.OPMAP,
      Ha = new Ub("slt", 3, 42, 0);
    null != t.slt ? Ga.setReserved("slt", Ha) : (Ga.h.slt = Ha);
    var Ia = L.OPMAP,
      Ja = new Ub("sgn", 2, 43, 0);
    null != t.sgn ? Ia.setReserved("sgn", Ja) : (Ia.h.sgn = Ja);
    var Ka = L.OPMAP,
      La = new Ub("seq", 3, 44, 0);
    null != t.seq ? Ka.setReserved("seq", La) : (Ka.h.seq = La);
    var Ma = L.OPMAP,
      Na = new Ub("sne", 3, 45, 0);
    null != t.sne ? Ma.setReserved("sne", Na) : (Ma.h.sne = Na);
    var Oa = L.SAMPLEMAP,
      Pa = new fd("rgba", 8, 0);
    null != t.rgba ? Oa.setReserved("rgba", Pa) : (Oa.h.rgba = Pa);
    var Qa = L.SAMPLEMAP,
      Ra = new fd("compressed", 8, 1);
    null != t.compressed
      ? Qa.setReserved("compressed", Ra)
      : (Qa.h.compressed = Ra);
    var Sa = L.SAMPLEMAP,
      Ta = new fd("compressedalpha", 8, 2);
    null != t.compressedalpha
      ? Sa.setReserved("compressedalpha", Ta)
      : (Sa.h.compressedalpha = Ta);
    var Ua = L.SAMPLEMAP,
      Va = new fd("dxt1", 8, 1);
    null != t.dxt1 ? Ua.setReserved("dxt1", Va) : (Ua.h.dxt1 = Va);
    var Wa = L.SAMPLEMAP,
      Xa = new fd("dxt5", 8, 2);
    null != t.dxt5 ? Wa.setReserved("dxt5", Xa) : (Wa.h.dxt5 = Xa);
    var Ya = L.SAMPLEMAP,
      Za = new fd("video", 8, 3);
    null != t.video ? Ya.setReserved("video", Za) : (Ya.h.video = Za);
    var $a = L.SAMPLEMAP,
      ab = new fd("2d", 12, 0);
    null != t["2d"] ? $a.setReserved("2d", ab) : ($a.h["2d"] = ab);
    var bb = L.SAMPLEMAP,
      cb = new fd("3d", 12, 2);
    null != t["3d"] ? bb.setReserved("3d", cb) : (bb.h["3d"] = cb);
    var db = L.SAMPLEMAP,
      eb = new fd("cube", 12, 1);
    null != t.cube ? db.setReserved("cube", eb) : (db.h.cube = eb);
    var fb = L.SAMPLEMAP,
      gb = new fd("mipnearest", 24, 1);
    null != t.mipnearest
      ? fb.setReserved("mipnearest", gb)
      : (fb.h.mipnearest = gb);
    var hb = L.SAMPLEMAP,
      ib = new fd("miplinear", 24, 2);
    null != t.miplinear
      ? hb.setReserved("miplinear", ib)
      : (hb.h.miplinear = ib);
    var jb = L.SAMPLEMAP,
      kb = new fd("mipnone", 24, 0);
    null != t.mipnone ? jb.setReserved("mipnone", kb) : (jb.h.mipnone = kb);
    var lb = L.SAMPLEMAP,
      mb = new fd("nomip", 24, 0);
    null != t.nomip ? lb.setReserved("nomip", mb) : (lb.h.nomip = mb);
    var nb = L.SAMPLEMAP,
      ob = new fd("nearest", 28, 0);
    null != t.nearest ? nb.setReserved("nearest", ob) : (nb.h.nearest = ob);
    var pb = L.SAMPLEMAP,
      qb = new fd("linear", 28, 1);
    null != t.linear ? pb.setReserved("linear", qb) : (pb.h.linear = qb);
    var rb = L.SAMPLEMAP,
      sb = new fd("anisotropic2x", 28, 2);
    null != t.anisotropic2x
      ? rb.setReserved("anisotropic2x", sb)
      : (rb.h.anisotropic2x = sb);
    var tb = L.SAMPLEMAP,
      ub = new fd("anisotropic4x", 28, 3);
    null != t.anisotropic4x
      ? tb.setReserved("anisotropic4x", ub)
      : (tb.h.anisotropic4x = ub);
    var vb = L.SAMPLEMAP,
      wb = new fd("anisotropic8x", 28, 4);
    null != t.anisotropic8x
      ? vb.setReserved("anisotropic8x", wb)
      : (vb.h.anisotropic8x = wb);
    var xb = L.SAMPLEMAP,
      yb = new fd("anisotropic16x", 28, 5);
    null != t.anisotropic16x
      ? xb.setReserved("anisotropic16x", yb)
      : (xb.h.anisotropic16x = yb);
    var zb = L.SAMPLEMAP,
      Ab = new fd("centroid", 16, 1);
    null != t.centroid ? zb.setReserved("centroid", Ab) : (zb.h.centroid = Ab);
    var Bb = L.SAMPLEMAP,
      Cb = new fd("single", 16, 2);
    null != t.single ? Bb.setReserved("single", Cb) : (Bb.h.single = Cb);
    var Db = L.SAMPLEMAP,
      Eb = new fd("ignoresampler", 16, 4);
    null != t.ignoresampler
      ? Db.setReserved("ignoresampler", Eb)
      : (Db.h.ignoresampler = Eb);
    var Fb = L.SAMPLEMAP,
      Gb = new fd("repeat", 20, 1);
    null != t.repeat ? Fb.setReserved("repeat", Gb) : (Fb.h.repeat = Gb);
    var Hb = L.SAMPLEMAP,
      Ib = new fd("wrap", 20, 1);
    null != t.wrap ? Hb.setReserved("wrap", Ib) : (Hb.h.wrap = Ib);
    var Jb = L.SAMPLEMAP,
      Kb = new fd("clamp", 20, 0);
    null != t.clamp ? Jb.setReserved("clamp", Kb) : (Jb.h.clamp = Kb);
    var Lb = L.SAMPLEMAP,
      Mb = new fd("clamp_u_repeat_v", 20, 2);
    null != t.clamp_u_repeat_v
      ? Lb.setReserved("clamp_u_repeat_v", Mb)
      : (Lb.h.clamp_u_repeat_v = Mb);
    var Nb = L.SAMPLEMAP,
      Ob = new fd("repeat_u_clamp_v", 20, 3);
    null != t.repeat_u_clamp_v
      ? Nb.setReserved("repeat_u_clamp_v", Ob)
      : (Nb.h.repeat_u_clamp_v = Ob);
  };
  L.prototype = {
    agalcode: null,
    error: null,
    verbose: null,
    debugEnabled: null,
    assemble2: function (a, b, c, d) {
      c = this.assemble("vertex", c, b);
      b = this.assemble("fragment", d, b);
      a = a.createProgram();
      a.upload(c, b);
      return a;
    },
    assemble: function (a, b, c, d) {
      null == d && (d = !1);
      null == c && (c = 1);
      wa.getTimer();
      this.agalcode = new ce(0);
      this.error = "";
      var e = !1;
      "fragment" == a
        ? (e = !0)
        : "vertex" != a &&
          (this.error =
            'ERROR: mode needs to be "fragment" or "vertex" but is "' +
            a +
            '".');
      this.agalcode.__endian = 1;
      this.agalcode.writeByte(160);
      this.agalcode.writeUnsignedInt(c);
      this.agalcode.writeByte(161);
      this.agalcode.writeByte(e ? 1 : 0);
      this.initregmap(c, d);
      a = ba.replace(b, "\r", "\n").split("\n");
      b = 0;
      d = a.length;
      for (
        var f = new Ib("<.*>", "g"),
          g = new Ib("([\\w\\.\\-\\+]+)", "gi"),
          h = new Ib("^\\w{3}", "ig"),
          m = new Ib(
            "vc\\[([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw](\\+\\d{1,3})?)?\\](\\.[xyzw]{1,4})?|([vofi][acostdip]?[d]?)(\\d*)?(\\.[xyzw]{1,4})?",
            "gi"
          ),
          k = new Ib("\\[.*\\]", "ig"),
          p = new Ib("^\\b[A-Za-z]{1,3}", "ig"),
          l = new Ib("\\d+", ""),
          q = new Ib("(\\.[xyzw]{1,4})", ""),
          r = new Ib("[A-Za-z]{1,3}", "ig"),
          u = new Ib("(\\.[xyzw]{1,1})", ""),
          v = new Ib("\\+\\d{1,3}", "ig"),
          w = 0;
        w < d && "" == this.error;

      ) {
        var x = ba.trim(a[w]),
          y = x.indexOf("//");
        -1 != y && (x = Q.substr(x, 0, y));
        var z = f.match(x) ? f.matchedPos().pos : -1;
        y = null;
        -1 != z &&
          ((y = this.match(Q.substr(x, z, null), g)), (x = Q.substr(x, 0, z)));
        z = null;
        if (h.match(x)) {
          z = h.matched(0);
          var A = L.OPMAP;
          z = null != t[z] ? A.getReserved(z) : A.h[z];
        }
        if (null != z && null != z) {
          x = Q.substr(x, x.indexOf(z.name) + z.name.length, null);
          if (0 != (z.flags & 256) && 2 > c) {
            this.error = "error: opcode requires version 2.";
            break;
          }
          if (0 != (z.flags & 64) && e) {
            this.error = "error: opcode is only allowed in vertex programs.";
            break;
          }
          if (0 != (z.flags & 32) && !e) {
            this.error = "error: opcode is only allowed in fragment programs.";
            break;
          }
          this.agalcode.writeUnsignedInt(z.emitCode);
          ++b;
          if (4096 < b) {
            this.error = "error: too many opcodes. maximum is 4096.";
            break;
          }
          var B = this.match(x, m);
          if (B.length != z.numRegister) {
            this.error =
              "error: wrong number of operands. found " +
              B.length +
              " but expected " +
              z.numRegister +
              ".";
            break;
          }
          x = !1;
          A = 160;
          for (var C = 0, D = B.length; C < D; ) {
            var E = C++,
              F = !1,
              H = this.match(B[E], k);
            0 < H.length && ((B[E] = ba.replace(B[E], H[0], "0")), (F = !0));
            var I = this.match(B[E], p);
            if (0 == I.length) {
              this.error =
                "error: could not parse operand " + E + " (" + B[E] + ").";
              x = !0;
              break;
            }
            var J = L.REGMAP;
            I = I[0];
            I = null != t[I] ? J.getReserved(I) : J.h[I];
            if (null == I) {
              this.error =
                "error: could not find register name for operand " +
                E +
                " (" +
                B[E] +
                ").";
              x = !0;
              break;
            }
            if (e) {
              if (0 == (I.flags & 32)) {
                this.error =
                  "error: register operand " +
                  E +
                  " (" +
                  B[E] +
                  ") only allowed in vertex programs.";
                x = !0;
                break;
              }
              if (F) {
                this.error =
                  "error: register operand " +
                  E +
                  " (" +
                  B[E] +
                  ") relative adressing not allowed in fragment programs.";
                x = !0;
                break;
              }
            } else if (0 == (I.flags & 64)) {
              this.error =
                "error: register operand " +
                E +
                " (" +
                B[E] +
                ") only allowed in fragment programs.";
              x = !0;
              break;
            }
            J = B[E].indexOf(I.name) + I.name.length;
            B[E] = Q.substr(B[E], J, null);
            var K = F ? this.match(H[0], l) : this.match(B[E], l);
            J = 0;
            0 < K.length && (J = P.parseInt(K[0]));
            if (Xa.gt(J, I.range)) {
              this.error =
                "error: register operand " +
                E +
                " (" +
                B[E] +
                ") index exceeds limit of " +
                P.string(Xa.toFloat(I.range + 1)) +
                ".";
              x = !0;
              break;
            }
            var N = this.match(B[E], q),
              M = 0 == E && 0 == (z.flags & 128),
              O = 2 == E && 0 != (z.flags & 8),
              R = 0,
              S = 0,
              T = 0;
            if (M && F) {
              this.error = "error: relative can not be destination";
              x = !0;
              break;
            }
            if (0 < N.length) {
              for (var U = (K = 0), W = N[0].length, V = 1; V < W; )
                (U = Q.cca(N[0], V) - 120),
                  Xa.gt(U, 2) && (U = 3),
                  (K = M ? K | (1 << U) : K | (U << ((V - 1) << 1))),
                  ++V;
              if (!M) for (; 4 >= V; ) (K |= U << ((V - 1) << 1)), ++V;
            } else K = M ? 15 : 228;
            if (F) {
              S = this.match(H[0], r);
              R = L.REGMAP;
              S = S[0];
              R = null != t[S] ? R.getReserved(S) : R.h[S];
              if (null == R) {
                this.error = "error: bad index register";
                x = !0;
                break;
              }
              R = R.emitCode;
              S = this.match(H[0], u);
              if (0 == S.length) {
                this.error = "error: bad index register select";
                x = !0;
                break;
              }
              S = Q.cca(S[0], 1) - 120;
              Xa.gt(S, 2) && (S = 3);
              H = this.match(H[0], v);
              0 < H.length && (T = P.parseInt(H[0]));
              if (0 > T || 255 < T) {
                this.error =
                  "error: index offset " + T + " out of bounds. [0..255]";
                x = !0;
                break;
              }
            }
            if (M)
              this.agalcode.writeShort(J),
                this.agalcode.writeByte(K),
                this.agalcode.writeByte(I.emitCode),
                (A -= 32);
            else {
              if (O) {
                E = 5;
                H = F = 0;
                for (I = null == y ? 0 : y.length; H < I; )
                  (K = H++),
                    (M = L.SAMPLEMAP),
                    (O = y[K]),
                    (M = null != t[O] ? M.getReserved(O) : M.h[O]),
                    null == M
                      ? (F = parseFloat(y[K]))
                      : (16 != M.flag && (E &= ~(15 << M.flag)),
                        (E |= M.mask << M.flag));
                this.agalcode.writeShort(J);
                this.agalcode.writeByte((8 * F) | 0);
                this.agalcode.writeByte(0);
                this.agalcode.writeUnsignedInt(E);
              } else
                0 == E && (this.agalcode.writeUnsignedInt(0), (A -= 32)),
                  this.agalcode.writeShort(J),
                  this.agalcode.writeByte(T),
                  this.agalcode.writeByte(K),
                  this.agalcode.writeByte(I.emitCode),
                  this.agalcode.writeByte(R),
                  this.agalcode.writeShort(F ? S | 32768 : 0);
              A -= 64;
            }
          }
          for (y = 0; y < A; ) this.agalcode.writeByte(0), (y += 8);
          if (x) break;
        }
        ++w;
      }
      "" != this.error &&
        ((this.error += "\n  at line " + w + " " + a[w]),
        Na.set_length(this.agalcode, 0));
      if (this.debugEnabled)
        for (c = 0, e = Na.get_length(this.agalcode); c < e; )
          (a = c++), ba.hex(this.agalcode.b[a], 2);
      return this.agalcode;
    },
    initregmap: function (a, b) {
      var c = L.REGMAP,
        d = new Of(
          "va",
          "vertex attribute",
          0,
          b ? 1024 : 1 == a || 2 == a ? 7 : 15,
          66
        );
      null != t.va ? c.setReserved("va", d) : (c.h.va = d);
      c = L.REGMAP;
      d = new Of("vc", "vertex constant", 1, b ? 1024 : 1 == a ? 127 : 249, 66);
      null != t.vc ? c.setReserved("vc", d) : (c.h.vc = d);
      c = L.REGMAP;
      d = new Of("vt", "vertex temporary", 2, b ? 1024 : 1 == a ? 7 : 25, 67);
      null != t.vt ? c.setReserved("vt", d) : (c.h.vt = d);
      c = L.REGMAP;
      d = new Of("vo", "vertex output", 3, b ? 1024 : 0, 65);
      null != t.vo ? c.setReserved("vo", d) : (c.h.vo = d);
      c = L.REGMAP;
      d = new Of("vi", "varying", 4, b ? 1024 : 1 == a ? 7 : 9, 99);
      null != t.vi ? c.setReserved("vi", d) : (c.h.vi = d);
      c = L.REGMAP;
      d = new Of(
        "fc",
        "fragment constant",
        1,
        b ? 1024 : 1 == a ? 27 : 2 == a ? 63 : 199,
        34
      );
      null != t.fc ? c.setReserved("fc", d) : (c.h.fc = d);
      c = L.REGMAP;
      d = new Of("ft", "fragment temporary", 2, b ? 1024 : 1 == a ? 7 : 25, 35);
      null != t.ft ? c.setReserved("ft", d) : (c.h.ft = d);
      c = L.REGMAP;
      d = new Of("fs", "texture sampler", 5, b ? 1024 : 7, 34);
      null != t.fs ? c.setReserved("fs", d) : (c.h.fs = d);
      c = L.REGMAP;
      d = new Of("fo", "fragment output", 3, b ? 1024 : 1 == a ? 0 : 3, 33);
      null != t.fo ? c.setReserved("fo", d) : (c.h.fo = d);
      c = L.REGMAP;
      a = new Of(
        "fd",
        "fragment depth output",
        6,
        b ? 1024 : 1 == a ? -1 : 0,
        33
      );
      null != t.fd ? c.setReserved("fd", a) : (c.h.fd = a);
      a = L.REGMAP;
      b = new Of("iid", "instance id", 7, b ? 1024 : 0, 66);
      null != t.iid ? a.setReserved("iid", b) : (a.h.iid = b);
      a = b = L.REGMAP;
      a = null != t.vo ? a.getReserved("vo") : a.h.vo;
      null != t.op ? b.setReserved("op", a) : (b.h.op = a);
      a = b = L.REGMAP;
      a = null != t.vi ? a.getReserved("vi") : a.h.vi;
      null != t.i ? b.setReserved("i", a) : (b.h.i = a);
      a = b = L.REGMAP;
      a = null != t.vi ? a.getReserved("vi") : a.h.vi;
      null != t.v ? b.setReserved("v", a) : (b.h.v = a);
      a = b = L.REGMAP;
      a = null != t.fo ? a.getReserved("fo") : a.h.fo;
      null != t.oc ? b.setReserved("oc", a) : (b.h.oc = a);
      a = b = L.REGMAP;
      a = null != t.fd ? a.getReserved("fd") : a.h.fd;
      null != t.od ? b.setReserved("od", a) : (b.h.od = a);
      a = b = L.REGMAP;
      a = null != t.vi ? a.getReserved("vi") : a.h.vi;
      null != t.fi ? b.setReserved("fi", a) : (b.h.fi = a);
    },
    match: function (a, b) {
      for (var c = [], d = 0; b.matchSub(a, d); )
        (d = b.matched(0)), c.push(d), (d = b.matchedPos().pos + d.length);
      return c;
    },
    __class__: L,
  };
  var Ub = function (a, b, c, d) {
    this.name = a;
    this.numRegister = b;
    this.emitCode = c;
    this.flags = d;
  };
  p["openfl.utils._AGALMiniAssembler.OpCode"] = Ub;
  Ub.__name__ = ["openfl", "utils", "_AGALMiniAssembler", "OpCode"];
  Ub.prototype = {
    emitCode: null,
    flags: null,
    name: null,
    numRegister: null,
    toString: function () {
      return (
        '[OpCode name="' +
        this.name +
        '", numRegister=' +
        this.numRegister +
        ", emitCode=" +
        this.emitCode +
        ", flags=" +
        this.flags +
        "]"
      );
    },
    __class__: Ub,
  };
  var Of = function (a, b, c, d, e) {
    this.name = a;
    this.longName = b;
    this.emitCode = c;
    this.range = d;
    this.flags = e;
  };
  p["openfl.utils._AGALMiniAssembler.Register"] = Of;
  Of.__name__ = ["openfl", "utils", "_AGALMiniAssembler", "Register"];
  Of.prototype = {
    emitCode: null,
    name: null,
    longName: null,
    flags: null,
    range: null,
    toString: function () {
      return (
        '[Register name="' +
        this.name +
        '", longName="' +
        this.longName +
        '", emitCode=' +
        P.string(Xa.toFloat(this.emitCode)) +
        ", range=" +
        P.string(Xa.toFloat(this.range)) +
        ", flags=" +
        P.string(Xa.toFloat(this.flags)) +
        "]"
      );
    },
    __class__: Of,
  };
  var fd = function (a, b, c) {
    this.name = a;
    this.flag = b;
    this.mask = c;
  };
  p["openfl.utils._AGALMiniAssembler.Sampler"] = fd;
  fd.__name__ = ["openfl", "utils", "_AGALMiniAssembler", "Sampler"];
  fd.prototype = {
    flag: null,
    mask: null,
    name: null,
    toString: function () {
      return (
        '[Sampler name="' +
        this.name +
        '", flag="' +
        P.string(Xa.toFloat(this.flag)) +
        '", mask=' +
        P.string(Xa.toFloat(this.mask)) +
        "]"
      );
    },
    __class__: fd,
  };
  var Vq = function () {};
  p["openfl.utils.IAssetCache"] = Vq;
  Vq.__name__ = ["openfl", "utils", "IAssetCache"];
  Vq.prototype = {
    set_enabled: null,
    get_enabled: null,
    clear: null,
    getBitmapData: null,
    getFont: null,
    getSound: null,
    hasBitmapData: null,
    hasFont: null,
    hasSound: null,
    removeBitmapData: null,
    removeFont: null,
    removeSound: null,
    setBitmapData: null,
    setFont: null,
    setSound: null,
    __class__: Vq,
    __properties__: { set_enabled: "set_enabled", get_enabled: "get_enabled" },
  };
  var xo = function () {
    this.__enabled = !0;
    this.bitmapData = new la();
    this.font = new la();
    this.sound = new la();
  };
  p["openfl.utils.AssetCache"] = xo;
  xo.__name__ = ["openfl", "utils", "AssetCache"];
  xo.__interfaces__ = [Vq];
  xo.prototype = {
    bitmapData: null,
    font: null,
    sound: null,
    __enabled: null,
    clear: function (a) {
      if (null == a)
        (this.bitmapData = new la()),
          (this.font = new la()),
          (this.sound = new la());
      else {
        for (var b = this.bitmapData.keys(); b.hasNext(); ) {
          var c = b.next();
          ba.startsWith(c, a) && this.removeBitmapData(c);
        }
        for (b = this.font.keys(); b.hasNext(); )
          (c = b.next()), ba.startsWith(c, a) && this.removeFont(c);
        for (b = this.sound.keys(); b.hasNext(); )
          (c = b.next()), ba.startsWith(c, a) && this.removeSound(c);
      }
    },
    getBitmapData: function (a) {
      var b = this.bitmapData;
      return null != t[a] ? b.getReserved(a) : b.h[a];
    },
    getFont: function (a) {
      var b = this.font;
      return null != t[a] ? b.getReserved(a) : b.h[a];
    },
    getSound: function (a) {
      var b = this.sound;
      return null != t[a] ? b.getReserved(a) : b.h[a];
    },
    hasBitmapData: function (a) {
      var b = this.bitmapData;
      return null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a);
    },
    hasFont: function (a) {
      var b = this.font;
      return null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a);
    },
    hasSound: function (a) {
      var b = this.sound;
      return null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a);
    },
    removeBitmapData: function (a) {
      ka.cache.image.remove(a);
      return this.bitmapData.remove(a);
    },
    removeFont: function (a) {
      ka.cache.font.remove(a);
      return this.font.remove(a);
    },
    removeSound: function (a) {
      ka.cache.audio.remove(a);
      return this.sound.remove(a);
    },
    setBitmapData: function (a, b) {
      var c = this.bitmapData;
      null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
    },
    setFont: function (a, b) {
      var c = this.font;
      null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
    },
    setSound: function (a, b) {
      var c = this.sound;
      null != t[a] ? c.setReserved(a, b) : (c.h[a] = b);
    },
    get_enabled: function () {
      return this.__enabled;
    },
    set_enabled: function (a) {
      return (this.__enabled = a);
    },
    __class__: xo,
    __properties__: { set_enabled: "set_enabled", get_enabled: "get_enabled" },
  };
  var oa = function () {};
  p["openfl.utils.Assets"] = oa;
  oa.__name__ = ["openfl", "utils", "Assets"];
  oa.addEventListener = function (a, b, c, d, e) {
    null == e && (e = !1);
    null == d && (d = 0);
    null == c && (c = !1);
    ka.onChange.has(oa.LimeAssets_onChange) ||
      ka.onChange.add(oa.LimeAssets_onChange);
    oa.dispatcher.addEventListener(a, b, c, d, e);
  };
  oa.dispatchEvent = function (a) {
    return oa.dispatcher.dispatchEvent(a);
  };
  oa.exists = function (a, b) {
    return ka.exists(a, b);
  };
  oa.getBitmapData = function (a, b) {
    null == b && (b = !0);
    if (b && oa.cache.get_enabled() && oa.cache.hasBitmapData(a)) {
      var c = oa.cache.getBitmapData(a);
      if (oa.isValidBitmapData(c)) return c;
    }
    c = ka.getImage(a, !1);
    return null != c
      ? ((c = sa.fromImage(c)),
        b && oa.cache.get_enabled() && oa.cache.setBitmapData(a, c),
        c)
      : null;
  };
  oa.getBytes = function (a) {
    return Na.fromBytes(ka.getBytes(a));
  };
  oa.getFont = function (a, b) {
    null == b && (b = !0);
    if (b && oa.cache.get_enabled() && oa.cache.hasFont(a))
      return oa.cache.getFont(a);
    var c = ka.getFont(a, !1);
    if (null != c) {
      var d = new xc();
      d.__fromLimeFont(c);
      b && oa.cache.get_enabled() && oa.cache.setFont(a, d);
      return d;
    }
    return new xc();
  };
  oa.getLibrary = function (a) {
    return ka.getLibrary(a);
  };
  oa.getMovieClip = function (a) {
    var b = a.substring(0, a.indexOf(":")),
      c = Q.substr(a, a.indexOf(":") + 1, null),
      d = oa.getLibrary(b);
    if (null != d) {
      if (u.__instanceof(d, Yc) && d.exists(c, "MOVIE_CLIP")) {
        if (d.isLocal(c, "MOVIE_CLIP")) return d.getMovieClip(c);
        mb.error(
          'MovieClip asset "' + a + '" exists, but only asynchronously',
          {
            fileName: "Assets.hx",
            lineNumber: 248,
            className: "openfl.utils.Assets",
            methodName: "getMovieClip",
          }
        );
        return null;
      }
      mb.error('There is no MovieClip asset with an ID of "' + a + '"', {
        fileName: "Assets.hx",
        lineNumber: 257,
        className: "openfl.utils.Assets",
        methodName: "getMovieClip",
      });
    } else
      mb.error('There is no asset library named "' + b + '"', {
        fileName: "Assets.hx",
        lineNumber: 261,
        className: "openfl.utils.Assets",
        methodName: "getMovieClip",
      });
    return null;
  };
  oa.getMusic = function (a, b) {
    null == b && (b = !0);
    return oa.getSound(a, b);
  };
  oa.getPath = function (a) {
    return ka.getPath(a);
  };
  oa.getSound = function (a, b) {
    null == b && (b = !0);
    if (b && oa.cache.get_enabled() && oa.cache.hasSound(a)) {
      var c = oa.cache.getSound(a);
      if (oa.isValidSound(c)) return c;
    }
    c = ka.getAudioBuffer(a, !1);
    return null != c
      ? ((c = Nf.fromAudioBuffer(c)),
        b && oa.cache.get_enabled() && oa.cache.setSound(a, c),
        c)
      : null;
  };
  oa.getText = function (a) {
    return ka.getText(a);
  };
  oa.hasEventListener = function (a) {
    return oa.dispatcher.hasEventListener(a);
  };
  oa.hasLibrary = function (a) {
    return ka.hasLibrary(a);
  };
  oa.isLocal = function (a, b, c) {
    null == c && (c = !0);
    if (
      c &&
      oa.cache.get_enabled() &&
      ((("IMAGE" == b || null == b) && oa.cache.hasBitmapData(a)) ||
        (("FONT" == b || null == b) && oa.cache.hasFont(a)) ||
        (("SOUND" == b || "MUSIC" == b || null == b) && oa.cache.hasSound(a)))
    )
      return !0;
    c = a.substring(0, a.indexOf(":"));
    a = Q.substr(a, a.indexOf(":") + 1, null);
    c = oa.getLibrary(c);
    return null != c ? c.isLocal(a, b) : !1;
  };
  oa.isValidBitmapData = function (a) {
    return null != a && null != a.image;
  };
  oa.isValidSound = function (a) {
    return !0;
  };
  oa.list = function (a) {
    return ka.list(a);
  };
  oa.loadBitmapData = function (a, b) {
    null == b && (b = !0);
    null == b && (b = !0);
    var c = new Zd();
    if (b && oa.cache.get_enabled() && oa.cache.hasBitmapData(a)) {
      var d = oa.cache.getBitmapData(a);
      if (oa.isValidBitmapData(d)) return c.complete(d), c.future;
    }
    ka.loadImage(a, !1)
      .onComplete(function (d) {
        null != d
          ? ((d = sa.fromImage(d)),
            b && oa.cache.get_enabled() && oa.cache.setBitmapData(a, d),
            c.complete(d))
          : c.error('[Assets] Could not load Image "' + a + '"');
      })
      .onError(B(c, c.error))
      .onProgress(B(c, c.progress));
    return c.future;
  };
  oa.loadBytes = function (a) {
    var b = new Zd();
    a = ka.loadBytes(a);
    a.onComplete(function (a) {
      b.complete(Na.fromBytes(a));
    });
    a.onProgress(function (a, d) {
      b.progress(a, d);
    });
    a.onError(function (a) {
      b.error(a);
    });
    return b.future;
  };
  oa.loadFont = function (a, b) {
    null == b && (b = !0);
    null == b && (b = !0);
    var c = new Zd();
    if (b && oa.cache.get_enabled() && oa.cache.hasFont(a)) {
      var d = oa.cache.getFont(a);
      c.complete(d);
      return c.future;
    }
    ka.loadFont(a)
      .onComplete(function (d) {
        var e = new xc();
        e.__fromLimeFont(d);
        b && oa.cache.get_enabled() && oa.cache.setFont(a, e);
        c.complete(e);
      })
      .onError(B(c, c.error))
      .onProgress(B(c, c.progress));
    return c.future;
  };
  oa.loadLibrary = function (a) {
    return ka.loadLibrary(a).then(function (b) {
      var c = null;
      null != b &&
        (u.__instanceof(b, Yc)
          ? (c = b)
          : ((c = new Yc()), (c.__proxy = b), ka.registerLibrary(a, c)));
      return ab.withValue(c);
    });
  };
  oa.loadMusic = function (a, b) {
    null == b && (b = !0);
    null == b && (b = !0);
    return new ab(function () {
      return oa.getMusic(a, b);
    });
  };
  oa.loadMovieClip = function (a) {
    var b = new Zd(),
      c = a.substring(0, a.indexOf(":")),
      d = Q.substr(a, a.indexOf(":") + 1, null),
      e = oa.getLibrary(c);
    if (null != e) {
      if (u.__instanceof(e, Yc) && e.exists(d, "MOVIE_CLIP"))
        return b.completeWith(e.loadMovieClip(d)), b.future;
      b.error('[Assets] There is no MovieClip asset with an ID of "' + a + '"');
    } else b.error('[Assets] There is no asset library named "' + c + '"');
    return b.future;
  };
  oa.loadSound = function (a, b) {
    null == b && (b = !0);
    null == b && (b = !0);
    var c = new Zd();
    ka.loadAudioBuffer(a, b)
      .onComplete(function (d) {
        null != d
          ? ((d = Nf.fromAudioBuffer(d)),
            b && oa.cache.get_enabled() && oa.cache.setSound(a, d),
            c.complete(d))
          : c.error('[Assets] Could not load Sound "' + a + '"');
      })
      .onError(B(c, c.error))
      .onProgress(B(c, c.progress));
    return c.future;
  };
  oa.loadText = function (a) {
    return ka.loadText(a);
  };
  oa.registerLibrary = function (a, b) {
    ka.registerLibrary(a, b);
  };
  oa.removeEventListener = function (a, b, c) {
    null == c && (c = !1);
    oa.dispatcher.removeEventListener(a, b, c);
  };
  oa.resolveClass = function (a) {
    return qa.resolveClass(a);
  };
  oa.resolveEnum = function (a) {
    return qa.resolveEnum(a);
  };
  oa.unloadLibrary = function (a) {
    ka.unloadLibrary(a);
  };
  oa.LimeAssets_onChange = function () {
    oa.dispatchEvent(new ma("change"));
  };
  var Na = {};
  p["openfl.utils._ByteArray.ByteArray_Impl_"] = Na;
  Na.__name__ = ["openfl", "utils", "_ByteArray", "ByteArray_Impl_"];
  Na.__properties__ = { set_length: "set_length", get_length: "get_length" };
  Na._new = function (a) {
    null == a && (a = 0);
    return new ce(a);
  };
  Na.get = function (a, b) {
    return a.b[b];
  };
  Na.set = function (a, b, c) {
    a.__resize(b + 1);
    a.b[b] = c & 255;
    return c;
  };
  Na.fromArrayBuffer = function (a) {
    return null == a ? null : ce.fromBytes(Ra.ofData(a));
  };
  Na.fromBytes = function (a) {
    return null == a ? null : u.__instanceof(a, ce) ? a : ce.fromBytes(a);
  };
  Na.fromBytesData = function (a) {
    return null == a ? null : ce.fromBytes(Ra.ofData(a));
  };
  Na.fromFile = function (a) {
    return Na.fromBytes(Hc.fromFile(a));
  };
  Na.loadFromBytes = function (a) {
    return Hc.loadFromBytes(a).then(function (a) {
      a = Na.fromBytes(a);
      return ab.withValue(a);
    });
  };
  Na.loadFromFile = function (a) {
    return Hc.loadFromFile(a).then(function (a) {
      a = Na.fromBytes(a);
      return ab.withValue(a);
    });
  };
  Na.fromLimeBytes = function (a) {
    return Na.fromBytes(a);
  };
  Na.toArrayBuffer = function (a) {
    return a.b.bufferValue;
  };
  Na.toBytePointer = function (a) {
    re.set(Na.__bytePointer, a, null, null, a.position);
    return Na.__bytePointer;
  };
  Na.toBytes = function (a) {
    return a;
  };
  Na.toBytesData = function (a) {
    return a.b.bufferValue;
  };
  Na.toLimeBytes = function (a) {
    return Na.toBytes(Na.fromBytes(Na.toBytes(a)));
  };
  Na.get_length = function (a) {
    return null == a ? 0 : a.length;
  };
  Na.set_length = function (a, b) {
    0 < b && (a.__resize(b), b < a.position && (a.position = b));
    return (a.length = b);
  };
  var Wq = function () {};
  p["openfl.utils.IDataOutput"] = Wq;
  Wq.__name__ = ["openfl", "utils", "IDataOutput"];
  Wq.prototype = {
    set_endian: null,
    get_endian: null,
    objectEncoding: null,
    writeBoolean: null,
    writeByte: null,
    writeBytes: null,
    writeDouble: null,
    writeFloat: null,
    writeInt: null,
    writeMultiByte: null,
    writeShort: null,
    writeUTF: null,
    writeUTFBytes: null,
    writeUnsignedInt: null,
    __class__: Wq,
    __properties__: { set_endian: "set_endian", get_endian: "get_endian" },
  };
  var Xq = function () {};
  p["openfl.utils.IDataInput"] = Xq;
  Xq.__name__ = ["openfl", "utils", "IDataInput"];
  Xq.prototype = {
    set_endian: null,
    get_endian: null,
    get_bytesAvailable: null,
    objectEncoding: null,
    readBoolean: null,
    readByte: null,
    readBytes: null,
    readDouble: null,
    readFloat: null,
    readInt: null,
    readMultiByte: null,
    readShort: null,
    readUnsignedByte: null,
    readUnsignedInt: null,
    readUnsignedShort: null,
    readUTF: null,
    readUTFBytes: null,
    __class__: Xq,
    __properties__: {
      set_endian: "set_endian",
      get_endian: "get_endian",
      get_bytesAvailable: "get_bytesAvailable",
    },
  };
  var ce = function (a) {
    null == a && (a = 0);
    var b = new Ra(new Je(a));
    Ra.call(this, b.b.buffer);
    this.__length = a;
    null == ce.__defaultEndian &&
      (za.get_endianness() == If.LITTLE_ENDIAN
        ? (ce.__defaultEndian = 1)
        : (ce.__defaultEndian = 0));
    this.__endian = ce.__defaultEndian;
    this.position = 0;
  };
  p["openfl.utils.ByteArrayData"] = ce;
  ce.__name__ = ["openfl", "utils", "ByteArrayData"];
  ce.__interfaces__ = [Wq, Xq];
  ce.fromBytes = function (a) {
    var b = new ce();
    b.__fromBytes(a);
    return b;
  };
  ce.__super__ = Ra;
  ce.prototype = x(Ra.prototype, {
    objectEncoding: null,
    position: null,
    __endian: null,
    __length: null,
    clear: function () {
      this.position = this.length = 0;
    },
    compress: function (a) {
      null == a && (a = 2);
      if (this.__length > this.length) {
        var b = this.length;
        this.length = this.__length;
        var c = new Ra(new Je(b));
        c.blit(0, this, 0, b);
        this.b = c.b;
        this.__length = c.length;
        this.data = c.data;
        this.length = b;
      }
      switch (a) {
        case 0:
          a = Hc.compress(this, se.DEFLATE);
          break;
        case 1:
          a = Hc.compress(this, se.LZMA);
          break;
        default:
          a = Hc.compress(this, se.ZLIB);
      }
      null != a &&
        ((this.b = a.b),
        (this.__length = a.length),
        (this.data = a.data),
        (this.position = this.length = this.__length));
    },
    deflate: function () {
      this.compress(0);
    },
    inflate: function () {
      this.uncompress(0);
    },
    readBoolean: function () {
      if (this.position < this.length) return 0 != this.b[this.position++];
      throw new v(new yh());
    },
    readByte: function () {
      var a = this.readUnsignedByte();
      return 0 != (a & 128) ? a - 256 : a;
    },
    readBytes: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = 0);
      0 == c && (c = this.length - this.position);
      if (this.position + c > this.length) throw new v(new yh());
      a.length < b + c && a.__resize(b + c);
      a.blit(b, this, this.position, c);
      this.position += c;
    },
    readDouble: function () {
      if (1 == this.__endian) {
        if (this.position + 8 > this.length) throw new v(new yh());
        this.position += 8;
        return this.getDouble(this.position - 8);
      }
      var a = this.readInt(),
        b = this.readInt();
      return xe.i64ToDouble(b, a);
    },
    readFloat: function () {
      if (1 == this.__endian) {
        if (this.position + 4 > this.length) throw new v(new yh());
        this.position += 4;
        return this.getFloat(this.position - 4);
      }
      return xe.i32ToFloat(this.readInt());
    },
    readInt: function () {
      var a = this.readUnsignedByte(),
        b = this.readUnsignedByte(),
        c = this.readUnsignedByte(),
        d = this.readUnsignedByte();
      return 1 == this.__endian
        ? (d << 24) | (c << 16) | (b << 8) | a
        : (a << 24) | (b << 16) | (c << 8) | d;
    },
    readMultiByte: function (a, b) {
      return this.readUTFBytes(a);
    },
    readObject: function () {
      switch (this.objectEncoding) {
        case 10:
          var a = this.readUTF();
          return Ie.run(a);
        case 12:
          return (a = this.readUTF()), JSON.parse(a);
        default:
          return null;
      }
    },
    readShort: function () {
      var a = this.readUnsignedByte(),
        b = this.readUnsignedByte();
      a = 1 == this.__endian ? (b << 8) | a : (a << 8) | b;
      return 0 != (a & 32768) ? a - 65536 : a;
    },
    readUnsignedByte: function () {
      if (this.position < this.length) return this.b[this.position++];
      throw new v(new yh());
    },
    readUnsignedInt: function () {
      var a = this.readUnsignedByte(),
        b = this.readUnsignedByte(),
        c = this.readUnsignedByte(),
        d = this.readUnsignedByte();
      return 1 == this.__endian
        ? (d << 24) | (c << 16) | (b << 8) | a
        : (a << 24) | (b << 16) | (c << 8) | d;
    },
    readUnsignedShort: function () {
      var a = this.readUnsignedByte(),
        b = this.readUnsignedByte();
      return 1 == this.__endian ? (b << 8) + a : (a << 8) | b;
    },
    readUTF: function () {
      var a = this.readUnsignedShort();
      return this.readUTFBytes(a);
    },
    readUTFBytes: function (a) {
      if (this.position + a > this.length) throw new v(new yh());
      this.position += a;
      return this.getString(this.position - a, a);
    },
    uncompress: function (a) {
      null == a && (a = 2);
      if (this.__length > this.length) {
        var b = this.length;
        this.length = this.__length;
        var c = new Ra(new Je(b));
        c.blit(0, this, 0, b);
        this.b = c.b;
        this.__length = c.length;
        this.data = c.data;
        this.length = b;
      }
      switch (a) {
        case 0:
          a = Hc.decompress(this, se.DEFLATE);
          break;
        case 1:
          a = Hc.decompress(this, se.LZMA);
          break;
        default:
          a = Hc.decompress(this, se.ZLIB);
      }
      null != a &&
        ((this.b = a.b),
        (this.__length = a.length),
        (this.data = a.data),
        (this.length = this.__length));
      this.position = 0;
    },
    writeBoolean: function (a) {
      this.writeByte(a ? 1 : 0);
    },
    writeByte: function (a) {
      this.__resize(this.position + 1);
      this.b[this.position++] = a & 255;
    },
    writeBytes: function (a, b, c) {
      null == c && (c = 0);
      null == b && (b = 0);
      0 != Na.get_length(a) &&
        (0 == c && (c = Na.get_length(a) - b),
        this.__resize(this.position + c),
        this.blit(this.position, a, b, c),
        (this.position += c));
    },
    writeDouble: function (a) {
      a = xe.doubleToI64(a);
      1 == this.__endian
        ? (this.writeInt(a.low), this.writeInt(a.high))
        : (this.writeInt(a.high), this.writeInt(a.low));
    },
    writeFloat: function (a) {
      1 == this.__endian
        ? (this.__resize(this.position + 4),
          this.setFloat(this.position, a),
          (this.position += 4))
        : ((a = xe.floatToI32(a)), this.writeInt(a));
    },
    writeInt: function (a) {
      this.__resize(this.position + 4);
      1 == this.__endian
        ? ((this.b[this.position++] = a & 255),
          (this.b[this.position++] = (a >> 8) & 255),
          (this.b[this.position++] = (a >> 16) & 255),
          (this.b[this.position++] = (a >> 24) & 255))
        : ((this.b[this.position++] = (a >> 24) & 255),
          (this.b[this.position++] = (a >> 16) & 255),
          (this.b[this.position++] = (a >> 8) & 255),
          (this.b[this.position++] = a & 255));
    },
    writeMultiByte: function (a, b) {
      this.writeUTFBytes(a);
    },
    writeObject: function (a) {
      switch (this.objectEncoding) {
        case 10:
          a = we.run(a);
          this.writeUTF(a);
          break;
        case 12:
          (a = JSON.stringify(a)), this.writeUTF(a);
      }
    },
    writeShort: function (a) {
      this.__resize(this.position + 2);
      1 == this.__endian
        ? ((this.b[this.position++] = a & 255),
          (this.b[this.position++] = (a >> 8) & 255))
        : ((this.b[this.position++] = (a >> 8) & 255),
          (this.b[this.position++] = a & 255));
    },
    writeUnsignedInt: function (a) {
      this.writeInt(a);
    },
    writeUTF: function (a) {
      a = Ra.ofString(a);
      this.writeShort(a.length);
      this.writeBytes(Na.fromBytes(a));
    },
    writeUTFBytes: function (a) {
      Ra.ofString(a);
      this.writeBytes(Na.fromBytes(Ra.ofString(a)));
    },
    __fromBytes: function (a) {
      this.b = a.b;
      this.__length = a.length;
      this.data = a.data;
      this.length = a.length;
    },
    __resize: function (a) {
      if (a > this.__length) {
        var b = new Ra(new Je((3 * (a + 1)) >> 1));
        if (0 < this.__length) {
          var c = this.length;
          this.length = this.__length;
          b.blit(0, this, 0, this.__length);
          this.length = c;
        }
        this.b = b.b;
        this.__length = b.length;
        this.data = b.data;
      }
      this.length < a && (this.length = a);
    },
    __setData: function (a) {
      this.b = a.b;
      this.__length = a.length;
      this.data = a.data;
    },
    get_bytesAvailable: function () {
      return this.length - this.position;
    },
    get_endian: function () {
      return this.__endian;
    },
    set_endian: function (a) {
      return (this.__endian = a);
    },
    __class__: ce,
    __properties__: {
      set_endian: "set_endian",
      get_endian: "get_endian",
      get_bytesAvailable: "get_bytesAvailable",
    },
  });
  var hl = {};
  p["openfl.utils._CompressionAlgorithm.CompressionAlgorithm_Impl_"] = hl;
  hl.__name__ = [
    "openfl",
    "utils",
    "_CompressionAlgorithm",
    "CompressionAlgorithm_Impl_",
  ];
  hl.fromString = function (a) {
    switch (a) {
      case "deflate":
        return 0;
      case "lzma":
        return 1;
      case "zlib":
        return 2;
      default:
        return null;
    }
  };
  hl.toString = function (a) {
    switch (a) {
      case 0:
        return "deflate";
      case 1:
        return "lzma";
      case 2:
        return "zlib";
      default:
        return null;
    }
  };
  var te = {};
  p["openfl.utils._Dictionary.Dictionary_Impl_"] = te;
  te.__name__ = ["openfl", "utils", "_Dictionary", "Dictionary_Impl_"];
  te.exists = function (a, b) {
    return a.exists(b);
  };
  te.get = function (a, b) {
    return a.get(b);
  };
  te.remove = function (a, b) {
    return a.remove(b);
  };
  te.set = function (a, b, c) {
    a.set(b, c);
    return c;
  };
  te.iterator = function (a) {
    return a.keys();
  };
  te.each = function (a) {
    return a.iterator();
  };
  te.toStringMap = function (a, b) {
    return new la();
  };
  te.toIntMap = function (a, b) {
    return new Ca();
  };
  te.toFloatMap = function (a, b) {
    return new yo();
  };
  te.toEnumValueMapMap = function (a, b) {
    return new kj();
  };
  te.toObjectMap = function (a, b) {
    return new qd();
  };
  te.toUtilsObjectMap = function (a, b) {
    return new zo();
  };
  te.toClassMap = function (a, b) {
    return new Ao();
  };
  te.fromStringMap = function (a) {
    return a;
  };
  te.fromIntMap = function (a) {
    return a;
  };
  te.fromFloatMap = function (a) {
    return a;
  };
  te.fromObjectMap = function (a) {
    return a;
  };
  te.fromUtilsObjectMap = function (a) {
    return a;
  };
  te.fromClassMap = function (a) {
    return a;
  };
  var Ao = function () {
    this.types = new la();
    this.values = new la();
  };
  p["openfl.utils._Dictionary.ClassMap"] = Ao;
  Ao.__name__ = ["openfl", "utils", "_Dictionary", "ClassMap"];
  Ao.__interfaces__ = [Fd];
  Ao.prototype = {
    types: null,
    values: null,
    exists: function (a) {
      var b = this.types;
      a = qa.getClassName(a);
      return null != t[a] ? b.existsReserved(a) : b.h.hasOwnProperty(a);
    },
    get: function (a) {
      var b = this.values;
      a = qa.getClassName(a);
      return null != t[a] ? b.getReserved(a) : b.h[a];
    },
    keys: function () {
      var a = this.types;
      return new Oe(a, a.arrayKeys());
    },
    iterator: function () {
      var a = this.values;
      return new Oe(a, a.arrayKeys());
    },
    remove: function (a) {
      a = qa.getClassName(a);
      return this.types.remove(a) ? !0 : this.values.remove(a);
    },
    set: function (a, b) {
      var c = qa.getClassName(a),
        d = this.types;
      null != t[c] ? d.setReserved(c, a) : (d.h[c] = a);
      a = this.values;
      null != t[c] ? a.setReserved(c, b) : (a.h[c] = b);
    },
    toString: function () {
      return this.values.toString();
    },
    __class__: Ao,
  };
  var yo = function () {
    this.floatKeys = [];
    this.values = [];
  };
  p["openfl.utils._Dictionary.FloatMap"] = yo;
  yo.__name__ = ["openfl", "utils", "_Dictionary", "FloatMap"];
  yo.__interfaces__ = [Fd];
  yo.prototype = {
    floatKeys: null,
    values: null,
    exists: function (a) {
      return -1 < this.indexOf(a);
    },
    get: function (a) {
      a = this.indexOf(a);
      return -1 < a ? this.values[a] : null;
    },
    keys: function () {
      return Q.iter(this.floatKeys.slice());
    },
    iterator: function () {
      return Q.iter(this.values.slice());
    },
    remove: function (a) {
      a = this.indexOf(a);
      return -1 < a
        ? (this.floatKeys.splice(a, 1), this.values.splice(a, 1), !0)
        : !1;
    },
    set: function (a, b) {
      this.insertSorted(a, b);
    },
    indexOf: function (a) {
      var b = this.floatKeys.length,
        c = 0,
        d = b - 1;
      if (0 == b) return -1;
      for (; c < d; ) {
        b = Math.floor((c + d) / 2);
        if (this.floatKeys[b] == a) return b;
        this.floatKeys[b] > a ? (d = b - 1) : (c = b + 1);
      }
      return this.floatKeys[c] == a ? c : -1;
    },
    insertSorted: function (a, b) {
      var c = this.floatKeys.length,
        d = 0,
        e = c - 1;
      if (0 == c) this.floatKeys.push(a), this.values.push(b);
      else {
        for (; d < e; ) {
          c = Math.floor((d + e) / 2);
          if (this.floatKeys[c] == a) {
            this.values[c] = b;
            return;
          }
          this.floatKeys[c] > a ? (e = c - 1) : (d = c + 1);
        }
        this.floatKeys[d] > a
          ? (this.floatKeys.splice(d, 0, a), this.values.splice(d, 0, b))
          : this.floatKeys[d] < a
          ? (this.floatKeys.splice(d + 1, 0, a),
            this.values.splice(d + 1, 0, b))
          : (this.values[d] = b);
      }
    },
    toString: function () {
      return this.values.toString();
    },
    __class__: yo,
  };
  var zo = function () {
    this.map = new qd();
  };
  p["openfl.utils._Dictionary.UtilsObjectMap"] = zo;
  zo.__name__ = ["openfl", "utils", "_Dictionary", "UtilsObjectMap"];
  zo.__interfaces__ = [Fd];
  zo.prototype = {
    map: null,
    exists: function (a) {
      return null != this.map.h.__keys__[a.__id__];
    },
    get: function (a) {
      return this.map.h[a.__id__];
    },
    keys: function () {
      return this.map.keys();
    },
    iterator: function () {
      return this.map.iterator();
    },
    remove: function (a) {
      return this.map.remove(a);
    },
    set: function (a, b) {
      this.map.set(a, b);
    },
    toString: function () {
      return this.map.toString();
    },
    __class__: zo,
  };
  var Ji = {};
  p["openfl.utils._Endian.Endian_Impl_"] = Ji;
  Ji.__name__ = ["openfl", "utils", "_Endian", "Endian_Impl_"];
  Ji.fromLimeEndian = function (a) {
    switch (a[1]) {
      case 0:
        return 1;
      case 1:
        return 0;
    }
  };
  Ji.fromString = function (a) {
    switch (a) {
      case "bigEndian":
        return 0;
      case "littleEndian":
        return 1;
      default:
        return null;
    }
  };
  Ji.toLimeEndian = function (a) {
    switch (a) {
      case 0:
        return If.BIG_ENDIAN;
      case 1:
        return If.LITTLE_ENDIAN;
      default:
        return null;
    }
  };
  Ji.toString = function (a) {
    switch (a) {
      case 0:
        return "bigEndian";
      case 1:
        return "littleEndian";
      default:
        return null;
    }
  };
  var lh = {};
  p["openfl.utils._Object.Object_Impl_"] = lh;
  lh.__name__ = ["openfl", "utils", "_Object", "Object_Impl_"];
  lh._new = function () {
    return {};
  };
  lh.hasOwnProperty = function (a, b) {
    return null != a ? Object.prototype.hasOwnProperty.call(a, b) : !1;
  };
  lh.isPrototypeOf = function (a, b) {
    for (a = null == a ? null : u.getClass(a); null != a; ) {
      if (a == b) return !0;
      a = qa.getSuperClass(a);
    }
    return !1;
  };
  lh.iterator = function (a) {
    a = V.fields(a);
    null == a && (a = []);
    return Q.iter(a);
  };
  lh.propertyIsEnumerable = function (a, b) {
    return null != a && Object.prototype.hasOwnProperty.call(a, b)
      ? u.__instanceof(V.field(a, b), Yq)
      : !1;
  };
  lh.toLocaleString = function (a) {
    return P.string(a);
  };
  lh.toString = function (a) {
    return P.string(a);
  };
  lh.valueOf = function (a) {
    return a;
  };
  lh.__get = function (a, b) {
    return V.field(a, b);
  };
  lh.__set = function (a, b, c) {
    return (a[b] = c);
  };
  var vt = function () {};
  p["haxe.lang.Iterator"] = vt;
  vt.__name__ = ["haxe", "lang", "Iterator"];
  vt.prototype = { hasNext: null, next: null, __class__: vt };
  var Yq = function () {};
  p["haxe.lang.Iterable"] = Yq;
  Yq.__name__ = ["haxe", "lang", "Iterable"];
  Yq.prototype = { iterator: null, __class__: Yq };
  var Zq = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_1"] = Zq;
  Zq.__name__ = ["scripts", "ActorEvents_1"];
  Zq.__super__ = F;
  Zq.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Zq,
  });
  var $q = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_100"] = $q;
  $q.__name__ = ["scripts", "ActorEvents_100"];
  $q.__super__ = F;
  $q.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: $q,
  });
  var ar = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_109"] = ar;
  ar.__name__ = ["scripts", "ActorEvents_109"];
  ar.__super__ = F;
  ar.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: ar,
  });
  var br = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_11"] = br;
  br.__name__ = ["scripts", "ActorEvents_11"];
  br.__super__ = F;
  br.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: br,
  });
  var cr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_113"] = cr;
  cr.__name__ = ["scripts", "ActorEvents_113"];
  cr.__super__ = F;
  cr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: cr,
  });
  var dr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_125"] = dr;
  dr.__name__ = ["scripts", "ActorEvents_125"];
  dr.__super__ = F;
  dr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: dr,
  });
  var er = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_129"] = er;
  er.__name__ = ["scripts", "ActorEvents_129"];
  er.__super__ = F;
  er.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: er,
  });
  var fr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_13"] = fr;
  fr.__name__ = ["scripts", "ActorEvents_13"];
  fr.__super__ = F;
  fr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: fr,
  });
  var gr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_131"] = gr;
  gr.__name__ = ["scripts", "ActorEvents_131"];
  gr.__super__ = F;
  gr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: gr,
  });
  var hr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_133"] = hr;
  hr.__name__ = ["scripts", "ActorEvents_133"];
  hr.__super__ = F;
  hr.prototype = x(F.prototype, {
    init: function () {
      var a = this;
      this.actor.makeAlwaysSimulate();
      m.runLater(
        2e3,
        function (b) {
          a.actor.killSelfAfterLeavingScreen();
        },
        this.actor
      );
    },
    forwardMessage: function (a) {},
    __class__: hr,
  });
  var ir = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_137"] = ir;
  ir.__name__ = ["scripts", "ActorEvents_137"];
  ir.__super__ = F;
  ir.prototype = x(F.prototype, {
    init: function () {
      this.actor.killSelfAfterLeavingScreen();
    },
    forwardMessage: function (a) {},
    __class__: ir,
  });
  var jr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_139"] = jr;
  jr.__name__ = ["scripts", "ActorEvents_139"];
  jr.__super__ = F;
  jr.prototype = x(F.prototype, {
    init: function () {
      this.actor.killSelfAfterLeavingScreen();
    },
    forwardMessage: function (a) {},
    __class__: jr,
  });
  var kr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_141"] = kr;
  kr.__name__ = ["scripts", "ActorEvents_141"];
  kr.__super__ = F;
  kr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: kr,
  });
  var lr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_143"] = lr;
  lr.__name__ = ["scripts", "ActorEvents_143"];
  lr.__super__ = F;
  lr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: lr,
  });
  var mr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_15"] = mr;
  mr.__name__ = ["scripts", "ActorEvents_15"];
  mr.__super__ = F;
  mr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: mr,
  });
  var nr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_17"] = nr;
  nr.__name__ = ["scripts", "ActorEvents_17"];
  nr.__super__ = F;
  nr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: nr,
  });
  var or = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_19"] = or;
  or.__name__ = ["scripts", "ActorEvents_19"];
  or.__super__ = F;
  or.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: or,
  });
  var pr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_21"] = pr;
  pr.__name__ = ["scripts", "ActorEvents_21"];
  pr.__super__ = F;
  pr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: pr,
  });
  var qr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_23"] = qr;
  qr.__name__ = ["scripts", "ActorEvents_23"];
  qr.__super__ = F;
  qr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: qr,
  });
  var rr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_25"] = rr;
  rr.__name__ = ["scripts", "ActorEvents_25"];
  rr.__super__ = F;
  rr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: rr,
  });
  var sr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_27"] = sr;
  sr.__name__ = ["scripts", "ActorEvents_27"];
  sr.__super__ = F;
  sr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: sr,
  });
  var tr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_3"] = tr;
  tr.__name__ = ["scripts", "ActorEvents_3"];
  tr.__super__ = F;
  tr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: tr,
  });
  var ur = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_42"] = ur;
  ur.__name__ = ["scripts", "ActorEvents_42"];
  ur.__super__ = F;
  ur.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: ur,
  });
  var vr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_46"] = vr;
  vr.__name__ = ["scripts", "ActorEvents_46"];
  vr.__super__ = F;
  vr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: vr,
  });
  var wr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_5"] = wr;
  wr.__name__ = ["scripts", "ActorEvents_5"];
  wr.__super__ = F;
  wr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: wr,
  });
  var xr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_56"] = xr;
  xr.__name__ = ["scripts", "ActorEvents_56"];
  xr.__super__ = F;
  xr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: xr,
  });
  var yr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_59"] = yr;
  yr.__name__ = ["scripts", "ActorEvents_59"];
  yr.__super__ = F;
  yr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: yr,
  });
  var zr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_61"] = zr;
  zr.__name__ = ["scripts", "ActorEvents_61"];
  zr.__super__ = F;
  zr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: zr,
  });
  var Ar = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_68"] = Ar;
  Ar.__name__ = ["scripts", "ActorEvents_68"];
  Ar.__super__ = F;
  Ar.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Ar,
  });
  var Br = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_7"] = Br;
  Br.__name__ = ["scripts", "ActorEvents_7"];
  Br.__super__ = F;
  Br.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Br,
  });
  var Cr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_72"] = Cr;
  Cr.__name__ = ["scripts", "ActorEvents_72"];
  Cr.__super__ = F;
  Cr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Cr,
  });
  var Dr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_74"] = Dr;
  Dr.__name__ = ["scripts", "ActorEvents_74"];
  Dr.__super__ = F;
  Dr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Dr,
  });
  var Er = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_76"] = Er;
  Er.__name__ = ["scripts", "ActorEvents_76"];
  Er.__super__ = F;
  Er.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Er,
  });
  var Fr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_78"] = Fr;
  Fr.__name__ = ["scripts", "ActorEvents_78"];
  Fr.__super__ = F;
  Fr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Fr,
  });
  var Gr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_82"] = Gr;
  Gr.__name__ = ["scripts", "ActorEvents_82"];
  Gr.__super__ = F;
  Gr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Gr,
  });
  var Hr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_85"] = Hr;
  Hr.__name__ = ["scripts", "ActorEvents_85"];
  Hr.__super__ = F;
  Hr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Hr,
  });
  var Ir = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_88"] = Ir;
  Ir.__name__ = ["scripts", "ActorEvents_88"];
  Ir.__super__ = F;
  Ir.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Ir,
  });
  var Jr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_9"] = Jr;
  Jr.__name__ = ["scripts", "ActorEvents_9"];
  Jr.__super__ = F;
  Jr.prototype = x(F.prototype, {
    init: function () {
      this.actor.makeAlwaysSimulate();
    },
    forwardMessage: function (a) {},
    __class__: Jr,
  });
  var Kr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_90"] = Kr;
  Kr.__name__ = ["scripts", "ActorEvents_90"];
  Kr.__super__ = F;
  Kr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Kr,
  });
  var Lr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_92"] = Lr;
  Lr.__name__ = ["scripts", "ActorEvents_92"];
  Lr.__super__ = F;
  Lr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Lr,
  });
  var Mr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_94"] = Mr;
  Mr.__name__ = ["scripts", "ActorEvents_94"];
  Mr.__super__ = F;
  Mr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Mr,
  });
  var Nr = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_96"] = Nr;
  Nr.__name__ = ["scripts", "ActorEvents_96"];
  Nr.__super__ = F;
  Nr.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Nr,
  });
  var Or = function (a, b, c) {
    F.call(this, b);
  };
  p["scripts.ActorEvents_98"] = Or;
  Or.__name__ = ["scripts", "ActorEvents_98"];
  Or.__super__ = F;
  Or.prototype = x(F.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Or,
  });
  var Pr = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
    a = this.nameMap;
    null != t.JustShooted
      ? a.setReserved("JustShooted", "_JustShooted")
      : (a.h.JustShooted = "_JustShooted");
    this._JustShooted = !1;
    a = this.nameMap;
    null != t.Dead ? a.setReserved("Dead", "_Dead") : (a.h.Dead = "_Dead");
    this._Dead = !1;
    a = this.nameMap;
    null != t.JustHit
      ? a.setReserved("JustHit", "_JustHit")
      : (a.h.JustHit = "_JustHit");
    this._JustHit = !1;
  };
  p["scripts.Design_10_10_BabyShotBehavior"] = Pr;
  Pr.__name__ = ["scripts", "Design_10_10_BabyShotBehavior"];
  Pr.__super__ = F;
  Pr.prototype = x(F.prototype, {
    _JustShooted: null,
    _Dead: null,
    _JustHit: null,
    _customEvent_hit: function () {
      var a = this;
      this._JustHit ||
        ((this._JustHit = !0),
        m.shoutToScene("_customEvent_PlayBumpBanana"),
        m.runLater(
          500,
          function (b) {
            a._JustHit = !1;
          },
          this.actor
        ));
    },
    init: function () {
      var a = this;
      this.actor.makeAlwaysSimulate();
      this.actor.setAnimation("aoff");
      this._JustShooted = !0;
      m.runLater(
        200,
        function (b) {
          a.actor.setAnimation("normal");
          m.runLater(
            100,
            function (b) {
              a._JustShooted = !1;
            },
            a.actor
          );
        },
        this.actor
      );
      this.addCollisionListener(this.actor, function (b, c) {
        a.wrapper.enabled &&
          (b.otherActor.getType() == m.getActorType(9) &&
            (b.otherActor.setAnimation("" + m.randomInt(1, 2)),
            a.actor.getType() == m.getActorType(15)
              ? m.createRecycledActor(
                  m.getActorType(19),
                  a.actor.getX(),
                  a.actor.getY(),
                  0
                )
              : m.createRecycledActor(
                  m.getActorType(11),
                  a.actor.getX(),
                  a.actor.getY(),
                  0
                ),
            m.getLastCreatedActor().setAngle(1 * a.actor.getAngle()),
            m.getLastCreatedActor().shout("_customEvent_killed"),
            m.createRecycledActor(
              m.getActorType(139),
              a.actor.getX(),
              a.actor.getY(),
              0
            ),
            m
              .getLastCreatedActor()
              .setAngularVelocity(0.01745329251994278 * m.randomInt(-1e3, 1e3)),
            m
              .getLastCreatedActor()
              .setVelocity(m.randomInt(-135, -45), m.randomInt(10, 20)),
            a._Dead || ((a._Dead = !0), m.shoutToScene("_customEvent_AddDead")),
            m.recycleActor(a.actor)),
          b.otherActor.getType() == m.getActorType(23) &&
            b.otherActor.shout("_customEvent_hit"));
      });
      this.addMouseOverActorListener(this.actor, function (b, c) {
        a.wrapper.enabled &&
          1 == b &&
          (m.shoutToScene("_customEvent_TurnSelected"),
          a.actor.setAnimation("selected"));
      });
      this.addMouseOverActorListener(this.actor, function (b, c) {
        a.wrapper.enabled &&
          -1 == b &&
          !a._JustShooted &&
          (m.shoutToScene("_customEvent_TurnNormal"),
          a.actor.setAnimation("normal"));
      });
      this.addMouseOverActorListener(this.actor, function (b, c) {
        a.wrapper.enabled &&
          3 == b &&
          !a._JustShooted &&
          (m.shoutToScene("_customEvent_JustPickedUp"),
          m.shoutToScene("_customEvent_PlayGetMonkey"),
          a.actor.getType() == m.getActorType(7)
            ? m.shoutToScene("_customEvent_AddFollowClassic")
            : a.actor.getType() == m.getActorType(15) &&
              m.shoutToScene("_customEvent_AddFollowArrow"),
          m.shoutToScene("_customEvent_TurnNormal"),
          m.recycleActor(a.actor));
      });
    },
    forwardMessage: function (a) {},
    __class__: Pr,
  });
  var Qr = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
  };
  p["scripts.Design_12_12_BabyKilledBheavior"] = Qr;
  Qr.__name__ = ["scripts", "Design_12_12_BabyKilledBheavior"];
  Qr.__super__ = F;
  Qr.prototype = x(F.prototype, {
    _customEvent_killed: function () {
      m.shoutToScene("_customEvent_CheckSecondSpeech");
      m.shoutToScene("_customEvent_PlayDeadMonkey");
      this.actor.moveBy(0, 6, 0, xa.linear);
      this.actor.moveBy(0, -2, 0.2, xa.quadInOut);
      for (var a = 0; 4 > a; )
        a++,
          m.createRecycledActor(
            m.getActorType(13),
            this.actor.getXCenter() - 4,
            this.actor.getYCenter() - 4,
            1
          ),
          m
            .getLastCreatedActor()
            .setVelocity(m.randomInt(0, 359), m.randomInt(10, 20)),
          m
            .getLastCreatedActor()
            .setAngularVelocity(0.01745329251994278 * m.randomInt(-500, 500));
      this._customEvent_drippling();
    },
    _customEvent_drippling: function () {},
    init: function () {
      this.actor.makeAlwaysSimulate();
    },
    forwardMessage: function (a) {},
    __class__: Qr,
  });
  var Rr = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
  };
  p["scripts.Design_14_14_BloodBehavior"] = Rr;
  Rr.__name__ = ["scripts", "Design_14_14_BloodBehavior"];
  Rr.__super__ = F;
  Rr.prototype = x(F.prototype, {
    init: function () {
      this.actor.killSelfAfterLeavingScreen();
      this.actor.setAnimation("" + m.randomInt(1, 2));
    },
    forwardMessage: function (a) {},
    __class__: Rr,
  });
  var Sr = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
    a = this.nameMap;
    null != t.NewDir
      ? a.setReserved("NewDir", "_NewDir")
      : (a.h.NewDir = "_NewDir");
    this._NewDir = 0;
    a = this.nameMap;
    null != t.TempDir
      ? a.setReserved("TempDir", "_TempDir")
      : (a.h.TempDir = "_TempDir");
    this._TempDir = 0;
    a = this.nameMap;
    null != t.Dead ? a.setReserved("Dead", "_Dead") : (a.h.Dead = "_Dead");
    this._Dead = !1;
    a = this.nameMap;
    null != t.JustHit
      ? a.setReserved("JustHit", "_JustHit")
      : (a.h.JustHit = "_JustHit");
    this._JustHit = !1;
  };
  p["scripts.Design_17_17_BabyArrowShotBehavior"] = Sr;
  Sr.__name__ = ["scripts", "Design_17_17_BabyArrowShotBehavior"];
  Sr.__super__ = F;
  Sr.prototype = x(F.prototype, {
    _NewDir: null,
    _TempDir: null,
    _Dead: null,
    _JustHit: null,
    _customEvent_ArrowBroken: function () {
      this.actor.setXVelocity(this.actor.getXVelocity() / 50);
      this.actor.setAnimation("offatall");
      this._Dead || ((this._Dead = !0), m.shoutToScene("_customEvent_AddDead"));
    },
    _customEvent_hit: function () {
      var a = this;
      this._JustHit ||
        ((this._JustHit = !0),
        m.shoutToScene("_customEvent_PlayBumpBanana"),
        m.runLater(
          500,
          function (b) {
            a._JustHit = !1;
          },
          this.actor
        ));
    },
    init: function () {
      var a = this;
      this.actor.makeAlwaysSimulate();
      m.runLater(
        50,
        function (b) {
          a.actor.setAnimation("on");
        },
        this.actor
      );
      this.addCollisionListener(this.actor, function (b, c) {
        if (a.wrapper.enabled)
          if (b.otherCollidedWithSensor) {
            if (b.otherActor.getType() != m.getActorType(23)) {
              m.shoutToScene("_customEvent_PlayArrow");
              a._Dead ||
                ((a._Dead = !0), m.shoutToScene("_customEvent_AddDead"));
              a.actor.setXVelocity(0);
              a.actor.setYVelocity(0);
              m.createRecycledActor(
                m.getActorType(19),
                a.actor.getX(),
                a.actor.getY(),
                0
              );
              b.otherActor.getType() == m.getActorType(131) &&
                m
                  .getLastCreatedActor()
                  .setValue("BabyArrowPlatformBehavior", "_COLLIDEDWITH", 1);
              b.otherActor.getType() == m.getActorType(19) &&
                1 ==
                  b.otherActor.getValue(
                    "BabyArrowPlatformBehavior",
                    "_COLLIDEDWITH"
                  ) &&
                m
                  .getLastCreatedActor()
                  .setValue("BabyArrowPlatformBehavior", "_COLLIDEDWITH", 1);
              b = a.actor.getAngle();
              a._TempDir = 57.29577951308402 * b;
              b = a.actor.getAngle();
              a._NewDir = 57.29577951308402 * b;
              -45 <= a._TempDir &&
                45 >= a._TempDir &&
                (a._NewDir =
                  0 >= a._TempDir
                    ? -(Math.abs(a._TempDir) / 2)
                    : Math.abs(a._TempDir) / 2);
              if (
                (-181 <= a._TempDir && -135 >= a._TempDir) ||
                (135 <= a._TempDir && 181 >= a._TempDir)
              )
                a._NewDir =
                  0 >= a._TempDir
                    ? -(181 + -((181 - Math.abs(a._TempDir)) / 2))
                    : 181 + -((181 - Math.abs(a._TempDir)) / 2);
              m.getLastCreatedActor().setAngle(0.01745329251994278 * a._NewDir);
              m.getLastCreatedActor().shout("_customEvent_ArrowCollided");
              m.recycleActor(a.actor);
            }
          } else if (
            b.otherActor.getType() == m.getActorType(23) ||
            b.otherActor.getType() == m.getActorType(7) ||
            b.otherActor.getType() == m.getActorType(15)
          )
            b.otherActor.shout("_customEvent_hit"),
              a._customEvent_ArrowBroken();
      });
    },
    forwardMessage: function (a) {},
    __class__: Sr,
  });
  var Tr = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
    a = this.nameMap;
    null != t.DirStart
      ? a.setReserved("DirStart", "_DirStart")
      : (a.h.DirStart = "_DirStart");
    this._DirStart = 0;
    a = this.nameMap;
    null != t.MaxDondolio
      ? a.setReserved("MaxDondolio", "_MaxDondolio")
      : (a.h.MaxDondolio = "_MaxDondolio");
    this._MaxDondolio = 0;
    a = this.nameMap;
    null != t.COLLIDEDWITH
      ? a.setReserved("COLLIDEDWITH", "_COLLIDEDWITH")
      : (a.h.COLLIDEDWITH = "_COLLIDEDWITH");
    this._COLLIDEDWITH = 0;
  };
  p["scripts.Design_19_19_BabyArrowPlatformBehavior"] = Tr;
  Tr.__name__ = ["scripts", "Design_19_19_BabyArrowPlatformBehavior"];
  Tr.__super__ = F;
  Tr.prototype = x(F.prototype, {
    _DirStart: null,
    _MaxDondolio: null,
    _COLLIDEDWITH: null,
    _customEvent_Fall: function () {
      this.actor.setAnimation("fall");
    },
    _customEvent_ArrowCollided: function () {},
    init: function () {
      this.actor.makeAlwaysSimulate();
      this._MaxDondolio = 12;
    },
    forwardMessage: function (a) {},
    __class__: Tr,
  });
  var Ur = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
    a = this.nameMap;
    null != t.TurnPx
      ? a.setReserved("TurnPx", "_TurnPx")
      : (a.h.TurnPx = "_TurnPx");
    this._TurnPx = 0;
    a = this.nameMap;
    null != t.JustHit
      ? a.setReserved("JustHit", "_JustHit")
      : (a.h.JustHit = "_JustHit");
    this._JustHit = !1;
  };
  p["scripts.Design_22_22_BananaBehavior"] = Ur;
  Ur.__name__ = ["scripts", "Design_22_22_BananaBehavior"];
  Ur.__super__ = F;
  Ur.prototype = x(F.prototype, {
    _TurnPx: null,
    _JustHit: null,
    _customEvent_hit: function () {
      var a = this;
      this._JustHit ||
        ((this._JustHit = !0),
        m.shoutToScene("_customEvent_PlayBumpBanana"),
        m.runLater(
          500,
          function (b) {
            a._JustHit = !1;
          },
          this.actor
        ));
    },
    _customEvent_move: function () {
      this._customEvent_move();
    },
    _customEvent_turn: function () {
      var a = this;
      m.createRecycledActor(
        m.getActorType(25),
        this.actor.getX() - 14,
        this.actor.getY() - 15,
        2
      );
      m.runLater(
        500,
        function (b) {
          m.createRecycledActor(
            m.getActorType(25),
            a.actor.getX() - 14,
            a.actor.getY() - 15,
            2
          );
          m.runLater(
            500,
            function (b) {
              a._customEvent_turn();
            },
            a.actor
          );
        },
        this.actor
      );
    },
    init: function () {
      this.actor.makeAlwaysSimulate();
      this._TurnPx = 20;
      this._customEvent_turn();
    },
    forwardMessage: function (a) {},
    __class__: Ur,
  });
  var Vr = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
  };
  p["scripts.Design_24_24_BananaCircleBehavior"] = Vr;
  Vr.__name__ = ["scripts", "Design_24_24_BananaCircleBehavior"];
  Vr.__super__ = F;
  Vr.prototype = x(F.prototype, {
    init: function () {
      var a = this;
      this.actor.fadeTo(1, 0, xa.linear);
      this.actor.growTo(0, 0, 0, xa.linear);
      this.actor.growTo(2, 2, 2, xa.linear);
      this.actor.fadeTo(0, 2, xa.linear);
      m.runLater(
        2e3,
        function (b) {
          m.recycleActor(a.actor);
        },
        this.actor
      );
    },
    forwardMessage: function (a) {},
    __class__: Vr,
  });
  var Wr = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
    a = this.nameMap;
    null != t["Player Actor Type"]
      ? a.setReserved("Player Actor Type", "_PlayerActorType")
      : (a.h["Player Actor Type"] = "_PlayerActorType");
    a = this.nameMap;
    null != t["Player Actor"]
      ? a.setReserved("Player Actor", "_PlayerActor")
      : (a.h["Player Actor"] = "_PlayerActor");
    a = this.nameMap;
    null != t["Player Feet Position"]
      ? a.setReserved("Player Feet Position", "_PlayerFeetPosition")
      : (a.h["Player Feet Position"] = "_PlayerFeetPosition");
    this._PlayerFeetPosition = 0;
    a = this.nameMap;
    null != t["Platform Solid Animation"]
      ? a.setReserved("Platform Solid Animation", "_PlatformSolidAnimation")
      : (a.h["Platform Solid Animation"] = "_PlatformSolidAnimation");
    a = this.nameMap;
    null != t["Platform Pass Through Animation"]
      ? a.setReserved(
          "Platform Pass Through Animation",
          "_PlatformPassThroughAnimation"
        )
      : (a.h["Platform Pass Through Animation"] =
          "_PlatformPassThroughAnimation");
    a = this.nameMap;
    null != t["Colliding?"]
      ? a.setReserved("Colliding?", "_Colliding")
      : (a.h["Colliding?"] = "_Colliding");
    this._Colliding = !1;
    a = this.nameMap;
    null != t["Collided?"]
      ? a.setReserved("Collided?", "_Collided")
      : (a.h["Collided?"] = "_Collided");
    this._Collided = !1;
  };
  p["scripts.Design_25_25_OneWayPlatform"] = Wr;
  Wr.__name__ = ["scripts", "Design_25_25_OneWayPlatform"];
  Wr.__super__ = F;
  Wr.prototype = x(F.prototype, {
    _PlayerActorType: null,
    _PlayerActor: null,
    _PlayerFeetPosition: null,
    _PlatformSolidAnimation: null,
    _PlatformPassThroughAnimation: null,
    _Colliding: null,
    _Collided: null,
    init: function () {
      for (
        var a = this, b = 0, c = m.getActorsOfType(this._PlayerActorType);
        b < c.length;

      ) {
        var d = c[b];
        ++b;
        null == d || d.dead || d.recycled || (this._PlayerActor = d);
      }
      m.makeActorNotPassThroughTerrain(this._PlayerActor);
      this.addCollisionListener(this.actor, function (b, c) {
        a.wrapper.enabled && b.thisFromTop && (a._Collided = !0);
      });
      this.addWhenUpdatedListener(null, function (b, c) {
        a.wrapper.enabled &&
          ((a._Colliding = a._Collided),
          (a._Collided = !1),
          (b = a._PlayerActor),
          (m.isPrimitive(b) ||
            ("string" == typeof b ? "" != u.__cast(b, String) : null != b)) &&
            a._PlayerActor.isAlive() &&
            ((b = a._PlayerActor.getY()),
            (c = a._PlayerActor.getHeight()),
            (a._PlayerFeetPosition = b + c),
            a._PlayerFeetPosition <=
              La.scaledCoord("y-top", "scene", a.actor) - -15 || a._Colliding
              ? a.actor.setAnimation(a._PlatformSolidAnimation)
              : a.actor.setAnimation(a._PlatformPassThroughAnimation)));
      });
    },
    forwardMessage: function (a) {},
    __class__: Wr,
  });
  var Xr = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
  };
  p["scripts.Design_27_27_BananaGetBehavior"] = Xr;
  Xr.__name__ = ["scripts", "Design_27_27_BananaGetBehavior"];
  Xr.__super__ = F;
  Xr.prototype = x(F.prototype, {
    init: function () {
      this.actor.moveBy(0, -70, 2, xa.quadInOut);
      this.actor.setAngularVelocity(11.344640137962806);
    },
    forwardMessage: function (a) {},
    __class__: Xr,
  });
  var Yr = function (a, b) {
    m.call(this);
  };
  p["scripts.Design_28_28_SoundMasterBehavior"] = Yr;
  Yr.__name__ = ["scripts", "Design_28_28_SoundMasterBehavior"];
  Yr.__super__ = wb;
  Yr.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Yr,
  });
  var Zr = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
    a = this.nameMap;
    null != t.IDBaby
      ? a.setReserved("IDBaby", "_IDBaby")
      : (a.h.IDBaby = "_IDBaby");
    this._IDBaby = 0;
    a = this.nameMap;
    null != t.MovementList
      ? a.setReserved("MovementList", "_MovementList")
      : (a.h.MovementList = "_MovementList");
    a = this.nameMap;
    null != t.TempList
      ? a.setReserved("TempList", "_TempList")
      : (a.h.TempList = "_TempList");
    a = this.nameMap;
    null != t.PG ? a.setReserved("PG", "_PG") : (a.h.PG = "_PG");
    a = this.nameMap;
    null != t.FollowAfterFrame
      ? a.setReserved("FollowAfterFrame", "_FollowAfterFrame")
      : (a.h.FollowAfterFrame = "_FollowAfterFrame");
    this._FollowAfterFrame = 0;
    a = this.nameMap;
    null != t.DistanceFromActorX
      ? a.setReserved("DistanceFromActorX", "_DistanceFromActorX")
      : (a.h.DistanceFromActorX = "_DistanceFromActorX");
    this._DistanceFromActorX = 0;
    a = this.nameMap;
    null != t.TypeBaby
      ? a.setReserved("TypeBaby", "_TypeBaby")
      : (a.h.TypeBaby = "_TypeBaby");
    this._TypeBaby = 0;
    a = this.nameMap;
    null != t.TurnPx
      ? a.setReserved("TurnPx", "_TurnPx")
      : (a.h.TurnPx = "_TurnPx");
    this._TurnPx = 0;
  };
  p["scripts.Design_2_2_BabyBehavior"] = Zr;
  Zr.__name__ = ["scripts", "Design_2_2_BabyBehavior"];
  Zr.__super__ = F;
  Zr.prototype = x(F.prototype, {
    _IDBaby: null,
    _MovementList: null,
    _TempList: null,
    _PG: null,
    _FollowAfterFrame: null,
    _DistanceFromActorX: null,
    _TypeBaby: null,
    _TurnPx: null,
    _customEvent_turn: function () {
      var a = this;
      this.actor.spinTo(this._TurnPx, 0.5, xa.quadInOut);
      m.runLater(
        500,
        function (b) {
          a.actor.spinTo(-a._TurnPx, 0.5, xa.quadInOut);
          m.runLater(
            500,
            function (b) {
              a._customEvent_turn();
            },
            a.actor
          );
        },
        this.actor
      );
    },
    init: function () {
      var a = this;
      this._PG = m.getValueForScene("SceneBehavior", "_PG");
      this._MovementList = [];
      this.actor.setCurrentFrame(m.randomInt(0, this.actor.getNumFrames() - 1));
      this.actor.setAngle(0.01745329251994278 * m.randomInt(-20, 20));
      this.actor.getType() == m.getActorType(1)
        ? (this._TurnPx = 20)
        : this.actor.getType() == m.getActorType(21) && (this._TurnPx = 10);
      m.runLater(
        1e3 * m.randomFloat(),
        function (b) {
          a._customEvent_turn();
        },
        this.actor
      );
      this._FollowAfterFrame = 10;
      this._DistanceFromActorX = 16;
      this.addWhenDrawingListener(null, function (b, c, d, e) {
        a.wrapper.enabled &&
          ((a._MovementList = a._PG.getValue("PgBehavior", "_MovementTile")),
          a._MovementList.length > a._IDBaby * a._FollowAfterFrame &&
            ((a._TempList =
              a._MovementList[
                (a._MovementList.length -
                  (a._IDBaby * a._FollowAfterFrame + 1)) |
                  0
              ]),
            a.actor.getType() == m.getActorType(1)
              ? ((b = a._TempList[0]),
                a.actor.setX(
                  (null == b
                    ? 0
                    : "number" == typeof b
                    ? u.__cast(b, ri)
                    : "number" == typeof b && (b | 0) === b
                    ? u.__cast(b, og)
                    : "boolean" == typeof b
                    ? u.__cast(b, si)
                      ? 1
                      : 0
                    : "string" == typeof b
                    ? parseFloat(b)
                    : parseFloat(P.string(b))) -
                    a._IDBaby * a._DistanceFromActorX
                ),
                (b = a._TempList[1]),
                a.actor.setY(
                  (null == b
                    ? 0
                    : "number" == typeof b
                    ? u.__cast(b, ri)
                    : "number" == typeof b && (b | 0) === b
                    ? u.__cast(b, og)
                    : "boolean" == typeof b
                    ? u.__cast(b, si)
                      ? 1
                      : 0
                    : "string" == typeof b
                    ? parseFloat(b)
                    : parseFloat(P.string(b))) + 36
                ))
              : a.actor.getType() == m.getActorType(21) &&
                ((b = a._TempList[0]),
                a.actor.setX(
                  (null == b
                    ? 0
                    : "number" == typeof b
                    ? u.__cast(b, ri)
                    : "number" == typeof b && (b | 0) === b
                    ? u.__cast(b, og)
                    : "boolean" == typeof b
                    ? u.__cast(b, si)
                      ? 1
                      : 0
                    : "string" == typeof b
                    ? parseFloat(b)
                    : parseFloat(P.string(b))) -
                    a._IDBaby * a._DistanceFromActorX -
                    26
                ),
                (b = a._TempList[1]),
                a.actor.setY(
                  (null == b
                    ? 0
                    : "number" == typeof b
                    ? u.__cast(b, ri)
                    : "number" == typeof b && (b | 0) === b
                    ? u.__cast(b, og)
                    : "boolean" == typeof b
                    ? u.__cast(b, si)
                      ? 1
                      : 0
                    : "string" == typeof b
                    ? parseFloat(b)
                    : parseFloat(P.string(b))) + 40
                ))));
      });
    },
    forwardMessage: function (a) {},
    __class__: Zr,
  });
  var $r = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
  };
  p["scripts.Design_30_30_PaticleBehavior"] = $r;
  $r.__name__ = ["scripts", "Design_30_30_PaticleBehavior"];
  $r.__super__ = F;
  $r.prototype = x(F.prototype, {
    init: function () {
      var a = this;
      this.actor.killSelfAfterLeavingScreen();
      this.actor.growTo(0, 0, 1, xa.linear);
      m.runLater(
        1e3,
        function (b) {
          m.recycleActor(a.actor);
        },
        this.actor
      );
    },
    forwardMessage: function (a) {},
    __class__: $r,
  });
  var Wd = function (a, b) {
    m.call(this);
  };
  p["scripts.Design_32_32_PositioningBehavior"] = Wd;
  Wd.__name__ = ["scripts", "Design_32_32_PositioningBehavior"];
  Wd._customBlock_CenterScreenX = function (a, b) {
    a.setX(m.getScreenWidth() / 2 - a.getWidth() / 2 + b);
  };
  Wd._customBlock_CenterScreenY = function (a, b) {
    a.setY(m.getScreenHeight() / 2 - a.getHeight() / 2 + b);
  };
  Wd._customBlock_BottomScreenY = function (a, b) {
    a.setY(m.getScreenHeight() - a.getHeight() / 2 + b);
  };
  Wd._customBlock_GetImageActorType = function (a, b) {
    m.createRecycledActor(a, 0, 0, 0);
    m.getLastCreatedActor().makeAlwaysSimulate();
    m.getLastCreatedActor().setAnimation(b);
    return m.getImageForActor(m.getLastCreatedActor());
  };
  Wd._customBlock_GetXCenter = function (a, b) {
    return m.getScreenWidth() / 2 - a.getWidth() / 2 + b;
  };
  Wd._customBlock_GetYCenter = function (a, b) {
    return m.getScreenHeight() / 2 - a.getHeight() / 2 + b;
  };
  Wd._customBlock_GetYBottom = function (a, b) {
    return m.getScreenHeight() / 2 - a.getHeight() / 2 + b;
  };
  Wd.__super__ = wb;
  Wd.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Wd,
  });
  var as = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
    a = this.nameMap;
    null != t.TombstoneImage
      ? a.setReserved("TombstoneImage", "_TombstoneImage")
      : (a.h.TombstoneImage = "_TombstoneImage");
    a = this.nameMap;
    null != t.TombstoneFont
      ? a.setReserved("TombstoneFont", "_TombstoneFont")
      : (a.h.TombstoneFont = "_TombstoneFont");
    a = this.nameMap;
    null != t.LABEL ? a.setReserved("LABEL", "_LABEL") : (a.h.LABEL = "_LABEL");
    this._LABEL = "";
    a = this.nameMap;
    null != t.NameList
      ? a.setReserved("NameList", "_NameList")
      : (a.h.NameList = "_NameList");
  };
  p["scripts.Design_33_33_TombstoneBehavior"] = as;
  as.__name__ = ["scripts", "Design_33_33_TombstoneBehavior"];
  as.__super__ = F;
  as.prototype = x(F.prototype, {
    _TombstoneImage: null,
    _TombstoneFont: null,
    _LABEL: null,
    _NameList: null,
    _customEvent_Labelize: function () {
      this._TombstoneFont = m.getFont(55);
      this._TombstoneImage = m.newImage(
        this.actor.getWidth() | 0,
        this.actor.getHeight() | 0
      );
      m.drawTextOnImage(
        this._TombstoneImage,
        this._LABEL,
        (this.actor.getWidth() / 2 -
          this._TombstoneFont.font.getTextWidth(
            this._LABEL,
            this._TombstoneFont.letterSpacing
          ) /
            r.SCALE /
            2) |
          0,
        70,
        this._TombstoneFont
      );
      m.attachImageToActor(
        new Rg(new ic(this._TombstoneImage)),
        this.actor,
        0,
        0,
        1
      );
    },
    init: function () {},
    forwardMessage: function (a) {},
    __class__: as,
  });
  var bs = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
  };
  p["scripts.Design_36_36_ContinueBehavior"] = bs;
  bs.__name__ = ["scripts", "Design_36_36_ContinueBehavior"];
  bs.__super__ = F;
  bs.prototype = x(F.prototype, {
    _customEvent_blink: function () {
      var a = this;
      this.actor.fadeTo(1, 0.5, xa.quadInOut);
      m.runLater(
        500,
        function (b) {
          a.actor.fadeTo(0.5, 0.5, xa.quadInOut);
          m.runLater(
            500,
            function (b) {
              a._customEvent_blink();
            },
            a.actor
          );
        },
        this.actor
      );
    },
    init: function () {
      this.actor.fadeTo(0, 0, xa.linear);
      this._customEvent_blink();
    },
    forwardMessage: function (a) {},
    __class__: bs,
  });
  var cs = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
    a = this.nameMap;
    null != t.auxX ? a.setReserved("auxX", "_auxX") : (a.h.auxX = "_auxX");
    this._auxX = 0;
    a = this.nameMap;
    null != t.auxY ? a.setReserved("auxY", "_auxY") : (a.h.auxY = "_auxY");
    this._auxY = 0;
    a = this.nameMap;
    null != t.Delay ? a.setReserved("Delay", "_Delay") : (a.h.Delay = "_Delay");
    this._Delay = 15;
  };
  p["scripts.Design_37_37_SmoothCamera"] = cs;
  cs.__name__ = ["scripts", "Design_37_37_SmoothCamera"];
  cs.__super__ = F;
  cs.prototype = x(F.prototype, {
    _auxX: null,
    _auxY: null,
    _Delay: null,
    init: function () {
      var a = this;
      this._auxX = this.actor.getXCenter();
      this._auxY = this.actor.getYCenter();
      this._Delay += 1;
      this.addWhenUpdatedListener(null, function (b, c) {
        a.wrapper.enabled &&
          ((b = a._auxX),
          (c = (a.actor.getXCenter() - a._auxX) / a._Delay),
          (a._auxX = b + c),
          (b = a._auxY),
          (c = (a.actor.getYCenter() - a._auxY) / a._Delay),
          (a._auxY = b + c),
          m.engine.moveCamera(a._auxX, a._auxY));
      });
    },
    forwardMessage: function (a) {},
    __class__: cs,
  });
  var ds = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
  };
  p["scripts.Design_39_39_TutorialBehavior"] = ds;
  ds.__name__ = ["scripts", "Design_39_39_TutorialBehavior"];
  ds.__super__ = F;
  ds.prototype = x(F.prototype, {
    _customEvent_turn: function () {
      var a = this;
      this.actor.spinTo(3, 1, xa.quadInOut);
      m.runLater(
        1e3,
        function (b) {
          a.actor.spinTo(-3, 1, xa.quadInOut);
          m.runLater(
            1e3,
            function (b) {
              a._customEvent_turn();
            },
            a.actor
          );
        },
        this.actor
      );
    },
    init: function () {
      this._customEvent_turn();
    },
    forwardMessage: function (a) {},
    __class__: ds,
  });
  var es = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
    a = this.nameMap;
    null != t.MovementTile
      ? a.setReserved("MovementTile", "_MovementTile")
      : (a.h.MovementTile = "_MovementTile");
    a = this.nameMap;
    null != t.TempList
      ? a.setReserved("TempList", "_TempList")
      : (a.h.TempList = "_TempList");
    a = this.nameMap;
    null != t.auxX ? a.setReserved("auxX", "_auxX") : (a.h.auxX = "_auxX");
    this._auxX = 0;
    a = this.nameMap;
    null != t.Delay ? a.setReserved("Delay", "_Delay") : (a.h.Delay = "_Delay");
    this._Delay = 15;
    a = this.nameMap;
    null != t.auxY ? a.setReserved("auxY", "_auxY") : (a.h.auxY = "_auxY");
    this._auxY = 0;
    a = this.nameMap;
    null != t.NOCAMERA
      ? a.setReserved("NOCAMERA", "_NOCAMERA")
      : (a.h.NOCAMERA = "_NOCAMERA");
    this._NOCAMERA = !1;
    a = this.nameMap;
    null != t.aTerra
      ? a.setReserved("aTerra", "_aTerra")
      : (a.h.aTerra = "_aTerra");
    this._aTerra = !1;
    a = this.nameMap;
    null != t.TempoSaltoPremuto
      ? a.setReserved("TempoSaltoPremuto", "_TempoSaltoPremuto")
      : (a.h.TempoSaltoPremuto = "_TempoSaltoPremuto");
    this._TempoSaltoPremuto = 0;
    a = this.nameMap;
    null != t.ForzaSalto
      ? a.setReserved("ForzaSalto", "_ForzaSalto")
      : (a.h.ForzaSalto = "_ForzaSalto");
    this._ForzaSalto = 0;
    a = this.nameMap;
    null != t.ySpeed
      ? a.setReserved("ySpeed", "_ySpeed")
      : (a.h.ySpeed = "_ySpeed");
    this._ySpeed = 0;
    a = this.nameMap;
    null != t.MovingUp
      ? a.setReserved("MovingUp", "_MovingUp")
      : (a.h.MovingUp = "_MovingUp");
    this._MovingUp = !1;
    a = this.nameMap;
    null != t.IndexSpostabile
      ? a.setReserved("IndexSpostabile", "_IndexSpostabile")
      : (a.h.IndexSpostabile = "_IndexSpostabile");
    this._IndexSpostabile = 0;
    a = this.nameMap;
    null != t.Morto ? a.setReserved("Morto", "_Morto") : (a.h.Morto = "_Morto");
    this._Morto = !1;
    a = this.nameMap;
    null != t.BlockPgMidAir
      ? a.setReserved("BlockPgMidAir", "_BlockPgMidAir")
      : (a.h.BlockPgMidAir = "_BlockPgMidAir");
    this._BlockPgMidAir = !1;
    a = this.nameMap;
    null != t.Bumping
      ? a.setReserved("Bumping", "_Bumping")
      : (a.h.Bumping = "_Bumping");
    this._Bumping = !1;
    a = this.nameMap;
    null != t.ArrowUp
      ? a.setReserved("ArrowUp", "_ArrowUp")
      : (a.h.ArrowUp = "_ArrowUp");
    a = this.nameMap;
    null != t.Girato
      ? a.setReserved("Girato", "_Girato")
      : (a.h.Girato = "_Girato");
    this._Girato = "";
    a = this.nameMap;
    null != t.justJumped
      ? a.setReserved("justJumped", "_justJumped")
      : (a.h.justJumped = "_justJumped");
    this._justJumped = !1;
    a = this.nameMap;
    null != t.Movimento
      ? a.setReserved("Movimento", "_Movimento")
      : (a.h.Movimento = "_Movimento");
    this._Movimento = !1;
    a = this.nameMap;
    null != t.myself
      ? a.setReserved("myself", "_myself")
      : (a.h.myself = "_myself");
    a = this.nameMap;
    null != t.TypeLastActor
      ? a.setReserved("TypeLastActor", "_TypeLastActor")
      : (a.h.TypeLastActor = "_TypeLastActor");
    a = this.nameMap;
    null != t.MinFallYspeed
      ? a.setReserved("MinFallYspeed", "_MinFallYspeed")
      : (a.h.MinFallYspeed = "_MinFallYspeed");
    this._MinFallYspeed = 0;
    a = this.nameMap;
    null != t.Menu ? a.setReserved("Menu", "_Menu") : (a.h.Menu = "_Menu");
    this._Menu = !1;
    a = this.nameMap;
    null != t.xSpeed
      ? a.setReserved("xSpeed", "_xSpeed")
      : (a.h.xSpeed = "_xSpeed");
    this._xSpeed = 0;
    a = this.nameMap;
    null != t.MovingRight
      ? a.setReserved("MovingRight", "_MovingRight")
      : (a.h.MovingRight = "_MovingRight");
    this._MovingRight = !1;
    a = this.nameMap;
    null != t.MovingLeft
      ? a.setReserved("MovingLeft", "_MovingLeft")
      : (a.h.MovingLeft = "_MovingLeft");
    this._MovingLeft = !1;
    a = this.nameMap;
    null != t.BoxMovimento
      ? a.setReserved("BoxMovimento", "_BoxMovimento")
      : (a.h.BoxMovimento = "_BoxMovimento");
    a = this.nameMap;
    null != t.WallJumpDx
      ? a.setReserved("WallJumpDx", "_WallJumpDx")
      : (a.h.WallJumpDx = "_WallJumpDx");
    this._WallJumpDx = !1;
    a = this.nameMap;
    null != t.WallJumpSx
      ? a.setReserved("WallJumpSx", "_WallJumpSx")
      : (a.h.WallJumpSx = "_WallJumpSx");
    this._WallJumpSx = !1;
    a = this.nameMap;
    null != t.LastVelY
      ? a.setReserved("LastVelY", "_LastVelY")
      : (a.h.LastVelY = "_LastVelY");
    this._LastVelY = 0;
    a = this.nameMap;
    null != t.indexVel
      ? a.setReserved("indexVel", "_indexVel")
      : (a.h.indexVel = "_indexVel");
    this._indexVel = 0;
    a = this.nameMap;
    null != t.JustLand
      ? a.setReserved("JustLand", "_JustLand")
      : (a.h.JustLand = "_JustLand");
    this._JustLand = !1;
    a = this.nameMap;
    null != t.DoubleJump
      ? a.setReserved("DoubleJump", "_DoubleJump")
      : (a.h.DoubleJump = "_DoubleJump");
    this._DoubleJump = !1;
    a = this.nameMap;
    null != t.ArrowActor
      ? a.setReserved("ArrowActor", "_ArrowActor")
      : (a.h.ArrowActor = "_ArrowActor");
    a = this.nameMap;
    null != t.ArrowCreated
      ? a.setReserved("ArrowCreated", "_ArrowCreated")
      : (a.h.ArrowCreated = "_ArrowCreated");
    this._ArrowCreated = !1;
    a = this.nameMap;
    null != t.JustPickedUp
      ? a.setReserved("JustPickedUp", "_JustPickedUp")
      : (a.h.JustPickedUp = "_JustPickedUp");
    this._JustPickedUp = !1;
    a = this.nameMap;
    null != t.TypeChosenMonkey
      ? a.setReserved("TypeChosenMonkey", "_TypeChosenMonkey")
      : (a.h.TypeChosenMonkey = "_TypeChosenMonkey");
    this._TypeChosenMonkey = 0;
    a = this.nameMap;
    null != t.BlockAnimation
      ? a.setReserved("BlockAnimation", "_BlockAnimation")
      : (a.h.BlockAnimation = "_BlockAnimation");
    this._BlockAnimation = !1;
    a = this.nameMap;
    null != t.LastXKill
      ? a.setReserved("LastXKill", "_LastXKill")
      : (a.h.LastXKill = "_LastXKill");
    this._LastXKill = 0;
    a = this.nameMap;
    null != t.LastYKill
      ? a.setReserved("LastYKill", "_LastYKill")
      : (a.h.LastYKill = "_LastYKill");
    this._LastYKill = 0;
    a = this.nameMap;
    null != t.BATTERY
      ? a.setReserved("BATTERY", "_BATTERY")
      : (a.h.BATTERY = "_BATTERY");
    a = this.nameMap;
    null != t.BlockXY
      ? a.setReserved("BlockXY", "_BlockXY")
      : (a.h.BlockXY = "_BlockXY");
    this._BlockXY = !1;
    a = this.nameMap;
    null != t.BlockX
      ? a.setReserved("BlockX", "_BlockX")
      : (a.h.BlockX = "_BlockX");
    this._BlockX = 0;
    a = this.nameMap;
    null != t.BlockY
      ? a.setReserved("BlockY", "_BlockY")
      : (a.h.BlockY = "_BlockY");
    this._BlockY = 0;
  };
  p["scripts.Design_4_4_PgBehavior"] = es;
  es.__name__ = ["scripts", "Design_4_4_PgBehavior"];
  es.__super__ = F;
  es.prototype = x(F.prototype, {
    _MovementTile: null,
    _TempList: null,
    _auxX: null,
    _Delay: null,
    _auxY: null,
    _NOCAMERA: null,
    _aTerra: null,
    _TempoSaltoPremuto: null,
    _ForzaSalto: null,
    _ySpeed: null,
    _MovingUp: null,
    _IndexSpostabile: null,
    _Morto: null,
    _BlockPgMidAir: null,
    _Bumping: null,
    _ArrowUp: null,
    _Girato: null,
    _justJumped: null,
    _Movimento: null,
    _myself: null,
    _TypeLastActor: null,
    _MinFallYspeed: null,
    _Menu: null,
    _xSpeed: null,
    _MovingRight: null,
    _MovingLeft: null,
    _BoxMovimento: null,
    _WallJumpDx: null,
    _WallJumpSx: null,
    _LastVelY: null,
    _indexVel: null,
    _JustLand: null,
    _DoubleJump: null,
    _ArrowActor: null,
    _ArrowCreated: null,
    _JustPickedUp: null,
    _TypeChosenMonkey: null,
    _BlockAnimation: null,
    _LastXKill: null,
    _LastYKill: null,
    _BATTERY: null,
    _BlockXY: null,
    _BlockX: null,
    _BlockY: null,
    _customEvent_Die: function () {
      if (!this._Morto) {
        this._ArrowCreated && this._ArrowActor.disableActorDrawing();
        this._Movimento = !1;
        this._Morto = !0;
        this._LastXKill = this.actor.getXCenter();
        this._LastYKill = this.actor.getYCenter();
        m.startShakingScreen(0.02, 0.1);
        m.shoutToScene("_customEvent_PlayDeadMonkey");
        m.shoutToScene("_customEvent_PlayMonkeyDie");
        for (var a = 0; 6 > a; )
          a++,
            m.createRecycledActor(
              m.getActorType(13),
              this.actor.getXCenter() - 4,
              this.actor.getYCenter() - 4,
              1
            ),
            m
              .getLastCreatedActor()
              .setVelocity(m.randomInt(0, 359), m.randomInt(10, 20)),
            m
              .getLastCreatedActor()
              .setAngularVelocity(0.01745329251994278 * m.randomInt(-500, 500));
        "sx" == this._Girato
          ? (this.actor.setAnimation("DeadSx"),
            this.actor.setAngularVelocity(-8.726646259971389))
          : (this.actor.setAnimation("DeadDx"),
            this.actor.setAngularVelocity(8.726646259971389));
        this.actor.setYVelocity(-40);
        m.runLater(
          1e3,
          function (a) {
            m.reloadCurrentScene(
              m.createFadeOut(0.25, 0),
              m.createFadeIn(0.25, 0)
            );
          },
          this.actor
        );
      }
    },
    _customEvent_ShotMonkey: function () {
      if (this._Movimento)
        if (this._JustPickedUp) this._JustPickedUp = !1;
        else if (0 < r.engine.getGameAttribute("nbby")) {
          m.shoutToScene("_customEvent_PlayMonkey");
          m.shoutToScene("_customEvent_PlayShot");
          this._customEvent_ShotAnim();
          for (
            var a = 0, b = m.getActorsOfType(m.getActorType(1));
            a < b.length;

          ) {
            var c = b[a];
            ++a;
            if (
              null != c &&
              !c.dead &&
              !c.recycled &&
              c.getValue("BabyBehavior", "_IDBaby") ==
                r.engine.getGameAttribute("nbby")
            ) {
              var d = c.getValue("BabyBehavior", "_TypeBaby");
              this._TypeChosenMonkey =
                null == d
                  ? 0
                  : "number" == typeof d
                  ? u.__cast(d, ri)
                  : "number" == typeof d && (d | 0) === d
                  ? u.__cast(d, og)
                  : "boolean" == typeof d
                  ? u.__cast(d, si)
                    ? 1
                    : 0
                  : "string" == typeof d
                  ? parseFloat(d)
                  : parseFloat(P.string(d));
              m.recycleActor(c);
            }
          }
          a = 0;
          for (b = m.getActorsOfType(m.getActorType(21)); a < b.length; )
            (c = b[a]),
              ++a,
              null == c ||
                c.dead ||
                c.recycled ||
                c.getValue("BabyBehavior", "_IDBaby") !=
                  r.engine.getGameAttribute("nbby") ||
                ((d = c.getValue("BabyBehavior", "_TypeBaby")),
                (this._TypeChosenMonkey =
                  null == d
                    ? 0
                    : "number" == typeof d
                    ? u.__cast(d, ri)
                    : "number" == typeof d && (d | 0) === d
                    ? u.__cast(d, og)
                    : "boolean" == typeof d
                    ? u.__cast(d, si)
                      ? 1
                      : 0
                    : "string" == typeof d
                    ? parseFloat(d)
                    : parseFloat(P.string(d))),
                m.recycleActor(c));
          a = r.engine;
          b = r.engine.getGameAttribute("nbby") - 1;
          a.gameAttributes.set("nbby", b);
          1 == this._TypeChosenMonkey
            ? (m.createRecycledActor(
                m.getActorType(7),
                this.actor.getX() + 8,
                this.actor.getY() + 23,
                0
              ),
              m
                .getLastCreatedActor()
                .setVelocity(
                  57.29577951308402 * this._ArrowActor.getAngle(),
                  50
                ),
              m
                .getLastCreatedActor()
                .setAngularVelocity(
                  0.01745329251994278 * m.randomInt(-200, 200)
                ))
            : 2 == this._TypeChosenMonkey &&
              (m.createRecycledActor(
                m.getActorType(17),
                this.actor.getX() + -23,
                this.actor.getY() + 25,
                0
              ),
              m.getLastCreatedActor().setAngle(1 * this._ArrowActor.getAngle()),
              m
                .getLastCreatedActor()
                .setVelocity(
                  57.29577951308402 * this._ArrowActor.getAngle(),
                  80
                ),
              -90 <= 57.29577951308402 * this._ArrowActor.getAngle() &&
              90 >= 57.29577951308402 * this._ArrowActor.getAngle()
                ? m.getLastCreatedActor().setAngularVelocity(1.3962634015954223)
                : m
                    .getLastCreatedActor()
                    .setAngularVelocity(-1.3962634015954223));
        }
    },
    _customEvent_JustPickedUp: function () {
      this._JustPickedUp = !0;
    },
    _customEvent_TurnNormal: function () {
      this._ArrowCreated && this._ArrowActor.setAnimation("normal");
    },
    _customEvent_TurnSelected: function () {
      this._ArrowCreated && this._ArrowActor.setAnimation("heart");
    },
    _customEvent_Jump: function () {
      var a = this;
      this._Movimento &&
        this._aTerra &&
        !this._justJumped &&
        ((this._aTerra = !1),
        this._BlockAnimation ||
          ("sx" == this._Girato
            ? this.actor.setAnimation("JumpSx")
            : this.actor.setAnimation("JumpDx")),
        (this._justJumped = !0),
        m.runLater(
          100,
          function (b) {
            a._justJumped = !1;
          },
          this.actor
        ),
        (this._ForzaSalto = 5.5),
        this.actor.setY(this.actor.getY() - 1),
        (this._TempoSaltoPremuto = 0),
        m.shoutToScene("_customEvent_PlayJump"),
        this._customEvent_JumpDust(),
        this.actor.setYVelocity(0 - this._ForzaSalto));
    },
    _customEvent_JumpBump: function () {
      m.shoutToScene("_customEvent_PlayBump");
      this._aTerra = !1;
      this.actor.setY(this.actor.getY() - 1);
      this._aTerra = !1;
      this.actor.setYVelocity(-30);
      this._aTerra = !1;
    },
    _customEvent_JumpDust: function () {},
    _customEvent_Movimento: function () {
      this._Movimento &&
        (m.isKeyDown("right") || m.isKeyDown("d")
          ? (this._MovingRight = !0)
          : (this._MovingRight = !1),
        m.isKeyDown("left") || m.isKeyDown("a")
          ? (this._MovingLeft = !0)
          : (this._MovingLeft = !1),
        this._Morto ||
          (this._MovingRight
            ? ((this._Girato = "dx"),
              this._customEvent_Dust(),
              this._aTerra
                ? this._customEvent_MoveDx()
                : this._customEvent_JumpDx(),
              0 > this.actor.getXVelocity() && this.actor.setXVelocity(0),
              Math.abs(this.actor.getXVelocity()) <= this._xSpeed - 1
                ? this.actor.setXVelocity(this.actor.getXVelocity() + 1)
                : "dx" == this._Girato
                ? this.actor.setXVelocity(this._xSpeed)
                : this.actor.setXVelocity(-this._xSpeed))
            : this._MovingLeft
            ? ((this._Girato = "sx"),
              this._customEvent_Dust(),
              this._aTerra
                ? this._customEvent_MoveSx()
                : this._customEvent_JumpSx(),
              0 < this.actor.getXVelocity() && this.actor.setXVelocity(0),
              Math.abs(this.actor.getXVelocity()) <= this._xSpeed - 1 &&
                this.actor.setXVelocity(this.actor.getXVelocity() - 1))
            : (this.actor.setXVelocity(0),
              this._aTerra
                ? "sx" == this._Girato
                  ? (this.actor.getYVelocity() > this._MinFallYspeed
                      ? ((this._aTerra = !1),
                        this._BlockAnimation ||
                          this.actor.setAnimation("FallSx"))
                      : "upBlinkSx" != this.actor.getAnimation() &&
                        (this._BlockAnimation ||
                          this.actor.setAnimation("StandSx")),
                    1 < this.actor.getYVelocity() &&
                      (this._BlockAnimation ||
                        this.actor.setAnimation("FallSx")))
                  : (this.actor.getYVelocity() > this._MinFallYspeed
                      ? ((this._aTerra = !1),
                        this._BlockAnimation ||
                          this.actor.setAnimation("FallDx"))
                      : "upBlinkDx" != this.actor.getAnimation() &&
                        (this._BlockAnimation ||
                          this.actor.setAnimation("StandDx")),
                    1 < this.actor.getYVelocity() &&
                      (this._BlockAnimation ||
                        this.actor.setAnimation("FallDx")))
                : "sx" == this._Girato
                ? this._customEvent_JumpSx()
                : this._customEvent_JumpDx())));
    },
    _customEvent_Dust: function () {},
    _customEvent_LandDust: function () {},
    _customEvent_MoveDx: function () {
      0 >= this.actor.getYVelocity()
        ? this._BlockAnimation || this.actor.setAnimation("MoveDx")
        : (this.actor.getYVelocity() > this._MinFallYspeed &&
            ((this._aTerra = !1),
            this._BlockAnimation || this.actor.setAnimation("FallDx")),
          1 < this.actor.getYVelocity() &&
            (this._BlockAnimation || this.actor.setAnimation("FallDx")));
    },
    _customEvent_ShotAnim: function () {
      var a = this;
      this._BlockAnimation = !0;
      "dx" == this._Girato
        ? this.actor.setAnimation("ShotDx")
        : this.actor.setAnimation("ShotSx");
      m.runLater(
        100,
        function (b) {
          a._BlockAnimation = !1;
        },
        this.actor
      );
    },
    _customEvent_GoalAnim: function () {
      m.shoutToScene("_customEvent_PlayMonkeyGoal");
      this._BlockAnimation = !0;
      this.actor.setAnimation("Goal");
    },
    _customEvent_MoveSx: function () {
      0 >= this.actor.getYVelocity()
        ? this._BlockAnimation || this.actor.setAnimation("MoveSx")
        : (this.actor.getYVelocity() > this._MinFallYspeed &&
            ((this._aTerra = !1),
            this._BlockAnimation || this.actor.setAnimation("FallSx")),
          1 < this.actor.getYVelocity() &&
            (this._BlockAnimation || this.actor.setAnimation("FallSx")));
    },
    _customEvent_JumpDx: function () {
      this._WallJumpDx ||
        this._WallJumpSx ||
        (0 >= this.actor.getYVelocity()
          ? "JumpSx" == this.actor.getAnimation()
            ? this._BlockAnimation ||
              (this.actor.setAnimation("JumpDx"), this.actor.setCurrentFrame(2))
            : this._BlockAnimation || this.actor.setAnimation("JumpDx")
          : this._BlockAnimation || this.actor.setAnimation("FallDx"));
    },
    _customEvent_JumpSx: function () {
      this._WallJumpDx ||
        this._WallJumpSx ||
        (0 >= this.actor.getYVelocity()
          ? "JumpDx" == this.actor.getAnimation()
            ? this._BlockAnimation ||
              (this.actor.setAnimation("JumpSx"), this.actor.setCurrentFrame(2))
            : this._BlockAnimation || this.actor.setAnimation("JumpSx")
          : this._BlockAnimation || this.actor.setAnimation("FallSx"));
    },
    _customEvent_checkVelY: function () {
      0 != this.actor.getYVelocity() &&
        (60 < this.actor.getYVelocity()
          ? (this._LastVelY = 60)
          : (this._LastVelY = this.actor.getYVelocity()));
      this._indexVel += 1;
      10 < this._indexVel && (this._indexVel = 0);
    },
    init: function () {
      var a = this;
      this.actor.makeAlwaysSimulate();
      this.actor.makeAlwaysSimulate();
      this._myself = this.actor;
      this._IndexSpostabile = 3;
      this._auxX = this.actor.getXCenter();
      this._auxY = this.actor.getYCenter();
      this._MovementTile = [];
      for (var b = 0; 200 > b; )
        b++,
          (this._TempList = []),
          this._TempList.push(this.actor.getX()),
          this._TempList.push(this.actor.getY()),
          this._MovementTile.push(this._TempList);
      this._Delay += 1;
      this._aTerra = !0;
      this._MinFallYspeed = 15;
      this._xSpeed = 20;
      this._ySpeed = 0.4;
      this._Girato = "dx";
      this._Movimento = !0;
      m.createRecycledActor(
        m.getActorType(5),
        this.actor.getX() - 12,
        this.actor.getY(),
        0
      );
      this._ArrowActor = m.getLastCreatedActor();
      this._ArrowCreated = !0;
      this.addCollisionListener(this.actor, function (b, d) {
        if (a.wrapper.enabled)
          if (!a._Morto && b.otherActor.getGroup() == m.getActorGroup(4))
            a._customEvent_Die();
          else if (
            a._Movimento &&
            (!b.thisFromBottom ||
              (b.otherActor.getGroup() != m.getActorGroup(1) &&
                b.otherActor.getGroup() != m.getActorGroup(5)) ||
              (a._aTerra ||
                a._JustLand ||
                (a._customEvent_LandDust(),
                (a._JustLand = !0),
                m.runLater(
                  250,
                  function (b) {
                    a._JustLand = !1;
                  },
                  a.actor
                )),
              (a._aTerra = !0),
              (a._DoubleJump = !1)),
            b.thisFromBottom &&
              b.otherActor.getType() == m.getActorType(7) &&
              !b.otherActor.getValue("BabyShotBehavior", "_JustShooted") &&
              (a._customEvent_JumpBump(),
              m.createRecycledActor(
                m.getActorType(15),
                b.otherActor.getX() - 32,
                b.otherActor.getY(),
                0
              ),
              m.recycleActor(b.otherActor)),
            b.otherActor.getType() == m.getActorType(23))
          ) {
            a._Morto = !0;
            m.shoutToScene("_customEvent_PlayTheme2");
            a._ArrowActor.disableActorDrawing();
            a._Movimento = !1;
            a.actor.setXVelocity(0);
            a.actor.setYVelocity(0);
            a.actor.moveTo(
              b.otherActor.getX() - 8,
              a.actor.getY(),
              0.25,
              xa.quadInOut
            );
            a._customEvent_GoalAnim();
            m.runLater(
              250,
              function (b) {
                a.actor.setIgnoreGravity(!0);
                m.runLater(
                  250,
                  function (b) {
                    a._BlockX = a.actor.getX();
                    a._BlockY = a.actor.getY();
                    a._BlockXY = !0;
                  },
                  a.actor
                );
              },
              a.actor
            );
            m.shoutToScene("_customEvent_PlayBanana");
            d = 0;
            for (
              var c = m.getActorsOfType(m.getActorType(25));
              d < c.length;

            ) {
              var f = c[d];
              ++d;
              null == f || f.dead || f.recycled || m.recycleActor(f);
            }
            for (d = 0; 20 > d; )
              (c = d++),
                m.createRecycledActor(
                  m.getActorType(42),
                  b.otherActor.getXCenter() - 4,
                  b.otherActor.getYCenter() - 4,
                  0
                ),
                m.getLastCreatedActor().setVelocity(18 * c, 20);
            m.createRecycledActor(
              m.getActorType(27),
              b.otherActor.getX(),
              b.otherActor.getY(),
              0
            );
            m.getLastCreatedActor().setAngle(1 * b.otherActor.getAngle());
            m.recycleActor(b.otherActor);
            m.runLater(
              1500,
              function (a) {
                m.shoutToScene("_customEvent_EndLevel");
              },
              a.actor
            );
          }
      });
      this.addWhenDrawingListener(null, function (b, d, e, f) {
        a.wrapper.enabled &&
          ((a._TempList = []),
          a._TempList.push(a.actor.getX()),
          a._TempList.push(a.actor.getY()),
          a._MovementTile.push(a._TempList),
          200 < a._MovementTile.length && Q.remove(a._MovementTile, 0));
      });
      this.addWhenUpdatedListener(null, function (b, d) {
        a.wrapper.enabled &&
          (a._ArrowCreated &&
            (a._ArrowActor.setX(a.actor.getX() - 12),
            a._ArrowActor.setY(a.actor.getY())),
          a._ArrowCreated && m.isMouseReleased() && a._customEvent_ShotMonkey(),
          a._Morto ||
            ((b = a._auxX),
            (d = (a.actor.getXCenter() - a._auxX) / a._Delay),
            (a._auxX = b + d),
            (b = a._auxY),
            (d = (a.actor.getYCenter() - a._auxY) / a._Delay),
            (a._auxY = b + d),
            a._aTerra
              ? (m.isKeyPressed("action1") || m.isKeyPressed("w")) &&
                a._customEvent_Jump()
              : (m.isKeyPressed("action1") || m.isKeyPressed("d"),
                (m.isKeyDown("action1") || m.isKeyDown("w") || a._MovingUp) &&
                  20 >= a._TempoSaltoPremuto &&
                  ((a._TempoSaltoPremuto += 1),
                  0 == a._TempoSaltoPremuto % 1 &&
                    (0 < a._ForzaSalto && (a._ForzaSalto -= a._ySpeed),
                    a.actor.setYVelocity(
                      a.actor.getYVelocity() - a._ForzaSalto
                    )))),
            a._customEvent_Movimento(),
            (a._IndexSpostabile += 1)),
          a._BlockPgMidAir &&
            (a.actor.setXVelocity(0), a.actor.setYVelocity(0)),
          a._aTerra && ((a._Bumping = !1), (a._BlockPgMidAir = !1)),
          a._customEvent_checkVelY(),
          a.actor.getY() > m.getSceneHeight() - 32 && a._customEvent_Die(),
          a._BlockXY && (a.actor.setX(a._BlockX), a.actor.setY(a._BlockY)),
          0 > a.actor.getY() + 16 &&
            (a.actor.setYVelocity(0),
            a.actor.setY(-16),
            a.actor.setYVelocity(0)));
      });
    },
    forwardMessage: function (a) {},
    __class__: es,
  });
  var fs = function (a, b) {
    m.call(this);
    a = this.nameMap;
    null != t.Coolmath
      ? a.setReserved("Coolmath", "_Coolmath")
      : (a.h.Coolmath = "_Coolmath");
    a = this.nameMap;
    null != t.Havana24
      ? a.setReserved("Havana24", "_Havana24")
      : (a.h.Havana24 = "_Havana24");
  };
  p["scripts.Design_50_50_IntroBehavior"] = fs;
  fs.__name__ = ["scripts", "Design_50_50_IntroBehavior"];
  fs.__super__ = wb;
  fs.prototype = x(wb.prototype, {
    _Coolmath: null,
    _Havana24: null,
    _customEvent_SOUNDMASTER: function () {
      for (var a = 0; 20 > a; ) {
        var b = a++;
        m.setVolumeForChannel(0.5, b + 1);
      }
      m.setVolumeForChannel(1, 2);
    },
    init: function () {
      var a = this;
      this._customEvent_SOUNDMASTER();
      m.createRecycledActor(m.getActorType(141), 0, 0, 0);
      this._Coolmath = m.getLastCreatedActor();
      m.runLater(
        3e3,
        function (b) {
          a._Coolmath.fadeTo(0, 0.5, xa.linear);
          m.runLater(
            500,
            function (b) {
              m.recycleActor(a._Coolmath);
              r.engine.getGameAttribute("sfx") && m.playSound(m.getSound(87));
              m.createRecycledActor(m.getActorType(85), 0, 0, 0);
              a._Havana24 = m.getLastCreatedActor();
              a._Havana24.fadeTo(0, 0, xa.linear);
              a._Havana24.fadeTo(1, 0.5, xa.linear);
              Wd._customBlock_CenterScreenX(a._Havana24, 0);
              Wd._customBlock_CenterScreenY(a._Havana24, 0);
              a._Havana24.setAngle(-0.08726646259971389);
              a._Havana24.spinTo(0, 2, xa.quadInOut);
              m.loadGame("mySave", function (a) {
                a &&
                  (r.engine.gameAttributes.set("JS", !1),
                  m.shoutToScene("_customEvent_init"),
                  m.runLater(
                    3e3,
                    function (a) {
                      m.switchScene(
                        cb.get().scenes.h[7].getID(),
                        m.createFadeOut(0.25, 0),
                        m.createFadeIn(0.25, 0)
                      );
                    },
                    null
                  ));
              });
            },
            null
          );
        },
        null
      );
    },
    forwardMessage: function (a) {},
    __class__: fs,
  });
  var gs = function (a, b) {
    m.call(this);
    a = this.nameMap;
    null != t.Click ? a.setReserved("Click", "_Click") : (a.h.Click = "_Click");
    this._Click = !1;
    a = this.nameMap;
    null != t.LevelSelected
      ? a.setReserved("LevelSelected", "_LevelSelected")
      : (a.h.LevelSelected = "_LevelSelected");
    this._LevelSelected = 0;
  };
  p["scripts.Design_57_57_EndingBehavior"] = gs;
  gs.__name__ = ["scripts", "Design_57_57_EndingBehavior"];
  gs.__super__ = wb;
  gs.prototype = x(wb.prototype, {
    _Click: null,
    _LevelSelected: null,
    _customEvent_GoToLevel: function () {
      m.setValueForScene(
        "CoolmathBehavior",
        "_LEVEL",
        "" + this._LevelSelected
      );
      m.sayToScene("CoolmathBehavior", "_customEvent_startlevel");
      var a = cb.get().scenes,
        b = m.getIDForScene("Level" + this._LevelSelected);
      m.switchScene(
        a.h[b].getID(),
        m.createFadeOut(0.25, 0),
        m.createFadeIn(0.25, 0)
      );
    },
    _customEvent_SOUNDMASTER: function () {
      for (var a = 0; 20 > a; ) {
        var b = a++;
        m.setVolumeForChannel(0.5, b + 1);
      }
      m.setVolumeForChannel(1, 2);
    },
    init: function () {
      var a = this;
      if ("Title" == m.getCurrentSceneName()) {
        this._customEvent_SOUNDMASTER();
        for (var b = 0; 10 > b; ) {
          var c = b++;
          m.createRecycledActor(
            m.getActorType(125),
            16 + 64 * c,
            m.getScreenHeight() - 88,
            0
          );
          m.getLastCreatedActor().say(
            "ButtonBehavior",
            "_customBlock_ReturnTextButton",
            ["" + (c + 1), "_LevelSelected", "EndingBehavior"]
          );
          m.getLastCreatedActor().say(
            "ButtonBehavior",
            "_customBlock_ButtonID",
            [c + 1]
          );
          c + 1 <= r.engine.getGameAttribute("curlvl")
            ? (m
                .getLastCreatedActor()
                .say("ButtonBehavior", "_customBlock_DrawTextButton", [
                  "" + (c + 1),
                  m.getFont(128),
                ]),
              m
                .getLastCreatedActor()
                .say("ButtonBehavior", "_customBlock_UpdateMainAnimation", [
                  "completed",
                ]),
              m
                .getLastCreatedActor()
                .setValue("ButtonBehavior", "_TRIGGERAFTERPRESS", "GoToLevel"))
            : r.engine.getGameAttribute("curlvl") + 1 == c + 1
            ? (m
                .getLastCreatedActor()
                .say("ButtonBehavior", "_customBlock_DrawTextButton", [
                  "" + (c + 1),
                  m.getFont(127),
                ]),
              m
                .getLastCreatedActor()
                .say("ButtonBehavior", "_customBlock_UpdateMainAnimation", [
                  "unlocked",
                ]),
              m
                .getLastCreatedActor()
                .setValue("ButtonBehavior", "_TRIGGERAFTERPRESS", "GoToLevel"))
            : (m
                .getLastCreatedActor()
                .say("ButtonBehavior", "_customBlock_DrawTextButton", [
                  "" + (c + 1),
                  m.getFont(127),
                ]),
              m
                .getLastCreatedActor()
                .say("ButtonBehavior", "_customBlock_UpdateMainAnimation", [
                  "locked",
                ]),
              m
                .getLastCreatedActor()
                .setValue("ButtonBehavior", "_TRIGGERAFTERPRESS", "GoToError"));
          Wd._customBlock_CenterScreenX(
            m.getLastCreatedActor(),
            24 + (-240 + 48 * c)
          );
          m.getLastCreatedActor().say(
            "ButtonBehavior",
            "_customBlock_StartButton"
          );
        }
        for (b = 0; 5 > b; )
          (c = b++),
            m.createRecycledActor(
              m.getActorType(125),
              16 + 64 * c,
              m.getScreenHeight() - 48,
              0
            ),
            m
              .getLastCreatedActor()
              .say("ButtonBehavior", "_customBlock_ReturnTextButton", [
                "" + (10 + (c + 1)),
                "_LevelSelected",
                "EndingBehavior",
              ]),
            m
              .getLastCreatedActor()
              .say("ButtonBehavior", "_customBlock_ButtonID", [10 + (c + 1)]),
            10 + (c + 1) <= r.engine.getGameAttribute("curlvl")
              ? (m
                  .getLastCreatedActor()
                  .say("ButtonBehavior", "_customBlock_DrawTextButton", [
                    "" + (10 + (c + 1)),
                    m.getFont(128),
                  ]),
                m
                  .getLastCreatedActor()
                  .say("ButtonBehavior", "_customBlock_UpdateMainAnimation", [
                    "completed",
                  ]),
                m
                  .getLastCreatedActor()
                  .setValue(
                    "ButtonBehavior",
                    "_TRIGGERAFTERPRESS",
                    "GoToLevel"
                  ))
              : r.engine.getGameAttribute("curlvl") + 1 == 10 + (c + 1)
              ? (m
                  .getLastCreatedActor()
                  .say("ButtonBehavior", "_customBlock_DrawTextButton", [
                    "" + (10 + (c + 1)),
                    m.getFont(127),
                  ]),
                m
                  .getLastCreatedActor()
                  .say("ButtonBehavior", "_customBlock_UpdateMainAnimation", [
                    "unlocked",
                  ]),
                m
                  .getLastCreatedActor()
                  .setValue(
                    "ButtonBehavior",
                    "_TRIGGERAFTERPRESS",
                    "GoToLevel"
                  ))
              : (m
                  .getLastCreatedActor()
                  .say("ButtonBehavior", "_customBlock_DrawTextButton", [
                    "" + (10 + (c + 1)),
                    m.getFont(127),
                  ]),
                m
                  .getLastCreatedActor()
                  .say("ButtonBehavior", "_customBlock_UpdateMainAnimation", [
                    "locked",
                  ]),
                m
                  .getLastCreatedActor()
                  .setValue(
                    "ButtonBehavior",
                    "_TRIGGERAFTERPRESS",
                    "GoToError"
                  )),
            Wd._customBlock_CenterScreenX(
              m.getLastCreatedActor(),
              24 + (-120 + 48 * c)
            ),
            m
              .getLastCreatedActor()
              .say("ButtonBehavior", "_customBlock_StartButton");
        r.engine.getGameAttribute("sfx") &&
          m.loopSoundOnChannel(m.getSound(64), 1);
        m.runLater(
          1e3,
          function (b) {
            r.engine.getGameAttribute("sfx");
            m.runLater(
              1250,
              function (b) {
                a._Click = !0;
              },
              null
            );
          },
          null
        );
      } else
        (this._Click = !1),
          r.engine.getGameAttribute("sfx") &&
            m.loopSoundOnChannel(m.getSound(64), 1),
          m.runLater(
            2e3,
            function (a) {
              r.engine.getGameAttribute("sfx");
            },
            null
          ),
          m.runLater(
            2e3,
            function (b) {
              a._Click = !0;
            },
            null
          );
      this.addKeyStateListener("Reset", function (b, c, f) {
        a.wrapper.enabled &&
          b &&
          "End" == m.getCurrentSceneName() &&
          m.switchScene(
            cb.get().scenes.h[7].getID(),
            m.createFadeOut(0.25, 0),
            m.createFadeIn(0.25, 0)
          );
      });
      this.addWhenUpdatedListener(null, function (b, c) {
        a.wrapper.enabled &&
          ("Title" == m.getCurrentSceneName()
            ? m.isMousePressed() && a._Click && m.isTransitioning()
            : a._Click &&
              m.isMousePressed() &&
              (m.isTransitioning() ||
                m.switchScene(
                  cb.get().scenes.h[7].getID(),
                  m.createFadeOut(0.25, 0),
                  m.createFadeIn(0.25, 0)
                )));
      });
    },
    forwardMessage: function (a) {},
    __class__: gs,
  });
  var hs = function (a, b) {
    m.call(this);
    a = this.nameMap;
    null != t.PG ? a.setReserved("PG", "_PG") : (a.h.PG = "_PG");
    a = this.nameMap;
    null != t.IdBaby
      ? a.setReserved("IdBaby", "_IdBaby")
      : (a.h.IdBaby = "_IdBaby");
    this._IdBaby = 0;
    a = this.nameMap;
    null != t.TypeBaby
      ? a.setReserved("TypeBaby", "_TypeBaby")
      : (a.h.TypeBaby = "_TypeBaby");
    this._TypeBaby = 0;
    a = this.nameMap;
    null != t.InitialBaby
      ? a.setReserved("InitialBaby", "_InitialBaby")
      : (a.h.InitialBaby = "_InitialBaby");
    this._InitialBaby = 0;
    a = this.nameMap;
    null != t.DeadBodies
      ? a.setReserved("DeadBodies", "_DeadBodies")
      : (a.h.DeadBodies = "_DeadBodies");
    this._DeadBodies = 0;
    a = this.nameMap;
    null != t.OffsetXTombstone
      ? a.setReserved("OffsetXTombstone", "_OffsetXTombstone")
      : (a.h.OffsetXTombstone = "_OffsetXTombstone");
    this._OffsetXTombstone = 0;
    a = this.nameMap;
    null != t.StartXTombstone
      ? a.setReserved("StartXTombstone", "_StartXTombstone")
      : (a.h.StartXTombstone = "_StartXTombstone");
    this._StartXTombstone = 0;
    a = this.nameMap;
    null != t.SacrificiedActor
      ? a.setReserved("SacrificiedActor", "_SacrificiedActor")
      : (a.h.SacrificiedActor = "_SacrificiedActor");
    a = this.nameMap;
    null != t.LastTomb
      ? a.setReserved("LastTomb", "_LastTomb")
      : (a.h.LastTomb = "_LastTomb");
    a = this.nameMap;
    null != t.NameList
      ? a.setReserved("NameList", "_NameList")
      : (a.h.NameList = "_NameList");
    a = this.nameMap;
    null != t.NameMonkey
      ? a.setReserved("NameMonkey", "_NameMonkey")
      : (a.h.NameMonkey = "_NameMonkey");
    this._NameMonkey = "";
    a = this.nameMap;
    null != t.SelectedName
      ? a.setReserved("SelectedName", "_SelectedName")
      : (a.h.SelectedName = "_SelectedName");
    this._SelectedName = 0;
    a = this.nameMap;
    null != t.PopupImage
      ? a.setReserved("PopupImage", "_PopupImage")
      : (a.h.PopupImage = "_PopupImage");
    a = this.nameMap;
    null != t.PopupImageInstance
      ? a.setReserved("PopupImageInstance", "_PopupImageInstance")
      : (a.h.PopupImageInstance = "_PopupImageInstance");
    a = this.nameMap;
    null != t.OffsetMaxTombstoneX
      ? a.setReserved("OffsetMaxTombstoneX", "_OffsetMaxTombstoneX")
      : (a.h.OffsetMaxTombstoneX = "_OffsetMaxTombstoneX");
    this._OffsetMaxTombstoneX = 0;
    a = this.nameMap;
    null != t.MonkeySoundSelected
      ? a.setReserved("MonkeySoundSelected", "_MonkeySoundSelected")
      : (a.h.MonkeySoundSelected = "_MonkeySoundSelected");
    this._MonkeySoundSelected = 0;
    a = this.nameMap;
    null != t.TempMonkeySoundSelected
      ? a.setReserved("TempMonkeySoundSelected", "_TempMonkeySoundSelected")
      : (a.h.TempMonkeySoundSelected = "_TempMonkeySoundSelected");
    this._TempMonkeySoundSelected = 0;
    a = this.nameMap;
    null != t.BandaUpInstance
      ? a.setReserved("BandaUpInstance", "_BandaUpInstance")
      : (a.h.BandaUpInstance = "_BandaUpInstance");
    a = this.nameMap;
    null != t.BandaDownInstance
      ? a.setReserved("BandaDownInstance", "_BandaDownInstance")
      : (a.h.BandaDownInstance = "_BandaDownInstance");
    a = this.nameMap;
    null != t.BandaImage
      ? a.setReserved("BandaImage", "_BandaImage")
      : (a.h.BandaImage = "_BandaImage");
    a = this.nameMap;
    null != t.Banda2Image
      ? a.setReserved("Banda2Image", "_Banda2Image")
      : (a.h.Banda2Image = "_Banda2Image");
    a = this.nameMap;
    null != t.ClickContinue
      ? a.setReserved("ClickContinue", "_ClickContinue")
      : (a.h.ClickContinue = "_ClickContinue");
    this._ClickContinue = !1;
    a = this.nameMap;
    null != t.LEVEL ? a.setReserved("LEVEL", "_LEVEL") : (a.h.LEVEL = "_LEVEL");
    this._LEVEL = 0;
    a = this.nameMap;
    null != t.xStart
      ? a.setReserved("xStart", "_xStart")
      : (a.h.xStart = "_xStart");
    this._xStart = 0;
    a = this.nameMap;
    null != t.yStart
      ? a.setReserved("yStart", "_yStart")
      : (a.h.yStart = "_yStart");
    this._yStart = 0;
    a = this.nameMap;
    null != t.MONKEYS
      ? a.setReserved("MONKEYS", "_MONKEYS")
      : (a.h.MONKEYS = "_MONKEYS");
    this._MONKEYS = 0;
    a = this.nameMap;
    null != t.MaxLevels
      ? a.setReserved("MaxLevels", "_MaxLevels")
      : (a.h.MaxLevels = "_MaxLevels");
    this._MaxLevels = 0;
  };
  p["scripts.Design_5_5_SceneBehavior"] = hs;
  hs.__name__ = ["scripts", "Design_5_5_SceneBehavior"];
  hs.__super__ = wb;
  hs.prototype = x(wb.prototype, {
    _PG: null,
    _IdBaby: null,
    _TypeBaby: null,
    _InitialBaby: null,
    _DeadBodies: null,
    _OffsetXTombstone: null,
    _StartXTombstone: null,
    _SacrificiedActor: null,
    _LastTomb: null,
    _NameList: null,
    _NameMonkey: null,
    _SelectedName: null,
    _PopupImage: null,
    _PopupImageInstance: null,
    _OffsetMaxTombstoneX: null,
    _MonkeySoundSelected: null,
    _TempMonkeySoundSelected: null,
    _BandaUpInstance: null,
    _BandaDownInstance: null,
    _BandaImage: null,
    _Banda2Image: null,
    _ClickContinue: null,
    _LEVEL: null,
    _xStart: null,
    _yStart: null,
    _MONKEYS: null,
    _MaxLevels: null,
    _customEvent_BandeNere: function () {
      this._BandaImage = m.newImage(m.getScreenWidth(), 32);
      this._Banda2Image = m.newImage(m.getScreenWidth(), 32);
      m.fillImage(this._BandaImage, 0);
      m.drawTextOnImage(
        this._BandaImage,
        "LEVEL " + this._LEVEL,
        10,
        5,
        m.getFont(127)
      );
      m.fillImage(this._Banda2Image, 0);
      this._BandaUpInstance = new Rg(new ic(this._BandaImage));
      this._BandaDownInstance = new Rg(new ic(this._Banda2Image));
      m.attachImageToHUD(this._BandaUpInstance, 0, 0);
      m.attachImageToHUD(this._BandaDownInstance, 0, m.getScreenHeight() - 32);
    },
    _customEvent_AddFollowClassic: function () {
      var a = r.engine,
        b = r.engine.getGameAttribute("nbby") + 1;
      a.gameAttributes.set("nbby", b);
      this._IdBaby = r.engine.getGameAttribute("nbby");
      this._TypeBaby = 1;
      this._customEvent_AddMonkeyClassic();
    },
    _customEvent_AddFollowArrow: function () {
      var a = r.engine,
        b = r.engine.getGameAttribute("nbby") + 1;
      a.gameAttributes.set("nbby", b);
      this._IdBaby = r.engine.getGameAttribute("nbby");
      this._TypeBaby = 2;
      this._customEvent_AddMonkeyClassic();
    },
    _customEvent_JustPickedUp: function () {
      this._PG.shout("_customEvent_JustPickedUp");
    },
    _customEvent_TurnSelected: function () {
      this._PG.shout("_customEvent_TurnNormal");
    },
    _customEvent_TurnNormal: function () {
      this._PG.shout("_customEvent_TurnNormal");
    },
    _customEvent_AddMonkeyClassic: function () {
      1 == this._TypeBaby
        ? m.createRecycledActor(
            m.getActorType(1),
            this._PG.getX() - 16 * (this._IdBaby - 1 + 1),
            this._PG.getY() + 36,
            2
          )
        : 2 == this._TypeBaby &&
          m.createRecycledActor(
            m.getActorType(21),
            this._PG.getX() - 16 * (this._IdBaby - 1 + 1),
            this._PG.getY() + 36,
            2
          );
      m.getLastCreatedActor().setValue("BabyBehavior", "_IDBaby", this._IdBaby);
      m.getLastCreatedActor().setValue(
        "BabyBehavior",
        "_TypeBaby",
        this._TypeBaby
      );
    },
    _customEvent_SOUNDMASTER: function () {
      for (var a = 0; 20 > a; ) {
        var b = a++;
        m.setVolumeForChannel(0.5, b + 1);
      }
      m.setVolumeForChannel(1, 2);
    },
    _customEvent_PlayShot: function () {
      r.engine.getGameAttribute("sfx") &&
        m.playSoundOnChannel(m.getSound(36), 3);
    },
    _customEvent_PlayMonkey: function () {
      if (r.engine.getGameAttribute("sfx")) {
        this._TempMonkeySoundSelected = this._MonkeySoundSelected;
        for (
          this._MonkeySoundSelected = m.randomInt(1, 7);
          this._TempMonkeySoundSelected == this._MonkeySoundSelected;

        )
          this._MonkeySoundSelected = m.randomInt(1, 7);
        m.playSoundOnChannel(
          m.getSoundByName("Monkey" + this._MonkeySoundSelected),
          m.randomInt(4, 10)
        );
      }
    },
    _customEvent_PlayMonkeyDie: function () {
      r.engine.getGameAttribute("sfx") &&
        m.playSoundOnChannel(m.getSoundByName("Monkey4"), m.randomInt(4, 10));
    },
    _customEvent_PlayBump: function () {
      r.engine.getGameAttribute("sfx") &&
        m.playSoundOnChannel(m.getSoundByName("Bump" + m.randomInt(1, 2)), 11);
    },
    _customEvent_PlayBumpBanana: function () {
      r.engine.getGameAttribute("sfx") &&
        m.playSoundOnChannel(m.getSoundByName("Bump" + m.randomInt(1, 2)), 11);
    },
    _customEvent_PlayDeadMonkey: function () {
      r.engine.getGameAttribute("sfx") &&
        m.playSoundOnChannel(m.getSound(37), 12);
    },
    _customEvent_PlayArrow: function () {
      r.engine.getGameAttribute("sfx") &&
        m.playSoundOnChannel(m.getSound(37), 12);
    },
    _customEvent_PlayGetMonkey: function () {
      r.engine.getGameAttribute("sfx") &&
        m.playSoundOnChannel(m.getSound(29), 14);
    },
    _customEvent_PlayJump: function () {
      r.engine.getGameAttribute("sfx") &&
        m.playSoundOnChannel(m.getSound(40), 13);
    },
    _customEvent_PlayBanana: function () {
      r.engine.getGameAttribute("sfx") &&
        m.playSoundOnChannel(m.getSound(41), 15);
    },
    _customEvent_PlayMonkeyGoal: function () {
      r.engine.getGameAttribute("sfx") &&
        (m.playSoundOnChannel(m.getSound(29), 16),
        m.runLater(
          200,
          function (a) {
            m.playSoundOnChannel(m.getSound(30), 16);
            m.runLater(
              200,
              function (a) {
                m.playSoundOnChannel(m.getSound(29), 16);
                m.runLater(
                  200,
                  function (a) {
                    m.playSoundOnChannel(m.getSound(44), 17);
                  },
                  null
                );
              },
              null
            );
          },
          null
        ));
    },
    _customEvent_PlayTombstone: function () {
      r.engine.getGameAttribute("sfx") &&
        m.playSoundOnChannel(m.getSound(58), 18);
    },
    _customEvent_PlayAwww: function () {
      r.engine.getGameAttribute("sfx") &&
        m.playSoundOnChannel(m.getSound(45), 19);
    },
    _customEvent_PlayLever: function () {
      r.engine.getGameAttribute("sfx") &&
        m.playSoundOnChannel(m.getSound(135), 19);
    },
    _customEvent_PlayWall: function () {
      r.engine.getGameAttribute("sfx") &&
        m.playSoundOnChannel(m.getSound(136), 20);
    },
    _customEvent_PlayTheme: function () {
      r.engine.getGameAttribute("msc") &&
        m.loopSoundOnChannel(m.getSound(63), 1);
    },
    _customEvent_PlayTheme2: function () {
      r.engine.getGameAttribute("msc") &&
        m.loopSoundOnChannel(m.getSound(64), 1);
    },
    _customEvent_PlayTutorial: function () {
      r.engine.getGameAttribute("sfx");
    },
    _customEvent_PlayTutorial2: function () {
      r.engine.getGameAttribute("sfx");
    },
    _customEvent_EndLevel: function () {
      var a = this;
      this._LEVEL > r.engine.getGameAttribute("curlvl") &&
        r.engine.gameAttributes.set("curlvl", this._LEVEL);
      m.saveGame("mySave", function (b) {
        if (b) {
          m.addTileLayer("HUD1", m.engine.getNumberOfLayers());
          m.setScrollFactorForLayer(m.engine.getLayerByName("HUD1"), 0, 0);
          b = m.getScreenWidth();
          var c = m.getScreenHeight();
          a._PopupImage = m.newImage(b, c);
          m.fillImage(a._PopupImage, 16777215);
          a._PopupImageInstance = new Rg(new ic(a._PopupImage));
          a._PopupImageInstance.set_alpha(0);
          m.attachImageToLayer(
            a._PopupImageInstance,
            m.engine.getLayerByName("HUD1"),
            0,
            0,
            1
          );
          m.fadeImageTo(a._PopupImageInstance, 0.5, 0.5, xa.quadInOut);
          a._customEvent_BandeNere();
          b = 0;
          for (c = u.__cast(m.getActorGroup(10), qi).list; b < c.length; ) {
            var d = c[b];
            ++b;
            null == d || d.dead || d.recycled || d.fadeTo(0, 0.5, xa.quadInOut);
          }
          m.runLater(
            500,
            function (b) {
              m.addTileLayer("HUD2", m.engine.getNumberOfLayers());
              m.setScrollFactorForLayer(m.engine.getLayerByName("HUD2"), 0, 0);
              m.createRecycledActor(m.getActorType(56), 0, -90, 0);
              a._SacrificiedActor = m.getLastCreatedActor();
              a._SacrificiedActor.anchorToScreen();
              a._SacrificiedActor.setX(
                Wd._customBlock_GetXCenter(a._SacrificiedActor, 0)
              );
              a._SacrificiedActor.moveTo(
                Wd._customBlock_GetXCenter(a._SacrificiedActor, 0),
                Wd._customBlock_GetYCenter(a._SacrificiedActor, -10),
                0.5,
                xa.quadIn
              );
              m.runLater(
                500,
                function (b) {
                  m.shoutToScene("_customEvent_PlayTombstone");
                  m.startShakingScreen(0.02, 0.1);
                  a._SacrificiedActor.moveTo(
                    Wd._customBlock_GetXCenter(a._SacrificiedActor, 0),
                    Wd._customBlock_GetYCenter(a._SacrificiedActor, -35),
                    0.25,
                    xa.quadOut
                  );
                  m.runLater(
                    250,
                    function (b) {
                      a._SacrificiedActor.moveTo(
                        Wd._customBlock_GetXCenter(a._SacrificiedActor, 0),
                        Wd._customBlock_GetYCenter(a._SacrificiedActor, -10),
                        0.25,
                        xa.quadIn
                      );
                      m.runLater(
                        250,
                        function (b) {
                          m.shoutToScene("_customEvent_PlayTombstone");
                          m.startShakingScreen(0.01, 0.1);
                          m.runLater(
                            250,
                            function (b) {
                              a._OffsetMaxTombstoneX =
                                6 >= a._DeadBodies
                                  ? 73
                                  : 8 >= a._DeadBodies
                                  ? 65
                                  : 10 >= a._DeadBodies
                                  ? 57
                                  : 49;
                              m.runLater(
                                200,
                                function (b) {
                                  a._ClickContinue = !0;
                                  m.createRecycledActor(
                                    m.getActorType(59),
                                    0,
                                    0,
                                    0
                                  );
                                  m.getLastCreatedActor().anchorToScreen();
                                  Wd._customBlock_CenterScreenX(
                                    m.getLastCreatedActor(),
                                    0
                                  );
                                  Wd._customBlock_CenterScreenY(
                                    m.getLastCreatedActor(),
                                    55
                                  );
                                  m.getLastCreatedActor().growTo(
                                    0,
                                    0,
                                    0,
                                    xa.linear
                                  );
                                  m.getLastCreatedActor().growTo(
                                    1,
                                    1,
                                    0.5,
                                    xa.elasticOut
                                  );
                                },
                                null
                              );
                            },
                            null
                          );
                        },
                        null
                      );
                    },
                    null
                  );
                },
                null
              );
            },
            null
          );
        }
      });
    },
    _customEvent_AddDead: function () {
      this._DeadBodies += 1;
    },
    _customEvent_CheckSecondSpeech: function () {
      var a = this;
      r.engine.getGameAttribute("speech2") ||
        (r.engine.gameAttributes.set("speech2", !0),
        m.runLater(
          500,
          function (b) {
            a._customEvent_PlayTutorial2();
          },
          null
        ));
    },
    _customEvent_NameMonkey: function () {
      this._SelectedName = m.randomFloatBetween(0, this._NameList.length - 1);
      this._NameMonkey = "" + P.string(this._NameList[this._SelectedName | 0]);
      this._NameList.splice(this._SelectedName | 0, 1);
    },
    init: function () {
      var a = this;
      this._customEvent_PlayTheme();
      this._customEvent_BandeNere();
      this._MaxLevels = 15;
      this._NameList = [];
      this._NameList.push("ABU");
      this._NameList.push("DHABI");
      this._NameList.push("KING");
      this._NameList.push("KONG");
      this._NameList.push("RAFIKI");
      this._NameList.push("GEORGE");
      this._NameList.push("MARCEL");
      this._NameList.push("CLYDE");
      this._NameList.push("DONKEY");
      this._NameList.push("CHIMP");
      this._NameList.push("GRAPE");
      this._NameList.push("JACK");
      this._NameList.push("CHIM");
      this._InitialBaby = this._MONKEYS;
      r.engine.gameAttributes.set("nbby", this._InitialBaby);
      m.createRecycledActor(m.getActorType(3), this._xStart, this._yStart, 0);
      this._PG = m.getLastCreatedActor();
      this._customEvent_SOUNDMASTER();
      r.engine.getGameAttribute("speech") ||
        (r.engine.gameAttributes.set("speech", !0),
        m.runLater(
          1500,
          function (b) {
            a._customEvent_PlayTutorial();
          },
          null
        ));
      for (var b = 0, c = r.engine.getGameAttribute("nbby") | 0; b < c; )
        (this._IdBaby = b++ + 1),
          (this._TypeBaby = 1),
          this._customEvent_AddMonkeyClassic();
      this.addKeyStateListener("Reset", function (b, c, f) {
        a.wrapper.enabled &&
          b &&
          m.reloadCurrentScene(null, m.createCrossfadeTransition(0));
      });
      this.addKeyStateListener("ESC", function (b, c, f) {
        a.wrapper.enabled &&
          b &&
          (m.isTransitioning() ||
            m.switchScene(
              cb.get().scenes.h[7].getID(),
              m.createFadeOut(0.25, 0),
              m.createFadeIn(0.25, 0)
            ));
      });
      this.addWhenUpdatedListener(null, function (b, c) {
        a.wrapper.enabled &&
          a._ClickContinue &&
          m.isMousePressed() &&
          !m.isTransitioning() &&
          (r.engine.gameAttributes.set("speech", !1),
          (a._ClickContinue = !1),
          a._LEVEL + 1 > a._MaxLevels
            ? m.switchScene(
                cb.get().scenes.h[6].getID(),
                m.createFadeOut(0.5, 0),
                m.createFadeIn(0.5, 0)
              )
            : ((b = cb.get().scenes),
              (c = m.getIDForScene("Level" + (a._LEVEL + 1))),
              m.switchScene(
                b.h[c].getID(),
                m.createFadeOut(0.5, 0),
                m.createFadeIn(0.5, 0)
              )));
      });
    },
    forwardMessage: function (a) {},
    __class__: hs,
  });
  var is = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
    a = this.nameMap;
    null != t.TurnPx
      ? a.setReserved("TurnPx", "_TurnPx")
      : (a.h.TurnPx = "_TurnPx");
    this._TurnPx = 0;
    a = this.nameMap;
    null != t.FollowAfterFrame
      ? a.setReserved("FollowAfterFrame", "_FollowAfterFrame")
      : (a.h.FollowAfterFrame = "_FollowAfterFrame");
    this._FollowAfterFrame = 0;
    a = this.nameMap;
    null != t.DistanceFromActorX
      ? a.setReserved("DistanceFromActorX", "_DistanceFromActorX")
      : (a.h.DistanceFromActorX = "_DistanceFromActorX");
    this._DistanceFromActorX = 0;
  };
  p["scripts.Design_63_63_BabyTitleBehavior"] = is;
  is.__name__ = ["scripts", "Design_63_63_BabyTitleBehavior"];
  is.__super__ = F;
  is.prototype = x(F.prototype, {
    _TurnPx: null,
    _FollowAfterFrame: null,
    _DistanceFromActorX: null,
    _customEvent_turn: function () {
      var a = this;
      this.actor.spinTo(this._TurnPx, 0.5, xa.quadInOut);
      m.runLater(
        500,
        function (b) {
          a.actor.spinTo(-a._TurnPx, 0.5, xa.quadInOut);
          m.runLater(
            500,
            function (b) {
              a._customEvent_turn();
            },
            a.actor
          );
        },
        this.actor
      );
    },
    init: function () {
      var a = this;
      this.actor.setCurrentFrame(m.randomInt(0, this.actor.getNumFrames() - 1));
      this.actor.setAngle(0.01745329251994278 * m.randomInt(-20, 20));
      this._TurnPx = 20;
      m.runLater(
        1e3 * m.randomFloat(),
        function (b) {
          a._customEvent_turn();
        },
        this.actor
      );
      this._FollowAfterFrame = 10;
      this._DistanceFromActorX = 16;
    },
    forwardMessage: function (a) {},
    __class__: is,
  });
  var js = function (a, b) {
    m.call(this);
  };
  p["scripts.Design_64_64_TitleScreenBehavior"] = js;
  js.__name__ = ["scripts", "Design_64_64_TitleScreenBehavior"];
  js.__super__ = wb;
  js.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: js,
  });
  var ks = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
    a = this.nameMap;
    null != t.x ? a.setReserved("x", "x") : (a.h.x = "x");
    this.x = 0;
    a = this.nameMap;
    null != t.y ? a.setReserved("y", "y") : (a.h.y = "y");
    this.y = 0;
    a = this.nameMap;
    null != t.angle ? a.setReserved("angle", "angle") : (a.h.angle = "angle");
    this.angle = 0;
    a = this.nameMap;
    null != t["Initial Angle"]
      ? a.setReserved("Initial Angle", "initAngle")
      : (a.h["Initial Angle"] = "initAngle");
    this.initAngle = 90;
  };
  p["scripts.Design_6_6_FaceMouse"] = ks;
  ks.__name__ = ["scripts", "Design_6_6_FaceMouse"];
  ks.__super__ = F;
  ks.prototype = x(F.prototype, {
    x: null,
    y: null,
    angle: null,
    initAngle: null,
    init: function () {
      var a = this;
      this.addWhenUpdatedListener(null, function (b, c) {
        a.wrapper.enabled &&
          ((b = m.getMouseX()),
          (c = a.actor.getScreenX() + a.actor.getWidth() / 2),
          (a.x = b - c),
          (b = m.getMouseY()),
          (c = a.actor.getScreenY() + a.actor.getHeight() / 2),
          (a.y = b - c),
          (a.angle = 57.29577951308402 * Math.atan2(a.y, a.x)),
          a.actor.setAngle(0.01745329251994278 * (a.angle + a.initAngle)));
      });
    },
    forwardMessage: function (a) {},
    __class__: ks,
  });
  var ls = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
    a = this.nameMap;
    null != t.IconActor
      ? a.setReserved("IconActor", "_IconActor")
      : (a.h.IconActor = "_IconActor");
    a = this.nameMap;
    null != t.IconImage
      ? a.setReserved("IconImage", "_IconImage")
      : (a.h.IconImage = "_IconImage");
    a = this.nameMap;
    null != t.IconImageInstance
      ? a.setReserved("IconImageInstance", "_IconImageInstance")
      : (a.h.IconImageInstance = "_IconImageInstance");
    a = this.nameMap;
    null != t.ICON_LABEL
      ? a.setReserved("ICON_LABEL", "_ICONLABEL")
      : (a.h.ICON_LABEL = "_ICONLABEL");
    this._ICONLABEL = "";
    a = this.nameMap;
    null != t.TRIGGER_AFTER_PRESS
      ? a.setReserved("TRIGGER_AFTER_PRESS", "_TRIGGERAFTERPRESS")
      : (a.h.TRIGGER_AFTER_PRESS = "_TRIGGERAFTERPRESS");
    this._TRIGGERAFTERPRESS = "";
    a = this.nameMap;
    null != t.PRESSED
      ? a.setReserved("PRESSED", "_PRESSED")
      : (a.h.PRESSED = "_PRESSED");
    this._PRESSED = !1;
    a = this.nameMap;
    null != t.SOUND_EFFECT_BUTTON_PRESS
      ? a.setReserved("SOUND_EFFECT_BUTTON_PRESS", "_SOUNDEFFECTBUTTONPRESS")
      : (a.h.SOUND_EFFECT_BUTTON_PRESS = "_SOUNDEFFECTBUTTONPRESS");
    a = this.nameMap;
    null != t.ICON_ACTOR_TYPE
      ? a.setReserved("ICON_ACTOR_TYPE", "_ICONACTORTYPE")
      : (a.h.ICON_ACTOR_TYPE = "_ICONACTORTYPE");
    a = this.nameMap;
    null != t.OffsetX
      ? a.setReserved("OffsetX", "_OffsetX")
      : (a.h.OffsetX = "_OffsetX");
    this._OffsetX = 0;
    a = this.nameMap;
    null != t.OffsetY
      ? a.setReserved("OffsetY", "_OffsetY")
      : (a.h.OffsetY = "_OffsetY");
    this._OffsetY = 0;
    a = this.nameMap;
    null != t.LABEL ? a.setReserved("LABEL", "_LABEL") : (a.h.LABEL = "_LABEL");
    this._LABEL = "";
    a = this.nameMap;
    null != t.LabelImage
      ? a.setReserved("LabelImage", "_LabelImage")
      : (a.h.LabelImage = "_LabelImage");
    a = this.nameMap;
    null != t.LabelImageInstance
      ? a.setReserved("LabelImageInstance", "_LabelImageInstance")
      : (a.h.LabelImageInstance = "_LabelImageInstance");
    a = this.nameMap;
    null != t.LabelFont
      ? a.setReserved("LabelFont", "_LabelFont")
      : (a.h.LabelFont = "_LabelFont");
    a = this.nameMap;
    null != t.PressX
      ? a.setReserved("PressX", "_PressX")
      : (a.h.PressX = "_PressX");
    this._PressX = 0;
    a = this.nameMap;
    null != t.PressY
      ? a.setReserved("PressY", "_PressY")
      : (a.h.PressY = "_PressY");
    this._PressY = 0;
    a = this.nameMap;
    null != t.PixelSensitivity
      ? a.setReserved("PixelSensitivity", "_PixelSensitivity")
      : (a.h.PixelSensitivity = "_PixelSensitivity");
    this._PixelSensitivity = 0;
    a = this.nameMap;
    null != t.Pressable
      ? a.setReserved("Pressable", "_Pressable")
      : (a.h.Pressable = "_Pressable");
    this._Pressable = !1;
    a = this.nameMap;
    null != t.CHECK_BOUND
      ? a.setReserved("CHECK_BOUND", "_CHECKBOUND")
      : (a.h.CHECK_BOUND = "_CHECKBOUND");
    this._CHECKBOUND = !1;
    a = this.nameMap;
    null != t.BOUND_SCREEN_TOP_Y
      ? a.setReserved("BOUND_SCREEN_TOP_Y", "_BOUNDSCREENTOPY")
      : (a.h.BOUND_SCREEN_TOP_Y = "_BOUNDSCREENTOPY");
    this._BOUNDSCREENTOPY = 0;
    a = this.nameMap;
    null != t.BOUND_SCREEN_BOTTOM_Y
      ? a.setReserved("BOUND_SCREEN_BOTTOM_Y", "_BOUNDSCREENBOTTOMY")
      : (a.h.BOUND_SCREEN_BOTTOM_Y = "_BOUNDSCREENBOTTOMY");
    this._BOUNDSCREENBOTTOMY = 0;
    a = this.nameMap;
    null != t.OffsetIconX
      ? a.setReserved("OffsetIconX", "_OffsetIconX")
      : (a.h.OffsetIconX = "_OffsetIconX");
    this._OffsetIconX = 0;
    a = this.nameMap;
    null != t.OffsetIconY
      ? a.setReserved("OffsetIconY", "_OffsetIconY")
      : (a.h.OffsetIconY = "_OffsetIconY");
    this._OffsetIconY = 0;
    a = this.nameMap;
    null != t.StartX
      ? a.setReserved("StartX", "_StartX")
      : (a.h.StartX = "_StartX");
    this._StartX = 0;
    a = this.nameMap;
    null != t.StartY
      ? a.setReserved("StartY", "_StartY")
      : (a.h.StartY = "_StartY");
    this._StartY = 0;
    a = this.nameMap;
    null != t.INITIALIZED
      ? a.setReserved("INITIALIZED", "_INITIALIZED")
      : (a.h.INITIALIZED = "_INITIALIZED");
    this._INITIALIZED = !1;
    a = this.nameMap;
    null != t.MainAnimation
      ? a.setReserved("MainAnimation", "_MainAnimation")
      : (a.h.MainAnimation = "_MainAnimation");
    this._MainAnimation = "";
    a = this.nameMap;
    null != t.Iconized
      ? a.setReserved("Iconized", "_Iconized")
      : (a.h.Iconized = "_Iconized");
    this._Iconized = !1;
    a = this.nameMap;
    null != t.Labelized
      ? a.setReserved("Labelized", "_Labelized")
      : (a.h.Labelized = "_Labelized");
    this._Labelized = !1;
    a = this.nameMap;
    null != t.LabelCreated
      ? a.setReserved("LabelCreated", "_LabelCreated")
      : (a.h.LabelCreated = "_LabelCreated");
    this._LabelCreated = !1;
    a = this.nameMap;
    null != t.IconCreated
      ? a.setReserved("IconCreated", "_IconCreated")
      : (a.h.IconCreated = "_IconCreated");
    this._IconCreated = !1;
    a = this.nameMap;
    null != t.DisableAfterPress
      ? a.setReserved("DisableAfterPress", "_DisableAfterPress")
      : (a.h.DisableAfterPress = "_DisableAfterPress");
    this._DisableAfterPress = !1;
    a = this.nameMap;
    null != t.AlreadyIconized
      ? a.setReserved("AlreadyIconized", "_AlreadyIconized")
      : (a.h.AlreadyIconized = "_AlreadyIconized");
    this._AlreadyIconized = !1;
    a = this.nameMap;
    null != t.ButtonType
      ? a.setReserved("ButtonType", "_ButtonType")
      : (a.h.ButtonType = "_ButtonType");
    this._ButtonType = "";
    a = this.nameMap;
    null != t.ON_OFF_GAME_ATTRIBUTE
      ? a.setReserved("ON_OFF_GAME_ATTRIBUTE", "_ONOFFGAMEATTRIBUTE")
      : (a.h.ON_OFF_GAME_ATTRIBUTE = "_ONOFFGAMEATTRIBUTE");
    this._ONOFFGAMEATTRIBUTE = "";
    a = this.nameMap;
    null != t.Sound_Effects_Game_Attribute
      ? a.setReserved(
          "Sound_Effects_Game_Attribute",
          "_SoundEffectsGameAttribute"
        )
      : (a.h.Sound_Effects_Game_Attribute = "_SoundEffectsGameAttribute");
    this._SoundEffectsGameAttribute = "";
    a = this.nameMap;
    null != t.ReturnText
      ? a.setReserved("ReturnText", "_ReturnText")
      : (a.h.ReturnText = "_ReturnText");
    this._ReturnText = "";
    a = this.nameMap;
    null != t.ReturnTextSceneBehavior
      ? a.setReserved("ReturnTextSceneBehavior", "_ReturnTextSceneBehavior")
      : (a.h.ReturnTextSceneBehavior = "_ReturnTextSceneBehavior");
    this._ReturnTextSceneBehavior = "";
    a = this.nameMap;
    null != t.ReturnTextNameAttribute
      ? a.setReserved("ReturnTextNameAttribute", "_ReturnTextNameAttribute")
      : (a.h.ReturnTextNameAttribute = "_ReturnTextNameAttribute");
    this._ReturnTextNameAttribute = "";
    a = this.nameMap;
    null != t.WidthIcon
      ? a.setReserved("WidthIcon", "_WidthIcon")
      : (a.h.WidthIcon = "_WidthIcon");
    this._WidthIcon = 0;
    a = this.nameMap;
    null != t.HeightIcon
      ? a.setReserved("HeightIcon", "_HeightIcon")
      : (a.h.HeightIcon = "_HeightIcon");
    this._HeightIcon = 0;
    a = this.nameMap;
    null != t.ButtonID
      ? a.setReserved("ButtonID", "_ButtonID")
      : (a.h.ButtonID = "_ButtonID");
    this._ButtonID = 0;
    a = this.nameMap;
    null != t.ButtonGroupID
      ? a.setReserved("ButtonGroupID", "_ButtonGroupID")
      : (a.h.ButtonGroupID = "_ButtonGroupID");
    this._ButtonGroupID = 0;
    a = this.nameMap;
    null != t.GAMEATTRIBUTE_NOCLICK
      ? a.setReserved("GAMEATTRIBUTE_NOCLICK", "_GAMEATTRIBUTENOCLICK")
      : (a.h.GAMEATTRIBUTE_NOCLICK = "_GAMEATTRIBUTENOCLICK");
    this._GAMEATTRIBUTENOCLICK = "";
  };
  p["scripts.Design_72_72_ButtonBehavior"] = ls;
  ls.__name__ = ["scripts", "Design_72_72_ButtonBehavior"];
  ls.__super__ = F;
  ls.prototype = x(F.prototype, {
    _IconActor: null,
    _IconImage: null,
    _IconImageInstance: null,
    _ICONLABEL: null,
    _TRIGGERAFTERPRESS: null,
    _PRESSED: null,
    _SOUNDEFFECTBUTTONPRESS: null,
    _ICONACTORTYPE: null,
    _OffsetX: null,
    _OffsetY: null,
    _LABEL: null,
    _LabelImage: null,
    _LabelImageInstance: null,
    _LabelFont: null,
    _PressX: null,
    _PressY: null,
    _PixelSensitivity: null,
    _Pressable: null,
    _CHECKBOUND: null,
    _BOUNDSCREENTOPY: null,
    _BOUNDSCREENBOTTOMY: null,
    _OffsetIconX: null,
    _OffsetIconY: null,
    _StartX: null,
    _StartY: null,
    _INITIALIZED: null,
    _MainAnimation: null,
    _Iconized: null,
    _Labelized: null,
    _LabelCreated: null,
    _IconCreated: null,
    _DisableAfterPress: null,
    _AlreadyIconized: null,
    _ButtonType: null,
    _ONOFFGAMEATTRIBUTE: null,
    _SoundEffectsGameAttribute: null,
    _ReturnText: null,
    _ReturnTextSceneBehavior: null,
    _ReturnTextNameAttribute: null,
    _WidthIcon: null,
    _HeightIcon: null,
    _ButtonID: null,
    _ButtonGroupID: null,
    _GAMEATTRIBUTENOCLICK: null,
    _customBlock_ButtonID: function (a) {
      this.actor.setValue("ButtonBehavior", "_ButtonID", a);
    },
    _customBlock_ButtonGroupID: function (a) {
      this.actor.setValue("ButtonBehavior", "_ButtonGroupID", a);
    },
    _customEvent_CreateIcon: function () {
      this._Iconized &&
        (this._IconCreated &&
          ((this._IconCreated = !1),
          this.actor.isAlive() && m.removeImage(this._IconImageInstance)),
        this._AlreadyIconized
          ? (m.attachImageToActor(
              this._IconImageInstance,
              this.actor,
              (this.actor.getWidth() / 2 -
                this._WidthIcon / 2 +
                this._OffsetIconX) |
                0,
              (this.actor.getHeight() / 2 -
                this._HeightIcon / 2 +
                this._OffsetIconY) |
                0,
              1
            ),
            (this._IconCreated = !0))
          : (m.createRecycledActor(this._ICONACTORTYPE, 0, 0, 0),
            (this._IconActor = m.getLastCreatedActor()),
            this._IconActor.setAnimation(this._ICONLABEL),
            (this._IconImage = m.getImageForActor(this._IconActor)),
            (this._IconImageInstance = new Rg(new ic(this._IconImage))),
            (this._WidthIcon = this._IconActor.getWidth()),
            (this._HeightIcon = this._IconActor.getHeight()),
            m.attachImageToActor(
              this._IconImageInstance,
              this.actor,
              (this.actor.getWidth() / 2 -
                this._WidthIcon / 2 +
                this._OffsetIconX) |
                0,
              (this.actor.getHeight() / 2 -
                this._HeightIcon / 2 +
                this._OffsetIconY) |
                0,
              1
            ),
            m.recycleActor(this._IconActor),
            (this._AlreadyIconized = this._IconCreated = !0)),
        this._customEvent_CheckTypeButton());
    },
    _customEvent_CreateLabel: function () {
      this._Labelized &&
        (this._LabelCreated &&
          ((this._LabelCreated = !1), m.removeImage(this._LabelImageInstance)),
        (this._LabelImage = m.newImage(
          this.actor.getWidth() | 0,
          this.actor.getHeight() | 0
        )),
        m.drawTextOnImage(
          this._LabelImage,
          this._LABEL,
          (this.actor.getWidth() / 2 -
            this._LabelFont.font.getTextWidth(
              this._LABEL,
              this._LabelFont.letterSpacing
            ) /
              r.SCALE /
              2) |
            0,
          (this.actor.getHeight() / 2 -
            this._LabelFont.getHeight() / r.SCALE / 2) |
            0,
          this._LabelFont
        ),
        (this._LabelImageInstance = new Rg(new ic(this._LabelImage))),
        m.attachImageToActor(this._LabelImageInstance, this.actor, 0, 0, 1),
        (this._LabelCreated = !0));
    },
    _customBlock_ButtonBoundY: function (a, b) {
      var c = this.actor;
      c.setValue("ButtonBehavior", "_CHECKBOUND", !0);
      c.setValue("ButtonBehavior", "_BOUNDSCREENTOPY", a);
      c.setValue("ButtonBehavior", "_BOUNDSCREENBOTTOMY", b);
    },
    _customBlock_CreateIcon: function (a, b) {
      var c = this.actor;
      c.setValue("ButtonBehavior", "_ICONACTORTYPE", a);
      c.setValue("ButtonBehavior", "_ICONLABEL", b);
      c.setValue("ButtonBehavior", "_Iconized", !0);
    },
    _customBlock_DrawTextButton: function (a, b) {
      var c = this.actor;
      c.setValue("ButtonBehavior", "_LABEL", a);
      c.setValue("ButtonBehavior", "_LabelFont", b);
      c.setValue("ButtonBehavior", "_Labelized", !0);
    },
    _customBlock_OffsetIcon: function (a, b) {
      var c = this.actor;
      c.setValue("ButtonBehavior", "_OffsetIconX", a);
      c.setValue("ButtonBehavior", "_OffsetIconY", b);
    },
    _customEvent_Press: function () {
      var a = this;
      this._PRESSED ||
        (this._DisableAfterPress && (this._PRESSED = !0),
        this._customEvent_PressedTypeButton(),
        1 == m.getGameAttribute(this._SoundEffectsGameAttribute) &&
          m.playSound(this._SOUNDEFFECTBUTTONPRESS),
        0 < this._ReturnText.length &&
          0 < this._ReturnTextNameAttribute.length &&
          0 < this._ReturnTextSceneBehavior.length &&
          m.setValueForScene(
            this._ReturnTextSceneBehavior,
            this._ReturnTextNameAttribute,
            this._ReturnText
          ),
        0 < this._TRIGGERAFTERPRESS.length &&
          m.shoutToScene("_customEvent_" + this._TRIGGERAFTERPRESS),
        this.actor.isAlive() &&
          (this.actor.setAnimation("pressed"),
          this._customEvent_UpdateImages(),
          m.runLater(
            100,
            function (b) {
              a.actor.isAlive() &&
                (a.actor.setAnimation(a._MainAnimation),
                a._customEvent_UpdateImages());
            },
            this.actor
          )));
    },
    _customBlock_ReturnTextButton: function (a, b, c) {
      var d = this.actor;
      d.setValue("ButtonBehavior", "_ReturnText", a);
      d.setValue("ButtonBehavior", "_ReturnTextSceneBehavior", c);
      d.setValue(
        "ButtonBehavior",
        "_ReturnTextNameAttribute",
        "_" + ba.replace(b, "_", "")
      );
    },
    _customEvent_CheckTypeButton: function () {
      this._IconCreated &&
        "onoff" == this._ButtonType &&
        (1 == m.getGameAttribute(this._ONOFFGAMEATTRIBUTE)
          ? this._IconImageInstance.set_alpha(1)
          : this._IconImageInstance.set_alpha(0.3));
    },
    _customEvent_PressedTypeButton: function () {
      "onoff" == this._ButtonType &&
        (1 == m.getGameAttribute(this._ONOFFGAMEATTRIBUTE)
          ? m.setGameAttribute(this._ONOFFGAMEATTRIBUTE, !1)
          : m.setGameAttribute(this._ONOFFGAMEATTRIBUTE, !0));
    },
    _customBlock_DisableButton: function () {
      this.actor.setValue("ButtonBehavior", "_DisableAfterPress", !0);
    },
    _customEvent_UpdateImages: function () {
      this.actor.isAlive() &&
        (this._customEvent_CreateIcon(), this._customEvent_CreateLabel());
    },
    _customEvent_INITIALIZE_BUTTON: function () {
      this._StartX = this.actor.getX();
      this._StartY = this.actor.getY();
      this._MainAnimation = this.actor.getAnimation();
      this.actor.shout("_customEvent_CreateIcon");
      this.actor.shout("_customEvent_CreateLabel");
      this._customEvent_CheckTypeButton();
      this._INITIALIZED = !0;
    },
    _customBlock_UpdateMainAnimation: function (a) {
      var b = this.actor;
      b.setValue("ButtonBehavior", "_MainAnimation", a);
      b.setAnimation(a);
      b.say("ButtonBehavior", "_customEvent_UpdateImages");
    },
    _customBlock_StartButton: function () {
      this.actor.shout("_customEvent_INITIALIZE_BUTTON");
    },
    init: function () {
      var a = this;
      this._SOUNDEFFECTBUTTONPRESS = m.getSound(29);
      this._PixelSensitivity = 12;
      this._ButtonType = "classic";
      this._SoundEffectsGameAttribute = "sfx";
      this.addWhenUpdatedListener(null, function (b, c) {
        a.wrapper.enabled &&
          a._INITIALIZED &&
          (a.actor.isMousePressed() &&
            (!a._CHECKBOUND ||
              (a._CHECKBOUND &&
                m.getMouseY() >= a._BOUNDSCREENTOPY &&
                m.getMouseY() <= a._BOUNDSCREENBOTTOMY)) &&
            (0 == a._GAMEATTRIBUTENOCLICK.length ||
              (0 < a._GAMEATTRIBUTENOCLICK.length &&
                0 == m.getGameAttribute(a._GAMEATTRIBUTENOCLICK))) &&
            ((a._PressX = m.getMouseX()),
            (a._PressY = m.getMouseY()),
            (a._Pressable = !0)),
          a.actor.isMouseReleased() &&
            (0 == a._GAMEATTRIBUTENOCLICK.length ||
              (0 < a._GAMEATTRIBUTENOCLICK.length &&
                0 == m.getGameAttribute(a._GAMEATTRIBUTENOCLICK))) &&
            a._Pressable &&
            ((a._Pressable = !1), a._customEvent_Press()),
          a._Pressable &&
            (m.getMouseX() > a._PressX + a._PixelSensitivity &&
              (a._Pressable = !1),
            m.getMouseX() < a._PressX - a._PixelSensitivity &&
              (a._Pressable = !1),
            m.getMouseY() > a._PressY + a._PixelSensitivity &&
              (a._Pressable = !1),
            m.getMouseY() < a._PressY - a._PixelSensitivity &&
              (a._Pressable = !1)));
      });
    },
    forwardMessage: function (a) {},
    __class__: ls,
  });
  var ms = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
    a = this.nameMap;
    null != t.Opened
      ? a.setReserved("Opened", "_Opened")
      : (a.h.Opened = "_Opened");
    this._Opened = !1;
    a = this.nameMap;
    null != t.DOORNUMBER
      ? a.setReserved("DOORNUMBER", "_DOORNUMBER")
      : (a.h.DOORNUMBER = "_DOORNUMBER");
    this._DOORNUMBER = 0;
  };
  p["scripts.Design_75_75_LevelBehavior"] = ms;
  ms.__name__ = ["scripts", "Design_75_75_LevelBehavior"];
  ms.__super__ = F;
  ms.prototype = x(F.prototype, {
    _Opened: null,
    _DOORNUMBER: null,
    _customEvent_Open: function () {
      var a = this;
      this._Opened = !0;
      this.actor.setAnimation("goingon");
      for (
        var b = 0, c = m.getActorsOfType(m.getActorType(131));
        b < c.length;

      ) {
        var d = c[b];
        ++b;
        null == d ||
          d.dead ||
          d.recycled ||
          (this._DOORNUMBER == d.getValue("DoorBehavior", "_DOORNUMBER") &&
            d.shout("_customEvent_open"));
      }
      b = 0;
      for (c = m.getActorsOfType(m.getActorType(19)); b < c.length; )
        (d = c[b]),
          ++b,
          null == d ||
            d.dead ||
            d.recycled ||
            1 != d.getValue("BabyArrowPlatformBehavior", "_COLLIDEDWITH") ||
            (m.createRecycledActor(m.getActorType(137), d.getX(), d.getY(), 0),
            m.getLastCreatedActor().setAngle(1 * this.actor.getAngle()),
            m
              .getLastCreatedActor()
              .setAngularVelocity(0.01745329251994278 * m.randomInt(-200, 200)),
            m.recycleActor(d));
      m.shoutToScene("_customEvent_PlayLever");
      for (b = 0; 10 > b; )
        (c = b++),
          m.createRecycledActor(
            m.getActorType(42),
            this.actor.getXCenter() - 4,
            this.actor.getYCenter() - 4,
            0
          ),
          m.getLastCreatedActor().setVelocity(36 * c, 20);
      m.runLater(
        300,
        function (b) {
          a.actor.setAnimation("on");
        },
        this.actor
      );
    },
    init: function () {
      var a = this;
      this.addCollisionListener(this.actor, function (b, c) {
        a.wrapper.enabled && (a._Opened || a._customEvent_Open());
      });
    },
    forwardMessage: function (a) {},
    __class__: ms,
  });
  var ns = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
    a = this.nameMap;
    null != t.DOORNUMBER
      ? a.setReserved("DOORNUMBER", "_DOORNUMBER")
      : (a.h.DOORNUMBER = "_DOORNUMBER");
    this._DOORNUMBER = 0;
    a = this.nameMap;
    null != t.opened
      ? a.setReserved("opened", "_opened")
      : (a.h.opened = "_opened");
    this._opened = !1;
  };
  p["scripts.Design_77_77_DoorBehavior"] = ns;
  ns.__name__ = ["scripts", "Design_77_77_DoorBehavior"];
  ns.__super__ = F;
  ns.prototype = x(F.prototype, {
    _DOORNUMBER: null,
    _opened: null,
    _customEvent_open: function () {
      var a = this;
      this._opened ||
        ((this._opened = !0),
        m.runLater(
          1e3 * (0.1 + 0.05 * m.randomInt(0, 5)),
          function (b) {
            m.shoutToScene("_customEvent_PlayWall");
            m.createRecycledActor(
              m.getActorType(133),
              a.actor.getX(),
              a.actor.getY(),
              0
            );
            m.getLastCreatedActor().setAngularVelocity(
              0.01745329251994278 * m.randomInt(-20, 20)
            );
            m.getLastCreatedActor().setVelocity(
              m.randomInt(-135, 0),
              m.randomInt(5, 10)
            );
            m.recycleActor(a.actor);
          },
          this.actor
        ));
    },
    init: function () {
      this.actor.makeAlwaysSimulate();
    },
    forwardMessage: function (a) {},
    __class__: ns,
  });
  var Bo = function (a, b) {
    m.call(this);
    a = this.nameMap;
    null != t.LOG_JS
      ? a.setReserved("LOG_JS", "_LOGJS")
      : (a.h.LOG_JS = "_LOGJS");
    this._LOGJS = "";
    a = this.nameMap;
    null != t.LEVEL ? a.setReserved("LEVEL", "_LEVEL") : (a.h.LEVEL = "_LEVEL");
    this._LEVEL = "";
    a = this.nameMap;
    null != t["LEVEL 2"]
      ? a.setReserved("LEVEL 2", "_LEVEL2")
      : (a.h["LEVEL 2"] = "_LEVEL2");
    this._LEVEL2 = 0;
  };
  p["scripts.Design_86_86_CoolmathBehavior"] = Bo;
  Bo.__name__ = ["scripts", "Design_86_86_CoolmathBehavior"];
  Bo.unlockAllLevels = va.unlockAllLevels = function () {
    r.engine.gameAttributes.set("curlvl", 15);
    r.engine.getGameAttribute("sfx") && m.playSoundOnChannel(m.getSound(44), 7);
    m.saveGame("mySave", function (a) {
      a &&
        "Title" == m.getCurrentSceneName() &&
        m.reloadCurrentScene(
          m.createFadeOut(0.25, 16777215),
          m.createFadeIn(0.25, 16777215)
        );
    });
  };
  Bo.__super__ = wb;
  Bo.prototype = x(wb.prototype, {
    _LOGJS: null,
    _LEVEL: null,
    _LEVEL2: null,
    _customEvent_start: function () {
      parent.cmgGameEvent("start", "");
    },
    _customEvent_startlevel: function () {
      parent.cmgGameEvent("start", this._LEVEL);
    },
    _customEvent_replaylevel: function () {
      parent.cmgGameEvent("replay", this._LEVEL);
    },
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Bo,
  });
  var os = function (a, b, c) {
    F.call(this, b);
    a = this.nameMap;
    null != t.Actor ? a.setReserved("Actor", "actor") : (a.h.Actor = "actor");
  };
  p["scripts.Design_88_88_LogoBehavior"] = os;
  os.__name__ = ["scripts", "Design_88_88_LogoBehavior"];
  os.__super__ = F;
  os.prototype = x(F.prototype, {
    _customEvent_turn: function () {
      var a = this;
      this.actor.spinTo(3, 1, xa.quadInOut);
      m.runLater(
        1e3,
        function (b) {
          a.actor.spinTo(-3, 1, xa.quadInOut);
          m.runLater(
            1e3,
            function (b) {
              a._customEvent_turn();
            },
            a.actor
          );
        },
        this.actor
      );
    },
    init: function () {
      this._customEvent_turn();
    },
    forwardMessage: function (a) {},
    __class__: os,
  });
  var cu = function () {};
  p["scripts.MyScripts"] = cu;
  cu.__name__ = ["scripts", "MyScripts"];
  var ps = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_0"] = ps;
  ps.__name__ = ["scripts", "SceneEvents_0"];
  ps.__super__ = wb;
  ps.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: ps,
  });
  var qs = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_1"] = qs;
  qs.__name__ = ["scripts", "SceneEvents_1"];
  qs.__super__ = wb;
  qs.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: qs,
  });
  var rs = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_10"] = rs;
  rs.__name__ = ["scripts", "SceneEvents_10"];
  rs.__super__ = wb;
  rs.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: rs,
  });
  var ss = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_11"] = ss;
  ss.__name__ = ["scripts", "SceneEvents_11"];
  ss.__super__ = wb;
  ss.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: ss,
  });
  var ts = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_12"] = ts;
  ts.__name__ = ["scripts", "SceneEvents_12"];
  ts.__super__ = wb;
  ts.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: ts,
  });
  var us = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_13"] = us;
  us.__name__ = ["scripts", "SceneEvents_13"];
  us.__super__ = wb;
  us.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: us,
  });
  var vs = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_14"] = vs;
  vs.__name__ = ["scripts", "SceneEvents_14"];
  vs.__super__ = wb;
  vs.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: vs,
  });
  var ws = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_15"] = ws;
  ws.__name__ = ["scripts", "SceneEvents_15"];
  ws.__super__ = wb;
  ws.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: ws,
  });
  var xs = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_16"] = xs;
  xs.__name__ = ["scripts", "SceneEvents_16"];
  xs.__super__ = wb;
  xs.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: xs,
  });
  var ys = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_17"] = ys;
  ys.__name__ = ["scripts", "SceneEvents_17"];
  ys.__super__ = wb;
  ys.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: ys,
  });
  var zs = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_2"] = zs;
  zs.__name__ = ["scripts", "SceneEvents_2"];
  zs.__super__ = wb;
  zs.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: zs,
  });
  var As = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_3"] = As;
  As.__name__ = ["scripts", "SceneEvents_3"];
  As.__super__ = wb;
  As.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: As,
  });
  var Bs = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_4"] = Bs;
  Bs.__name__ = ["scripts", "SceneEvents_4"];
  Bs.__super__ = wb;
  Bs.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Bs,
  });
  var Cs = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_5"] = Cs;
  Cs.__name__ = ["scripts", "SceneEvents_5"];
  Cs.__super__ = wb;
  Cs.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Cs,
  });
  var Ds = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_6"] = Ds;
  Ds.__name__ = ["scripts", "SceneEvents_6"];
  Ds.__super__ = wb;
  Ds.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Ds,
  });
  var Es = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_7"] = Es;
  Es.__name__ = ["scripts", "SceneEvents_7"];
  Es.__super__ = wb;
  Es.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Es,
  });
  var Fs = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_8"] = Fs;
  Fs.__name__ = ["scripts", "SceneEvents_8"];
  Fs.__super__ = wb;
  Fs.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Fs,
  });
  var Gs = function (a, b) {
    m.call(this);
  };
  p["scripts.SceneEvents_9"] = Gs;
  Gs.__name__ = ["scripts", "SceneEvents_9"];
  Gs.__super__ = wb;
  Gs.prototype = x(wb.prototype, {
    init: function () {},
    forwardMessage: function (a) {},
    __class__: Gs,
  });
  var Hs = function () {};
  p["scripts.SplashBox"] = Hs;
  Hs.__name__ = ["scripts", "SplashBox"];
  Hs.prototype = { __class__: Hs };
  var kl = function () {
    this.onComplete = new Md();
    var a = this;
    gb.call(this);
    wa.get_current().addChild(this);
    this.locked = !1;
    var b = r.SCALE;
    this.background = new gb();
    this.background.get_graphics().beginFill(-15592942, 1);
    this.background
      .get_graphics()
      .drawRect(0, 0, this.getWidth(), this.getHeight());
    this.addChild(this.background);
    J.getConfigBitmap("config/preloader-bg.png").onComplete(function (b) {
      a.addChild(b);
    });
    var c = 3 * b;
    this.barWidth = (b * r.screenScaleX * 250) | 0;
    this.barHeight = (b * r.screenScaleY * 12) | 0;
    var d = 0 * b;
    b *= 51;
    var e = this.getWidth() / 2 - this.barWidth / 2,
      f = this.getHeight() / 2 - this.barHeight / 2;
    this.barBorder = new gb();
    this.barBorder.get_graphics().beginFill(-9620466, 1);
    this.barBorder
      .get_graphics()
      .drawRect(-c, -c, this.barWidth + 2 * c, this.barHeight + 2 * c);
    this.barBorder.set_x(e + d);
    this.barBorder.set_y(f + b);
    this.addChild(this.barBorder);
    this.barBackground = new gb();
    this.barBackground.get_graphics().beginFill(-6661605, 1);
    this.barBackground
      .get_graphics()
      .drawRect(0, 0, this.barWidth, this.barHeight);
    this.barBackground.set_x(e + d);
    this.barBackground.set_y(f + b);
    this.barBackground.set_scaleX(1);
    this.addChild(this.barBackground);
    this.bar = new gb();
    this.bar.get_graphics().beginFill(-1914226, 1);
    this.bar.get_graphics().drawRect(0, 0, this.barWidth, this.barHeight);
    c = new W(0, 0, 0, this.barHeight);
    this.bar.set_scrollRect(c);
    this.bar.set_x(e + d);
    this.bar.set_y(f + b);
    this.addChild(this.bar);
    "" != this.getURL() &&
      this.addEventListener("mouseDown", B(this, this.onMouseDown), !1, 2);
    b = this.getLockURL();
    if (this.isSiteLocked() && null != b && "" != b) {
      d = !1;
      c = wa.get_current().get_loaderInfo().url;
      if (null == c) d = !0;
      else if (0 > c.indexOf("http://") && 0 > c.indexOf("https://")) d = !0;
      else if (0 < c.indexOf("stencyl.com") || 0 < c.indexOf("localhost"))
        d = !0;
      if (!d) {
        b = b.split(",");
        for (e = 0; e < b.length; )
          (f = b[e]), ++e, null != c && 0 <= c.indexOf(f) && (d = !0);
        d || this.showLockScreen(b[0]);
      }
    }
  };
  p["scripts.StencylPreloader"] = kl;
  kl.__name__ = ["scripts", "StencylPreloader"];
  kl.__super__ = gb;
  kl.prototype = x(gb.prototype, {
    barBorder: null,
    bar: null,
    barBackground: null,
    background: null,
    barWidth: null,
    barHeight: null,
    locked: null,
    onComplete: null,
    adPlaying: null,
    ready: null,
    getLockURL: function () {
      return "coolmathgames.com, coolmath-games.com, edit.coolmath-games.com, stage.coolmath-games.com, edit-stage.coolmath-games.com, dev.coolmath-games.com, m.coolmath-games.com, havana24.net";
    },
    isSiteLocked: function () {
      return 0;
    },
    showLockScreen: function (a) {
      this.locked = !0;
      J.removeAllChildren(this);
      var b = new ic(
        new sa(this.getWidth() | 0, this.getHeight() | 0, !1, 5658198)
      );
      this.addChild(b);
      var c = new De();
      c.set_width(this.getWidth() - 16);
      c.set_height(this.getHeight() - 16);
      c.set_x(8);
      c.set_y(8);
      c.set_textColor(16777215);
      c.set_multiline(!0);
      c.set_wordWrap(!0);
      c.set_text(
        "Hi there!  It looks like somebody copied this game without my permission. Just click anywhere, or copy-paste this URL into your browser.\n\n" +
          a +
          "\n\nThanks, and have fun!"
      );
      this.addChild(c);
      this.removeEventListener("mouseDown", B(this, this.onMouseDown));
      c.addEventListener("click", B(this, this.goToLockURL));
      b.addEventListener("click", B(this, this.goToLockURL));
    },
    getURL: function () {
      return "";
    },
    goToLockURL: function (a) {
      wa.getURL(new Qg(this.getLockURL()), "_parent");
    },
    onMouseDown: function (a) {
      this.removeEventListener("mouseDown", B(this, this.onMouseDown));
      wa.getURL(new Qg(this.getURL()), "_blank");
    },
    getBackgroundColor: function () {
      return 3368601;
    },
    getWidth: function () {
      return Va.windowWidth;
    },
    getHeight: function () {
      return Va.windowHeight;
    },
    onUpdate: function (a, b) {
      wa.get_current().get_loaderInfo().__update(a, b);
      null != this.bar &&
        ((a = new W(0, 0, (a / b) * this.barWidth, this.barHeight)),
        this.bar.set_scrollRect(a));
    },
    onLoaded: function () {
      wa.get_current().get_loaderInfo().__complete();
      this.ready = !0;
      this.adPlaying || this.unload();
    },
    adFinished: function () {
      this.adPlaying = !1;
      this.ready && this.unload();
    },
    unload: function () {
      new Hs();
      (this.isSiteLocked() && this.locked) ||
        (this.parent == wa.get_current() && wa.get_current().removeChild(this),
        wa.get_current().stage.set_focus(null),
        this.onComplete.dispatch());
    },
    __class__: kl,
  });
  var vb = function () {};
  p["tweenxcore.Easing"] = vb;
  vb.__name__ = ["tweenxcore", "Easing"];
  vb.linear = function (a) {
    return a;
  };
  vb.sineIn = function (a) {
    return 0 == a ? 0 : 1 == a ? 1 : 1 - Math.cos(1.5707963267948966 * a);
  };
  vb.sineOut = function (a) {
    return 0 == a ? 0 : 1 == a ? 1 : Math.sin(1.5707963267948966 * a);
  };
  vb.sineInOut = function (a) {
    return 0 == a
      ? 0
      : 1 == a
      ? 1
      : -0.5 * (Math.cos(3.141592653589793 * a) - 1);
  };
  vb.sineOutIn = function (a) {
    return 0 == a
      ? 0
      : 1 == a
      ? 1
      : 0.5 > a
      ? 0.5 * Math.sin(3.141592653589793 * a)
      : -0.5 * Math.cos(1.5707963267948966 * (2 * a - 1)) + 1;
  };
  vb.quadIn = function (a) {
    return a * a;
  };
  vb.quadOut = function (a) {
    return -a * (a - 2);
  };
  vb.quadInOut = function (a) {
    return 0.5 > a ? 2 * a * a : -2 * --a * a + 1;
  };
  vb.quadOutIn = function (a) {
    if (0.5 > a) return -0.5 * (a *= 2) * (a - 2);
    a = 2 * a - 1;
    return 0.5 * a * a + 0.5;
  };
  vb.cubicIn = function (a) {
    return a * a * a;
  };
  vb.cubicOut = function (a) {
    return --a * a * a + 1;
  };
  vb.cubicInOut = function (a) {
    return 1 > (a *= 2) ? 0.5 * a * a * a : 0.5 * ((a -= 2) * a * a + 2);
  };
  vb.cubicOutIn = function (a) {
    a = 2 * a - 1;
    return 0.5 * (a * a * a + 1);
  };
  vb.quartIn = function (a) {
    return (a *= a) * a;
  };
  vb.quartOut = function (a) {
    a *= --a;
    return 1 - a * a;
  };
  vb.quartInOut = function (a) {
    if (1 > (a *= 2)) return 0.5 * (a *= a) * a;
    a *= a -= 2;
    return -0.5 * (a * a - 2);
  };
  vb.quartOutIn = function (a) {
    if (0.5 > a) return (a = 2 * a - 1), -0.5 * (a *= a) * a + 0.5;
    a = 2 * a - 1;
    return 0.5 * (a *= a) * a + 0.5;
  };
  vb.quintIn = function (a) {
    return a * (a *= a) * a;
  };
  vb.quintOut = function (a) {
    return --a * (a *= a) * a + 1;
  };
  vb.quintInOut = function (a) {
    return 1 > (a *= 2)
      ? 0.5 * a * (a *= a) * a
      : 0.5 * (a -= 2) * (a *= a) * a + 1;
  };
  vb.quintOutIn = function (a) {
    a = 2 * a - 1;
    return 0.5 * (a * (a *= a) * a + 1);
  };
  vb.expoIn = function (a) {
    return 0 == a ? 0 : Math.exp(6.931471805599453 * (a - 1));
  };
  vb.expoOut = function (a) {
    return 1 == a ? 1 : 1 - Math.exp(-6.931471805599453 * a);
  };
  vb.expoInOut = function (a) {
    return 0 == a
      ? 0
      : 1 == a
      ? 1
      : 1 > (a *= 2)
      ? 0.5 * Math.exp(6.931471805599453 * (a - 1))
      : 0.5 * (2 - Math.exp(-6.931471805599453 * (a - 1)));
  };
  vb.expoOutIn = function (a) {
    return 0.5 > a
      ? 0.5 * (1 - Math.exp(-13.862943611198906 * a))
      : 0.5 == a
      ? 0.5
      : 0.5 * (Math.exp(13.862943611198906 * (a - 1)) + 1);
  };
  vb.circIn = function (a) {
    return -1 > a || 1 < a ? 0 : 1 - Math.sqrt(1 - a * a);
  };
  vb.circOut = function (a) {
    return 0 > a || 2 < a ? 0 : Math.sqrt(a * (2 - a));
  };
  vb.circInOut = function (a) {
    return -0.5 > a || 1.5 < a
      ? 0.5
      : 1 > (a *= 2)
      ? -0.5 * (Math.sqrt(1 - a * a) - 1)
      : 0.5 * (Math.sqrt(1 - (a -= 2) * a) + 1);
  };
  vb.circOutIn = function (a) {
    if (0 > a) return 0;
    if (1 < a) return 1;
    if (0.5 > a) return (a = 2 * a - 1), 0.5 * Math.sqrt(1 - a * a);
    a = 2 * a - 1;
    return -0.5 * (Math.sqrt(1 - a * a) - 1 - 1);
  };
  vb.bounceIn = function (a) {
    a = 1 - a;
    return 0.36363636363636365 > a
      ? 1 - 7.5625 * a * a
      : 0.7272727272727273 > a
      ? 1 - (7.5625 * (a -= 0.5454545454545454) * a + 0.75)
      : 0.9090909090909091 > a
      ? 1 - (7.5625 * (a -= 0.8181818181818182) * a + 0.9375)
      : 1 - (7.5625 * (a -= 0.9545454545454546) * a + 0.984375);
  };
  vb.bounceOut = function (a) {
    return 0.36363636363636365 > a
      ? 7.5625 * a * a
      : 0.7272727272727273 > a
      ? 7.5625 * (a -= 0.5454545454545454) * a + 0.75
      : 0.9090909090909091 > a
      ? 7.5625 * (a -= 0.8181818181818182) * a + 0.9375
      : 7.5625 * (a -= 0.9545454545454546) * a + 0.984375;
  };
  vb.bounceInOut = function (a) {
    if (0.5 > a)
      return (
        (a = 1 - 2 * a),
        0.36363636363636365 > a
          ? 0.5 * (1 - 7.5625 * a * a)
          : 0.7272727272727273 > a
          ? 0.5 * (1 - (7.5625 * (a -= 0.5454545454545454) * a + 0.75))
          : 0.9090909090909091 > a
          ? 0.5 * (1 - (7.5625 * (a -= 0.8181818181818182) * a + 0.9375))
          : 0.5 * (1 - (7.5625 * (a -= 0.9545454545454546) * a + 0.984375))
      );
    a = 2 * a - 1;
    return 0.36363636363636365 > a
      ? 7.5625 * a * a * 0.5 + 0.5
      : 0.7272727272727273 > a
      ? 0.5 * (7.5625 * (a -= 0.5454545454545454) * a + 0.75) + 0.5
      : 0.9090909090909091 > a
      ? 0.5 * (7.5625 * (a -= 0.8181818181818182) * a + 0.9375) + 0.5
      : 0.5 * (7.5625 * (a -= 0.9545454545454546) * a + 0.984375) + 0.5;
  };
  vb.bounceOutIn = function (a) {
    if (0.5 > a)
      return 0.36363636363636365 > (a *= 2)
        ? 3.78125 * a * a
        : 0.7272727272727273 > a
        ? 0.5 * (7.5625 * (a -= 0.5454545454545454) * a + 0.75)
        : 0.9090909090909091 > a
        ? 0.5 * (7.5625 * (a -= 0.8181818181818182) * a + 0.9375)
        : 0.5 * (7.5625 * (a -= 0.9545454545454546) * a + 0.984375);
    a = 1 - (2 * a - 1);
    return 0.36363636363636365 > a
      ? 0.5 - 3.78125 * a * a + 0.5
      : 0.7272727272727273 > a
      ? 0.5 - 0.5 * (7.5625 * (a -= 0.5454545454545454) * a + 0.75) + 0.5
      : 0.9090909090909091 > a
      ? 0.5 - 0.5 * (7.5625 * (a -= 0.8181818181818182) * a + 0.9375) + 0.5
      : 0.5 - 0.5 * (7.5625 * (a -= 0.9545454545454546) * a + 0.984375) + 0.5;
  };
  vb.backIn = function (a) {
    return 0 == a ? 0 : 1 == a ? 1 : a * a * (2.70158 * a - 1.70158);
  };
  vb.backOut = function (a) {
    return 0 == a ? 0 : 1 == a ? 1 : --a * a * (2.70158 * a + 1.70158) + 1;
  };
  vb.backInOut = function (a) {
    return 0 == a
      ? 0
      : 1 == a
      ? 1
      : 1 > (a *= 2)
      ? 0.5 * a * a * (3.5949095 * a - 2.5949095)
      : 0.5 * ((a -= 2) * a * (3.5949095 * a + 2.5949095) + 2);
  };
  vb.backOutIn = function (a) {
    if (0 == a) return 0;
    if (1 == a) return 1;
    if (0.5 > a)
      return (a = 2 * a - 1), 0.5 * (a * a * (2.70158 * a + 1.70158) + 1);
    a = 2 * a - 1;
    return 0.5 * a * a * (2.70158 * a - 1.70158) + 0.5;
  };
  vb.elasticIn = function (a) {
    return 0 == a
      ? 0
      : 1 == a
      ? 1
      : -(
          Math.exp(6.931471805599453 * --a) *
          Math.sin((6.283185307179586 * (0.001 * a - 7.5e-5)) / 3e-4)
        );
  };
  vb.elasticOut = function (a) {
    return 0 == a
      ? 0
      : 1 == a
      ? 1
      : Math.exp(-6.931471805599453 * a) *
          Math.sin((6.283185307179586 * (0.001 * a - 7.5e-5)) / 3e-4) +
        1;
  };
  vb.elasticInOut = function (a) {
    return 0 == a
      ? 0
      : 1 == a
      ? 1
      : 1 > (a *= 2)
      ? -0.5 *
        Math.exp(6.931471805599453 * --a) *
        Math.sin((6.283185307179586 * (0.001 * a - 7.5e-5)) / 3e-4)
      : Math.exp(-6.931471805599453 * --a) *
          Math.sin((6.283185307179586 * (0.001 * a - 7.5e-5)) / 3e-4) *
          0.5 +
        1;
  };
  vb.elasticOutIn = function (a) {
    if (0.5 > a)
      return 0 == (a *= 2)
        ? 0
        : 0.5 *
            Math.exp(-6.931471805599453 * a) *
            Math.sin((6.283185307179586 * (0.001 * a - 7.5e-5)) / 3e-4) +
            0.5;
    if (0.5 == a) return 0.5;
    if (1 == a) return 1;
    a = 2 * a - 1;
    return (
      -(
        0.5 *
        Math.exp(6.931471805599453 * --a) *
        Math.sin((6.283185307179586 * (0.001 * a - 7.5e-5)) / 3e-4)
      ) + 0.5
    );
  };
  vb.warpOut = function (a) {
    return 0 >= a ? 0 : 1;
  };
  vb.warpIn = function (a) {
    return 1 > a ? 0 : 1;
  };
  vb.warpInOut = function (a) {
    return 0.5 > a ? 0 : 1;
  };
  vb.warpOutIn = function (a) {
    return 0 >= a ? 0 : 1 > a ? 0.5 : 1;
  };
  var Pa = function () {};
  p["tweenxcore.FloatTools"] = Pa;
  Pa.__name__ = ["tweenxcore", "FloatTools"];
  Pa.revert = function (a) {
    return 1 - a;
  };
  Pa.clamp = function (a, b, c) {
    null == c && (c = 1);
    null == b && (b = 0);
    return a <= b ? b : c <= a ? c : a;
  };
  Pa.lerp = function (a, b, c) {
    return b * (1 - a) + c * a;
  };
  Pa.inverseLerp = function (a, b, c) {
    return (a - b) / (c - b);
  };
  Pa.repeat = function (a, b, c) {
    null == c && (c = 1);
    null == b && (b = 0);
    a = Pa.inverseLerp(a, b, c);
    return a - Math.floor(a);
  };
  Pa.shake = function (a, b, c) {
    null == b && (b = 0);
    null == c && (c = Math.random);
    return b + Pa.spread(c(), a);
  };
  Pa.spread = function (a, b) {
    return Pa.lerp(a, -b, b);
  };
  Pa.sinByRate = function (a) {
    return Math.sin(2 * a * Math.PI);
  };
  Pa.cosByRate = function (a) {
    return Math.cos(2 * a * Math.PI);
  };
  Pa.yoyo = function (a, b) {
    return b(2 * (0.5 > a ? a : 1 - a));
  };
  Pa.zigzag = function (a, b) {
    return 0.5 > a ? b(2 * a) : 1 - b(2 * (a - 0.5));
  };
  Pa.mixEasing = function (a, b, c, d) {
    null == d && (d = 0.5);
    return Pa.lerp(d, b(a), c(a));
  };
  Pa.crossfadeEasing = function (a, b, c, d, e, f) {
    null == f && (f = 1);
    null == e && (e = 0);
    return Pa.lerp(Pa.lerp(d(a), e, f), b(a), c(a));
  };
  Pa.connectEasing = function (a, b, c, d, e) {
    null == e && (e = 0.5);
    null == d && (d = 0.5);
    return a < d
      ? Pa.lerp(b(Pa.inverseLerp(a, 0, d)), 0, e)
      : Pa.lerp(c(Pa.inverseLerp(a, d, 1)), e, 1);
  };
  Pa.oneTwoEasing = function (a, b, c, d) {
    null == d && (d = 0.5);
    return a < d ? b(Pa.inverseLerp(a, 0, d)) : c(Pa.inverseLerp(a, d, 1));
  };
  Pa.binarySearch = function (a, b, c) {
    null == c && (c = 0);
    var d = 0,
      e = a.length;
    if (0 == c)
      for (
        ;
        (c = (((e - d) / 2) | 0) + d),
          a[c] <= b ? (d = c + 1) : (e = c),
          d != e;

      );
    else
      for (
        ;
        (c = (((e - d) / 2) | 0) + d), a[c] < b ? (d = c + 1) : (e = c), d != e;

      );
    return d;
  };
  Pa.polyline = function (a, b) {
    if (2 > b.length) throw new v("points length must be more than 2");
    var c = b.length - 1;
    a *= c;
    c = Math.floor(Pa.clamp(a, 0, c - 1));
    return Pa.lerp(a - c, b[c], b[c + 1]);
  };
  Pa.bezier2 = function (a, b, c, d) {
    return Pa.lerp(a, Pa.lerp(a, b, c), Pa.lerp(a, c, d));
  };
  Pa.bezier3 = function (a, b, c, d, e) {
    return Pa.bezier2(a, Pa.lerp(a, b, c), Pa.lerp(a, c, d), Pa.lerp(a, d, e));
  };
  Pa.bezier = function (a, b) {
    if (2 > b.length) throw new v("points length must be more than 2");
    return 2 == b.length
      ? Pa.lerp(a, b[0], b[1])
      : 3 == b.length
      ? Pa.bezier2(a, b[0], b[1], b[2])
      : Pa._bezier(a, b);
  };
  Pa._bezier = function (a, b) {
    if (4 == b.length) return Pa.bezier3(a, b[0], b[1], b[2], b[3]);
    for (var c = [], d = 0, e = b.length - 1; d < e; ) {
      var f = d++;
      c.push(Pa.lerp(a, b[f], b[f + 1]));
    }
    return Pa._bezier(a, c);
  };
  Pa.uniformQuadraticBSpline = function (a, b) {
    if (2 > b.length) throw new v("points length must be more than 2");
    if (2 == b.length) return Pa.lerp(a, b[0], b[1]);
    var c = b.length - 2;
    a *= c;
    c = Math.floor(Pa.clamp(a, 0, c - 1));
    a -= c;
    var d = b[c],
      e = b[c + 1];
    return a * a * (d / 2 - e + b[c + 2] / 2) + a * (-d + e) + d / 2 + e / 2;
  };
  Pa.frameToSecond = function (a, b) {
    return a / b;
  };
  Pa.secondToFrame = function (a, b) {
    return a * b;
  };
  Pa.degreeToRate = function (a) {
    return a / 360;
  };
  Pa.rateToDegree = function (a) {
    return 360 * a;
  };
  Pa.radianToRate = function (a) {
    return a / (2 * Math.PI);
  };
  Pa.rateToRadian = function (a) {
    return 2 * a * Math.PI;
  };
  Pa.millisecondToBeat = function (a, b) {
    return (a * b) / 6e4;
  };
  Pa.beatToMillisecond = function (a, b) {
    return (6e4 * a) / b;
  };
  var il = function () {};
  p["tweenxcore.PointTools"] = il;
  il.__name__ = ["tweenxcore", "PointTools"];
  il.polyline = function (a, b, c) {
    var d = [],
      e = [];
    for (c = Qb(c)(); c.hasNext(); ) {
      var f = c.next();
      d.push(f.x);
      e.push(f.y);
    }
    a.x = Pa.polyline(b, d);
    a.y = Pa.polyline(b, e);
  };
  il.bezier2 = function (a, b, c, d, e) {
    a.x = Pa.bezier2(b, c.x, d.x, c.x);
    a.y = Pa.bezier2(b, c.y, d.y, c.y);
  };
  il.bezier3 = function (a, b, c, d, e, f) {
    a.x = Pa.bezier3(b, c.x, d.x, e.x, c.x);
    a.y = Pa.bezier3(b, c.y, d.y, e.y, c.y);
  };
  il.bezier = function (a, b, c) {
    var d = [],
      e = [];
    for (c = Qb(c)(); c.hasNext(); ) {
      var f = c.next();
      d.push(f.x);
      e.push(f.y);
    }
    a.x = Pa.bezier(b, d);
    a.y = Pa.bezier(b, e);
  };
  il.uniformQuadraticBSpline = function (a, b, c) {
    var d = [],
      e = [];
    for (c = Qb(c)(); c.hasNext(); ) {
      var f = c.next();
      d.push(f.x);
      e.push(f.y);
    }
    a.x = Pa.uniformQuadraticBSpline(b, d);
    a.y = Pa.uniformQuadraticBSpline(b, e);
  };
  var Vt = function () {};
  p["tweenxcore.MatrixTools"] = Vt;
  Vt.__name__ = ["tweenxcore", "MatrixTools"];
  Vt.createSimilarityTransform = function (a, b, c, d, e) {
    d -= b;
    var f = e - c;
    e = Math.atan2(f, d);
    d = Math.sqrt(d * d + f * f);
    a.a = d * Math.cos(e);
    a.b = d * Math.sin(e);
    a.c = -d * Math.sin(e);
    a.d = d * Math.cos(e);
    a.tx = b;
    a.ty = c;
  };
  var Mb,
    iu = 0;
  p.Math = Math;
  String.prototype.__class__ = p.String = String;
  String.__name__ = ["String"];
  p.Array = Array;
  Array.__name__ = ["Array"];
  Date.prototype.__class__ = p.Date = Date;
  Date.__name__ = ["Date"];
  var og = (p.Int = { __name__: ["Int"] }),
    ju = (p.Dynamic = { __name__: ["Dynamic"] }),
    ri = (p.Float = Number);
  ri.__name__ = ["Float"];
  var si = (p.Bool = Boolean);
  si.__ename__ = ["Bool"];
  var Zt = (p.Class = { __name__: ["Class"] }),
    $t = {},
    t = {};
  Th.content = [
    {
      name: "config_game_config_json",
      data: "ewoJImFudGlhbGlhcyI6IHRydWUsCgkiYnVpbGRDb25maWciOiB7ImRlYnVnIjp0cnVlLCJleHRyYSI6W10sInBsYXRmb3JtIjoiaHRtbDUifSwKCSJkZWJ1Z0RyYXciOiBmYWxzZSwKCSJkaXNwb3NlSW1hZ2VzIjogZmFsc2UsCgkiZm9yY2VIaVJlc0Fzc2V0cyI6IHRydWUsCgkiaW5pdFNjZW5lSUQiOiA1LAoJImtleXMiOiB7CgkJInVwIjogWyJVUCJdLAoJCSJkb3duIjogWyJET1dOIl0sCgkJImxlZnQiOiBbIkxFRlQiXSwKCQkicmlnaHQiOiBbIlJJR0hUIl0sCgkJImFjdGlvbjEiOiBbIloiXSwKCQkiYWN0aW9uMiI6IFsiWCJdLAoJCSJlbnRlciI6IFsiRU5URVIiXSwKCQkidyI6IFsiVyJdLAoJCSJhIjogWyJBIl0sCgkJInMiOiBbIlMiXSwKCQkiZCI6IFsiRCJdLAoJCSJSZXNldCI6IFsiUiJdLAoJCSIxIjogWyJOVU1CRVJfMSJdLAoJCSIyIjogWyJOVU1CRVJfMiJdLAoJCSJFU0MiOiBbIkVTQ0FQRSJdCgkJCgl9LAoJInBpeGVsc25hcCI6IGZhbHNlLAoJInBoeXNpY3NNb2RlIjogIk5PUk1BTF9QSFlTSUNTIiwKCSJyZWxlYXNlTW9kZSI6IHRydWUsCgkic2hvd0NvbnNvbGUiOiBmYWxzZSwKCSJzdGFnZVdpZHRoIjogNjQwLAoJInN0YWdlSGVpZ2h0IjogNDAwLAoJInRvb2xzZXRJbnRlcmZhY2VIb3N0IjogImxvY2FsaG9zdCIsCgkidG9vbHNldEludGVyZmFjZVBvcnQiOiAxODUyNSwKCSJ1c2VHY2lMb2dnaW5nIjogdHJ1ZSwKCQoJImNvbmZpZy1tb2JpbGUiOiB7CgkJImFkUG9zaXRpb25Cb3R0b20iOiB0cnVlLAoJCSJhdXRvcm90YXRlIjogZmFsc2UsCgkJImdhbWVTY2FsZSI6IDEsCgkJImxhbmRzY2FwZSI6IGZhbHNlLAoJCSJ0ZXN0QWRzIjogZmFsc2UsCgkJInRvb2xzZXRJbnRlcmZhY2VIb3N0IjogIjE5Mi4xNjguMS41IiwKCQkiY29uZmlnLWFuZHJvaWQiOiB7CgkJCSJkaXNhYmxlQmFja0J1dHRvbiI6IGZhbHNlLAoJCQkic2NhbGVNb2RlIjogIk5PX1NDQUxJTkciLAoJCQkic2NhbGVzIjogWyIxeCIsIjEuNXgiLCIyeCIsIjN4IiwiNHgiXQoJCX0sCgkJCgkJImNvbmZpZy1pb3MiOiB7CgkJCSJzY2FsZU1vZGUiOiAiTk9fU0NBTElORyIsCgkJCSJzY2FsZXMiOiBbIjF4IiwiMS41eCIsIjJ4IiwiM3giLCI0eCJdCgkJfQoJfSwKCQoJImNvbmZpZy1kZXNrdG9wIjogewoJCSJnYW1lU2NhbGUiOiAyLjAsCgkJInNjYWxlTW9kZSI6ICJOT19TQ0FMSU5HIiwKCQkic2NhbGVzIjogWyIxeCIsIjEuNXgiLCIyeCIsIjN4IiwiNHgiXSwKCQkic3RhcnRJbkZ1bGxTY3JlZW4iOiBmYWxzZQoJfSwKCQoJImNvbmZpZy13ZWIiOiB7CgkJImdhbWVTY2FsZSI6IDEuMCwKCQkic3RhcnRJbkZ1bGxTY3JlZW4iOiBmYWxzZSwKCQkic2NhbGVzIjogWyIxeCJdLAoJCSJjb25maWctZmxhc2giOiB7CgkJCSJzY2FsZU1vZGUiOiAiTk9fU0NBTElORyIKCQl9LAoJCQoJCSJjb25maWctaHRtbDUiOiB7CgkJCSJ0b29sc2V0SW50ZXJmYWNlSG9zdCI6ICIxOTIuMTY4LjEuNSIKCQl9Cgl9Cn0K",
    },
    {
      name: "config_preloadpaths_txt",
      data: "YXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3RpbGVzZXQtMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0yLTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtNC0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTQtMS5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS00LTIucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtNC0zLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTQtNC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS00LTUucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtNC02LnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTQtNy5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS00LTgucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtNC05LnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTQtMTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtNC0xMS5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS00LTEyLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTYtMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS02LTEucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtOC0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTgtMS5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS04LTIucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMTAtMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0xMC0xLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTEwLTIucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMTItMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0xNC0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTE0LTEucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMTQtMi5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0xNi0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTE2LTEucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMTYtMi5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0xOC0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTE4LTEucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMTgtMi5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0yMC0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTIwLTEucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMjAtMi5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0yMi0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTI0LTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMjQtMS5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0yNi0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTI4LTAucG5nCmFzc2V0cy9zZngvc291bmQtMjkub2dnCmFzc2V0cy9zZngvc291bmQtMzAub2dnCmFzc2V0cy9zZngvc291bmQtMzEub2dnCmFzc2V0cy9zZngvc291bmQtMzIub2dnCmFzc2V0cy9zZngvc291bmQtMzMub2dnCmFzc2V0cy9zZngvc291bmQtMzQub2dnCmFzc2V0cy9zZngvc291bmQtMzUub2dnCmFzc2V0cy9zZngvc291bmQtMzYub2dnCmFzc2V0cy9zZngvc291bmQtMzcub2dnCmFzc2V0cy9zZngvc291bmQtMzgub2dnCmFzc2V0cy9zZngvc291bmQtMzkub2dnCmFzc2V0cy9zZngvc291bmQtNDAub2dnCmFzc2V0cy9zZngvc291bmQtNDEub2dnCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtNDMtMC5wbmcKYXNzZXRzL3NmeC9zb3VuZC00NC5vZ2cKYXNzZXRzL3NmeC9zb3VuZC00NS5vZ2cKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS00Ny0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0UvZm9udC01NS5mbnQKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL2ZvbnQtNTUucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtNTctMC5wbmcKYXNzZXRzL3NmeC9zb3VuZC01OC5vZ2cKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS02MC0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTYyLTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS82My5TT1VORF9FWFQKYXNzZXRzL3NmeC9zb3VuZC02NC5vZ2cKYXNzZXRzL3NmeC9zb3VuZC02NS5vZ2cKYXNzZXRzL3NmeC9zb3VuZC02Ni5vZ2cKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL2JhY2tncm91bmQtNjctMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS02OS0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTczLTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtNzUtMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS03Ny0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTc5LTAucG5nCmFzc2V0cy9zZngvc291bmQtODAub2dnCmFzc2V0cy9zZngvc291bmQtODEub2dnCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtODMtMC5wbmcKYXNzZXRzL3NmeC9zb3VuZC04NC5vZ2cKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS04Ni0wLnBuZwphc3NldHMvc2Z4L3NvdW5kLTg3Lm9nZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTg5LTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtOTEtMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS05My0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTk1LTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtOTctMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS05OS0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTEwMS0wLnBuZwphc3NldHMvc2Z4L3NvdW5kLTEwMi5vZ2cKYXNzZXRzL3NmeC9zb3VuZC0xMDMub2dnCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS90aWxlc2V0LTEwNC0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0UvdGlsZXNldC0xMDQtMi5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3RpbGVzZXQtMTA0LTEucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS90aWxlc2V0LTEwNC0zLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0UvdGlsZXNldC0xMDQucG5nCmFzc2V0cy9zZngvc291bmQtMTA1Lm9nZwphc3NldHMvc2Z4L3NvdW5kLTEwNi5vZ2cKYXNzZXRzL3NmeC9zb3VuZC0xMDcub2dnCmFzc2V0cy9zZngvc291bmQtMTA4Lm9nZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTExMC0wLnBuZwphc3NldHMvc2Z4L3NvdW5kLTExMS5vZ2cKYXNzZXRzL3NmeC9zb3VuZC0xMTIub2dnCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMTE0LTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMTI2LTAucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMTI2LTEucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMTI2LTIucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9zcHJpdGUtMTI2LTMucG5nCmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9mb250LTEyNy5mbnQKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL2ZvbnQtMTI3LnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0UvZm9udC0xMjguZm50CmFzc2V0cy9ncmFwaGljcy9JTUdfQkFTRS9mb250LTEyOC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0xMzAtMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0xMzAtMS5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0xMzAtMi5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0xMzItMC5wbmcKYXNzZXRzL2dyYXBoaWNzL0lNR19CQVNFL3Nwcml0ZS0xMzQtMC5wbmcKYXNzZXRzL3NmeC9zb3VuZC0xMzUub2dnCmFzc2V0cy9zZngvc291bmQtMTM2Lm9nZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTEzOC0yLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTE0MC0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTE0Mi0wLnBuZwphc3NldHMvZ3JhcGhpY3MvSU1HX0JBU0Uvc3ByaXRlLTE0NC0wLnBuZwo",
    },
    {
      name: "config_preloader_bg_txt",
      data: "",
    },
  ];
  var Je = md.ArrayBuffer || Ke;
  null == Je.prototype.slice && (Je.prototype.slice = Ke.sliceImpl);
  var Ai = md.DataView || Ip,
    vc = md.Float32Array || Uh._new,
    lt =
      md.Float64Array || (md.Float32Array ? "notsupported" : null) || Vh._new,
    lb = md.Uint8Array || Wh._new,
    ku = new Uint32Array(256);
  C.__alpha16 = ku;
  for (var du = 0; 256 > du; ) {
    var eu = du++;
    C.__alpha16[eu] = Math.ceil(257.00392156862745 * eu);
  }
  var lu = new lb(511);
  C.__clamp = lu;
  for (var fu = 0; 255 > fu; ) {
    var gu = fu++;
    C.__clamp[gu] = gu;
  }
  for (var hu = 255; 511 > hu; ) {
    var mu = hu++;
    C.__clamp[mu] = 255;
  }
  th.available = !1;
  th.enabled = !1;
  mb.level = 0;
  "undefined" == typeof console && (console = {});
  null == console.log && (console.log = function () {});
  w.hitTestCanvas =
    "undefined" != typeof window
      ? window.document.createElement("canvas")
      : null;
  w.hitTestContext =
    "undefined" != typeof window ? w.hitTestCanvas.getContext("2d") : null;
  Xe.maxTouchPoints = 2;
  Xe.supportedGestures = null;
  Xe.supportsGestureEvents = !1;
  Xe.inputMode = 2;
  yc.reloadListeners = [];
  Wa.TOUCH_POINT = 1;
  Wa.GESTURE = 2;
  Wa.GESTURE_CAPTURE = 3;
  Wa.PAN_X = 1;
  Wa.PAN_Y = 2;
  Wa.PAN_XY = 3;
  Wa.READY = 0;
  Wa.BEGIN = 1;
  Wa.TWO_FINGER_MOVE = 2;
  Wa.MOVE = 4;
  Wa.R2D = 180 / Math.PI;
  Wa.SWIPE_SCROLL_TIME = 2;
  Wa.SWIPE_SAMPLE_TIME = 0.2;
  Wa.VELOCITY_RATIO = 0.25;
  Wa.touchEvents =
    "touchBegin touchEnd touchMove touchOver touchOut touchRollOver touchRollOut touchTap".split(
      " "
    );
  Wa.mouseEvents =
    "mouseDown mouseUp mouseMove mouseOver mouseOut rollOver rollOut click".split(
      " "
    );
  Wa.geTouchEvents = ["touchBegin", "touchEnd", "touchMove", "touchOut"];
  Wa.geMouseEvents = ["mouseDown", "mouseUp", "mouseMove", "mouseOut"];
  Wa.initialized = !1;
  Wa.moveToleSqr = 1;
  Wa.MAP =
    "mouseDown rox_touch_begin mouseUp rox_touch_end mouseMove rox_touch_move mouseOver rox_touch_over mouseOut rox_touch_out rollOver rox_touch_roll_over rollOut rox_touch_roll_in click rox_touch_tap touchBegin rox_touch_begin touchEnd rox_touch_end touchMove rox_touch_move touchOver rox_touch_over touchOut rox_touch_out touchRollOver rox_touch_roll_over touchRollOut rox_touch_roll_in touchTap rox_touch_tap".split(
      " "
    );
  Wa.typeMap = (function (a) {
    a = new la();
    for (var b = 0, c = Wa.MAP.length >> 1; b < c; ) {
      var d = b++,
        e = Wa.MAP[d << 1];
      d = Wa.MAP[(d << 1) + 1];
      null != t[e] ? a.setReserved(e, d) : (a.h[e] = d);
    }
    return a;
  })(this);
  ma.ACTIVATE = "activate";
  ma.ADDED = "added";
  ma.ADDED_TO_STAGE = "addedToStage";
  ma.CANCEL = "cancel";
  ma.CHANGE = "change";
  ma.CLEAR = "clear";
  ma.CLOSE = "close";
  ma.COMPLETE = "complete";
  ma.CONNECT = "connect";
  ma.CONTEXT3D_CREATE = "context3DCreate";
  ma.COPY = "copy";
  ma.CUT = "cut";
  ma.DEACTIVATE = "deactivate";
  ma.ENTER_FRAME = "enterFrame";
  ma.EXIT_FRAME = "exitFrame";
  ma.FRAME_CONSTRUCTED = "frameConstructed";
  ma.FRAME_LABEL = "frameLabel";
  ma.FULLSCREEN = "fullScreen";
  ma.ID3 = "id3";
  ma.INIT = "init";
  ma.MOUSE_LEAVE = "mouseLeave";
  ma.OPEN = "open";
  ma.PASTE = "paste";
  ma.REMOVED = "removed";
  ma.REMOVED_FROM_STAGE = "removedFromStage";
  ma.RENDER = "render";
  ma.RESIZE = "resize";
  ma.SCROLL = "scroll";
  ma.SELECT = "select";
  ma.SELECT_ALL = "selectAll";
  ma.SOUND_COMPLETE = "soundComplete";
  ma.TAB_CHILDREN_CHANGE = "tabChildrenChange";
  ma.TAB_ENABLED_CHANGE = "tabEnabledChange";
  ma.TAB_INDEX_CHANGE = "tabIndexChange";
  ma.TEXTURE_READY = "textureReady";
  ma.UNLOAD = "unload";
  Rc.TOUCH_BEGIN = "rox_touch_begin";
  Rc.TOUCH_END = "rox_touch_end";
  Rc.TOUCH_MOVE = "rox_touch_move";
  Rc.TOUCH_OVER = "rox_touch_over";
  Rc.TOUCH_OUT = "rox_touch_out";
  Rc.TOUCH_ROLL_OVER = "rox_touch_roll_over";
  Rc.TOUCH_ROLL_OUT = "rox_touch_roll_in";
  Rc.TOUCH_TAP = "rox_touch_tap";
  Rc.GESTURE_TAP = "rox_gesture_tap";
  Rc.GESTURE_LONG_PRESS = "rox_gesture_long_press";
  Rc.GESTURE_PAN = "rox_gesture_pan";
  Rc.GESTURE_SWIPE = "rox_gesture_swipe";
  Rc.GESTURE_BEGIN = "rox_gesture_begin";
  Rc.GESTURE_PINCH = "rox_gesture_pinch";
  Rc.GESTURE_ROTATION = "rox_gesture_rotation";
  Rc.GESTURE_END = "rox_gesture_end";
  qd.count = 0;
  hb.__broadcastEvents = new la();
  hb.__instanceCount = 0;
  hb.__tempStack = new Fg(
    function () {
      return Oa.toObjectVector(null);
    },
    function (a) {
      a.set_length(0);
    }
  );
  Va.logicalWidth = 0;
  Va.logicalHeight = 0;
  Va.windowWidth = 0;
  Va.windowHeight = 0;
  ta.Element = 0;
  ta.PCData = 1;
  ta.CData = 2;
  ta.Comment = 3;
  ta.DocType = 4;
  ta.ProcessingInstruction = 5;
  ta.Document = 6;
  D.pool = [];
  D.pooli = 0;
  Id.VERTEX = 0;
  Id.FACE = 1;
  ib.b2_nullFeature = 255;
  ib.s_incidentEdge = ib.makeClipPointVector();
  ib.s_clipPoints1 = ib.makeClipPointVector();
  ib.s_clipPoints2 = ib.makeClipPointVector();
  ib.s_edgeAO = [];
  ib.s_edgeBO = [];
  ib.s_localTangent = new D();
  ib.s_localNormal = new D();
  ib.s_planePoint = new D();
  ib.s_normal = new D();
  ib.s_tangent = new D();
  ib.s_tangent2 = new D();
  ib.s_v11 = new D();
  ib.s_v12 = new D();
  ib.b2CollidePolyTempVec = new D();
  Ef.s_simplex = new Io();
  Ef.s_saveA = [];
  Ef.s_saveB = [];
  Xj.currentID = 0;
  Dh.e_circles = 1;
  Dh.e_faceA = 2;
  Dh.e_faceB = 4;
  zf.e_points = 1;
  zf.e_faceA = 2;
  zf.e_faceB = 4;
  Bb.b2_toiCalls = 0;
  Bb.b2_toiIters = 0;
  Bb.b2_toiMaxIters = 0;
  Bb.b2_toiRootIters = 0;
  Bb.b2_toiMaxRootIters = 0;
  Bb.s_cache = (function (a) {
    a = new xl();
    a.useCache = !0;
    return a;
  })(this);
  Bb.s_distanceInput = new tl();
  Bb.s_xfA = new kf();
  Bb.s_xfB = new kf();
  Bb.s_fcn = new zf();
  Bb.s_distanceOutput = new ul();
  Jb.initialized = !1;
  Jb.distanceInput = new tl();
  Jb.proxyA = new Ti();
  Jb.proxyB = new Ti();
  Jb.simplexCache = new xl();
  Jb.distanceOutput = new ul();
  Jb.e_unknownShape = -1;
  Jb.e_circleShape = 0;
  Jb.e_polygonShape = 1;
  Jb.e_edgeShape = 2;
  Jb.e_shapeTypeCount = 3;
  Jb.e_hitCollide = 1;
  Jb.e_missCollide = 0;
  Jb.e_startsInsideCollide = -1;
  Db.s_mat = new uc();
  R.VERSION = "2.1alpha";
  R.USHRT_MAX = 65535;
  R.b2_pi = Math.PI;
  R.b2_maxManifoldPoints = 2;
  R.b2_aabbExtension = 0.1;
  R.b2_aabbMultiplier = 2;
  R.b2_linearSlop = 0.005;
  R.b2_polygonRadius = 2 * R.b2_linearSlop;
  R.b2_angularSlop = 0.011111111111111112 * R.b2_pi;
  R.b2_toiSlop = 8 * R.b2_linearSlop;
  R.b2_maxTOIContactsPerIsland = 32;
  R.b2_maxTOIJointsPerIsland = 32;
  R.b2_velocityThreshold = 1;
  R.b2_maxLinearCorrection = 0.2;
  R.b2_maxAngularCorrection = 0.044444444444444446 * R.b2_pi;
  R.b2_maxTranslation = 2;
  R.b2_maxTranslationSquared = R.b2_maxTranslation * R.b2_maxTranslation;
  R.b2_maxRotation = 0.5 * R.b2_pi;
  R.b2_maxRotationSquared = R.b2_maxRotation * R.b2_maxRotation;
  R.b2_contactBaumgarte = 0.2;
  R.b2_timeToSleep = 0.5;
  R.b2_linearSleepTolerance = 0.01;
  R.b2_angularSleepTolerance = 0.011111111111111112 * R.b2_pi;
  E.b2Vec2_zero = new D(0, 0);
  E.b2Mat22_identity = uc.fromVV(new D(1, 0), new D(0, 1));
  E.b2Transform_identity = new kf(E.b2Vec2_zero, E.b2Mat22_identity);
  ea.s_xf1 = new kf();
  ea.e_islandFlag = 1;
  ea.e_awakeFlag = 2;
  ea.e_allowSleepFlag = 4;
  ea.e_bulletFlag = 8;
  ea.e_fixedRotationFlag = 16;
  ea.e_activeFlag = 32;
  ea.e_ignoreGravityFlag = 128;
  ea.e_alwaysActiveFlag = 256;
  ea.e_pausedFlag = 512;
  ea.b2_staticBody = 0;
  ea.b2_kinematicBody = 1;
  ea.b2_dynamicBody = 2;
  ak.b2_defaultFilter = new ak();
  nh.KEY_LOCK = 0;
  nh.b2_defaultListener = new nh();
  zl.s_evalCP = new Ho();
  Pe.e_shapeBit = 1;
  Pe.e_jointBit = 2;
  Pe.e_aabbBit = 4;
  Pe.e_pairBit = 8;
  Pe.e_centerOfMassBit = 16;
  Pe.e_controllerBit = 32;
  Sf.tempAABB1 = new jf();
  Sf.tempAABB2 = new jf();
  ki.s_impulse = new Po();
  Rb.s_timestep2 = new ck();
  Rb.s_xf = new kf();
  Rb.s_backupA = new Eh();
  Rb.s_backupB = new Eh();
  Rb.s_timestep = new ck();
  Rb.s_queue = [];
  Rb.s_jointColor = new yl(0.5, 0.8, 0.8);
  Rb.m_warmStarting = !0;
  Rb.m_continuousPhysics = !1;
  Rb.e_newFixture = 1;
  Rb.e_locked = 2;
  Ga.e_sensorFlag = 1;
  Ga.e_continuousFlag = 2;
  Ga.e_islandFlag = 4;
  Ga.e_toiFlag = 8;
  Ga.e_touchingFlag = 16;
  Ga.e_enabledFlag = 32;
  Ga.e_filterFlag = 64;
  Ga.s_input = new Oo();
  dk.circlePointA = new D();
  dk.circlePointB = new D();
  Qe.staticFix = R.b2_maxManifoldPoints;
  Qe.s_worldManifold = new Yj();
  Qe.s_psm = new dk();
  Ea.m_xf = new kf();
  Ea.q = new D();
  Ea.p = new D();
  Ea.e = new D();
  Ea.temp1 = new D();
  Ea.temp2 = new D();
  Ea.m_centroidB = new D();
  Ea.mat = new uc();
  y.m_xf = new kf();
  y.temp = new D();
  y.m_centroidB = new D();
  y.m_lowerLimit = new D();
  y.m_upperLimit = new D();
  y.m_polygonB = new Vo();
  y.edgeAxis = new El();
  y.polygonAxis = new El();
  y.perp = new D();
  y.n = new D();
  y.rf = new Wo();
  y.mat = new uc();
  y.temp1 = new D();
  y.temp2 = new D();
  y.ie = [new Ih(), new Ih()];
  y.clipPoints1 = [new Ih(), new Ih()];
  y.clipPoints2 = [new Ih(), new Ih()];
  y.edge0 = new D();
  y.edge1 = new D();
  y.edge2 = new D();
  y.m_normal = new D();
  y.m_normal0 = new D();
  y.m_normal1 = new D();
  y.m_normal2 = new D();
  Kb.e_unknownJoint = 0;
  Kb.e_revoluteJoint = 1;
  Kb.e_prismaticJoint = 2;
  Kb.e_distanceJoint = 3;
  Kb.e_pulleyJoint = 4;
  Kb.e_mouseJoint = 5;
  Kb.e_gearJoint = 6;
  Kb.e_lineJoint = 7;
  Kb.e_weldJoint = 8;
  Kb.e_frictionJoint = 9;
  Kb.e_inactiveLimit = 0;
  Kb.e_atLowerLimit = 1;
  Kb.e_atUpperLimit = 2;
  Kb.e_equalLimits = 3;
  Sc.CENTER = "center";
  Jg.b2_minPulleyLength = 2;
  mg.tImpulse = new D();
  Kh.GRAPH_WIDTH = 70;
  Kh.XPOS = 69;
  Kh.GRAPH_HEIGHT = 1;
  Kh.TEXT_HEIGHT = 15;
  Lg.bg = 51;
  Lg.fps = 16776960;
  Lg.ms = 65280;
  Lg.mem = 65535;
  Lg.memmax = 16711792;
  Lg.bgCSS = "#000033";
  Lg.msCSS = "#00ff00";
  Lg.fpsCSS = "#ffff00";
  Lg.memCSS = "#00ffff";
  Lg.memmaxCSS = "#ff0070";
  Lh.whirlID = "";
  Lh.whirlID1 = "";
  Lh.ioswhirlID = "";
  Lh.ioswhirlID1 = "";
  Lh.cpmstarID = "";
  Lh.newgroundsID = "";
  Lh.newgroundsKey = "";
  Lh.androidPublicKey = "";
  U.defines = (function (a) {
    a = new la();
    null != t.js ? a.setReserved("js", "1") : (a.h.js = "1");
    null != t.hscript
      ? a.setReserved("hscript", "2.1.1")
      : (a.h.hscript = "2.1.1");
    null != t["openfl-disable-handle-error"]
      ? a.setReserved("openfl-disable-handle-error", "1")
      : (a.h["openfl-disable-handle-error"] = "1");
    null != t["source-header"]
      ? a.setReserved("source-header", "Generated by Haxe 3.4.7")
      : (a.h["source-header"] = "Generated by Haxe 3.4.7");
    null != t["lime-howlerjs"]
      ? a.setReserved("lime-howlerjs", "1")
      : (a.h["lime-howlerjs"] = "1");
    null != t.polygonal_printf
      ? a.setReserved("polygonal_printf", "1.0.0-beta")
      : (a.h.polygonal_printf = "1.0.0-beta");
    null != t.jquery_ver
      ? a.setReserved("jquery_ver", "11204")
      : (a.h.jquery_ver = "11204");
    null != t.lime_howlerjs
      ? a.setReserved("lime_howlerjs", "1")
      : (a.h.lime_howlerjs = "1");
    null != t.cloner
      ? a.setReserved("cloner", "1.0.0")
      : (a.h.cloner = "1.0.0");
    null != t.openfl
      ? a.setReserved("openfl", "8.7.0")
      : (a.h.openfl = "8.7.0");
    null != t.stencyl
      ? a.setReserved("stencyl", "3.5.0")
      : (a.h.stencyl = "3.5.0");
    null != t.tweenxcore
      ? a.setReserved("tweenxcore", "1.0.4")
      : (a.h.tweenxcore = "1.0.4");
    null != t.lime_dom ? a.setReserved("lime_dom", "1") : (a.h.lime_dom = "1");
    null != t.no_traces
      ? a.setReserved("no_traces", "1")
      : (a.h.no_traces = "1");
    null != t["polygonal-printf"]
      ? a.setReserved("polygonal-printf", "1.0.0-beta")
      : (a.h["polygonal-printf"] = "1.0.0-beta");
    null != t.lime_html5
      ? a.setReserved("lime_html5", "1")
      : (a.h.lime_html5 = "1");
    null != t.actuate_manual_update
      ? a.setReserved("actuate_manual_update", "1")
      : (a.h.actuate_manual_update = "1");
    null != t.mbs ? a.setReserved("mbs", "1.0.0") : (a.h.mbs = "1.0.0");
    null != t["no-compilation"]
      ? a.setReserved("no-compilation", "1")
      : (a.h["no-compilation"] = "1");
    null != t.verbose ? a.setReserved("verbose", "1") : (a.h.verbose = "1");
    null != t.lime_webgl
      ? a.setReserved("lime_webgl", "1")
      : (a.h.lime_webgl = "1");
    null != t.openfl_html5
      ? a.setReserved("openfl_html5", "1")
      : (a.h.openfl_html5 = "1");
    null != t["lime-html5"]
      ? a.setReserved("lime-html5", "1")
      : (a.h["lime-html5"] = "1");
    null != t["openfl-html5"]
      ? a.setReserved("openfl-html5", "1")
      : (a.h["openfl-html5"] = "1");
    null != t.debug_console
      ? a.setReserved("debug_console", "0.0.0")
      : (a.h.debug_console = "0.0.0");
    null != t.howlerjs ? a.setReserved("howlerjs", "1") : (a.h.howlerjs = "1");
    null != t.haxe_ver
      ? a.setReserved("haxe_ver", "3.407")
      : (a.h.haxe_ver = "3.407");
    null != t.box2d ? a.setReserved("box2d", "0.0.0") : (a.h.box2d = "0.0.0");
    null != t.debug ? a.setReserved("debug", "1") : (a.h.debug = "1");
    null != t.js_es ? a.setReserved("js_es", "5") : (a.h.js_es = "5");
    null != t["js-es5"] ? a.setReserved("js-es5", "1") : (a.h["js-es5"] = "1");
    null != t.js_es5 ? a.setReserved("js_es5", "1") : (a.h.js_es5 = "1");
    null != t.dce ? a.setReserved("dce", "std") : (a.h.dce = "std");
    null != t["debug-console"]
      ? a.setReserved("debug-console", "0.0.0")
      : (a.h["debug-console"] = "0.0.0");
    null != t["lime-dom"]
      ? a.setReserved("lime-dom", "1")
      : (a.h["lime-dom"] = "1");
    null != t["true"] ? a.setReserved("true", "1") : (a.h["true"] = "1");
    null != t.html5 ? a.setReserved("html5", "1") : (a.h.html5 = "1");
    null != t.lime ? a.setReserved("lime", "7.2.0") : (a.h.lime = "7.2.0");
    null != t.no_compilation
      ? a.setReserved("no_compilation", "1")
      : (a.h.no_compilation = "1");
    null != t.openfl_disable_handle_error
      ? a.setReserved("openfl_disable_handle_error", "1")
      : (a.h.openfl_disable_handle_error = "1");
    null != t.web ? a.setReserved("web", "1") : (a.h.web = "1");
    null != t.lime_canvas
      ? a.setReserved("lime_canvas", "1")
      : (a.h.lime_canvas = "1");
    null != t["polygonal-ds"]
      ? a.setReserved("polygonal-ds", "2.0.0")
      : (a.h["polygonal-ds"] = "2.0.0");
    null != t["lime-webgl"]
      ? a.setReserved("lime-webgl", "1")
      : (a.h["lime-webgl"] = "1");
    null != t.tools ? a.setReserved("tools", "7.2.0") : (a.h.tools = "7.2.0");
    null != t.actuate_manual_time
      ? a.setReserved("actuate_manual_time", "1")
      : (a.h.actuate_manual_time = "1");
    null != t.haxe3 ? a.setReserved("haxe3", "1") : (a.h.haxe3 = "1");
    null != t["lime-canvas"]
      ? a.setReserved("lime-canvas", "1")
      : (a.h["lime-canvas"] = "1");
    null != t.polygonal_ds
      ? a.setReserved("polygonal_ds", "2.0.0")
      : (a.h.polygonal_ds = "2.0.0");
    null != t.use_tilemap
      ? a.setReserved("use_tilemap", "1")
      : (a.h.use_tilemap = "1");
    return a;
  })(this);
  gd.TYPE_ADS = 1;
  gd.TYPE_PURCHASES = 2;
  gd.TYPE_GAMECENTER = 3;
  gd.TYPE_KEYBOARD = 4;
  r.__meta__ = {
    fields: {
      getLayer: { deprecated: ["Use getLayerById or getLayerByName"] },
    },
  };
  r.DOODAD = "";
  r.INTERNAL_SHIFT = "iSHIFT";
  r.INTERNAL_CTRL = "iCTRL";
  r.NO_PHYSICS = !1;
  r.DEBUG_DRAW = !1;
  r.IMG_BASE = "";
  r.SCALE = 1;
  r.checkedWideScreen = !1;
  r.isStandardIOS = !1;
  r.isExtendedIOS = !1;
  r.isIPhone6 = !1;
  r.isIPhone6Plus = !1;
  r.isIPhoneX = !1;
  r.isIPhoneXMax = !1;
  r.isIPhoneXR = !1;
  r.isTabletIOS = !1;
  r.landscape = !1;
  r.limitCameraToScene = !0;
  r.paused = !1;
  r.started = !1;
  r.inFocus = !0;
  r.events = new gd();
  r.ITERATIONS = 3;
  r.physicsScale = 10;
  r.paddingLeft = 0;
  r.paddingRight = 0;
  r.paddingTop = 0;
  r.paddingBottom = 0;
  r.STEP_SIZE = 10;
  r.MS_PER_SEC = 1e3;
  r.elapsedTime = 0;
  r.timeScale = 1;
  r.totalElapsedTime = 0;
  r.debug = !1;
  H.mouseX = 0;
  H.mouseY = 0;
  H.mouseWheelDelta = 0;
  H._enabled = !1;
  H._joySensitivity = 0.12;
  H._joyHatState = new Ca();
  H._joyAxisState = new Ca();
  H._joyAxisPressure = new Ca();
  H._joyButtonState = new Ca();
  H._key = [];
  H._controlsToReset = [];
  H._controlMap = new la();
  H._keyControlMap = new Ca();
  Fe.DEVICE = 0;
  Fe.TYPE = 1;
  Fe.UP = 0;
  Fe.DOWN = 1;
  Fe.LEFT = 2;
  Fe.RIGHT = 3;
  Fe.AXIS = 0;
  Fe.HAT = 1;
  Fe.BUTTON = 2;
  Fe.BALL = 3;
  Fe.cacheFromID = new la();
  Da.ANY = -1;
  Da.LEFT = 37;
  Da.UP = 38;
  Da.RIGHT = 39;
  Da.DOWN = 40;
  Da.ENTER = 13;
  Da.CONTROL = 17;
  Da.SPACE = 32;
  Da.SHIFT = 16;
  Da.BACKSPACE = 8;
  Da.CAPS_LOCK = 20;
  Da.DELETE = 46;
  Da.END = 35;
  Da.ESCAPE = 27;
  Da.HOME = 36;
  Da.INSERT = 45;
  Da.TAB = 9;
  Da.PAGE_DOWN = 34;
  Da.PAGE_UP = 33;
  Da.LEFT_SQUARE_BRACKET = 219;
  Da.RIGHT_SQUARE_BRACKET = 221;
  Da.A = 97;
  Da.B = 98;
  Da.C = 99;
  Da.D = 100;
  Da.E = 101;
  Da.F = 102;
  Da.G = 103;
  Da.H = 104;
  Da.I = 105;
  Da.J = 106;
  Da.K = 107;
  Da.L = 108;
  Da.M = 109;
  Da.N = 110;
  Da.O = 111;
  Da.P = 112;
  Da.Q = 113;
  Da.R = 114;
  Da.S = 115;
  Da.T = 116;
  Da.U = 117;
  Da.V = 118;
  Da.W = 119;
  Da.X = 120;
  Da.Y = 121;
  Da.Z = 122;
  Da.F1 = 112;
  Da.F2 = 113;
  Da.F3 = 114;
  Da.F4 = 115;
  Da.F5 = 116;
  Da.F6 = 117;
  Da.F7 = 118;
  Da.F8 = 119;
  Da.F9 = 120;
  Da.F10 = 121;
  Da.F11 = 122;
  Da.F12 = 123;
  Da.F13 = 124;
  Da.F14 = 125;
  Da.F15 = 126;
  Da.DIGIT_0 = 48;
  Da.DIGIT_1 = 49;
  Da.DIGIT_2 = 50;
  Da.DIGIT_3 = 51;
  Da.DIGIT_4 = 52;
  Da.DIGIT_5 = 53;
  Da.DIGIT_6 = 54;
  Da.DIGIT_7 = 55;
  Da.DIGIT_8 = 56;
  Da.DIGIT_9 = 57;
  Da.NUMPAD_0 = 96;
  Da.NUMPAD_1 = 97;
  Da.NUMPAD_2 = 98;
  Da.NUMPAD_3 = 99;
  Da.NUMPAD_4 = 100;
  Da.NUMPAD_5 = 101;
  Da.NUMPAD_6 = 102;
  Da.NUMPAD_7 = 103;
  Da.NUMPAD_8 = 104;
  Da.NUMPAD_9 = 105;
  Da.NUMPAD_ADD = 107;
  Da.NUMPAD_DECIMAL = 110;
  Da.NUMPAD_DIVIDE = 111;
  Da.NUMPAD_ENTER = 108;
  Da.NUMPAD_MULTIPLY = 106;
  Da.NUMPAD_SUBTRACT = 109;
  Da.keyboardNameMap = (function (a) {
    a = new la();
    null != t.NUMBER_0 ? a.setReserved("NUMBER_0", 48) : (a.h.NUMBER_0 = 48);
    null != t.NUMBER_1 ? a.setReserved("NUMBER_1", 49) : (a.h.NUMBER_1 = 49);
    null != t.NUMBER_2 ? a.setReserved("NUMBER_2", 50) : (a.h.NUMBER_2 = 50);
    null != t.NUMBER_3 ? a.setReserved("NUMBER_3", 51) : (a.h.NUMBER_3 = 51);
    null != t.NUMBER_4 ? a.setReserved("NUMBER_4", 52) : (a.h.NUMBER_4 = 52);
    null != t.NUMBER_5 ? a.setReserved("NUMBER_5", 53) : (a.h.NUMBER_5 = 53);
    null != t.NUMBER_6 ? a.setReserved("NUMBER_6", 54) : (a.h.NUMBER_6 = 54);
    null != t.NUMBER_7 ? a.setReserved("NUMBER_7", 55) : (a.h.NUMBER_7 = 55);
    null != t.NUMBER_8 ? a.setReserved("NUMBER_8", 56) : (a.h.NUMBER_8 = 56);
    null != t.NUMBER_9 ? a.setReserved("NUMBER_9", 57) : (a.h.NUMBER_9 = 57);
    null != t.A ? a.setReserved("A", 65) : (a.h.A = 65);
    null != t.B ? a.setReserved("B", 66) : (a.h.B = 66);
    null != t.C ? a.setReserved("C", 67) : (a.h.C = 67);
    null != t.D ? a.setReserved("D", 68) : (a.h.D = 68);
    null != t.E ? a.setReserved("E", 69) : (a.h.E = 69);
    null != t.F ? a.setReserved("F", 70) : (a.h.F = 70);
    null != t.G ? a.setReserved("G", 71) : (a.h.G = 71);
    null != t.H ? a.setReserved("H", 72) : (a.h.H = 72);
    null != t.I ? a.setReserved("I", 73) : (a.h.I = 73);
    null != t.J ? a.setReserved("J", 74) : (a.h.J = 74);
    null != t.K ? a.setReserved("K", 75) : (a.h.K = 75);
    null != t.L ? a.setReserved("L", 76) : (a.h.L = 76);
    null != t.M ? a.setReserved("M", 77) : (a.h.M = 77);
    null != t.N ? a.setReserved("N", 78) : (a.h.N = 78);
    null != t.O ? a.setReserved("O", 79) : (a.h.O = 79);
    null != t.P ? a.setReserved("P", 80) : (a.h.P = 80);
    null != t.Q ? a.setReserved("Q", 81) : (a.h.Q = 81);
    null != t.R ? a.setReserved("R", 82) : (a.h.R = 82);
    null != t.S ? a.setReserved("S", 83) : (a.h.S = 83);
    null != t.T ? a.setReserved("T", 84) : (a.h.T = 84);
    null != t.U ? a.setReserved("U", 85) : (a.h.U = 85);
    null != t.V ? a.setReserved("V", 86) : (a.h.V = 86);
    null != t.W ? a.setReserved("W", 87) : (a.h.W = 87);
    null != t.X ? a.setReserved("X", 88) : (a.h.X = 88);
    null != t.Y ? a.setReserved("Y", 89) : (a.h.Y = 89);
    null != t.Z ? a.setReserved("Z", 90) : (a.h.Z = 90);
    null != t.NUMPAD_0 ? a.setReserved("NUMPAD_0", 96) : (a.h.NUMPAD_0 = 96);
    null != t.NUMPAD_1 ? a.setReserved("NUMPAD_1", 97) : (a.h.NUMPAD_1 = 97);
    null != t.NUMPAD_2 ? a.setReserved("NUMPAD_2", 98) : (a.h.NUMPAD_2 = 98);
    null != t.NUMPAD_3 ? a.setReserved("NUMPAD_3", 99) : (a.h.NUMPAD_3 = 99);
    null != t.NUMPAD_4 ? a.setReserved("NUMPAD_4", 100) : (a.h.NUMPAD_4 = 100);
    null != t.NUMPAD_5 ? a.setReserved("NUMPAD_5", 101) : (a.h.NUMPAD_5 = 101);
    null != t.NUMPAD_6 ? a.setReserved("NUMPAD_6", 102) : (a.h.NUMPAD_6 = 102);
    null != t.NUMPAD_7 ? a.setReserved("NUMPAD_7", 103) : (a.h.NUMPAD_7 = 103);
    null != t.NUMPAD_8 ? a.setReserved("NUMPAD_8", 104) : (a.h.NUMPAD_8 = 104);
    null != t.NUMPAD_9 ? a.setReserved("NUMPAD_9", 105) : (a.h.NUMPAD_9 = 105);
    null != t.NUMPAD_MULTIPLY
      ? a.setReserved("NUMPAD_MULTIPLY", 106)
      : (a.h.NUMPAD_MULTIPLY = 106);
    null != t.NUMPAD_ADD
      ? a.setReserved("NUMPAD_ADD", 107)
      : (a.h.NUMPAD_ADD = 107);
    null != t.NUMPAD_ENTER
      ? a.setReserved("NUMPAD_ENTER", 108)
      : (a.h.NUMPAD_ENTER = 108);
    null != t.NUMPAD_SUBTRACT
      ? a.setReserved("NUMPAD_SUBTRACT", 109)
      : (a.h.NUMPAD_SUBTRACT = 109);
    null != t.NUMPAD_DECIMAL
      ? a.setReserved("NUMPAD_DECIMAL", 110)
      : (a.h.NUMPAD_DECIMAL = 110);
    null != t.NUMPAD_DIVIDE
      ? a.setReserved("NUMPAD_DIVIDE", 111)
      : (a.h.NUMPAD_DIVIDE = 111);
    null != t.F1 ? a.setReserved("F1", 112) : (a.h.F1 = 112);
    null != t.F2 ? a.setReserved("F2", 113) : (a.h.F2 = 113);
    null != t.F3 ? a.setReserved("F3", 114) : (a.h.F3 = 114);
    null != t.F4 ? a.setReserved("F4", 115) : (a.h.F4 = 115);
    null != t.F5 ? a.setReserved("F5", 116) : (a.h.F5 = 116);
    null != t.F6 ? a.setReserved("F6", 117) : (a.h.F6 = 117);
    null != t.F7 ? a.setReserved("F7", 118) : (a.h.F7 = 118);
    null != t.F8 ? a.setReserved("F8", 119) : (a.h.F8 = 119);
    null != t.F9 ? a.setReserved("F9", 120) : (a.h.F9 = 120);
    null != t.F10 ? a.setReserved("F10", 121) : (a.h.F10 = 121);
    null != t.F11 ? a.setReserved("F11", 122) : (a.h.F11 = 122);
    null != t.F12 ? a.setReserved("F12", 123) : (a.h.F12 = 123);
    null != t.F13 ? a.setReserved("F13", 124) : (a.h.F13 = 124);
    null != t.F14 ? a.setReserved("F14", 125) : (a.h.F14 = 125);
    null != t.F15 ? a.setReserved("F15", 126) : (a.h.F15 = 126);
    null != t.BACKSPACE ? a.setReserved("BACKSPACE", 8) : (a.h.BACKSPACE = 8);
    null != t.TAB ? a.setReserved("TAB", 9) : (a.h.TAB = 9);
    null != t.ALTERNATE ? a.setReserved("ALTERNATE", 18) : (a.h.ALTERNATE = 18);
    null != t.ENTER ? a.setReserved("ENTER", 13) : (a.h.ENTER = 13);
    null != t.COMMAND ? a.setReserved("COMMAND", 15) : (a.h.COMMAND = 15);
    null != t.SHIFT ? a.setReserved("SHIFT", 16) : (a.h.SHIFT = 16);
    null != t.CONTROL ? a.setReserved("CONTROL", 17) : (a.h.CONTROL = 17);
    null != t.BREAK ? a.setReserved("BREAK", 19) : (a.h.BREAK = 19);
    null != t.CAPS_LOCK ? a.setReserved("CAPS_LOCK", 20) : (a.h.CAPS_LOCK = 20);
    null != t.NUMPAD ? a.setReserved("NUMPAD", 21) : (a.h.NUMPAD = 21);
    null != t.ESCAPE ? a.setReserved("ESCAPE", 27) : (a.h.ESCAPE = 27);
    null != t.SPACE ? a.setReserved("SPACE", 32) : (a.h.SPACE = 32);
    null != t.PAGE_UP ? a.setReserved("PAGE_UP", 33) : (a.h.PAGE_UP = 33);
    null != t.PAGE_DOWN ? a.setReserved("PAGE_DOWN", 34) : (a.h.PAGE_DOWN = 34);
    null != t.END ? a.setReserved("END", 35) : (a.h.END = 35);
    null != t.HOME ? a.setReserved("HOME", 36) : (a.h.HOME = 36);
    null != t.LEFT ? a.setReserved("LEFT", 37) : (a.h.LEFT = 37);
    null != t.RIGHT ? a.setReserved("RIGHT", 39) : (a.h.RIGHT = 39);
    null != t.UP ? a.setReserved("UP", 38) : (a.h.UP = 38);
    null != t.DOWN ? a.setReserved("DOWN", 40) : (a.h.DOWN = 40);
    null != t.INSERT ? a.setReserved("INSERT", 45) : (a.h.INSERT = 45);
    null != t.DELETE ? a.setReserved("DELETE", 46) : (a.h.DELETE = 46);
    null != t.NUMLOCK ? a.setReserved("NUMLOCK", 144) : (a.h.NUMLOCK = 144);
    null != t.SEMICOLON
      ? a.setReserved("SEMICOLON", 186)
      : (a.h.SEMICOLON = 186);
    null != t.EQUAL ? a.setReserved("EQUAL", 187) : (a.h.EQUAL = 187);
    null != t.COMMA ? a.setReserved("COMMA", 188) : (a.h.COMMA = 188);
    null != t.MINUS ? a.setReserved("MINUS", 189) : (a.h.MINUS = 189);
    null != t.PERIOD ? a.setReserved("PERIOD", 190) : (a.h.PERIOD = 190);
    null != t.SLASH ? a.setReserved("SLASH", 191) : (a.h.SLASH = 191);
    null != t.BACKQUOTE
      ? a.setReserved("BACKQUOTE", 192)
      : (a.h.BACKQUOTE = 192);
    null != t.LEFTBRACKET
      ? a.setReserved("LEFTBRACKET", 219)
      : (a.h.LEFTBRACKET = 219);
    null != t.BACKSLASH
      ? a.setReserved("BACKSLASH", 220)
      : (a.h.BACKSLASH = 220);
    null != t.RIGHTBRACKET
      ? a.setReserved("RIGHTBRACKET", 221)
      : (a.h.RIGHTBRACKET = 221);
    null != t.QUOTE ? a.setReserved("QUOTE", 222) : (a.h.QUOTE = 222);
    return a;
  })(this);
  Y.__pool = new Fg(
    function () {
      return new Y();
    },
    function (a) {
      a.setTo(0, 0);
    }
  );
  W.__pool = new Fg(
    function () {
      return new W();
    },
    function (a) {
      a.setTo(0, 0, 0, 0);
    }
  );
  m.FRONT = 0;
  m.MIDDLE = 1;
  m.BACK = 2;
  m.CHANNELS = 32;
  m.mpx = 0;
  m.mpy = 0;
  m.mrx = 0;
  m.mry = 0;
  m.dummyVec = new D();
  m.imageApiAutoscale = !0;
  m.dummyRect = new W(0, 0, 1, 1);
  m.dummyPoint = new Y(0, 0);
  m.BASE_64_ENCODINGS =
    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
  m.BASE_64_PADDING = "=";
  Kc.AD_USER_OPEN = 100;
  Kc.AD_USER_CLOSE = 101;
  Kc.AD_LOADED = 102;
  Kc.AD_FAILED = 103;
  Kc.AD_CLICKED = 104;
  Kc.FULL_AD_USER_OPEN = 105;
  Kc.FULL_AD_USER_CLOSE = 106;
  Kc.FULL_AD_LOADED = 107;
  Kc.FULL_AD_FAILED = 108;
  Kc.FULL_AD_CLICKED = 109;
  Kc.PURCHASE_READY = 200;
  Kc.PURCHASE_SUCCESS = 201;
  Kc.PURCHASE_FAIL = 202;
  Kc.PURCHASE_RESTORE = 203;
  Kc.PURCHASE_CANCEL = 204;
  Kc.PURCHASE_PRODUCTS_VERIFIED = 205;
  Kc.PURCHASE_PRODUCT_VALIDATED = 206;
  Kc.GAME_CENTER_READY = 300;
  Kc.GAME_CENTER_SCORE = 301;
  Kc.GAME_CENTER_ACHIEVEMENT = 302;
  Kc.GAME_CENTER_ACHIEVEMENT_RESET = 303;
  Kc.GAME_CENTER_READY_FAIL = 304;
  Kc.GAME_CENTER_SCORE_FAIL = 305;
  Kc.GAME_CENTER_ACHIEVEMENT_FAIL = 306;
  Kc.GAME_CENTER_ACHIEVEMENT_RESET_FAIL = 307;
  Kc.KEYBOARD_EVENT = 400;
  Kc.KEYBOARD_DONE = 401;
  Kc.KEYBOARD_SHOW = 402;
  Kc.KEYBOARD_HIDE = 403;
  gm.stringBlendMap = (function (a) {
    a = new la();
    null != t.add ? a.setReserved("add", 0) : (a.h.add = 0);
    null != t.alpha ? a.setReserved("alpha", 1) : (a.h.alpha = 1);
    null != t.darken ? a.setReserved("darken", 2) : (a.h.darken = 2);
    null != t.difference
      ? a.setReserved("difference", 3)
      : (a.h.difference = 3);
    null != t.erase ? a.setReserved("erase", 4) : (a.h.erase = 4);
    null != t.hardlight ? a.setReserved("hardlight", 5) : (a.h.hardlight = 5);
    null != t.invert ? a.setReserved("invert", 6) : (a.h.invert = 6);
    null != t.lighten ? a.setReserved("lighten", 8) : (a.h.lighten = 8);
    null != t.multiply ? a.setReserved("multiply", 9) : (a.h.multiply = 9);
    null != t.normal ? a.setReserved("normal", 10) : (a.h.normal = 10);
    null != t.overlay ? a.setReserved("overlay", 11) : (a.h.overlay = 11);
    null != t.screen ? a.setReserved("screen", 12) : (a.h.screen = 12);
    null != t.subtract ? a.setReserved("subtract", 14) : (a.h.subtract = 14);
    return a;
  })(this);
  Qd.drawnStringCache = new la();
  Qd.drawnStringCacheKeys = [];
  hd.MAX_TEXTURE_CAP = 4096;
  Gd._1X = new Gd(1);
  Gd._1_5X = new Gd(1.5);
  Gd._2X = new Gd(2);
  Gd._3X = new Gd(3);
  Gd._4X = new Gd(4);
  Mg.NO_SCALING = 0;
  Mg.FULLSCREEN = 1;
  Mg.STRETCH_TO_FIT = 2;
  Mg.SCALE_TO_FIT_LETTERBOX = 3;
  Mg.SCALE_TO_FIT_FILL = 4;
  Mg.SCALE_TO_FIT_FULLSCREEN = 5;
  Af._storedFonts = new la();
  Af.ZERO_POINT = new Y();
  Nh.fontData =
    " 36000000000000000000!26101010001000\"46101010100000000000000000#66010100111110010100111110010100000000$56001000111011000001101110000100%66100100000100001000010000010010000000&66011000100000011010100100011010000000'26101000000000(36010100100100010000)36100010010010100000*46000010100100101000000000+46000001001110010000000000,36000000000000010100-46000000001110000000000000.26000000001000/66000010000100001000010000100000000000056011001001010010100100110000000156011000010000100001000010000000256111000001001100100001111000000356111000001001100000101110000000456100101001010010011100001000000556111101000011100000101110000000656011001000011100100100110000000756111000001000010001100001000000856011001001001100100100110000000956011001001010010011100001000000:26001000100000;26001000101000<46001001001000010000100000=46000011100000111000000000>46100001000010010010000000?56111000001001100000000100000000@66011100100010101110101010011100000000A56011001001010010111101001000000B56111001001011100100101110000000C56011001001010000100100110000000D56111001001010010100101110000000E56111101000011000100001111000000F56111101000010000110001000000000G56011001000010110100100111000000H56100101001011110100101001000000I26101010101000J56000100001000010100100110000000K56100101001010010111001001000000L46100010001000100011100000M66100010100010110110101010100010000000N56100101001011010101101001000000O56011001001010010100100110000000P56111001001010010111001000000000Q56011001001010010100100110000010R56111001001010010111001001000000S56011101000001100000101110000000T46111001000100010001000000U56100101001010010100100110000000V56100101001010010101000100000000W66100010100010101010110110100010000000X56100101001001100100101001000000Y56100101001010010011100001001100Z56111100001001100100001111000000[36110100100100110000}46110001000010010011000000]36110010010010110000^46010010100000000000000000_46000000000000000011110000'26101000000000a56000000111010010100100111000000b56100001110010010100101110000000c46000001101000100001100000d56000100111010010100100111000000e56000000110010110110000110000000f46011010001000110010000000g5700000011001001010010011100001001100h56100001110010010100101001000000i26100010101000j37010000010010010010100k56100001001010010111001001000000l26101010101000m66000000111100101010101010101010000000n56000001110010010100101001000000o56000000110010010100100110000000p5700000111001001010010111001000010000q5700000011101001010010011100001000010r46000010101100100010000000s56000000111011000001101110000000t46100011001000100001100000u56000001001010010100100111000000v56000001001010010101000100000000w66000000101010101010101010011110000000x56000001001010010011001001000000y5700000100101001010010011100001001100z56000001111000100010001111000000{46011001001000010001100000|26101010101000}46110001000010010011000000~56010101010000000000000000000000\\46111010101010101011100000";
  fp.LEFT = 1;
  fp.RIGHT = 2;
  fp.CENTER = 3;
  rd.CONTEXT_LOST = "glcontextlost";
  rd.CONTEXT_RESTORED = "glcontextrestored";
  rd.vertexShader =
    "\n#ifdef GL_ES\n\tprecision mediump float;\n#endif\n\nattribute vec4 aVertex;\n\nattribute vec2 aTexCoord;\nvarying vec2 vTexCoord;\n\nvoid main() {\n\tvTexCoord = aTexCoord;\n\tgl_Position = vec4(aVertex.x, aVertex.y, 0.0, 1.0);\n}";
  jb.IN = "in";
  jb.OUT = "out";
  jb.THROUGH = "through";
  Ze.SLIDE_UP = "up";
  Ze.SLIDE_DOWN = "down";
  Ze.SLIDE_LEFT = "left";
  Ze.SLIDE_RIGHT = "right";
  z.BOOLEAN = new Xf("boolean", 1);
  z.INTEGER = new Xf("integer", 4);
  z.FLOAT = new Xf("float", 4);
  z.STRING = new Xf("string", 4);
  z.LIST = new Xf("list", 4);
  z.DYNAMIC = new Xf("dynamic", 8);
  wi.basicTypes = (function (a) {
    a = [];
    a.push(z.BOOLEAN);
    a.push(z.INTEGER);
    a.push(z.FLOAT);
    a.push(z.STRING);
    a.push(z.LIST);
    a.push(z.DYNAMIC);
    jc.initializeType();
    Gc.initializeType();
    $c.initializeType();
    a.push(jc.MBS_HEADER);
    a.push(Gc.MBS_TYPE_INFO);
    a.push($c.MBS_FIELD_INFO);
    return a;
  })(this);
  $a.GROUP_OFFSET = 1e6;
  $a.manifold = new Yj();
  cb.INHERIT_ID = -1e3;
  cb.REGION_ID = -2;
  cb.PLAYER_ID = 0;
  cb.TERRAIN_ID = 1;
  cb.DOODAD_ID = 2;
  cb.ACTOR_ID = 3;
  Aa.fixedCenter = 0;
  Aa.showWherePressed = 1;
  Aa.viewOffsetX = 0;
  Aa.viewOffsetY = 0;
  Aa.initialized = !1;
  Ng.NORMAL_PHYSICS = 0;
  Ng.SIMPLE_PHYSICS = 1;
  Ng.MINIMAL_PHYSICS = 2;
  nd.UNSET_ID = -1;
  km.MAX_VERTICES = 200;
  wf.muted = !1;
  wf.masterVolume = 1;
  oh.UNSET_ID = -1;
  ue.allAnimations = [];
  oc.recycledCollisions = [];
  oc.collisionResponses = new Ca();
  Rd.freedCollisionPoints = [];
  Uf.WHITE = -1;
  Uf.TRANSPARENT = -2;
  Qf.infoArray = [];
  Re.NO_AUTOTILE_DATA = 0;
  Re.CORNER_TL = 1;
  Re.CORNER_TR = 2;
  Re.CORNER_BR = 4;
  Re.CORNER_BL = 8;
  Re.SIDE_L = 16;
  Re.SIDE_T = 32;
  Re.SIDE_R = 64;
  Re.SIDE_B = 128;
  Fc.dummyRect = new W();
  le.TILESET_CACHE_MULTIPLIER = 1e6;
  le.cacheSource = new Ca();
  le.autotileFlagPointMap = (function (a) {
    a = new Ca();
    var b = Re.CORNER_TL,
      c = new Y(-1, -1);
    a.h[b] = c;
    b = Re.CORNER_TR;
    c = new Y(1, -1);
    a.h[b] = c;
    b = Re.CORNER_BL;
    c = new Y(-1, 1);
    a.h[b] = c;
    b = Re.CORNER_BR;
    c = new Y(1, 1);
    a.h[b] = c;
    b = Re.SIDE_T;
    c = new Y(0, -1);
    a.h[b] = c;
    b = Re.SIDE_B;
    c = new Y(0, 1);
    a.h[b] = c;
    b = Re.SIDE_L;
    c = new Y(-1, 0);
    a.h[b] = c;
    b = Re.SIDE_R;
    c = new Y(1, 0);
    a.h[b] = c;
    return a;
  })(this);
  Gf.temp = new W();
  wc.BLACK = -16777216;
  wc.WHITE = -1;
  wc.RED = -65536;
  wc.GREEN = -16711936;
  wc.BLUE = -16776961;
  wc.CYAN = -16711681;
  wc.MAGENTA = -65281;
  wc.YELLOW = -256;
  Ia.LUMA_R = 0.212671;
  Ia.LUMA_G = 0.71516;
  Ia.LUMA_B = 0.072169;
  Ia.LUMA_R2 = 0.3086;
  Ia.LUMA_G2 = 0.6094;
  Ia.LUMA_B2 = 0.082;
  Ia.INV3 = 0.3333333333333333;
  Kd.BLACK = 0;
  Kd.WHITE = 16777215;
  Kd.RED = 16711680;
  Kd.GREEN = 65280;
  Kd.BLUE = 255;
  Kd.CYAN = 65535;
  Kd.MAGENTA = 16711935;
  Kd.YELLOW = 16776960;
  xi.__identity = new xi();
  ya.__identity = new ya();
  ya.__pool = new Fg(
    function () {
      return new ya();
    },
    function (a) {
      a.identity();
    }
  );
  ya.__matrix3 = new xi();
  sc.__pool = new Fg(
    function () {
      return new sc();
    },
    function (a) {
      a.__identity();
    }
  );
  J.INTEGER_MAX = 1e8;
  J.NUMBER_MAX_VALUE = 1.79769313486231e308;
  J.blackColor = -16777216;
  J.rate = 1;
  J.camera = new Y();
  J.cloner = new Zo();
  J._bitmap = new la();
  J._seed = 0;
  J._volume = 1;
  J._pan = 0;
  J._soundTransform = new Yf();
  J.DEG = 57.29577951308402;
  J.RAD = 0.01745329251994278;
  J.point = new Y();
  J.point2 = new Y();
  J.zero = new Y();
  J.rect = new W();
  J.matrix = new ya();
  J.sprite = new gb();
  J.collision = new oc();
  xa.linear = new Km();
  xa.sineIn = new Xm();
  xa.sineOut = new Zm();
  xa.sineInOut = new Ym();
  xa.sineOutIn = new $m();
  xa.quadIn = new Lm();
  xa.quadOut = new Nm();
  xa.quadInOut = new Mm();
  xa.quadOutIn = new Om();
  xa.cubicIn = new ym();
  xa.cubicOut = new Am();
  xa.cubicInOut = new zm();
  xa.cubicOutIn = new Bm();
  xa.quartIn = new Pm();
  xa.quartOut = new Rm();
  xa.quartInOut = new Qm();
  xa.quartOutIn = new Sm();
  xa.quintIn = new Tm();
  xa.quintOut = new Vm();
  xa.quintInOut = new Um();
  xa.quintOutIn = new Wm();
  xa.expoIn = new Gm();
  xa.expoOut = new Im();
  xa.expoInOut = new Hm();
  xa.expoOutIn = new Jm();
  xa.circIn = new um();
  xa.circOut = new wm();
  xa.circInOut = new vm();
  xa.circOutIn = new xm();
  xa.bounceIn = new qm();
  xa.bounceOut = new sm();
  xa.bounceInOut = new rm();
  xa.bounceOutIn = new tm();
  xa.backIn = new mm();
  xa.backOut = new om();
  xa.backInOut = new nm();
  xa.backOutIn = new pm();
  xa.elasticIn = new Cm();
  xa.elasticOut = new Em();
  xa.elasticInOut = new Dm();
  xa.elasticOutIn = new Fm();
  xa.warpOut = new cn();
  xa.warpIn = new an();
  xa.warpInOut = new bn();
  xa.warpOutIn = new dn();
  yi.PI = 3.141592653589793;
  yi.PI_H = 1.5707963267948966;
  yi.LN_2 = 0.6931471805599453;
  yi.LN_2_10 = 6.931471805599453;
  yi.overshoot = 1.70158;
  yi.amplitude = 1;
  yi.period = 3e-4;
  sb.activeObjects = [];
  sb.finishedObjects = [];
  ia._initialized = !1;
  Wg.VAL_ABSENT = -2147483648;
  Wg.EMPTY_SLOT = -1;
  Wg.NULL_POINTER = -1;
  tg.KEY_ABSENT = -2147483648;
  tg.VAL_ABSENT = -2147483648;
  tg.EMPTY_SLOT = -1;
  tg.NULL_POINTER = -1;
  Vg.FIXED = 0;
  Vg.MILD = -1;
  Vg.NORMAL = -2;
  Vg.DOUBLE = -3;
  we.USE_CACHE = !1;
  we.USE_ENUM_INDEX = !1;
  we.BASE64 =
    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
  Ie.DEFAULT_RESOLVER = new kn();
  Ie.BASE64 =
    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
  ug.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
  ug.BYTES = Ra.ofString(ug.CHARS);
  xe.i64tmp = new Fa(0, 0);
  Ch.escapes = (function (a) {
    a = new la();
    null != t.lt ? a.setReserved("lt", "<") : (a.h.lt = "<");
    null != t.gt ? a.setReserved("gt", ">") : (a.h.gt = ">");
    null != t.amp ? a.setReserved("amp", "&") : (a.h.amp = "&");
    null != t.quot ? a.setReserved("quot", '"') : (a.h.quot = '"');
    null != t.apos ? a.setReserved("apos", "'") : (a.h.apos = "'");
    return a;
  })(this);
  Bi.p1 = 0;
  Bi.readPos = 0;
  Bi.tokenMin = 0;
  Bi.tokenMax = 0;
  u.__toStr = {}.toString;
  Uh.BYTES_PER_ELEMENT = 4;
  Vh.BYTES_PER_ELEMENT = 8;
  Wh.BYTES_PER_ELEMENT = 1;
  bb.activeRequests = 0;
  bb.requestLimit = 4;
  bb.requestQueue = new yf();
  zb.dummyCharacter = "\u007f";
  zb.windowID = 0;
  bg.minCodePoint = 0;
  bg.maxCodePoint = 1114111;
  bg.minHighSurrogate = 55296;
  bg.maxHighSurrogate = 56319;
  bg.minLowSurrogate = 56320;
  bg.maxLowSurrogate = 57343;
  pb.__base64Chars =
    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
  dq.FT_LOAD_FORCE_AUTOHINT = 32;
  q.DEPTH_BUFFER_BIT = 256;
  q.STENCIL_BUFFER_BIT = 1024;
  q.COLOR_BUFFER_BIT = 16384;
  q.POINTS = 0;
  q.LINES = 1;
  q.LINE_LOOP = 2;
  q.LINE_STRIP = 3;
  q.TRIANGLES = 4;
  q.TRIANGLE_STRIP = 5;
  q.TRIANGLE_FAN = 6;
  q.ZERO = 0;
  q.ONE = 1;
  q.SRC_COLOR = 768;
  q.ONE_MINUS_SRC_COLOR = 769;
  q.SRC_ALPHA = 770;
  q.ONE_MINUS_SRC_ALPHA = 771;
  q.DST_ALPHA = 772;
  q.ONE_MINUS_DST_ALPHA = 773;
  q.DST_COLOR = 774;
  q.ONE_MINUS_DST_COLOR = 775;
  q.SRC_ALPHA_SATURATE = 776;
  q.FUNC_ADD = 32774;
  q.BLEND_EQUATION = 32777;
  q.BLEND_EQUATION_RGB = 32777;
  q.BLEND_EQUATION_ALPHA = 34877;
  q.FUNC_SUBTRACT = 32778;
  q.FUNC_REVERSE_SUBTRACT = 32779;
  q.BLEND_DST_RGB = 32968;
  q.BLEND_SRC_RGB = 32969;
  q.BLEND_DST_ALPHA = 32970;
  q.BLEND_SRC_ALPHA = 32971;
  q.CONSTANT_COLOR = 32769;
  q.ONE_MINUS_CONSTANT_COLOR = 32770;
  q.CONSTANT_ALPHA = 32771;
  q.ONE_MINUS_CONSTANT_ALPHA = 32772;
  q.BLEND_COLOR = 32773;
  q.ARRAY_BUFFER = 34962;
  q.ELEMENT_ARRAY_BUFFER = 34963;
  q.ARRAY_BUFFER_BINDING = 34964;
  q.ELEMENT_ARRAY_BUFFER_BINDING = 34965;
  q.STREAM_DRAW = 35040;
  q.STATIC_DRAW = 35044;
  q.DYNAMIC_DRAW = 35048;
  q.BUFFER_SIZE = 34660;
  q.BUFFER_USAGE = 34661;
  q.CURRENT_VERTEX_ATTRIB = 34342;
  q.FRONT = 1028;
  q.BACK = 1029;
  q.FRONT_AND_BACK = 1032;
  q.CULL_FACE = 2884;
  q.BLEND = 3042;
  q.DITHER = 3024;
  q.STENCIL_TEST = 2960;
  q.DEPTH_TEST = 2929;
  q.SCISSOR_TEST = 3089;
  q.POLYGON_OFFSET_FILL = 32823;
  q.SAMPLE_ALPHA_TO_COVERAGE = 32926;
  q.SAMPLE_COVERAGE = 32928;
  q.NO_ERROR = 0;
  q.INVALID_ENUM = 1280;
  q.INVALID_VALUE = 1281;
  q.INVALID_OPERATION = 1282;
  q.OUT_OF_MEMORY = 1285;
  q.CW = 2304;
  q.CCW = 2305;
  q.LINE_WIDTH = 2849;
  q.ALIASED_POINT_SIZE_RANGE = 33901;
  q.ALIASED_LINE_WIDTH_RANGE = 33902;
  q.CULL_FACE_MODE = 2885;
  q.FRONT_FACE = 2886;
  q.DEPTH_RANGE = 2928;
  q.DEPTH_WRITEMASK = 2930;
  q.DEPTH_CLEAR_VALUE = 2931;
  q.DEPTH_FUNC = 2932;
  q.STENCIL_CLEAR_VALUE = 2961;
  q.STENCIL_FUNC = 2962;
  q.STENCIL_FAIL = 2964;
  q.STENCIL_PASS_DEPTH_FAIL = 2965;
  q.STENCIL_PASS_DEPTH_PASS = 2966;
  q.STENCIL_REF = 2967;
  q.STENCIL_VALUE_MASK = 2963;
  q.STENCIL_WRITEMASK = 2968;
  q.STENCIL_BACK_FUNC = 34816;
  q.STENCIL_BACK_FAIL = 34817;
  q.STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
  q.STENCIL_BACK_PASS_DEPTH_PASS = 34819;
  q.STENCIL_BACK_REF = 36003;
  q.STENCIL_BACK_VALUE_MASK = 36004;
  q.STENCIL_BACK_WRITEMASK = 36005;
  q.VIEWPORT = 2978;
  q.SCISSOR_BOX = 3088;
  q.COLOR_CLEAR_VALUE = 3106;
  q.COLOR_WRITEMASK = 3107;
  q.UNPACK_ALIGNMENT = 3317;
  q.PACK_ALIGNMENT = 3333;
  q.MAX_TEXTURE_SIZE = 3379;
  q.MAX_VIEWPORT_DIMS = 3386;
  q.SUBPIXEL_BITS = 3408;
  q.RED_BITS = 3410;
  q.GREEN_BITS = 3411;
  q.BLUE_BITS = 3412;
  q.ALPHA_BITS = 3413;
  q.DEPTH_BITS = 3414;
  q.STENCIL_BITS = 3415;
  q.POLYGON_OFFSET_UNITS = 10752;
  q.POLYGON_OFFSET_FACTOR = 32824;
  q.TEXTURE_BINDING_2D = 32873;
  q.SAMPLE_BUFFERS = 32936;
  q.SAMPLES = 32937;
  q.SAMPLE_COVERAGE_VALUE = 32938;
  q.SAMPLE_COVERAGE_INVERT = 32939;
  q.NUM_COMPRESSED_TEXTURE_FORMATS = 34466;
  q.COMPRESSED_TEXTURE_FORMATS = 34467;
  q.DONT_CARE = 4352;
  q.FASTEST = 4353;
  q.NICEST = 4354;
  q.GENERATE_MIPMAP_HINT = 33170;
  q.BYTE = 5120;
  q.UNSIGNED_BYTE = 5121;
  q.SHORT = 5122;
  q.UNSIGNED_SHORT = 5123;
  q.INT = 5124;
  q.UNSIGNED_INT = 5125;
  q.FLOAT = 5126;
  q.DEPTH_COMPONENT = 6402;
  q.ALPHA = 6406;
  q.RGB = 6407;
  q.RGBA = 6408;
  q.LUMINANCE = 6409;
  q.LUMINANCE_ALPHA = 6410;
  q.UNSIGNED_SHORT_4_4_4_4 = 32819;
  q.UNSIGNED_SHORT_5_5_5_1 = 32820;
  q.UNSIGNED_SHORT_5_6_5 = 33635;
  q.FRAGMENT_SHADER = 35632;
  q.VERTEX_SHADER = 35633;
  q.MAX_VERTEX_ATTRIBS = 34921;
  q.MAX_VERTEX_UNIFORM_VECTORS = 36347;
  q.MAX_VARYING_VECTORS = 36348;
  q.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
  q.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
  q.MAX_TEXTURE_IMAGE_UNITS = 34930;
  q.MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
  q.SHADER_TYPE = 35663;
  q.DELETE_STATUS = 35712;
  q.LINK_STATUS = 35714;
  q.VALIDATE_STATUS = 35715;
  q.ATTACHED_SHADERS = 35717;
  q.ACTIVE_UNIFORMS = 35718;
  q.ACTIVE_ATTRIBUTES = 35721;
  q.SHADING_LANGUAGE_VERSION = 35724;
  q.CURRENT_PROGRAM = 35725;
  q.NEVER = 512;
  q.LESS = 513;
  q.EQUAL = 514;
  q.LEQUAL = 515;
  q.GREATER = 516;
  q.NOTEQUAL = 517;
  q.GEQUAL = 518;
  q.ALWAYS = 519;
  q.KEEP = 7680;
  q.REPLACE = 7681;
  q.INCR = 7682;
  q.DECR = 7683;
  q.INVERT = 5386;
  q.INCR_WRAP = 34055;
  q.DECR_WRAP = 34056;
  q.VENDOR = 7936;
  q.RENDERER = 7937;
  q.VERSION = 7938;
  q.EXTENSIONS = 7939;
  q.NEAREST = 9728;
  q.LINEAR = 9729;
  q.NEAREST_MIPMAP_NEAREST = 9984;
  q.LINEAR_MIPMAP_NEAREST = 9985;
  q.NEAREST_MIPMAP_LINEAR = 9986;
  q.LINEAR_MIPMAP_LINEAR = 9987;
  q.TEXTURE_MAG_FILTER = 10240;
  q.TEXTURE_MIN_FILTER = 10241;
  q.TEXTURE_WRAP_S = 10242;
  q.TEXTURE_WRAP_T = 10243;
  q.TEXTURE_2D = 3553;
  q.TEXTURE = 5890;
  q.TEXTURE_CUBE_MAP = 34067;
  q.TEXTURE_BINDING_CUBE_MAP = 34068;
  q.TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
  q.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
  q.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
  q.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
  q.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
  q.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
  q.MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
  q.TEXTURE0 = 33984;
  q.TEXTURE1 = 33985;
  q.TEXTURE2 = 33986;
  q.TEXTURE3 = 33987;
  q.TEXTURE4 = 33988;
  q.TEXTURE5 = 33989;
  q.TEXTURE6 = 33990;
  q.TEXTURE7 = 33991;
  q.TEXTURE8 = 33992;
  q.TEXTURE9 = 33993;
  q.TEXTURE10 = 33994;
  q.TEXTURE11 = 33995;
  q.TEXTURE12 = 33996;
  q.TEXTURE13 = 33997;
  q.TEXTURE14 = 33998;
  q.TEXTURE15 = 33999;
  q.TEXTURE16 = 34e3;
  q.TEXTURE17 = 34001;
  q.TEXTURE18 = 34002;
  q.TEXTURE19 = 34003;
  q.TEXTURE20 = 34004;
  q.TEXTURE21 = 34005;
  q.TEXTURE22 = 34006;
  q.TEXTURE23 = 34007;
  q.TEXTURE24 = 34008;
  q.TEXTURE25 = 34009;
  q.TEXTURE26 = 34010;
  q.TEXTURE27 = 34011;
  q.TEXTURE28 = 34012;
  q.TEXTURE29 = 34013;
  q.TEXTURE30 = 34014;
  q.TEXTURE31 = 34015;
  q.ACTIVE_TEXTURE = 34016;
  q.REPEAT = 10497;
  q.CLAMP_TO_EDGE = 33071;
  q.MIRRORED_REPEAT = 33648;
  q.FLOAT_VEC2 = 35664;
  q.FLOAT_VEC3 = 35665;
  q.FLOAT_VEC4 = 35666;
  q.INT_VEC2 = 35667;
  q.INT_VEC3 = 35668;
  q.INT_VEC4 = 35669;
  q.BOOL = 35670;
  q.BOOL_VEC2 = 35671;
  q.BOOL_VEC3 = 35672;
  q.BOOL_VEC4 = 35673;
  q.FLOAT_MAT2 = 35674;
  q.FLOAT_MAT3 = 35675;
  q.FLOAT_MAT4 = 35676;
  q.SAMPLER_2D = 35678;
  q.SAMPLER_CUBE = 35680;
  q.VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
  q.VERTEX_ATTRIB_ARRAY_SIZE = 34339;
  q.VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
  q.VERTEX_ATTRIB_ARRAY_TYPE = 34341;
  q.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
  q.VERTEX_ATTRIB_ARRAY_POINTER = 34373;
  q.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975;
  q.IMPLEMENTATION_COLOR_READ_TYPE = 35738;
  q.IMPLEMENTATION_COLOR_READ_FORMAT = 35739;
  q.VERTEX_PROGRAM_POINT_SIZE = 34370;
  q.POINT_SPRITE = 34913;
  q.COMPILE_STATUS = 35713;
  q.LOW_FLOAT = 36336;
  q.MEDIUM_FLOAT = 36337;
  q.HIGH_FLOAT = 36338;
  q.LOW_INT = 36339;
  q.MEDIUM_INT = 36340;
  q.HIGH_INT = 36341;
  q.FRAMEBUFFER = 36160;
  q.RENDERBUFFER = 36161;
  q.RGBA4 = 32854;
  q.RGB5_A1 = 32855;
  q.RGB565 = 36194;
  q.DEPTH_COMPONENT16 = 33189;
  q.STENCIL_INDEX = 6401;
  q.STENCIL_INDEX8 = 36168;
  q.DEPTH_STENCIL = 34041;
  q.RENDERBUFFER_WIDTH = 36162;
  q.RENDERBUFFER_HEIGHT = 36163;
  q.RENDERBUFFER_INTERNAL_FORMAT = 36164;
  q.RENDERBUFFER_RED_SIZE = 36176;
  q.RENDERBUFFER_GREEN_SIZE = 36177;
  q.RENDERBUFFER_BLUE_SIZE = 36178;
  q.RENDERBUFFER_ALPHA_SIZE = 36179;
  q.RENDERBUFFER_DEPTH_SIZE = 36180;
  q.RENDERBUFFER_STENCIL_SIZE = 36181;
  q.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048;
  q.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049;
  q.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050;
  q.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051;
  q.COLOR_ATTACHMENT0 = 36064;
  q.DEPTH_ATTACHMENT = 36096;
  q.STENCIL_ATTACHMENT = 36128;
  q.DEPTH_STENCIL_ATTACHMENT = 33306;
  q.NONE = 0;
  q.FRAMEBUFFER_COMPLETE = 36053;
  q.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
  q.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
  q.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
  q.FRAMEBUFFER_UNSUPPORTED = 36061;
  q.FRAMEBUFFER_BINDING = 36006;
  q.RENDERBUFFER_BINDING = 36007;
  q.MAX_RENDERBUFFER_SIZE = 34024;
  q.INVALID_FRAMEBUFFER_OPERATION = 1286;
  q.UNPACK_FLIP_Y_WEBGL = 37440;
  q.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441;
  q.CONTEXT_LOST_WEBGL = 37442;
  q.UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443;
  q.BROWSER_DEFAULT_WEBGL = 37444;
  q.READ_BUFFER = 3074;
  q.UNPACK_ROW_LENGTH = 3314;
  q.UNPACK_SKIP_ROWS = 3315;
  q.UNPACK_SKIP_PIXELS = 3316;
  q.PACK_ROW_LENGTH = 3330;
  q.PACK_SKIP_ROWS = 3331;
  q.PACK_SKIP_PIXELS = 3332;
  q.TEXTURE_BINDING_3D = 32874;
  q.UNPACK_SKIP_IMAGES = 32877;
  q.UNPACK_IMAGE_HEIGHT = 32878;
  q.MAX_3D_TEXTURE_SIZE = 32883;
  q.MAX_ELEMENTS_VERTICES = 33e3;
  q.MAX_ELEMENTS_INDICES = 33001;
  q.MAX_TEXTURE_LOD_BIAS = 34045;
  q.MAX_FRAGMENT_UNIFORM_COMPONENTS = 35657;
  q.MAX_VERTEX_UNIFORM_COMPONENTS = 35658;
  q.MAX_ARRAY_TEXTURE_LAYERS = 35071;
  q.MIN_PROGRAM_TEXEL_OFFSET = 35076;
  q.MAX_PROGRAM_TEXEL_OFFSET = 35077;
  q.MAX_VARYING_COMPONENTS = 35659;
  q.FRAGMENT_SHADER_DERIVATIVE_HINT = 35723;
  q.RASTERIZER_DISCARD = 35977;
  q.VERTEX_ARRAY_BINDING = 34229;
  q.MAX_VERTEX_OUTPUT_COMPONENTS = 37154;
  q.MAX_FRAGMENT_INPUT_COMPONENTS = 37157;
  q.MAX_SERVER_WAIT_TIMEOUT = 37137;
  q.MAX_ELEMENT_INDEX = 36203;
  q.RED = 6403;
  q.RGB8 = 32849;
  q.RGBA8 = 32856;
  q.RGB10_A2 = 32857;
  q.TEXTURE_3D = 32879;
  q.TEXTURE_WRAP_R = 32882;
  q.TEXTURE_MIN_LOD = 33082;
  q.TEXTURE_MAX_LOD = 33083;
  q.TEXTURE_BASE_LEVEL = 33084;
  q.TEXTURE_MAX_LEVEL = 33085;
  q.TEXTURE_COMPARE_MODE = 34892;
  q.TEXTURE_COMPARE_FUNC = 34893;
  q.SRGB = 35904;
  q.SRGB8 = 35905;
  q.SRGB8_ALPHA8 = 35907;
  q.COMPARE_REF_TO_TEXTURE = 34894;
  q.RGBA32F = 34836;
  q.RGB32F = 34837;
  q.RGBA16F = 34842;
  q.RGB16F = 34843;
  q.TEXTURE_2D_ARRAY = 35866;
  q.TEXTURE_BINDING_2D_ARRAY = 35869;
  q.R11F_G11F_B10F = 35898;
  q.RGB9_E5 = 35901;
  q.RGBA32UI = 36208;
  q.RGB32UI = 36209;
  q.RGBA16UI = 36214;
  q.RGB16UI = 36215;
  q.RGBA8UI = 36220;
  q.RGB8UI = 36221;
  q.RGBA32I = 36226;
  q.RGB32I = 36227;
  q.RGBA16I = 36232;
  q.RGB16I = 36233;
  q.RGBA8I = 36238;
  q.RGB8I = 36239;
  q.RED_INTEGER = 36244;
  q.RGB_INTEGER = 36248;
  q.RGBA_INTEGER = 36249;
  q.R8 = 33321;
  q.RG8 = 33323;
  q.R16F = 33325;
  q.R32F = 33326;
  q.RG16F = 33327;
  q.RG32F = 33328;
  q.R8I = 33329;
  q.R8UI = 33330;
  q.R16I = 33331;
  q.R16UI = 33332;
  q.R32I = 33333;
  q.R32UI = 33334;
  q.RG8I = 33335;
  q.RG8UI = 33336;
  q.RG16I = 33337;
  q.RG16UI = 33338;
  q.RG32I = 33339;
  q.RG32UI = 33340;
  q.R8_SNORM = 36756;
  q.RG8_SNORM = 36757;
  q.RGB8_SNORM = 36758;
  q.RGBA8_SNORM = 36759;
  q.RGB10_A2UI = 36975;
  q.TEXTURE_IMMUTABLE_FORMAT = 37167;
  q.TEXTURE_IMMUTABLE_LEVELS = 33503;
  q.UNSIGNED_INT_2_10_10_10_REV = 33640;
  q.UNSIGNED_INT_10F_11F_11F_REV = 35899;
  q.UNSIGNED_INT_5_9_9_9_REV = 35902;
  q.FLOAT_32_UNSIGNED_INT_24_8_REV = 36269;
  q.UNSIGNED_INT_24_8 = 34042;
  q.HALF_FLOAT = 5131;
  q.RG = 33319;
  q.RG_INTEGER = 33320;
  q.INT_2_10_10_10_REV = 36255;
  q.CURRENT_QUERY = 34917;
  q.QUERY_RESULT = 34918;
  q.QUERY_RESULT_AVAILABLE = 34919;
  q.ANY_SAMPLES_PASSED = 35887;
  q.ANY_SAMPLES_PASSED_CONSERVATIVE = 36202;
  q.MAX_DRAW_BUFFERS = 34852;
  q.DRAW_BUFFER0 = 34853;
  q.DRAW_BUFFER1 = 34854;
  q.DRAW_BUFFER2 = 34855;
  q.DRAW_BUFFER3 = 34856;
  q.DRAW_BUFFER4 = 34857;
  q.DRAW_BUFFER5 = 34858;
  q.DRAW_BUFFER6 = 34859;
  q.DRAW_BUFFER7 = 34860;
  q.DRAW_BUFFER8 = 34861;
  q.DRAW_BUFFER9 = 34862;
  q.DRAW_BUFFER10 = 34863;
  q.DRAW_BUFFER11 = 34864;
  q.DRAW_BUFFER12 = 34865;
  q.DRAW_BUFFER13 = 34866;
  q.DRAW_BUFFER14 = 34867;
  q.DRAW_BUFFER15 = 34868;
  q.MAX_COLOR_ATTACHMENTS = 36063;
  q.COLOR_ATTACHMENT1 = 36065;
  q.COLOR_ATTACHMENT2 = 36066;
  q.COLOR_ATTACHMENT3 = 36067;
  q.COLOR_ATTACHMENT4 = 36068;
  q.COLOR_ATTACHMENT5 = 36069;
  q.COLOR_ATTACHMENT6 = 36070;
  q.COLOR_ATTACHMENT7 = 36071;
  q.COLOR_ATTACHMENT8 = 36072;
  q.COLOR_ATTACHMENT9 = 36073;
  q.COLOR_ATTACHMENT10 = 36074;
  q.COLOR_ATTACHMENT11 = 36075;
  q.COLOR_ATTACHMENT12 = 36076;
  q.COLOR_ATTACHMENT13 = 36077;
  q.COLOR_ATTACHMENT14 = 36078;
  q.COLOR_ATTACHMENT15 = 36079;
  q.SAMPLER_3D = 35679;
  q.SAMPLER_2D_SHADOW = 35682;
  q.SAMPLER_2D_ARRAY = 36289;
  q.SAMPLER_2D_ARRAY_SHADOW = 36292;
  q.SAMPLER_CUBE_SHADOW = 36293;
  q.INT_SAMPLER_2D = 36298;
  q.INT_SAMPLER_3D = 36299;
  q.INT_SAMPLER_CUBE = 36300;
  q.INT_SAMPLER_2D_ARRAY = 36303;
  q.UNSIGNED_INT_SAMPLER_2D = 36306;
  q.UNSIGNED_INT_SAMPLER_3D = 36307;
  q.UNSIGNED_INT_SAMPLER_CUBE = 36308;
  q.UNSIGNED_INT_SAMPLER_2D_ARRAY = 36311;
  q.MAX_SAMPLES = 36183;
  q.SAMPLER_BINDING = 35097;
  q.PIXEL_PACK_BUFFER = 35051;
  q.PIXEL_UNPACK_BUFFER = 35052;
  q.PIXEL_PACK_BUFFER_BINDING = 35053;
  q.PIXEL_UNPACK_BUFFER_BINDING = 35055;
  q.COPY_READ_BUFFER = 36662;
  q.COPY_WRITE_BUFFER = 36663;
  q.COPY_READ_BUFFER_BINDING = 36662;
  q.COPY_WRITE_BUFFER_BINDING = 36663;
  q.FLOAT_MAT2x3 = 35685;
  q.FLOAT_MAT2x4 = 35686;
  q.FLOAT_MAT3x2 = 35687;
  q.FLOAT_MAT3x4 = 35688;
  q.FLOAT_MAT4x2 = 35689;
  q.FLOAT_MAT4x3 = 35690;
  q.UNSIGNED_INT_VEC2 = 36294;
  q.UNSIGNED_INT_VEC3 = 36295;
  q.UNSIGNED_INT_VEC4 = 36296;
  q.UNSIGNED_NORMALIZED = 35863;
  q.SIGNED_NORMALIZED = 36764;
  q.VERTEX_ATTRIB_ARRAY_INTEGER = 35069;
  q.VERTEX_ATTRIB_ARRAY_DIVISOR = 35070;
  q.TRANSFORM_FEEDBACK_BUFFER_MODE = 35967;
  q.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 35968;
  q.TRANSFORM_FEEDBACK_VARYINGS = 35971;
  q.TRANSFORM_FEEDBACK_BUFFER_START = 35972;
  q.TRANSFORM_FEEDBACK_BUFFER_SIZE = 35973;
  q.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 35976;
  q.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 35978;
  q.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 35979;
  q.INTERLEAVED_ATTRIBS = 35980;
  q.SEPARATE_ATTRIBS = 35981;
  q.TRANSFORM_FEEDBACK_BUFFER = 35982;
  q.TRANSFORM_FEEDBACK_BUFFER_BINDING = 35983;
  q.TRANSFORM_FEEDBACK = 36386;
  q.TRANSFORM_FEEDBACK_PAUSED = 36387;
  q.TRANSFORM_FEEDBACK_ACTIVE = 36388;
  q.TRANSFORM_FEEDBACK_BINDING = 36389;
  q.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 33296;
  q.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 33297;
  q.FRAMEBUFFER_ATTACHMENT_RED_SIZE = 33298;
  q.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 33299;
  q.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 33300;
  q.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 33301;
  q.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 33302;
  q.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 33303;
  q.FRAMEBUFFER_DEFAULT = 33304;
  q.DEPTH24_STENCIL8 = 35056;
  q.DRAW_FRAMEBUFFER_BINDING = 36006;
  q.READ_FRAMEBUFFER = 36008;
  q.DRAW_FRAMEBUFFER = 36009;
  q.READ_FRAMEBUFFER_BINDING = 36010;
  q.RENDERBUFFER_SAMPLES = 36011;
  q.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 36052;
  q.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 36182;
  q.UNIFORM_BUFFER = 35345;
  q.UNIFORM_BUFFER_BINDING = 35368;
  q.UNIFORM_BUFFER_START = 35369;
  q.UNIFORM_BUFFER_SIZE = 35370;
  q.MAX_VERTEX_UNIFORM_BLOCKS = 35371;
  q.MAX_FRAGMENT_UNIFORM_BLOCKS = 35373;
  q.MAX_COMBINED_UNIFORM_BLOCKS = 35374;
  q.MAX_UNIFORM_BUFFER_BINDINGS = 35375;
  q.MAX_UNIFORM_BLOCK_SIZE = 35376;
  q.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 35377;
  q.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 35379;
  q.UNIFORM_BUFFER_OFFSET_ALIGNMENT = 35380;
  q.ACTIVE_UNIFORM_BLOCKS = 35382;
  q.UNIFORM_TYPE = 35383;
  q.UNIFORM_SIZE = 35384;
  q.UNIFORM_BLOCK_INDEX = 35386;
  q.UNIFORM_OFFSET = 35387;
  q.UNIFORM_ARRAY_STRIDE = 35388;
  q.UNIFORM_MATRIX_STRIDE = 35389;
  q.UNIFORM_IS_ROW_MAJOR = 35390;
  q.UNIFORM_BLOCK_BINDING = 35391;
  q.UNIFORM_BLOCK_DATA_SIZE = 35392;
  q.UNIFORM_BLOCK_ACTIVE_UNIFORMS = 35394;
  q.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 35395;
  q.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 35396;
  q.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 35398;
  q.OBJECT_TYPE = 37138;
  q.SYNC_CONDITION = 37139;
  q.SYNC_STATUS = 37140;
  q.SYNC_FLAGS = 37141;
  q.SYNC_FENCE = 37142;
  q.SYNC_GPU_COMMANDS_COMPLETE = 37143;
  q.UNSIGNALED = 37144;
  q.SIGNALED = 37145;
  q.ALREADY_SIGNALED = 37146;
  q.TIMEOUT_EXPIRED = 37147;
  q.CONDITION_SATISFIED = 37148;
  q.WAIT_FAILED = 37149;
  q.SYNC_FLUSH_COMMANDS_BIT = 1;
  q.COLOR = 6144;
  q.DEPTH = 6145;
  q.STENCIL = 6146;
  q.MIN = 32775;
  q.MAX = 32776;
  q.DEPTH_COMPONENT24 = 33190;
  q.STREAM_READ = 35041;
  q.STREAM_COPY = 35042;
  q.STATIC_READ = 35045;
  q.STATIC_COPY = 35046;
  q.DYNAMIC_READ = 35049;
  q.DYNAMIC_COPY = 35050;
  q.DEPTH_COMPONENT32F = 36012;
  q.DEPTH32F_STENCIL8 = 36013;
  q.INVALID_INDEX = -1;
  q.TIMEOUT_IGNORED = -1;
  q.MAX_CLIENT_WAIT_TIMEOUT_WEBGL = 37447;
  qb.__identity = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];
  fa.__identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
  tc.audioSources = [];
  tc.sourcesToRemove = [];
  Dk.ID = 0;
  A.NONE = 0;
  A.FALSE = 0;
  A.TRUE = 1;
  A.SOURCE_RELATIVE = 514;
  A.CONE_INNER_ANGLE = 4097;
  A.CONE_OUTER_ANGLE = 4098;
  A.PITCH = 4099;
  A.POSITION = 4100;
  A.DIRECTION = 4101;
  A.VELOCITY = 4102;
  A.LOOPING = 4103;
  A.BUFFER = 4105;
  A.GAIN = 4106;
  A.MIN_GAIN = 4109;
  A.MAX_GAIN = 4110;
  A.ORIENTATION = 4111;
  A.SOURCE_STATE = 4112;
  A.INITIAL = 4113;
  A.PLAYING = 4114;
  A.PAUSED = 4115;
  A.STOPPED = 4116;
  A.BUFFERS_QUEUED = 4117;
  A.BUFFERS_PROCESSED = 4118;
  A.REFERENCE_DISTANCE = 4128;
  A.ROLLOFF_FACTOR = 4129;
  A.CONE_OUTER_GAIN = 4130;
  A.MAX_DISTANCE = 4131;
  A.SEC_OFFSET = 4132;
  A.SAMPLE_OFFSET = 4133;
  A.BYTE_OFFSET = 4134;
  A.SOURCE_TYPE = 4135;
  A.STATIC = 4136;
  A.STREAMING = 4137;
  A.UNDETERMINED = 4144;
  A.FORMAT_MONO8 = 4352;
  A.FORMAT_MONO16 = 4353;
  A.FORMAT_STEREO8 = 4354;
  A.FORMAT_STEREO16 = 4355;
  A.FREQUENCY = 8193;
  A.BITS = 8194;
  A.CHANNELS = 8195;
  A.SIZE = 8196;
  A.NO_ERROR = 0;
  A.INVALID_NAME = 40961;
  A.INVALID_ENUM = 40962;
  A.INVALID_VALUE = 40963;
  A.INVALID_OPERATION = 40964;
  A.OUT_OF_MEMORY = 40965;
  A.VENDOR = 45057;
  A.VERSION = 45058;
  A.RENDERER = 45059;
  A.EXTENSIONS = 45060;
  A.DOPPLER_FACTOR = 49152;
  A.SPEED_OF_SOUND = 49155;
  A.DOPPLER_VELOCITY = 49153;
  A.DISTANCE_MODEL = 53248;
  A.INVERSE_DISTANCE = 53249;
  A.INVERSE_DISTANCE_CLAMPED = 53250;
  A.LINEAR_DISTANCE = 53251;
  A.LINEAR_DISTANCE_CLAMPED = 53252;
  A.EXPONENT_DISTANCE = 53253;
  A.EXPONENT_DISTANCE_CLAMPED = 53254;
  A.METERS_PER_UNIT = 131076;
  A.DIRECT_FILTER = 131077;
  A.AUXILIARY_SEND_FILTER = 131078;
  A.AIR_ABSORPTION_FACTOR = 131079;
  A.ROOM_ROLLOFF_FACTOR = 131080;
  A.CONE_OUTER_GAINHF = 131081;
  A.DIRECT_FILTER_GAINHF_AUTO = 131082;
  A.AUXILIARY_SEND_FILTER_GAIN_AUTO = 131083;
  A.AUXILIARY_SEND_FILTER_GAINHF_AUTO = 131084;
  A.REVERB_DENSITY = 1;
  A.REVERB_DIFFUSION = 2;
  A.REVERB_GAIN = 3;
  A.REVERB_GAINHF = 4;
  A.REVERB_DECAY_TIME = 5;
  A.REVERB_DECAY_HFRATIO = 6;
  A.REVERB_REFLECTIONS_GAIN = 7;
  A.REVERB_REFLECTIONS_DELAY = 8;
  A.REVERB_LATE_REVERB_GAIN = 9;
  A.REVERB_LATE_REVERB_DELAY = 10;
  A.REVERB_AIR_ABSORPTION_GAINHF = 11;
  A.REVERB_ROOM_ROLLOFF_FACTOR = 12;
  A.REVERB_DECAY_HFLIMIT = 13;
  A.EAXREVERB_DENSITY = 1;
  A.EAXREVERB_DIFFUSION = 2;
  A.EAXREVERB_GAIN = 3;
  A.EAXREVERB_GAINHF = 4;
  A.EAXREVERB_GAINLF = 5;
  A.EAXREVERB_DECAY_TIME = 6;
  A.EAXREVERB_DECAY_HFRATIO = 7;
  A.EAXREVERB_DECAY_LFRATIO = 8;
  A.EAXREVERB_REFLECTIONS_GAIN = 9;
  A.EAXREVERB_REFLECTIONS_DELAY = 10;
  A.EAXREVERB_REFLECTIONS_PAN = 11;
  A.EAXREVERB_LATE_REVERB_GAIN = 12;
  A.EAXREVERB_LATE_REVERB_DELAY = 13;
  A.EAXREVERB_LATE_REVERB_PAN = 14;
  A.EAXREVERB_ECHO_TIME = 15;
  A.EAXREVERB_ECHO_DEPTH = 16;
  A.EAXREVERB_MODULATION_TIME = 17;
  A.EAXREVERB_MODULATION_DEPTH = 18;
  A.EAXREVERB_AIR_ABSORPTION_GAINHF = 19;
  A.EAXREVERB_HFREFERENCE = 20;
  A.EAXREVERB_LFREFERENCE = 21;
  A.EAXREVERB_ROOM_ROLLOFF_FACTOR = 22;
  A.EAXREVERB_DECAY_HFLIMIT = 23;
  A.CHORUS_WAVEFORM = 1;
  A.CHORUS_PHASE = 2;
  A.CHORUS_RATE = 3;
  A.CHORUS_DEPTH = 4;
  A.CHORUS_FEEDBACK = 5;
  A.CHORUS_DELAY = 6;
  A.DISTORTION_EDGE = 1;
  A.DISTORTION_GAIN = 2;
  A.DISTORTION_LOWPASS_CUTOFF = 3;
  A.DISTORTION_EQCENTER = 4;
  A.DISTORTION_EQBANDWIDTH = 5;
  A.ECHO_DELAY = 1;
  A.ECHO_LRDELAY = 2;
  A.ECHO_DAMPING = 3;
  A.ECHO_FEEDBACK = 4;
  A.ECHO_SPREAD = 5;
  A.FLANGER_WAVEFORM = 1;
  A.FLANGER_PHASE = 2;
  A.FLANGER_RATE = 3;
  A.FLANGER_DEPTH = 4;
  A.FLANGER_FEEDBACK = 5;
  A.FLANGER_DELAY = 6;
  A.FREQUENCY_SHIFTER_FREQUENCY = 1;
  A.FREQUENCY_SHIFTER_LEFT_DIRECTION = 2;
  A.FREQUENCY_SHIFTER_RIGHT_DIRECTION = 3;
  A.VOCAL_MORPHER_PHONEMEA = 1;
  A.VOCAL_MORPHER_PHONEMEA_COARSE_TUNING = 2;
  A.VOCAL_MORPHER_PHONEMEB = 3;
  A.VOCAL_MORPHER_PHONEMEB_COARSE_TUNING = 4;
  A.VOCAL_MORPHER_WAVEFORM = 5;
  A.VOCAL_MORPHER_RATE = 6;
  A.PITCH_SHIFTER_COARSE_TUNE = 1;
  A.PITCH_SHIFTER_FINE_TUNE = 2;
  A.RING_MODULATOR_FREQUENCY = 1;
  A.RING_MODULATOR_HIGHPASS_CUTOFF = 2;
  A.RING_MODULATOR_WAVEFORM = 3;
  A.AUTOWAH_ATTACK_TIME = 1;
  A.AUTOWAH_RELEASE_TIME = 2;
  A.AUTOWAH_RESONANCE = 3;
  A.AUTOWAH_PEAK_GAIN = 4;
  A.COMPRESSOR_ONOFF = 1;
  A.EQUALIZER_LOW_GAIN = 1;
  A.EQUALIZER_LOW_CUTOFF = 2;
  A.EQUALIZER_MID1_GAIN = 3;
  A.EQUALIZER_MID1_CENTER = 4;
  A.EQUALIZER_MID1_WIDTH = 5;
  A.EQUALIZER_MID2_GAIN = 6;
  A.EQUALIZER_MID2_CENTER = 7;
  A.EQUALIZER_MID2_WIDTH = 8;
  A.EQUALIZER_HIGH_GAIN = 9;
  A.EQUALIZER_HIGH_CUTOFF = 10;
  A.EFFECT_FIRST_PARAMETER = 0;
  A.EFFECT_LAST_PARAMETER = 32768;
  A.EFFECT_TYPE = 32769;
  A.EFFECT_NULL = 0;
  A.EFFECT_EAXREVERB = 32768;
  A.EFFECT_REVERB = 1;
  A.EFFECT_CHORUS = 2;
  A.EFFECT_DISTORTION = 3;
  A.EFFECT_ECHO = 4;
  A.EFFECT_FLANGER = 5;
  A.EFFECT_FREQUENCY_SHIFTER = 6;
  A.EFFECT_VOCAL_MORPHER = 7;
  A.EFFECT_PITCH_SHIFTER = 8;
  A.EFFECT_RING_MODULATOR = 9;
  A.FFECT_AUTOWAH = 10;
  A.EFFECT_COMPRESSOR = 11;
  A.EFFECT_EQUALIZER = 12;
  A.EFFECTSLOT_EFFECT = 1;
  A.EFFECTSLOT_GAIN = 2;
  A.EFFECTSLOT_AUXILIARY_SEND_AUTO = 3;
  A.LOWPASS_GAIN = 1;
  A.LOWPASS_GAINHF = 2;
  A.HIGHPASS_GAIN = 1;
  A.HIGHPASS_GAINLF = 2;
  A.BANDPASS_GAIN = 1;
  A.BANDPASS_GAINLF = 2;
  A.BANDPASS_GAINHF = 3;
  A.FILTER_FIRST_PARAMETER = 0;
  A.FILTER_LAST_PARAMETER = 32768;
  A.FILTER_TYPE = 32769;
  A.FILTER_NULL = 0;
  A.FILTER_LOWPASS = 1;
  A.FILTER_HIGHPASS = 2;
  A.FILTER_BANDPASS = 3;
  Cb.FALSE = 0;
  Cb.TRUE = 1;
  Cb.FREQUENCY = 4103;
  Cb.REFRESH = 4104;
  Cb.SYNC = 4105;
  Cb.MONO_SOURCES = 4112;
  Cb.STEREO_SOURCES = 4113;
  Cb.NO_ERROR = 0;
  Cb.INVALID_DEVICE = 40961;
  Cb.INVALID_CONTEXT = 40962;
  Cb.INVALID_ENUM = 40963;
  Cb.INVALID_VALUE = 40964;
  Cb.OUT_OF_MEMORY = 40965;
  Cb.ATTRIBUTES_SIZE = 4098;
  Cb.ALL_ATTRIBUTES = 4099;
  Cb.DEFAULT_DEVICE_SPECIFIER = 4100;
  Cb.DEVICE_SPECIFIER = 4101;
  Cb.EXTENSIONS = 4102;
  Cb.ENUMERATE_ALL_EXT = 1;
  Cb.DEFAULT_ALL_DEVICES_SPECIFIER = 4114;
  Cb.ALL_DEVICES_SPECIFIER = 4115;
  qe.onUpdate = new Md();
  Ae.alreadyCreated = new la();
  Ae.initialized = !1;
  $f.sensorByID = new Ca();
  $f.sensors = [];
  za.__directories = new Ca();
  Ld.devices = new Ca();
  Ld.onConnect = new bq();
  Ei.LEFT_X = 0;
  Ei.LEFT_Y = 1;
  Ei.RIGHT_X = 2;
  Ei.RIGHT_Y = 3;
  Ei.TRIGGER_LEFT = 4;
  Ei.TRIGGER_RIGHT = 5;
  df.A = 0;
  df.B = 1;
  df.X = 2;
  df.Y = 3;
  df.BACK = 4;
  df.GUIDE = 5;
  df.START = 6;
  df.LEFT_STICK = 7;
  df.RIGHT_STICK = 8;
  df.LEFT_SHOULDER = 9;
  df.RIGHT_SHOULDER = 10;
  df.DPAD_UP = 11;
  df.DPAD_DOWN = 12;
  df.DPAD_LEFT = 13;
  df.DPAD_RIGHT = 14;
  Xc.devices = new Ca();
  Xc.onConnect = new cq();
  ie.CENTER = 0;
  ie.DOWN = 4;
  ie.LEFT = 8;
  ie.RIGHT = 2;
  ie.UP = 1;
  ie.DOWN_LEFT = 12;
  ie.DOWN_RIGHT = 6;
  ie.UP_LEFT = 9;
  ie.UP_RIGHT = 3;
  I.UNKNOWN = 0;
  I.BACKSPACE = 8;
  I.TAB = 9;
  I.RETURN = 13;
  I.ESCAPE = 27;
  I.SPACE = 32;
  I.EXCLAMATION = 33;
  I.QUOTE = 34;
  I.HASH = 35;
  I.DOLLAR = 36;
  I.PERCENT = 37;
  I.AMPERSAND = 38;
  I.SINGLE_QUOTE = 39;
  I.LEFT_PARENTHESIS = 40;
  I.RIGHT_PARENTHESIS = 41;
  I.ASTERISK = 42;
  I.PLUS = 43;
  I.COMMA = 44;
  I.MINUS = 45;
  I.PERIOD = 46;
  I.SLASH = 47;
  I.NUMBER_0 = 48;
  I.NUMBER_1 = 49;
  I.NUMBER_2 = 50;
  I.NUMBER_3 = 51;
  I.NUMBER_4 = 52;
  I.NUMBER_5 = 53;
  I.NUMBER_6 = 54;
  I.NUMBER_7 = 55;
  I.NUMBER_8 = 56;
  I.NUMBER_9 = 57;
  I.COLON = 58;
  I.SEMICOLON = 59;
  I.LESS_THAN = 60;
  I.EQUALS = 61;
  I.GREATER_THAN = 62;
  I.QUESTION = 63;
  I.AT = 64;
  I.LEFT_BRACKET = 91;
  I.BACKSLASH = 92;
  I.RIGHT_BRACKET = 93;
  I.CARET = 94;
  I.UNDERSCORE = 95;
  I.GRAVE = 96;
  I.A = 97;
  I.B = 98;
  I.C = 99;
  I.D = 100;
  I.E = 101;
  I.F = 102;
  I.G = 103;
  I.H = 104;
  I.I = 105;
  I.J = 106;
  I.K = 107;
  I.L = 108;
  I.M = 109;
  I.N = 110;
  I.O = 111;
  I.P = 112;
  I.Q = 113;
  I.R = 114;
  I.S = 115;
  I.T = 116;
  I.U = 117;
  I.V = 118;
  I.W = 119;
  I.X = 120;
  I.Y = 121;
  I.Z = 122;
  I.DELETE = 127;
  I.CAPS_LOCK = 1073741881;
  I.F1 = 1073741882;
  I.F2 = 1073741883;
  I.F3 = 1073741884;
  I.F4 = 1073741885;
  I.F5 = 1073741886;
  I.F6 = 1073741887;
  I.F7 = 1073741888;
  I.F8 = 1073741889;
  I.F9 = 1073741890;
  I.F10 = 1073741891;
  I.F11 = 1073741892;
  I.F12 = 1073741893;
  I.PRINT_SCREEN = 1073741894;
  I.SCROLL_LOCK = 1073741895;
  I.PAUSE = 1073741896;
  I.INSERT = 1073741897;
  I.HOME = 1073741898;
  I.PAGE_UP = 1073741899;
  I.END = 1073741901;
  I.PAGE_DOWN = 1073741902;
  I.RIGHT = 1073741903;
  I.LEFT = 1073741904;
  I.DOWN = 1073741905;
  I.UP = 1073741906;
  I.NUM_LOCK = 1073741907;
  I.NUMPAD_DIVIDE = 1073741908;
  I.NUMPAD_MULTIPLY = 1073741909;
  I.NUMPAD_MINUS = 1073741910;
  I.NUMPAD_PLUS = 1073741911;
  I.NUMPAD_ENTER = 1073741912;
  I.NUMPAD_1 = 1073741913;
  I.NUMPAD_2 = 1073741914;
  I.NUMPAD_3 = 1073741915;
  I.NUMPAD_4 = 1073741916;
  I.NUMPAD_5 = 1073741917;
  I.NUMPAD_6 = 1073741918;
  I.NUMPAD_7 = 1073741919;
  I.NUMPAD_8 = 1073741920;
  I.NUMPAD_9 = 1073741921;
  I.NUMPAD_0 = 1073741922;
  I.NUMPAD_PERIOD = 1073741923;
  I.APPLICATION = 1073741925;
  I.POWER = 1073741926;
  I.NUMPAD_EQUALS = 1073741927;
  I.F13 = 1073741928;
  I.F14 = 1073741929;
  I.F15 = 1073741930;
  I.F16 = 1073741931;
  I.F17 = 1073741932;
  I.F18 = 1073741933;
  I.F19 = 1073741934;
  I.F20 = 1073741935;
  I.F21 = 1073741936;
  I.F22 = 1073741937;
  I.F23 = 1073741938;
  I.F24 = 1073741939;
  I.EXECUTE = 1073741940;
  I.HELP = 1073741941;
  I.MENU = 1073741942;
  I.SELECT = 1073741943;
  I.STOP = 1073741944;
  I.AGAIN = 1073741945;
  I.UNDO = 1073741946;
  I.CUT = 1073741947;
  I.COPY = 1073741948;
  I.PASTE = 1073741949;
  I.FIND = 1073741950;
  I.MUTE = 1073741951;
  I.VOLUME_UP = 1073741952;
  I.VOLUME_DOWN = 1073741953;
  I.NUMPAD_COMMA = 1073741957;
  I.ALT_ERASE = 1073741977;
  I.SYSTEM_REQUEST = 1073741978;
  I.CANCEL = 1073741979;
  I.CLEAR = 1073741980;
  I.PRIOR = 1073741981;
  I.RETURN2 = 1073741982;
  I.SEPARATOR = 1073741983;
  I.OUT = 1073741984;
  I.OPER = 1073741985;
  I.CLEAR_AGAIN = 1073741986;
  I.CRSEL = 1073741987;
  I.EXSEL = 1073741988;
  I.NUMPAD_00 = 1073742e3;
  I.NUMPAD_000 = 1073742001;
  I.THOUSAND_SEPARATOR = 1073742002;
  I.DECIMAL_SEPARATOR = 1073742003;
  I.CURRENCY_UNIT = 1073742004;
  I.CURRENCY_SUBUNIT = 1073742005;
  I.NUMPAD_LEFT_PARENTHESIS = 1073742006;
  I.NUMPAD_RIGHT_PARENTHESIS = 1073742007;
  I.NUMPAD_LEFT_BRACE = 1073742008;
  I.NUMPAD_RIGHT_BRACE = 1073742009;
  I.NUMPAD_TAB = 1073742010;
  I.NUMPAD_BACKSPACE = 1073742011;
  I.NUMPAD_A = 1073742012;
  I.NUMPAD_B = 1073742013;
  I.NUMPAD_C = 1073742014;
  I.NUMPAD_D = 1073742015;
  I.NUMPAD_E = 1073742016;
  I.NUMPAD_F = 1073742017;
  I.NUMPAD_XOR = 1073742018;
  I.NUMPAD_POWER = 1073742019;
  I.NUMPAD_PERCENT = 1073742020;
  I.NUMPAD_LESS_THAN = 1073742021;
  I.NUMPAD_GREATER_THAN = 1073742022;
  I.NUMPAD_AMPERSAND = 1073742023;
  I.NUMPAD_DOUBLE_AMPERSAND = 1073742024;
  I.NUMPAD_VERTICAL_BAR = 1073742025;
  I.NUMPAD_DOUBLE_VERTICAL_BAR = 1073742026;
  I.NUMPAD_COLON = 1073742027;
  I.NUMPAD_HASH = 1073742028;
  I.NUMPAD_SPACE = 1073742029;
  I.NUMPAD_AT = 1073742030;
  I.NUMPAD_EXCLAMATION = 1073742031;
  I.NUMPAD_MEM_STORE = 1073742032;
  I.NUMPAD_MEM_RECALL = 1073742033;
  I.NUMPAD_MEM_CLEAR = 1073742034;
  I.NUMPAD_MEM_ADD = 1073742035;
  I.NUMPAD_MEM_SUBTRACT = 1073742036;
  I.NUMPAD_MEM_MULTIPLY = 1073742037;
  I.NUMPAD_MEM_DIVIDE = 1073742038;
  I.NUMPAD_PLUS_MINUS = 1073742039;
  I.NUMPAD_CLEAR = 1073742040;
  I.NUMPAD_CLEAR_ENTRY = 1073742041;
  I.NUMPAD_BINARY = 1073742042;
  I.NUMPAD_OCTAL = 1073742043;
  I.NUMPAD_DECIMAL = 1073742044;
  I.NUMPAD_HEXADECIMAL = 1073742045;
  I.LEFT_CTRL = 1073742048;
  I.LEFT_SHIFT = 1073742049;
  I.LEFT_ALT = 1073742050;
  I.LEFT_META = 1073742051;
  I.RIGHT_CTRL = 1073742052;
  I.RIGHT_SHIFT = 1073742053;
  I.RIGHT_ALT = 1073742054;
  I.RIGHT_META = 1073742055;
  I.MODE = 1073742081;
  I.AUDIO_NEXT = 1073742082;
  I.AUDIO_PREVIOUS = 1073742083;
  I.AUDIO_STOP = 1073742084;
  I.AUDIO_PLAY = 1073742085;
  I.AUDIO_MUTE = 1073742086;
  I.MEDIA_SELECT = 1073742087;
  I.WWW = 1073742088;
  I.MAIL = 1073742089;
  I.CALCULATOR = 1073742090;
  I.COMPUTER = 1073742091;
  I.APP_CONTROL_SEARCH = 1073742092;
  I.APP_CONTROL_HOME = 1073742093;
  I.APP_CONTROL_BACK = 1073742094;
  I.APP_CONTROL_FORWARD = 1073742095;
  I.APP_CONTROL_STOP = 1073742096;
  I.APP_CONTROL_REFRESH = 1073742097;
  I.APP_CONTROL_BOOKMARKS = 1073742098;
  I.BRIGHTNESS_DOWN = 1073742099;
  I.BRIGHTNESS_UP = 1073742100;
  I.DISPLAY_SWITCH = 1073742101;
  I.BACKLIGHT_TOGGLE = 1073742102;
  I.BACKLIGHT_DOWN = 1073742103;
  I.BACKLIGHT_UP = 1073742104;
  I.EJECT = 1073742105;
  I.SLEEP = 1073742106;
  Za.NONE = 0;
  Za.LEFT_SHIFT = 1;
  Za.RIGHT_SHIFT = 2;
  Za.LEFT_CTRL = 64;
  Za.RIGHT_CTRL = 128;
  Za.LEFT_ALT = 256;
  Za.RIGHT_ALT = 512;
  Za.LEFT_META = 1024;
  Za.RIGHT_META = 2048;
  Za.NUM_LOCK = 4096;
  Za.CAPS_LOCK = 8192;
  Za.MODE = 16384;
  Za.CTRL = 192;
  Za.SHIFT = 3;
  Za.ALT = 768;
  Za.META = 3072;
  N.UNKNOWN = 0;
  N.BACKSPACE = 42;
  N.TAB = 43;
  N.RETURN = 40;
  N.ESCAPE = 41;
  N.SPACE = 44;
  N.SINGLE_QUOTE = 52;
  N.COMMA = 54;
  N.MINUS = 45;
  N.PERIOD = 55;
  N.SLASH = 56;
  N.NUMBER_0 = 39;
  N.NUMBER_1 = 30;
  N.NUMBER_2 = 31;
  N.NUMBER_3 = 32;
  N.NUMBER_4 = 33;
  N.NUMBER_5 = 34;
  N.NUMBER_6 = 35;
  N.NUMBER_7 = 36;
  N.NUMBER_8 = 37;
  N.NUMBER_9 = 38;
  N.SEMICOLON = 51;
  N.EQUALS = 46;
  N.LEFT_BRACKET = 47;
  N.BACKSLASH = 49;
  N.RIGHT_BRACKET = 48;
  N.GRAVE = 53;
  N.A = 4;
  N.B = 5;
  N.C = 6;
  N.D = 7;
  N.E = 8;
  N.F = 9;
  N.G = 10;
  N.H = 11;
  N.I = 12;
  N.J = 13;
  N.K = 14;
  N.L = 15;
  N.M = 16;
  N.N = 17;
  N.O = 18;
  N.P = 19;
  N.Q = 20;
  N.R = 21;
  N.S = 22;
  N.T = 23;
  N.U = 24;
  N.V = 25;
  N.W = 26;
  N.X = 27;
  N.Y = 28;
  N.Z = 29;
  N.DELETE = 76;
  N.CAPS_LOCK = 57;
  N.F1 = 58;
  N.F2 = 59;
  N.F3 = 60;
  N.F4 = 61;
  N.F5 = 62;
  N.F6 = 63;
  N.F7 = 64;
  N.F8 = 65;
  N.F9 = 66;
  N.F10 = 67;
  N.F11 = 68;
  N.F12 = 69;
  N.PRINT_SCREEN = 70;
  N.SCROLL_LOCK = 71;
  N.PAUSE = 72;
  N.INSERT = 73;
  N.HOME = 74;
  N.PAGE_UP = 75;
  N.END = 77;
  N.PAGE_DOWN = 78;
  N.RIGHT = 79;
  N.LEFT = 80;
  N.DOWN = 81;
  N.UP = 82;
  N.NUM_LOCK = 83;
  N.NUMPAD_DIVIDE = 84;
  N.NUMPAD_MULTIPLY = 85;
  N.NUMPAD_MINUS = 86;
  N.NUMPAD_PLUS = 87;
  N.NUMPAD_ENTER = 88;
  N.NUMPAD_1 = 89;
  N.NUMPAD_2 = 90;
  N.NUMPAD_3 = 91;
  N.NUMPAD_4 = 92;
  N.NUMPAD_5 = 93;
  N.NUMPAD_6 = 94;
  N.NUMPAD_7 = 95;
  N.NUMPAD_8 = 96;
  N.NUMPAD_9 = 97;
  N.NUMPAD_0 = 98;
  N.NUMPAD_PERIOD = 99;
  N.APPLICATION = 101;
  N.POWER = 102;
  N.NUMPAD_EQUALS = 103;
  N.F13 = 104;
  N.F14 = 105;
  N.F15 = 106;
  N.F16 = 107;
  N.F17 = 108;
  N.F18 = 109;
  N.F19 = 110;
  N.F20 = 111;
  N.F21 = 112;
  N.F22 = 113;
  N.F23 = 114;
  N.F24 = 115;
  N.EXECUTE = 116;
  N.HELP = 117;
  N.MENU = 118;
  N.SELECT = 119;
  N.STOP = 120;
  N.AGAIN = 121;
  N.UNDO = 122;
  N.CUT = 123;
  N.COPY = 124;
  N.PASTE = 125;
  N.FIND = 126;
  N.MUTE = 127;
  N.VOLUME_UP = 128;
  N.VOLUME_DOWN = 129;
  N.NUMPAD_COMMA = 133;
  N.ALT_ERASE = 153;
  N.SYSTEM_REQUEST = 154;
  N.CANCEL = 155;
  N.CLEAR = 156;
  N.PRIOR = 157;
  N.RETURN2 = 158;
  N.SEPARATOR = 159;
  N.OUT = 160;
  N.OPER = 161;
  N.CLEAR_AGAIN = 162;
  N.CRSEL = 163;
  N.EXSEL = 164;
  N.NUMPAD_00 = 176;
  N.NUMPAD_000 = 177;
  N.THOUSAND_SEPARATOR = 178;
  N.DECIMAL_SEPARATOR = 179;
  N.CURRENCY_UNIT = 180;
  N.CURRENCY_SUBUNIT = 181;
  N.NUMPAD_LEFT_PARENTHESIS = 182;
  N.NUMPAD_RIGHT_PARENTHESIS = 183;
  N.NUMPAD_LEFT_BRACE = 184;
  N.NUMPAD_RIGHT_BRACE = 185;
  N.NUMPAD_TAB = 186;
  N.NUMPAD_BACKSPACE = 187;
  N.NUMPAD_A = 188;
  N.NUMPAD_B = 189;
  N.NUMPAD_C = 190;
  N.NUMPAD_D = 191;
  N.NUMPAD_E = 192;
  N.NUMPAD_F = 193;
  N.NUMPAD_XOR = 194;
  N.NUMPAD_POWER = 195;
  N.NUMPAD_PERCENT = 196;
  N.NUMPAD_LESS_THAN = 197;
  N.NUMPAD_GREATER_THAN = 198;
  N.NUMPAD_AMPERSAND = 199;
  N.NUMPAD_DOUBLE_AMPERSAND = 200;
  N.NUMPAD_VERTICAL_BAR = 201;
  N.NUMPAD_DOUBLE_VERTICAL_BAR = 202;
  N.NUMPAD_COLON = 203;
  N.NUMPAD_HASH = 204;
  N.NUMPAD_SPACE = 205;
  N.NUMPAD_AT = 206;
  N.NUMPAD_EXCLAMATION = 207;
  N.NUMPAD_MEM_STORE = 208;
  N.NUMPAD_MEM_RECALL = 209;
  N.NUMPAD_MEM_CLEAR = 210;
  N.NUMPAD_MEM_ADD = 211;
  N.NUMPAD_MEM_SUBTRACT = 212;
  N.NUMPAD_MEM_MULTIPLY = 213;
  N.NUMPAD_MEM_DIVIDE = 214;
  N.NUMPAD_PLUS_MINUS = 215;
  N.NUMPAD_CLEAR = 216;
  N.NUMPAD_CLEAR_ENTRY = 217;
  N.NUMPAD_BINARY = 218;
  N.NUMPAD_OCTAL = 219;
  N.NUMPAD_DECIMAL = 220;
  N.NUMPAD_HEXADECIMAL = 221;
  N.LEFT_CTRL = 224;
  N.LEFT_SHIFT = 225;
  N.LEFT_ALT = 226;
  N.LEFT_META = 227;
  N.RIGHT_CTRL = 228;
  N.RIGHT_SHIFT = 229;
  N.RIGHT_ALT = 230;
  N.RIGHT_META = 231;
  N.MODE = 257;
  N.AUDIO_NEXT = 258;
  N.AUDIO_PREVIOUS = 259;
  N.AUDIO_STOP = 260;
  N.AUDIO_PLAY = 261;
  N.AUDIO_MUTE = 262;
  N.MEDIA_SELECT = 263;
  N.WWW = 264;
  N.MAIL = 265;
  N.CALCULATOR = 266;
  N.COMPUTER = 267;
  N.APP_CONTROL_SEARCH = 268;
  N.APP_CONTROL_HOME = 269;
  N.APP_CONTROL_BACK = 270;
  N.APP_CONTROL_FORWARD = 271;
  N.APP_CONTROL_STOP = 272;
  N.APP_CONTROL_REFRESH = 273;
  N.APP_CONTROL_BOOKMARKS = 274;
  N.BRIGHTNESS_DOWN = 275;
  N.BRIGHTNESS_UP = 276;
  N.DISPLAY_SWITCH = 277;
  N.BACKLIGHT_TOGGLE = 278;
  N.BACKLIGHT_DOWN = 279;
  N.BACKLIGHT_UP = 280;
  N.EJECT = 281;
  N.SLEEP = 282;
  pd.onCancel = new rj();
  pd.onEnd = new rj();
  pd.onMove = new rj();
  pd.onStart = new rj();
  ka.cache = new lq();
  ka.onChange = new Md();
  ka.libraries = new la();
  ka.libraryPaths = new la();
  Hn.BYTES_PER_ELEMENT = 4;
  In.BYTES_PER_ELEMENT = 8;
  Jn.BYTES_PER_ELEMENT = 2;
  Kn.BYTES_PER_ELEMENT = 4;
  Ln.BYTES_PER_ELEMENT = 1;
  mb.throwErrors = !0;
  ah.NONE = 0;
  ah.ERROR = 1;
  ah.WARN = 2;
  ah.INFO = 3;
  ah.DEBUG = 4;
  ah.VERBOSE = 5;
  Mn.BYTES_PER_ELEMENT = 2;
  Nn.BYTES_PER_ELEMENT = 4;
  On.BYTES_PER_ELEMENT = 1;
  Gk.BYTES_PER_ELEMENT = 1;
  wa.__lastTimerID = 0;
  wa.__sentWarnings = new la();
  wa.__timers = new Ca();
  Ec.__sentWarnings = new la();
  Te.limitedProfile = !0;
  fb.__regexAlign = new Ib("align=(\"([^\"]+)\"|'([^']+)')", "i");
  fb.__regexBreakTag = new Ib("<br\\s*/?>", "gi");
  fb.__regexBlockIndent = new Ib("blockindent=(\"([^\"]+)\"|'([^']+)')", "i");
  fb.__regexColor = new Ib("color=(\"#([^\"]+)\"|'#([^']+)')", "i");
  fb.__regexEntities = [
    new Ib("&quot;", "g"),
    new Ib("&apos;", "g"),
    new Ib("&amp;", "g"),
    new Ib("&lt;", "g"),
    new Ib("&gt;", "g"),
    new Ib("&nbsp;", "g"),
  ];
  fb.__regexFace = new Ib("face=(\"([^\"]+)\"|'([^']+)')", "i");
  fb.__regexHTMLTag = new Ib("<.*?>", "g");
  fb.__regexHref = new Ib("href=(\"([^\"]+)\"|'([^']+)')", "i");
  fb.__regexIndent = new Ib(" indent=(\"([^\"]+)\"|'([^']+)')", "i");
  fb.__regexLeading = new Ib("leading=(\"([^\"]+)\"|'([^']+)')", "i");
  fb.__regexLeftMargin = new Ib("leftmargin=(\"([^\"]+)\"|'([^']+)')", "i");
  fb.__regexRightMargin = new Ib("rightmargin=(\"([^\"]+)\"|'([^']+)')", "i");
  fb.__regexSize = new Ib("size=(\"([^\"]+)\"|'([^']+)')", "i");
  fb.__regexTabStops = new Ib("tabstops=(\"([^\"]+)\"|'([^']+)')", "i");
  Kf.instances = new la();
  Ue.empty = new Ue();
  w.SIN45 = 0.7071067811865476;
  w.TAN22 = 0.41421356237309503;
  w.fillCommands = new Ue();
  w.strokeCommands = new Ue();
  Ii.MAX_INDEX_BUFFER_LENGTH = 65535;
  Ii.MAX_QUADS_PER_INDEX_BUFFER = 10922;
  Ii.MAX_QUAD_INDEX_BUFFER_LENGTH = 65532;
  sa.__vertexBufferStride = 14;
  sa.__tempVector = new xd();
  Ic.blankBitmapData = new sa(1, 1, !1, 0);
  Ic.tempColorTransform = new sc(0, 0, 0, 1, 0, 0, 0, 0);
  Bj.opaqueBitmapData = new sa(1, 1, !1, 0);
  kc.__regexColor = new Ib("color=(\"#([^\"]+)\"|'#([^']+)')", "i");
  kc.__regexFace = new Ib("face=(\"([^\"]+)\"|'([^']+)')", "i");
  kc.__regexFont = new Ib("<font ([^>]+)>", "gi");
  kc.__regexCloseFont = new Ib("</font>", "gi");
  kc.__regexSize = new Ib("size=(\"([^\"]+)\"|'([^']+)')", "i");
  Dj.alphaColorTransform = new sc();
  Dj.bitmap = new ic();
  Dj.destPoint = new Y();
  Dj.sourceRect = new W();
  Lb.UTF8_TAB = 9;
  Lb.UTF8_ENDLINE = 10;
  Lb.UTF8_SPACE = 32;
  Lb.UTF8_HYPHEN = 45;
  Lb.__defaultFonts = new la();
  $d.FT_LOAD_DEFAULT = 0;
  $d.FT_LOAD_NO_SCALE = 1;
  $d.FT_LOAD_NO_HINTING = 2;
  $d.FT_LOAD_RENDER = 4;
  $d.FT_LOAD_NO_BITMAP = 8;
  $d.FT_LOAD_VERTICAL_LAYOUT = 16;
  $d.FT_LOAD_FORCE_AUTOHINT = 32;
  $d.FT_LOAD_CROP_BITMAP = 64;
  $d.FT_LOAD_PEDANTIC = 128;
  $d.FT_LOAD_IGNORE_GLOBAL_ADVANCE_WIDTH = 256;
  $d.FT_LOAD_NO_RECURSE = 512;
  $d.FT_LOAD_IGNORE_TRANSFORM = 1024;
  $d.FT_LOAD_MONOCHROME = 2048;
  $d.FT_LOAD_LINEAR_DESIGN = 4096;
  $d.FT_LOAD_NO_AUTOHINT = 8192;
  $d.FT_LOAD_COLOR = 16384;
  $d.FT_LOAD_COMPUTE_METRICS = 32768;
  $d.FT_LOAD_BITMAP_METRICS_ONLY = 65536;
  $d.FT_LOAD_TARGET_NORMAL = 0;
  $d.FT_LOAD_TARGET_LIGHT = 0;
  Lf.INVALID = 0;
  Lf.LEFT_TO_RIGHT = 4;
  Lf.RIGHT_TO_LEFT = 5;
  Lf.TOP_TO_BOTTOM = 6;
  Lf.BOTTOM_TO_TOP = 7;
  ca.COMMON = "Zyyy";
  ca.INHERITED = "Zinh";
  ca.UNKNOWN = "Zzzz";
  ca.ARABIC = "Arab";
  ca.ARMENIAN = "Armn";
  ca.BENGALI = "Beng";
  ca.CYRILLIC = "Cyrl";
  ca.DEVANAGARI = "Deva";
  ca.GEORGIAN = "Geor";
  ca.GREEK = "Grek";
  ca.GUJARATI = "Gujr";
  ca.GURMUKHI = "Guru";
  ca.HANGUL = "Hang";
  ca.HAN = "Hani";
  ca.HEBREW = "Hebr";
  ca.HIRAGANA = "Hira";
  ca.KANNADA = "Knda";
  ca.KATAKANA = "Kana";
  ca.LAO = "Laoo";
  ca.LATIN = "Latn";
  ca.MALAYALAM = "Mlym";
  ca.ORIYA = "Orya";
  ca.TAMIL = "Taml";
  ca.TELUGA = "Telu";
  ca.THAI = "Thai";
  ca.TIBETAN = "Tibt";
  ca.BOPOMOFO = "Bopo";
  ca.BRAILLE = "Brai";
  ca.CANADIAN_SYLLABICS = "Cans";
  ca.CHEROKEE = "Cher";
  ca.ETHIOPIC = "Ethi";
  ca.KHMER = "Khmr";
  ca.MONGOLIAN = "Mong";
  ca.MYANMAR = "Mymr";
  ca.OGHAM = "Ogam";
  ca.RUNIC = "Runr";
  ca.SINHALA = "Sinh";
  ca.SYRIAC = "Syrc";
  ca.THAANA = "Thaa";
  ca.YI = "Yiii";
  ca.DESERET = "Dsrt";
  ca.GOTHIC = "Goth";
  ca.OLD_ITALIC = "Ital";
  ca.BUHID = "Buhd";
  ca.HANUNOO = "Hano";
  ca.TAGALOG = "Tglg";
  ca.TAGBANWA = "Tagb";
  ca.CYPRIOT = "Cprt";
  ca.LIMBU = "Limb";
  ca.LINEAR_B = "Linb";
  ca.OSMANYA = "Osma";
  ca.SHAVIAN = "Shaw";
  ca.TAI_LE = "Tale";
  ca.UGARITIC = "Ugar";
  ca.BUGINESE = "Bugi";
  ca.COPTIC = "Copt";
  ca.GLAGOLITIC = "Glag";
  ca.KHAROSHTHI = "Khar";
  ca.NEW_TAI_LUE = "Talu";
  ca.OLD_PERSIAN = "Xpeo";
  ca.SYLOTI_NAGRI = "Sylo";
  ca.TIFINAGH = "Tfng";
  ca.BALINESE = "Bali";
  ca.CUNEIFORM = "Xsux";
  ca.NKO = "Nkoo";
  ca.PHAGS_PA = "Phag";
  ca.PHOENICIAN = "Phnx";
  ca.CARIAN = "Cari";
  ca.CHAM = "Cham";
  ca.KAYAH_LI = "Kali";
  ca.LEPCHA = "Lepc";
  ca.LYCIAN = "Lyci";
  ca.LYDIAN = "Lydi";
  ca.OL_CHIKI = "Olck";
  ca.REJANG = "Rjng";
  ca.SAURASHTRA = "Saur";
  ca.SUNDANESE = "Sund";
  ca.VAI = "Vaii";
  ca.AVESTAN = "Avst";
  ca.BAMUM = "Bamu";
  ca.EGYPTIAN_HIEROGLYPHS = "Egyp";
  ca.IMPERIAL_ARAMAIC = "Armi";
  ca.INSCRIPTIONAL_PAHLAVI = "Phli";
  ca.INSCRIPTIONAL_PARTHIAN = "Prti";
  ca.JAVANESE = "Java";
  ca.KAITHI = "Kthi";
  ca.LISU = "Lisu";
  ca.MEETEI_MAYEK = "Mtei";
  ca.OLD_SOUTH_ARABIAN = "Sarb";
  ca.OLD_TURKIC = "Orkh";
  ca.SAMARITAN = "Samr";
  ca.TAI_THAM = "Lana";
  ca.TAI_VIET = "Tavt";
  ca.BATAK = "Batk";
  ca.BRAHMI = "Brah";
  ca.MANDAIC = "Mand";
  ca.CHAKMA = "Cakm";
  ca.MEROITIC_CURSIVE = "Merc";
  ca.MEROITIC_HIEROGLYPHS = "Mero";
  ca.MIAO = "Plrd";
  ca.SHARADA = "Shrd";
  ca.SORA_SOMPENG = "Sora";
  ca.TAKRI = "Takr";
  ca.BASSA_VAH = "Bass";
  ca.CAUCASIAN_ALBANIAN = "Aghb";
  ca.DUPLOYAN = "Dupl";
  ca.ELBASAN = "Elba";
  ca.GRANTHA = "Gran";
  ca.KHOJKI = "Khoj";
  ca.KHUDAWADI = "Sind";
  ca.LINEAR_A = "Lina";
  ca.MAHAJANI = "Mahj";
  ca.MANICHAEAN = "Mani";
  ca.MENDE_KIKAKUI = "Mend";
  ca.MODI = "Modi";
  ca.MRO = "Mroo";
  ca.NABATAEAN = "Nbat";
  ca.OLD_NORTH_ARABIAN = "Narb";
  ca.OLD_PERMIC = "Perm";
  ca.PAHAWH_HMONG = "Hmng";
  ca.PALMYRENE = "Palm";
  ca.PAU_CIN_HAU = "Pauc";
  ca.PSALTER_PAHLAVI = "Phlp";
  ca.SIDDHAM = "Sidd";
  ca.TIRHUTA = "Tirh";
  ca.WARANG_CITI = "Wara";
  Cj.P = [
    151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140,
    36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247, 120,
    234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,
    88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71,
    134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133,
    230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161,
    1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196, 135, 130,
    116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250,
    124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227,
    47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44,
    154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98,
    108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34,
    242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14,
    239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121,
    50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243,
    141, 128, 195, 78, 66, 215, 61, 156, 180, 151, 160, 137, 91, 90, 15, 131,
    13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37,
    240, 21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252,
    219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125,
    136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158,
    231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245,
    40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187,
    208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198,
    173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126,
    255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223,
    183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167,
    43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185,
    112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179,
    162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199,
    106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236,
    205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156,
    180,
  ];
  Ej.__pool = new Fg(
    function () {
      return new Ej();
    },
    function (a) {
      a.reset();
    }
  );
  Ve.ADD = 0;
  Ve.ALPHA = 1;
  Ve.DARKEN = 2;
  Ve.DIFFERENCE = 3;
  Ve.ERASE = 4;
  Ve.HARDLIGHT = 5;
  Ve.INVERT = 6;
  Ve.LAYER = 7;
  Ve.LIGHTEN = 8;
  Ve.MULTIPLY = 9;
  Ve.NORMAL = 10;
  Ve.OVERLAY = 11;
  Ve.SCREEN = 12;
  Ve.SHADER = 13;
  Ve.SUBTRACT = 14;
  bi.NONE = 0;
  bi.ROUND = 1;
  bi.SQUARE = 2;
  Fj.LINEAR = 0;
  Fj.RADIAL = 1;
  fh.SIN45 = 0.7071067811865476;
  fh.TAN22 = 0.41421356237309503;
  eo.EVEN_ODD = 0;
  eo.NON_ZERO = 1;
  Gj.LINEAR_RGB = 0;
  Gj.RGB = 1;
  ai.BEVEL = 0;
  ai.MITER = 1;
  ai.ROUND = 2;
  ci.HORIZONTAL = 0;
  ci.NONE = 1;
  ci.NORMAL = 2;
  ci.VERTICAL = 3;
  Pg.__rootURL = "undefined" != typeof window ? window.document.URL : "";
  ef.__useParentFPS = !1;
  Ab.__alphaValue = [1];
  Ab.__colorMultipliersValue = [0, 0, 0, 0];
  Ab.__colorOffsetsValue = [0, 0, 0, 0];
  Ab.__defaultColorMultipliersValue = [1, 1, 1, 1];
  Ab.__emptyColorValue = [0, 0, 0, 0];
  Ab.__emptyAlphaValue = [1];
  Ab.__hasColorTransformValue = [!1];
  Ab.__scissorRectangle = new W();
  Ab.__textureSizeValue = [0, 0];
  Wk.ALWAYS = 0;
  Wk.AUTO = 1;
  Wk.NEVER = 2;
  Vd.BOOL = 0;
  Vd.BOOL2 = 1;
  Vd.BOOL3 = 2;
  Vd.BOOL4 = 3;
  Vd.FLOAT = 4;
  Vd.FLOAT2 = 5;
  Vd.FLOAT3 = 6;
  Vd.FLOAT4 = 7;
  Vd.INT = 8;
  Vd.INT2 = 9;
  Vd.INT3 = 10;
  Vd.INT4 = 11;
  Vd.MATRIX2X2 = 12;
  Vd.MATRIX2X3 = 13;
  Vd.MATRIX2X4 = 14;
  Vd.MATRIX3X2 = 15;
  Vd.MATRIX3X3 = 16;
  Vd.MATRIX3X4 = 17;
  Vd.MATRIX4X2 = 18;
  Vd.MATRIX4X3 = 19;
  Vd.MATRIX4X4 = 20;
  ho.FAST = 0;
  ho.FULL = 1;
  Mi.PAD = 0;
  Mi.REFLECT = 1;
  Mi.REPEAT = 2;
  hh.BOTTOM = 0;
  hh.BOTTOM_LEFT = 1;
  hh.BOTTOM_RIGHT = 2;
  hh.LEFT = 3;
  hh.RIGHT = 4;
  hh.TOP = 5;
  hh.TOP_LEFT = 6;
  hh.TOP_RIGHT = 7;
  Yk.FULL_SCREEN = 0;
  Yk.FULL_SCREEN_INTERACTIVE = 1;
  Yk.NORMAL = 2;
  Jj.BEST = 0;
  Jj.HIGH = 1;
  Jj.LOW = 2;
  Jj.MEDIUM = 3;
  Kj.EXACT_FIT = 0;
  Kj.NO_BORDER = 1;
  Kj.NO_SCALE = 2;
  Kj.SHOW_ALL = 3;
  Zk.NEGATIVE = 0;
  Zk.NONE = 1;
  Zk.POSITIVE = 2;
  nc.supportsVideoTexture = !0;
  nc.GL_DEPTH_STENCIL = -1;
  nc.GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = -1;
  nc.GL_MAX_VIEWPORT_DIMS = -1;
  nc.GL_TEXTURE_MAX_ANISOTROPY_EXT = -1;
  ig.DESTINATION_ALPHA = 0;
  ig.DESTINATION_COLOR = 1;
  ig.ONE = 2;
  ig.ONE_MINUS_DESTINATION_ALPHA = 3;
  ig.ONE_MINUS_DESTINATION_COLOR = 4;
  ig.ONE_MINUS_SOURCE_ALPHA = 5;
  ig.ONE_MINUS_SOURCE_COLOR = 6;
  ig.SOURCE_ALPHA = 7;
  ig.SOURCE_COLOR = 8;
  ig.ZERO = 9;
  Nj.DYNAMIC_DRAW = 0;
  Nj.STATIC_DRAW = 1;
  ih.ALWAYS = 0;
  ih.EQUAL = 1;
  ih.GREATER = 2;
  ih.GREATER_EQUAL = 3;
  ih.LESS = 4;
  ih.LESS_EQUAL = 5;
  ih.NEVER = 6;
  ih.NOT_EQUAL = 7;
  al.MIPLINEAR = 0;
  al.MIPNEAREST = 1;
  al.MIPNONE = 2;
  di.BASELINE = 0;
  di.BASELINE_CONSTRAINED = 1;
  di.BASELINE_EXTENDED = 2;
  di.STANDARD = 3;
  di.STANDARD_CONSTRAINED = 4;
  di.STANDARD_EXTENDED = 5;
  ko.AGAL = 0;
  ko.GLSL = 1;
  Oj.FRAGMENT = 0;
  Oj.VERTEX = 1;
  lo.AUTO = 0;
  lo.SOFTWARE = 1;
  jh.DECREMENT_SATURATE = 0;
  jh.DECREMENT_WRAP = 1;
  jh.INCREMENT_SATURATE = 2;
  jh.INCREMENT_WRAP = 3;
  jh.INVERT = 4;
  jh.KEEP = 5;
  jh.SET = 6;
  jh.ZERO = 7;
  ei.ANISOTROPIC16X = 0;
  ei.ANISOTROPIC2X = 1;
  ei.ANISOTROPIC4X = 2;
  ei.ANISOTROPIC8X = 3;
  ei.LINEAR = 4;
  ei.NEAREST = 5;
  xh.BGR_PACKED = 0;
  xh.BGRA = 1;
  xh.BGRA_PACKED = 2;
  xh.COMPRESSED = 3;
  xh.COMPRESSED_ALPHA = 4;
  xh.RGBA_HALF_FLOAT = 5;
  Pj.BACK = 0;
  Pj.FRONT = 1;
  Pj.FRONT_AND_BACK = 2;
  Pj.NONE = 3;
  Pi.BYTES_4 = 0;
  Pi.FLOAT_1 = 1;
  Pi.FLOAT_2 = 2;
  Pi.FLOAT_3 = 3;
  Pi.FLOAT_4 = 4;
  Qj.CLAMP = 0;
  Qj.CLAMP_U_REPEAT_V = 1;
  Qj.REPEAT = 2;
  Qj.REPEAT_U_CLAMP_V = 3;
  Oi.__lowMemoryMode = !1;
  ud.DEFAULT_TO_STRING = "Error";
  fi.ACTIVITY = "activity";
  gg.LINK = "link";
  gg.TEXT_INPUT = "textInput";
  uf.ERROR = "error";
  hg.FOCUS_IN = "focusIn";
  hg.FOCUS_OUT = "focusOut";
  hg.KEY_FOCUS_CHANGE = "keyFocusChange";
  hg.MOUSE_FOCUS_CHANGE = "mouseFocusChange";
  Hg.FULL_SCREEN = "fullScreen";
  Hg.FULL_SCREEN_INTERACTIVE_ACCEPTED = "fullScreenInteractiveAccepted";
  kh.DEVICE_ADDED = "deviceAdded";
  kh.DEVICE_REMOVED = "deviceRemoved";
  kh.DEVICE_UNUSABLE = "deviceUnusable";
  Qi.HTTP_RESPONSE_STATUS = "httpResponseStatus";
  Qi.HTTP_STATUS = "httpStatus";
  zg.IO_ERROR = "ioError";
  Ni.KEY_DOWN = "keyDown";
  Ni.KEY_UP = "keyUp";
  Ob.CLICK = "click";
  Ob.DOUBLE_CLICK = "doubleClick";
  Ob.MIDDLE_CLICK = "middleClick";
  Ob.MIDDLE_MOUSE_DOWN = "middleMouseDown";
  Ob.MIDDLE_MOUSE_UP = "middleMouseUp";
  Ob.MOUSE_DOWN = "mouseDown";
  Ob.MOUSE_MOVE = "mouseMove";
  Ob.MOUSE_OUT = "mouseOut";
  Ob.MOUSE_OVER = "mouseOver";
  Ob.MOUSE_UP = "mouseUp";
  Ob.MOUSE_WHEEL = "mouseWheel";
  Ob.RELEASE_OUTSIDE = "releaseOutside";
  Ob.RIGHT_CLICK = "rightClick";
  Ob.RIGHT_MOUSE_DOWN = "rightMouseDown";
  Ob.RIGHT_MOUSE_UP = "rightMouseUp";
  Ob.ROLL_OUT = "rollOut";
  Ob.ROLL_OVER = "rollOver";
  jg.NET_STATUS = "netStatus";
  gh.PROGRESS = "progress";
  gh.SOCKET_DATA = "socketData";
  Gg.CLEAR_DOM = "clearDOM";
  Gg.RENDER_CAIRO = "renderCairo";
  Gg.RENDER_CANVAS = "renderCanvas";
  Gg.RENDER_DOM = "renderDOM";
  Gg.RENDER_OPENGL = "renderOpenGL";
  Sj.SECURITY_ERROR = "securityError";
  ae.TOUCH_BEGIN = "touchBegin";
  ae.TOUCH_END = "touchEnd";
  ae.TOUCH_MOVE = "touchMove";
  ae.TOUCH_OUT = "touchOut";
  ae.TOUCH_OVER = "touchOver";
  ae.TOUCH_ROLL_OUT = "touchRollOut";
  ae.TOUCH_ROLL_OVER = "touchRollOver";
  ae.TOUCH_TAP = "touchTap";
  Ij.UNCAUGHT_ERROR = "uncaughtError";
  Ag.__blurShader = new no();
  Vf.__colorMatrixShader = new oo();
  tf.__glowShader = new po();
  bl.AXIS_ANGLE = 0;
  bl.EULER_ANGLES = 1;
  bl.QUATERNION = 2;
  Pd.MAX_ACTIVE_CHANNELS = 32;
  Pd.__soundChannels = [];
  Pd.__soundTransform = new Yf();
  ro.CONNECT_SUCCESS = "NetConnection.Connect.Success";
  od.defaultObjectEncoding = 10;
  so.FLUSHED = 0;
  so.PENDING = 1;
  cl.BINARY = 0;
  cl.TEXT = 1;
  cl.VARIABLES = 2;
  gi.followRedirects = !0;
  gi.idleTimeout = 0;
  gi.manageCookies = !1;
  Hj.currentDomain = new Hj(null);
  rc.avHardwareDisable = !0;
  rc.hasAccessibility = !1;
  rc.hasAudio = !0;
  rc.hasAudioEncoder = !1;
  rc.hasEmbeddedVideo = !1;
  rc.hasIME = !1;
  rc.hasMP3 = !1;
  rc.hasPrinting = !0;
  rc.hasScreenBroadcast = !1;
  rc.hasScreenPlayback = !1;
  rc.hasStreamingAudio = !1;
  rc.hasStreamingVideo = !1;
  rc.hasTLS = !0;
  rc.hasVideoEncoder = !0;
  rc.isDebugger = !0;
  rc.isEmbeddedInAcrobat = !1;
  rc.localFileReadDisable = !0;
  rc.maxLevelIDC = 0;
  rc.playerType = "PlugIn";
  rc.screenColor = "color";
  rc.serverString = "";
  rc.supports32BitProcesses = !1;
  rc.supports64BitProcesses = !1;
  rc.touchscreenType = 0;
  rc.__standardDensities = [120, 160, 240, 320, 480, 640, 800, 960];
  to.currentDomain = new to();
  Kg.useCodePage = !1;
  dl.FINGER = 0;
  dl.NONE = 1;
  dl.STYLUS = 2;
  uo.ADVANCED = 0;
  uo.NORMAL = 1;
  xc.__fontByName = new la();
  xc.__registeredFonts = [];
  Tj.BOLD = 0;
  Tj.BOLD_ITALIC = 1;
  Tj.ITALIC = 2;
  Tj.REGULAR = 3;
  el.DEVICE = 0;
  el.EMBEDDED = 1;
  el.EMBEDDED_CFF = 2;
  fl.NONE = 0;
  fl.PIXEL = 1;
  fl.SUBPIXEL = 2;
  De.__missingFontWarning = new la();
  Uj.CENTER = 0;
  Uj.LEFT = 1;
  Uj.NONE = 2;
  Uj.RIGHT = 3;
  vo.DYNAMIC = 0;
  vo.INPUT = 1;
  wh.CENTER = 0;
  wh.END = 1;
  wh.JUSTIFY = 2;
  wh.LEFT = 3;
  wh.RIGHT = 4;
  wh.START = 5;
  Tb.isSupported = !0;
  Tb.numDevices = 0;
  Tb.__deviceList = [];
  Tb.__instances = [];
  Tb.__devices = new qd();
  wo.MAX_BUFFER_SIZE = 32e3;
  ua.NUMBER_0 = 48;
  ua.NUMBER_1 = 49;
  ua.NUMBER_2 = 50;
  ua.NUMBER_3 = 51;
  ua.NUMBER_4 = 52;
  ua.NUMBER_5 = 53;
  ua.NUMBER_6 = 54;
  ua.NUMBER_7 = 55;
  ua.NUMBER_8 = 56;
  ua.NUMBER_9 = 57;
  ua.A = 65;
  ua.B = 66;
  ua.C = 67;
  ua.D = 68;
  ua.E = 69;
  ua.F = 70;
  ua.G = 71;
  ua.H = 72;
  ua.I = 73;
  ua.J = 74;
  ua.K = 75;
  ua.L = 76;
  ua.M = 77;
  ua.N = 78;
  ua.O = 79;
  ua.P = 80;
  ua.Q = 81;
  ua.R = 82;
  ua.S = 83;
  ua.T = 84;
  ua.U = 85;
  ua.V = 86;
  ua.W = 87;
  ua.X = 88;
  ua.Y = 89;
  ua.Z = 90;
  ua.NUMPAD_0 = 96;
  ua.NUMPAD_1 = 97;
  ua.NUMPAD_2 = 98;
  ua.NUMPAD_3 = 99;
  ua.NUMPAD_4 = 100;
  ua.NUMPAD_5 = 101;
  ua.NUMPAD_6 = 102;
  ua.NUMPAD_7 = 103;
  ua.NUMPAD_8 = 104;
  ua.NUMPAD_9 = 105;
  ua.NUMPAD_MULTIPLY = 106;
  ua.NUMPAD_ADD = 107;
  ua.NUMPAD_ENTER = 108;
  ua.NUMPAD_SUBTRACT = 109;
  ua.NUMPAD_DECIMAL = 110;
  ua.NUMPAD_DIVIDE = 111;
  ua.F1 = 112;
  ua.F2 = 113;
  ua.F3 = 114;
  ua.F4 = 115;
  ua.F5 = 116;
  ua.F6 = 117;
  ua.F7 = 118;
  ua.F8 = 119;
  ua.F9 = 120;
  ua.F10 = 121;
  ua.F11 = 122;
  ua.F12 = 123;
  ua.F13 = 124;
  ua.F14 = 125;
  ua.F15 = 126;
  ua.BACKSPACE = 8;
  ua.TAB = 9;
  ua.ALTERNATE = 18;
  ua.ENTER = 13;
  ua.COMMAND = 15;
  ua.SHIFT = 16;
  ua.CONTROL = 17;
  ua.BREAK = 19;
  ua.CAPS_LOCK = 20;
  ua.NUMPAD = 21;
  ua.ESCAPE = 27;
  ua.SPACE = 32;
  ua.PAGE_UP = 33;
  ua.PAGE_DOWN = 34;
  ua.END = 35;
  ua.HOME = 36;
  ua.LEFT = 37;
  ua.RIGHT = 39;
  ua.UP = 38;
  ua.DOWN = 40;
  ua.INSERT = 45;
  ua.DELETE = 46;
  ua.NUMLOCK = 144;
  ua.SEMICOLON = 186;
  ua.EQUAL = 187;
  ua.COMMA = 188;
  ua.MINUS = 189;
  ua.PERIOD = 190;
  ua.SLASH = 191;
  ua.BACKQUOTE = 192;
  ua.LEFTBRACKET = 219;
  ua.BACKSLASH = 220;
  ua.RIGHTBRACKET = 221;
  ua.QUOTE = 222;
  oe.supportsCursor = !0;
  oe.supportsNativeCursor = !0;
  oe.__cursor = "auto";
  We.ARROW = "arrow";
  We.AUTO = "auto";
  We.BUTTON = "button";
  We.HAND = "hand";
  We.IBEAM = "ibeam";
  We.__CROSSHAIR = "crosshair";
  We.__CUSTOM = "custom";
  We.__MOVE = "move";
  We.__RESIZE_NESW = "resize_nesw";
  We.__RESIZE_NS = "resize_ns";
  We.__RESIZE_NWSE = "resize_nwse";
  We.__RESIZE_WE = "resize_we";
  We.__WAIT = "wait";
  We.__WAIT_ARROW = "waitarrow";
  gl.GESTURE = 0;
  gl.NONE = 1;
  gl.TOUCH_POINT = 2;
  L.OPMAP = new la();
  L.REGMAP = new la();
  L.SAMPLEMAP = new la();
  L.MAX_NESTING = 4;
  L.MAX_OPCODES = 4096;
  L.FRAGMENT = "fragment";
  L.VERTEX = "vertex";
  L.SAMPLER_TYPE_SHIFT = 8;
  L.SAMPLER_DIM_SHIFT = 12;
  L.SAMPLER_SPECIAL_SHIFT = 16;
  L.SAMPLER_REPEAT_SHIFT = 20;
  L.SAMPLER_MIPMAP_SHIFT = 24;
  L.SAMPLER_FILTER_SHIFT = 28;
  L.REG_WRITE = 1;
  L.REG_READ = 2;
  L.REG_FRAG = 32;
  L.REG_VERT = 64;
  L.OP_SCALAR = 1;
  L.OP_SPECIAL_TEX = 8;
  L.OP_SPECIAL_MATRIX = 16;
  L.OP_FRAG_ONLY = 32;
  L.OP_VERT_ONLY = 64;
  L.OP_NO_DEST = 128;
  L.OP_VERSION2 = 256;
  L.OP_INCNEST = 512;
  L.OP_DECNEST = 1024;
  L.MOV = "mov";
  L.ADD = "add";
  L.SUB = "sub";
  L.MUL = "mul";
  L.DIV = "div";
  L.RCP = "rcp";
  L.MIN = "min";
  L.MAX = "max";
  L.FRC = "frc";
  L.SQT = "sqt";
  L.RSQ = "rsq";
  L.POW = "pow";
  L.LOG = "log";
  L.EXP = "exp";
  L.NRM = "nrm";
  L.SIN = "sin";
  L.COS = "cos";
  L.CRS = "crs";
  L.DP3 = "dp3";
  L.DP4 = "dp4";
  L.ABS = "abs";
  L.NEG = "neg";
  L.SAT = "sat";
  L.M33 = "m33";
  L.M44 = "m44";
  L.M34 = "m34";
  L.DDX = "ddx";
  L.DDY = "ddy";
  L.IFE = "ife";
  L.INE = "ine";
  L.IFG = "ifg";
  L.IFL = "ifl";
  L.IEG = "ieg";
  L.IEL = "iel";
  L.ELS = "els";
  L.EIF = "eif";
  L.TED = "ted";
  L.KIL = "kil";
  L.TEX = "tex";
  L.SGE = "sge";
  L.SLT = "slt";
  L.SGN = "sgn";
  L.SEQ = "seq";
  L.SNE = "sne";
  L.VA = "va";
  L.VC = "vc";
  L.VT = "vt";
  L.VO = "vo";
  L.VI = "vi";
  L.FC = "fc";
  L.FT = "ft";
  L.FS = "fs";
  L.FO = "fo";
  L.FD = "fd";
  L.IID = "iid";
  L.D2 = "2d";
  L.D3 = "3d";
  L.CUBE = "cube";
  L.MIPNEAREST = "mipnearest";
  L.MIPLINEAR = "miplinear";
  L.MIPNONE = "mipnone";
  L.NOMIP = "nomip";
  L.NEAREST = "nearest";
  L.LINEAR = "linear";
  L.ANISOTROPIC2X = "anisotropic2x";
  L.ANISOTROPIC4X = "anisotropic4x";
  L.ANISOTROPIC8X = "anisotropic8x";
  L.ANISOTROPIC16X = "anisotropic16x";
  L.CENTROID = "centroid";
  L.SINGLE = "single";
  L.IGNORESAMPLER = "ignoresampler";
  L.REPEAT = "repeat";
  L.WRAP = "wrap";
  L.CLAMP = "clamp";
  L.REPEAT_U_CLAMP_V = "repeat_u_clamp_v";
  L.CLAMP_U_REPEAT_V = "clamp_u_repeat_v";
  L.RGBA = "rgba";
  L.COMPRESSED = "compressed";
  L.COMPRESSEDALPHA = "compressedalpha";
  L.DXT1 = "dxt1";
  L.DXT5 = "dxt5";
  L.VIDEO = "video";
  L.initialized = !1;
  oa.cache = new xo();
  oa.dispatcher = new db();
  Na.defaultObjectEncoding = 10;
  Na.__bytePointer = new eg(null, 0);
  hl.DEFLATE = 0;
  hl.LZMA = 1;
  hl.ZLIB = 2;
  Ji.BIG_ENDIAN = 0;
  Ji.LITTLE_ENDIAN = 1;
  vb.PI = 3.141592653589793;
  vb.PI_H = 1.5707963267948966;
  vb.LN_2 = 0.6931471805599453;
  vb.LN_2_10 = 6.931471805599453;
  vb.overshoot = 1.70158;
  vb.amplitude = 1;
  vb.period = 3e-4;
  yc.main();
})(
  "undefined" != typeof exports
    ? exports
    : "undefined" != typeof window
    ? window
    : "undefined" != typeof self
    ? self
    : this,
  "undefined" != typeof window
    ? window
    : "undefined" != typeof global
    ? global
    : "undefined" != typeof self
    ? self
    : this
);
//# sourceMappingURL=CocoMonkey.js.map
